
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002c4c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000171a4  0802c678  0802c678  0003c678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00003cf6  0804381c  0804381c  0005381c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000024c  08047514  08047514  00057514  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000680  08047760  08047760  00057760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000850f0  08047de0  08047de0  00057de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080cced0  080cced0  000e0168  2**0
                  CONTENTS
  8 .ARM          00000008  080cced0  080cced0  000dced0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080cced8  080cced8  000e0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080cced8  080cced8  000dced8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  080cceec  080cceec  000dceec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080ccef0  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000142bc  20000168  080cd058  000e0168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  20014424  080cd058  000e4424  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  000e0198  2**0
                  CONTENTS, READONLY
 18 .debug_line   00091983  00000000  00000000  000e02ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00171c4d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   0022543c  00000000  00000000  00171ce0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0002c42f  00000000  00000000  0039711c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004320  00000000  00000000  003c3550  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f471  00000000  00000000  003c7870  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007d12  00000000  00000000  004e6ce1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00031152  00000000  00000000  004ee9f3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003a8cc  00000000  00000000  0051fb45  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000c74c  00000000  00000000  0055a414  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  00566b60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00569ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802c660 	.word	0x0802c660

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802c660 	.word	0x0802c660

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f009 f8e1 	bl	800983c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f02b fa75 	bl	802bb68 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fa5f 	bl	8000b40 <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	080ccef0 	.word	0x080ccef0
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	20014424 	.word	0x20014424

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <GetSector>:

static uint32_t GetSector(uint32_t Address)
{
  uint32_t sector = 0;

  if((Address < 0x08003FFF) && (Address >= 0x08000000))
 80006a0:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 80006a4:	f643 72fe 	movw	r2, #16382	; 0x3ffe
 80006a8:	4293      	cmp	r3, r2
 80006aa:	d905      	bls.n	80006b8 <GetSector+0x18>
  {
    sector = FLASH_SECTOR_0;
  }
  else if((Address < 0x08007FFF) && (Address >= 0x08004000))
 80006ac:	f5a3 4180 	sub.w	r1, r3, #16384	; 0x4000
 80006b0:	4291      	cmp	r1, r2
 80006b2:	d803      	bhi.n	80006bc <GetSector+0x1c>
  {
    sector = FLASH_SECTOR_1;
 80006b4:	2001      	movs	r0, #1
 80006b6:	4770      	bx	lr
    sector = FLASH_SECTOR_0;
 80006b8:	2000      	movs	r0, #0
 80006ba:	4770      	bx	lr
  }
  else if((Address < 0x0800BFFF) && (Address >= 0x08008000))
 80006bc:	f5a3 4100 	sub.w	r1, r3, #32768	; 0x8000
 80006c0:	4291      	cmp	r1, r2
 80006c2:	d960      	bls.n	8000786 <GetSector+0xe6>
  {
    sector = FLASH_SECTOR_2;
  }
  else if((Address < 0x0800FFFF) && (Address >= 0x0800C000))
 80006c4:	f5a3 4340 	sub.w	r3, r3, #49152	; 0xc000
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d95e      	bls.n	800078a <GetSector+0xea>
  {
    sector = FLASH_SECTOR_3;
  }
  else if((Address < 0x0801FFFF) && (Address >= 0x08010000))
 80006cc:	f100 4377 	add.w	r3, r0, #4143972352	; 0xf7000000
 80006d0:	f503 017f 	add.w	r1, r3, #16711680	; 0xff0000
 80006d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80006d8:	4291      	cmp	r1, r2
 80006da:	d95a      	bls.n	8000792 <GetSector+0xf2>
  {
    sector = FLASH_SECTOR_4;
  }
  else if((Address < 0x0803FFFF) && (Address >= 0x08020000))
 80006dc:	f502 3280 	add.w	r2, r2, #65536	; 0x10000
 80006e0:	f503 017e 	add.w	r1, r3, #16646144	; 0xfe0000
 80006e4:	4291      	cmp	r1, r2
 80006e6:	d952      	bls.n	800078e <GetSector+0xee>
  {
    sector = FLASH_SECTOR_5;
  }
  else if((Address < 0x0805FFFF) && (Address >= 0x08040000))
 80006e8:	f503 017c 	add.w	r1, r3, #16515072	; 0xfc0000
 80006ec:	4291      	cmp	r1, r2
 80006ee:	d952      	bls.n	8000796 <GetSector+0xf6>
  {
    sector = FLASH_SECTOR_6;
  }
  else if((Address < 0x0807FFFF) && (Address >= 0x08060000))
 80006f0:	f503 017a 	add.w	r1, r3, #16384000	; 0xfa0000
 80006f4:	4291      	cmp	r1, r2
 80006f6:	d950      	bls.n	800079a <GetSector+0xfa>
  {
    sector = FLASH_SECTOR_7;
  }
  else if((Address < 0x0809FFFF) && (Address >= 0x08080000))
 80006f8:	f503 0178 	add.w	r1, r3, #16252928	; 0xf80000
 80006fc:	4291      	cmp	r1, r2
 80006fe:	d94e      	bls.n	800079e <GetSector+0xfe>
  {
    sector = FLASH_SECTOR_8;
  }
  else if((Address < 0x080BFFFF) && (Address >= 0x080A0000))
 8000700:	f503 0176 	add.w	r1, r3, #16121856	; 0xf60000
 8000704:	4291      	cmp	r1, r2
 8000706:	d94c      	bls.n	80007a2 <GetSector+0x102>
  {
    sector = FLASH_SECTOR_9;
  }
  else if((Address < 0x080DFFFF) && (Address >= 0x080C0000))
 8000708:	f503 0174 	add.w	r1, r3, #15990784	; 0xf40000
 800070c:	4291      	cmp	r1, r2
 800070e:	d94a      	bls.n	80007a6 <GetSector+0x106>
  {
    sector = FLASH_SECTOR_10;
  }
  else if((Address < 0x080FFFFF) && (Address >= 0x080E0000))
 8000710:	f503 0172 	add.w	r1, r3, #15859712	; 0xf20000
 8000714:	4291      	cmp	r1, r2
 8000716:	d948      	bls.n	80007aa <GetSector+0x10a>
  {
    sector = FLASH_SECTOR_11;
  }
  else if((Address < 0x08103FFF) && (Address >= 0x08100000))
 8000718:	f1a0 6001 	sub.w	r0, r0, #135266304	; 0x8100000
 800071c:	f643 71fe 	movw	r1, #16382	; 0x3ffe
 8000720:	4288      	cmp	r0, r1
 8000722:	d944      	bls.n	80007ae <GetSector+0x10e>
  {
    sector = FLASH_SECTOR_12;
  }
  else if((Address < 0x08107FFF) && (Address >= 0x08104000))
 8000724:	f5a0 4c80 	sub.w	ip, r0, #16384	; 0x4000
 8000728:	458c      	cmp	ip, r1
 800072a:	d942      	bls.n	80007b2 <GetSector+0x112>
  {
    sector = FLASH_SECTOR_13;
  }
  else if((Address < 0x0810BFFF) && (Address >= 0x08108000))
 800072c:	f5a0 4c00 	sub.w	ip, r0, #32768	; 0x8000
 8000730:	458c      	cmp	ip, r1
 8000732:	d940      	bls.n	80007b6 <GetSector+0x116>
  {
    sector = FLASH_SECTOR_14;
  }
  else if((Address < 0x0810FFFF) && (Address >= 0x0810C000))
 8000734:	f5a0 4040 	sub.w	r0, r0, #49152	; 0xc000
 8000738:	4288      	cmp	r0, r1
 800073a:	d93e      	bls.n	80007ba <GetSector+0x11a>
  {
    sector = FLASH_SECTOR_15;
  }
  else if((Address < 0x0811FFFF) && (Address >= 0x08110000))
 800073c:	f503 006f 	add.w	r0, r3, #15663104	; 0xef0000
 8000740:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8000744:	4288      	cmp	r0, r1
 8000746:	d93a      	bls.n	80007be <GetSector+0x11e>
  {
    sector = FLASH_SECTOR_16;
  }
  else if((Address < 0x0813FFFF) && (Address >= 0x08120000))
 8000748:	f503 016e 	add.w	r1, r3, #15597568	; 0xee0000
 800074c:	4291      	cmp	r1, r2
 800074e:	d938      	bls.n	80007c2 <GetSector+0x122>
  {
    sector = FLASH_SECTOR_17;
  }
  else if((Address < 0x0815FFFF) && (Address >= 0x08140000))
 8000750:	f503 016c 	add.w	r1, r3, #15466496	; 0xec0000
 8000754:	4291      	cmp	r1, r2
 8000756:	d938      	bls.n	80007ca <GetSector+0x12a>
  {
    sector = FLASH_SECTOR_18;
  }
  else if((Address < 0x0817FFFF) && (Address >= 0x08160000))
 8000758:	f503 016a 	add.w	r1, r3, #15335424	; 0xea0000
 800075c:	4291      	cmp	r1, r2
 800075e:	d932      	bls.n	80007c6 <GetSector+0x126>
  {
    sector = FLASH_SECTOR_19;
  }
  else if((Address < 0x0819FFFF) && (Address >= 0x08180000))
 8000760:	f503 0168 	add.w	r1, r3, #15204352	; 0xe80000
 8000764:	4291      	cmp	r1, r2
 8000766:	d936      	bls.n	80007d6 <GetSector+0x136>
  {
    sector = FLASH_SECTOR_20;
  }
  else if((Address < 0x081BFFFF) && (Address >= 0x081A0000))
 8000768:	f503 0166 	add.w	r1, r3, #15073280	; 0xe60000
 800076c:	4291      	cmp	r1, r2
 800076e:	d930      	bls.n	80007d2 <GetSector+0x132>
  {
    sector = FLASH_SECTOR_21;
  }
  else if((Address < 0x081DFFFF) && (Address >= 0x081C0000))
 8000770:	f503 0164 	add.w	r1, r3, #14942208	; 0xe40000
 8000774:	4291      	cmp	r1, r2
 8000776:	d92a      	bls.n	80007ce <GetSector+0x12e>
  {
    sector = FLASH_SECTOR_22;
  }
  else if((Address < 0x081FFFFF) && (Address >= 0x081E0000))
 8000778:	f503 0362 	add.w	r3, r3, #14811136	; 0xe20000
  {
    sector = FLASH_SECTOR_23;
 800077c:	4293      	cmp	r3, r2
 800077e:	bf94      	ite	ls
 8000780:	2017      	movls	r0, #23
 8000782:	2000      	movhi	r0, #0
 8000784:	4770      	bx	lr
    sector = FLASH_SECTOR_2;
 8000786:	2002      	movs	r0, #2
 8000788:	4770      	bx	lr
    sector = FLASH_SECTOR_3;
 800078a:	2003      	movs	r0, #3
 800078c:	4770      	bx	lr
    sector = FLASH_SECTOR_5;
 800078e:	2005      	movs	r0, #5
 8000790:	4770      	bx	lr
    sector = FLASH_SECTOR_4;
 8000792:	2004      	movs	r0, #4
 8000794:	4770      	bx	lr
    sector = FLASH_SECTOR_6;
 8000796:	2006      	movs	r0, #6
 8000798:	4770      	bx	lr
    sector = FLASH_SECTOR_7;
 800079a:	2007      	movs	r0, #7
 800079c:	4770      	bx	lr
    sector = FLASH_SECTOR_8;
 800079e:	2008      	movs	r0, #8
 80007a0:	4770      	bx	lr
    sector = FLASH_SECTOR_9;
 80007a2:	2009      	movs	r0, #9
 80007a4:	4770      	bx	lr
    sector = FLASH_SECTOR_10;
 80007a6:	200a      	movs	r0, #10
 80007a8:	4770      	bx	lr
    sector = FLASH_SECTOR_11;
 80007aa:	200b      	movs	r0, #11
 80007ac:	4770      	bx	lr
    sector = FLASH_SECTOR_12;
 80007ae:	200c      	movs	r0, #12
 80007b0:	4770      	bx	lr
    sector = FLASH_SECTOR_13;
 80007b2:	200d      	movs	r0, #13
 80007b4:	4770      	bx	lr
    sector = FLASH_SECTOR_14;
 80007b6:	200e      	movs	r0, #14
 80007b8:	4770      	bx	lr
    sector = FLASH_SECTOR_15;
 80007ba:	200f      	movs	r0, #15
 80007bc:	4770      	bx	lr
    sector = FLASH_SECTOR_16;
 80007be:	2010      	movs	r0, #16
 80007c0:	4770      	bx	lr
    sector = FLASH_SECTOR_17;
 80007c2:	2011      	movs	r0, #17
 80007c4:	4770      	bx	lr
    sector = FLASH_SECTOR_19;
 80007c6:	2013      	movs	r0, #19
 80007c8:	4770      	bx	lr
    sector = FLASH_SECTOR_18;
 80007ca:	2012      	movs	r0, #18
 80007cc:	4770      	bx	lr
    sector = FLASH_SECTOR_22;
 80007ce:	2016      	movs	r0, #22
  }
  return sector;
}
 80007d0:	4770      	bx	lr
    sector = FLASH_SECTOR_21;
 80007d2:	2015      	movs	r0, #21
 80007d4:	4770      	bx	lr
    sector = FLASH_SECTOR_20;
 80007d6:	2014      	movs	r0, #20
 80007d8:	4770      	bx	lr
 80007da:	bf00      	nop

080007dc <Flash_Write_Data>:
   return float_variable;
}


uint32_t Flash_Write_Data (uint32_t StartSectorAddress, uint32_t *Data, uint16_t numberofwords)
{
 80007dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80007de:	4607      	mov	r7, r0
 80007e0:	b083      	sub	sp, #12
 80007e2:	4616      	mov	r6, r2
 80007e4:	460d      	mov	r5, r1
	uint32_t SECTORError;
	int sofar=0;


	 /* Unlock the Flash to enable the flash control register access *************/
	  HAL_FLASH_Unlock();
 80007e6:	f009 f9e7 	bl	8009bb8 <HAL_FLASH_Unlock>

	  /* Erase the user Flash area */

	  /* Get the number of sector to erase from 1st sector */

	  uint32_t StartSector = GetSector(StartSectorAddress);
 80007ea:	4638      	mov	r0, r7
 80007ec:	f7ff ff58 	bl	80006a0 <GetSector>
 80007f0:	4604      	mov	r4, r0
	  uint32_t EndSectorAddress = StartSectorAddress + numberofwords*4;
	  uint32_t EndSector = GetSector(EndSectorAddress);
 80007f2:	eb07 0086 	add.w	r0, r7, r6, lsl #2
 80007f6:	f7ff ff53 	bl	80006a0 <GetSector>

	  /* Fill EraseInit structure*/
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
	  EraseInitStruct.Sector        = StartSector;
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fa:	1c43      	adds	r3, r0, #1
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 80007fc:	4813      	ldr	r0, [pc, #76]	; (800084c <Flash_Write_Data+0x70>)
	  EraseInitStruct.NbSectors     = (EndSector - StartSector) + 1;
 80007fe:	1b1b      	subs	r3, r3, r4
 8000800:	e9c0 4302 	strd	r4, r3, [r0, #8]
	  EraseInitStruct.TypeErase     = FLASH_TYPEERASE_SECTORS;
 8000804:	2300      	movs	r3, #0
 8000806:	6003      	str	r3, [r0, #0]

	  /* Note: If an erase operation in Flash memory also concerns data in the data or instruction cache,
	     you have to make sure that these data are rewritten before they are accessed during code
	     execution. If this cannot be done safely, it is recommended to flush the caches by setting the
	     DCRST and ICRST bits in the FLASH_CR register. */
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 8000808:	a901      	add	r1, sp, #4
	  EraseInitStruct.VoltageRange  = FLASH_VOLTAGE_RANGE_3;
 800080a:	2302      	movs	r3, #2
 800080c:	6103      	str	r3, [r0, #16]
	  if (HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError) != HAL_OK)
 800080e:	f009 fa51 	bl	8009cb4 <HAL_FLASHEx_Erase>
 8000812:	b988      	cbnz	r0, 8000838 <Flash_Write_Data+0x5c>
	  }

	  /* Program the user Flash area word by word
	    (area defined by FLASH_USER_START_ADDR and FLASH_USER_END_ADDR) ***********/

	   while (sofar<numberofwords)
 8000814:	b1a6      	cbz	r6, 8000840 <Flash_Write_Data+0x64>
 8000816:	1b7f      	subs	r7, r7, r5
 8000818:	4604      	mov	r4, r0
 800081a:	3d04      	subs	r5, #4
 800081c:	3704      	adds	r7, #4
 800081e:	e001      	b.n	8000824 <Flash_Write_Data+0x48>
 8000820:	42a6      	cmp	r6, r4
 8000822:	d00d      	beq.n	8000840 <Flash_Write_Data+0x64>
 8000824:	1979      	adds	r1, r7, r5
	   {
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000826:	2300      	movs	r3, #0
 8000828:	f855 2f04 	ldr.w	r2, [r5, #4]!
 800082c:	2002      	movs	r0, #2
	     {
	    	 StartSectorAddress += 4;  // use StartPageAddress += 2 for half word and 8 for double word
	    	 sofar++;
 800082e:	3401      	adds	r4, #1
	     if (HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, StartSectorAddress, Data[sofar]) == HAL_OK)
 8000830:	f009 f920 	bl	8009a74 <HAL_FLASH_Program>
 8000834:	2800      	cmp	r0, #0
 8000836:	d0f3      	beq.n	8000820 <Flash_Write_Data+0x44>
	     }
	     else
	     {
	       /* Error occurred while writing data in Flash memory*/
	    	 return HAL_FLASH_GetError ();
 8000838:	f009 f9dc 	bl	8009bf4 <HAL_FLASH_GetError>
	  /* Lock the Flash to disable the flash control register access (recommended
	     to protect the FLASH memory against possible unwanted operation) *********/
	  HAL_FLASH_Lock();

	   return 0;
}
 800083c:	b003      	add	sp, #12
 800083e:	bdf0      	pop	{r4, r5, r6, r7, pc}
	  HAL_FLASH_Lock();
 8000840:	f009 f9ce 	bl	8009be0 <HAL_FLASH_Lock>
	   return 0;
 8000844:	2000      	movs	r0, #0
}
 8000846:	b003      	add	sp, #12
 8000848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800084a:	bf00      	nop
 800084c:	20000184 	.word	0x20000184

08000850 <Flash_Read_Data>:


void Flash_Read_Data (uint32_t StartSectorAddress, uint32_t *RxBuf, uint16_t numberofwords)
{
 8000850:	460b      	mov	r3, r1
 8000852:	3201      	adds	r2, #1
 8000854:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8000858:	1ac0      	subs	r0, r0, r3
	while (1)
	{

		*RxBuf = *(__IO uint32_t *)StartSectorAddress;
 800085a:	581a      	ldr	r2, [r3, r0]
 800085c:	f843 2b04 	str.w	r2, [r3], #4
		StartSectorAddress += 4;
		RxBuf++;
		if (!(numberofwords--)) break;
 8000860:	428b      	cmp	r3, r1
 8000862:	d1fa      	bne.n	800085a <Flash_Read_Data+0xa>
	}
}
 8000864:	4770      	bx	lr
 8000866:	bf00      	nop

08000868 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8000868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800086c:	ed2d 8b02 	vpush	{d8}
 8000870:	b091      	sub	sp, #68	; 0x44
 8000872:	af00      	add	r7, sp, #0
 8000874:	4605      	mov	r5, r0
 8000876:	4688      	mov	r8, r1
 8000878:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 800087a:	f000 fe65 	bl	8001548 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 800087e:	b203      	sxth	r3, r0
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	3307      	adds	r3, #7
 8000888:	f023 0307 	bic.w	r3, r3, #7
 800088c:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 8000890:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 8000892:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 8000894:	b1f0      	cbz	r0, 80008d4 <calculate_freq_and_signalstrength+0x6c>
 8000896:	3d01      	subs	r5, #1
 8000898:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089a:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 800089c:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 800089e:	f000 fe51 	bl	8001544 <MEAS_get_num_of_chan>
 80008a2:	fb06 5000 	mla	r0, r6, r0, r5
 80008a6:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80008aa:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ae:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b0:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80008b4:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80008b6:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008ba:	d1f0      	bne.n	800089e <calculate_freq_and_signalstrength+0x36>
 80008bc:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80008be:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 800096c <calculate_freq_and_signalstrength+0x104>
 80008c2:	4456      	add	r6, sl
 80008c4:	edd9 7a00 	vldr	s15, [r9]
 80008c8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80008cc:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80008d0:	454e      	cmp	r6, r9
 80008d2:	d1f7      	bne.n	80008c4 <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80008d4:	68bb      	ldr	r3, [r7, #8]
 80008d6:	466a      	mov	r2, sp
 80008d8:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 80008dc:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008de:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008e2:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 80008e4:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008e6:	b2a1      	uxth	r1, r4
 80008e8:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 80008ec:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 80008f0:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 80008f4:	f028 ff60 	bl	80297b8 <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 80008f8:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 80008fa:	2300      	movs	r3, #0
 80008fc:	4651      	mov	r1, sl
 80008fe:	f107 0028 	add.w	r0, r7, #40	; 0x28
 8000902:	462a      	mov	r2, r5
 8000904:	f028 ffdc 	bl	80298c0 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8000908:	4622      	mov	r2, r4
 800090a:	4629      	mov	r1, r5
 800090c:	4628      	mov	r0, r5
 800090e:	f029 fc45 	bl	802a19c <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8000912:	f000 fe1b 	bl	800154c <MEAS_get_samp_freq>
 8000916:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800091a:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 800091e:	edd9 7a00 	vldr	s15, [r9]
 8000922:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8000926:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800092a:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800092e:	f107 021c 	add.w	r2, r7, #28
 8000932:	4621      	mov	r1, r4
 8000934:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8000936:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800093a:	f028 fed5 	bl	80296e8 <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800093e:	edd7 7a06 	vldr	s15, [r7, #24]
 8000942:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 8000946:	f000 fe01 	bl	800154c <MEAS_get_samp_freq>
 800094a:	ee07 0a90 	vmov	s15, r0
 800094e:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 8000952:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8000956:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 800095a:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800095c:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8000960:	46bd      	mov	sp, r7
 8000962:	ecbd 8b02 	vpop	{d8}
 8000966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800096a:	bf00      	nop
 800096c:	44fff000 	.word	0x44fff000

08000970 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8000970:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8000972:	2064      	movs	r0, #100	; 0x64
 8000974:	f00c fee8 	bl	800d748 <osDelay>
  for(;;)
 8000978:	e7fb      	b.n	8000972 <StartDefaultTask+0x2>
 800097a:	bf00      	nop

0800097c <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 800097c:	b580      	push	{r7, lr}
 800097e:	4c10      	ldr	r4, [pc, #64]	; (80009c0 <StartTimeoutTask+0x44>)
 8000980:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80009cc <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 8000984:	4f0f      	ldr	r7, [pc, #60]	; (80009c4 <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 8000986:	4e10      	ldr	r6, [pc, #64]	; (80009c8 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 8000988:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 800098a:	2300      	movs	r3, #0
 800098c:	461a      	mov	r2, r3
 800098e:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 8000990:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000992:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 8000996:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 8000998:	f00c ffd2 	bl	800d940 <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 800099c:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 800099e:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a0:	4638      	mov	r0, r7
 80009a2:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80009a4:	b912      	cbnz	r2, 80009ac <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80009a6:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80009a8:	f009 fb58 	bl	800a05c <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80009ac:	4630      	mov	r0, r6
 80009ae:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80009b2:	f009 fb57 	bl	800a064 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80009b6:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80009ba:	f00c fec5 	bl	800d748 <osDelay>
	  sleep_timeout_value--;
 80009be:	e7e3      	b.n	8000988 <StartTimeoutTask+0xc>
 80009c0:	2000000c 	.word	0x2000000c
 80009c4:	40021000 	.word	0x40021000
 80009c8:	40021800 	.word	0x40021800
 80009cc:	200001d0 	.word	0x200001d0

080009d0 <updateGUI_test>:
	return sleep_timeout_value;
 80009d0:	4b01      	ldr	r3, [pc, #4]	; (80009d8 <updateGUI_test+0x8>)
}
 80009d2:	6818      	ldr	r0, [r3, #0]
 80009d4:	4770      	bx	lr
 80009d6:	bf00      	nop
 80009d8:	2000000c 	.word	0x2000000c

080009dc <gyro_disable>:
{
 80009dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009de:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e0:	4e1f      	ldr	r6, [pc, #124]	; (8000a60 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009e2:	4d20      	ldr	r5, [pc, #128]	; (8000a64 <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 80009e4:	4c20      	ldr	r4, [pc, #128]	; (8000a68 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80009e6:	2700      	movs	r7, #0
 80009e8:	9700      	str	r7, [sp, #0]
 80009ea:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009ec:	f043 0304 	orr.w	r3, r3, #4
 80009f0:	6333      	str	r3, [r6, #48]	; 0x30
 80009f2:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80009f4:	f003 0304 	and.w	r3, r3, #4
 80009f8:	9300      	str	r3, [sp, #0]
 80009fa:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 80009fc:	682b      	ldr	r3, [r5, #0]
 80009fe:	f023 030c 	bic.w	r3, r3, #12
 8000a02:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 8000a04:	682b      	ldr	r3, [r5, #0]
 8000a06:	f043 0304 	orr.w	r3, r3, #4
 8000a0a:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8000a0c:	69ab      	ldr	r3, [r5, #24]
 8000a0e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000a12:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 8000a14:	200a      	movs	r0, #10
 8000a16:	f008 ff4b 	bl	80098b0 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8000a1a:	682b      	ldr	r3, [r5, #0]
 8000a1c:	f043 030c 	orr.w	r3, r3, #12
 8000a20:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8000a22:	9701      	str	r7, [sp, #4]
 8000a24:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a26:	f043 0320 	orr.w	r3, r3, #32
 8000a2a:	6333      	str	r3, [r6, #48]	; 0x30
 8000a2c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8000a2e:	f003 0320 	and.w	r3, r3, #32
 8000a32:	9301      	str	r3, [sp, #4]
 8000a34:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 8000a36:	68a3      	ldr	r3, [r4, #8]
 8000a38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a3c:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8000a3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a40:	f023 030f 	bic.w	r3, r3, #15
 8000a44:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 8000a46:	68e3      	ldr	r3, [r4, #12]
 8000a48:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000a4c:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8000a4e:	200a      	movs	r0, #10
 8000a50:	f008 ff2e 	bl	80098b0 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 8000a54:	6823      	ldr	r3, [r4, #0]
 8000a56:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8000a5a:	6023      	str	r3, [r4, #0]
}
 8000a5c:	b003      	add	sp, #12
 8000a5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a60:	40023800 	.word	0x40023800
 8000a64:	40020800 	.word	0x40020800
 8000a68:	40021400 	.word	0x40021400

08000a6c <setCalibrationFlashValues>:
{
 8000a6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a70:	461c      	mov	r4, r3
	uint32_t Rx_Data[numberofwords];
 8000a72:	009b      	lsls	r3, r3, #2
 8000a74:	3307      	adds	r3, #7
 8000a76:	466d      	mov	r5, sp
 8000a78:	08db      	lsrs	r3, r3, #3
 8000a7a:	eba5 03c3 	sub.w	r3, r5, r3, lsl #3
{
 8000a7e:	af00      	add	r7, sp, #0
	uint32_t Rx_Data[numberofwords];
 8000a80:	469d      	mov	sp, r3
 8000a82:	466d      	mov	r5, sp
{
 8000a84:	4616      	mov	r6, r2
 8000a86:	4681      	mov	r9, r0
 8000a88:	4688      	mov	r8, r1
	Flash_Read_Data(StartSectorAddress, Rx_Data, numberofwords);
 8000a8a:	4622      	mov	r2, r4
 8000a8c:	4629      	mov	r1, r5
 8000a8e:	f7ff fedf 	bl	8000850 <Flash_Read_Data>
	Rx_Data[index] = value;
 8000a92:	f845 8026 	str.w	r8, [r5, r6, lsl #2]
	Flash_Write_Data(StartSectorAddress, data_addr, numberofwords);
 8000a96:	4622      	mov	r2, r4
 8000a98:	4629      	mov	r1, r5
 8000a9a:	4648      	mov	r0, r9
 8000a9c:	f7ff fe9e 	bl	80007dc <Flash_Write_Data>
}
 8000aa0:	46bd      	mov	sp, r7
 8000aa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000aa6:	bf00      	nop

08000aa8 <SystemClock_Config>:
{
 8000aa8:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aaa:	2400      	movs	r4, #0
{
 8000aac:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000aae:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 8000ab2:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ab6:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8000aba:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000abe:	4a1e      	ldr	r2, [pc, #120]	; (8000b38 <SystemClock_Config+0x90>)
 8000ac0:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ac2:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac4:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ac6:	4b1d      	ldr	r3, [pc, #116]	; (8000b3c <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8000ac8:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8000acc:	6411      	str	r1, [r2, #64]	; 0x40
 8000ace:	6c12      	ldr	r2, [r2, #64]	; 0x40
 8000ad0:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 8000ad4:	9201      	str	r2, [sp, #4]
 8000ad6:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ad8:	9402      	str	r4, [sp, #8]
 8000ada:	681a      	ldr	r2, [r3, #0]
 8000adc:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8000ae0:	601a      	str	r2, [r3, #0]
 8000ae2:	681b      	ldr	r3, [r3, #0]
 8000ae4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000ae8:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000aea:	2201      	movs	r2, #1
 8000aec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000af0:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af4:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000af6:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 8000af8:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000afa:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000afe:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b02:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000b06:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b08:	2202      	movs	r2, #2
 8000b0a:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b0c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000b0e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000b12:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b14:	f00b f8e0 	bl	800bcd8 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b18:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b1a:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b1e:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b22:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b26:	a803      	add	r0, sp, #12
 8000b28:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000b2a:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000b2e:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000b30:	f00b faea 	bl	800c108 <HAL_RCC_ClockConfig>
}
 8000b34:	b015      	add	sp, #84	; 0x54
 8000b36:	bd30      	pop	{r4, r5, pc}
 8000b38:	40023800 	.word	0x40023800
 8000b3c:	40007000 	.word	0x40007000

08000b40 <main>:
{
 8000b40:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b44:	2400      	movs	r4, #0
{
 8000b46:	b09d      	sub	sp, #116	; 0x74
  HAL_Init();
 8000b48:	f008 fe86 	bl	8009858 <HAL_Init>
  SystemClock_Config();
 8000b4c:	f7ff ffac 	bl	8000aa8 <SystemClock_Config>
  gyro_disable();
 8000b50:	f7ff ff44 	bl	80009dc <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b54:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000b58:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b5c:	4bbe      	ldr	r3, [pc, #760]	; (8000e58 <main+0x318>)
 8000b5e:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b60:	9413      	str	r4, [sp, #76]	; 0x4c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b62:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000b64:	48bd      	ldr	r0, [pc, #756]	; (8000e5c <main+0x31c>)
  hi2c3.Instance = I2C3;
 8000b66:	4dbe      	ldr	r5, [pc, #760]	; (8000e60 <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000b68:	f041 0110 	orr.w	r1, r1, #16
 8000b6c:	6319      	str	r1, [r3, #48]	; 0x30
 8000b6e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b70:	f001 0110 	and.w	r1, r1, #16
 8000b74:	9100      	str	r1, [sp, #0]
 8000b76:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000b78:	9401      	str	r4, [sp, #4]
 8000b7a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b7c:	f041 0120 	orr.w	r1, r1, #32
 8000b80:	6319      	str	r1, [r3, #48]	; 0x30
 8000b82:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b84:	f001 0120 	and.w	r1, r1, #32
 8000b88:	9101      	str	r1, [sp, #4]
 8000b8a:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000b8c:	9402      	str	r4, [sp, #8]
 8000b8e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b90:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000b94:	6319      	str	r1, [r3, #48]	; 0x30
 8000b96:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000b98:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000b9c:	9102      	str	r1, [sp, #8]
 8000b9e:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000ba0:	9403      	str	r4, [sp, #12]
 8000ba2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000ba4:	f041 0104 	orr.w	r1, r1, #4
 8000ba8:	6319      	str	r1, [r3, #48]	; 0x30
 8000baa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bac:	f001 0104 	and.w	r1, r1, #4
 8000bb0:	9103      	str	r1, [sp, #12]
 8000bb2:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	9404      	str	r4, [sp, #16]
 8000bb6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bb8:	f041 0101 	orr.w	r1, r1, #1
 8000bbc:	6319      	str	r1, [r3, #48]	; 0x30
 8000bbe:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bc0:	f001 0101 	and.w	r1, r1, #1
 8000bc4:	9104      	str	r1, [sp, #16]
 8000bc6:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000bc8:	9405      	str	r4, [sp, #20]
 8000bca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bcc:	f041 0102 	orr.w	r1, r1, #2
 8000bd0:	6319      	str	r1, [r3, #48]	; 0x30
 8000bd2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bd4:	f001 0102 	and.w	r1, r1, #2
 8000bd8:	9105      	str	r1, [sp, #20]
 8000bda:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000bdc:	9406      	str	r4, [sp, #24]
 8000bde:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be0:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 8000be4:	6319      	str	r1, [r3, #48]	; 0x30
 8000be6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000be8:	f001 0140 	and.w	r1, r1, #64	; 0x40
 8000bec:	9106      	str	r1, [sp, #24]
 8000bee:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000bf0:	9407      	str	r4, [sp, #28]
 8000bf2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000bf4:	f041 0108 	orr.w	r1, r1, #8
 8000bf8:	6319      	str	r1, [r3, #48]	; 0x30
 8000bfa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bfc:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c00:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c02:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c04:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c06:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8000c08:	f009 fa28 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 8000c0c:	4893      	ldr	r0, [pc, #588]	; (8000e5c <main+0x31c>)
 8000c0e:	2120      	movs	r1, #32
 8000c10:	2201      	movs	r2, #1
 8000c12:	f009 fa23 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8000c16:	4893      	ldr	r0, [pc, #588]	; (8000e64 <main+0x324>)
 8000c18:	4622      	mov	r2, r4
 8000c1a:	2114      	movs	r1, #20
 8000c1c:	f009 fa1e 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 8000c20:	4891      	ldr	r0, [pc, #580]	; (8000e68 <main+0x328>)
 8000c22:	4622      	mov	r2, r4
 8000c24:	2180      	movs	r1, #128	; 0x80
 8000c26:	f009 fa19 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8000c2a:	4890      	ldr	r0, [pc, #576]	; (8000e6c <main+0x32c>)
 8000c2c:	4622      	mov	r2, r4
 8000c2e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c32:	f009 fa13 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8000c36:	488e      	ldr	r0, [pc, #568]	; (8000e70 <main+0x330>)
 8000c38:	4622      	mov	r2, r4
 8000c3a:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 8000c3e:	f009 fa0d 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8000c42:	488c      	ldr	r0, [pc, #560]	; (8000e74 <main+0x334>)
 8000c44:	4622      	mov	r2, r4
 8000c46:	2104      	movs	r1, #4
 8000c48:	f009 fa08 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8000c4c:	2201      	movs	r2, #1
 8000c4e:	4889      	ldr	r0, [pc, #548]	; (8000e74 <main+0x334>)
 8000c50:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000c54:	f009 fa02 	bl	800a05c <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c58:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c5a:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 8000c5e:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c60:	487e      	ldr	r0, [pc, #504]	; (8000e5c <main+0x31c>)
 8000c62:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c64:	f04f 0908 	mov.w	r9, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000c68:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6c:	e9cd 4b11 	strd	r4, fp, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000c70:	f009 f8b0 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c74:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c78:	4878      	ldr	r0, [pc, #480]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8000c7a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c7e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8000c80:	9310      	str	r3, [sp, #64]	; 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c82:	9411      	str	r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8000c84:	f009 f8a6 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c88:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8a:	4874      	ldr	r0, [pc, #464]	; (8000e5c <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8000c8c:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c8e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000c90:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000c92:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c96:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c9a:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8000c9c:	f009 f89a 	bl	8009dd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca0:	4870      	ldr	r0, [pc, #448]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000ca2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000ca6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cac:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cae:	f009 f891 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb2:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb4:	486c      	ldr	r0, [pc, #432]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 8000cb6:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cb8:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cba:	f04f 0810 	mov.w	r8, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cbe:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc2:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc4:	f009 f886 	bl	8009dd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cc8:	4866      	ldr	r0, [pc, #408]	; (8000e64 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cca:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000ccc:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cce:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 8000cd2:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 8000cd6:	f009 f87d 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000cda:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cde:	4863      	ldr	r0, [pc, #396]	; (8000e6c <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ce0:	930f      	str	r3, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000ce2:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ce4:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ce8:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000cea:	f009 f873 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cee:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf2:	485f      	ldr	r0, [pc, #380]	; (8000e70 <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8000cf4:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cf6:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf8:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000cfc:	9712      	str	r7, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cfe:	f009 f869 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d02:	f242 0204 	movw	r2, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d06:	485b      	ldr	r0, [pc, #364]	; (8000e74 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 8000d08:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d0a:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d0c:	e9cd 6410 	strd	r6, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d10:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000d12:	f009 f85f 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1a:	4853      	ldr	r0, [pc, #332]	; (8000e68 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000d1c:	920f      	str	r2, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d1e:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 8000d20:	220f      	movs	r2, #15
 8000d22:	9213      	str	r2, [sp, #76]	; 0x4c
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000d24:	e9cd 7410 	strd	r7, r4, [sp, #64]	; 0x40
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000d28:	9412      	str	r4, [sp, #72]	; 0x48
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000d2a:	f009 f853 	bl	8009dd4 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 8000d2e:	2105      	movs	r1, #5
 8000d30:	4622      	mov	r2, r4
 8000d32:	2009      	movs	r0, #9
 8000d34:	f008 fde0 	bl	80098f8 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8000d38:	2009      	movs	r0, #9
 8000d3a:	f008 fe1b 	bl	8009974 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 8000d3e:	484e      	ldr	r0, [pc, #312]	; (8000e78 <main+0x338>)
 8000d40:	4a4e      	ldr	r2, [pc, #312]	; (8000e7c <main+0x33c>)
 8000d42:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000d44:	f008 fe24 	bl	8009990 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8000d48:	494d      	ldr	r1, [pc, #308]	; (8000e80 <main+0x340>)
 8000d4a:	4a4e      	ldr	r2, [pc, #312]	; (8000e84 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d4c:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 8000d4e:	e9c5 1200 	strd	r1, r2, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d52:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8000d56:	612a      	str	r2, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8000d58:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8000d5c:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d60:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000d64:	f009 fbe0 	bl	800a528 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8000d68:	4641      	mov	r1, r8
 8000d6a:	4628      	mov	r0, r5
 8000d6c:	f00a fda8 	bl	800b8c0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000d70:	4621      	mov	r1, r4
 8000d72:	4628      	mov	r0, r5
 8000d74:	f00a fdc4 	bl	800b900 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d78:	f8df c11c 	ldr.w	ip, [pc, #284]	; 8000e98 <main+0x358>
  hspi5.Instance = SPI5;
 8000d7c:	4842      	ldr	r0, [pc, #264]	; (8000e88 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000d7e:	4d43      	ldr	r5, [pc, #268]	; (8000e8c <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000d80:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d82:	f44f 7282 	mov.w	r2, #260	; 0x104
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d86:	f44f 7e00 	mov.w	lr, #512	; 0x200
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8000d8a:	e9c0 c200 	strd	ip, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8000d8e:	2218      	movs	r2, #24
 8000d90:	e9c0 e206 	strd	lr, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8000d94:	220a      	movs	r2, #10
 8000d96:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8000d98:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000d9c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8000da0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8000da4:	f00b fc9e 	bl	800c6e4 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000da8:	2207      	movs	r2, #7
 8000daa:	9210      	str	r2, [sp, #64]	; 0x40
  SdramTiming.RowCycleDelay = 7;
 8000dac:	9212      	str	r2, [sp, #72]	; 0x48
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8000dae:	4a38      	ldr	r2, [pc, #224]	; (8000e90 <main+0x350>)
 8000db0:	602a      	str	r2, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000db2:	2040      	movs	r0, #64	; 0x40
 8000db4:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000db8:	e9c5 0205 	strd	r0, r2, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8000dbc:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000dc0:	622a      	str	r2, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc2:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dc4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000dc8:	4628      	mov	r0, r5
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8000dca:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000dce:	e9c5 a803 	strd	sl, r8, [r5, #12]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8000dd2:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.RPDelay = 2;
 8000dd4:	e9cd b713 	strd	fp, r7, [sp, #76]	; 0x4c
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000dd8:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8000dda:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 8000ddc:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 8000de0:	970f      	str	r7, [sp, #60]	; 0x3c
  SdramTiming.RCDDelay = 2;
 8000de2:	9715      	str	r7, [sp, #84]	; 0x54
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000de4:	f00b fb8c 	bl	800c500 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000de8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000dec:	a90b      	add	r1, sp, #44	; 0x2c
 8000dee:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000df0:	e9cd 690b 	strd	r6, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000df4:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
 __IO uint32_t tmpmrd =0;
 8000df8:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000dfa:	f00b fba3 	bl	800c544 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f008 fd56 	bl	80098b0 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e08:	a90b      	add	r1, sp, #44	; 0x2c
 8000e0a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e0c:	e9cd 790b 	strd	r7, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e10:	e9cd 640d 	strd	r6, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e14:	f00b fb96 	bl	800c544 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e18:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e1c:	a90b      	add	r1, sp, #44	; 0x2c
 8000e1e:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e20:	e9cd b90b 	strd	fp, r9, [sp, #44]	; 0x2c
  Command->ModeRegisterDefinition  = 0;
 8000e24:	e9cd a40d 	strd	sl, r4, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e28:	f00b fb8c 	bl	800c544 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8000e2c:	f44f 720c 	mov.w	r2, #560	; 0x230
 8000e30:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8000e32:	9908      	ldr	r1, [sp, #32]
 8000e34:	910e      	str	r1, [sp, #56]	; 0x38
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e36:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000e3a:	a90b      	add	r1, sp, #44	; 0x2c
 8000e3c:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8000e3e:	e9cd a90b 	strd	sl, r9, [sp, #44]	; 0x2c
  Command->AutoRefreshNumber       = 1;
 8000e42:	960d      	str	r6, [sp, #52]	; 0x34
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8000e44:	f00b fb7e 	bl	800c544 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e48:	4628      	mov	r0, r5
 8000e4a:	f240 516a 	movw	r1, #1386	; 0x56a
  hltdc.Instance = LTDC;
 8000e4e:	4d11      	ldr	r5, [pc, #68]	; (8000e94 <main+0x354>)
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8000e50:	f00b fb96 	bl	800c580 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000e54:	4621      	mov	r1, r4
 8000e56:	e021      	b.n	8000e9c <main+0x35c>
 8000e58:	40023800 	.word	0x40023800
 8000e5c:	40021000 	.word	0x40021000
 8000e60:	200001e4 	.word	0x200001e4
 8000e64:	40020800 	.word	0x40020800
 8000e68:	40020000 	.word	0x40020000
 8000e6c:	40020400 	.word	0x40020400
 8000e70:	40020c00 	.word	0x40020c00
 8000e74:	40021800 	.word	0x40021800
 8000e78:	200001dc 	.word	0x200001dc
 8000e7c:	40023000 	.word	0x40023000
 8000e80:	40005c00 	.word	0x40005c00
 8000e84:	000186a0 	.word	0x000186a0
 8000e88:	20000314 	.word	0x20000314
 8000e8c:	200002e0 	.word	0x200002e0
 8000e90:	a0000140 	.word	0xa0000140
 8000e94:	20000238 	.word	0x20000238
 8000e98:	40015000 	.word	0x40015000
 8000e9c:	2234      	movs	r2, #52	; 0x34
 8000e9e:	a80f      	add	r0, sp, #60	; 0x3c
 8000ea0:	f02a fd63 	bl	802b96a <memset>
  hltdc.Instance = LTDC;
 8000ea4:	4a72      	ldr	r2, [pc, #456]	; (8001070 <main+0x530>)
 8000ea6:	602a      	str	r2, [r5, #0]
  hltdc.Init.AccumulatedHBP = 29;
 8000ea8:	221d      	movs	r2, #29
  hltdc.Init.AccumulatedVBP = 3;
 8000eaa:	f8c5 b020 	str.w	fp, [r5, #32]
  hltdc.Init.AccumulatedHBP = 29;
 8000eae:	61ea      	str	r2, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8000eb0:	f240 1b0d 	movw	fp, #269	; 0x10d
 8000eb4:	f240 1243 	movw	r2, #323	; 0x143
  hltdc.Init.TotalHeigh = 327;
 8000eb8:	f240 1317 	movw	r3, #279	; 0x117
  hltdc.Init.AccumulatedActiveH = 323;
 8000ebc:	e9c5 b209 	strd	fp, r2, [r5, #36]	; 0x24
  hltdc.Init.Backcolor.Blue = 0;
 8000ec0:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.TotalHeigh = 327;
 8000ec2:	f240 1247 	movw	r2, #327	; 0x147
  hltdc.Init.HorizontalSync = 9;
 8000ec6:	f04f 0909 	mov.w	r9, #9
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000eca:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 8000ecc:	e9c5 320b 	strd	r3, r2, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 8000ed0:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000ed2:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000ed6:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.Backcolor.Red = 0;
 8000eda:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  hltdc.Init.HorizontalSync = 9;
 8000ede:	f8c5 9014 	str.w	r9, [r5, #20]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000ee2:	f00a fd31 	bl	800b948 <HAL_LTDC_Init>
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000ee6:	4628      	mov	r0, r5
  pLayerCfg.WindowX1 = 240;
 8000ee8:	25f0      	movs	r5, #240	; 0xf0
 8000eea:	9510      	str	r5, [sp, #64]	; 0x40
  pLayerCfg.ImageWidth = 240;
 8000eec:	9519      	str	r5, [sp, #100]	; 0x64
  pLayerCfg.WindowY1 = 320;
 8000eee:	f44f 75a0 	mov.w	r5, #320	; 0x140
 8000ef2:	9512      	str	r5, [sp, #72]	; 0x48
  pLayerCfg.ImageHeight = 320;
 8000ef4:	951a      	str	r5, [sp, #104]	; 0x68
  pLayerCfg.Alpha = 255;
 8000ef6:	25ff      	movs	r5, #255	; 0xff
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000ef8:	f44f 6c80 	mov.w	ip, #1024	; 0x400
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000efc:	a90f      	add	r1, sp, #60	; 0x3c
 8000efe:	4622      	mov	r2, r4
  pLayerCfg.Alpha = 255;
 8000f00:	9514      	str	r5, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000f02:	2505      	movs	r5, #5
 8000f04:	e9cd c516 	strd	ip, r5, [sp, #88]	; 0x58
  pLayerCfg.WindowX0 = 0;
 8000f08:	940f      	str	r4, [sp, #60]	; 0x3c
  LcdDrv = &ili9341_drv;
 8000f0a:	4d5a      	ldr	r5, [pc, #360]	; (8001074 <main+0x534>)
  pLayerCfg.WindowY0 = 0;
 8000f0c:	9411      	str	r4, [sp, #68]	; 0x44
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000f0e:	9713      	str	r7, [sp, #76]	; 0x4c
  pLayerCfg.Alpha0 = 0;
 8000f10:	9415      	str	r4, [sp, #84]	; 0x54
  pLayerCfg.FBStartAdress = 0;
 8000f12:	9418      	str	r4, [sp, #96]	; 0x60
  pLayerCfg.Backcolor.Blue = 0;
 8000f14:	f8ad 406c 	strh.w	r4, [sp, #108]	; 0x6c
  pLayerCfg.Backcolor.Red = 0;
 8000f18:	f88d 406e 	strb.w	r4, [sp, #110]	; 0x6e
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000f1c:	f00a fdea 	bl	800baf4 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8000f20:	4a55      	ldr	r2, [pc, #340]	; (8001078 <main+0x538>)
 8000f22:	602a      	str	r2, [r5, #0]
  LcdDrv->Init();
 8000f24:	6812      	ldr	r2, [r2, #0]
  htim1.Instance = TIM1;
 8000f26:	4e55      	ldr	r6, [pc, #340]	; (800107c <main+0x53c>)
  LcdDrv->Init();
 8000f28:	4790      	blx	r2
  LcdDrv->DisplayOff();
 8000f2a:	682a      	ldr	r2, [r5, #0]
  htim3.Instance = TIM3;
 8000f2c:	4d54      	ldr	r5, [pc, #336]	; (8001080 <main+0x540>)
  LcdDrv->DisplayOff();
 8000f2e:	68d2      	ldr	r2, [r2, #12]
 8000f30:	4790      	blx	r2
  htim1.Init.Period = 65535;
 8000f32:	f64f 7aff 	movw	sl, #65535	; 0xffff
  htim1.Instance = TIM1;
 8000f36:	4a53      	ldr	r2, [pc, #332]	; (8001084 <main+0x544>)
 8000f38:	6032      	str	r2, [r6, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f3a:	4630      	mov	r0, r6
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f3c:	e9c6 4401 	strd	r4, r4, [r6, #4]
  htim1.Init.RepetitionCounter = 0;
 8000f40:	e9c6 4404 	strd	r4, r4, [r6, #16]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f44:	61b4      	str	r4, [r6, #24]
  htim1.Init.Period = 65535;
 8000f46:	f8c6 a00c 	str.w	sl, [r6, #12]
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f4a:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f4e:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f56:	9413      	str	r4, [sp, #76]	; 0x4c
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000f58:	f00b ffb4 	bl	800cec4 <HAL_TIM_Base_Init>
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f5c:	a90f      	add	r1, sp, #60	; 0x3c
 8000f5e:	4630      	mov	r0, r6
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000f60:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim1, &sSlaveConfig) != HAL_OK)
 8000f64:	f00c f928 	bl	800d1b8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f68:	a90b      	add	r1, sp, #44	; 0x2c
 8000f6a:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000f6c:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000f70:	f00c fa60 	bl	800d434 <HAL_TIMEx_MasterConfigSynchronization>
  htim3.Instance = TIM3;
 8000f74:	4a44      	ldr	r2, [pc, #272]	; (8001088 <main+0x548>)
 8000f76:	602a      	str	r2, [r5, #0]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f78:	4628      	mov	r0, r5
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f7a:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim3.Init.Period = 65535;
 8000f7e:	f8c5 a00c 	str.w	sl, [r5, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f82:	612c      	str	r4, [r5, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f84:	61ac      	str	r4, [r5, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000f86:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8000f8a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 8000f8e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000f92:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
 8000f96:	9413      	str	r4, [sp, #76]	; 0x4c
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f98:	9409      	str	r4, [sp, #36]	; 0x24
 8000f9a:	940a      	str	r4, [sp, #40]	; 0x28
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8000f9c:	f00b ff92 	bl	800cec4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000fa0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fa4:	a90b      	add	r1, sp, #44	; 0x2c
 8000fa6:	4628      	mov	r0, r5
  htim2.Instance = TIM2;
 8000fa8:	4e38      	ldr	r6, [pc, #224]	; (800108c <main+0x54c>)
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000faa:	930b      	str	r3, [sp, #44]	; 0x2c
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 8000fac:	f00c f854 	bl	800d058 <HAL_TIM_ConfigClockSource>
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb0:	a90f      	add	r1, sp, #60	; 0x3c
 8000fb2:	4628      	mov	r0, r5
  sSlaveConfig.InputTrigger = TIM_TS_ITR0;
 8000fb4:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  if (HAL_TIM_SlaveConfigSynchro(&htim3, &sSlaveConfig) != HAL_OK)
 8000fb8:	f00c f8fe 	bl	800d1b8 <HAL_TIM_SlaveConfigSynchro>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fbc:	a909      	add	r1, sp, #36	; 0x24
 8000fbe:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fc0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000fc4:	f00c fa36 	bl	800d434 <HAL_TIMEx_MasterConfigSynchronization>
  htim2.Init.Prescaler = 13124;
 8000fc8:	f04f 4e80 	mov.w	lr, #1073741824	; 0x40000000
 8000fcc:	f243 3244 	movw	r2, #13124	; 0x3344
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd0:	2380      	movs	r3, #128	; 0x80
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fd2:	4630      	mov	r0, r6
  htim2.Init.Prescaler = 13124;
 8000fd4:	e9c6 e200 	strd	lr, r2, [r6]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8000fd8:	61b3      	str	r3, [r6, #24]
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000fda:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
 8000fde:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000fe2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
  htim2.Init.Period = 9;
 8000fe6:	f8c6 900c 	str.w	r9, [r6, #12]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000fea:	60b4      	str	r4, [r6, #8]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000fec:	6134      	str	r4, [r6, #16]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8000fee:	f00b ff69 	bl	800cec4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ff2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ff6:	a90f      	add	r1, sp, #60	; 0x3c
 8000ff8:	4630      	mov	r0, r6
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000ffa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8000ffc:	f00c f82c 	bl	800d058 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001000:	a90b      	add	r1, sp, #44	; 0x2c
 8001002:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001004:	e9cd 840b 	strd	r8, r4, [sp, #44]	; 0x2c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001008:	f00c fa14 	bl	800d434 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800100c:	f000 fdfc 	bl	8001c08 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8001010:	f000 fdf8 	bl	8001c04 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 8001014:	f7ff fce2 	bl	80009dc <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001018:	f000 f956 	bl	80012c8 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 800101c:	f000 f988 	bl	8001330 <MEAS_timer_init>
  Flash_Read_Data(SECTOR_23_ADDR, Calibration_Data, 12);
 8001020:	491b      	ldr	r1, [pc, #108]	; (8001090 <main+0x550>)
 8001022:	481c      	ldr	r0, [pc, #112]	; (8001094 <main+0x554>)
 8001024:	220c      	movs	r2, #12
 8001026:	f7ff fc13 	bl	8000850 <Flash_Read_Data>
  osKernelInitialize();
 800102a:	f00c fb15 	bl	800d658 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800102e:	4a1a      	ldr	r2, [pc, #104]	; (8001098 <main+0x558>)
 8001030:	4639      	mov	r1, r7
 8001032:	4640      	mov	r0, r8
 8001034:	f00c fc4a 	bl	800d8cc <osMessageQueueNew>
 8001038:	4b18      	ldr	r3, [pc, #96]	; (800109c <main+0x55c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800103a:	4a19      	ldr	r2, [pc, #100]	; (80010a0 <main+0x560>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800103c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800103e:	4621      	mov	r1, r4
 8001040:	4818      	ldr	r0, [pc, #96]	; (80010a4 <main+0x564>)
 8001042:	f00c fb35 	bl	800d6b0 <osThreadNew>
 8001046:	4b18      	ldr	r3, [pc, #96]	; (80010a8 <main+0x568>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001048:	4a18      	ldr	r2, [pc, #96]	; (80010ac <main+0x56c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800104a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800104c:	4621      	mov	r1, r4
 800104e:	4818      	ldr	r0, [pc, #96]	; (80010b0 <main+0x570>)
 8001050:	f00c fb2e 	bl	800d6b0 <osThreadNew>
 8001054:	4b17      	ldr	r3, [pc, #92]	; (80010b4 <main+0x574>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001056:	4a18      	ldr	r2, [pc, #96]	; (80010b8 <main+0x578>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001058:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800105a:	4621      	mov	r1, r4
 800105c:	4817      	ldr	r0, [pc, #92]	; (80010bc <main+0x57c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800105e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001060:	f00c fb26 	bl	800d6b0 <osThreadNew>
 8001064:	4b16      	ldr	r3, [pc, #88]	; (80010c0 <main+0x580>)
 8001066:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001068:	f00c fb08 	bl	800d67c <osKernelStart>
  while (1)
 800106c:	e7fe      	b.n	800106c <main+0x52c>
 800106e:	bf00      	nop
 8001070:	40016800 	.word	0x40016800
 8001074:	200001cc 	.word	0x200001cc
 8001078:	20000018 	.word	0x20000018
 800107c:	2000036c 	.word	0x2000036c
 8001080:	200003fc 	.word	0x200003fc
 8001084:	40010000 	.word	0x40010000
 8001088:	40000400 	.word	0x40000400
 800108c:	200003b4 	.word	0x200003b4
 8001090:	20000198 	.word	0x20000198
 8001094:	081e0000 	.word	0x081e0000
 8001098:	0802c710 	.word	0x0802c710
 800109c:	200001d0 	.word	0x200001d0
 80010a0:	0802c74c 	.word	0x0802c74c
 80010a4:	08000971 	.word	0x08000971
 80010a8:	200001d8 	.word	0x200001d8
 80010ac:	0802c6ec 	.word	0x0802c6ec
 80010b0:	08001c19 	.word	0x08001c19
 80010b4:	200001c8 	.word	0x200001c8
 80010b8:	0802c728 	.word	0x0802c728
 80010bc:	0800097d 	.word	0x0800097d
 80010c0:	200001d4 	.word	0x200001d4

080010c4 <IOE_Init>:
 80010c4:	4770      	bx	lr
 80010c6:	bf00      	nop

080010c8 <IOE_ITConfig>:
 80010c8:	4770      	bx	lr
 80010ca:	bf00      	nop

080010cc <IOE_Write>:
{
 80010cc:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010ce:	4c09      	ldr	r4, [pc, #36]	; (80010f4 <IOE_Write+0x28>)
{
 80010d0:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010d2:	6824      	ldr	r4, [r4, #0]
 80010d4:	9402      	str	r4, [sp, #8]
{
 80010d6:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80010d8:	2301      	movs	r3, #1
 80010da:	f88d 4017 	strb.w	r4, [sp, #23]
 80010de:	f10d 0417 	add.w	r4, sp, #23
 80010e2:	460a      	mov	r2, r1
 80010e4:	9301      	str	r3, [sp, #4]
 80010e6:	4601      	mov	r1, r0
 80010e8:	9400      	str	r4, [sp, #0]
 80010ea:	4803      	ldr	r0, [pc, #12]	; (80010f8 <IOE_Write+0x2c>)
 80010ec:	f009 fae4 	bl	800a6b8 <HAL_I2C_Mem_Write>
}
 80010f0:	b006      	add	sp, #24
 80010f2:	bd10      	pop	{r4, pc}
 80010f4:	20000004 	.word	0x20000004
 80010f8:	200001e4 	.word	0x200001e4

080010fc <IOE_Read>:
{
 80010fc:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80010fe:	4b0b      	ldr	r3, [pc, #44]	; (800112c <IOE_Read+0x30>)
{
 8001100:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001102:	681b      	ldr	r3, [r3, #0]
 8001104:	9302      	str	r3, [sp, #8]
{
 8001106:	4684      	mov	ip, r0
 8001108:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800110a:	2301      	movs	r3, #1
 800110c:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 8001110:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001112:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 8001116:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800111a:	4661      	mov	r1, ip
 800111c:	4804      	ldr	r0, [pc, #16]	; (8001130 <IOE_Read+0x34>)
 800111e:	f009 fbbd 	bl	800a89c <HAL_I2C_Mem_Read>
}
 8001122:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001126:	b007      	add	sp, #28
 8001128:	f85d fb04 	ldr.w	pc, [sp], #4
 800112c:	20000004 	.word	0x20000004
 8001130:	200001e4 	.word	0x200001e4

08001134 <IOE_ReadMultiple>:
{
 8001134:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001136:	4c09      	ldr	r4, [pc, #36]	; (800115c <IOE_ReadMultiple+0x28>)
{
 8001138:	b084      	sub	sp, #16
 800113a:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800113c:	6820      	ldr	r0, [r4, #0]
 800113e:	9002      	str	r0, [sp, #8]
 8001140:	e9cd 2300 	strd	r2, r3, [sp]
 8001144:	4806      	ldr	r0, [pc, #24]	; (8001160 <IOE_ReadMultiple+0x2c>)
 8001146:	460a      	mov	r2, r1
 8001148:	2301      	movs	r3, #1
 800114a:	4661      	mov	r1, ip
 800114c:	f009 fba6 	bl	800a89c <HAL_I2C_Mem_Read>
}
 8001150:	3800      	subs	r0, #0
 8001152:	bf18      	it	ne
 8001154:	2001      	movne	r0, #1
 8001156:	b004      	add	sp, #16
 8001158:	bd10      	pop	{r4, pc}
 800115a:	bf00      	nop
 800115c:	20000004 	.word	0x20000004
 8001160:	200001e4 	.word	0x200001e4

08001164 <IOE_Delay>:
 8001164:	f008 bba4 	b.w	80098b0 <HAL_Delay>

08001168 <LCD_IO_Init>:
{
 8001168:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800116a:	4806      	ldr	r0, [pc, #24]	; (8001184 <LCD_IO_Init+0x1c>)
 800116c:	2200      	movs	r2, #0
 800116e:	2104      	movs	r1, #4
 8001170:	f008 ff74 	bl	800a05c <HAL_GPIO_WritePin>
}
 8001174:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001178:	4802      	ldr	r0, [pc, #8]	; (8001184 <LCD_IO_Init+0x1c>)
 800117a:	2201      	movs	r2, #1
 800117c:	2104      	movs	r1, #4
 800117e:	f008 bf6d 	b.w	800a05c <HAL_GPIO_WritePin>
 8001182:	bf00      	nop
 8001184:	40020800 	.word	0x40020800

08001188 <LCD_IO_WriteData>:
{
 8001188:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800118a:	4d10      	ldr	r5, [pc, #64]	; (80011cc <LCD_IO_WriteData+0x44>)
{
 800118c:	b083      	sub	sp, #12
 800118e:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001190:	2201      	movs	r2, #1
 8001192:	480f      	ldr	r0, [pc, #60]	; (80011d0 <LCD_IO_WriteData+0x48>)
 8001194:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001198:	f008 ff60 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800119c:	4628      	mov	r0, r5
 800119e:	2200      	movs	r2, #0
 80011a0:	2104      	movs	r1, #4
 80011a2:	f008 ff5b 	bl	800a05c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011a6:	4b0b      	ldr	r3, [pc, #44]	; (80011d4 <LCD_IO_WriteData+0x4c>)
 80011a8:	480b      	ldr	r0, [pc, #44]	; (80011d8 <LCD_IO_WriteData+0x50>)
 80011aa:	681b      	ldr	r3, [r3, #0]
 80011ac:	f8ad 4006 	strh.w	r4, [sp, #6]
 80011b0:	f10d 0106 	add.w	r1, sp, #6
 80011b4:	2201      	movs	r2, #1
 80011b6:	f00b faf7 	bl	800c7a8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011ba:	2201      	movs	r2, #1
 80011bc:	2104      	movs	r1, #4
 80011be:	4628      	mov	r0, r5
}
 80011c0:	b003      	add	sp, #12
 80011c2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80011c6:	f008 bf49 	b.w	800a05c <HAL_GPIO_WritePin>
 80011ca:	bf00      	nop
 80011cc:	40020800 	.word	0x40020800
 80011d0:	40020c00 	.word	0x40020c00
 80011d4:	20000008 	.word	0x20000008
 80011d8:	20000314 	.word	0x20000314

080011dc <LCD_IO_WriteReg>:
{
 80011dc:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011de:	4d10      	ldr	r5, [pc, #64]	; (8001220 <LCD_IO_WriteReg+0x44>)
{
 80011e0:	b083      	sub	sp, #12
 80011e2:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80011e4:	2200      	movs	r2, #0
 80011e6:	480f      	ldr	r0, [pc, #60]	; (8001224 <LCD_IO_WriteReg+0x48>)
 80011e8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80011ec:	f008 ff36 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80011f0:	4628      	mov	r0, r5
 80011f2:	2200      	movs	r2, #0
 80011f4:	2104      	movs	r1, #4
 80011f6:	f008 ff31 	bl	800a05c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80011fa:	4b0b      	ldr	r3, [pc, #44]	; (8001228 <LCD_IO_WriteReg+0x4c>)
 80011fc:	480b      	ldr	r0, [pc, #44]	; (800122c <LCD_IO_WriteReg+0x50>)
 80011fe:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 8001200:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001204:	f10d 0106 	add.w	r1, sp, #6
 8001208:	2201      	movs	r2, #1
 800120a:	f00b facd 	bl	800c7a8 <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800120e:	2201      	movs	r2, #1
 8001210:	2104      	movs	r1, #4
 8001212:	4628      	mov	r0, r5
}
 8001214:	b003      	add	sp, #12
 8001216:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800121a:	f008 bf1f 	b.w	800a05c <HAL_GPIO_WritePin>
 800121e:	bf00      	nop
 8001220:	40020800 	.word	0x40020800
 8001224:	40020c00 	.word	0x40020c00
 8001228:	20000008 	.word	0x20000008
 800122c:	20000314 	.word	0x20000314

08001230 <LCD_IO_ReadData>:
{
 8001230:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001234:	4e19      	ldr	r6, [pc, #100]	; (800129c <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001236:	4f1a      	ldr	r7, [pc, #104]	; (80012a0 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001238:	f8df 9068 	ldr.w	r9, [pc, #104]	; 80012a4 <LCD_IO_ReadData+0x74>
 800123c:	f8df 8068 	ldr.w	r8, [pc, #104]	; 80012a8 <LCD_IO_ReadData+0x78>
{
 8001240:	b083      	sub	sp, #12
 8001242:	460c      	mov	r4, r1
 8001244:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001246:	2200      	movs	r2, #0
 8001248:	4630      	mov	r0, r6
 800124a:	2104      	movs	r1, #4
 800124c:	f008 ff06 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001250:	4638      	mov	r0, r7
 8001252:	2200      	movs	r2, #0
 8001254:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001258:	f008 ff00 	bl	800a05c <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800125c:	f8d9 3000 	ldr.w	r3, [r9]
 8001260:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001264:	a901      	add	r1, sp, #4
 8001266:	2201      	movs	r2, #1
 8001268:	4640      	mov	r0, r8
 800126a:	f00b fa9d 	bl	800c7a8 <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 800126e:	f8d9 3000 	ldr.w	r3, [r9]
 8001272:	4622      	mov	r2, r4
 8001274:	a901      	add	r1, sp, #4
 8001276:	4640      	mov	r0, r8
 8001278:	f00b fd3e 	bl	800ccf8 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800127c:	4638      	mov	r0, r7
 800127e:	2201      	movs	r2, #1
 8001280:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001284:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001286:	f008 fee9 	bl	800a05c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800128a:	4630      	mov	r0, r6
 800128c:	2201      	movs	r2, #1
 800128e:	2104      	movs	r1, #4
 8001290:	f008 fee4 	bl	800a05c <HAL_GPIO_WritePin>
}
 8001294:	4620      	mov	r0, r4
 8001296:	b003      	add	sp, #12
 8001298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800129c:	40020800 	.word	0x40020800
 80012a0:	40020c00 	.word	0x40020c00
 80012a4:	20000008 	.word	0x20000008
 80012a8:	20000314 	.word	0x20000314

080012ac <LCD_Delay>:
  HAL_Delay(Delay);
 80012ac:	f008 bb00 	b.w	80098b0 <HAL_Delay>

080012b0 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80012b0:	4b03      	ldr	r3, [pc, #12]	; (80012c0 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80012b2:	6802      	ldr	r2, [r0, #0]
 80012b4:	429a      	cmp	r2, r3
 80012b6:	d000      	beq.n	80012ba <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80012b8:	4770      	bx	lr
    HAL_IncTick();
 80012ba:	f008 bae7 	b.w	800988c <HAL_IncTick>
 80012be:	bf00      	nop
 80012c0:	40001000 	.word	0x40001000

080012c4 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80012c4:	4770      	bx	lr
 80012c6:	bf00      	nop

080012c8 <MEAS_GPIO_analog_init>:
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void)
{
 80012c8:	b410      	push	{r4}
 80012ca:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012cc:	4b15      	ldr	r3, [pc, #84]	; (8001324 <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012ce:	4916      	ldr	r1, [pc, #88]	; (8001328 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 80012d0:	2400      	movs	r4, #0
 80012d2:	9400      	str	r4, [sp, #0]
 80012d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012d6:	f042 0220 	orr.w	r2, r2, #32
 80012da:	631a      	str	r2, [r3, #48]	; 0x30
 80012dc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80012de:	f002 0220 	and.w	r2, r2, #32
 80012e2:	9200      	str	r2, [sp, #0]
 80012e4:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012e6:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 80012e8:	4a10      	ldr	r2, [pc, #64]	; (800132c <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 80012ea:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 80012ee:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 80012f0:	6808      	ldr	r0, [r1, #0]
 80012f2:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 80012f6:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 80012f8:	9401      	str	r4, [sp, #4]
 80012fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80012fc:	f041 0104 	orr.w	r1, r1, #4
 8001300:	6319      	str	r1, [r3, #48]	; 0x30
 8001302:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001304:	f003 0304 	and.w	r3, r3, #4
 8001308:	9301      	str	r3, [sp, #4]
 800130a:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 800130c:	6813      	ldr	r3, [r2, #0]
 800130e:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001312:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001314:	6813      	ldr	r3, [r2, #0]
 8001316:	f043 030c 	orr.w	r3, r3, #12
 800131a:	6013      	str	r3, [r2, #0]
}
 800131c:	b003      	add	sp, #12
 800131e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001322:	4770      	bx	lr
 8001324:	40023800 	.word	0x40023800
 8001328:	40021400 	.word	0x40021400
 800132c:	40020800 	.word	0x40020800

08001330 <MEAS_timer_init>:
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void)
{
 8001330:	b410      	push	{r4}
 8001332:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001334:	4a0e      	ldr	r2, [pc, #56]	; (8001370 <MEAS_timer_init+0x40>)
 8001336:	2000      	movs	r0, #0
 8001338:	9001      	str	r0, [sp, #4]
 800133a:	6c11      	ldr	r1, [r2, #64]	; 0x40
 800133c:	f041 0101 	orr.w	r1, r1, #1
 8001340:	6411      	str	r1, [r2, #64]	; 0x40
 8001342:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001344:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001348:	f002 0201 	and.w	r2, r2, #1
 800134c:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 800134e:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001352:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001354:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001356:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001358:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 800135a:	685a      	ldr	r2, [r3, #4]
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800135c:	4905      	ldr	r1, [pc, #20]	; (8001374 <MEAS_timer_init+0x44>)
 800135e:	f042 0220 	orr.w	r2, r2, #32
 8001362:	605a      	str	r2, [r3, #4]
 8001364:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c

    // set timer to highest priority
    NVIC_SetPriority(TIM2_IRQn, 0);
}
 8001368:	b003      	add	sp, #12
 800136a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800136e:	4770      	bx	lr
 8001370:	40023800 	.word	0x40023800
 8001374:	e000e100 	.word	0xe000e100

08001378 <MEAS_ADC3_scan_init>:
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void)
{
 8001378:	b410      	push	{r4}
 800137a:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 800137c:	4a36      	ldr	r2, [pc, #216]	; (8001458 <MEAS_ADC3_scan_init+0xe0>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 800137e:	4b37      	ldr	r3, [pc, #220]	; (800145c <MEAS_ADC3_scan_init+0xe4>)
 8001380:	4c37      	ldr	r4, [pc, #220]	; (8001460 <MEAS_ADC3_scan_init+0xe8>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001382:	2100      	movs	r1, #0
 8001384:	9100      	str	r1, [sp, #0]
 8001386:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001388:	f440 6080 	orr.w	r0, r0, #1024	; 0x400
 800138c:	6450      	str	r0, [r2, #68]	; 0x44
 800138e:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8001390:	f400 6080 	and.w	r0, r0, #1024	; 0x400
 8001394:	9000      	str	r0, [sp, #0]
 8001396:	9800      	ldr	r0, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001398:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800139a:	f440 1040 	orr.w	r0, r0, #3145728	; 0x300000
 800139e:	62d8      	str	r0, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 80013a0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013a2:	f040 0004 	orr.w	r0, r0, #4
 80013a6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 80013a8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013aa:	f440 70d0 	orr.w	r0, r0, #416	; 0x1a0
 80013ae:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 80013b0:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013b2:	f440 50c0 	orr.w	r0, r0, #6144	; 0x1800
 80013b6:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 80013b8:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80013ba:	f440 20b0 	orr.w	r0, r0, #360448	; 0x58000
 80013be:	6358      	str	r0, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 80013c0:	6858      	ldr	r0, [r3, #4]
 80013c2:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013c6:	6058      	str	r0, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 80013c8:	6898      	ldr	r0, [r3, #8]
 80013ca:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 80013ce:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 80013d0:	6898      	ldr	r0, [r3, #8]
 80013d2:	f040 60c0 	orr.w	r0, r0, #100663296	; 0x6000000
 80013d6:	6098      	str	r0, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 80013d8:	6898      	ldr	r0, [r3, #8]
 80013da:	f440 7080 	orr.w	r0, r0, #256	; 0x100
 80013de:	6098      	str	r0, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013e0:	9101      	str	r1, [sp, #4]
 80013e2:	6b10      	ldr	r0, [r2, #48]	; 0x30
 80013e4:	f440 0080 	orr.w	r0, r0, #4194304	; 0x400000
 80013e8:	6310      	str	r0, [r2, #48]	; 0x30
 80013ea:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80013ec:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80013f0:	9201      	str	r2, [sp, #4]
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013f2:	f503 33a1 	add.w	r3, r3, #82432	; 0x14200
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 80013f6:	9a01      	ldr	r2, [sp, #4]
 80013f8:	f884 1339 	strb.w	r1, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 80013fc:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80013fe:	f022 0201 	bic.w	r2, r2, #1
 8001402:	629a      	str	r2, [r3, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001404:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001406:	07d2      	lsls	r2, r2, #31
 8001408:	d4fc      	bmi.n	8001404 <MEAS_ADC3_scan_init+0x8c>
    {

    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 800140a:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    // Number of data items to transfer
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800140c:	4815      	ldr	r0, [pc, #84]	; (8001464 <MEAS_ADC3_scan_init+0xec>)
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800140e:	4916      	ldr	r1, [pc, #88]	; (8001468 <MEAS_ADC3_scan_init+0xf0>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001410:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001414:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001416:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001418:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 800141c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 800141e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001420:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001424:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001426:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001428:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800142c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 800142e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001430:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001434:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001436:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001438:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800143c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 800143e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 8001440:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001444:	f042 0210 	orr.w	r2, r2, #16
 8001448:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR = INPUT_COUNT * ADC_NUMS;
 800144a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 800144c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 800144e:	6359      	str	r1, [r3, #52]	; 0x34
}
 8001450:	b003      	add	sp, #12
 8001452:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001456:	4770      	bx	lr
 8001458:	40023800 	.word	0x40023800
 800145c:	40012200 	.word	0x40012200
 8001460:	e000e100 	.word	0xe000e100
 8001464:	4001224c 	.word	0x4001224c
 8001468:	20000444 	.word	0x20000444

0800146c <DMA2_Stream1_IRQHandler>:
 * The samples from the ADC3 have been transfered to memory by the DMA2 Stream1
 * and are ready for processing.
 *****************************************************************************/
void DMA2_Stream1_IRQHandler(void)
{
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 800146c:	4b1b      	ldr	r3, [pc, #108]	; (80014dc <DMA2_Stream1_IRQHandler+0x70>)
 800146e:	681a      	ldr	r2, [r3, #0]
 8001470:	0511      	lsls	r1, r2, #20
 8001472:	d400      	bmi.n	8001476 <DMA2_Stream1_IRQHandler+0xa>
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        MEAS_ADC_reset();
    }
}
 8001474:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001476:	4a1a      	ldr	r2, [pc, #104]	; (80014e0 <DMA2_Stream1_IRQHandler+0x74>)
 8001478:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 800147c:	f8c2 1084 	str.w	r1, [r2, #132]	; 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001480:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001484:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001488:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 800148c:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800148e:	f022 0201 	bic.w	r2, r2, #1
 8001492:	629a      	str	r2, [r3, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001494:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001496:	07d2      	lsls	r2, r2, #31
 8001498:	d4fc      	bmi.n	8001494 <DMA2_Stream1_IRQHandler+0x28>
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 800149a:	6899      	ldr	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 800149c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 80014a0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 80014a4:	6099      	str	r1, [r3, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014a6:	6813      	ldr	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014a8:	490e      	ldr	r1, [pc, #56]	; (80014e4 <DMA2_Stream1_IRQHandler+0x78>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 80014aa:	f023 0301 	bic.w	r3, r3, #1
 80014ae:	6013      	str	r3, [r2, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014b0:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014b2:	4b0d      	ldr	r3, [pc, #52]	; (80014e8 <DMA2_Stream1_IRQHandler+0x7c>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 80014b4:	f020 0001 	bic.w	r0, r0, #1
 80014b8:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 80014ba:	6888      	ldr	r0, [r1, #8]
 80014bc:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 80014c0:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 80014c2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014c4:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 80014c8:	6259      	str	r1, [r3, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 80014ca:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80014cc:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 80014d0:	6259      	str	r1, [r3, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 80014d2:	6813      	ldr	r3, [r2, #0]
 80014d4:	f023 0301 	bic.w	r3, r3, #1
 80014d8:	6013      	str	r3, [r2, #0]
}
 80014da:	4770      	bx	lr
 80014dc:	40026400 	.word	0x40026400
 80014e0:	e000e100 	.word	0xe000e100
 80014e4:	40012200 	.word	0x40012200
 80014e8:	40023800 	.word	0x40023800

080014ec <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 80014ec:	b510      	push	{r4, lr}
        buffer[i] = 0;
 80014ee:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80014f2:	2100      	movs	r1, #0
 80014f4:	480f      	ldr	r0, [pc, #60]	; (8001534 <MEAS_start_measure+0x48>)
 80014f6:	f02a fa38 	bl	802b96a <memset>
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);
	MEAS_ADC3_scan_init();
 80014fa:	f7ff ff3d 	bl	8001378 <MEAS_ADC3_scan_init>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 80014fe:	4a0e      	ldr	r2, [pc, #56]	; (8001538 <MEAS_start_measure+0x4c>)
 8001500:	490e      	ldr	r1, [pc, #56]	; (800153c <MEAS_start_measure+0x50>)
 8001502:	6a93      	ldr	r3, [r2, #40]	; 0x28
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001504:	480e      	ldr	r0, [pc, #56]	; (8001540 <MEAS_start_measure+0x54>)
 8001506:	f04f 7400 	mov.w	r4, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 800150a:	f043 0301 	orr.w	r3, r3, #1
 800150e:	6293      	str	r3, [r2, #40]	; 0x28
 8001510:	f8c1 4184 	str.w	r4, [r1, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001514:	604c      	str	r4, [r1, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001516:	6883      	ldr	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001518:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 800151c:	f043 0301 	orr.w	r3, r3, #1
 8001520:	6083      	str	r3, [r0, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001522:	680b      	ldr	r3, [r1, #0]
 8001524:	f043 0301 	orr.w	r3, r3, #1
 8001528:	600b      	str	r3, [r1, #0]
    MEAS_ADC3_scan_start();

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 800152a:	6a93      	ldr	r3, [r2, #40]	; 0x28
 800152c:	07db      	lsls	r3, r3, #31
 800152e:	d4fc      	bmi.n	800152a <MEAS_start_measure+0x3e>
	{

	}

     return ADC_samples;
}
 8001530:	4800      	ldr	r0, [pc, #0]	; (8001534 <MEAS_start_measure+0x48>)
 8001532:	bd10      	pop	{r4, pc}
 8001534:	20000444 	.word	0x20000444
 8001538:	40026400 	.word	0x40026400
 800153c:	e000e100 	.word	0xe000e100
 8001540:	40012200 	.word	0x40012200

08001544 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001544:	2004      	movs	r0, #4
 8001546:	4770      	bx	lr

08001548 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001548:	2040      	movs	r0, #64	; 0x40
 800154a:	4770      	bx	lr

0800154c <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 800154c:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001550:	4770      	bx	lr
 8001552:	bf00      	nop

08001554 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001554:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001556:	4b0e      	ldr	r3, [pc, #56]	; (8001590 <HAL_MspInit+0x3c>)
 8001558:	2200      	movs	r2, #0
 800155a:	9200      	str	r2, [sp, #0]
 800155c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800155e:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001562:	6459      	str	r1, [r3, #68]	; 0x44
 8001564:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001566:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 800156a:	9000      	str	r0, [sp, #0]
 800156c:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800156e:	9201      	str	r2, [sp, #4]
 8001570:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001572:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001576:	6418      	str	r0, [r3, #64]	; 0x40
 8001578:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800157a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800157e:	9301      	str	r3, [sp, #4]
 8001580:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001582:	210f      	movs	r1, #15
 8001584:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001588:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800158a:	f008 b9b5 	b.w	80098f8 <HAL_NVIC_SetPriority>
 800158e:	bf00      	nop
 8001590:	40023800 	.word	0x40023800

08001594 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001594:	4b0b      	ldr	r3, [pc, #44]	; (80015c4 <HAL_CRC_MspInit+0x30>)
 8001596:	6802      	ldr	r2, [r0, #0]
 8001598:	429a      	cmp	r2, r3
 800159a:	d000      	beq.n	800159e <HAL_CRC_MspInit+0xa>
 800159c:	4770      	bx	lr
{
 800159e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80015a0:	2200      	movs	r2, #0
 80015a2:	9201      	str	r2, [sp, #4]
 80015a4:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 80015a8:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80015ac:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 80015b0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80015b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015b6:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80015ba:	9301      	str	r3, [sp, #4]
 80015bc:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80015be:	b002      	add	sp, #8
 80015c0:	4770      	bx	lr
 80015c2:	bf00      	nop
 80015c4:	40023000 	.word	0x40023000

080015c8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80015c8:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 80015cc:	4b2e      	ldr	r3, [pc, #184]	; (8001688 <HAL_I2C_MspInit+0xc0>)
 80015ce:	6802      	ldr	r2, [r0, #0]
{
 80015d0:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015d2:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 80015d4:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80015d6:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80015da:	e9cd 4406 	strd	r4, r4, [sp, #24]
 80015de:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 80015e0:	d002      	beq.n	80015e8 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 80015e2:	b00a      	add	sp, #40	; 0x28
 80015e4:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015e8:	4d28      	ldr	r5, [pc, #160]	; (800168c <HAL_I2C_MspInit+0xc4>)
 80015ea:	9401      	str	r4, [sp, #4]
 80015ec:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015ee:	4828      	ldr	r0, [pc, #160]	; (8001690 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80015f0:	f043 0304 	orr.w	r3, r3, #4
 80015f4:	632b      	str	r3, [r5, #48]	; 0x30
 80015f6:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 80015f8:	f003 0304 	and.w	r3, r3, #4
 80015fc:	9301      	str	r3, [sp, #4]
 80015fe:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001600:	9402      	str	r4, [sp, #8]
 8001602:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001604:	f043 0301 	orr.w	r3, r3, #1
 8001608:	632b      	str	r3, [r5, #48]	; 0x30
 800160a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800160c:	f003 0301 	and.w	r3, r3, #1
 8001610:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001612:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001616:	f04f 0801 	mov.w	r8, #1
 800161a:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800161e:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001620:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001622:	2312      	movs	r3, #18
 8001624:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001628:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800162c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800162e:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001630:	f008 fbd0 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001634:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001636:	f44f 7280 	mov.w	r2, #256	; 0x100
 800163a:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800163c:	4815      	ldr	r0, [pc, #84]	; (8001694 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 800163e:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001640:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001644:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001648:	f008 fbc4 	bl	8009dd4 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 800164c:	9403      	str	r4, [sp, #12]
 800164e:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001650:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001654:	642b      	str	r3, [r5, #64]	; 0x40
 8001656:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001658:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 800165c:	4622      	mov	r2, r4
 800165e:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001660:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001662:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001664:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001666:	f008 f947 	bl	80098f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 800166a:	2048      	movs	r0, #72	; 0x48
 800166c:	f008 f982 	bl	8009974 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001670:	6a2b      	ldr	r3, [r5, #32]
 8001672:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001676:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001678:	6a2b      	ldr	r3, [r5, #32]
 800167a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800167e:	622b      	str	r3, [r5, #32]
}
 8001680:	b00a      	add	sp, #40	; 0x28
 8001682:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001686:	bf00      	nop
 8001688:	40005c00 	.word	0x40005c00
 800168c:	40023800 	.word	0x40023800
 8001690:	40020800 	.word	0x40020800
 8001694:	40020000 	.word	0x40020000

08001698 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800169c:	4604      	mov	r4, r0
 800169e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016a0:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016a2:	2230      	movs	r2, #48	; 0x30
 80016a4:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016a6:	e9cd 1108 	strd	r1, r1, [sp, #32]
 80016aa:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 80016ae:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016b0:	f02a f95b 	bl	802b96a <memset>
  if(hltdc->Instance==LTDC)
 80016b4:	4b67      	ldr	r3, [pc, #412]	; (8001854 <HAL_LTDC_MspInit+0x1bc>)
 80016b6:	6822      	ldr	r2, [r4, #0]
 80016b8:	429a      	cmp	r2, r3
 80016ba:	d002      	beq.n	80016c2 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80016bc:	b01a      	add	sp, #104	; 0x68
 80016be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016c2:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016c4:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016c6:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80016c8:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016ca:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016cc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80016d0:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80016d2:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80016d4:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80016d6:	f00a fde7 	bl	800c2a8 <HAL_RCCEx_PeriphCLKConfig>
 80016da:	2800      	cmp	r0, #0
 80016dc:	f040 80b7 	bne.w	800184e <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016e0:	4b5d      	ldr	r3, [pc, #372]	; (8001858 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80016e2:	485e      	ldr	r0, [pc, #376]	; (800185c <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 80016e4:	2400      	movs	r4, #0
 80016e6:	9401      	str	r4, [sp, #4]
 80016e8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016ea:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80016ee:	645a      	str	r2, [r3, #68]	; 0x44
 80016f0:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80016f2:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 80016f6:	9201      	str	r2, [sp, #4]
 80016f8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80016fa:	9402      	str	r4, [sp, #8]
 80016fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016fe:	f042 0220 	orr.w	r2, r2, #32
 8001702:	631a      	str	r2, [r3, #48]	; 0x30
 8001704:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001706:	f002 0220 	and.w	r2, r2, #32
 800170a:	9202      	str	r2, [sp, #8]
 800170c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800170e:	9403      	str	r4, [sp, #12]
 8001710:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001712:	f042 0201 	orr.w	r2, r2, #1
 8001716:	631a      	str	r2, [r3, #48]	; 0x30
 8001718:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800171a:	f002 0201 	and.w	r2, r2, #1
 800171e:	9203      	str	r2, [sp, #12]
 8001720:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001722:	9404      	str	r4, [sp, #16]
 8001724:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001726:	f042 0202 	orr.w	r2, r2, #2
 800172a:	631a      	str	r2, [r3, #48]	; 0x30
 800172c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800172e:	f002 0202 	and.w	r2, r2, #2
 8001732:	9204      	str	r2, [sp, #16]
 8001734:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001736:	9405      	str	r4, [sp, #20]
 8001738:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800173a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800173e:	631a      	str	r2, [r3, #48]	; 0x30
 8001740:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001742:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001746:	9205      	str	r2, [sp, #20]
 8001748:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800174a:	9406      	str	r4, [sp, #24]
 800174c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800174e:	f042 0204 	orr.w	r2, r2, #4
 8001752:	631a      	str	r2, [r3, #48]	; 0x30
 8001754:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001756:	f002 0204 	and.w	r2, r2, #4
 800175a:	9206      	str	r2, [sp, #24]
 800175c:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800175e:	9407      	str	r4, [sp, #28]
 8001760:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001762:	f042 0208 	orr.w	r2, r2, #8
 8001766:	631a      	str	r2, [r3, #48]	; 0x30
 8001768:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800176a:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 800176e:	2600      	movs	r6, #0
 8001770:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001772:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001774:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001776:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001778:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800177c:	2302      	movs	r3, #2
 800177e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001782:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001786:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001788:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800178a:	f008 fb23 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800178e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001790:	f641 0258 	movw	r2, #6232	; 0x1858
 8001794:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001796:	4832      	ldr	r0, [pc, #200]	; (8001860 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001798:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800179a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800179e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 80017a2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017a6:	f008 fb15 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017aa:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017ac:	2203      	movs	r2, #3
 80017ae:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017b0:	482c      	ldr	r0, [pc, #176]	; (8001864 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80017b2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80017b6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ba:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017be:	f008 fb09 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017c2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017c4:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 80017c8:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017ca:	4826      	ldr	r0, [pc, #152]	; (8001864 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017cc:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 80017ce:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017d2:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017d6:	f008 fafd 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017da:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017dc:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 80017e0:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017e2:	4821      	ldr	r0, [pc, #132]	; (8001868 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017e4:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 80017e6:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80017ea:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80017ee:	f008 faf1 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017f2:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017f4:	22c0      	movs	r2, #192	; 0xc0
 80017f6:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80017f8:	481c      	ldr	r0, [pc, #112]	; (800186c <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80017fa:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80017fc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001800:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001804:	f008 fae6 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001808:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800180a:	2208      	movs	r2, #8
 800180c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800180e:	4818      	ldr	r0, [pc, #96]	; (8001870 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001810:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001812:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001816:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800181a:	f008 fadb 	bl	8009dd4 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800181e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001820:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001822:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001826:	4810      	ldr	r0, [pc, #64]	; (8001868 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001828:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 800182c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001830:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001834:	f008 face 	bl	8009dd4 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001838:	4622      	mov	r2, r4
 800183a:	2105      	movs	r1, #5
 800183c:	2058      	movs	r0, #88	; 0x58
 800183e:	f008 f85b 	bl	80098f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001842:	2058      	movs	r0, #88	; 0x58
 8001844:	f008 f896 	bl	8009974 <HAL_NVIC_EnableIRQ>
}
 8001848:	b01a      	add	sp, #104	; 0x68
 800184a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 800184e:	f7ff fd39 	bl	80012c4 <Error_Handler>
 8001852:	e745      	b.n	80016e0 <HAL_LTDC_MspInit+0x48>
 8001854:	40016800 	.word	0x40016800
 8001858:	40023800 	.word	0x40023800
 800185c:	40021400 	.word	0x40021400
 8001860:	40020000 	.word	0x40020000
 8001864:	40020400 	.word	0x40020400
 8001868:	40021800 	.word	0x40021800
 800186c:	40020800 	.word	0x40020800
 8001870:	40020c00 	.word	0x40020c00
 8001874:	00000000 	.word	0x00000000

08001878 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001878:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800187a:	4a1b      	ldr	r2, [pc, #108]	; (80018e8 <HAL_SPI_MspInit+0x70>)
 800187c:	6801      	ldr	r1, [r0, #0]
{
 800187e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001880:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8001882:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001884:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8001888:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800188c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800188e:	d001      	beq.n	8001894 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001890:	b008      	add	sp, #32
 8001892:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001894:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8001898:	9300      	str	r3, [sp, #0]
 800189a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800189c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 80018a0:	6450      	str	r0, [r2, #68]	; 0x44
 80018a2:	6c50      	ldr	r0, [r2, #68]	; 0x44
 80018a4:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 80018a8:	9000      	str	r0, [sp, #0]
 80018aa:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018ac:	9301      	str	r3, [sp, #4]
 80018ae:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018b0:	480e      	ldr	r0, [pc, #56]	; (80018ec <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018b2:	f043 0320 	orr.w	r3, r3, #32
 80018b6:	6313      	str	r3, [r2, #48]	; 0x30
 80018b8:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018ba:	ed9f 7b09 	vldr	d7, [pc, #36]	; 80018e0 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018be:	f003 0320 	and.w	r3, r3, #32
 80018c2:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80018c4:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018c6:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018c8:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 80018ca:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80018ce:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80018d2:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80018d4:	f008 fa7e 	bl	8009dd4 <HAL_GPIO_Init>
}
 80018d8:	b008      	add	sp, #32
 80018da:	bd10      	pop	{r4, pc}
 80018dc:	f3af 8000 	nop.w
 80018e0:	00000380 	.word	0x00000380
 80018e4:	00000002 	.word	0x00000002
 80018e8:	40015000 	.word	0x40015000
 80018ec:	40021400 	.word	0x40021400

080018f0 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80018f0:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 80018f2:	4a21      	ldr	r2, [pc, #132]	; (8001978 <HAL_TIM_Base_MspInit+0x88>)
 80018f4:	6803      	ldr	r3, [r0, #0]
 80018f6:	4293      	cmp	r3, r2
{
 80018f8:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 80018fa:	d008      	beq.n	800190e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 80018fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001900:	d023      	beq.n	800194a <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8001902:	4a1e      	ldr	r2, [pc, #120]	; (800197c <HAL_TIM_Base_MspInit+0x8c>)
 8001904:	4293      	cmp	r3, r2
 8001906:	d011      	beq.n	800192c <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8001908:	b005      	add	sp, #20
 800190a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 800190e:	4b1c      	ldr	r3, [pc, #112]	; (8001980 <HAL_TIM_Base_MspInit+0x90>)
 8001910:	2200      	movs	r2, #0
 8001912:	9201      	str	r2, [sp, #4]
 8001914:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001916:	f042 0201 	orr.w	r2, r2, #1
 800191a:	645a      	str	r2, [r3, #68]	; 0x44
 800191c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800191e:	f003 0301 	and.w	r3, r3, #1
 8001922:	9301      	str	r3, [sp, #4]
 8001924:	9b01      	ldr	r3, [sp, #4]
}
 8001926:	b005      	add	sp, #20
 8001928:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 800192c:	4b14      	ldr	r3, [pc, #80]	; (8001980 <HAL_TIM_Base_MspInit+0x90>)
 800192e:	2200      	movs	r2, #0
 8001930:	9203      	str	r2, [sp, #12]
 8001932:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001934:	f042 0202 	orr.w	r2, r2, #2
 8001938:	641a      	str	r2, [r3, #64]	; 0x40
 800193a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800193c:	f003 0302 	and.w	r3, r3, #2
 8001940:	9303      	str	r3, [sp, #12]
 8001942:	9b03      	ldr	r3, [sp, #12]
}
 8001944:	b005      	add	sp, #20
 8001946:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 800194a:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 800194e:	2200      	movs	r2, #0
 8001950:	9202      	str	r2, [sp, #8]
 8001952:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001954:	f041 0101 	orr.w	r1, r1, #1
 8001958:	6419      	str	r1, [r3, #64]	; 0x40
 800195a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800195c:	f003 0301 	and.w	r3, r3, #1
 8001960:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001962:	201c      	movs	r0, #28
 8001964:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001966:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8001968:	f007 ffc6 	bl	80098f8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800196c:	201c      	movs	r0, #28
}
 800196e:	b005      	add	sp, #20
 8001970:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001974:	f007 bffe 	b.w	8009974 <HAL_NVIC_EnableIRQ>
 8001978:	40010000 	.word	0x40010000
 800197c:	40000400 	.word	0x40000400
 8001980:	40023800 	.word	0x40023800

08001984 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001984:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001986:	4b2b      	ldr	r3, [pc, #172]	; (8001a34 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001988:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800198a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800198c:	2200      	movs	r2, #0
 800198e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8001990:	2c00      	cmp	r4, #0
 8001992:	d14c      	bne.n	8001a2e <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8001994:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8001996:	4a28      	ldr	r2, [pc, #160]	; (8001a38 <HAL_SDRAM_MspInit+0xb4>)
 8001998:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800199a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800199c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800199e:	4827      	ldr	r0, [pc, #156]	; (8001a3c <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80019a0:	433b      	orrs	r3, r7
 80019a2:	6393      	str	r3, [r2, #56]	; 0x38
 80019a4:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80019a6:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019a8:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019aa:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019ac:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 80019b0:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019b2:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80019b4:	2302      	movs	r3, #2
 80019b6:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019ba:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 80019be:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80019c0:	f008 fa08 	bl	8009dd4 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019c4:	481e      	ldr	r0, [pc, #120]	; (8001a40 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 80019c6:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019c8:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019ca:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019cc:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019d0:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019d4:	f008 f9fe 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019d8:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019dc:	4819      	ldr	r0, [pc, #100]	; (8001a44 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 80019de:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019e0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e2:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019e6:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80019ea:	f008 f9f3 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019ee:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019f2:	4815      	ldr	r0, [pc, #84]	; (8001a48 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 80019f4:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80019f6:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019f8:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80019fc:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001a00:	f008 f9e8 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a04:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a08:	4810      	ldr	r0, [pc, #64]	; (8001a4c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001a0a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a0c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a0e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a12:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001a16:	f008 f9dd 	bl	8009dd4 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a1a:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a1c:	480c      	ldr	r0, [pc, #48]	; (8001a50 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a1e:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a20:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a22:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001a26:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001a28:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a2a:	f008 f9d3 	bl	8009dd4 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001a2e:	b009      	add	sp, #36	; 0x24
 8001a30:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a32:	bf00      	nop
 8001a34:	20000844 	.word	0x20000844
 8001a38:	40023800 	.word	0x40023800
 8001a3c:	40021400 	.word	0x40021400
 8001a40:	40020800 	.word	0x40020800
 8001a44:	40021800 	.word	0x40021800
 8001a48:	40021000 	.word	0x40021000
 8001a4c:	40020c00 	.word	0x40020c00
 8001a50:	40020400 	.word	0x40020400

08001a54 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001a54:	b570      	push	{r4, r5, r6, lr}
 8001a56:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a58:	4b23      	ldr	r3, [pc, #140]	; (8001ae8 <HAL_InitTick+0x94>)
 8001a5a:	2200      	movs	r2, #0
 8001a5c:	9202      	str	r2, [sp, #8]
 8001a5e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a60:	f042 0210 	orr.w	r2, r2, #16
 8001a64:	641a      	str	r2, [r3, #64]	; 0x40
 8001a66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a68:	f003 0310 	and.w	r3, r3, #16
 8001a6c:	9302      	str	r3, [sp, #8]
{
 8001a6e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a70:	a901      	add	r1, sp, #4
 8001a72:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001a74:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001a76:	f00a fbf5 	bl	800c264 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8001a7a:	9b06      	ldr	r3, [sp, #24]
 8001a7c:	b9d3      	cbnz	r3, 8001ab4 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8001a7e:	f00a fbe1 	bl	800c244 <HAL_RCC_GetPCLK1Freq>
 8001a82:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a84:	4a19      	ldr	r2, [pc, #100]	; (8001aec <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001a86:	4c1a      	ldr	r4, [pc, #104]	; (8001af0 <HAL_InitTick+0x9c>)
 8001a88:	491a      	ldr	r1, [pc, #104]	; (8001af4 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001a8a:	fba2 2303 	umull	r2, r3, r2, r3
 8001a8e:	0c9b      	lsrs	r3, r3, #18
 8001a90:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8001a92:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8001a94:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8001a98:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001a9a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 8001a9e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001aa0:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001aa2:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001aa4:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8001aa6:	f00b fa0d 	bl	800cec4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8001aaa:	4606      	mov	r6, r0
 8001aac:	b130      	cbz	r0, 8001abc <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 8001aae:	4630      	mov	r0, r6
 8001ab0:	b008      	add	sp, #32
 8001ab2:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001ab4:	f00a fbc6 	bl	800c244 <HAL_RCC_GetPCLK1Freq>
 8001ab8:	0043      	lsls	r3, r0, #1
 8001aba:	e7e3      	b.n	8001a84 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 8001abc:	4620      	mov	r0, r4
 8001abe:	f00b fa8f 	bl	800cfe0 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8001ac2:	4606      	mov	r6, r0
 8001ac4:	2800      	cmp	r0, #0
 8001ac6:	d1f2      	bne.n	8001aae <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001ac8:	2036      	movs	r0, #54	; 0x36
 8001aca:	f007 ff53 	bl	8009974 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001ace:	2d0f      	cmp	r5, #15
 8001ad0:	d901      	bls.n	8001ad6 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8001ad2:	2601      	movs	r6, #1
 8001ad4:	e7eb      	b.n	8001aae <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8001ad6:	4632      	mov	r2, r6
 8001ad8:	4629      	mov	r1, r5
 8001ada:	2036      	movs	r0, #54	; 0x36
 8001adc:	f007 ff0c 	bl	80098f8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001ae0:	4b05      	ldr	r3, [pc, #20]	; (8001af8 <HAL_InitTick+0xa4>)
 8001ae2:	601d      	str	r5, [r3, #0]
 8001ae4:	e7e3      	b.n	8001aae <HAL_InitTick+0x5a>
 8001ae6:	bf00      	nop
 8001ae8:	40023800 	.word	0x40023800
 8001aec:	431bde83 	.word	0x431bde83
 8001af0:	20000848 	.word	0x20000848
 8001af4:	40001000 	.word	0x40001000
 8001af8:	20000080 	.word	0x20000080

08001afc <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001afc:	4770      	bx	lr
 8001afe:	bf00      	nop

08001b00 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001b00:	e7fe      	b.n	8001b00 <HardFault_Handler>
 8001b02:	bf00      	nop

08001b04 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001b04:	e7fe      	b.n	8001b04 <MemManage_Handler>
 8001b06:	bf00      	nop

08001b08 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001b08:	e7fe      	b.n	8001b08 <BusFault_Handler>
 8001b0a:	bf00      	nop

08001b0c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001b0c:	e7fe      	b.n	8001b0c <UsageFault_Handler>
 8001b0e:	bf00      	nop

08001b10 <DebugMon_Handler>:
 8001b10:	4770      	bx	lr
 8001b12:	bf00      	nop

08001b14 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 8001b14:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 8001b16:	20c8      	movs	r0, #200	; 0xc8
 8001b18:	f007 feca 	bl	80098b0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8001b1c:	4804      	ldr	r0, [pc, #16]	; (8001b30 <EXTI3_IRQHandler+0x1c>)
 8001b1e:	2200      	movs	r2, #0
 8001b20:	2120      	movs	r1, #32
 8001b22:	f008 fa9b 	bl	800a05c <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 8001b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 8001b2a:	2008      	movs	r0, #8
 8001b2c:	f008 baa6 	b.w	800a07c <HAL_GPIO_EXTI_IRQHandler>
 8001b30:	40021000 	.word	0x40021000

08001b34 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001b34:	4801      	ldr	r0, [pc, #4]	; (8001b3c <TIM6_DAC_IRQHandler+0x8>)
 8001b36:	f00b bbd3 	b.w	800d2e0 <HAL_TIM_IRQHandler>
 8001b3a:	bf00      	nop
 8001b3c:	20000848 	.word	0x20000848

08001b40 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 8001b40:	4801      	ldr	r0, [pc, #4]	; (8001b48 <I2C3_EV_IRQHandler+0x8>)
 8001b42:	f009 b9fb 	b.w	800af3c <HAL_I2C_EV_IRQHandler>
 8001b46:	bf00      	nop
 8001b48:	200001e4 	.word	0x200001e4

08001b4c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001b4c:	4801      	ldr	r0, [pc, #4]	; (8001b54 <LTDC_IRQHandler+0x8>)
 8001b4e:	f009 bf6f 	b.w	800ba30 <HAL_LTDC_IRQHandler>
 8001b52:	bf00      	nop
 8001b54:	20000238 	.word	0x20000238

08001b58 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001b58:	2001      	movs	r0, #1
 8001b5a:	4770      	bx	lr

08001b5c <_kill>:

int _kill(int pid, int sig)
{
 8001b5c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b5e:	f029 fffd 	bl	802bb5c <__errno>
 8001b62:	2316      	movs	r3, #22
 8001b64:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001b66:	f04f 30ff 	mov.w	r0, #4294967295
 8001b6a:	bd08      	pop	{r3, pc}

08001b6c <_exit>:

void _exit (int status)
{
 8001b6c:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001b6e:	f029 fff5 	bl	802bb5c <__errno>
 8001b72:	2316      	movs	r3, #22
 8001b74:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001b76:	e7fe      	b.n	8001b76 <_exit+0xa>

08001b78 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001b78:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b7a:	1e16      	subs	r6, r2, #0
 8001b7c:	dd07      	ble.n	8001b8e <_read+0x16>
 8001b7e:	460c      	mov	r4, r1
 8001b80:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8001b82:	f3af 8000 	nop.w
 8001b86:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b8a:	42a5      	cmp	r5, r4
 8001b8c:	d1f9      	bne.n	8001b82 <_read+0xa>
	}

return len;
}
 8001b8e:	4630      	mov	r0, r6
 8001b90:	bd70      	pop	{r4, r5, r6, pc}
 8001b92:	bf00      	nop

08001b94 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001b94:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b96:	1e16      	subs	r6, r2, #0
 8001b98:	dd07      	ble.n	8001baa <_write+0x16>
 8001b9a:	460c      	mov	r4, r1
 8001b9c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 8001b9e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8001ba2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001ba6:	42ac      	cmp	r4, r5
 8001ba8:	d1f9      	bne.n	8001b9e <_write+0xa>
	}
	return len;
}
 8001baa:	4630      	mov	r0, r6
 8001bac:	bd70      	pop	{r4, r5, r6, pc}
 8001bae:	bf00      	nop

08001bb0 <_close>:

int _close(int file)
{
	return -1;
}
 8001bb0:	f04f 30ff 	mov.w	r0, #4294967295
 8001bb4:	4770      	bx	lr
 8001bb6:	bf00      	nop

08001bb8 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001bb8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001bbc:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001bbe:	2000      	movs	r0, #0
 8001bc0:	4770      	bx	lr
 8001bc2:	bf00      	nop

08001bc4 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001bc4:	2001      	movs	r0, #1
 8001bc6:	4770      	bx	lr

08001bc8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001bc8:	2000      	movs	r0, #0
 8001bca:	4770      	bx	lr

08001bcc <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001bcc:	4a0b      	ldr	r2, [pc, #44]	; (8001bfc <_sbrk+0x30>)
{
 8001bce:	b508      	push	{r3, lr}
 8001bd0:	4603      	mov	r3, r0
	if (heap_end == 0)
 8001bd2:	6810      	ldr	r0, [r2, #0]
 8001bd4:	b128      	cbz	r0, 8001be2 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8001bd6:	4403      	add	r3, r0
 8001bd8:	4669      	mov	r1, sp
 8001bda:	428b      	cmp	r3, r1
 8001bdc:	d807      	bhi.n	8001bee <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 8001bde:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8001be0:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8001be2:	4807      	ldr	r0, [pc, #28]	; (8001c00 <_sbrk+0x34>)
 8001be4:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8001be6:	4403      	add	r3, r0
 8001be8:	4669      	mov	r1, sp
 8001bea:	428b      	cmp	r3, r1
 8001bec:	d9f7      	bls.n	8001bde <_sbrk+0x12>
		errno = ENOMEM;
 8001bee:	f029 ffb5 	bl	802bb5c <__errno>
 8001bf2:	230c      	movs	r3, #12
 8001bf4:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001bf6:	f04f 30ff 	mov.w	r0, #4294967295
}
 8001bfa:	bd08      	pop	{r3, pc}
 8001bfc:	20000890 	.word	0x20000890
 8001c00:	20014428 	.word	0x20014428

08001c04 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8001c04:	4770      	bx	lr
 8001c06:	bf00      	nop

08001c08 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8001c08:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8001c0a:	f000 fbab 	bl	8002364 <touchgfx_components_init>
  touchgfx_init();
}
 8001c0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001c12:	f000 bb33 	b.w	800227c <touchgfx_init>
 8001c16:	bf00      	nop

08001c18 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001c18:	f000 bba6 	b.w	8002368 <touchgfx_taskEntry>

08001c1c <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8001c1c:	4770      	bx	lr

08001c1e <_ZN20STM32TouchControllerD0Ev>:
 8001c1e:	b510      	push	{r4, lr}
 8001c20:	2104      	movs	r1, #4
 8001c22:	4604      	mov	r4, r0
 8001c24:	f028 fe89 	bl	802a93a <_ZdlPvj>
 8001c28:	4620      	mov	r0, r4
 8001c2a:	bd10      	pop	{r4, pc}

08001c2c <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001c2c:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001c2e:	4b0c      	ldr	r3, [pc, #48]	; (8001c60 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c30:	4c0c      	ldr	r4, [pc, #48]	; (8001c64 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001c32:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001c34:	4b0c      	ldr	r3, [pc, #48]	; (8001c68 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c36:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 8001c38:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001c3a:	6863      	ldr	r3, [r4, #4]
 8001c3c:	4798      	blx	r3
 8001c3e:	f640 0311 	movw	r3, #2065	; 0x811
 8001c42:	4298      	cmp	r0, r3
 8001c44:	d10a      	bne.n	8001c5c <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 8001c46:	4d09      	ldr	r5, [pc, #36]	; (8001c6c <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c48:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 8001c4a:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8001c4c:	2082      	movs	r0, #130	; 0x82
 8001c4e:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8001c50:	682b      	ldr	r3, [r5, #0]
 8001c52:	2082      	movs	r0, #130	; 0x82
 8001c54:	68db      	ldr	r3, [r3, #12]
 8001c56:	4798      	blx	r3
 8001c58:	2000      	movs	r0, #0
    }

    return ret;
}
 8001c5a:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8001c5c:	2001      	movs	r0, #1
 8001c5e:	e7fc      	b.n	8001c5a <_Z11BSP_TS_Inittt+0x2e>
 8001c60:	20000894 	.word	0x20000894
 8001c64:	20000050 	.word	0x20000050
 8001c68:	20000896 	.word	0x20000896
 8001c6c:	20000898 	.word	0x20000898

08001c70 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8001c70:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8001c74:	20f0      	movs	r0, #240	; 0xf0
 8001c76:	f7ff bfd9 	b.w	8001c2c <_Z11BSP_TS_Inittt>
	...

08001c7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8001c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c7e:	4d33      	ldr	r5, [pc, #204]	; (8001d4c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 8001c80:	682b      	ldr	r3, [r5, #0]
{
 8001c82:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8001c84:	691b      	ldr	r3, [r3, #16]
 8001c86:	2082      	movs	r0, #130	; 0x82
 8001c88:	4798      	blx	r3
 8001c8a:	b280      	uxth	r0, r0
 8001c8c:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8001c8e:	2800      	cmp	r0, #0
 8001c90:	d04a      	beq.n	8001d28 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8001c92:	682b      	ldr	r3, [r5, #0]
 8001c94:	f10d 0206 	add.w	r2, sp, #6
 8001c98:	695b      	ldr	r3, [r3, #20]
 8001c9a:	a901      	add	r1, sp, #4
 8001c9c:	2082      	movs	r0, #130	; 0x82
 8001c9e:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 8001ca0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001ca4:	f640 6274 	movw	r2, #3700	; 0xe74
 8001ca8:	4293      	cmp	r3, r2
 8001caa:	d93f      	bls.n	8001d2c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8001cac:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 8001cb0:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001cb4:	1ad2      	subs	r2, r2, r3
 8001cb6:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8001cb8:	2a0a      	cmp	r2, #10
 8001cba:	d93d      	bls.n	8001d38 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8001cbc:	230b      	movs	r3, #11
 8001cbe:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001cc2:	4b23      	ldr	r3, [pc, #140]	; (8001d50 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8001cc4:	881b      	ldrh	r3, [r3, #0]
 8001cc6:	429a      	cmp	r2, r3
 8001cc8:	d901      	bls.n	8001cce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8001cca:	3b01      	subs	r3, #1
 8001ccc:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001cce:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001cd2:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8001cd6:	428b      	cmp	r3, r1
 8001cd8:	d830      	bhi.n	8001d3c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8001cda:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001cde:	330e      	adds	r3, #14
 8001ce0:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001ce2:	210f      	movs	r1, #15
 8001ce4:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8001ce8:	491a      	ldr	r1, [pc, #104]	; (8001d54 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8001cea:	8809      	ldrh	r1, [r1, #0]
 8001cec:	428b      	cmp	r3, r1
 8001cee:	d901      	bls.n	8001cf4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 8001cf0:	3901      	subs	r1, #1
 8001cf2:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cf4:	4e18      	ldr	r6, [pc, #96]	; (8001d58 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cf6:	4d19      	ldr	r5, [pc, #100]	; (8001d5c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cf8:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001cfa:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001cfc:	4283      	cmp	r3, r0
 8001cfe:	b281      	uxth	r1, r0
 8001d00:	bf8c      	ite	hi
 8001d02:	1a59      	subhi	r1, r3, r1
 8001d04:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d06:	b2b8      	uxth	r0, r7
 8001d08:	42ba      	cmp	r2, r7
 8001d0a:	bf8c      	ite	hi
 8001d0c:	1a10      	subhi	r0, r2, r0
 8001d0e:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001d10:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001d12:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 8001d14:	4401      	add	r1, r0
 8001d16:	2905      	cmp	r1, #5
        {
            _x = x;
 8001d18:	bfc8      	it	gt
 8001d1a:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001d1c:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001d1e:	bfc8      	it	gt
 8001d20:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001d22:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 8001d24:	682b      	ldr	r3, [r5, #0]
 8001d26:	80a3      	strh	r3, [r4, #4]
    }
}
 8001d28:	b003      	add	sp, #12
 8001d2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 8001d2c:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 8001d2e:	bf9c      	itt	ls
 8001d30:	23b4      	movls	r3, #180	; 0xb4
 8001d32:	f8ad 3006 	strhls.w	r3, [sp, #6]
 8001d36:	e7bb      	b.n	8001cb0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 8001d38:	2200      	movs	r2, #0
 8001d3a:	e7c8      	b.n	8001cce <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 8001d3c:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 8001d40:	3308      	adds	r3, #8
 8001d42:	b29b      	uxth	r3, r3
        if (xr <= 0)
 8001d44:	2b0e      	cmp	r3, #14
 8001d46:	d8cc      	bhi.n	8001ce2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 8001d48:	2300      	movs	r3, #0
 8001d4a:	e7d3      	b.n	8001cf4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 8001d4c:	20000898 	.word	0x20000898
 8001d50:	20000896 	.word	0x20000896
 8001d54:	20000894 	.word	0x20000894
 8001d58:	2000089c 	.word	0x2000089c
 8001d5c:	200008a0 	.word	0x200008a0

08001d60 <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 8001d60:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 8001d62:	4668      	mov	r0, sp
{
 8001d64:	460d      	mov	r5, r1
 8001d66:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8001d68:	f7ff ff88 	bl	8001c7c <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8001d6c:	f8bd 0000 	ldrh.w	r0, [sp]
 8001d70:	b148      	cbz	r0, 8001d86 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 8001d72:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8001d76:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8001d78:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001d7c:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 8001d7e:	4b03      	ldr	r3, [pc, #12]	; (8001d8c <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 8001d80:	223c      	movs	r2, #60	; 0x3c
 8001d82:	601a      	str	r2, [r3, #0]
        return true;
 8001d84:	2001      	movs	r0, #1
}
 8001d86:	b003      	add	sp, #12
 8001d88:	bd30      	pop	{r4, r5, pc}
 8001d8a:	bf00      	nop
 8001d8c:	2000000c 	.word	0x2000000c

08001d90 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001d90:	b110      	cbz	r0, 8001d98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8001d92:	2802      	cmp	r0, #2
 8001d94:	d009      	beq.n	8001daa <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8001d96:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001d98:	4b07      	ldr	r3, [pc, #28]	; (8001db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001d9a:	681a      	ldr	r2, [r3, #0]
 8001d9c:	fab2 f282 	clz	r2, r2
 8001da0:	0952      	lsrs	r2, r2, #5
 8001da2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001da4:	4805      	ldr	r0, [pc, #20]	; (8001dbc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8001da6:	f008 b959 	b.w	800a05c <HAL_GPIO_WritePin>
 8001daa:	4b03      	ldr	r3, [pc, #12]	; (8001db8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8001dac:	689a      	ldr	r2, [r3, #8]
 8001dae:	fab2 f282 	clz	r2, r2
 8001db2:	0952      	lsrs	r2, r2, #5
 8001db4:	2110      	movs	r1, #16
 8001db6:	e7f5      	b.n	8001da4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8001db8:	200008a4 	.word	0x200008a4
 8001dbc:	40021000 	.word	0x40021000

08001dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001dc0:	b110      	cbz	r0, 8001dc8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 8001dc2:	2802      	cmp	r0, #2
 8001dc4:	d009      	beq.n	8001dda <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8001dc6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001dc8:	4b07      	ldr	r3, [pc, #28]	; (8001de8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001dca:	681a      	ldr	r2, [r3, #0]
 8001dcc:	3a00      	subs	r2, #0
 8001dce:	bf18      	it	ne
 8001dd0:	2201      	movne	r2, #1
 8001dd2:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001dd4:	4805      	ldr	r0, [pc, #20]	; (8001dec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8001dd6:	f008 b941 	b.w	800a05c <HAL_GPIO_WritePin>
 8001dda:	4b03      	ldr	r3, [pc, #12]	; (8001de8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8001ddc:	689a      	ldr	r2, [r3, #8]
 8001dde:	3a00      	subs	r2, #0
 8001de0:	bf18      	it	ne
 8001de2:	2201      	movne	r2, #1
 8001de4:	2110      	movs	r1, #16
 8001de6:	e7f5      	b.n	8001dd4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8001de8:	200008a4 	.word	0x200008a4
 8001dec:	40021000 	.word	0x40021000

08001df0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001df0:	b110      	cbz	r0, 8001df8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 8001df2:	2802      	cmp	r0, #2
 8001df4:	d004      	beq.n	8001e00 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8001df6:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001df8:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001dfa:	4802      	ldr	r0, [pc, #8]	; (8001e04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8001dfc:	f008 b932 	b.w	800a064 <HAL_GPIO_TogglePin>
 8001e00:	2110      	movs	r1, #16
 8001e02:	e7fa      	b.n	8001dfa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 8001e04:	40021000 	.word	0x40021000

08001e08 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001e08:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001e0a:	b130      	cbz	r0, 8001e1a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 8001e0c:	2802      	cmp	r0, #2
 8001e0e:	d009      	beq.n	8001e24 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 8001e10:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001e12:	1e43      	subs	r3, r0, #1
 8001e14:	4258      	negs	r0, r3
 8001e16:	4158      	adcs	r0, r3
 8001e18:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001e1a:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e1c:	4802      	ldr	r0, [pc, #8]	; (8001e28 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 8001e1e:	f008 f917 	bl	800a050 <HAL_GPIO_ReadPin>
        break;
 8001e22:	e7f6      	b.n	8001e12 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001e24:	2110      	movs	r1, #16
 8001e26:	e7f9      	b.n	8001e1c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 8001e28:	40021000 	.word	0x40021000

08001e2c <_ZN8touchgfx4GPIO4initEv>:
{
 8001e2c:	b570      	push	{r4, r5, r6, lr}
 8001e2e:	4d08      	ldr	r5, [pc, #32]	; (8001e50 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001e30:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001e32:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001e34:	b2e0      	uxtb	r0, r4
 8001e36:	f7ff ffe7 	bl	8001e08 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001e3a:	b118      	cbz	r0, 8001e44 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001e3c:	682b      	ldr	r3, [r5, #0]
 8001e3e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001e40:	bf18      	it	ne
 8001e42:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001e44:	3401      	adds	r4, #1
 8001e46:	2c05      	cmp	r4, #5
 8001e48:	f105 0504 	add.w	r5, r5, #4
 8001e4c:	d1f2      	bne.n	8001e34 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8001e4e:	bd70      	pop	{r4, r5, r6, pc}
 8001e50:	200008a4 	.word	0x200008a4

08001e54 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8001e54:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8001e56:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8001e5a:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8001e5e:	4770      	bx	lr

08001e60 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001e60:	2000      	movs	r0, #0
 8001e62:	4770      	bx	lr

08001e64 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e64:	4b03      	ldr	r3, [pc, #12]	; (8001e74 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8001e66:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001e68:	3900      	subs	r1, #0
 8001e6a:	bf18      	it	ne
 8001e6c:	2101      	movne	r1, #1
 8001e6e:	7019      	strb	r1, [r3, #0]
    }
 8001e70:	4770      	bx	lr
 8001e72:	bf00      	nop
 8001e74:	200137eb 	.word	0x200137eb

08001e78 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001e78:	2000      	movs	r0, #0
 8001e7a:	4770      	bx	lr

08001e7c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001e7c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001e7e:	b10b      	cbz	r3, 8001e84 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001e80:	4608      	mov	r0, r1
 8001e82:	4718      	bx	r3
        }
    }
 8001e84:	4770      	bx	lr

08001e86 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001e86:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001e8a:	4770      	bx	lr

08001e8c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001e8c:	6840      	ldr	r0, [r0, #4]
 8001e8e:	6803      	ldr	r3, [r0, #0]
 8001e90:	699b      	ldr	r3, [r3, #24]
 8001e92:	4718      	bx	r3

08001e94 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001e94:	4770      	bx	lr

08001e96 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001e96:	4770      	bx	lr

08001e98 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001e98:	4770      	bx	lr
	...

08001e9c <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8001e9c:	b510      	push	{r4, lr}
 8001e9e:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001ea0:	f000 fb4e 	bl	8002540 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8001ea4:	6823      	ldr	r3, [r4, #0]
 8001ea6:	4903      	ldr	r1, [pc, #12]	; (8001eb4 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8001ea8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001eac:	4620      	mov	r0, r4
}
 8001eae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 8001eb2:	4718      	bx	r3
 8001eb4:	d0000000 	.word	0xd0000000

08001eb8 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001eb8:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001eba:	6803      	ldr	r3, [r0, #0]
{
 8001ebc:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001ebe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001ec2:	4798      	blx	r3
    enableInterrupts();
 8001ec4:	6823      	ldr	r3, [r4, #0]
 8001ec6:	4620      	mov	r0, r4
 8001ec8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001eca:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001ecc:	f000 f8ec 	bl	80020a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001ed0:	6823      	ldr	r3, [r4, #0]
 8001ed2:	4620      	mov	r0, r4
 8001ed4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ed6:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001ed8:	2029      	movs	r0, #41	; 0x29
 8001eda:	f7ff f97f 	bl	80011dc <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001ede:	f000 f8e3 	bl	80020a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001ee2:	6823      	ldr	r3, [r4, #0]
 8001ee4:	4620      	mov	r0, r4
 8001ee6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001ee8:	4798      	blx	r3
    for (;;)
 8001eea:	e7f8      	b.n	8001ede <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08001eec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001eec:	b510      	push	{r4, lr}
 8001eee:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001ef0:	f010 f834 	bl	8011f5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001ef4:	6823      	ldr	r3, [r4, #0]
 8001ef6:	4620      	mov	r0, r4
 8001ef8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001efc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001f00:	4718      	bx	r3

08001f02 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8001f02:	f000 bb0f 	b.w	8002524 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001f06 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001f06:	f000 bb13 	b.w	8002530 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001f0a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001f0a:	f000 bb37 	b.w	800257c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08001f0e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8001f0e:	f000 badf 	b.w	80024d0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001f12 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001f12:	f000 bae5 	b.w	80024e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001f16 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001f16:	f000 bb3d 	b.w	8002594 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

08001f1a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001f1a:	f000 bae9 	b.w	80024f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001f1e <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001f1e:	f00f ba88 	b.w	8011432 <_ZN8touchgfx3HAL16flushFrameBufferEv>

08001f22 <_ZN11TouchGFXHALD0Ev>:
 8001f22:	b510      	push	{r4, lr}
 8001f24:	217c      	movs	r1, #124	; 0x7c
 8001f26:	4604      	mov	r4, r0
 8001f28:	f028 fd07 	bl	802a93a <_ZdlPvj>
 8001f2c:	4620      	mov	r0, r4
 8001f2e:	bd10      	pop	{r4, pc}

08001f30 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001f30:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8001f34:	b11b      	cbz	r3, 8001f3e <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001f36:	6840      	ldr	r0, [r0, #4]
 8001f38:	6803      	ldr	r3, [r0, #0]
 8001f3a:	681b      	ldr	r3, [r3, #0]
 8001f3c:	4718      	bx	r3
    }
 8001f3e:	4618      	mov	r0, r3
 8001f40:	4770      	bx	lr
	...

08001f44 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8001f44:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001f46:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001f4a:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001f4e:	4b0c      	ldr	r3, [pc, #48]	; (8001f80 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001f50:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001f52:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001f54:	d009      	beq.n	8001f6a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001f56:	b93a      	cbnz	r2, 8001f68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f58:	4a0a      	ldr	r2, [pc, #40]	; (8001f84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f5a:	490b      	ldr	r1, [pc, #44]	; (8001f88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f5c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001f5e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001f60:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f62:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001f64:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001f66:	701a      	strb	r2, [r3, #0]
    }
 8001f68:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001f6a:	2a00      	cmp	r2, #0
 8001f6c:	d0fc      	beq.n	8001f68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f6e:	4a05      	ldr	r2, [pc, #20]	; (8001f84 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f70:	4905      	ldr	r1, [pc, #20]	; (8001f88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f72:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001f74:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001f76:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001f78:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001f7a:	2200      	movs	r2, #0
 8001f7c:	e7f3      	b.n	8001f66 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001f7e:	bf00      	nop
 8001f80:	200137e4 	.word	0x200137e4
 8001f84:	200137e0 	.word	0x200137e0
 8001f88:	200137e2 	.word	0x200137e2

08001f8c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001f8c:	b570      	push	{r4, r5, r6, lr}
 8001f8e:	460d      	mov	r5, r1
 8001f90:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001f92:	b935      	cbnz	r5, 8001fa2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001f94:	4b09      	ldr	r3, [pc, #36]	; (8001fbc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001f96:	4a0a      	ldr	r2, [pc, #40]	; (8001fc0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001f98:	480a      	ldr	r0, [pc, #40]	; (8001fc4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001f9a:	f240 21d2 	movw	r1, #722	; 0x2d2
 8001f9e:	f029 fadf 	bl	802b560 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001fa2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001fa6:	4b08      	ldr	r3, [pc, #32]	; (8001fc8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001fa8:	3a00      	subs	r2, #0
 8001faa:	bf18      	it	ne
 8001fac:	2201      	movne	r2, #1
 8001fae:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001fb0:	6803      	ldr	r3, [r0, #0]
    }
 8001fb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001fb6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8001fba:	4718      	bx	r3
 8001fbc:	0802c788 	.word	0x0802c788
 8001fc0:	0802c7c0 	.word	0x0802c7c0
 8001fc4:	0802c80e 	.word	0x0802c80e
 8001fc8:	200137ea 	.word	0x200137ea

08001fcc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001fcc:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001fce:	4b09      	ldr	r3, [pc, #36]	; (8001ff4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001fd0:	881b      	ldrh	r3, [r3, #0]
 8001fd2:	428b      	cmp	r3, r1
 8001fd4:	d803      	bhi.n	8001fde <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001fd6:	4b08      	ldr	r3, [pc, #32]	; (8001ff8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001fd8:	881b      	ldrh	r3, [r3, #0]
 8001fda:	4293      	cmp	r3, r2
 8001fdc:	d905      	bls.n	8001fea <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001fde:	4b07      	ldr	r3, [pc, #28]	; (8001ffc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001fe0:	4a07      	ldr	r2, [pc, #28]	; (8002000 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001fe2:	4808      	ldr	r0, [pc, #32]	; (8002004 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001fe4:	219e      	movs	r1, #158	; 0x9e
 8001fe6:	f029 fabb 	bl	802b560 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001fea:	4b07      	ldr	r3, [pc, #28]	; (8002008 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001fec:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001fee:	4b07      	ldr	r3, [pc, #28]	; (800200c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001ff0:	801a      	strh	r2, [r3, #0]
    }
 8001ff2:	bd08      	pop	{r3, pc}
 8001ff4:	200137e0 	.word	0x200137e0
 8001ff8:	200137e2 	.word	0x200137e2
 8001ffc:	0802c853 	.word	0x0802c853
 8002000:	0802c8b6 	.word	0x0802c8b6
 8002004:	0802c80e 	.word	0x0802c80e
 8002008:	200137e6 	.word	0x200137e6
 800200c:	200137e8 	.word	0x200137e8

08002010 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002010:	2101      	movs	r1, #1
{
 8002012:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8002014:	2200      	movs	r2, #0
 8002016:	4608      	mov	r0, r1
 8002018:	f00b fba4 	bl	800d764 <osSemaphoreNew>
 800201c:	4b0a      	ldr	r3, [pc, #40]	; (8002048 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800201e:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8002020:	b928      	cbnz	r0, 800202e <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8002022:	4b0a      	ldr	r3, [pc, #40]	; (800204c <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8002024:	4a0a      	ldr	r2, [pc, #40]	; (8002050 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002026:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8002028:	480a      	ldr	r0, [pc, #40]	; (8002054 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 800202a:	f029 fa99 	bl	802b560 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800202e:	2200      	movs	r2, #0
 8002030:	2104      	movs	r1, #4
 8002032:	2001      	movs	r0, #1
 8002034:	f00b fc4a 	bl	800d8cc <osMessageQueueNew>
 8002038:	4b07      	ldr	r3, [pc, #28]	; (8002058 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 800203a:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 800203c:	b918      	cbnz	r0, 8002046 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800203e:	4b07      	ldr	r3, [pc, #28]	; (800205c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8002040:	4a03      	ldr	r2, [pc, #12]	; (8002050 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8002042:	212c      	movs	r1, #44	; 0x2c
 8002044:	e7f0      	b.n	8002028 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8002046:	bd08      	pop	{r3, pc}
 8002048:	200008b8 	.word	0x200008b8
 800204c:	0802c9d4 	.word	0x0802c9d4
 8002050:	0802ca1d 	.word	0x0802ca1d
 8002054:	0802ca4c 	.word	0x0802ca4c
 8002058:	200008b4 	.word	0x200008b4
 800205c:	0802cac6 	.word	0x0802cac6

08002060 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8002060:	4b02      	ldr	r3, [pc, #8]	; (800206c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8002062:	f04f 31ff 	mov.w	r1, #4294967295
 8002066:	6818      	ldr	r0, [r3, #0]
 8002068:	f00b bbd0 	b.w	800d80c <osSemaphoreAcquire>
 800206c:	200008b8 	.word	0x200008b8

08002070 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8002070:	4b01      	ldr	r3, [pc, #4]	; (8002078 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8002072:	6818      	ldr	r0, [r3, #0]
 8002074:	f00b bbfe 	b.w	800d874 <osSemaphoreRelease>
 8002078:	200008b8 	.word	0x200008b8

0800207c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800207c:	4b02      	ldr	r3, [pc, #8]	; (8002088 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800207e:	2100      	movs	r1, #0
 8002080:	6818      	ldr	r0, [r3, #0]
 8002082:	f00b bbc3 	b.w	800d80c <osSemaphoreAcquire>
 8002086:	bf00      	nop
 8002088:	200008b8 	.word	0x200008b8

0800208c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800208c:	f7ff bff0 	b.w	8002070 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08002090 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8002090:	4803      	ldr	r0, [pc, #12]	; (80020a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8002092:	4904      	ldr	r1, [pc, #16]	; (80020a4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8002094:	6800      	ldr	r0, [r0, #0]
 8002096:	2300      	movs	r3, #0
 8002098:	461a      	mov	r2, r3
 800209a:	f00b bc51 	b.w	800d940 <osMessageQueuePut>
 800209e:	bf00      	nop
 80020a0:	200008b4 	.word	0x200008b4
 80020a4:	20000010 	.word	0x20000010

080020a8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80020a8:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80020aa:	4c08      	ldr	r4, [pc, #32]	; (80020cc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80020ac:	2300      	movs	r3, #0
 80020ae:	461a      	mov	r2, r3
 80020b0:	a901      	add	r1, sp, #4
 80020b2:	6820      	ldr	r0, [r4, #0]
 80020b4:	f00b fc7a 	bl	800d9ac <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80020b8:	6820      	ldr	r0, [r4, #0]
 80020ba:	f04f 33ff 	mov.w	r3, #4294967295
 80020be:	2200      	movs	r2, #0
 80020c0:	a901      	add	r1, sp, #4
 80020c2:	f00b fc73 	bl	800d9ac <osMessageQueueGet>
}
 80020c6:	b002      	add	sp, #8
 80020c8:	bd10      	pop	{r4, pc}
 80020ca:	bf00      	nop
 80020cc:	200008b4 	.word	0x200008b4

080020d0 <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 80020d0:	4770      	bx	lr

080020d2 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 80020d2:	2000      	movs	r0, #0
 80020d4:	4770      	bx	lr

080020d6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 80020d6:	4770      	bx	lr

080020d8 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 80020d8:	4770      	bx	lr

080020da <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 80020da:	2000      	movs	r0, #0
 80020dc:	4770      	bx	lr

080020de <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 80020de:	4770      	bx	lr

080020e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 80020e0:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020e2:	4a03      	ldr	r2, [pc, #12]	; (80020f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 80020e4:	4b03      	ldr	r3, [pc, #12]	; (80020f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 80020e6:	4804      	ldr	r0, [pc, #16]	; (80020f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 80020e8:	2122      	movs	r1, #34	; 0x22
 80020ea:	f029 fa39 	bl	802b560 <__assert_func>
 80020ee:	bf00      	nop
 80020f0:	0802cb2b 	.word	0x0802cb2b
 80020f4:	0802cb08 	.word	0x0802cb08
 80020f8:	0802cb69 	.word	0x0802cb69

080020fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 80020fc:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 80020fe:	4a03      	ldr	r2, [pc, #12]	; (800210c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8002100:	4b03      	ldr	r3, [pc, #12]	; (8002110 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8002102:	4804      	ldr	r0, [pc, #16]	; (8002114 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8002104:	2127      	movs	r1, #39	; 0x27
 8002106:	f029 fa2b 	bl	802b560 <__assert_func>
 800210a:	bf00      	nop
 800210c:	0802cbe1 	.word	0x0802cbe1
 8002110:	0802cb08 	.word	0x0802cb08
 8002114:	0802cb69 	.word	0x0802cb69

08002118 <_ZN8STM32DMAD0Ev>:
 8002118:	b510      	push	{r4, lr}
 800211a:	2144      	movs	r1, #68	; 0x44
 800211c:	4604      	mov	r4, r0
 800211e:	f028 fc0c 	bl	802a93a <_ZdlPvj>
 8002122:	4620      	mov	r0, r4
 8002124:	bd10      	pop	{r4, pc}
	...

08002128 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8002128:	b538      	push	{r3, r4, r5, lr}
 800212a:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 800212c:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800212e:	2500      	movs	r5, #0
 8002130:	4b06      	ldr	r3, [pc, #24]	; (800214c <_ZN8STM32DMAC1Ev+0x24>)
 8002132:	7225      	strb	r5, [r4, #8]
 8002134:	300c      	adds	r0, #12
 8002136:	6060      	str	r0, [r4, #4]
 8002138:	7265      	strb	r5, [r4, #9]
 800213a:	2201      	movs	r2, #1
 800213c:	f841 3b20 	str.w	r3, [r1], #32
 8002140:	f010 f864 	bl	801220c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8002144:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8002146:	4620      	mov	r0, r4
 8002148:	bd38      	pop	{r3, r4, r5, pc}
 800214a:	bf00      	nop
 800214c:	0802cc28 	.word	0x0802cc28

08002150 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8002150:	2001      	movs	r0, #1
 8002152:	4770      	bx	lr

08002154 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8002154:	2038      	movs	r0, #56	; 0x38
 8002156:	4770      	bx	lr

08002158 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8002158:	2338      	movs	r3, #56	; 0x38
 800215a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800215e:	3008      	adds	r0, #8
 8002160:	4770      	bx	lr

08002162 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8002162:	2338      	movs	r3, #56	; 0x38
 8002164:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8002168:	3008      	adds	r0, #8
 800216a:	4770      	bx	lr

0800216c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800216c:	2001      	movs	r0, #1
 800216e:	4770      	bx	lr

08002170 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002170:	f641 5004 	movw	r0, #7428	; 0x1d04
 8002174:	4770      	bx	lr

08002176 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002176:	f641 5304 	movw	r3, #7428	; 0x1d04
 800217a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800217e:	3008      	adds	r0, #8
 8002180:	4770      	bx	lr

08002182 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002182:	f641 5304 	movw	r3, #7428	; 0x1d04
 8002186:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800218a:	3008      	adds	r0, #8
 800218c:	4770      	bx	lr

0800218e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 800218e:	2001      	movs	r0, #1
 8002190:	4770      	bx	lr

08002192 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8002192:	2010      	movs	r0, #16
 8002194:	4770      	bx	lr

08002196 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8002196:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800219a:	3008      	adds	r0, #8
 800219c:	4770      	bx	lr

0800219e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800219e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80021a2:	3008      	adds	r0, #8
 80021a4:	4770      	bx	lr

080021a6 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMain_MenuScreenNoTransition();
 80021a6:	4608      	mov	r0, r1
 80021a8:	f002 bb8c 	b.w	80048c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>

080021ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80021ac:	b510      	push	{r4, lr}
 80021ae:	4b03      	ldr	r3, [pc, #12]	; (80021bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80021b0:	6003      	str	r3, [r0, #0]
 80021b2:	4604      	mov	r4, r0
 80021b4:	f00e f853 	bl	801025e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021b8:	4620      	mov	r0, r4
 80021ba:	bd10      	pop	{r4, pc}
 80021bc:	0802cce0 	.word	0x0802cce0

080021c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80021c0:	b510      	push	{r4, lr}
 80021c2:	4604      	mov	r4, r0
 80021c4:	f7ff fff2 	bl	80021ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80021c8:	4620      	mov	r0, r4
 80021ca:	2140      	movs	r1, #64	; 0x40
 80021cc:	f028 fbb5 	bl	802a93a <_ZdlPvj>
 80021d0:	4620      	mov	r0, r4
 80021d2:	bd10      	pop	{r4, pc}

080021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80021d4:	b510      	push	{r4, lr}
 80021d6:	4b03      	ldr	r3, [pc, #12]	; (80021e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80021d8:	6003      	str	r3, [r0, #0]
 80021da:	4604      	mov	r4, r0
 80021dc:	f00e f83f 	bl	801025e <_ZN8touchgfx17AbstractPartitionD1Ev>
 80021e0:	4620      	mov	r0, r4
 80021e2:	bd10      	pop	{r4, pc}
 80021e4:	0802ccac 	.word	0x0802ccac

080021e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80021e8:	b510      	push	{r4, lr}
 80021ea:	4604      	mov	r4, r0
 80021ec:	f7ff fff2 	bl	80021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80021f0:	4620      	mov	r0, r4
 80021f2:	f641 510c 	movw	r1, #7436	; 0x1d0c
 80021f6:	f028 fba0 	bl	802a93a <_ZdlPvj>
 80021fa:	4620      	mov	r0, r4
 80021fc:	bd10      	pop	{r4, pc}
	...

08002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8002200:	b510      	push	{r4, lr}
 8002202:	4b03      	ldr	r3, [pc, #12]	; (8002210 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8002204:	6003      	str	r3, [r0, #0]
 8002206:	4604      	mov	r4, r0
 8002208:	f00e f829 	bl	801025e <_ZN8touchgfx17AbstractPartitionD1Ev>
 800220c:	4620      	mov	r0, r4
 800220e:	bd10      	pop	{r4, pc}
 8002210:	0802cc78 	.word	0x0802cc78

08002214 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8002214:	b510      	push	{r4, lr}
 8002216:	4604      	mov	r4, r0
 8002218:	f7ff fff2 	bl	8002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800221c:	4620      	mov	r0, r4
 800221e:	2118      	movs	r1, #24
 8002220:	f028 fb8b 	bl	802a93a <_ZdlPvj>
 8002224:	4620      	mov	r0, r4
 8002226:	bd10      	pop	{r4, pc}

08002228 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8002228:	b510      	push	{r4, lr}
 800222a:	4b09      	ldr	r3, [pc, #36]	; (8002250 <_ZN12FrontendHeapD1Ev+0x28>)
 800222c:	6003      	str	r3, [r0, #0]
 800222e:	4604      	mov	r4, r0
 8002230:	f500 50e9 	add.w	r0, r0, #7456	; 0x1d20
 8002234:	3018      	adds	r0, #24
 8002236:	f7ff ffb9 	bl	80021ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 800223a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800223e:	f7ff ffc9 	bl	80021d4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19Calibration_PadViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8002242:	f104 0014 	add.w	r0, r4, #20
 8002246:	f7ff ffdb 	bl	8002200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800224a:	4620      	mov	r0, r4
 800224c:	bd10      	pop	{r4, pc}
 800224e:	bf00      	nop
 8002250:	0802cd14 	.word	0x0802cd14

08002254 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8002254:	b508      	push	{r3, lr}
 8002256:	4802      	ldr	r0, [pc, #8]	; (8002260 <__tcf_0+0xc>)
 8002258:	f7ff ffe6 	bl	8002228 <_ZN12FrontendHeapD1Ev>
 800225c:	bd08      	pop	{r3, pc}
 800225e:	bf00      	nop
 8002260:	200008c0 	.word	0x200008c0

08002264 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8002264:	b510      	push	{r4, lr}
 8002266:	4604      	mov	r4, r0
 8002268:	f7ff ffde 	bl	8002228 <_ZN12FrontendHeapD1Ev>
 800226c:	4620      	mov	r0, r4
 800226e:	f641 61dc 	movw	r1, #7900	; 0x1edc
 8002272:	f028 fb62 	bl	802a93a <_ZdlPvj>
 8002276:	4620      	mov	r0, r4
 8002278:	bd10      	pop	{r4, pc}
	...

0800227c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 800227c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8002280:	f000 fa5c 	bl	800273c <_ZN14BitmapDatabase11getInstanceEv>
 8002284:	4605      	mov	r5, r0
 8002286:	f000 fa5d 	bl	8002744 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800228a:	2400      	movs	r4, #0
 800228c:	4601      	mov	r1, r0
 800228e:	4623      	mov	r3, r4
 8002290:	4628      	mov	r0, r5
 8002292:	4622      	mov	r2, r4
 8002294:	9400      	str	r4, [sp, #0]
 8002296:	f017 fed7 	bl	801a048 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 800229a:	4b26      	ldr	r3, [pc, #152]	; (8002334 <touchgfx_init+0xb8>)
 800229c:	4a26      	ldr	r2, [pc, #152]	; (8002338 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 800229e:	4d27      	ldr	r5, [pc, #156]	; (800233c <touchgfx_init+0xc0>)
 80022a0:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80022a2:	4620      	mov	r0, r4
 80022a4:	f006 fb14 	bl	80088d0 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80022a8:	4825      	ldr	r0, [pc, #148]	; (8002340 <touchgfx_init+0xc4>)
 80022aa:	f017 fe35 	bl	8019f18 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80022ae:	682b      	ldr	r3, [r5, #0]
 80022b0:	f3bf 8f5b 	dmb	ish
 80022b4:	07db      	lsls	r3, r3, #31
 80022b6:	d436      	bmi.n	8002326 <touchgfx_init+0xaa>
 80022b8:	4628      	mov	r0, r5
 80022ba:	f028 fb40 	bl	802a93e <__cxa_guard_acquire>
 80022be:	b390      	cbz	r0, 8002326 <touchgfx_init+0xaa>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 80022c0:	4c20      	ldr	r4, [pc, #128]	; (8002344 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 80022c2:	4b21      	ldr	r3, [pc, #132]	; (8002348 <touchgfx_init+0xcc>)
          screenStorage(scr),
          transitionStorage(tra),
 80022c4:	4f21      	ldr	r7, [pc, #132]	; (800234c <touchgfx_init+0xd0>)
 80022c6:	6023      	str	r3, [r4, #0]
          frontendApplication(app)
 80022c8:	f504 56ec 	add.w	r6, r4, #7552	; 0x1d80
        : presenterStorage(pres),
 80022cc:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 80022d0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
        : presenterStorage(pres),
 80022d4:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 80022d6:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 80022da:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 80022dc:	6126      	str	r6, [r4, #16]
 80022de:	f00d ffbf 	bl	8010260 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022e2:	4b1b      	ldr	r3, [pc, #108]	; (8002350 <touchgfx_init+0xd4>)
 80022e4:	6163      	str	r3, [r4, #20]
 80022e6:	4640      	mov	r0, r8
 80022e8:	f00d ffba 	bl	8010260 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022ec:	4b19      	ldr	r3, [pc, #100]	; (8002354 <touchgfx_init+0xd8>)
 80022ee:	62e3      	str	r3, [r4, #44]	; 0x2c
 80022f0:	4638      	mov	r0, r7
 80022f2:	f00d ffb5 	bl	8010260 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80022f6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80022fa:	4a17      	ldr	r2, [pc, #92]	; (8002358 <touchgfx_init+0xdc>)
 80022fc:	f8c3 2d38 	str.w	r2, [r3, #3384]	; 0xd38
 8002300:	f603 5078 	addw	r0, r3, #3448	; 0xd78
 8002304:	f006 ff5a 	bl	80091bc <_ZN5ModelC1Ev>
 8002308:	4622      	mov	r2, r4
 800230a:	f1a6 0108 	sub.w	r1, r6, #8
 800230e:	4630      	mov	r0, r6
 8002310:	f006 fc64 	bl	8008bdc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8002314:	4630      	mov	r0, r6
 8002316:	f002 fad5 	bl	80048c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>
        static FrontendHeap instance;
 800231a:	4810      	ldr	r0, [pc, #64]	; (800235c <touchgfx_init+0xe0>)
 800231c:	f029 f93e 	bl	802b59c <atexit>
 8002320:	4628      	mov	r0, r5
 8002322:	f028 fb18 	bl	802a956 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8002326:	480e      	ldr	r0, [pc, #56]	; (8002360 <touchgfx_init+0xe4>)
}
 8002328:	b002      	add	sp, #8
 800232a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 800232e:	f7ff bdb5 	b.w	8001e9c <_ZN11TouchGFXHAL10initializeEv>
 8002332:	bf00      	nop
 8002334:	20013850 	.word	0x20013850
 8002338:	20002860 	.word	0x20002860
 800233c:	200008bc 	.word	0x200008bc
 8002340:	20000014 	.word	0x20000014
 8002344:	200008c0 	.word	0x200008c0
 8002348:	0802cd14 	.word	0x0802cd14
 800234c:	200025f8 	.word	0x200025f8
 8002350:	0802cc78 	.word	0x0802cc78
 8002354:	0802ccac 	.word	0x0802ccac
 8002358:	0802cce0 	.word	0x0802cce0
 800235c:	08002255 	.word	0x08002255
 8002360:	200027e4 	.word	0x200027e4

08002364 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8002364:	4770      	bx	lr
	...

08002368 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8002368:	4801      	ldr	r0, [pc, #4]	; (8002370 <touchgfx_taskEntry+0x8>)
 800236a:	f7ff bda5 	b.w	8001eb8 <_ZN11TouchGFXHAL9taskEntryEv>
 800236e:	bf00      	nop
 8002370:	200027e4 	.word	0x200027e4

08002374 <_GLOBAL__sub_I_touchgfx_init>:
}
 8002374:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8002376:	4e22      	ldr	r6, [pc, #136]	; (8002400 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8002378:	4c22      	ldr	r4, [pc, #136]	; (8002404 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 800237a:	4d23      	ldr	r5, [pc, #140]	; (8002408 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 800237c:	4b23      	ldr	r3, [pc, #140]	; (800240c <_GLOBAL__sub_I_touchgfx_init+0x98>)
 800237e:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8002380:	4630      	mov	r0, r6
 8002382:	f7ff fed1 	bl	8002128 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8002386:	4628      	mov	r0, r5
 8002388:	f01c f92a 	bl	801e5e0 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 800238c:	4b20      	ldr	r3, [pc, #128]	; (8002410 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800238e:	4821      	ldr	r0, [pc, #132]	; (8002414 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8002390:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8002392:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8002394:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8002398:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 800239c:	491e      	ldr	r1, [pc, #120]	; (8002418 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 800239e:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 80023a0:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 80023a4:	491d      	ldr	r1, [pc, #116]	; (800241c <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80023a6:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 80023a8:	491d      	ldr	r1, [pc, #116]	; (8002420 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 80023aa:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 80023ae:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023b0:	21f0      	movs	r1, #240	; 0xf0
 80023b2:	8001      	strh	r1, [r0, #0]
 80023b4:	481b      	ldr	r0, [pc, #108]	; (8002424 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 80023b6:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 80023b8:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023ba:	481b      	ldr	r0, [pc, #108]	; (8002428 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 80023bc:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023c0:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 80023c4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80023c8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80023cc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80023d0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 80023d4:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 80023d8:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 80023dc:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 80023e0:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 80023e4:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 80023e6:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 80023ea:	8001      	strh	r1, [r0, #0]
 80023ec:	480f      	ldr	r0, [pc, #60]	; (800242c <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 80023ee:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 80023f0:	490f      	ldr	r1, [pc, #60]	; (8002430 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 80023f2:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 80023f4:	2201      	movs	r2, #1
 80023f6:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80023fa:	4a0e      	ldr	r2, [pc, #56]	; (8002434 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 80023fc:	601a      	str	r2, [r3, #0]
}
 80023fe:	bd70      	pop	{r4, r5, r6, pc}
 8002400:	200027a0 	.word	0x200027a0
 8002404:	2000279c 	.word	0x2000279c
 8002408:	20002864 	.word	0x20002864
 800240c:	0802c778 	.word	0x0802c778
 8002410:	200027e4 	.word	0x200027e4
 8002414:	200137e0 	.word	0x200137e0
 8002418:	01000001 	.word	0x01000001
 800241c:	01010000 	.word	0x01010000
 8002420:	200137ec 	.word	0x200137ec
 8002424:	200137e6 	.word	0x200137e6
 8002428:	200137e2 	.word	0x200137e2
 800242c:	200137e8 	.word	0x200137e8
 8002430:	200137e4 	.word	0x200137e4
 8002434:	0802c904 	.word	0x0802c904

08002438 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002438:	2000      	movs	r0, #0
 800243a:	4770      	bx	lr

0800243c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 800243c:	8081      	strh	r1, [r0, #4]
    }
 800243e:	4770      	bx	lr

08002440 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002440:	80c1      	strh	r1, [r0, #6]
    }
 8002442:	4770      	bx	lr

08002444 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002444:	8101      	strh	r1, [r0, #8]
    }
 8002446:	4770      	bx	lr

08002448 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002448:	8141      	strh	r1, [r0, #10]
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 800244c:	4770      	bx	lr

0800244e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800244e:	4770      	bx	lr

08002450 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002450:	4770      	bx	lr

08002452 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8002452:	4770      	bx	lr

08002454 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002454:	4770      	bx	lr

08002456 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002456:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002458:	88c4      	ldrh	r4, [r0, #6]
 800245a:	6803      	ldr	r3, [r0, #0]
 800245c:	1b12      	subs	r2, r2, r4
 800245e:	8884      	ldrh	r4, [r0, #4]
 8002460:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002462:	1b09      	subs	r1, r1, r4
 8002464:	b212      	sxth	r2, r2
    }
 8002466:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800246a:	b209      	sxth	r1, r1
 800246c:	4718      	bx	r3

0800246e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800246e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002472:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002474:	f04f 33ff 	mov.w	r3, #4294967295
 8002478:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800247a:	6813      	ldr	r3, [r2, #0]
 800247c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800247e:	6010      	str	r0, [r2, #0]
    }
 8002480:	4770      	bx	lr

08002482 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002482:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002486:	b11a      	cbz	r2, 8002490 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002488:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800248c:	b102      	cbz	r2, 8002490 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800248e:	6018      	str	r0, [r3, #0]
        }
    }
 8002490:	4770      	bx	lr

08002492 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8002492:	2000      	movs	r0, #0
 8002494:	4770      	bx	lr

08002496 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8002496:	888b      	ldrh	r3, [r1, #4]
 8002498:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800249a:	2001      	movs	r0, #1
 800249c:	4770      	bx	lr

0800249e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800249e:	4770      	bx	lr

080024a0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80024a0:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 80024a4:	4770      	bx	lr

080024a6 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 80024a6:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 80024aa:	4770      	bx	lr

080024ac <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 80024ac:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80024ae:	2200      	movs	r2, #0
        return rect.width;
 80024b0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 80024b4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80024b8:	8002      	strh	r2, [r0, #0]
 80024ba:	8042      	strh	r2, [r0, #2]
 80024bc:	8084      	strh	r4, [r0, #4]
 80024be:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 80024c0:	bd10      	pop	{r4, pc}

080024c2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 80024c2:	2200      	movs	r2, #0
 80024c4:	8002      	strh	r2, [r0, #0]
 80024c6:	8042      	strh	r2, [r0, #2]
 80024c8:	8082      	strh	r2, [r0, #4]
 80024ca:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80024cc:	4770      	bx	lr
	...

080024d0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80024d0:	4b02      	ldr	r3, [pc, #8]	; (80024dc <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 80024d2:	2290      	movs	r2, #144	; 0x90
 80024d4:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 80024d8:	4770      	bx	lr
 80024da:	bf00      	nop
 80024dc:	e000e100 	.word	0xe000e100

080024e0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80024e0:	4b02      	ldr	r3, [pc, #8]	; (80024ec <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 80024e2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80024e6:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 80024e8:	4770      	bx	lr
 80024ea:	bf00      	nop
 80024ec:	e000e100 	.word	0xe000e100

080024f0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024f0:	4a09      	ldr	r2, [pc, #36]	; (8002518 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 80024f2:	490a      	ldr	r1, [pc, #40]	; (800251c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 80024f4:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 80024f6:	480a      	ldr	r0, [pc, #40]	; (8002520 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 80024f8:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80024fc:	3b01      	subs	r3, #1
 80024fe:	b29b      	uxth	r3, r3
 8002500:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8002502:	6911      	ldr	r1, [r2, #16]
 8002504:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8002508:	3901      	subs	r1, #1
 800250a:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800250c:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800250e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8002510:	f043 0301 	orr.w	r3, r3, #1
 8002514:	6353      	str	r3, [r2, #52]	; 0x34
}
 8002516:	4770      	bx	lr
 8002518:	40016800 	.word	0x40016800
 800251c:	200028ea 	.word	0x200028ea
 8002520:	200028e8 	.word	0x200028e8

08002524 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8002524:	4b01      	ldr	r3, [pc, #4]	; (800252c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8002526:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800252a:	4770      	bx	lr
 800252c:	40016800 	.word	0x40016800

08002530 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002530:	4b02      	ldr	r3, [pc, #8]	; (800253c <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002532:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8002534:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8002538:	625a      	str	r2, [r3, #36]	; 0x24
}
 800253a:	4770      	bx	lr
 800253c:	40016800 	.word	0x40016800

08002540 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8002540:	b570      	push	{r4, r5, r6, lr}
 8002542:	4604      	mov	r4, r0
    HAL::initialize();
 8002544:	f00e ffcb 	bl	80114de <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8002548:	6823      	ldr	r3, [r4, #0]
 800254a:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 800254c:	f014 f940 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8002550:	4601      	mov	r1, r0
 8002552:	4620      	mov	r0, r4
 8002554:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002556:	6823      	ldr	r3, [r4, #0]
 8002558:	4a05      	ldr	r2, [pc, #20]	; (8002570 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800255a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800255e:	4620      	mov	r0, r4
 8002560:	46ac      	mov	ip, r5
 8002562:	2300      	movs	r3, #0
}
 8002564:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8002568:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 800256c:	4760      	bx	ip
 800256e:	bf00      	nop
 8002570:	d004b000 	.word	0xd004b000

08002574 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8002574:	f00e bf9a 	b.w	80114ac <_ZN8touchgfx3HAL10beginFrameEv>

08002578 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8002578:	f00e bfa4 	b.w	80114c4 <_ZN8touchgfx3HAL8endFrameEv>

0800257c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 800257c:	f00e bf5f 	b.w	801143e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08002580 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8002580:	f00f b8c1 	b.w	8011706 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08002584 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002584:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002588:	b112      	cbz	r2, 8002590 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800258a:	6803      	ldr	r3, [r0, #0]
 800258c:	695b      	ldr	r3, [r3, #20]
 800258e:	4718      	bx	r3
    }
 8002590:	4770      	bx	lr
	...

08002594 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8002594:	4b04      	ldr	r3, [pc, #16]	; (80025a8 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8002596:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800259a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 800259e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80025a2:	f3bf 8f6f 	isb	sy
}
 80025a6:	4770      	bx	lr
 80025a8:	e000e100 	.word	0xe000e100

080025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80025ac:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80025ae:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80025b0:	4e12      	ldr	r6, [pc, #72]	; (80025fc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80025b2:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80025b4:	4b12      	ldr	r3, [pc, #72]	; (8002600 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80025b6:	6003      	str	r3, [r0, #0]
 80025b8:	6833      	ldr	r3, [r6, #0]
 80025ba:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 80025be:	4605      	mov	r5, r0
 80025c0:	b10a      	cbz	r2, 80025c6 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80025c2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025c4:	b900      	cbnz	r0, 80025c8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80025c6:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80025c8:	6803      	ldr	r3, [r0, #0]
 80025ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025cc:	4798      	blx	r3
        return auxiliaryLCD;
 80025ce:	6833      	ldr	r3, [r6, #0]
 80025d0:	fab0 f480 	clz	r4, r0
 80025d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025d6:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80025d8:	b130      	cbz	r0, 80025e8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80025de:	4798      	blx	r3
 80025e0:	2800      	cmp	r0, #0
 80025e2:	bf08      	it	eq
 80025e4:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 80025e8:	b92c      	cbnz	r4, 80025f6 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 80025ea:	4b06      	ldr	r3, [pc, #24]	; (8002604 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 80025ec:	4a06      	ldr	r2, [pc, #24]	; (8002608 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 80025ee:	4807      	ldr	r0, [pc, #28]	; (800260c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 80025f0:	212c      	movs	r1, #44	; 0x2c
 80025f2:	f028 ffb5 	bl	802b560 <__assert_func>
    }
 80025f6:	4628      	mov	r0, r5
 80025f8:	bd70      	pop	{r4, r5, r6, pc}
 80025fa:	bf00      	nop
 80025fc:	200137ec 	.word	0x200137ec
 8002600:	0802ce24 	.word	0x0802ce24
 8002604:	0802cd20 	.word	0x0802cd20
 8002608:	0802cd7e 	.word	0x0802cd7e
 800260c:	0802cdb7 	.word	0x0802cdb7

08002610 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 8002610:	4770      	bx	lr
	...

08002614 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8002614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 8002618:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 800261a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 800261e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 8002622:	d105      	bne.n	8002630 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 8002624:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 8002628:	4281      	cmp	r1, r0
 800262a:	d8fb      	bhi.n	8002624 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 800262c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 8002630:	4f17      	ldr	r7, [pc, #92]	; (8002690 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002632:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002636:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800263a:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800263e:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002642:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002644:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 8002646:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002648:	b2db      	uxtb	r3, r3
 800264a:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800264c:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002650:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002654:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002658:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800265c:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002660:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002664:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002668:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800266c:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800266e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8002672:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 8002676:	fb03 4e0e 	mla	lr, r3, lr, r4
 800267a:	fbbe fef5 	udiv	lr, lr, r5
 800267e:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8002682:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 8002686:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 800268a:	4281      	cmp	r1, r0
 800268c:	d8de      	bhi.n	800264c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 800268e:	e7cd      	b.n	800262c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8002690:	fffff800 	.word	0xfffff800

08002694 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8002694:	b510      	push	{r4, lr}
        return instance;
 8002696:	4c14      	ldr	r4, [pc, #80]	; (80026e8 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8002698:	6823      	ldr	r3, [r4, #0]
 800269a:	b323      	cbz	r3, 80026e6 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800269c:	4b13      	ldr	r3, [pc, #76]	; (80026ec <HAL_LTDC_LineEventCallback+0x58>)
 800269e:	4a14      	ldr	r2, [pc, #80]	; (80026f0 <HAL_LTDC_LineEventCallback+0x5c>)
 80026a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80026a2:	8811      	ldrh	r1, [r2, #0]
 80026a4:	428b      	cmp	r3, r1
 80026a6:	d113      	bne.n	80026d0 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 80026a8:	4b12      	ldr	r3, [pc, #72]	; (80026f4 <HAL_LTDC_LineEventCallback+0x60>)
 80026aa:	8819      	ldrh	r1, [r3, #0]
 80026ac:	f009 faf2 	bl	800bc94 <HAL_LTDC_ProgramLineEvent>
 80026b0:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 80026b2:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80026b6:	3301      	adds	r3, #1
 80026b8:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 80026bc:	f7ff fce8 	bl	8002090 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 80026c0:	6820      	ldr	r0, [r4, #0]
 80026c2:	f00f fc4b 	bl	8011f5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80026c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 80026ca:	2000      	movs	r0, #0
 80026cc:	f7ff bb60 	b.w	8001d90 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 80026d0:	f009 fae0 	bl	800bc94 <HAL_LTDC_ProgramLineEvent>
        return instance;
 80026d4:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 80026d6:	6803      	ldr	r3, [r0, #0]
 80026d8:	6a1b      	ldr	r3, [r3, #32]
 80026da:	4798      	blx	r3
    }
 80026dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80026e0:	2000      	movs	r0, #0
 80026e2:	f7ff bb6d 	b.w	8001dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 80026e6:	bd10      	pop	{r4, pc}
 80026e8:	200137ec 	.word	0x200137ec
 80026ec:	40016800 	.word	0x40016800
 80026f0:	200028ea 	.word	0x200028ea
 80026f4:	200028e8 	.word	0x200028e8

080026f8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80026f8:	4770      	bx	lr

080026fa <_ZN23ApplicationFontProviderD0Ev>:
 80026fa:	b510      	push	{r4, lr}
 80026fc:	2104      	movs	r1, #4
 80026fe:	4604      	mov	r4, r0
 8002700:	f028 f91b 	bl	802a93a <_ZdlPvj>
 8002704:	4620      	mov	r0, r4
 8002706:	bd10      	pop	{r4, pc}

08002708 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002708:	b508      	push	{r3, lr}
    switch (typography)
 800270a:	2903      	cmp	r1, #3
 800270c:	d813      	bhi.n	8002736 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 800270e:	e8df f001 	tbb	[pc, r1]
 8002712:	0602      	.short	0x0602
 8002714:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002716:	f006 f927 	bl	8008968 <_ZN17TypedTextDatabase8getFontsEv>
 800271a:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 800271c:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800271e:	f006 f923 	bl	8008968 <_ZN17TypedTextDatabase8getFontsEv>
 8002722:	6840      	ldr	r0, [r0, #4]
 8002724:	e7fa      	b.n	800271c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002726:	f006 f91f 	bl	8008968 <_ZN17TypedTextDatabase8getFontsEv>
 800272a:	6880      	ldr	r0, [r0, #8]
 800272c:	e7f6      	b.n	800271c <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800272e:	f006 f91b 	bl	8008968 <_ZN17TypedTextDatabase8getFontsEv>
 8002732:	68c0      	ldr	r0, [r0, #12]
 8002734:	e7f2      	b.n	800271c <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 8002736:	2000      	movs	r0, #0
 8002738:	e7f0      	b.n	800271c <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

0800273c <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 800273c:	4800      	ldr	r0, [pc, #0]	; (8002740 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 800273e:	4770      	bx	lr
 8002740:	0802ce50 	.word	0x0802ce50

08002744 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002744:	200c      	movs	r0, #12
 8002746:	4770      	bx	lr

08002748 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002748:	b513      	push	{r0, r1, r4, lr}
 800274a:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 800274c:	b151      	cbz	r1, 8002764 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800274e:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002750:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002752:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002756:	aa01      	add	r2, sp, #4
 8002758:	689c      	ldr	r4, [r3, #8]
 800275a:	f10d 0303 	add.w	r3, sp, #3
 800275e:	47a0      	blx	r4
        return glyph;
    }
 8002760:	b002      	add	sp, #8
 8002762:	bd10      	pop	{r4, pc}
            return 0;
 8002764:	4608      	mov	r0, r1
 8002766:	e7fb      	b.n	8002760 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002768 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002768:	89c0      	ldrh	r0, [r0, #14]
 800276a:	4770      	bx	lr

0800276c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 800276c:	8a00      	ldrh	r0, [r0, #16]
 800276e:	4770      	bx	lr

08002770 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002770:	88c0      	ldrh	r0, [r0, #6]
 8002772:	4770      	bx	lr

08002774 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002774:	8880      	ldrh	r0, [r0, #4]
 8002776:	4770      	bx	lr

08002778 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002778:	7a80      	ldrb	r0, [r0, #10]
    }
 800277a:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800277e:	4770      	bx	lr

08002780 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002780:	7a80      	ldrb	r0, [r0, #10]
    }
 8002782:	09c0      	lsrs	r0, r0, #7
 8002784:	4770      	bx	lr

08002786 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002786:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002788:	4770      	bx	lr

0800278a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800278a:	4770      	bx	lr

0800278c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800278c:	4770      	bx	lr

0800278e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800278e:	4770      	bx	lr

08002790 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002790:	4770      	bx	lr

08002792 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002792:	4770      	bx	lr

08002794 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002794:	4770      	bx	lr

08002796 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002796:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002798:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800279a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800279c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800279e:	466d      	mov	r5, sp
 80027a0:	4601      	mov	r1, r0
 80027a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80027a6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027a8:	4628      	mov	r0, r5
 80027aa:	4798      	blx	r3
 80027ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027b0:	343c      	adds	r4, #60	; 0x3c
 80027b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027b6:	b005      	add	sp, #20
 80027b8:	bd30      	pop	{r4, r5, pc}

080027ba <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80027ba:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80027bc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80027be:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80027c0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80027c2:	466d      	mov	r5, sp
 80027c4:	4601      	mov	r1, r0
 80027c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80027ca:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80027cc:	4628      	mov	r0, r5
 80027ce:	4798      	blx	r3
 80027d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80027d4:	343c      	adds	r4, #60	; 0x3c
 80027d6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80027da:	b005      	add	sp, #20
 80027dc:	bd30      	pop	{r4, r5, pc}

080027de <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80027de:	2200      	movs	r2, #0
 80027e0:	8002      	strh	r2, [r0, #0]
 80027e2:	8042      	strh	r2, [r0, #2]
 80027e4:	8082      	strh	r2, [r0, #4]
 80027e6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80027e8:	4770      	bx	lr

080027ea <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80027ea:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80027ee:	4770      	bx	lr

080027f0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027f0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80027f2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027f4:	4604      	mov	r4, r0
        setX(x);
 80027f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80027f8:	4615      	mov	r5, r2
        setX(x);
 80027fa:	4798      	blx	r3
        setBaselineY(baselineY);
 80027fc:	6823      	ldr	r3, [r4, #0]
 80027fe:	4629      	mov	r1, r5
 8002800:	4620      	mov	r0, r4
 8002802:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002804:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002808:	4718      	bx	r3

0800280a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800280a:	2000      	movs	r0, #0
 800280c:	4770      	bx	lr

0800280e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800280e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002810:	4770      	bx	lr

08002812 <_ZN23Calibration_PadViewBase17Load_FLASH_ValuesEv>:
     * Virtual Action Handlers
     */
    virtual void Load_FLASH_Values()
    {
        // Override and implement this function in Calibration_Pad
    }
 8002812:	4770      	bx	lr

08002814 <_ZN23Calibration_PadViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Calibration_PadViewBase::setupScreen()
{
    transitionBegins();
 8002814:	6803      	ldr	r3, [r0, #0]
 8002816:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002818:	4718      	bx	r3

0800281a <_ZN23Calibration_PadViewBase16transitionBeginsEv>:
void Calibration_PadViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins call virtual function
    //Call Load_FLASH_Values
    Load_FLASH_Values();
 800281a:	6803      	ldr	r3, [r0, #0]
 800281c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800281e:	4718      	bx	r3

08002820 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002820:	4770      	bx	lr

08002822 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002822:	4770      	bx	lr

08002824 <_ZN8touchgfx14SwipeContainer13PageIndicatorD1Ev>:
    void animateSwipeCancelledLeft();
    void animateSwipeCancelledRight();
    void animateLeft();
    void animateRight();

    class PageIndicator : public Container
 8002824:	4770      	bx	lr

08002826 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002826:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002828:	68c2      	ldr	r2, [r0, #12]
 800282a:	6844      	ldr	r4, [r0, #4]
 800282c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800282e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002830:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002834:	07d2      	lsls	r2, r2, #31
 8002836:	bf48      	it	mi
 8002838:	5962      	ldrmi	r2, [r4, r5]
 800283a:	689b      	ldr	r3, [r3, #8]
    }
 800283c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800283e:	bf48      	it	mi
 8002840:	58d3      	ldrmi	r3, [r2, r3]
 8002842:	4718      	bx	r3

08002844 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002844:	6843      	ldr	r3, [r0, #4]
 8002846:	b12b      	cbz	r3, 8002854 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002848:	6883      	ldr	r3, [r0, #8]
 800284a:	b92b      	cbnz	r3, 8002858 <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800284c:	68c0      	ldr	r0, [r0, #12]
 800284e:	f000 0001 	and.w	r0, r0, #1
 8002852:	4770      	bx	lr
 8002854:	4618      	mov	r0, r3
 8002856:	4770      	bx	lr
 8002858:	2001      	movs	r0, #1
    }
 800285a:	4770      	bx	lr

0800285c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800285c:	b510      	push	{r4, lr}
    }
 800285e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002860:	4604      	mov	r4, r0
    }
 8002862:	f028 f86a 	bl	802a93a <_ZdlPvj>
 8002866:	4620      	mov	r0, r4
 8002868:	bd10      	pop	{r4, pc}

0800286a <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800286a:	b510      	push	{r4, lr}
 800286c:	214c      	movs	r1, #76	; 0x4c
 800286e:	4604      	mov	r4, r0
 8002870:	f028 f863 	bl	802a93a <_ZdlPvj>
 8002874:	4620      	mov	r0, r4
 8002876:	bd10      	pop	{r4, pc}

08002878 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002878:	b510      	push	{r4, lr}
 800287a:	2110      	movs	r1, #16
 800287c:	4604      	mov	r4, r0
 800287e:	f028 f85c 	bl	802a93a <_ZdlPvj>
 8002882:	4620      	mov	r0, r4
 8002884:	bd10      	pop	{r4, pc}

08002886 <_ZN8touchgfx14SwipeContainer13PageIndicatorD0Ev>:
 8002886:	b510      	push	{r4, lr}
 8002888:	218c      	movs	r1, #140	; 0x8c
 800288a:	4604      	mov	r4, r0
 800288c:	f028 f855 	bl	802a93a <_ZdlPvj>
 8002890:	4620      	mov	r0, r4
 8002892:	bd10      	pop	{r4, pc}

08002894 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8002894:	b538      	push	{r3, r4, r5, lr}
 8002896:	4605      	mov	r5, r0
 8002898:	4b05      	ldr	r3, [pc, #20]	; (80028b0 <_ZN23Calibration_PadViewBaseD1Ev+0x1c>)
 800289a:	f845 3be0 	str.w	r3, [r5], #224
 800289e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80028a0:	f012 fa94 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028a4:	4628      	mov	r0, r5
 80028a6:	f00e f949 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 80028aa:	4620      	mov	r0, r4
 80028ac:	bd38      	pop	{r3, r4, r5, pc}
 80028ae:	bf00      	nop
 80028b0:	0802d238 	.word	0x0802d238

080028b4 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 80028b4:	b510      	push	{r4, lr}
 80028b6:	4604      	mov	r4, r0
}
 80028b8:	f7ff ffec 	bl	8002894 <_ZN23Calibration_PadViewBaseD1Ev>
 80028bc:	4620      	mov	r0, r4
 80028be:	f641 5104 	movw	r1, #7428	; 0x1d04
 80028c2:	f028 f83a 	bl	802a93a <_ZdlPvj>
 80028c6:	4620      	mov	r0, r4
 80028c8:	bd10      	pop	{r4, pc}

080028ca <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 80028ca:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 80028cc:	f7ff fe5a 	bl	8002584 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 80028d0:	bd08      	pop	{r3, pc}
	...

080028d4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028d4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028d6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028d8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80028da:	4b12      	ldr	r3, [pc, #72]	; (8002924 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80028dc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80028de:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80028e0:	b28d      	uxth	r5, r1
 80028e2:	b92b      	cbnz	r3, 80028f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80028e4:	4b10      	ldr	r3, [pc, #64]	; (8002928 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80028e6:	4a11      	ldr	r2, [pc, #68]	; (800292c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028e8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028ea:	4811      	ldr	r0, [pc, #68]	; (8002930 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80028ec:	f028 fe38 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80028f0:	4910      	ldr	r1, [pc, #64]	; (8002934 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80028f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80028f4:	8809      	ldrh	r1, [r1, #0]
 80028f6:	4291      	cmp	r1, r2
 80028f8:	d803      	bhi.n	8002902 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80028fa:	4b0f      	ldr	r3, [pc, #60]	; (8002938 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80028fc:	4a0b      	ldr	r2, [pc, #44]	; (800292c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80028fe:	216d      	movs	r1, #109	; 0x6d
 8002900:	e7f3      	b.n	80028ea <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002902:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002906:	4b0d      	ldr	r3, [pc, #52]	; (800293c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800290e:	6803      	ldr	r3, [r0, #0]
 8002910:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002912:	4798      	blx	r3
 8002914:	1a28      	subs	r0, r5, r0
 8002916:	b201      	sxth	r1, r0
 8002918:	4633      	mov	r3, r6
 800291a:	4620      	mov	r0, r4
    }
 800291c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002920:	4718      	bx	r3
 8002922:	bf00      	nop
 8002924:	20013844 	.word	0x20013844
 8002928:	0802cf40 	.word	0x0802cf40
 800292c:	0802cf82 	.word	0x0802cf82
 8002930:	0802cfbd 	.word	0x0802cfbd
 8002934:	20013848 	.word	0x20013848
 8002938:	0802d004 	.word	0x0802d004
 800293c:	2001384c 	.word	0x2001384c

08002940 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002940:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002942:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002944:	4604      	mov	r4, r0
        setX(x);
 8002946:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002948:	4615      	mov	r5, r2
        setX(x);
 800294a:	4798      	blx	r3
        setY(y);
 800294c:	6823      	ldr	r3, [r4, #0]
 800294e:	4629      	mov	r1, r5
 8002950:	4620      	mov	r0, r4
 8002952:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002954:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002958:	4718      	bx	r3

0800295a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800295a:	b570      	push	{r4, r5, r6, lr}
 800295c:	4604      	mov	r4, r0
 800295e:	461d      	mov	r5, r3
 8002960:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002964:	f7ff ffec 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002968:	6823      	ldr	r3, [r4, #0]
 800296a:	4629      	mov	r1, r5
 800296c:	4620      	mov	r0, r4
 800296e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002970:	4798      	blx	r3
        setHeight(height);
 8002972:	6823      	ldr	r3, [r4, #0]
 8002974:	4631      	mov	r1, r6
 8002976:	4620      	mov	r0, r4
 8002978:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800297a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800297e:	4718      	bx	r3

08002980 <_ZN8touchgfx9ContainerC1Ev>:
          touchable(false),
 8002980:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002984:	2200      	movs	r2, #0
 8002986:	8481      	strh	r1, [r0, #36]	; 0x24
          firstChild(0)
 8002988:	4905      	ldr	r1, [pc, #20]	; (80029a0 <_ZN8touchgfx9ContainerC1Ev+0x20>)
 800298a:	6001      	str	r1, [r0, #0]
 800298c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002990:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002994:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002998:	e9c0 2207 	strd	r2, r2, [r0, #28]
 800299c:	6282      	str	r2, [r0, #40]	; 0x28
    }
 800299e:	4770      	bx	lr
 80029a0:	0802f15c 	.word	0x0802f15c

080029a4 <_ZN8touchgfx6WidgetC1Ev>:
 80029a4:	2200      	movs	r2, #0
 80029a6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80029aa:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 80029ae:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 80029b2:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80029b6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80029ba:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80029bc:	4a01      	ldr	r2, [pc, #4]	; (80029c4 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80029be:	6002      	str	r2, [r0, #0]
 80029c0:	4770      	bx	lr
 80029c2:	bf00      	nop
 80029c4:	0802d088 	.word	0x0802d088

080029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80029c8:	4b1a      	ldr	r3, [pc, #104]	; (8002a34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80029ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80029cc:	881b      	ldrh	r3, [r3, #0]
 80029ce:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80029d0:	428b      	cmp	r3, r1
    void updateTextPosition()
 80029d2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80029d4:	d92b      	bls.n	8002a2e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029d6:	4b18      	ldr	r3, [pc, #96]	; (8002a38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	b92b      	cbnz	r3, 80029e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80029dc:	4b17      	ldr	r3, [pc, #92]	; (8002a3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80029de:	4a18      	ldr	r2, [pc, #96]	; (8002a40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80029e0:	4818      	ldr	r0, [pc, #96]	; (8002a44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80029e2:	216c      	movs	r1, #108	; 0x6c
 80029e4:	f028 fdbc 	bl	802b560 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029e8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80029ec:	4b16      	ldr	r3, [pc, #88]	; (8002a48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80029f4:	4b15      	ldr	r3, [pc, #84]	; (8002a4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80029f6:	6818      	ldr	r0, [r3, #0]
 80029f8:	f005 ffa6 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80029fc:	682b      	ldr	r3, [r5, #0]
 80029fe:	9001      	str	r0, [sp, #4]
 8002a00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a02:	4628      	mov	r0, r5
 8002a04:	4798      	blx	r3
 8002a06:	682b      	ldr	r3, [r5, #0]
 8002a08:	9901      	ldr	r1, [sp, #4]
 8002a0a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002a0c:	4604      	mov	r4, r0
 8002a0e:	4628      	mov	r0, r5
 8002a10:	4798      	blx	r3
 8002a12:	682b      	ldr	r3, [r5, #0]
 8002a14:	9901      	ldr	r1, [sp, #4]
 8002a16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a18:	fb14 f400 	smulbb	r4, r4, r0
 8002a1c:	4628      	mov	r0, r5
 8002a1e:	4798      	blx	r3
 8002a20:	b2a4      	uxth	r4, r4
 8002a22:	1823      	adds	r3, r4, r0
 8002a24:	b21b      	sxth	r3, r3
 8002a26:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002a2a:	b002      	add	sp, #8
 8002a2c:	bd70      	pop	{r4, r5, r6, pc}
 8002a2e:	2300      	movs	r3, #0
 8002a30:	e7f9      	b.n	8002a26 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 8002a32:	bf00      	nop
 8002a34:	20013848 	.word	0x20013848
 8002a38:	20013844 	.word	0x20013844
 8002a3c:	0802cf40 	.word	0x0802cf40
 8002a40:	0802cf82 	.word	0x0802cf82
 8002a44:	0802cfbd 	.word	0x0802cfbd
 8002a48:	2001384c 	.word	0x2001384c
 8002a4c:	20013850 	.word	0x20013850

08002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002a50:	2200      	movs	r2, #0
 8002a52:	f04f 31ff 	mov.w	r1, #4294967295
 8002a56:	e9c0 2100 	strd	r2, r1, [r0]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8002a5a:	6082      	str	r2, [r0, #8]
        {
        }
 8002a5c:	4770      	bx	lr

08002a5e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8002a5e:	b510      	push	{r4, lr}
 8002a60:	4604      	mov	r4, r0
        return TextArea::BoundingArea();
 8002a62:	f7ff fff5 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002a66:	4620      	mov	r0, r4
 8002a68:	bd10      	pop	{r4, pc}
	...

08002a6c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002a6c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a6e:	2100      	movs	r1, #0
    TextArea()
 8002a70:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002a72:	2226      	movs	r2, #38	; 0x26
 8002a74:	f028 ff79 	bl	802b96a <memset>
 8002a78:	4620      	mov	r0, r4
 8002a7a:	f7ff ff93 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8002a7e:	4b09      	ldr	r3, [pc, #36]	; (8002aa4 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002a80:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002a82:	4b09      	ldr	r3, [pc, #36]	; (8002aa8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002a84:	62a3      	str	r3, [r4, #40]	; 0x28
 8002a86:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002a8a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002a8c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002a90:	2300      	movs	r3, #0
 8002a92:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002a96:	8723      	strh	r3, [r4, #56]	; 0x38
 8002a98:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002a9c:	f7ff ffd8 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002aa0:	4620      	mov	r0, r4
 8002aa2:	bd10      	pop	{r4, pc}
 8002aa4:	0802f5b4 	.word	0x0802f5b4
 8002aa8:	0802d0f0 	.word	0x0802d0f0

08002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002aac:	b510      	push	{r4, lr}
 8002aae:	4604      	mov	r4, r0
        : TextArea()
 8002ab0:	f7ff ffdc 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002ab4:	4b02      	ldr	r3, [pc, #8]	; (8002ac0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002ab6:	6023      	str	r3, [r4, #0]
 8002ab8:	2300      	movs	r3, #0
 8002aba:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002abc:	4620      	mov	r0, r4
 8002abe:	bd10      	pop	{r4, pc}
 8002ac0:	0802d190 	.word	0x0802d190

08002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>:
class Drawable
 8002ac4:	b510      	push	{r4, lr}
 8002ac6:	4604      	mov	r4, r0
 8002ac8:	460b      	mov	r3, r1
 8002aca:	490d      	ldr	r1, [pc, #52]	; (8002b00 <_ZN8touchgfx8DrawableC1ERKS0_+0x3c>)
 8002acc:	f844 1b04 	str.w	r1, [r4], #4
 8002ad0:	4602      	mov	r2, r0
 8002ad2:	e9d3 0101 	ldrd	r0, r1, [r3, #4]
 8002ad6:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ada:	e9d3 0103 	ldrd	r0, r1, [r3, #12]
 8002ade:	f102 040c 	add.w	r4, r2, #12
 8002ae2:	e884 0003 	stmia.w	r4, {r0, r1}
 8002ae6:	e9d3 0106 	ldrd	r0, r1, [r3, #24]
 8002aea:	695c      	ldr	r4, [r3, #20]
 8002aec:	61d1      	str	r1, [r2, #28]
 8002aee:	6a19      	ldr	r1, [r3, #32]
 8002af0:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8002af2:	6211      	str	r1, [r2, #32]
 8002af4:	e9c2 4005 	strd	r4, r0, [r2, #20]
 8002af8:	8493      	strh	r3, [r2, #36]	; 0x24
 8002afa:	4610      	mov	r0, r2
 8002afc:	bd10      	pop	{r4, pc}
 8002afe:	bf00      	nop
 8002b00:	0802f9d4 	.word	0x0802f9d4

08002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>:
class SwipeContainer : public Container
 8002b04:	b538      	push	{r3, r4, r5, lr}
 8002b06:	460d      	mov	r5, r1
 8002b08:	4604      	mov	r4, r0
class Container : public Drawable
 8002b0a:	f7ff ffdb 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b0e:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8002b10:	62a3      	str	r3, [r4, #40]	; 0x28
 8002b12:	4b2b      	ldr	r3, [pc, #172]	; (8002bc0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xbc>)
 8002b14:	6023      	str	r3, [r4, #0]
 8002b16:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8002b18:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002b1a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8002b1c:	6323      	str	r3, [r4, #48]	; 0x30
 8002b1e:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 8002b20:	6363      	str	r3, [r4, #52]	; 0x34
 8002b22:	f105 0138 	add.w	r1, r5, #56	; 0x38
 8002b26:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8002b2a:	f7ff ffcb 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b2e:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8002b30:	6623      	str	r3, [r4, #96]	; 0x60
 * dimensions of the physical screen. Place the ListLayout inside e.g. a
 * ScrollableContainer to allow all the children to be viewed.
 *
 * @see ScrollableContainer
 */
class ListLayout : public Container
 8002b32:	4b24      	ldr	r3, [pc, #144]	; (8002bc4 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc0>)
 8002b34:	63a3      	str	r3, [r4, #56]	; 0x38
 8002b36:	f895 3064 	ldrb.w	r3, [r5, #100]	; 0x64
 8002b3a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8002b3e:	f8b5 3066 	ldrh.w	r3, [r5, #102]	; 0x66
 8002b42:	f8a4 3066 	strh.w	r3, [r4, #102]	; 0x66
 8002b46:	f105 0168 	add.w	r1, r5, #104	; 0x68
 8002b4a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002b4e:	f7ff ffb9 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b52:	f8d5 3090 	ldr.w	r3, [r5, #144]	; 0x90
 8002b56:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
    class PageIndicator : public Container
 8002b5a:	4b1b      	ldr	r3, [pc, #108]	; (8002bc8 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc4>)
 8002b5c:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b5e:	f105 0194 	add.w	r1, r5, #148	; 0x94
 8002b62:	f104 0094 	add.w	r0, r4, #148	; 0x94
 8002b66:	f7ff ffad 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 * is handled by the Image Converter as part of compiling the project. Each image is
 * assigned a unique BITMAP identifier which.
 *
 * @see Bitmap
 */
class Image : public Widget
 8002b6a:	f8b5 30ba 	ldrh.w	r3, [r5, #186]	; 0xba
 8002b6e:	f8a4 30ba 	strh.w	r3, [r4, #186]	; 0xba
 8002b72:	f895 30bc 	ldrb.w	r3, [r5, #188]	; 0xbc
 8002b76:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 * Simple widget capable of showing a bitmap tiled indefinitely horizontally and vertically.
 * This means that when the TiledImage Widget is larger than the provided Bitmap, the
 * Bitmap is repeated over and over horizontally and vertically. The bitmap can be alpha-
 * blended with the background and have areas of transparency.
 */
class TiledImage : public Image
 8002b7a:	4b14      	ldr	r3, [pc, #80]	; (8002bcc <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xc8>)
 8002b7c:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8002b80:	f8b5 30be 	ldrh.w	r3, [r5, #190]	; 0xbe
 8002b84:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 8002b88:	f8b5 30c0 	ldrh.w	r3, [r5, #192]	; 0xc0
 8002b8c:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 8002b90:	f105 01c4 	add.w	r1, r5, #196	; 0xc4
 8002b94:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
 8002b98:	f7ff ff94 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8002b9c:	4b0c      	ldr	r3, [pc, #48]	; (8002bd0 <_ZN8touchgfx14SwipeContainerC1ERKS0_+0xcc>)
 8002b9e:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 8002ba2:	f8b5 30ea 	ldrh.w	r3, [r5, #234]	; 0xea
 8002ba6:	f8a4 30ea 	strh.w	r3, [r4, #234]	; 0xea
 8002baa:	f895 30ec 	ldrb.w	r3, [r5, #236]	; 0xec
 8002bae:	f884 30ec 	strb.w	r3, [r4, #236]	; 0xec
 8002bb2:	f8b5 30f0 	ldrh.w	r3, [r5, #240]	; 0xf0
 8002bb6:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
class SwipeContainer : public Container
 8002bba:	4620      	mov	r0, r4
 8002bbc:	bd38      	pop	{r3, r4, r5, pc}
 8002bbe:	bf00      	nop
 8002bc0:	0802f1ec 	.word	0x0802f1ec
 8002bc4:	0802f2b0 	.word	0x0802f2b0
 8002bc8:	0802d100 	.word	0x0802d100
 8002bcc:	0802f6ac 	.word	0x0802f6ac
 8002bd0:	0802f890 	.word	0x0802f890

08002bd4 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
{
 8002bd4:	b5f0      	push	{r4, r5, r6, r7, lr}
    if (&src == &buttonWithLabel3)
 8002bd6:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8002bda:	4299      	cmp	r1, r3
{
 8002bdc:	b0c1      	sub	sp, #260	; 0x104
 8002bde:	4604      	mov	r4, r0
 8002be0:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8002be2:	d103      	bne.n	8002bec <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002be4:	f013 fdf4 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMain_MenuScreenWipeTransitionWest();
 8002be8:	f001 fe7c 	bl	80048e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    if (&src == &buttonWithIcon_LP1)
 8002bec:	f504 731e 	add.w	r3, r4, #632	; 0x278
 8002bf0:	429d      	cmp	r5, r3
 8002bf2:	d128      	bne.n	8002c46 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x72>
        SwipeContainer swipeContainer = swipeContainer1;
 8002bf4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002bf8:	4639      	mov	r1, r7
 8002bfa:	a803      	add	r0, sp, #12
 8002bfc:	f7ff ff82 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002c00:	f7fe fc74 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c04:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002c06:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c08:	2001      	movs	r0, #1
 8002c0a:	f7fd fe2d 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002c0e:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002c12:	48d8      	ldr	r0, [pc, #864]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c14:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002c18:	ee17 6a90 	vmov	r6, s15
 8002c1c:	ee17 1a90 	vmov	r1, s15
 8002c20:	230c      	movs	r3, #12
 8002c22:	2200      	movs	r2, #0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c24:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 0, 12);
 8002c28:	f7fd ff20 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002c2c:	4ad2      	ldr	r2, [pc, #840]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002c2e:	4633      	mov	r3, r6
 8002c30:	210a      	movs	r1, #10
 8002c32:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8002c36:	f016 ff79 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c3a:	4638      	mov	r0, r7
 8002c3c:	f014 feb0 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c40:	a803      	add	r0, sp, #12
 8002c42:	f00d ff7b 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP2)
 8002c46:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8002c4a:	429d      	cmp	r5, r3
 8002c4c:	d128      	bne.n	8002ca0 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xcc>
        SwipeContainer swipeContainer = swipeContainer1;
 8002c4e:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002c52:	4639      	mov	r1, r7
 8002c54:	a803      	add	r0, sp, #12
 8002c56:	f7ff ff55 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002c5a:	f7fe fc47 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c5e:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002c60:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c62:	2001      	movs	r0, #1
 8002c64:	f7fd fe00 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c68:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002c6c:	48c1      	ldr	r0, [pc, #772]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c6e:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c72:	ee17 6a90 	vmov	r6, s15
 8002c76:	ee17 1a90 	vmov	r1, s15
 8002c7a:	230c      	movs	r3, #12
 8002c7c:	2201      	movs	r2, #1
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002c7e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 1, 12);
 8002c82:	f7fd fef3 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002c86:	4abc      	ldr	r2, [pc, #752]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002c88:	4633      	mov	r3, r6
 8002c8a:	210a      	movs	r1, #10
 8002c8c:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8002c90:	f016 ff4c 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002c94:	4638      	mov	r0, r7
 8002c96:	f014 fe83 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002c9a:	a803      	add	r0, sp, #12
 8002c9c:	f00d ff4e 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LP3)
 8002ca0:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8002ca4:	429d      	cmp	r5, r3
 8002ca6:	d128      	bne.n	8002cfa <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x126>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ca8:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002cac:	4639      	mov	r1, r7
 8002cae:	a803      	add	r0, sp, #12
 8002cb0:	f7ff ff28 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002cb4:	f7fe fc1a 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cb8:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002cba:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cbc:	2001      	movs	r0, #1
 8002cbe:	f7fd fdd3 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002cc2:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002cc6:	48ab      	ldr	r0, [pc, #684]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cc8:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002ccc:	ee17 6a90 	vmov	r6, s15
 8002cd0:	ee17 1a90 	vmov	r1, s15
 8002cd4:	230c      	movs	r3, #12
 8002cd6:	2202      	movs	r2, #2
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002cd8:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 2, 12);
 8002cdc:	f7fd fec6 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002ce0:	4aa5      	ldr	r2, [pc, #660]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002ce2:	4633      	mov	r3, r6
 8002ce4:	210a      	movs	r1, #10
 8002ce6:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8002cea:	f016 ff1f 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002cee:	4638      	mov	r0, r7
 8002cf0:	f014 fe56 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002cf4:	a803      	add	r0, sp, #12
 8002cf6:	f00d ff21 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP1)
 8002cfa:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8002cfe:	429d      	cmp	r5, r3
 8002d00:	d128      	bne.n	8002d54 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x180>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d02:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d06:	4639      	mov	r1, r7
 8002d08:	a803      	add	r0, sp, #12
 8002d0a:	f7ff fefb 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d0e:	f7fe fbed 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d12:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d14:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d16:	2001      	movs	r0, #1
 8002d18:	f7fd fda6 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d1c:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d20:	4894      	ldr	r0, [pc, #592]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d22:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d26:	ee17 6a90 	vmov	r6, s15
 8002d2a:	ee17 1a90 	vmov	r1, s15
 8002d2e:	230c      	movs	r3, #12
 8002d30:	2203      	movs	r2, #3
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d32:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 3, 12);
 8002d36:	f7fd fe99 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d3a:	4a8f      	ldr	r2, [pc, #572]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d3c:	4633      	mov	r3, r6
 8002d3e:	210a      	movs	r1, #10
 8002d40:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8002d44:	f016 fef2 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002d48:	4638      	mov	r0, r7
 8002d4a:	f014 fe29 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002d4e:	a803      	add	r0, sp, #12
 8002d50:	f00d fef4 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP2)
 8002d54:	f204 43cc 	addw	r3, r4, #1228	; 0x4cc
 8002d58:	429d      	cmp	r5, r3
 8002d5a:	d128      	bne.n	8002dae <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x1da>
        SwipeContainer swipeContainer = swipeContainer1;
 8002d5c:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002d60:	4639      	mov	r1, r7
 8002d62:	a803      	add	r0, sp, #12
 8002d64:	f7ff fece 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002d68:	f7fe fbc0 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d6c:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002d6e:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d70:	2001      	movs	r0, #1
 8002d72:	f7fd fd79 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d76:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002d7a:	487e      	ldr	r0, [pc, #504]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d7c:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d80:	ee17 6a90 	vmov	r6, s15
 8002d84:	ee17 1a90 	vmov	r1, s15
 8002d88:	230c      	movs	r3, #12
 8002d8a:	2204      	movs	r2, #4
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002d8c:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 4, 12);
 8002d90:	f7fd fe6c 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002d94:	4a78      	ldr	r2, [pc, #480]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002d96:	4633      	mov	r3, r6
 8002d98:	210a      	movs	r1, #10
 8002d9a:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8002d9e:	f016 fec5 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002da2:	4638      	mov	r0, r7
 8002da4:	f014 fdfc 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002da8:	a803      	add	r0, sp, #12
 8002daa:	f00d fec7 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RP3)
 8002dae:	f504 6392 	add.w	r3, r4, #1168	; 0x490
 8002db2:	429d      	cmp	r5, r3
 8002db4:	d128      	bne.n	8002e08 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x234>
        SwipeContainer swipeContainer = swipeContainer1;
 8002db6:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002dba:	4639      	mov	r1, r7
 8002dbc:	a803      	add	r0, sp, #12
 8002dbe:	f7ff fea1 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002dc2:	f7fe fb93 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dc6:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002dc8:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dca:	2001      	movs	r0, #1
 8002dcc:	f7fd fd4c 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002dd0:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002dd4:	4867      	ldr	r0, [pc, #412]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002dd6:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002dda:	ee17 6a90 	vmov	r6, s15
 8002dde:	ee17 1a90 	vmov	r1, s15
 8002de2:	230c      	movs	r3, #12
 8002de4:	2205      	movs	r2, #5
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002de6:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 5, 12);
 8002dea:	f7fd fe3f 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002dee:	4a62      	ldr	r2, [pc, #392]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002df0:	4633      	mov	r3, r6
 8002df2:	210a      	movs	r1, #10
 8002df4:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8002df8:	f016 fe98 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002dfc:	4638      	mov	r0, r7
 8002dfe:	f014 fdcf 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e02:	a803      	add	r0, sp, #12
 8002e04:	f00d fe9a 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH1)
 8002e08:	f504 63f3 	add.w	r3, r4, #1944	; 0x798
 8002e0c:	429d      	cmp	r5, r3
 8002e0e:	d128      	bne.n	8002e62 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28e>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e10:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e14:	4639      	mov	r1, r7
 8002e16:	a803      	add	r0, sp, #12
 8002e18:	f7ff fe74 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e1c:	f7fe fb66 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e20:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e22:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e24:	2001      	movs	r0, #1
 8002e26:	f7fd fd1f 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002e2a:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e2e:	4851      	ldr	r0, [pc, #324]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e30:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002e34:	ee17 6a90 	vmov	r6, s15
 8002e38:	ee17 1a90 	vmov	r1, s15
 8002e3c:	230c      	movs	r3, #12
 8002e3e:	2206      	movs	r2, #6
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e40:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 6, 12);
 8002e44:	f7fd fe12 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002e48:	4a4b      	ldr	r2, [pc, #300]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002e4a:	4633      	mov	r3, r6
 8002e4c:	210a      	movs	r1, #10
 8002e4e:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8002e52:	f016 fe6b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002e56:	4638      	mov	r0, r7
 8002e58:	f014 fda2 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002e5c:	a803      	add	r0, sp, #12
 8002e5e:	f00d fe6d 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH2)
 8002e62:	f204 735c 	addw	r3, r4, #1884	; 0x75c
 8002e66:	429d      	cmp	r5, r3
 8002e68:	d128      	bne.n	8002ebc <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002e6a:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002e6e:	4639      	mov	r1, r7
 8002e70:	a803      	add	r0, sp, #12
 8002e72:	f7ff fe47 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002e76:	f7fe fb39 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e7a:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002e7c:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e7e:	2001      	movs	r0, #1
 8002e80:	f7fd fcf2 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002e84:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002e88:	483a      	ldr	r0, [pc, #232]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e8a:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002e8e:	ee17 6a90 	vmov	r6, s15
 8002e92:	ee17 1a90 	vmov	r1, s15
 8002e96:	230c      	movs	r3, #12
 8002e98:	2207      	movs	r2, #7
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002e9a:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 7, 12);
 8002e9e:	f7fd fde5 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002ea2:	4a35      	ldr	r2, [pc, #212]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002ea4:	4633      	mov	r3, r6
 8002ea6:	210a      	movs	r1, #10
 8002ea8:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8002eac:	f016 fe3e 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002eb0:	4638      	mov	r0, r7
 8002eb2:	f014 fd75 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002eb6:	a803      	add	r0, sp, #12
 8002eb8:	f00d fe40 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_LH3)
 8002ebc:	f504 63e4 	add.w	r3, r4, #1824	; 0x720
 8002ec0:	429d      	cmp	r5, r3
 8002ec2:	d128      	bne.n	8002f16 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x342>
        SwipeContainer swipeContainer = swipeContainer1;
 8002ec4:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002ec8:	4639      	mov	r1, r7
 8002eca:	a803      	add	r0, sp, #12
 8002ecc:	f7ff fe1a 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002ed0:	f7fe fb0c 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ed4:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ed6:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ed8:	2001      	movs	r0, #1
 8002eda:	f7fd fcc5 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002ede:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ee2:	4824      	ldr	r0, [pc, #144]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ee4:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002ee8:	ee17 6a90 	vmov	r6, s15
 8002eec:	ee17 1a90 	vmov	r1, s15
 8002ef0:	230c      	movs	r3, #12
 8002ef2:	2208      	movs	r2, #8
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ef4:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 8, 12);
 8002ef8:	f7fd fdb8 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002efc:	4a1e      	ldr	r2, [pc, #120]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002efe:	4633      	mov	r3, r6
 8002f00:	210a      	movs	r1, #10
 8002f02:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8002f06:	f016 fe11 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f0a:	4638      	mov	r0, r7
 8002f0c:	f014 fd48 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f10:	a803      	add	r0, sp, #12
 8002f12:	f00d fe13 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH1)
 8002f16:	f604 2328 	addw	r3, r4, #2600	; 0xa28
 8002f1a:	429d      	cmp	r5, r3
 8002f1c:	d12e      	bne.n	8002f7c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f1e:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f22:	4639      	mov	r1, r7
 8002f24:	a803      	add	r0, sp, #12
 8002f26:	f7ff fded 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f2a:	f7fe fadf 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f2e:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f30:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f32:	2001      	movs	r0, #1
 8002f34:	f7fd fc98 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002f38:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002f3c:	480d      	ldr	r0, [pc, #52]	; (8002f74 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a0>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f3e:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002f42:	ee17 6a90 	vmov	r6, s15
 8002f46:	ee17 1a90 	vmov	r1, s15
 8002f4a:	230c      	movs	r3, #12
 8002f4c:	2209      	movs	r2, #9
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f4e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 9, 12);
 8002f52:	f7fd fd8b 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002f56:	4a08      	ldr	r2, [pc, #32]	; (8002f78 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a4>)
 8002f58:	4633      	mov	r3, r6
 8002f5a:	210a      	movs	r1, #10
 8002f5c:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8002f60:	f016 fde4 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002f64:	4638      	mov	r0, r7
 8002f66:	f014 fd1b 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002f6a:	a803      	add	r0, sp, #12
 8002f6c:	f00d fde6 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
 8002f70:	e004      	b.n	8002f7c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a8>
 8002f72:	bf00      	nop
 8002f74:	081e0000 	.word	0x081e0000
 8002f78:	0802d042 	.word	0x0802d042
    if (&src == &buttonWithIcon_RH2)
 8002f7c:	f604 13ec 	addw	r3, r4, #2540	; 0x9ec
 8002f80:	429d      	cmp	r5, r3
 8002f82:	d128      	bne.n	8002fd6 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x402>
        SwipeContainer swipeContainer = swipeContainer1;
 8002f84:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8002f88:	4639      	mov	r1, r7
 8002f8a:	a803      	add	r0, sp, #12
 8002f8c:	f7ff fdba 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002f90:	f7fe faac 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f94:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002f96:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002f98:	2001      	movs	r0, #1
 8002f9a:	f7fd fc65 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8002f9e:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002fa2:	4824      	ldr	r0, [pc, #144]	; (8003034 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fa4:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8002fa8:	ee17 6a90 	vmov	r6, s15
 8002fac:	ee17 1a90 	vmov	r1, s15
 8002fb0:	230c      	movs	r3, #12
 8002fb2:	220a      	movs	r2, #10
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fb4:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 10, 12);
 8002fb8:	f7fd fd58 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", (uint32_t)fft.signal_strength);
 8002fbc:	4a1e      	ldr	r2, [pc, #120]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 8002fbe:	4633      	mov	r3, r6
 8002fc0:	210a      	movs	r1, #10
 8002fc2:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8002fc6:	f016 fdb1 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8002fca:	4638      	mov	r0, r7
 8002fcc:	f014 fce8 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 8002fd0:	a803      	add	r0, sp, #12
 8002fd2:	f00d fdb3 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
    if (&src == &buttonWithIcon_RH3)
 8002fd6:	f504 631b 	add.w	r3, r4, #2480	; 0x9b0
 8002fda:	429d      	cmp	r5, r3
 8002fdc:	d128      	bne.n	8003030 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x45c>
        SwipeContainer swipeContainer = swipeContainer1;
 8002fde:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8002fe2:	4631      	mov	r1, r6
 8002fe4:	a803      	add	r0, sp, #12
 8002fe6:	f7ff fd8d 	bl	8002b04 <_ZN8touchgfx14SwipeContainerC1ERKS0_>
        uint32_t* Samples = MEAS_start_measure();
 8002fea:	f7fe fa7f 	bl	80014ec <MEAS_start_measure>
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002fee:	2232      	movs	r2, #50	; 0x32
        uint32_t* Samples = MEAS_start_measure();
 8002ff0:	4601      	mov	r1, r0
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ff2:	2001      	movs	r0, #1
 8002ff4:	f7fd fc38 	bl	8000868 <calculate_freq_and_signalstrength>
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 8002ff8:	eefc 7ae0 	vcvt.u32.f32	s15, s1
 8002ffc:	480d      	ldr	r0, [pc, #52]	; (8003034 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x460>)
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8002ffe:	ed8d 0a01 	vstr	s0, [sp, #4]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 8003002:	ee17 5a90 	vmov	r5, s15
 8003006:	ee17 1a90 	vmov	r1, s15
 800300a:	230c      	movs	r3, #12
 800300c:	220b      	movs	r2, #11
        FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800300e:	edcd 0a02 	vstr	s1, [sp, #8]
        setCalibrationFlashValues(SECTOR_23_ADDR, (uint32_t)fft.signal_strength, 11, 12);
 8003012:	f7fd fd2b 	bl	8000a6c <setCalibrationFlashValues>
        Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", (uint32_t)fft.signal_strength);
 8003016:	4a08      	ldr	r2, [pc, #32]	; (8003038 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x464>)
 8003018:	462b      	mov	r3, r5
 800301a:	210a      	movs	r1, #10
 800301c:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8003020:	f016 fd84 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        swipeContainer1.invalidate();
 8003024:	4630      	mov	r0, r6
 8003026:	f014 fcbb 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>
    }
 800302a:	a803      	add	r0, sp, #12
 800302c:	f00d fd86 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
}
 8003030:	b041      	add	sp, #260	; 0x104
 8003032:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003034:	081e0000 	.word	0x081e0000
 8003038:	0802d042 	.word	0x0802d042

0800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800303c:	0152      	lsls	r2, r2, #5
 800303e:	0149      	lsls	r1, r1, #5
 8003040:	f00f bcd0 	b.w	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003044:	0152      	lsls	r2, r2, #5
 8003046:	0149      	lsls	r1, r1, #5
 8003048:	f00f bcd7 	b.w	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

0800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 800304c:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 800304e:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8003050:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8003054:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8003058:	d004      	beq.n	8003064 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800305a:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800305e:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8003060:	f00f bbca 	b.w	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8003064:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003068:	4770      	bx	lr
	...

0800306c <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 800306c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003070:	ed2d 8b10 	vpush	{d8-d15}
 8003074:	4604      	mov	r4, r0
 8003076:	b0ad      	sub	sp, #180	; 0xb4
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 8003078:	46a1      	mov	r9, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 800307a:	2500      	movs	r5, #0
 800307c:	f015 f828 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8003080:	4be5      	ldr	r3, [pc, #916]	; (8003418 <_ZN23Calibration_PadViewBaseC1Ev+0x3ac>)
 8003082:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003084:	f849 3b40 	str.w	r3, [r9], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003088:	2226      	movs	r2, #38	; 0x26
 800308a:	4629      	mov	r1, r5
 800308c:	4648      	mov	r0, r9
 800308e:	f028 fc6c 	bl	802b96a <memset>
 8003092:	4648      	mov	r0, r9
 8003094:	f7ff fc86 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8003098:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 800309c:	26ff      	movs	r6, #255	; 0xff
 800309e:	4bdf      	ldr	r3, [pc, #892]	; (800341c <_ZN23Calibration_PadViewBaseC1Ev+0x3b0>)
 80030a0:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 80030a2:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 80030a4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030a8:	4629      	mov	r1, r5
 80030aa:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80030ae:	4640      	mov	r0, r8
        : color(col)
 80030b0:	66a5      	str	r5, [r4, #104]	; 0x68
 80030b2:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80030b6:	f028 fc58 	bl	802b96a <memset>
 80030ba:	4640      	mov	r0, r8
 80030bc:	f7ff fc72 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 80030c0:	4bd7      	ldr	r3, [pc, #860]	; (8003420 <_ZN23Calibration_PadViewBaseC1Ev+0x3b4>)
 80030c2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80030c4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
 80030c8:	f8bd 30a4 	ldrh.w	r3, [sp, #164]	; 0xa4
 80030cc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 80030d0:	ae29      	add	r6, sp, #164	; 0xa4
 80030d2:	4631      	mov	r1, r6
 80030d4:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80030d8:	4640      	mov	r0, r8
 80030da:	f010 fe7a 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030de:	4658      	mov	r0, fp
 80030e0:	f010 ffae 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80030e4:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80030e8:	4618      	mov	r0, r3
 80030ea:	ee08 3a10 	vmov	s16, r3
 80030ee:	f00d fe53 	bl	8010d98 <_ZN8touchgfx14SwipeContainerC1Ev>
 80030f2:	f504 73ea 	add.w	r3, r4, #468	; 0x1d4
 80030f6:	4618      	mov	r0, r3
 80030f8:	ee08 3a90 	vmov	s17, r3
 80030fc:	f7ff fc40 	bl	8002980 <_ZN8touchgfx9ContainerC1Ev>
 8003100:	f504 7300 	add.w	r3, r4, #512	; 0x200
 8003104:	4618      	mov	r0, r3
 8003106:	9311      	str	r3, [sp, #68]	; 0x44
 8003108:	f010 fe3c 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800310c:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8003110:	f504 771e 	add.w	r7, r4, #632	; 0x278
 8003114:	4618      	mov	r0, r3
 8003116:	9312      	str	r3, [sp, #72]	; 0x48
 8003118:	f010 fe34 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800311c:	4638      	mov	r0, r7
 800311e:	f010 fe31 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003122:	f504 732d 	add.w	r3, r4, #692	; 0x2b4
 8003126:	4618      	mov	r0, r3
 8003128:	ee0d 3a90 	vmov	s27, r3
 800312c:	f7ff fcbe 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003130:	f504 7340 	add.w	r3, r4, #768	; 0x300
 8003134:	4618      	mov	r0, r3
 8003136:	ee0e 3a10 	vmov	s28, r3
 800313a:	f7ff fcb7 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800313e:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8003142:	4618      	mov	r0, r3
 8003144:	ee0e 3a90 	vmov	s29, r3
 8003148:	f7ff fcb0 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800314c:	f504 7366 	add.w	r3, r4, #920	; 0x398
 8003150:	4618      	mov	r0, r3
 8003152:	ee0a 3a90 	vmov	s21, r3
 8003156:	f00f fb2f 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 800315a:	f504 6381 	add.w	r3, r4, #1032	; 0x408
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800315e:	4618      	mov	r0, r3
 8003160:	931c      	str	r3, [sp, #112]	; 0x70
 8003162:	f7ff fa23 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003166:	4baf      	ldr	r3, [pc, #700]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003168:	f8c4 3408 	str.w	r3, [r4, #1032]	; 0x408
 800316c:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003170:	f204 411c 	addw	r1, r4, #1052	; 0x41c
 8003174:	f8c4 2410 	str.w	r2, [r4, #1040]	; 0x410
 8003178:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800317a:	f8c4 5414 	str.w	r5, [r4, #1044]	; 0x414
 800317e:	f204 4a64 	addw	sl, r4, #1124	; 0x464
 8003182:	9107      	str	r1, [sp, #28]
 8003184:	f7ff fc72 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8003188:	4650      	mov	r0, sl
 800318a:	f7ff fbf9 	bl	8002980 <_ZN8touchgfx9ContainerC1Ev>
 800318e:	f504 6192 	add.w	r1, r4, #1168	; 0x490
 8003192:	4608      	mov	r0, r1
 8003194:	9113      	str	r1, [sp, #76]	; 0x4c
 8003196:	f010 fdf5 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800319a:	f204 41cc 	addw	r1, r4, #1228	; 0x4cc
 800319e:	4608      	mov	r0, r1
 80031a0:	9114      	str	r1, [sp, #80]	; 0x50
 80031a2:	f010 fdef 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031a6:	f504 61a1 	add.w	r1, r4, #1288	; 0x508
 80031aa:	4608      	mov	r0, r1
 80031ac:	9115      	str	r1, [sp, #84]	; 0x54
 80031ae:	f010 fde9 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80031b2:	f204 5144 	addw	r1, r4, #1348	; 0x544
 80031b6:	4608      	mov	r0, r1
 80031b8:	9108      	str	r1, [sp, #32]
 80031ba:	f7ff fc77 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031be:	f504 61b2 	add.w	r1, r4, #1424	; 0x590
 80031c2:	4608      	mov	r0, r1
 80031c4:	9109      	str	r1, [sp, #36]	; 0x24
 80031c6:	f7ff fc71 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031ca:	f204 51dc 	addw	r1, r4, #1500	; 0x5dc
 80031ce:	4608      	mov	r0, r1
 80031d0:	910a      	str	r1, [sp, #40]	; 0x28
 80031d2:	f7ff fc6b 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031d6:	f504 61c5 	add.w	r1, r4, #1576	; 0x628
 80031da:	4608      	mov	r0, r1
 80031dc:	ee0b 1a10 	vmov	s22, r1
 80031e0:	f00f faea 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 80031e4:	f504 61d3 	add.w	r1, r4, #1688	; 0x698
 80031e8:	4608      	mov	r0, r1
 80031ea:	911d      	str	r1, [sp, #116]	; 0x74
 80031ec:	f7ff f9de 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80031f0:	4b8c      	ldr	r3, [pc, #560]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 80031f2:	f8c4 3698 	str.w	r3, [r4, #1688]	; 0x698
 80031f6:	f103 0224 	add.w	r2, r3, #36	; 0x24
 80031fa:	f204 61ac 	addw	r1, r4, #1708	; 0x6ac
 80031fe:	f8c4 26a0 	str.w	r2, [r4, #1696]	; 0x6a0
 8003202:	4608      	mov	r0, r1
 8003204:	f8c4 56a4 	str.w	r5, [r4, #1700]	; 0x6a4
 8003208:	ee0f 1a10 	vmov	s30, r1
 800320c:	f7ff fc2e 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8003210:	f204 61f4 	addw	r1, r4, #1780	; 0x6f4
 8003214:	4608      	mov	r0, r1
 8003216:	ee09 1a10 	vmov	s18, r1
 800321a:	f7ff fbb1 	bl	8002980 <_ZN8touchgfx9ContainerC1Ev>
 800321e:	f504 61e4 	add.w	r1, r4, #1824	; 0x720
 8003222:	4608      	mov	r0, r1
 8003224:	9116      	str	r1, [sp, #88]	; 0x58
 8003226:	f010 fdad 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800322a:	f204 715c 	addw	r1, r4, #1884	; 0x75c
 800322e:	4608      	mov	r0, r1
 8003230:	9117      	str	r1, [sp, #92]	; 0x5c
 8003232:	f010 fda7 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003236:	f504 61f3 	add.w	r1, r4, #1944	; 0x798
 800323a:	4608      	mov	r0, r1
 800323c:	9118      	str	r1, [sp, #96]	; 0x60
 800323e:	f010 fda1 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8003242:	f204 71d4 	addw	r1, r4, #2004	; 0x7d4
 8003246:	4608      	mov	r0, r1
 8003248:	910b      	str	r1, [sp, #44]	; 0x2c
 800324a:	f7ff fc2f 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800324e:	f504 6102 	add.w	r1, r4, #2080	; 0x820
 8003252:	4608      	mov	r0, r1
 8003254:	910c      	str	r1, [sp, #48]	; 0x30
 8003256:	f7ff fc29 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800325a:	f604 016c 	addw	r1, r4, #2156	; 0x86c
 800325e:	4608      	mov	r0, r1
 8003260:	910d      	str	r1, [sp, #52]	; 0x34
 8003262:	f7ff fc23 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003266:	f604 01b8 	addw	r1, r4, #2232	; 0x8b8
 800326a:	4608      	mov	r0, r1
 800326c:	ee0b 1a90 	vmov	s23, r1
 8003270:	f00f faa2 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8003274:	f604 1128 	addw	r1, r4, #2344	; 0x928
 8003278:	4608      	mov	r0, r1
 800327a:	911e      	str	r1, [sp, #120]	; 0x78
 800327c:	f7ff f996 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003280:	4b68      	ldr	r3, [pc, #416]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003282:	f8c4 3928 	str.w	r3, [r4, #2344]	; 0x928
 8003286:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800328a:	f604 113c 	addw	r1, r4, #2364	; 0x93c
 800328e:	f8c4 2930 	str.w	r2, [r4, #2352]	; 0x930
 8003292:	4608      	mov	r0, r1
 8003294:	f8c4 5934 	str.w	r5, [r4, #2356]	; 0x934
 8003298:	ee0f 1a90 	vmov	s31, r1
 800329c:	f7ff fbe6 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80032a0:	f604 1184 	addw	r1, r4, #2436	; 0x984
 80032a4:	4608      	mov	r0, r1
 80032a6:	ee09 1a90 	vmov	s19, r1
 80032aa:	f7ff fb69 	bl	8002980 <_ZN8touchgfx9ContainerC1Ev>
 80032ae:	f504 611b 	add.w	r1, r4, #2480	; 0x9b0
 80032b2:	4608      	mov	r0, r1
 80032b4:	9119      	str	r1, [sp, #100]	; 0x64
 80032b6:	f010 fd65 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032ba:	f604 11ec 	addw	r1, r4, #2540	; 0x9ec
 80032be:	4608      	mov	r0, r1
 80032c0:	911a      	str	r1, [sp, #104]	; 0x68
 80032c2:	f010 fd5f 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032c6:	f604 2128 	addw	r1, r4, #2600	; 0xa28
 80032ca:	4608      	mov	r0, r1
 80032cc:	911b      	str	r1, [sp, #108]	; 0x6c
 80032ce:	f010 fd59 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80032d2:	f604 2164 	addw	r1, r4, #2660	; 0xa64
 80032d6:	4608      	mov	r0, r1
 80032d8:	910e      	str	r1, [sp, #56]	; 0x38
 80032da:	f7ff fbe7 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032de:	f504 612b 	add.w	r1, r4, #2736	; 0xab0
 80032e2:	4608      	mov	r0, r1
 80032e4:	910f      	str	r1, [sp, #60]	; 0x3c
 80032e6:	f7ff fbe1 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032ea:	f604 21fc 	addw	r1, r4, #2812	; 0xafc
 80032ee:	4608      	mov	r0, r1
 80032f0:	9110      	str	r1, [sp, #64]	; 0x40
 80032f2:	f7ff fbdb 	bl	8002aac <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032f6:	f604 3148 	addw	r1, r4, #2888	; 0xb48
 80032fa:	4608      	mov	r0, r1
 80032fc:	ee0c 1a10 	vmov	s24, r1
 8003300:	f00f fa5a 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8003304:	f604 31b8 	addw	r1, r4, #3000	; 0xbb8
 8003308:	4608      	mov	r0, r1
 800330a:	911f      	str	r1, [sp, #124]	; 0x7c
 800330c:	f7ff f94e 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003310:	4b44      	ldr	r3, [pc, #272]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003312:	f8c4 3bb8 	str.w	r3, [r4, #3000]	; 0xbb8
 8003316:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800331a:	f604 31cc 	addw	r1, r4, #3020	; 0xbcc
 800331e:	f8c4 2bc0 	str.w	r2, [r4, #3008]	; 0xbc0
 8003322:	4608      	mov	r0, r1
 8003324:	f8c4 5bc4 	str.w	r5, [r4, #3012]	; 0xbc4
 8003328:	9103      	str	r1, [sp, #12]
 800332a:	f7ff fb9f 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 800332e:	f604 4114 	addw	r1, r4, #3092	; 0xc14
 8003332:	4608      	mov	r0, r1
 8003334:	ee0c 1a90 	vmov	s25, r1
 8003338:	f00f fa3e 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 800333c:	f604 4184 	addw	r1, r4, #3204	; 0xc84
 8003340:	4608      	mov	r0, r1
 8003342:	9120      	str	r1, [sp, #128]	; 0x80
 8003344:	f7ff f932 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003348:	4b36      	ldr	r3, [pc, #216]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 800334a:	f8c4 3c84 	str.w	r3, [r4, #3204]	; 0xc84
 800334e:	f103 0224 	add.w	r2, r3, #36	; 0x24
 8003352:	f604 4198 	addw	r1, r4, #3224	; 0xc98
 8003356:	f8c4 2c8c 	str.w	r2, [r4, #3212]	; 0xc8c
 800335a:	4608      	mov	r0, r1
 800335c:	f8c4 5c90 	str.w	r5, [r4, #3216]	; 0xc90
 8003360:	9104      	str	r1, [sp, #16]
 8003362:	f7ff fb83 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8003366:	f504 614e 	add.w	r1, r4, #3296	; 0xce0
 800336a:	4608      	mov	r0, r1
 800336c:	ee0d 1a10 	vmov	s26, r1
 8003370:	f00f fa22 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8003374:	f504 6155 	add.w	r1, r4, #3408	; 0xd50
 8003378:	4608      	mov	r0, r1
 800337a:	9121      	str	r1, [sp, #132]	; 0x84
 800337c:	f7ff f916 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003380:	4b28      	ldr	r3, [pc, #160]	; (8003424 <_ZN23Calibration_PadViewBaseC1Ev+0x3b8>)
 8003382:	f8c4 3d50 	str.w	r3, [r4, #3408]	; 0xd50
 8003386:	f103 0224 	add.w	r2, r3, #36	; 0x24
 800338a:	f604 5364 	addw	r3, r4, #3428	; 0xd64
 800338e:	f8c4 2d58 	str.w	r2, [r4, #3416]	; 0xd58
 8003392:	4618      	mov	r0, r3
 8003394:	f8c4 5d5c 	str.w	r5, [r4, #3420]	; 0xd5c
 8003398:	9305      	str	r3, [sp, #20]
 800339a:	f7ff fb67 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 800339e:	f604 53ac 	addw	r3, r4, #3500	; 0xdac
 80033a2:	4618      	mov	r0, r3
 80033a4:	9306      	str	r3, [sp, #24]
 80033a6:	f7ff fb61 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80033aa:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80033ae:	4a1e      	ldr	r2, [pc, #120]	; (8003428 <_ZN23Calibration_PadViewBaseC1Ev+0x3bc>)
 80033b0:	f8c3 2cf4 	str.w	r2, [r3, #3316]	; 0xcf4
 80033b4:	4a1d      	ldr	r2, [pc, #116]	; (800342c <_ZN23Calibration_PadViewBaseC1Ev+0x3c0>)
 80033b6:	f8c3 2cfc 	str.w	r2, [r3, #3324]	; 0xcfc
 80033ba:	f8c3 4cf8 	str.w	r4, [r3, #3320]	; 0xcf8
 80033be:	f8c3 5d00 	str.w	r5, [r3, #3328]	; 0xd00
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80033c2:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80033c6:	f604 60e4 	addw	r0, r4, #3812	; 0xee4
 80033ca:	f011 fcf5 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80033ce:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80033d2:	462a      	mov	r2, r5
 80033d4:	4648      	mov	r0, r9
 80033d6:	9300      	str	r3, [sp, #0]
 80033d8:	4629      	mov	r1, r5
 80033da:	23f0      	movs	r3, #240	; 0xf0
 80033dc:	f7ff fabd 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80033e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80033e4:	66a3      	str	r3, [r4, #104]	; 0x68
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80033e6:	1d23      	adds	r3, r4, #4
 80033e8:	4618      	mov	r0, r3
 80033ea:	4649      	mov	r1, r9
 80033ec:	ee0a 3a10 	vmov	s20, r3
 80033f0:	f00d f916 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80033f4:	462a      	mov	r2, r5
 80033f6:	4640      	mov	r0, r8
 80033f8:	4629      	mov	r1, r5
 80033fa:	f7ff faa1 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80033fe:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8003402:	4640      	mov	r0, r8
 8003404:	4631      	mov	r1, r6
 8003406:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 800340a:	f010 fce2 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800340e:	4641      	mov	r1, r8
 8003410:	ee1a 0a10 	vmov	r0, s20
 8003414:	e00c      	b.n	8003430 <_ZN23Calibration_PadViewBaseC1Ev+0x3c4>
 8003416:	bf00      	nop
 8003418:	0802d238 	.word	0x0802d238
 800341c:	0802f644 	.word	0x0802f644
 8003420:	0802f890 	.word	0x0802f890
 8003424:	0802f378 	.word	0x0802f378
 8003428:	0802d220 	.word	0x0802d220
 800342c:	08002bd5 	.word	0x08002bd5
 8003430:	f00d f8f6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003434:	4658      	mov	r0, fp
 8003436:	f240 1201 	movw	r2, #257	; 0x101
 800343a:	2121      	movs	r1, #33	; 0x21
 800343c:	f7ff fa80 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8003440:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8003442:	4632      	mov	r2, r6
 8003444:	a928      	add	r1, sp, #160	; 0xa0
 8003446:	4658      	mov	r0, fp
 8003448:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 800344c:	2302      	movs	r3, #2
 800344e:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 8003452:	f010 fac8 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003456:	231f      	movs	r3, #31
        updateTextPosition();
 8003458:	4658      	mov	r0, fp
 800345a:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 800345e:	f7ff fab3 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8003462:	f04f 33ff 	mov.w	r3, #4294967295
        colorPressed = col;
 8003466:	e9c4 3335 	strd	r3, r3, [r4, #212]	; 0xd4
    buttonWithLabel3.setAction(buttonCallback);
 800346a:	f504 53e7 	add.w	r3, r4, #7392	; 0x1ce0
 800346e:	3314      	adds	r3, #20
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003470:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8003474:	4659      	mov	r1, fp
 8003476:	ee1a 0a10 	vmov	r0, s20
 800347a:	9302      	str	r3, [sp, #8]
 800347c:	f00d f8d0 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.setXY(0, 85);
 8003480:	ee18 0a10 	vmov	r0, s16
 8003484:	2255      	movs	r2, #85	; 0x55
 8003486:	4629      	mov	r1, r5
 8003488:	f7ff fa5a 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800348c:	2306      	movs	r3, #6
    swipeContainer1.setPageIndicatorBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_OFF_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SWIPECONTAINER_MEDIUM_ON_ACTIVE_ID));
 800348e:	ee18 0a10 	vmov	r0, s16
 8003492:	f8ad 30a0 	strh.w	r3, [sp, #160]	; 0xa0
 8003496:	4632      	mov	r2, r6
 8003498:	2307      	movs	r3, #7
 800349a:	a928      	add	r1, sp, #160	; 0xa0
 800349c:	f8ad 30a4 	strh.w	r3, [sp, #164]	; 0xa4
 80034a0:	f00d fd18 	bl	8010ed4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>
    swipeContainer1.setPageIndicatorXY(80, 140);
 80034a4:	228c      	movs	r2, #140	; 0x8c
 80034a6:	ee18 0a10 	vmov	r0, s16
 80034aa:	2150      	movs	r1, #80	; 0x50
 80034ac:	f00d fbc0 	bl	8010c30 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>
    swipeContainer1.setSwipeCutoff(50);
 80034b0:	ee18 0a10 	vmov	r0, s16
 80034b4:	2132      	movs	r1, #50	; 0x32
 80034b6:	f00d fb3e 	bl	8010b36 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>
    swipeContainer1.setEndSwipeElasticWidth(50);
 80034ba:	ee18 0a10 	vmov	r0, s16
 80034be:	2132      	movs	r1, #50	; 0x32
 80034c0:	f00d fbb4 	bl	8010c2c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>
        rect.width = width;
 80034c4:	4b47      	ldr	r3, [pc, #284]	; (80035e4 <_ZN23Calibration_PadViewBaseC1Ev+0x578>)
    buttonWithIcon_LP3.setXY(194, 97);
 80034c6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80034c8:	f8c4 31dc 	str.w	r3, [r4, #476]	; 0x1dc
 80034cc:	2261      	movs	r2, #97	; 0x61
 80034ce:	21c2      	movs	r1, #194	; 0xc2
 80034d0:	f7ff fa36 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80034d4:	f04f 0809 	mov.w	r8, #9
 80034d8:	f04f 0b01 	mov.w	fp, #1
    buttonWithIcon_LP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80034dc:	aa27      	add	r2, sp, #156	; 0x9c
 80034de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80034e0:	9600      	str	r6, [sp, #0]
 80034e2:	ab28      	add	r3, sp, #160	; 0xa0
 80034e4:	a926      	add	r1, sp, #152	; 0x98
 80034e6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80034ea:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80034ee:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80034f2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80034f6:	f010 fbb0 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80034fa:	9b02      	ldr	r3, [sp, #8]
 80034fc:	f8c4 3228 	str.w	r3, [r4, #552]	; 0x228
    swipeContainerPadLeft.add(buttonWithIcon_LP3);
 8003500:	9911      	ldr	r1, [sp, #68]	; 0x44
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 8003502:	f8c4 5238 	str.w	r5, [r4, #568]	; 0x238
 8003506:	ee18 0a90 	vmov	r0, s17
 800350a:	f00d f889 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP2.setXY(194, 61);
 800350e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003510:	223d      	movs	r2, #61	; 0x3d
 8003512:	21c2      	movs	r1, #194	; 0xc2
 8003514:	f7ff fa14 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003518:	aa27      	add	r2, sp, #156	; 0x9c
 800351a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800351c:	9600      	str	r6, [sp, #0]
 800351e:	ab28      	add	r3, sp, #160	; 0xa0
 8003520:	a926      	add	r1, sp, #152	; 0x98
 8003522:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003526:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 800352a:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800352e:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003532:	f010 fb92 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003536:	9b02      	ldr	r3, [sp, #8]
 8003538:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    swipeContainerPadLeft.add(buttonWithIcon_LP2);
 800353c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800353e:	f8c4 5274 	str.w	r5, [r4, #628]	; 0x274
 8003542:	ee18 0a90 	vmov	r0, s17
 8003546:	f00d f86b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LP1.setXY(194, 25);
 800354a:	4638      	mov	r0, r7
 800354c:	2219      	movs	r2, #25
 800354e:	21c2      	movs	r1, #194	; 0xc2
 8003550:	f7ff f9f6 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003554:	aa27      	add	r2, sp, #156	; 0x9c
 8003556:	4638      	mov	r0, r7
 8003558:	ab28      	add	r3, sp, #160	; 0xa0
 800355a:	a926      	add	r1, sp, #152	; 0x98
 800355c:	9600      	str	r6, [sp, #0]
 800355e:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003562:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003566:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800356a:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800356e:	f010 fb74 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003572:	9b02      	ldr	r3, [sp, #8]
 8003574:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
    swipeContainerPadLeft.add(buttonWithIcon_LP1);
 8003578:	4639      	mov	r1, r7
 800357a:	ee18 0a90 	vmov	r0, s17
 800357e:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8003582:	f00d f84d 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP3.setXY(10, 104);
 8003586:	2268      	movs	r2, #104	; 0x68
 8003588:	ee1d 0a90 	vmov	r0, s27
 800358c:	210a      	movs	r1, #10
 800358e:	f7ff f9d7 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003592:	f04f 33ff 	mov.w	r3, #4294967295
 8003596:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
        boundingArea = calculateBoundingArea();
 800359a:	f8d4 32b4 	ldr.w	r3, [r4, #692]	; 0x2b4
        linespace = space;
 800359e:	f8a4 52e8 	strh.w	r5, [r4, #744]	; 0x2e8
        boundingArea = calculateBoundingArea();
 80035a2:	af22      	add	r7, sp, #136	; 0x88
 80035a4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80035a8:	ee1d 1a90 	vmov	r1, s27
 80035ac:	4638      	mov	r0, r7
 80035ae:	4798      	blx	r3
 80035b0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80035b4:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 80035b8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80035bc:	4b0a      	ldr	r3, [pc, #40]	; (80035e8 <_ZN23Calibration_PadViewBaseC1Ev+0x57c>)
 80035be:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_12P5).getText());
 80035c0:	f604 59f4 	addw	r9, r4, #3572	; 0xdf4
 80035c4:	b92b      	cbnz	r3, 80035d2 <_ZN23Calibration_PadViewBaseC1Ev+0x566>
 80035c6:	4b09      	ldr	r3, [pc, #36]	; (80035ec <_ZN23Calibration_PadViewBaseC1Ev+0x580>)
 80035c8:	4a09      	ldr	r2, [pc, #36]	; (80035f0 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80035ca:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80035cc:	4809      	ldr	r0, [pc, #36]	; (80035f4 <_ZN23Calibration_PadViewBaseC1Ev+0x588>)
 80035ce:	f027 ffc7 	bl	802b560 <__assert_func>
 80035d2:	4b09      	ldr	r3, [pc, #36]	; (80035f8 <_ZN23Calibration_PadViewBaseC1Ev+0x58c>)
 80035d4:	881b      	ldrh	r3, [r3, #0]
 80035d6:	2b09      	cmp	r3, #9
 80035d8:	d812      	bhi.n	8003600 <_ZN23Calibration_PadViewBaseC1Ev+0x594>
 80035da:	4b08      	ldr	r3, [pc, #32]	; (80035fc <_ZN23Calibration_PadViewBaseC1Ev+0x590>)
 80035dc:	4a04      	ldr	r2, [pc, #16]	; (80035f0 <_ZN23Calibration_PadViewBaseC1Ev+0x584>)
 80035de:	2161      	movs	r1, #97	; 0x61
 80035e0:	e7f4      	b.n	80035cc <_ZN23Calibration_PadViewBaseC1Ev+0x560>
 80035e2:	bf00      	nop
 80035e4:	00ac00f0 	.word	0x00ac00f0
 80035e8:	20013844 	.word	0x20013844
 80035ec:	0802cf40 	.word	0x0802cf40
 80035f0:	0802d045 	.word	0x0802d045
 80035f4:	0802cfbd 	.word	0x0802cfbd
 80035f8:	20013848 	.word	0x20013848
 80035fc:	0802d004 	.word	0x0802d004
        return texts->getText(typedTextId);
 8003600:	4bd8      	ldr	r3, [pc, #864]	; (8003964 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003602:	4641      	mov	r1, r8
 8003604:	6818      	ldr	r0, [r3, #0]
 8003606:	f005 f99f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 800360a:	4ad7      	ldr	r2, [pc, #860]	; (8003968 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800360c:	4603      	mov	r3, r0
 800360e:	210a      	movs	r1, #10
 8003610:	4648      	mov	r0, r9
 8003612:	f016 fa8b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LP3.resizeToCurrentText();
 8003616:	ee1d 0a90 	vmov	r0, s27
        wc1 = value;
 800361a:	f8c4 92fc 	str.w	r9, [r4, #764]	; 0x2fc
 800361e:	f00f fe07 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003622:	f04f 090a 	mov.w	r9, #10
 8003626:	4ad1      	ldr	r2, [pc, #836]	; (800396c <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8003628:	9229      	str	r2, [sp, #164]	; 0xa4
    textAreaCal_LP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 800362a:	ee1d 0a90 	vmov	r0, s27
 800362e:	4631      	mov	r1, r6
 8003630:	f8ad 90a8 	strh.w	r9, [sp, #168]	; 0xa8
 8003634:	f00f fe1c 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP3);
 8003638:	ee1d 1a90 	vmov	r1, s27
 800363c:	ee18 0a90 	vmov	r0, s17
 8003640:	f00c ffee 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP2.setXY(22, 68);
 8003644:	2244      	movs	r2, #68	; 0x44
 8003646:	ee1e 0a10 	vmov	r0, s28
 800364a:	2116      	movs	r1, #22
 800364c:	f7ff f978 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8003650:	f8d4 3300 	ldr.w	r3, [r4, #768]	; 0x300
        linespace = space;
 8003654:	f8a4 5334 	strh.w	r5, [r4, #820]	; 0x334
        color = newColor;
 8003658:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 800365c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003660:	f8c4 1330 	str.w	r1, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 8003664:	4638      	mov	r0, r7
 8003666:	ee1e 1a10 	vmov	r1, s28
 800366a:	4798      	blx	r3
 800366c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8003670:	f504 734f 	add.w	r3, r4, #828	; 0x33c
 8003674:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_01G5).getText());
 8003678:	f604 6108 	addw	r1, r4, #3592	; 0xe08
 800367c:	9111      	str	r1, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800367e:	49bc      	ldr	r1, [pc, #752]	; (8003970 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003680:	680b      	ldr	r3, [r1, #0]
 8003682:	2b00      	cmp	r3, #0
 8003684:	d09f      	beq.n	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003686:	49bb      	ldr	r1, [pc, #748]	; (8003974 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8003688:	880b      	ldrh	r3, [r1, #0]
 800368a:	2b0b      	cmp	r3, #11
 800368c:	d9a5      	bls.n	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800368e:	4bb5      	ldr	r3, [pc, #724]	; (8003964 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003690:	210b      	movs	r1, #11
 8003692:	6818      	ldr	r0, [r3, #0]
 8003694:	f005 f958 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003698:	4ab3      	ldr	r2, [pc, #716]	; (8003968 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800369a:	4603      	mov	r3, r0
 800369c:	4649      	mov	r1, r9
 800369e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80036a0:	f016 fa44 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 80036a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80036a6:	f8c4 0348 	str.w	r0, [r4, #840]	; 0x348
    textAreaCal_LP2.resizeToCurrentText();
 80036aa:	ee1e 0a10 	vmov	r0, s28
 80036ae:	f00f fdbf 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80036b2:	230c      	movs	r3, #12
 80036b4:	4aad      	ldr	r2, [pc, #692]	; (800396c <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 80036b6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textAreaCal_LP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 80036ba:	ee1e 0a10 	vmov	r0, s28
 80036be:	4631      	mov	r1, r6
 80036c0:	9229      	str	r2, [sp, #164]	; 0xa4
 80036c2:	f00f fdd5 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP2);
 80036c6:	ee1e 1a10 	vmov	r1, s28
 80036ca:	ee18 0a90 	vmov	r0, s17
 80036ce:	f00c ffa7 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LP1.setXY(22, 32);
 80036d2:	2220      	movs	r2, #32
 80036d4:	ee1e 0a90 	vmov	r0, s29
 80036d8:	2116      	movs	r1, #22
 80036da:	f7ff f931 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80036de:	f8d4 334c 	ldr.w	r3, [r4, #844]	; 0x34c
        linespace = space;
 80036e2:	f8a4 5380 	strh.w	r5, [r4, #896]	; 0x380
        color = newColor;
 80036e6:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80036ea:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80036ee:	f8c4 037c 	str.w	r0, [r4, #892]	; 0x37c
        boundingArea = calculateBoundingArea();
 80036f2:	ee1e 1a90 	vmov	r1, s29
 80036f6:	4638      	mov	r0, r7
 80036f8:	4798      	blx	r3
 80036fa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80036fe:	f504 7362 	add.w	r3, r4, #904	; 0x388
 8003702:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TG06).getText());
 8003706:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 800370a:	9011      	str	r0, [sp, #68]	; 0x44
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800370c:	4898      	ldr	r0, [pc, #608]	; (8003970 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 800370e:	6803      	ldr	r3, [r0, #0]
 8003710:	2b00      	cmp	r3, #0
 8003712:	f43f af58 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003716:	4997      	ldr	r1, [pc, #604]	; (8003974 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8003718:	880b      	ldrh	r3, [r1, #0]
 800371a:	2b0d      	cmp	r3, #13
 800371c:	f67f af5d 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003720:	4b90      	ldr	r3, [pc, #576]	; (8003964 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 8003722:	210d      	movs	r1, #13
 8003724:	6818      	ldr	r0, [r3, #0]
 8003726:	f005 f90f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 800372a:	4a8f      	ldr	r2, [pc, #572]	; (8003968 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 800372c:	4603      	mov	r3, r0
 800372e:	4649      	mov	r1, r9
 8003730:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003732:	f016 f9fb 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8003736:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003738:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
    textAreaCal_LP1.resizeToCurrentText();
 800373c:	ee1e 0a90 	vmov	r0, s29
 8003740:	f00f fd76 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003744:	4a89      	ldr	r2, [pc, #548]	; (800396c <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
 8003746:	9229      	str	r2, [sp, #164]	; 0xa4
 8003748:	2314      	movs	r3, #20
    textAreaCal_LP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 800374a:	ee1e 0a90 	vmov	r0, s29
 800374e:	4631      	mov	r1, r6
 8003750:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003754:	f00f fd8c 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textAreaCal_LP1);
 8003758:	ee1e 1a90 	vmov	r1, s29
 800375c:	ee18 0a90 	vmov	r0, s17
 8003760:	f00c ff5e 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LP.setPosition(0, 15, 240, 10);
 8003764:	23f0      	movs	r3, #240	; 0xf0
 8003766:	ee1a 0a90 	vmov	r0, s21
 800376a:	220f      	movs	r2, #15
 800376c:	4629      	mov	r1, r5
 800376e:	f8cd 9000 	str.w	r9, [sp]
 8003772:	f7ff f8f2 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003776:	f04f 3cff 	mov.w	ip, #4294967295
        canvasPainter = &painter;
 800377a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800377c:	f8c4 c414 	str.w	ip, [r4, #1044]	; 0x414
    line1_LP.setStart(5, 5);
 8003780:	2205      	movs	r2, #5
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003782:	f8a4 c418 	strh.w	ip, [r4, #1048]	; 0x418
 8003786:	4611      	mov	r1, r2
 8003788:	f8c4 03c0 	str.w	r0, [r4, #960]	; 0x3c0
 800378c:	ee1a 0a90 	vmov	r0, s21
 8003790:	f7ff fc54 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LP.setEnd(235, 5);
 8003794:	2205      	movs	r2, #5
 8003796:	ee1a 0a90 	vmov	r0, s21
 800379a:	21eb      	movs	r1, #235	; 0xeb
 800379c:	f7ff fc52 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LP.setLineWidth(1);
 80037a0:	ee1a 0a90 	vmov	r0, s21
 80037a4:	4659      	mov	r1, fp
 80037a6:	f7ff fc51 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80037aa:	ee1a 0a90 	vmov	r0, s21
 80037ae:	4659      	mov	r1, fp
 80037b0:	f00f f92e 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadLeft.add(line1_LP);
 80037b4:	ee1a 1a90 	vmov	r1, s21
 80037b8:	ee18 0a90 	vmov	r0, s17
 80037bc:	f00c ff30 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LP.setXY(96, 0);
 80037c0:	462a      	mov	r2, r5
 80037c2:	9807      	ldr	r0, [sp, #28]
 80037c4:	2160      	movs	r1, #96	; 0x60
 80037c6:	f7ff f8bb 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80037ca:	f04f 3eff 	mov.w	lr, #4294967295
        boundingArea = calculateBoundingArea();
 80037ce:	4638      	mov	r0, r7
 80037d0:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 80037d2:	f8c4 e44c 	str.w	lr, [r4, #1100]	; 0x44c
        linespace = space;
 80037d6:	f8a4 5450 	strh.w	r5, [r4, #1104]	; 0x450
        boundingArea = calculateBoundingArea();
 80037da:	f00f faaf 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037de:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80037e2:	f504 638b 	add.w	r3, r4, #1112	; 0x458
 80037e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80037ea:	f04f 0e08 	mov.w	lr, #8
 80037ee:	4a5f      	ldr	r2, [pc, #380]	; (800396c <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textArea1_LP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q2TU));
 80037f0:	9807      	ldr	r0, [sp, #28]
 80037f2:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 80037f6:	4631      	mov	r1, r6
 80037f8:	9229      	str	r2, [sp, #164]	; 0xa4
 80037fa:	f00f fd39 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadLeft.add(textArea1_LP);
 80037fe:	9907      	ldr	r1, [sp, #28]
 8003800:	ee18 0a90 	vmov	r0, s17
 8003804:	f00c ff0c 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadLeft);
 8003808:	ee18 1a90 	vmov	r1, s17
 800380c:	ee18 0a10 	vmov	r0, s16
 8003810:	f00d fbe9 	bl	8010fe6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003814:	4a58      	ldr	r2, [pc, #352]	; (8003978 <_ZN23Calibration_PadViewBaseC1Ev+0x90c>)
    buttonWithIcon_RP3.setXY(194, 97);
 8003816:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003818:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 800381c:	21c2      	movs	r1, #194	; 0xc2
 800381e:	2261      	movs	r2, #97	; 0x61
 8003820:	f7ff f88e 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003824:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 8003828:	4673      	mov	r3, lr
 800382a:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 800382e:	4672      	mov	r2, lr
 8003830:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 8003834:	4671      	mov	r1, lr
 8003836:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8003838:	9600      	str	r6, [sp, #0]
 800383a:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 800383e:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003842:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 8003846:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 800384a:	f010 fa06 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800384e:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP3);
 8003850:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003852:	f8c4 74b8 	str.w	r7, [r4, #1208]	; 0x4b8
 8003856:	4650      	mov	r0, sl
 8003858:	f8c4 54c8 	str.w	r5, [r4, #1224]	; 0x4c8
 800385c:	f00c fee0 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP2.setXY(194, 61);
 8003860:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003862:	223d      	movs	r2, #61	; 0x3d
 8003864:	21c2      	movs	r1, #194	; 0xc2
 8003866:	f7ff f86b 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 800386a:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 800386e:	4673      	mov	r3, lr
 8003870:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 8003874:	4672      	mov	r2, lr
 8003876:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 800387a:	4671      	mov	r1, lr
 800387c:	9814      	ldr	r0, [sp, #80]	; 0x50
 800387e:	9600      	str	r6, [sp, #0]
 8003880:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 8003884:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 8003888:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 800388c:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 8003890:	f010 f9e3 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003894:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP2);
 8003896:	9914      	ldr	r1, [sp, #80]	; 0x50
 8003898:	f8c4 74f4 	str.w	r7, [r4, #1268]	; 0x4f4
 800389c:	4650      	mov	r0, sl
 800389e:	f8c4 5504 	str.w	r5, [r4, #1284]	; 0x504
 80038a2:	f00c febd 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RP1.setXY(194, 25);
 80038a6:	9815      	ldr	r0, [sp, #84]	; 0x54
 80038a8:	2219      	movs	r2, #25
 80038aa:	21c2      	movs	r1, #194	; 0xc2
 80038ac:	f7ff f848 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RP1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 80038b0:	f10d 0ea0 	add.w	lr, sp, #160	; 0xa0
 80038b4:	4673      	mov	r3, lr
 80038b6:	f10d 0e9c 	add.w	lr, sp, #156	; 0x9c
 80038ba:	4672      	mov	r2, lr
 80038bc:	f10d 0e98 	add.w	lr, sp, #152	; 0x98
 80038c0:	4671      	mov	r1, lr
 80038c2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80038c4:	9600      	str	r6, [sp, #0]
 80038c6:	f8ad 5098 	strh.w	r5, [sp, #152]	; 0x98
 80038ca:	f8ad b09c 	strh.w	fp, [sp, #156]	; 0x9c
 80038ce:	f8ad 80a0 	strh.w	r8, [sp, #160]	; 0xa0
 80038d2:	f8ad 80a4 	strh.w	r8, [sp, #164]	; 0xa4
 80038d6:	f010 f9c0 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80038da:	9f02      	ldr	r7, [sp, #8]
    swipeContainerPadRight.add(buttonWithIcon_RP1);
 80038dc:	9915      	ldr	r1, [sp, #84]	; 0x54
 80038de:	f8c4 7530 	str.w	r7, [r4, #1328]	; 0x530
 80038e2:	4650      	mov	r0, sl
 80038e4:	f8c4 5540 	str.w	r5, [r4, #1344]	; 0x540
 80038e8:	f00c fe9a 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP3.setXY(10, 104);
 80038ec:	2268      	movs	r2, #104	; 0x68
 80038ee:	4649      	mov	r1, r9
 80038f0:	9808      	ldr	r0, [sp, #32]
 80038f2:	f7ff f825 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80038f6:	f04f 3eff 	mov.w	lr, #4294967295
 80038fa:	f8c4 e574 	str.w	lr, [r4, #1396]	; 0x574
        linespace = space;
 80038fe:	f8a4 5578 	strh.w	r5, [r4, #1400]	; 0x578
        return TextArea::BoundingArea();
 8003902:	4630      	mov	r0, r6
 8003904:	f7ff f8a4 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003908:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800390c:	f504 63b0 	add.w	r3, r4, #1408	; 0x580
 8003910:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003914:	4816      	ldr	r0, [pc, #88]	; (8003970 <_ZN23Calibration_PadViewBaseC1Ev+0x904>)
 8003916:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8T3Q).getText());
 8003918:	f504 6763 	add.w	r7, r4, #3632	; 0xe30
 800391c:	2b00      	cmp	r3, #0
 800391e:	f43f ae52 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003922:	4914      	ldr	r1, [pc, #80]	; (8003974 <_ZN23Calibration_PadViewBaseC1Ev+0x908>)
 8003924:	880b      	ldrh	r3, [r1, #0]
 8003926:	2b12      	cmp	r3, #18
 8003928:	f67f ae57 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 800392c:	4b0d      	ldr	r3, [pc, #52]	; (8003964 <_ZN23Calibration_PadViewBaseC1Ev+0x8f8>)
 800392e:	2112      	movs	r1, #18
 8003930:	6818      	ldr	r0, [r3, #0]
 8003932:	f005 f809 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003936:	4a0c      	ldr	r2, [pc, #48]	; (8003968 <_ZN23Calibration_PadViewBaseC1Ev+0x8fc>)
 8003938:	4603      	mov	r3, r0
 800393a:	4649      	mov	r1, r9
 800393c:	4638      	mov	r0, r7
 800393e:	f016 f8f5 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP3.resizeToCurrentText();
 8003942:	9808      	ldr	r0, [sp, #32]
        wc1 = value;
 8003944:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
 8003948:	f00f fc72 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800394c:	4f07      	ldr	r7, [pc, #28]	; (800396c <_ZN23Calibration_PadViewBaseC1Ev+0x900>)
    textAreaCal_RP3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH3));
 800394e:	9808      	ldr	r0, [sp, #32]
 8003950:	9729      	str	r7, [sp, #164]	; 0xa4
 8003952:	2313      	movs	r3, #19
 8003954:	4631      	mov	r1, r6
 8003956:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800395a:	f00f fc89 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP3);
 800395e:	9908      	ldr	r1, [sp, #32]
 8003960:	4650      	mov	r0, sl
 8003962:	e00b      	b.n	800397c <_ZN23Calibration_PadViewBaseC1Ev+0x910>
 8003964:	20013850 	.word	0x20013850
 8003968:	0802d07d 	.word	0x0802d07d
 800396c:	0802d0f0 	.word	0x0802d0f0
 8003970:	20013844 	.word	0x20013844
 8003974:	20013848 	.word	0x20013848
 8003978:	00ac00f0 	.word	0x00ac00f0
 800397c:	f00c fe50 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RP2.setXY(22, 68);
 8003980:	2116      	movs	r1, #22
 8003982:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003984:	2244      	movs	r2, #68	; 0x44
 8003986:	f7fe ffdb 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800398a:	f04f 32ff 	mov.w	r2, #4294967295
 800398e:	f8c4 25c0 	str.w	r2, [r4, #1472]	; 0x5c0
        linespace = space;
 8003992:	f8a4 55c4 	strh.w	r5, [r4, #1476]	; 0x5c4
        return TextArea::BoundingArea();
 8003996:	4630      	mov	r0, r6
 8003998:	f7ff f85a 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800399c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80039a0:	f204 53cc 	addw	r3, r4, #1484	; 0x5cc
 80039a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039a8:	48d9      	ldr	r0, [pc, #868]	; (8003d10 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>)
 80039aa:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_NZZI).getText());
 80039ac:	f604 6544 	addw	r5, r4, #3652	; 0xe44
 80039b0:	2b00      	cmp	r3, #0
 80039b2:	f43f ae08 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039b6:	49d7      	ldr	r1, [pc, #860]	; (8003d14 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 80039b8:	880b      	ldrh	r3, [r1, #0]
 80039ba:	2b10      	cmp	r3, #16
 80039bc:	f67f ae0d 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 80039c0:	4bd5      	ldr	r3, [pc, #852]	; (8003d18 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039c2:	f8df b34c 	ldr.w	fp, [pc, #844]	; 8003d10 <_ZN23Calibration_PadViewBaseC1Ev+0xca4>
        return texts->getText(typedTextId);
 80039c6:	6818      	ldr	r0, [r3, #0]
 80039c8:	2110      	movs	r1, #16
 80039ca:	f004 ffbd 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 80039ce:	4ad3      	ldr	r2, [pc, #844]	; (8003d1c <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 80039d0:	4603      	mov	r3, r0
 80039d2:	4649      	mov	r1, r9
 80039d4:	4628      	mov	r0, r5
 80039d6:	f016 f8a9 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP2.resizeToCurrentText();
 80039da:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 80039dc:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80039e0:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RP2.resizeToCurrentText();
 80039e2:	f00f fc25 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80039e6:	2311      	movs	r3, #17
    textAreaCal_RP2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_RH2));
 80039e8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80039ea:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80039ee:	4629      	mov	r1, r5
 80039f0:	9729      	str	r7, [sp, #164]	; 0xa4
 80039f2:	f00f fc3d 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP2);
 80039f6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80039f8:	4650      	mov	r0, sl
 80039fa:	f00c fe11 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80039fe:	f04f 36ff 	mov.w	r6, #4294967295
    textAreaCal_RP1.setXY(22, 32);
 8003a02:	2220      	movs	r2, #32
 8003a04:	2116      	movs	r1, #22
 8003a06:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003a08:	f7fe ff9a 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8003a0c:	f8c4 660c 	str.w	r6, [r4, #1548]	; 0x60c
        linespace = space;
 8003a10:	2600      	movs	r6, #0
 8003a12:	f8a4 6610 	strh.w	r6, [r4, #1552]	; 0x610
        return TextArea::BoundingArea();
 8003a16:	4628      	mov	r0, r5
 8003a18:	f7ff f81a 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003a20:	f504 63c3 	add.w	r3, r4, #1560	; 0x618
 8003a24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a28:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XVN8).getText());
 8003a2c:	f604 6758 	addw	r7, r4, #3672	; 0xe58
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	f43f adc8 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a36:	49b7      	ldr	r1, [pc, #732]	; (8003d14 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003a38:	880b      	ldrh	r3, [r1, #0]
 8003a3a:	2b0f      	cmp	r3, #15
 8003a3c:	f67f adcd 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003a40:	4bb5      	ldr	r3, [pc, #724]	; (8003d18 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003a42:	210f      	movs	r1, #15
 8003a44:	6818      	ldr	r0, [r3, #0]
 8003a46:	f004 ff7f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003a4a:	4ab4      	ldr	r2, [pc, #720]	; (8003d1c <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003a4c:	4603      	mov	r3, r0
 8003a4e:	4649      	mov	r1, r9
 8003a50:	4638      	mov	r0, r7
 8003a52:	f016 f86b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RP1.resizeToCurrentText();
 8003a56:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003a58:	f8c4 7624 	str.w	r7, [r4, #1572]	; 0x624
 8003a5c:	f00f fbe8 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003a60:	4faf      	ldr	r7, [pc, #700]	; (8003d20 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_RP1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003a62:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003a64:	9729      	str	r7, [sp, #164]	; 0xa4
 8003a66:	f04f 0e14 	mov.w	lr, #20
 8003a6a:	4629      	mov	r1, r5
 8003a6c:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003a70:	f00f fbfe 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textAreaCal_RP1);
 8003a74:	4650      	mov	r0, sl
 8003a76:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003a78:	f00c fdd2 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RP.setPosition(0, 15, 240, 10);
 8003a7c:	23f0      	movs	r3, #240	; 0xf0
 8003a7e:	ee1b 0a10 	vmov	r0, s22
 8003a82:	f8cd 9000 	str.w	r9, [sp]
 8003a86:	220f      	movs	r2, #15
 8003a88:	4631      	mov	r1, r6
 8003a8a:	f7fe ff66 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a8e:	f04f 32ff 	mov.w	r2, #4294967295
 8003a92:	f8c4 26a4 	str.w	r2, [r4, #1700]	; 0x6a4
 8003a96:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8003a98:	f8c4 2650 	str.w	r2, [r4, #1616]	; 0x650
 8003a9c:	f04f 3cff 	mov.w	ip, #4294967295
    line1_RP.setStart(5, 5);
 8003aa0:	2205      	movs	r2, #5
 8003aa2:	f8a4 c6a8 	strh.w	ip, [r4, #1704]	; 0x6a8
 8003aa6:	4611      	mov	r1, r2
 8003aa8:	ee1b 0a10 	vmov	r0, s22
 8003aac:	f7ff fac6 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RP.setEnd(235, 5);
 8003ab0:	2205      	movs	r2, #5
 8003ab2:	ee1b 0a10 	vmov	r0, s22
 8003ab6:	21eb      	movs	r1, #235	; 0xeb
 8003ab8:	f7ff fac4 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RP.setLineWidth(1);
 8003abc:	ee1b 0a10 	vmov	r0, s22
 8003ac0:	2101      	movs	r1, #1
 8003ac2:	f7ff fac3 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RP.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003ac6:	ee1b 0a10 	vmov	r0, s22
 8003aca:	2101      	movs	r1, #1
 8003acc:	f00e ffa0 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerPadRight.add(line1_RP);
 8003ad0:	4650      	mov	r0, sl
 8003ad2:	ee1b 1a10 	vmov	r1, s22
 8003ad6:	f00c fda3 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RP.setXY(92, 0);
 8003ada:	ee1f 0a10 	vmov	r0, s30
 8003ade:	4632      	mov	r2, r6
 8003ae0:	215c      	movs	r1, #92	; 0x5c
 8003ae2:	f7fe ff2d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003ae6:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8003aea:	ee1f 1a10 	vmov	r1, s30
        color = newColor;
 8003aee:	f8c4 26dc 	str.w	r2, [r4, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003af2:	a822      	add	r0, sp, #136	; 0x88
        linespace = space;
 8003af4:	f8a4 66e0 	strh.w	r6, [r4, #1760]	; 0x6e0
        boundingArea = calculateBoundingArea();
 8003af8:	f00f f920 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003afc:	ee1f 2a10 	vmov	r2, s30
 8003b00:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003b04:	f102 033c 	add.w	r3, r2, #60	; 0x3c
 8003b08:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003b0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b10:	230e      	movs	r3, #14
    textArea1_RP.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L8ZM));
 8003b12:	ee1f 0a10 	vmov	r0, s30
 8003b16:	4629      	mov	r1, r5
 8003b18:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003b1c:	9729      	str	r7, [sp, #164]	; 0xa4
 8003b1e:	f00f fba7 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerPadRight.add(textArea1_RP);
 8003b22:	4650      	mov	r0, sl
 8003b24:	ee1f 1a10 	vmov	r1, s30
 8003b28:	f00c fd7a 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerPadRight);
 8003b2c:	4651      	mov	r1, sl
 8003b2e:	ee18 0a10 	vmov	r0, s16
 8003b32:	f00d fa58 	bl	8010fe6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003b36:	487b      	ldr	r0, [pc, #492]	; (8003d24 <_ZN23Calibration_PadViewBaseC1Ev+0xcb8>)
 8003b38:	f8c4 06fc 	str.w	r0, [r4, #1788]	; 0x6fc
    buttonWithIcon_LH3.setXY(194, 97);
 8003b3c:	2261      	movs	r2, #97	; 0x61
 8003b3e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003b40:	21c2      	movs	r1, #194	; 0xc2
 8003b42:	f7fe fefd 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b46:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003b4a:	4663      	mov	r3, ip
 8003b4c:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003b50:	4662      	mov	r2, ip
 8003b52:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003b56:	2709      	movs	r7, #9
 8003b58:	4661      	mov	r1, ip
 8003b5a:	9816      	ldr	r0, [sp, #88]	; 0x58
 8003b5c:	9500      	str	r5, [sp, #0]
    line1_RP.setPosition(0, 15, 240, 10);
 8003b5e:	46c8      	mov	r8, r9
 8003b60:	f04f 0901 	mov.w	r9, #1
 8003b64:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003b68:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003b6c:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003b70:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
    buttonWithIcon_LH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b74:	f010 f871 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003b78:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH3);
 8003b7a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8003b7c:	f8c4 2748 	str.w	r2, [r4, #1864]	; 0x748
 8003b80:	ee19 0a10 	vmov	r0, s18
 8003b84:	f8c4 6758 	str.w	r6, [r4, #1880]	; 0x758
 8003b88:	f00c fd4a 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH2.setXY(194, 61);
 8003b8c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003b8e:	223d      	movs	r2, #61	; 0x3d
 8003b90:	21c2      	movs	r1, #194	; 0xc2
 8003b92:	f7fe fed5 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003b96:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003b9a:	4663      	mov	r3, ip
 8003b9c:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003ba0:	4662      	mov	r2, ip
 8003ba2:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003ba6:	4661      	mov	r1, ip
 8003ba8:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003baa:	9500      	str	r5, [sp, #0]
 8003bac:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003bb0:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003bb4:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003bb8:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003bbc:	f010 f84d 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003bc0:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH2);
 8003bc2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8003bc4:	f8c4 2784 	str.w	r2, [r4, #1924]	; 0x784
 8003bc8:	ee19 0a10 	vmov	r0, s18
 8003bcc:	f8c4 6794 	str.w	r6, [r4, #1940]	; 0x794
 8003bd0:	f00c fd26 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_LH1.setXY(194, 25);
 8003bd4:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003bd6:	2219      	movs	r2, #25
 8003bd8:	21c2      	movs	r1, #194	; 0xc2
 8003bda:	f7fe feb1 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_LH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003bde:	f10d 0ca0 	add.w	ip, sp, #160	; 0xa0
 8003be2:	4663      	mov	r3, ip
 8003be4:	f10d 0c9c 	add.w	ip, sp, #156	; 0x9c
 8003be8:	4662      	mov	r2, ip
 8003bea:	f10d 0c98 	add.w	ip, sp, #152	; 0x98
 8003bee:	4661      	mov	r1, ip
 8003bf0:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003bf2:	9500      	str	r5, [sp, #0]
 8003bf4:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003bf8:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003bfc:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003c00:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003c04:	f010 f829 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003c08:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallLeft.add(buttonWithIcon_LH1);
 8003c0a:	9918      	ldr	r1, [sp, #96]	; 0x60
 8003c0c:	f8c4 27c0 	str.w	r2, [r4, #1984]	; 0x7c0
 8003c10:	ee19 0a10 	vmov	r0, s18
 8003c14:	f8c4 67d0 	str.w	r6, [r4, #2000]	; 0x7d0
 8003c18:	f00c fd02 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH3.setXY(10, 104);
 8003c1c:	2268      	movs	r2, #104	; 0x68
 8003c1e:	4641      	mov	r1, r8
 8003c20:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003c22:	f7fe fe8d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003c26:	f04f 3cff 	mov.w	ip, #4294967295
 8003c2a:	f8c4 c804 	str.w	ip, [r4, #2052]	; 0x804
        linespace = space;
 8003c2e:	f8a4 6808 	strh.w	r6, [r4, #2056]	; 0x808
        return TextArea::BoundingArea();
 8003c32:	4628      	mov	r0, r5
 8003c34:	f7fe ff0c 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c38:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c3c:	f504 6301 	add.w	r3, r4, #2064	; 0x810
 8003c40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c44:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NSV).getText());
 8003c48:	f604 6a6c 	addw	sl, r4, #3692	; 0xe6c
 8003c4c:	2b00      	cmp	r3, #0
 8003c4e:	f43f acba 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c52:	4930      	ldr	r1, [pc, #192]	; (8003d14 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003c54:	880b      	ldrh	r3, [r1, #0]
 8003c56:	2b07      	cmp	r3, #7
 8003c58:	f67f acbf 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003c5c:	4b2e      	ldr	r3, [pc, #184]	; (8003d18 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003c5e:	2107      	movs	r1, #7
 8003c60:	6818      	ldr	r0, [r3, #0]
 8003c62:	f004 fe71 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003c66:	4a2d      	ldr	r2, [pc, #180]	; (8003d1c <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003c68:	4603      	mov	r3, r0
 8003c6a:	4641      	mov	r1, r8
 8003c6c:	4650      	mov	r0, sl
 8003c6e:	f015 ff5d 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH3.resizeToCurrentText();
 8003c72:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003c74:	f8c4 a81c 	str.w	sl, [r4, #2076]	; 0x81c
 8003c78:	f00f fada 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003c7c:	4a28      	ldr	r2, [pc, #160]	; (8003d20 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003c7e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003c80:	9229      	str	r2, [sp, #164]	; 0xa4
 8003c82:	4629      	mov	r1, r5
 8003c84:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003c88:	f00f faf2 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH3);
 8003c8c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003c8e:	ee19 0a10 	vmov	r0, s18
 8003c92:	f00c fcc5 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH2.setXY(22, 68);
 8003c96:	2244      	movs	r2, #68	; 0x44
 8003c98:	2116      	movs	r1, #22
 8003c9a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003c9c:	f7fe fe50 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003ca0:	f04f 3cff 	mov.w	ip, #4294967295
 8003ca4:	f8c4 c850 	str.w	ip, [r4, #2128]	; 0x850
        linespace = space;
 8003ca8:	f8a4 6854 	strh.w	r6, [r4, #2132]	; 0x854
        return TextArea::BoundingArea();
 8003cac:	4628      	mov	r0, r5
 8003cae:	f7fe fecf 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003cb2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003cb6:	f604 035c 	addw	r3, r4, #2140	; 0x85c
 8003cba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003cbe:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_M8NH).getText());
 8003cc2:	f504 6a68 	add.w	sl, r4, #3712	; 0xe80
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	f43f ac7d 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ccc:	4911      	ldr	r1, [pc, #68]	; (8003d14 <_ZN23Calibration_PadViewBaseC1Ev+0xca8>)
 8003cce:	880b      	ldrh	r3, [r1, #0]
 8003cd0:	2b06      	cmp	r3, #6
 8003cd2:	f67f ac82 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003cd6:	4b10      	ldr	r3, [pc, #64]	; (8003d18 <_ZN23Calibration_PadViewBaseC1Ev+0xcac>)
 8003cd8:	2106      	movs	r1, #6
 8003cda:	6818      	ldr	r0, [r3, #0]
 8003cdc:	f004 fe34 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003ce0:	4a0e      	ldr	r2, [pc, #56]	; (8003d1c <_ZN23Calibration_PadViewBaseC1Ev+0xcb0>)
 8003ce2:	4603      	mov	r3, r0
 8003ce4:	4641      	mov	r1, r8
 8003ce6:	4650      	mov	r0, sl
 8003ce8:	f015 ff20 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH2.resizeToCurrentText();
 8003cec:	980c      	ldr	r0, [sp, #48]	; 0x30
        wc1 = value;
 8003cee:	f8c4 a868 	str.w	sl, [r4, #2152]	; 0x868
 8003cf2:	f00f fa9d 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003cf6:	230c      	movs	r3, #12
 8003cf8:	4a09      	ldr	r2, [pc, #36]	; (8003d20 <_ZN23Calibration_PadViewBaseC1Ev+0xcb4>)
    textAreaCal_LH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 8003cfa:	980c      	ldr	r0, [sp, #48]	; 0x30
 8003cfc:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8003d00:	4629      	mov	r1, r5
 8003d02:	9229      	str	r2, [sp, #164]	; 0xa4
 8003d04:	f00f fab4 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH2);
 8003d08:	990c      	ldr	r1, [sp, #48]	; 0x30
 8003d0a:	ee19 0a10 	vmov	r0, s18
 8003d0e:	e00b      	b.n	8003d28 <_ZN23Calibration_PadViewBaseC1Ev+0xcbc>
 8003d10:	20013844 	.word	0x20013844
 8003d14:	20013848 	.word	0x20013848
 8003d18:	20013850 	.word	0x20013850
 8003d1c:	0802d07d 	.word	0x0802d07d
 8003d20:	0802d0f0 	.word	0x0802d0f0
 8003d24:	00ac00f0 	.word	0x00ac00f0
 8003d28:	f00c fc7a 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_LH1.setXY(22, 32);
 8003d2c:	2220      	movs	r2, #32
 8003d2e:	2116      	movs	r1, #22
 8003d30:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003d32:	f7fe fe05 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003d36:	f04f 3cff 	mov.w	ip, #4294967295
 8003d3a:	f8c4 c89c 	str.w	ip, [r4, #2204]	; 0x89c
        linespace = space;
 8003d3e:	f8a4 68a0 	strh.w	r6, [r4, #2208]	; 0x8a0
        return TextArea::BoundingArea();
 8003d42:	4628      	mov	r0, r5
 8003d44:	f7fe fe84 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d48:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003d4c:	f604 03a8 	addw	r3, r4, #2216	; 0x8a8
 8003d50:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d54:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I3S7).getText());
 8003d58:	f604 6a94 	addw	sl, r4, #3732	; 0xe94
 8003d5c:	2b00      	cmp	r3, #0
 8003d5e:	f43f ac32 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d62:	49d9      	ldr	r1, [pc, #868]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003d64:	880b      	ldrh	r3, [r1, #0]
 8003d66:	2b05      	cmp	r3, #5
 8003d68:	f67f ac37 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003d6c:	4bd7      	ldr	r3, [pc, #860]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003d6e:	2105      	movs	r1, #5
 8003d70:	6818      	ldr	r0, [r3, #0]
 8003d72:	f004 fde9 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003d76:	4ad6      	ldr	r2, [pc, #856]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003d78:	4603      	mov	r3, r0
 8003d7a:	4641      	mov	r1, r8
 8003d7c:	4650      	mov	r0, sl
 8003d7e:	f015 fed5 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_LH1.resizeToCurrentText();
 8003d82:	980d      	ldr	r0, [sp, #52]	; 0x34
        wc1 = value;
 8003d84:	f8c4 a8b4 	str.w	sl, [r4, #2228]	; 0x8b4
 8003d88:	f00f fa52 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8003d8c:	f04f 0e14 	mov.w	lr, #20
 8003d90:	4ad0      	ldr	r2, [pc, #832]	; (80040d4 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
    textAreaCal_LH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8003d92:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003d94:	f8ad e0a8 	strh.w	lr, [sp, #168]	; 0xa8
 8003d98:	4629      	mov	r1, r5
 8003d9a:	9229      	str	r2, [sp, #164]	; 0xa4
 8003d9c:	f00f fa68 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textAreaCal_LH1);
 8003da0:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003da2:	ee19 0a10 	vmov	r0, s18
 8003da6:	f00c fc3b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_LH.setPosition(0, 15, 240, 10);
 8003daa:	ee1b 0a90 	vmov	r0, s23
 8003dae:	23f0      	movs	r3, #240	; 0xf0
 8003db0:	220f      	movs	r2, #15
 8003db2:	4631      	mov	r1, r6
 8003db4:	f8cd 8000 	str.w	r8, [sp]
 8003db8:	f7fe fdcf 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003dbc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003dc0:	f04f 3cff 	mov.w	ip, #4294967295
 8003dc4:	981e      	ldr	r0, [sp, #120]	; 0x78
 8003dc6:	f8a4 3938 	strh.w	r3, [r4, #2360]	; 0x938
    line1_LH.setStart(5, 5);
 8003dca:	2205      	movs	r2, #5
 8003dcc:	f8c4 c934 	str.w	ip, [r4, #2356]	; 0x934
 8003dd0:	4611      	mov	r1, r2
 8003dd2:	f8c4 08e0 	str.w	r0, [r4, #2272]	; 0x8e0
 8003dd6:	ee1b 0a90 	vmov	r0, s23
 8003dda:	f7ff f92f 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_LH.setEnd(235, 5);
 8003dde:	2205      	movs	r2, #5
 8003de0:	ee1b 0a90 	vmov	r0, s23
 8003de4:	21eb      	movs	r1, #235	; 0xeb
 8003de6:	f7ff f92d 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_LH.setLineWidth(1);
 8003dea:	ee1b 0a90 	vmov	r0, s23
 8003dee:	4649      	mov	r1, r9
 8003df0:	f7ff f92c 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_LH.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003df4:	ee1b 0a90 	vmov	r0, s23
 8003df8:	4649      	mov	r1, r9
 8003dfa:	f00e fe09 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallLeft.add(line1_LH);
 8003dfe:	ee1b 1a90 	vmov	r1, s23
 8003e02:	ee19 0a10 	vmov	r0, s18
 8003e06:	f00c fc0b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_LH.setXY(73, 0);
 8003e0a:	4632      	mov	r2, r6
 8003e0c:	ee1f 0a90 	vmov	r0, s31
 8003e10:	2149      	movs	r1, #73	; 0x49
 8003e12:	f7fe fd95 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003e16:	f04f 3cff 	mov.w	ip, #4294967295
 8003e1a:	f8c4 c96c 	str.w	ip, [r4, #2412]	; 0x96c
        boundingArea = calculateBoundingArea();
 8003e1e:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003e22:	4660      	mov	r0, ip
 8003e24:	ee1f 1a90 	vmov	r1, s31
        linespace = space;
 8003e28:	f8a4 6970 	strh.w	r6, [r4, #2416]	; 0x970
        boundingArea = calculateBoundingArea();
 8003e2c:	f00e ff86 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003e30:	ee1f 0a90 	vmov	r0, s31
 8003e34:	f10d 0c88 	add.w	ip, sp, #136	; 0x88
 8003e38:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 8003e3c:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 8003e40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003e44:	2304      	movs	r3, #4
 8003e46:	4aa3      	ldr	r2, [pc, #652]	; (80040d4 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>)
 8003e48:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
    textArea1_LH.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F9FQ));
 8003e4c:	4629      	mov	r1, r5
 8003e4e:	ee1f 0a90 	vmov	r0, s31
 8003e52:	9229      	str	r2, [sp, #164]	; 0xa4
 8003e54:	f00f fa0c 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallLeft.add(textArea1_LH);
 8003e58:	ee1f 1a90 	vmov	r1, s31
 8003e5c:	ee19 0a10 	vmov	r0, s18
 8003e60:	f00c fbde 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallLeft);
 8003e64:	ee19 1a10 	vmov	r1, s18
 8003e68:	ee18 0a10 	vmov	r0, s16
 8003e6c:	f00d f8bb 	bl	8010fe6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
 8003e70:	4899      	ldr	r0, [pc, #612]	; (80040d8 <_ZN23Calibration_PadViewBaseC1Ev+0x106c>)
 8003e72:	f8c4 098c 	str.w	r0, [r4, #2444]	; 0x98c
    buttonWithIcon_RH3.setXY(194, 97);
 8003e76:	2261      	movs	r2, #97	; 0x61
 8003e78:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003e7a:	21c2      	movs	r1, #194	; 0xc2
 8003e7c:	f7fe fd60 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003e80:	aa28      	add	r2, sp, #160	; 0xa0
 8003e82:	a826      	add	r0, sp, #152	; 0x98
 8003e84:	4613      	mov	r3, r2
 8003e86:	4601      	mov	r1, r0
 8003e88:	9500      	str	r5, [sp, #0]
 8003e8a:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003e8c:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003e90:	aa27      	add	r2, sp, #156	; 0x9c
 8003e92:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003e96:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003e9a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003e9e:	f00f fedc 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003ea2:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH3);
 8003ea4:	9919      	ldr	r1, [sp, #100]	; 0x64
 8003ea6:	f8c4 29d8 	str.w	r2, [r4, #2520]	; 0x9d8
 8003eaa:	ee19 0a90 	vmov	r0, s19
 8003eae:	f8c4 69e8 	str.w	r6, [r4, #2536]	; 0x9e8
 8003eb2:	f00c fbb5 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH2.setXY(194, 61);
 8003eb6:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003eb8:	223d      	movs	r2, #61	; 0x3d
 8003eba:	21c2      	movs	r1, #194	; 0xc2
 8003ebc:	f7fe fd40 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003ec0:	aa28      	add	r2, sp, #160	; 0xa0
 8003ec2:	a826      	add	r0, sp, #152	; 0x98
 8003ec4:	4613      	mov	r3, r2
 8003ec6:	4601      	mov	r1, r0
 8003ec8:	9500      	str	r5, [sp, #0]
 8003eca:	981a      	ldr	r0, [sp, #104]	; 0x68
 8003ecc:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003ed0:	aa27      	add	r2, sp, #156	; 0x9c
 8003ed2:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003ed6:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003eda:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003ede:	f00f febc 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003ee2:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH2);
 8003ee4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003ee6:	f8c4 2a14 	str.w	r2, [r4, #2580]	; 0xa14
 8003eea:	ee19 0a90 	vmov	r0, s19
 8003eee:	f8c4 6a24 	str.w	r6, [r4, #2596]	; 0xa24
 8003ef2:	f00c fb95 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon_RH1.setXY(194, 25);
 8003ef6:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003ef8:	2219      	movs	r2, #25
 8003efa:	21c2      	movs	r1, #194	; 0xc2
 8003efc:	f7fe fd20 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon_RH1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID), touchgfx::Bitmap(BITMAP_CHECKMARK_ID));
 8003f00:	aa28      	add	r2, sp, #160	; 0xa0
 8003f02:	a826      	add	r0, sp, #152	; 0x98
 8003f04:	4613      	mov	r3, r2
 8003f06:	4601      	mov	r1, r0
 8003f08:	9500      	str	r5, [sp, #0]
 8003f0a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003f0c:	f8ad 6098 	strh.w	r6, [sp, #152]	; 0x98
 8003f10:	aa27      	add	r2, sp, #156	; 0x9c
 8003f12:	f8ad 909c 	strh.w	r9, [sp, #156]	; 0x9c
 8003f16:	f8ad 70a0 	strh.w	r7, [sp, #160]	; 0xa0
 8003f1a:	f8ad 70a4 	strh.w	r7, [sp, #164]	; 0xa4
 8003f1e:	f00f fe9c 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8003f22:	9a02      	ldr	r2, [sp, #8]
    swipeContainerHallRight.add(buttonWithIcon_RH1);
 8003f24:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003f26:	f8c4 2a50 	str.w	r2, [r4, #2640]	; 0xa50
 8003f2a:	ee19 0a90 	vmov	r0, s19
 8003f2e:	f8c4 6a60 	str.w	r6, [r4, #2656]	; 0xa60
 8003f32:	f00c fb75 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH3.setXY(10, 104);
 8003f36:	4641      	mov	r1, r8
 8003f38:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003f3a:	2268      	movs	r2, #104	; 0x68
 8003f3c:	f7fe fd00 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003f40:	f04f 32ff 	mov.w	r2, #4294967295
 8003f44:	f8c4 2a94 	str.w	r2, [r4, #2708]	; 0xa94
        return TextArea::BoundingArea();
 8003f48:	4628      	mov	r0, r5
        linespace = space;
 8003f4a:	f8a4 6a98 	strh.w	r6, [r4, #2712]	; 0xa98
 8003f4e:	f7fe fd7f 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003f52:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003f56:	f504 632a 	add.w	r3, r4, #2720	; 0xaa0
 8003f5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f5e:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4PQQ).getText());
 8003f62:	f604 65a8 	addw	r5, r4, #3752	; 0xea8
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	f43f ab2d 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f6c:	4956      	ldr	r1, [pc, #344]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003f6e:	880b      	ldrh	r3, [r1, #0]
 8003f70:	2b03      	cmp	r3, #3
 8003f72:	f67f ab32 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003f76:	4b55      	ldr	r3, [pc, #340]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
        : typedTextId(id)
 8003f78:	f8df a158 	ldr.w	sl, [pc, #344]	; 80040d4 <_ZN23Calibration_PadViewBaseC1Ev+0x1068>
        return texts->getText(typedTextId);
 8003f7c:	6818      	ldr	r0, [r3, #0]
 8003f7e:	2103      	movs	r1, #3
 8003f80:	f004 fce2 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8003f84:	4a52      	ldr	r2, [pc, #328]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8003f86:	4603      	mov	r3, r0
 8003f88:	4641      	mov	r1, r8
 8003f8a:	4628      	mov	r0, r5
 8003f8c:	f015 fdce 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH3.resizeToCurrentText();
 8003f90:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8003f92:	f8c4 5aac 	str.w	r5, [r4, #2732]	; 0xaac
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003f96:	ad29      	add	r5, sp, #164	; 0xa4
    textAreaCal_RH3.resizeToCurrentText();
 8003f98:	f00f f94a 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    textAreaCal_RH3.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH3));
 8003f9c:	980e      	ldr	r0, [sp, #56]	; 0x38
        : typedTextId(id)
 8003f9e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8003fa2:	4629      	mov	r1, r5
 8003fa4:	f8ad 80a8 	strh.w	r8, [sp, #168]	; 0xa8
 8003fa8:	f00f f962 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH3);
 8003fac:	990e      	ldr	r1, [sp, #56]	; 0x38
 8003fae:	ee19 0a90 	vmov	r0, s19
 8003fb2:	f00c fb35 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003fb6:	f04f 37ff 	mov.w	r7, #4294967295
    textAreaCal_RH2.setXY(22, 68);
 8003fba:	2244      	movs	r2, #68	; 0x44
 8003fbc:	2116      	movs	r1, #22
 8003fbe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003fc0:	f7fe fcbe 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8003fc4:	f8c4 7ae0 	str.w	r7, [r4, #2784]	; 0xae0
        linespace = space;
 8003fc8:	f8a4 6ae4 	strh.w	r6, [r4, #2788]	; 0xae4
        return TextArea::BoundingArea();
 8003fcc:	4628      	mov	r0, r5
 8003fce:	f7fe fd3f 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003fd2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003fd6:	f604 23ec 	addw	r3, r4, #2796	; 0xaec
 8003fda:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fde:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YVQL).getText());
 8003fe2:	f604 69bc 	addw	r9, r4, #3772	; 0xebc
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	f43f aaed 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fec:	4936      	ldr	r1, [pc, #216]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8003fee:	880b      	ldrh	r3, [r1, #0]
 8003ff0:	2b02      	cmp	r3, #2
 8003ff2:	f67f aaf2 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8003ff6:	4b35      	ldr	r3, [pc, #212]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8003ff8:	2102      	movs	r1, #2
 8003ffa:	6818      	ldr	r0, [r3, #0]
 8003ffc:	f004 fca4 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8004000:	4a33      	ldr	r2, [pc, #204]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 8004002:	4603      	mov	r3, r0
 8004004:	4641      	mov	r1, r8
 8004006:	4648      	mov	r0, r9
 8004008:	f015 fd90 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH2.resizeToCurrentText();
 800400c:	980f      	ldr	r0, [sp, #60]	; 0x3c
        wc1 = value;
 800400e:	f8c4 9af8 	str.w	r9, [r4, #2808]	; 0xaf8
 8004012:	f00f f90d 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004016:	f04f 020c 	mov.w	r2, #12
    textAreaCal_RH2.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH2));
 800401a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 800401c:	f8ad 20a8 	strh.w	r2, [sp, #168]	; 0xa8
 8004020:	4629      	mov	r1, r5
 8004022:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004026:	f00f f923 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH2);
 800402a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800402c:	ee19 0a90 	vmov	r0, s19
 8004030:	f00c faf6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textAreaCal_RH1.setXY(22, 32);
 8004034:	2220      	movs	r2, #32
 8004036:	2116      	movs	r1, #22
 8004038:	9810      	ldr	r0, [sp, #64]	; 0x40
 800403a:	f7fe fc81 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800403e:	f8c4 7b2c 	str.w	r7, [r4, #2860]	; 0xb2c
        linespace = space;
 8004042:	f8a4 6b30 	strh.w	r6, [r4, #2864]	; 0xb30
        return TextArea::BoundingArea();
 8004046:	4628      	mov	r0, r5
 8004048:	f7fe fd02 	bl	8002a50 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800404c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004050:	f604 3338 	addw	r3, r4, #2872	; 0xb38
 8004054:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004058:	f8db 3000 	ldr.w	r3, [fp]
    Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TIGW).getText());
 800405c:	f504 696d 	add.w	r9, r4, #3792	; 0xed0
 8004060:	2b00      	cmp	r3, #0
 8004062:	f43f aab0 	beq.w	80035c6 <_ZN23Calibration_PadViewBaseC1Ev+0x55a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004066:	4918      	ldr	r1, [pc, #96]	; (80040c8 <_ZN23Calibration_PadViewBaseC1Ev+0x105c>)
 8004068:	880b      	ldrh	r3, [r1, #0]
 800406a:	2b01      	cmp	r3, #1
 800406c:	f67f aab5 	bls.w	80035da <_ZN23Calibration_PadViewBaseC1Ev+0x56e>
        return texts->getText(typedTextId);
 8004070:	4b16      	ldr	r3, [pc, #88]	; (80040cc <_ZN23Calibration_PadViewBaseC1Ev+0x1060>)
 8004072:	2101      	movs	r1, #1
 8004074:	6818      	ldr	r0, [r3, #0]
 8004076:	f004 fc67 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 800407a:	4a15      	ldr	r2, [pc, #84]	; (80040d0 <_ZN23Calibration_PadViewBaseC1Ev+0x1064>)
 800407c:	4603      	mov	r3, r0
 800407e:	4641      	mov	r1, r8
 8004080:	4648      	mov	r0, r9
 8004082:	f015 fd53 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textAreaCal_RH1.resizeToCurrentText();
 8004086:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8004088:	f8c4 9b44 	str.w	r9, [r4, #2884]	; 0xb44
 800408c:	f00f f8d0 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8004090:	2314      	movs	r3, #20
    textAreaCal_RH1.setTypedText(touchgfx::TypedText(T_TEXTAREACAL_LH1));
 8004092:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004094:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 8004098:	4629      	mov	r1, r5
 800409a:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800409e:	f00f f8e7 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textAreaCal_RH1);
 80040a2:	9910      	ldr	r1, [sp, #64]	; 0x40
 80040a4:	ee19 0a90 	vmov	r0, s19
 80040a8:	f00c faba 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_RH_1.setPosition(0, 15, 240, 10);
 80040ac:	ee1c 0a10 	vmov	r0, s24
 80040b0:	4631      	mov	r1, r6
 80040b2:	f8cd 8000 	str.w	r8, [sp]
 80040b6:	23f0      	movs	r3, #240	; 0xf0
 80040b8:	220f      	movs	r2, #15
 80040ba:	f7fe fc4e 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 80040be:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80040c0:	f8c4 3b70 	str.w	r3, [r4, #2928]	; 0xb70
    line1_RH_1.setStart(5, 5);
 80040c4:	2205      	movs	r2, #5
 80040c6:	e009      	b.n	80040dc <_ZN23Calibration_PadViewBaseC1Ev+0x1070>
 80040c8:	20013848 	.word	0x20013848
 80040cc:	20013850 	.word	0x20013850
 80040d0:	0802d07d 	.word	0x0802d07d
 80040d4:	0802d0f0 	.word	0x0802d0f0
 80040d8:	00ac00f0 	.word	0x00ac00f0
 80040dc:	ee1c 0a10 	vmov	r0, s24
 80040e0:	4611      	mov	r1, r2
 80040e2:	f8c4 7bc4 	str.w	r7, [r4, #3012]	; 0xbc4
 80040e6:	f8a4 7bc8 	strh.w	r7, [r4, #3016]	; 0xbc8
 80040ea:	f7fe ffa7 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_RH_1.setEnd(235, 5);
 80040ee:	2205      	movs	r2, #5
 80040f0:	ee1c 0a10 	vmov	r0, s24
 80040f4:	21eb      	movs	r1, #235	; 0xeb
 80040f6:	f7fe ffa5 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_RH_1.setLineWidth(1);
 80040fa:	ee1c 0a10 	vmov	r0, s24
 80040fe:	2101      	movs	r1, #1
 8004100:	f7fe ffa4 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_RH_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004104:	ee1c 0a10 	vmov	r0, s24
 8004108:	2101      	movs	r1, #1
 800410a:	f00e fc81 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
    swipeContainerHallRight.add(line1_RH_1);
 800410e:	ee1c 1a10 	vmov	r1, s24
 8004112:	ee19 0a90 	vmov	r0, s19
 8004116:	f10d 0988 	add.w	r9, sp, #136	; 0x88
 800411a:	f00c fa81 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_RH_1.setXY(73, 0);
 800411e:	4632      	mov	r2, r6
 8004120:	9803      	ldr	r0, [sp, #12]
 8004122:	2149      	movs	r1, #73	; 0x49
 8004124:	f7fe fc0c 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8004128:	9903      	ldr	r1, [sp, #12]
        color = newColor;
 800412a:	f8c4 7bfc 	str.w	r7, [r4, #3068]	; 0xbfc
        boundingArea = calculateBoundingArea();
 800412e:	4648      	mov	r0, r9
        linespace = space;
 8004130:	f8a4 6c00 	strh.w	r6, [r4, #3072]	; 0xc00
        boundingArea = calculateBoundingArea();
 8004134:	f00e fe02 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004138:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 800413c:	9b03      	ldr	r3, [sp, #12]
 800413e:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004142:	333c      	adds	r3, #60	; 0x3c
 8004144:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1_RH_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IZSY));
 8004148:	9803      	ldr	r0, [sp, #12]
 800414a:	f8ad 60a8 	strh.w	r6, [sp, #168]	; 0xa8
 800414e:	4629      	mov	r1, r5
 8004150:	f00f f88e 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    swipeContainerHallRight.add(textArea1_RH_1);
 8004154:	9903      	ldr	r1, [sp, #12]
 8004156:	ee19 0a90 	vmov	r0, s19
 800415a:	f00c fa61 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    swipeContainer1.add(swipeContainerHallRight);
 800415e:	ee19 1a90 	vmov	r1, s19
 8004162:	ee18 0a10 	vmov	r0, s16
 8004166:	f00c ff3e 	bl	8010fe6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>
    swipeContainer1.setSelectedPage(0);
 800416a:	ee18 0a10 	vmov	r0, s16
 800416e:	4631      	mov	r1, r6
 8004170:	f00c ff2a 	bl	8010fc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 8004174:	ee18 1a10 	vmov	r1, s16
 8004178:	ee1a 0a10 	vmov	r0, s20
 800417c:	f00c fa50 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(0, 75, 240, 10);
 8004180:	ee1c 0a90 	vmov	r0, s25
 8004184:	4631      	mov	r1, r6
 8004186:	f8cd 8000 	str.w	r8, [sp]
 800418a:	23f0      	movs	r3, #240	; 0xf0
 800418c:	224b      	movs	r2, #75	; 0x4b
 800418e:	f7fe fbe4 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8004192:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004196:	f8a4 3c94 	strh.w	r3, [r4, #3220]	; 0xc94
    line1_1.setStart(5, 5);
 800419a:	2205      	movs	r2, #5
 800419c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800419e:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
 80041a2:	ee1c 0a90 	vmov	r0, s25
 80041a6:	4611      	mov	r1, r2
 80041a8:	f8c4 7c90 	str.w	r7, [r4, #3216]	; 0xc90
 80041ac:	f7fe ff46 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(235, 5);
 80041b0:	2205      	movs	r2, #5
 80041b2:	ee1c 0a90 	vmov	r0, s25
 80041b6:	21eb      	movs	r1, #235	; 0xeb
 80041b8:	f7fe ff44 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(1);
 80041bc:	ee1c 0a90 	vmov	r0, s25
 80041c0:	2101      	movs	r1, #1
 80041c2:	f7fe ff43 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80041c6:	ee1c 0a90 	vmov	r0, s25
 80041ca:	2101      	movs	r1, #1
 80041cc:	f00e fc20 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80041d0:	ee1c 1a90 	vmov	r1, s25
 80041d4:	ee1a 0a10 	vmov	r0, s20
 80041d8:	f00c fa22 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(70, 60);
 80041dc:	9804      	ldr	r0, [sp, #16]
 80041de:	223c      	movs	r2, #60	; 0x3c
 80041e0:	2146      	movs	r1, #70	; 0x46
 80041e2:	f7fe fbad 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80041e6:	9904      	ldr	r1, [sp, #16]
        color = newColor;
 80041e8:	f8c4 7cc8 	str.w	r7, [r4, #3272]	; 0xcc8
        boundingArea = calculateBoundingArea();
 80041ec:	4648      	mov	r0, r9
        linespace = space;
 80041ee:	f8a4 6ccc 	strh.w	r6, [r4, #3276]	; 0xccc
        boundingArea = calculateBoundingArea();
 80041f2:	f00e fda3 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80041f6:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80041fa:	9b04      	ldr	r3, [sp, #16]
 80041fc:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 8004200:	333c      	adds	r3, #60	; 0x3c
 8004202:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004206:	231e      	movs	r3, #30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8004208:	9804      	ldr	r0, [sp, #16]
 800420a:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 800420e:	4629      	mov	r1, r5
 8004210:	f00f f82e 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004214:	9904      	ldr	r1, [sp, #16]
 8004216:	ee1a 0a10 	vmov	r0, s20
 800421a:	f00c fa01 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800421e:	ee1d 0a10 	vmov	r0, s26
 8004222:	4631      	mov	r1, r6
 8004224:	f8cd 8000 	str.w	r8, [sp]
 8004228:	23f0      	movs	r3, #240	; 0xf0
 800422a:	2232      	movs	r2, #50	; 0x32
 800422c:	f7fe fb95 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8004230:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8004232:	f8c4 3d08 	str.w	r3, [r4, #3336]	; 0xd08
    line1.setStart(5, 5);
 8004236:	2205      	movs	r2, #5
 8004238:	ee1d 0a10 	vmov	r0, s26
 800423c:	4611      	mov	r1, r2
 800423e:	f8c4 7d5c 	str.w	r7, [r4, #3420]	; 0xd5c
 8004242:	f8a4 7d60 	strh.w	r7, [r4, #3424]	; 0xd60
 8004246:	f7fe fef9 	bl	800303c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(235, 5);
 800424a:	2205      	movs	r2, #5
 800424c:	ee1d 0a10 	vmov	r0, s26
 8004250:	21eb      	movs	r1, #235	; 0xeb
 8004252:	f7fe fef7 	bl	8003044 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(1);
 8004256:	ee1d 0a10 	vmov	r0, s26
 800425a:	2101      	movs	r1, #1
 800425c:	f7fe fef6 	bl	800304c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8004260:	ee1d 0a10 	vmov	r0, s26
 8004264:	2101      	movs	r1, #1
 8004266:	f00e fbd3 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800426a:	ee1d 1a10 	vmov	r1, s26
 800426e:	ee1a 0a10 	vmov	r0, s20
 8004272:	f00c f9d5 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8004276:	9805      	ldr	r0, [sp, #20]
 8004278:	2223      	movs	r2, #35	; 0x23
 800427a:	2145      	movs	r1, #69	; 0x45
 800427c:	f7fe fb60 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8004280:	9905      	ldr	r1, [sp, #20]
        color = newColor;
 8004282:	f8c4 7d94 	str.w	r7, [r4, #3476]	; 0xd94
        boundingArea = calculateBoundingArea();
 8004286:	4648      	mov	r0, r9
        linespace = space;
 8004288:	f8a4 6d98 	strh.w	r6, [r4, #3480]	; 0xd98
        boundingArea = calculateBoundingArea();
 800428c:	f00e fd56 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004290:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 8004294:	9b05      	ldr	r3, [sp, #20]
 8004296:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 800429a:	333c      	adds	r3, #60	; 0x3c
 800429c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042a0:	2320      	movs	r3, #32
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80042a2:	9805      	ldr	r0, [sp, #20]
 80042a4:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042a8:	4629      	mov	r1, r5
 80042aa:	f00e ffe1 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042ae:	9905      	ldr	r1, [sp, #20]
 80042b0:	ee1a 0a10 	vmov	r0, s20
 80042b4:	f00c f9b4 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80042b8:	9806      	ldr	r0, [sp, #24]
 80042ba:	220c      	movs	r2, #12
 80042bc:	2136      	movs	r1, #54	; 0x36
 80042be:	f7fe fb3f 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80042c2:	9906      	ldr	r1, [sp, #24]
        color = newColor;
 80042c4:	f8c4 7ddc 	str.w	r7, [r4, #3548]	; 0xddc
        boundingArea = calculateBoundingArea();
 80042c8:	4648      	mov	r0, r9
        linespace = space;
 80042ca:	f8a4 6de0 	strh.w	r6, [r4, #3552]	; 0xde0
        boundingArea = calculateBoundingArea();
 80042ce:	f00e fd35 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80042d2:	e899 0007 	ldmia.w	r9, {r0, r1, r2}
 80042d6:	9b06      	ldr	r3, [sp, #24]
 80042d8:	f8cd a0a4 	str.w	sl, [sp, #164]	; 0xa4
 80042dc:	333c      	adds	r3, #60	; 0x3c
 80042de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80042e2:	2321      	movs	r3, #33	; 0x21
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80042e4:	9806      	ldr	r0, [sp, #24]
 80042e6:	f8ad 30a8 	strh.w	r3, [sp, #168]	; 0xa8
 80042ea:	4629      	mov	r1, r5
 80042ec:	f00e ffc0 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80042f0:	ee1a 0a10 	vmov	r0, s20
 80042f4:	9906      	ldr	r1, [sp, #24]
 80042f6:	f00c f993 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80042fa:	4620      	mov	r0, r4
 80042fc:	b02d      	add	sp, #180	; 0xb4
 80042fe:	ecbd 8b10 	vpop	{d8-d15}
 8004302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004306:	bf00      	nop

08004308 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004308:	4770      	bx	lr

0800430a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800430a:	4770      	bx	lr

0800430c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800430c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004310:	6808      	ldr	r0, [r1, #0]
 8004312:	6849      	ldr	r1, [r1, #4]
 8004314:	c303      	stmia	r3!, {r0, r1}
    }
 8004316:	4770      	bx	lr

08004318 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004318:	4770      	bx	lr

0800431a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800431a:	4770      	bx	lr

0800431c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800431c:	6041      	str	r1, [r0, #4]
    }
 800431e:	4770      	bx	lr

08004320 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8004320:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004322:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8004324:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8004328:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800432c:	8002      	strh	r2, [r0, #0]
 800432e:	8042      	strh	r2, [r0, #2]
 8004330:	8084      	strh	r4, [r0, #4]
 8004332:	80c1      	strh	r1, [r0, #6]
        }
 8004334:	bd10      	pop	{r4, pc}

08004336 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8004336:	4770      	bx	lr

08004338 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8004338:	4770      	bx	lr
	...

0800433c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800433c:	4b06      	ldr	r3, [pc, #24]	; (8004358 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800433e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004342:	2300      	movs	r3, #0
 8004344:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Main_Menu

void FrontendApplicationBase::gotoMain_MenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMain_MenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004348:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800434c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004350:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMain_MenuScreenNoTransition();
    }
 8004354:	4770      	bx	lr
 8004356:	bf00      	nop
 8004358:	080046f9 	.word	0x080046f9

0800435c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800435c:	2301      	movs	r3, #1
 800435e:	7203      	strb	r3, [r0, #8]
    }
 8004360:	4770      	bx	lr

08004362 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8004362:	4770      	bx	lr

08004364 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8004364:	4770      	bx	lr

08004366 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8004366:	4770      	bx	lr

08004368 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8004368:	4770      	bx	lr

0800436a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800436a:	4770      	bx	lr

0800436c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800436c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800436e:	6840      	ldr	r0, [r0, #4]
 8004370:	6803      	ldr	r3, [r0, #0]
 8004372:	3110      	adds	r1, #16
 8004374:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004376:	4718      	bx	r3

08004378 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 8004378:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 800437a:	6840      	ldr	r0, [r0, #4]
 800437c:	6803      	ldr	r3, [r0, #0]
 800437e:	3110      	adds	r1, #16
 8004380:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004382:	4718      	bx	r3

08004384 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004384:	4770      	bx	lr

08004386 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 8004386:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 8004388:	6840      	ldr	r0, [r0, #4]
 800438a:	6803      	ldr	r3, [r0, #0]
 800438c:	3110      	adds	r1, #16
 800438e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8004390:	4718      	bx	r3

08004392 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 8004392:	4601      	mov	r1, r0
        screenContainer->add(solid);
 8004394:	6840      	ldr	r0, [r0, #4]
 8004396:	6803      	ldr	r3, [r0, #0]
 8004398:	3110      	adds	r1, #16
 800439a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800439c:	4718      	bx	r3

0800439e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 800439e:	4770      	bx	lr

080043a0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80043a0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80043a2:	68c2      	ldr	r2, [r0, #12]
 80043a4:	6841      	ldr	r1, [r0, #4]
 80043a6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80043a8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80043aa:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80043ae:	07d2      	lsls	r2, r2, #31
 80043b0:	bf48      	it	mi
 80043b2:	590a      	ldrmi	r2, [r1, r4]
 80043b4:	689b      	ldr	r3, [r3, #8]
    }
 80043b6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80043ba:	bf48      	it	mi
 80043bc:	58d3      	ldrmi	r3, [r2, r3]
 80043be:	4718      	bx	r3

080043c0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80043c0:	6843      	ldr	r3, [r0, #4]
 80043c2:	b12b      	cbz	r3, 80043d0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80043c4:	6883      	ldr	r3, [r0, #8]
 80043c6:	b92b      	cbnz	r3, 80043d4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80043c8:	68c0      	ldr	r0, [r0, #12]
 80043ca:	f000 0001 	and.w	r0, r0, #1
 80043ce:	4770      	bx	lr
 80043d0:	4618      	mov	r0, r3
 80043d2:	4770      	bx	lr
 80043d4:	2001      	movs	r0, #1
    }
 80043d6:	4770      	bx	lr

080043d8 <_ZN8touchgfx12NoTransitionD0Ev>:
 80043d8:	b510      	push	{r4, lr}
 80043da:	210c      	movs	r1, #12
 80043dc:	4604      	mov	r4, r0
 80043de:	f026 faac 	bl	802a93a <_ZdlPvj>
 80043e2:	4620      	mov	r0, r4
 80043e4:	bd10      	pop	{r4, pc}

080043e6 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80043e6:	b510      	push	{r4, lr}
 80043e8:	2110      	movs	r1, #16
 80043ea:	4604      	mov	r4, r0
 80043ec:	f026 faa5 	bl	802a93a <_ZdlPvj>
 80043f0:	4620      	mov	r0, r4
 80043f2:	bd10      	pop	{r4, pc}

080043f4 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80043f4:	b510      	push	{r4, lr}
 80043f6:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80043fa:	4604      	mov	r4, r0
 80043fc:	f026 fa9d 	bl	802a93a <_ZdlPvj>
 8004400:	4620      	mov	r0, r4
 8004402:	bd10      	pop	{r4, pc}

08004404 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8004404:	b510      	push	{r4, lr}
 8004406:	2138      	movs	r1, #56	; 0x38
 8004408:	4604      	mov	r4, r0
 800440a:	f026 fa96 	bl	802a93a <_ZdlPvj>
 800440e:	4620      	mov	r0, r4
 8004410:	bd10      	pop	{r4, pc}

08004412 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8004412:	b510      	push	{r4, lr}
 8004414:	2128      	movs	r1, #40	; 0x28
 8004416:	4604      	mov	r4, r0
 8004418:	f026 fa8f 	bl	802a93a <_ZdlPvj>
 800441c:	4620      	mov	r0, r4
 800441e:	bd10      	pop	{r4, pc}

08004420 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8004420:	b510      	push	{r4, lr}
 8004422:	2138      	movs	r1, #56	; 0x38
 8004424:	4604      	mov	r4, r0
 8004426:	f026 fa88 	bl	802a93a <_ZdlPvj>
 800442a:	4620      	mov	r0, r4
 800442c:	bd10      	pop	{r4, pc}

0800442e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800442e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8004430:	f012 f9ce 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8004434:	6803      	ldr	r3, [r0, #0]
    }
 8004436:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800443a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800443c:	4718      	bx	r3
	...

08004440 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004440:	b513      	push	{r0, r1, r4, lr}
 8004442:	4604      	mov	r4, r0
        animationCounter++;
 8004444:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004446:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004448:	3001      	adds	r0, #1
 800444a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800444c:	4298      	cmp	r0, r3
        animationCounter++;
 800444e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004450:	d905      	bls.n	800445e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8004452:	2301      	movs	r3, #1
 8004454:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004456:	2300      	movs	r3, #0
 8004458:	72a3      	strb	r3, [r4, #10]
    }
 800445a:	b002      	add	sp, #8
 800445c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800445e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8004462:	2100      	movs	r1, #0
 8004464:	f014 f824 	bl	80184b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004468:	f010 0201 	ands.w	r2, r0, #1
 800446c:	b283      	uxth	r3, r0
 800446e:	d12a      	bne.n	80044c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004470:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004472:	4a19      	ldr	r2, [pc, #100]	; (80044d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 8004474:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 8004478:	89e3      	ldrh	r3, [r4, #14]
 800447a:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 800447c:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 8004480:	82a0      	strh	r0, [r4, #20]
 8004482:	2000      	movs	r0, #0
 8004484:	1ad2      	subs	r2, r2, r3
 8004486:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 800448a:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 800448c:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 800448e:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004490:	4a12      	ldr	r2, [pc, #72]	; (80044dc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 8004492:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 8004496:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 8004498:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 800449c:	691b      	ldr	r3, [r3, #16]
 800449e:	f8ad 1000 	strh.w	r1, [sp]
 80044a2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80044a6:	4669      	mov	r1, sp
 80044a8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80044aa:	7aa3      	ldrb	r3, [r4, #10]
 80044ac:	2b01      	cmp	r3, #1
 80044ae:	d1d4      	bne.n	800445a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80044b0:	4b0b      	ldr	r3, [pc, #44]	; (80044e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80044b2:	781b      	ldrb	r3, [r3, #0]
 80044b4:	2b00      	cmp	r3, #0
 80044b6:	d0d0      	beq.n	800445a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044b8:	f012 f98a 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80044bc:	b002      	add	sp, #8
 80044be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80044c2:	f012 b98b 	b.w	80167dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80044c6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80044ca:	2800      	cmp	r0, #0
 80044cc:	bfd8      	it	le
 80044ce:	460a      	movle	r2, r1
 80044d0:	4413      	add	r3, r2
 80044d2:	81e3      	strh	r3, [r4, #14]
 80044d4:	e7cd      	b.n	8004472 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 80044d6:	bf00      	nop
 80044d8:	200137e0 	.word	0x200137e0
 80044dc:	200137e2 	.word	0x200137e2
 80044e0:	200137ea 	.word	0x200137ea

080044e4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80044e4:	b510      	push	{r4, lr}
 80044e6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80044e8:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80044ec:	b158      	cbz	r0, 8004506 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80044ee:	6803      	ldr	r3, [r0, #0]
 80044f0:	68db      	ldr	r3, [r3, #12]
 80044f2:	4798      	blx	r3
 80044f4:	b138      	cbz	r0, 8004506 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80044f6:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 80044fa:	6803      	ldr	r3, [r0, #0]
 80044fc:	689b      	ldr	r3, [r3, #8]
 80044fe:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004500:	2300      	movs	r3, #0
 8004502:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8004506:	bd10      	pop	{r4, pc}

08004508 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8004508:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800450c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004510:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004512:	68a8      	ldr	r0, [r5, #8]
 8004514:	6803      	ldr	r3, [r0, #0]
 8004516:	6a1b      	ldr	r3, [r3, #32]
 8004518:	4798      	blx	r3
 800451a:	2897      	cmp	r0, #151	; 0x97
 800451c:	d805      	bhi.n	800452a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800451e:	4b46      	ldr	r3, [pc, #280]	; (8004638 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8004520:	4a46      	ldr	r2, [pc, #280]	; (800463c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8004522:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004524:	4846      	ldr	r0, [pc, #280]	; (8004640 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8004526:	f027 f81b 	bl	802b560 <__assert_func>
 800452a:	6868      	ldr	r0, [r5, #4]
 800452c:	6803      	ldr	r3, [r0, #0]
 800452e:	6a1b      	ldr	r3, [r3, #32]
 8004530:	4798      	blx	r3
 8004532:	280f      	cmp	r0, #15
 8004534:	d803      	bhi.n	800453e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8004536:	4b43      	ldr	r3, [pc, #268]	; (8004644 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8004538:	4a40      	ldr	r2, [pc, #256]	; (800463c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800453a:	21a4      	movs	r1, #164	; 0xa4
 800453c:	e7f2      	b.n	8004524 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800453e:	68e8      	ldr	r0, [r5, #12]
 8004540:	6803      	ldr	r3, [r0, #0]
 8004542:	6a1b      	ldr	r3, [r3, #32]
 8004544:	4798      	blx	r3
 8004546:	280b      	cmp	r0, #11
 8004548:	d803      	bhi.n	8004552 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800454a:	4b3f      	ldr	r3, [pc, #252]	; (8004648 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800454c:	4a3b      	ldr	r2, [pc, #236]	; (800463c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800454e:	21a5      	movs	r1, #165	; 0xa5
 8004550:	e7e8      	b.n	8004524 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8004552:	f012 f93d 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004556:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004650 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800455a:	3004      	adds	r0, #4
 800455c:	f012 f99e 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004560:	f8d9 0000 	ldr.w	r0, [r9]
 8004564:	b110      	cbz	r0, 800456c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8004566:	6803      	ldr	r3, [r0, #0]
 8004568:	68db      	ldr	r3, [r3, #12]
 800456a:	4798      	blx	r3
    if (*currentTrans)
 800456c:	f8d9 0000 	ldr.w	r0, [r9]
 8004570:	b110      	cbz	r0, 8004578 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8004572:	6803      	ldr	r3, [r0, #0]
 8004574:	681b      	ldr	r3, [r3, #0]
 8004576:	4798      	blx	r3
    if (*currentScreen)
 8004578:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004654 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 800457c:	f8d8 0000 	ldr.w	r0, [r8]
 8004580:	b110      	cbz	r0, 8004588 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8004582:	6803      	ldr	r3, [r0, #0]
 8004584:	695b      	ldr	r3, [r3, #20]
 8004586:	4798      	blx	r3
    if (*currentPresenter)
 8004588:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800458c:	b110      	cbz	r0, 8004594 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800458e:	6803      	ldr	r3, [r0, #0]
 8004590:	685b      	ldr	r3, [r3, #4]
 8004592:	4798      	blx	r3
    if (*currentScreen)
 8004594:	f8d8 0000 	ldr.w	r0, [r8]
 8004598:	b110      	cbz	r0, 80045a0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800459a:	6803      	ldr	r3, [r0, #0]
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	4798      	blx	r3
    if (*currentPresenter)
 80045a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045a4:	b110      	cbz	r0, 80045ac <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80045a6:	6803      	ldr	r3, [r0, #0]
 80045a8:	689b      	ldr	r3, [r3, #8]
 80045aa:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80045ac:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80045ae:	6803      	ldr	r3, [r0, #0]
 80045b0:	2100      	movs	r1, #0
 80045b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045b4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80045b6:	f04f 0b00 	mov.w	fp, #0
 80045ba:	4b24      	ldr	r3, [pc, #144]	; (800464c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80045bc:	6003      	str	r3, [r0, #0]
 80045be:	4604      	mov	r4, r0
 80045c0:	f8c0 b004 	str.w	fp, [r0, #4]
 80045c4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80045c8:	68a8      	ldr	r0, [r5, #8]
 80045ca:	6803      	ldr	r3, [r0, #0]
 80045cc:	4659      	mov	r1, fp
 80045ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d0:	4798      	blx	r3
 80045d2:	4606      	mov	r6, r0
 80045d4:	f004 fea4 	bl	8009320 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80045d8:	6868      	ldr	r0, [r5, #4]
 80045da:	6803      	ldr	r3, [r0, #0]
 80045dc:	4659      	mov	r1, fp
 80045de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045e0:	4798      	blx	r3
 80045e2:	4631      	mov	r1, r6
 80045e4:	4605      	mov	r5, r0
 80045e6:	f004 fe77 	bl	80092d8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 80045ea:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80045ee:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80045f2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80045f6:	b1e5      	cbz	r5, 8004632 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 80045f8:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80045fa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80045fe:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8004600:	f8c5 a008 	str.w	sl, [r5, #8]
 8004604:	4630      	mov	r0, r6
 8004606:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004608:	63f5      	str	r5, [r6, #60]	; 0x3c
 800460a:	4798      	blx	r3
    newPresenter->activate();
 800460c:	682b      	ldr	r3, [r5, #0]
 800460e:	4628      	mov	r0, r5
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004614:	4621      	mov	r1, r4
 8004616:	4630      	mov	r0, r6
 8004618:	f013 ff06 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800461c:	6823      	ldr	r3, [r4, #0]
 800461e:	4620      	mov	r0, r4
 8004620:	691b      	ldr	r3, [r3, #16]
 8004622:	4798      	blx	r3
    newTransition->invalidate();
 8004624:	6823      	ldr	r3, [r4, #0]
 8004626:	695b      	ldr	r3, [r3, #20]
 8004628:	4620      	mov	r0, r4
}
 800462a:	b001      	add	sp, #4
 800462c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004630:	4718      	bx	r3
    model->bind(newPresenter);
 8004632:	462b      	mov	r3, r5
 8004634:	e7e1      	b.n	80045fa <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8004636:	bf00      	nop
 8004638:	0802d26c 	.word	0x0802d26c
 800463c:	0802d2fa 	.word	0x0802d2fa
 8004640:	0802d408 	.word	0x0802d408
 8004644:	0802d44f 	.word	0x0802d44f
 8004648:	0802d4f2 	.word	0x0802d4f2
 800464c:	0802e5ac 	.word	0x0802e5ac
 8004650:	20013834 	.word	0x20013834
 8004654:	20013830 	.word	0x20013830

08004658 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004658:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800465a:	4604      	mov	r4, r0
        animationCounter++;
 800465c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800465e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004660:	3001      	adds	r0, #1
 8004662:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004664:	4298      	cmp	r0, r3
        animationCounter++;
 8004666:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8004668:	d905      	bls.n	8004676 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800466a:	2301      	movs	r3, #1
 800466c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800466e:	2300      	movs	r3, #0
 8004670:	72a3      	strb	r3, [r4, #10]
    }
 8004672:	b003      	add	sp, #12
 8004674:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004676:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800467a:	2100      	movs	r1, #0
 800467c:	f013 ff18 	bl	80184b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004680:	f010 0201 	ands.w	r2, r0, #1
 8004684:	b283      	uxth	r3, r0
 8004686:	d128      	bne.n	80046da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004688:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800468a:	4b18      	ldr	r3, [pc, #96]	; (80046ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800468c:	4818      	ldr	r0, [pc, #96]	; (80046f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800468e:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004690:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004692:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004694:	f9b0 0000 	ldrsh.w	r0, [r0]
 8004698:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800469c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800469e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80046a0:	442b      	add	r3, r5
 80046a2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80046a4:	b212      	sxth	r2, r2
 80046a6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80046aa:	6803      	ldr	r3, [r0, #0]
 80046ac:	8322      	strh	r2, [r4, #24]
 80046ae:	f8ad 2000 	strh.w	r2, [sp]
 80046b2:	2200      	movs	r2, #0
 80046b4:	691b      	ldr	r3, [r3, #16]
 80046b6:	f8ad 2002 	strh.w	r2, [sp, #2]
 80046ba:	4669      	mov	r1, sp
 80046bc:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80046be:	7aa3      	ldrb	r3, [r4, #10]
 80046c0:	2b01      	cmp	r3, #1
 80046c2:	d1d6      	bne.n	8004672 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80046c4:	4b0b      	ldr	r3, [pc, #44]	; (80046f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80046c6:	781b      	ldrb	r3, [r3, #0]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d0d2      	beq.n	8004672 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80046cc:	f012 f880 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80046d0:	b003      	add	sp, #12
 80046d2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80046d6:	f012 b881 	b.w	80167dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80046da:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80046de:	2800      	cmp	r0, #0
 80046e0:	bfd8      	it	le
 80046e2:	460a      	movle	r2, r1
 80046e4:	4413      	add	r3, r2
 80046e6:	81e3      	strh	r3, [r4, #14]
 80046e8:	e7cf      	b.n	800468a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80046ea:	bf00      	nop
 80046ec:	200137e0 	.word	0x200137e0
 80046f0:	200137e2 	.word	0x200137e2
 80046f4:	200137ea 	.word	0x200137ea

080046f8 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv>:
{
 80046f8:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80046fc:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004700:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004702:	68a8      	ldr	r0, [r5, #8]
 8004704:	6803      	ldr	r3, [r0, #0]
 8004706:	6a1b      	ldr	r3, [r3, #32]
 8004708:	4798      	blx	r3
 800470a:	f241 137b 	movw	r3, #4475	; 0x117b
 800470e:	4298      	cmp	r0, r3
 8004710:	d805      	bhi.n	800471e <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x26>
 8004712:	4b46      	ldr	r3, [pc, #280]	; (800482c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x134>)
 8004714:	4a46      	ldr	r2, [pc, #280]	; (8004830 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004716:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004718:	4846      	ldr	r0, [pc, #280]	; (8004834 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x13c>)
 800471a:	f026 ff21 	bl	802b560 <__assert_func>
 800471e:	6868      	ldr	r0, [r5, #4]
 8004720:	6803      	ldr	r3, [r0, #0]
 8004722:	6a1b      	ldr	r3, [r3, #32]
 8004724:	4798      	blx	r3
 8004726:	280f      	cmp	r0, #15
 8004728:	d803      	bhi.n	8004732 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x3a>
 800472a:	4b43      	ldr	r3, [pc, #268]	; (8004838 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x140>)
 800472c:	4a40      	ldr	r2, [pc, #256]	; (8004830 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 800472e:	21a4      	movs	r1, #164	; 0xa4
 8004730:	e7f2      	b.n	8004718 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004732:	68e8      	ldr	r0, [r5, #12]
 8004734:	6803      	ldr	r3, [r0, #0]
 8004736:	6a1b      	ldr	r3, [r3, #32]
 8004738:	4798      	blx	r3
 800473a:	280b      	cmp	r0, #11
 800473c:	d803      	bhi.n	8004746 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x4e>
 800473e:	4b3f      	ldr	r3, [pc, #252]	; (800483c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x144>)
 8004740:	4a3b      	ldr	r2, [pc, #236]	; (8004830 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x138>)
 8004742:	21a5      	movs	r1, #165	; 0xa5
 8004744:	e7e8      	b.n	8004718 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004746:	f012 f843 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800474a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004844 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x14c>
 800474e:	3004      	adds	r0, #4
 8004750:	f012 f8a4 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004754:	f8d9 0000 	ldr.w	r0, [r9]
 8004758:	b110      	cbz	r0, 8004760 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800475a:	6803      	ldr	r3, [r0, #0]
 800475c:	68db      	ldr	r3, [r3, #12]
 800475e:	4798      	blx	r3
    if (*currentTrans)
 8004760:	f8d9 0000 	ldr.w	r0, [r9]
 8004764:	b110      	cbz	r0, 800476c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8004766:	6803      	ldr	r3, [r0, #0]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	4798      	blx	r3
    if (*currentScreen)
 800476c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004848 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x150>
 8004770:	f8d8 0000 	ldr.w	r0, [r8]
 8004774:	b110      	cbz	r0, 800477c <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004776:	6803      	ldr	r3, [r0, #0]
 8004778:	695b      	ldr	r3, [r3, #20]
 800477a:	4798      	blx	r3
    if (*currentPresenter)
 800477c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004780:	b110      	cbz	r0, 8004788 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004782:	6803      	ldr	r3, [r0, #0]
 8004784:	685b      	ldr	r3, [r3, #4]
 8004786:	4798      	blx	r3
    if (*currentScreen)
 8004788:	f8d8 0000 	ldr.w	r0, [r8]
 800478c:	b110      	cbz	r0, 8004794 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 800478e:	6803      	ldr	r3, [r0, #0]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	4798      	blx	r3
    if (*currentPresenter)
 8004794:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004798:	b110      	cbz	r0, 80047a0 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800479a:	6803      	ldr	r3, [r0, #0]
 800479c:	689b      	ldr	r3, [r3, #8]
 800479e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047a0:	68e8      	ldr	r0, [r5, #12]
 80047a2:	6803      	ldr	r3, [r0, #0]
 80047a4:	2100      	movs	r1, #0
 80047a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047a8:	4798      	blx	r3
 80047aa:	f04f 0b00 	mov.w	fp, #0
 80047ae:	4b24      	ldr	r3, [pc, #144]	; (8004840 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x148>)
 80047b0:	6003      	str	r3, [r0, #0]
 80047b2:	4604      	mov	r4, r0
 80047b4:	f8c0 b004 	str.w	fp, [r0, #4]
 80047b8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047bc:	68a8      	ldr	r0, [r5, #8]
 80047be:	6803      	ldr	r3, [r0, #0]
 80047c0:	4659      	mov	r1, fp
 80047c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047c4:	4798      	blx	r3
 80047c6:	4606      	mov	r6, r0
 80047c8:	f004 fa4e 	bl	8008c68 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047cc:	6868      	ldr	r0, [r5, #4]
 80047ce:	6803      	ldr	r3, [r0, #0]
 80047d0:	4659      	mov	r1, fp
 80047d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047d4:	4798      	blx	r3
 80047d6:	4631      	mov	r1, r6
 80047d8:	4605      	mov	r5, r0
 80047da:	f004 fa1f 	bl	8008c1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 80047de:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80047e2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047e6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80047ea:	b1e5      	cbz	r5, 8004826 <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0x12e>
 80047ec:	1d2b      	adds	r3, r5, #4
 80047ee:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80047f2:	6833      	ldr	r3, [r6, #0]
 80047f4:	f8c5 a008 	str.w	sl, [r5, #8]
 80047f8:	4630      	mov	r0, r6
 80047fa:	68db      	ldr	r3, [r3, #12]
 80047fc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80047fe:	4798      	blx	r3
    newPresenter->activate();
 8004800:	682b      	ldr	r3, [r5, #0]
 8004802:	4628      	mov	r0, r5
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004808:	4621      	mov	r1, r4
 800480a:	4630      	mov	r0, r6
 800480c:	f013 fe0c 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004810:	6823      	ldr	r3, [r4, #0]
 8004812:	4620      	mov	r0, r4
 8004814:	691b      	ldr	r3, [r3, #16]
 8004816:	4798      	blx	r3
    newTransition->invalidate();
 8004818:	6823      	ldr	r3, [r4, #0]
 800481a:	695b      	ldr	r3, [r3, #20]
 800481c:	4620      	mov	r0, r4
}
 800481e:	b001      	add	sp, #4
 8004820:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004824:	4718      	bx	r3
    model->bind(newPresenter);
 8004826:	462b      	mov	r3, r5
 8004828:	e7e1      	b.n	80047ee <_ZN23FrontendApplicationBase35gotoMain_MenuScreenNoTransitionImplEv+0xf6>
 800482a:	bf00      	nop
 800482c:	0802d26c 	.word	0x0802d26c
 8004830:	0802d595 	.word	0x0802d595
 8004834:	0802d408 	.word	0x0802d408
 8004838:	0802d44f 	.word	0x0802d44f
 800483c:	0802d4f2 	.word	0x0802d4f2
 8004840:	0802e5ac 	.word	0x0802e5ac
 8004844:	20013834 	.word	0x20013834
 8004848:	20013830 	.word	0x20013830

0800484c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800484c:	4b04      	ldr	r3, [pc, #16]	; (8004860 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004854:	b10a      	cbz	r2, 800485a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8004856:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8004858:	b900      	cbnz	r0, 800485c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800485a:	6898      	ldr	r0, [r3, #8]
    }
 800485c:	4770      	bx	lr
 800485e:	bf00      	nop
 8004860:	200137ec 	.word	0x200137ec

08004864 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004866:	4604      	mov	r4, r0
 8004868:	4617      	mov	r7, r2
 800486a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800486c:	f012 f8e4 	bl	8016a38 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004870:	4b10      	ldr	r3, [pc, #64]	; (80048b4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004872:	601c      	str	r4, [r3, #0]
      model(m)
 8004874:	4b10      	ldr	r3, [pc, #64]	; (80048b8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 8004876:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8004878:	4b10      	ldr	r3, [pc, #64]	; (80048bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 800487a:	2500      	movs	r5, #0
 800487c:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004880:	4b0f      	ldr	r3, [pc, #60]	; (80048c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004882:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 8004886:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004888:	6803      	ldr	r3, [r0, #0]
 800488a:	2101      	movs	r1, #1
 800488c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800488e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004892:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8004896:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004898:	4628      	mov	r0, r5
 800489a:	f004 f819 	bl	80088d0 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800489e:	f7ff ffd5 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 80048a2:	f01b fccc 	bl	802023e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80048a6:	f7ff ffd1 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 80048aa:	f01b fd43 	bl	8020334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80048ae:	4620      	mov	r0, r4
 80048b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048b2:	bf00      	nop
 80048b4:	20013840 	.word	0x20013840
 80048b8:	0802e558 	.word	0x0802e558
 80048bc:	0802e540 	.word	0x0802e540
 80048c0:	200137ec 	.word	0x200137ec

080048c4 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80048c4:	4b06      	ldr	r3, [pc, #24]	; (80048e0 <_ZN23FrontendApplicationBase31gotoMain_MenuScreenNoTransitionEv+0x1c>)
 80048c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048ca:	2300      	movs	r3, #0
 80048cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048dc:	4770      	bx	lr
 80048de:	bf00      	nop
 80048e0:	080046f9 	.word	0x080046f9

080048e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
 80048e4:	4b06      	ldr	r3, [pc, #24]	; (8004900 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80048e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80048ea:	2300      	movs	r3, #0
 80048ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80048f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80048f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80048f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80048fc:	4770      	bx	lr
 80048fe:	bf00      	nop
 8004900:	08004d69 	.word	0x08004d69

08004904 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8004904:	4b06      	ldr	r3, [pc, #24]	; (8004920 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8004906:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800490a:	2300      	movs	r3, #0
 800490c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004910:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004914:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004918:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800491c:	4770      	bx	lr
 800491e:	bf00      	nop
 8004920:	0800590d 	.word	0x0800590d

08004924 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8004924:	4b06      	ldr	r3, [pc, #24]	; (8004940 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8004926:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800492a:	2300      	movs	r3, #0
 800492c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004930:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004934:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004938:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800493c:	4770      	bx	lr
 800493e:	bf00      	nop
 8004940:	08004c29 	.word	0x08004c29

08004944 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8004944:	4b06      	ldr	r3, [pc, #24]	; (8004960 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8004946:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800494a:	2300      	movs	r3, #0
 800494c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004950:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004954:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004958:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800495c:	4770      	bx	lr
 800495e:	bf00      	nop
 8004960:	080057cd 	.word	0x080057cd

08004964 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8004964:	4b06      	ldr	r3, [pc, #24]	; (8004980 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8004966:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800496a:	2300      	movs	r3, #0
 800496c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004970:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004974:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004978:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800497c:	4770      	bx	lr
 800497e:	bf00      	nop
 8004980:	0800568d 	.word	0x0800568d

08004984 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 8004984:	4b06      	ldr	r3, [pc, #24]	; (80049a0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 8004986:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800498a:	2300      	movs	r3, #0
 800498c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004990:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004994:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004998:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800499c:	4770      	bx	lr
 800499e:	bf00      	nop
 80049a0:	0800554d 	.word	0x0800554d

080049a4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80049a4:	4b06      	ldr	r3, [pc, #24]	; (80049c0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80049a6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049aa:	2300      	movs	r3, #0
 80049ac:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049b0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049b4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049b8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049bc:	4770      	bx	lr
 80049be:	bf00      	nop
 80049c0:	0800540d 	.word	0x0800540d

080049c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80049c4:	4b06      	ldr	r3, [pc, #24]	; (80049e0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80049c6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ca:	2300      	movs	r3, #0
 80049cc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049d0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049d4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049d8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049dc:	4770      	bx	lr
 80049de:	bf00      	nop
 80049e0:	08004ae9 	.word	0x08004ae9

080049e4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 80049e4:	4b06      	ldr	r3, [pc, #24]	; (8004a00 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 80049e6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80049ea:	2300      	movs	r3, #0
 80049ec:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80049f0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80049f4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80049f8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80049fc:	4770      	bx	lr
 80049fe:	bf00      	nop
 8004a00:	080052cd 	.word	0x080052cd

08004a04 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8004a04:	4b06      	ldr	r3, [pc, #24]	; (8004a20 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8004a06:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a0a:	2300      	movs	r3, #0
 8004a0c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a10:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a14:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a18:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a1c:	4770      	bx	lr
 8004a1e:	bf00      	nop
 8004a20:	0800518d 	.word	0x0800518d

08004a24 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8004a24:	4b06      	ldr	r3, [pc, #24]	; (8004a40 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8004a26:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a30:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a34:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a38:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a3c:	4770      	bx	lr
 8004a3e:	bf00      	nop
 8004a40:	0800504d 	.word	0x0800504d

08004a44 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8004a44:	4b06      	ldr	r3, [pc, #24]	; (8004a60 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8004a46:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a4a:	2300      	movs	r3, #0
 8004a4c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a50:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a54:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a58:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a5c:	4770      	bx	lr
 8004a5e:	bf00      	nop
 8004a60:	08004f0d 	.word	0x08004f0d

08004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8004a64:	4b06      	ldr	r3, [pc, #24]	; (8004a80 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8004a66:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004a6a:	2300      	movs	r3, #0
 8004a6c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004a70:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004a74:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004a78:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004a7c:	4770      	bx	lr
 8004a7e:	bf00      	nop
 8004a80:	08004509 	.word	0x08004509

08004a84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8004a84:	6803      	ldr	r3, [r0, #0]
 8004a86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a88:	4718      	bx	r3
	...

08004a8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8004a8c:	4b12      	ldr	r3, [pc, #72]	; (8004ad8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004a8e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004a90:	6003      	str	r3, [r0, #0]
 8004a92:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004a96:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004a98:	4b10      	ldr	r3, [pc, #64]	; (8004adc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004a9a:	7241      	strb	r1, [r0, #9]
 8004a9c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a9e:	4910      	ldr	r1, [pc, #64]	; (8004ae0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004aa0:	4b10      	ldr	r3, [pc, #64]	; (8004ae4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004aa2:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004aa6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004aaa:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004aac:	2200      	movs	r2, #0
 8004aae:	6042      	str	r2, [r0, #4]
 8004ab0:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004ab2:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004ab4:	81c2      	strh	r2, [r0, #14]
          solid()
 8004ab6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004aba:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004abe:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004ac2:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004ac6:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ac8:	9100      	str	r1, [sp, #0]
 8004aca:	3010      	adds	r0, #16
 8004acc:	4611      	mov	r1, r2
 8004ace:	f7fd ff44 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004ad2:	4620      	mov	r0, r4
 8004ad4:	b002      	add	sp, #8
 8004ad6:	bd10      	pop	{r4, pc}
 8004ad8:	0802e5f4 	.word	0x0802e5f4
 8004adc:	0802e4d8 	.word	0x0802e4d8
 8004ae0:	200137e2 	.word	0x200137e2
 8004ae4:	200137e0 	.word	0x200137e0

08004ae8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8004ae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004aec:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004af0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004af2:	68a0      	ldr	r0, [r4, #8]
 8004af4:	6803      	ldr	r3, [r0, #0]
 8004af6:	6a1b      	ldr	r3, [r3, #32]
 8004af8:	4798      	blx	r3
 8004afa:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004afe:	d205      	bcs.n	8004b0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8004b00:	4b42      	ldr	r3, [pc, #264]	; (8004c0c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8004b02:	4a43      	ldr	r2, [pc, #268]	; (8004c10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b04:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004b06:	4843      	ldr	r0, [pc, #268]	; (8004c14 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8004b08:	f026 fd2a 	bl	802b560 <__assert_func>
 8004b0c:	6860      	ldr	r0, [r4, #4]
 8004b0e:	6803      	ldr	r3, [r0, #0]
 8004b10:	6a1b      	ldr	r3, [r3, #32]
 8004b12:	4798      	blx	r3
 8004b14:	280f      	cmp	r0, #15
 8004b16:	d803      	bhi.n	8004b20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8004b18:	4b3f      	ldr	r3, [pc, #252]	; (8004c18 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8004b1a:	4a3d      	ldr	r2, [pc, #244]	; (8004c10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b1c:	21a4      	movs	r1, #164	; 0xa4
 8004b1e:	e7f2      	b.n	8004b06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b20:	68e0      	ldr	r0, [r4, #12]
 8004b22:	6803      	ldr	r3, [r0, #0]
 8004b24:	6a1b      	ldr	r3, [r3, #32]
 8004b26:	4798      	blx	r3
 8004b28:	2837      	cmp	r0, #55	; 0x37
 8004b2a:	d803      	bhi.n	8004b34 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8004b2c:	4b3b      	ldr	r3, [pc, #236]	; (8004c1c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8004b2e:	4a38      	ldr	r2, [pc, #224]	; (8004c10 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8004b30:	21a5      	movs	r1, #165	; 0xa5
 8004b32:	e7e8      	b.n	8004b06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004b34:	f011 fe4c 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b38:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c20 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8004b3c:	3004      	adds	r0, #4
 8004b3e:	f011 fead 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b42:	f8d9 0000 	ldr.w	r0, [r9]
 8004b46:	b110      	cbz	r0, 8004b4e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004b48:	6803      	ldr	r3, [r0, #0]
 8004b4a:	68db      	ldr	r3, [r3, #12]
 8004b4c:	4798      	blx	r3
    if (*currentTrans)
 8004b4e:	f8d9 0000 	ldr.w	r0, [r9]
 8004b52:	b110      	cbz	r0, 8004b5a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004b54:	6803      	ldr	r3, [r0, #0]
 8004b56:	681b      	ldr	r3, [r3, #0]
 8004b58:	4798      	blx	r3
    if (*currentScreen)
 8004b5a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004c24 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8004b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8004b62:	b110      	cbz	r0, 8004b6a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b64:	6803      	ldr	r3, [r0, #0]
 8004b66:	695b      	ldr	r3, [r3, #20]
 8004b68:	4798      	blx	r3
    if (*currentPresenter)
 8004b6a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b6e:	b110      	cbz	r0, 8004b76 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b70:	6803      	ldr	r3, [r0, #0]
 8004b72:	685b      	ldr	r3, [r3, #4]
 8004b74:	4798      	blx	r3
    if (*currentScreen)
 8004b76:	f8d8 0000 	ldr.w	r0, [r8]
 8004b7a:	b110      	cbz	r0, 8004b82 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b7c:	6803      	ldr	r3, [r0, #0]
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	4798      	blx	r3
    if (*currentPresenter)
 8004b82:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b86:	b110      	cbz	r0, 8004b8e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b88:	6803      	ldr	r3, [r0, #0]
 8004b8a:	689b      	ldr	r3, [r3, #8]
 8004b8c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b8e:	68e0      	ldr	r0, [r4, #12]
 8004b90:	2100      	movs	r1, #0
 8004b92:	f7ff ff77 	bl	8004a84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004b96:	2114      	movs	r1, #20
 8004b98:	4605      	mov	r5, r0
 8004b9a:	f7ff ff77 	bl	8004a8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b9e:	68a0      	ldr	r0, [r4, #8]
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	2100      	movs	r1, #0
 8004ba4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ba6:	4798      	blx	r3
 8004ba8:	4606      	mov	r6, r0
 8004baa:	f004 f91d 	bl	8008de8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004bae:	6860      	ldr	r0, [r4, #4]
 8004bb0:	6803      	ldr	r3, [r0, #0]
 8004bb2:	2100      	movs	r1, #0
 8004bb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bb6:	4798      	blx	r3
 8004bb8:	4631      	mov	r1, r6
 8004bba:	4604      	mov	r4, r0
 8004bbc:	f004 f8ee 	bl	8008d9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004bc0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bc4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bc8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bcc:	b1dc      	cbz	r4, 8004c06 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8004bce:	1d23      	adds	r3, r4, #4
 8004bd0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bd4:	6833      	ldr	r3, [r6, #0]
 8004bd6:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bda:	4630      	mov	r0, r6
 8004bdc:	68db      	ldr	r3, [r3, #12]
 8004bde:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004be0:	4798      	blx	r3
    newPresenter->activate();
 8004be2:	6823      	ldr	r3, [r4, #0]
 8004be4:	4620      	mov	r0, r4
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004bea:	4629      	mov	r1, r5
 8004bec:	4630      	mov	r0, r6
 8004bee:	f013 fc1b 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004bf2:	682b      	ldr	r3, [r5, #0]
 8004bf4:	4628      	mov	r0, r5
 8004bf6:	691b      	ldr	r3, [r3, #16]
 8004bf8:	4798      	blx	r3
    newTransition->invalidate();
 8004bfa:	682b      	ldr	r3, [r5, #0]
 8004bfc:	4628      	mov	r0, r5
 8004bfe:	695b      	ldr	r3, [r3, #20]
}
 8004c00:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004c04:	4718      	bx	r3
    model->bind(newPresenter);
 8004c06:	4623      	mov	r3, r4
 8004c08:	e7e2      	b.n	8004bd0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8004c0a:	bf00      	nop
 8004c0c:	0802d26c 	.word	0x0802d26c
 8004c10:	0802d69d 	.word	0x0802d69d
 8004c14:	0802d408 	.word	0x0802d408
 8004c18:	0802d44f 	.word	0x0802d44f
 8004c1c:	0802d4f2 	.word	0x0802d4f2
 8004c20:	20013834 	.word	0x20013834
 8004c24:	20013830 	.word	0x20013830

08004c28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8004c28:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c2c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c30:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c32:	68a0      	ldr	r0, [r4, #8]
 8004c34:	6803      	ldr	r3, [r0, #0]
 8004c36:	6a1b      	ldr	r3, [r3, #32]
 8004c38:	4798      	blx	r3
 8004c3a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c3e:	d205      	bcs.n	8004c4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8004c40:	4b42      	ldr	r3, [pc, #264]	; (8004d4c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8004c42:	4a43      	ldr	r2, [pc, #268]	; (8004d50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c44:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c46:	4843      	ldr	r0, [pc, #268]	; (8004d54 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8004c48:	f026 fc8a 	bl	802b560 <__assert_func>
 8004c4c:	6860      	ldr	r0, [r4, #4]
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	6a1b      	ldr	r3, [r3, #32]
 8004c52:	4798      	blx	r3
 8004c54:	280f      	cmp	r0, #15
 8004c56:	d803      	bhi.n	8004c60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8004c58:	4b3f      	ldr	r3, [pc, #252]	; (8004d58 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8004c5a:	4a3d      	ldr	r2, [pc, #244]	; (8004d50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c5c:	21a4      	movs	r1, #164	; 0xa4
 8004c5e:	e7f2      	b.n	8004c46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c60:	68e0      	ldr	r0, [r4, #12]
 8004c62:	6803      	ldr	r3, [r0, #0]
 8004c64:	6a1b      	ldr	r3, [r3, #32]
 8004c66:	4798      	blx	r3
 8004c68:	2837      	cmp	r0, #55	; 0x37
 8004c6a:	d803      	bhi.n	8004c74 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8004c6c:	4b3b      	ldr	r3, [pc, #236]	; (8004d5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8004c6e:	4a38      	ldr	r2, [pc, #224]	; (8004d50 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8004c70:	21a5      	movs	r1, #165	; 0xa5
 8004c72:	e7e8      	b.n	8004c46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c74:	f011 fdac 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c78:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d60 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8004c7c:	3004      	adds	r0, #4
 8004c7e:	f011 fe0d 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c82:	f8d9 0000 	ldr.w	r0, [r9]
 8004c86:	b110      	cbz	r0, 8004c8e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c88:	6803      	ldr	r3, [r0, #0]
 8004c8a:	68db      	ldr	r3, [r3, #12]
 8004c8c:	4798      	blx	r3
    if (*currentTrans)
 8004c8e:	f8d9 0000 	ldr.w	r0, [r9]
 8004c92:	b110      	cbz	r0, 8004c9a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c94:	6803      	ldr	r3, [r0, #0]
 8004c96:	681b      	ldr	r3, [r3, #0]
 8004c98:	4798      	blx	r3
    if (*currentScreen)
 8004c9a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d64 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8004c9e:	f8d8 0000 	ldr.w	r0, [r8]
 8004ca2:	b110      	cbz	r0, 8004caa <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004ca4:	6803      	ldr	r3, [r0, #0]
 8004ca6:	695b      	ldr	r3, [r3, #20]
 8004ca8:	4798      	blx	r3
    if (*currentPresenter)
 8004caa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cae:	b110      	cbz	r0, 8004cb6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004cb0:	6803      	ldr	r3, [r0, #0]
 8004cb2:	685b      	ldr	r3, [r3, #4]
 8004cb4:	4798      	blx	r3
    if (*currentScreen)
 8004cb6:	f8d8 0000 	ldr.w	r0, [r8]
 8004cba:	b110      	cbz	r0, 8004cc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004cbc:	6803      	ldr	r3, [r0, #0]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	4798      	blx	r3
    if (*currentPresenter)
 8004cc2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cc6:	b110      	cbz	r0, 8004cce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004cc8:	6803      	ldr	r3, [r0, #0]
 8004cca:	689b      	ldr	r3, [r3, #8]
 8004ccc:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cce:	68e0      	ldr	r0, [r4, #12]
 8004cd0:	2100      	movs	r1, #0
 8004cd2:	f7ff fed7 	bl	8004a84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004cd6:	2114      	movs	r1, #20
 8004cd8:	4605      	mov	r5, r0
 8004cda:	f7ff fed7 	bl	8004a8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cde:	68a0      	ldr	r0, [r4, #8]
 8004ce0:	6803      	ldr	r3, [r0, #0]
 8004ce2:	2100      	movs	r1, #0
 8004ce4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ce6:	4798      	blx	r3
 8004ce8:	4606      	mov	r6, r0
 8004cea:	f004 f81d 	bl	8008d28 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cee:	6860      	ldr	r0, [r4, #4]
 8004cf0:	6803      	ldr	r3, [r0, #0]
 8004cf2:	2100      	movs	r1, #0
 8004cf4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cf6:	4798      	blx	r3
 8004cf8:	4631      	mov	r1, r6
 8004cfa:	4604      	mov	r4, r0
 8004cfc:	f003 ffee 	bl	8008cdc <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004d00:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004d04:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004d08:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d0c:	b1dc      	cbz	r4, 8004d46 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8004d0e:	1d23      	adds	r3, r4, #4
 8004d10:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d14:	6833      	ldr	r3, [r6, #0]
 8004d16:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d1a:	4630      	mov	r0, r6
 8004d1c:	68db      	ldr	r3, [r3, #12]
 8004d1e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d20:	4798      	blx	r3
    newPresenter->activate();
 8004d22:	6823      	ldr	r3, [r4, #0]
 8004d24:	4620      	mov	r0, r4
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d2a:	4629      	mov	r1, r5
 8004d2c:	4630      	mov	r0, r6
 8004d2e:	f013 fb7b 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d32:	682b      	ldr	r3, [r5, #0]
 8004d34:	4628      	mov	r0, r5
 8004d36:	691b      	ldr	r3, [r3, #16]
 8004d38:	4798      	blx	r3
    newTransition->invalidate();
 8004d3a:	682b      	ldr	r3, [r5, #0]
 8004d3c:	4628      	mov	r0, r5
 8004d3e:	695b      	ldr	r3, [r3, #20]
}
 8004d40:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d44:	4718      	bx	r3
    model->bind(newPresenter);
 8004d46:	4623      	mov	r3, r4
 8004d48:	e7e2      	b.n	8004d10 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8004d4a:	bf00      	nop
 8004d4c:	0802d26c 	.word	0x0802d26c
 8004d50:	0802d7cd 	.word	0x0802d7cd
 8004d54:	0802d408 	.word	0x0802d408
 8004d58:	0802d44f 	.word	0x0802d44f
 8004d5c:	0802d4f2 	.word	0x0802d4f2
 8004d60:	20013834 	.word	0x20013834
 8004d64:	20013830 	.word	0x20013830

08004d68 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8004d68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d6c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d70:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d72:	68a0      	ldr	r0, [r4, #8]
 8004d74:	6803      	ldr	r3, [r0, #0]
 8004d76:	6a1b      	ldr	r3, [r3, #32]
 8004d78:	4798      	blx	r3
 8004d7a:	f241 137b 	movw	r3, #4475	; 0x117b
 8004d7e:	4298      	cmp	r0, r3
 8004d80:	d805      	bhi.n	8004d8e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8004d82:	4b42      	ldr	r3, [pc, #264]	; (8004e8c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8004d84:	4a42      	ldr	r2, [pc, #264]	; (8004e90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d86:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d88:	4842      	ldr	r0, [pc, #264]	; (8004e94 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8004d8a:	f026 fbe9 	bl	802b560 <__assert_func>
 8004d8e:	6860      	ldr	r0, [r4, #4]
 8004d90:	6803      	ldr	r3, [r0, #0]
 8004d92:	6a1b      	ldr	r3, [r3, #32]
 8004d94:	4798      	blx	r3
 8004d96:	280f      	cmp	r0, #15
 8004d98:	d803      	bhi.n	8004da2 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8004d9a:	4b3f      	ldr	r3, [pc, #252]	; (8004e98 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8004d9c:	4a3c      	ldr	r2, [pc, #240]	; (8004e90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004d9e:	21a4      	movs	r1, #164	; 0xa4
 8004da0:	e7f2      	b.n	8004d88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004da2:	68e0      	ldr	r0, [r4, #12]
 8004da4:	6803      	ldr	r3, [r0, #0]
 8004da6:	6a1b      	ldr	r3, [r3, #32]
 8004da8:	4798      	blx	r3
 8004daa:	2837      	cmp	r0, #55	; 0x37
 8004dac:	d803      	bhi.n	8004db6 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8004dae:	4b3b      	ldr	r3, [pc, #236]	; (8004e9c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8004db0:	4a37      	ldr	r2, [pc, #220]	; (8004e90 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8004db2:	21a5      	movs	r1, #165	; 0xa5
 8004db4:	e7e8      	b.n	8004d88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004db6:	f011 fd0b 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dba:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ea0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8004dbe:	3004      	adds	r0, #4
 8004dc0:	f011 fd6c 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004dc4:	f8d9 0000 	ldr.w	r0, [r9]
 8004dc8:	b110      	cbz	r0, 8004dd0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004dca:	6803      	ldr	r3, [r0, #0]
 8004dcc:	68db      	ldr	r3, [r3, #12]
 8004dce:	4798      	blx	r3
    if (*currentTrans)
 8004dd0:	f8d9 0000 	ldr.w	r0, [r9]
 8004dd4:	b110      	cbz	r0, 8004ddc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004dd6:	6803      	ldr	r3, [r0, #0]
 8004dd8:	681b      	ldr	r3, [r3, #0]
 8004dda:	4798      	blx	r3
    if (*currentScreen)
 8004ddc:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ea4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8004de0:	f8d8 0000 	ldr.w	r0, [r8]
 8004de4:	b110      	cbz	r0, 8004dec <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004de6:	6803      	ldr	r3, [r0, #0]
 8004de8:	695b      	ldr	r3, [r3, #20]
 8004dea:	4798      	blx	r3
    if (*currentPresenter)
 8004dec:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004df0:	b110      	cbz	r0, 8004df8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004df2:	6803      	ldr	r3, [r0, #0]
 8004df4:	685b      	ldr	r3, [r3, #4]
 8004df6:	4798      	blx	r3
    if (*currentScreen)
 8004df8:	f8d8 0000 	ldr.w	r0, [r8]
 8004dfc:	b110      	cbz	r0, 8004e04 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004dfe:	6803      	ldr	r3, [r0, #0]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	4798      	blx	r3
    if (*currentPresenter)
 8004e04:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004e08:	b110      	cbz	r0, 8004e10 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004e0a:	6803      	ldr	r3, [r0, #0]
 8004e0c:	689b      	ldr	r3, [r3, #8]
 8004e0e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e10:	68e0      	ldr	r0, [r4, #12]
 8004e12:	2100      	movs	r1, #0
 8004e14:	f7ff fe36 	bl	8004a84 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8004e18:	2114      	movs	r1, #20
 8004e1a:	4605      	mov	r5, r0
 8004e1c:	f7ff fe36 	bl	8004a8c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e20:	68a0      	ldr	r0, [r4, #8]
 8004e22:	6803      	ldr	r3, [r0, #0]
 8004e24:	2100      	movs	r1, #0
 8004e26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e28:	4798      	blx	r3
 8004e2a:	4606      	mov	r6, r0
 8004e2c:	f003 ff1c 	bl	8008c68 <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e30:	6860      	ldr	r0, [r4, #4]
 8004e32:	6803      	ldr	r3, [r0, #0]
 8004e34:	2100      	movs	r1, #0
 8004e36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e38:	4798      	blx	r3
 8004e3a:	4631      	mov	r1, r6
 8004e3c:	4604      	mov	r4, r0
 8004e3e:	f003 feed 	bl	8008c1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004e42:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e46:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e4a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e4e:	b1dc      	cbz	r4, 8004e88 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004e50:	1d23      	adds	r3, r4, #4
 8004e52:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e56:	6833      	ldr	r3, [r6, #0]
 8004e58:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e5c:	4630      	mov	r0, r6
 8004e5e:	68db      	ldr	r3, [r3, #12]
 8004e60:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e62:	4798      	blx	r3
    newPresenter->activate();
 8004e64:	6823      	ldr	r3, [r4, #0]
 8004e66:	4620      	mov	r0, r4
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e6c:	4629      	mov	r1, r5
 8004e6e:	4630      	mov	r0, r6
 8004e70:	f013 fada 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e74:	682b      	ldr	r3, [r5, #0]
 8004e76:	4628      	mov	r0, r5
 8004e78:	691b      	ldr	r3, [r3, #16]
 8004e7a:	4798      	blx	r3
    newTransition->invalidate();
 8004e7c:	682b      	ldr	r3, [r5, #0]
 8004e7e:	4628      	mov	r0, r5
 8004e80:	695b      	ldr	r3, [r3, #20]
}
 8004e82:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e86:	4718      	bx	r3
    model->bind(newPresenter);
 8004e88:	4623      	mov	r3, r4
 8004e8a:	e7e2      	b.n	8004e52 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 8004e8c:	0802d26c 	.word	0x0802d26c
 8004e90:	0802d8eb 	.word	0x0802d8eb
 8004e94:	0802d408 	.word	0x0802d408
 8004e98:	0802d44f 	.word	0x0802d44f
 8004e9c:	0802d4f2 	.word	0x0802d4f2
 8004ea0:	20013834 	.word	0x20013834
 8004ea4:	20013830 	.word	0x20013830

08004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004ea8:	6803      	ldr	r3, [r0, #0]
 8004eaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004eac:	4718      	bx	r3
	...

08004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004eb0:	4b12      	ldr	r3, [pc, #72]	; (8004efc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004eb2:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004eb4:	6003      	str	r3, [r0, #0]
 8004eb6:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004eba:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004ebc:	4b10      	ldr	r3, [pc, #64]	; (8004f00 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8004ebe:	7241      	strb	r1, [r0, #9]
 8004ec0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ec2:	4910      	ldr	r1, [pc, #64]	; (8004f04 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004ec4:	4b10      	ldr	r3, [pc, #64]	; (8004f08 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004ec6:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8004eca:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004ece:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004ed0:	2200      	movs	r2, #0
 8004ed2:	6042      	str	r2, [r0, #4]
 8004ed4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8004ed6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8004ed8:	81c2      	strh	r2, [r0, #14]
          solid()
 8004eda:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004ede:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8004ee2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8004ee6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8004eea:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004eec:	9100      	str	r1, [sp, #0]
 8004eee:	3010      	adds	r0, #16
 8004ef0:	4611      	mov	r1, r2
 8004ef2:	f7fd fd32 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8004ef6:	4620      	mov	r0, r4
 8004ef8:	b002      	add	sp, #8
 8004efa:	bd10      	pop	{r4, pc}
 8004efc:	0802e5d0 	.word	0x0802e5d0
 8004f00:	0802e4d8 	.word	0x0802e4d8
 8004f04:	200137e2 	.word	0x200137e2
 8004f08:	200137e0 	.word	0x200137e0

08004f0c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 8004f0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004f10:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004f14:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004f16:	68a0      	ldr	r0, [r4, #8]
 8004f18:	6803      	ldr	r3, [r0, #0]
 8004f1a:	6a1b      	ldr	r3, [r3, #32]
 8004f1c:	4798      	blx	r3
 8004f1e:	f241 03af 	movw	r3, #4271	; 0x10af
 8004f22:	4298      	cmp	r0, r3
 8004f24:	d805      	bhi.n	8004f32 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 8004f26:	4b42      	ldr	r3, [pc, #264]	; (8005030 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 8004f28:	4a42      	ldr	r2, [pc, #264]	; (8005034 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f2a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004f2c:	4842      	ldr	r0, [pc, #264]	; (8005038 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 8004f2e:	f026 fb17 	bl	802b560 <__assert_func>
 8004f32:	6860      	ldr	r0, [r4, #4]
 8004f34:	6803      	ldr	r3, [r0, #0]
 8004f36:	6a1b      	ldr	r3, [r3, #32]
 8004f38:	4798      	blx	r3
 8004f3a:	280f      	cmp	r0, #15
 8004f3c:	d803      	bhi.n	8004f46 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 8004f3e:	4b3f      	ldr	r3, [pc, #252]	; (800503c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004f40:	4a3c      	ldr	r2, [pc, #240]	; (8005034 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f42:	21a4      	movs	r1, #164	; 0xa4
 8004f44:	e7f2      	b.n	8004f2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004f46:	68e0      	ldr	r0, [r4, #12]
 8004f48:	6803      	ldr	r3, [r0, #0]
 8004f4a:	6a1b      	ldr	r3, [r3, #32]
 8004f4c:	4798      	blx	r3
 8004f4e:	2837      	cmp	r0, #55	; 0x37
 8004f50:	d803      	bhi.n	8004f5a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004f52:	4b3b      	ldr	r3, [pc, #236]	; (8005040 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004f54:	4a37      	ldr	r2, [pc, #220]	; (8005034 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004f56:	21a5      	movs	r1, #165	; 0xa5
 8004f58:	e7e8      	b.n	8004f2c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f5a:	f011 fc39 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f5e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005044 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004f62:	3004      	adds	r0, #4
 8004f64:	f011 fc9a 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f68:	f8d9 0000 	ldr.w	r0, [r9]
 8004f6c:	b110      	cbz	r0, 8004f74 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f6e:	6803      	ldr	r3, [r0, #0]
 8004f70:	68db      	ldr	r3, [r3, #12]
 8004f72:	4798      	blx	r3
    if (*currentTrans)
 8004f74:	f8d9 0000 	ldr.w	r0, [r9]
 8004f78:	b110      	cbz	r0, 8004f80 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f7a:	6803      	ldr	r3, [r0, #0]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	4798      	blx	r3
    if (*currentScreen)
 8004f80:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005048 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004f84:	f8d8 0000 	ldr.w	r0, [r8]
 8004f88:	b110      	cbz	r0, 8004f90 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f8a:	6803      	ldr	r3, [r0, #0]
 8004f8c:	695b      	ldr	r3, [r3, #20]
 8004f8e:	4798      	blx	r3
    if (*currentPresenter)
 8004f90:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f94:	b110      	cbz	r0, 8004f9c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f96:	6803      	ldr	r3, [r0, #0]
 8004f98:	685b      	ldr	r3, [r3, #4]
 8004f9a:	4798      	blx	r3
    if (*currentScreen)
 8004f9c:	f8d8 0000 	ldr.w	r0, [r8]
 8004fa0:	b110      	cbz	r0, 8004fa8 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004fa2:	6803      	ldr	r3, [r0, #0]
 8004fa4:	681b      	ldr	r3, [r3, #0]
 8004fa6:	4798      	blx	r3
    if (*currentPresenter)
 8004fa8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004fac:	b110      	cbz	r0, 8004fb4 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004fae:	6803      	ldr	r3, [r0, #0]
 8004fb0:	689b      	ldr	r3, [r3, #8]
 8004fb2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004fb4:	68e0      	ldr	r0, [r4, #12]
 8004fb6:	2100      	movs	r1, #0
 8004fb8:	f7ff ff76 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004fbc:	2114      	movs	r1, #20
 8004fbe:	4605      	mov	r5, r0
 8004fc0:	f7ff ff76 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004fc4:	68a0      	ldr	r0, [r4, #8]
 8004fc6:	6803      	ldr	r3, [r0, #0]
 8004fc8:	2100      	movs	r1, #0
 8004fca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fcc:	4798      	blx	r3
 8004fce:	4606      	mov	r6, r0
 8004fd0:	f004 f94e 	bl	8009270 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004fd4:	6860      	ldr	r0, [r4, #4]
 8004fd6:	6803      	ldr	r3, [r0, #0]
 8004fd8:	2100      	movs	r1, #0
 8004fda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fdc:	4798      	blx	r3
 8004fde:	4631      	mov	r1, r6
 8004fe0:	4604      	mov	r4, r0
 8004fe2:	f004 f91f 	bl	8009224 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 8004fe6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004fea:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004fee:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004ff2:	b1dc      	cbz	r4, 800502c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 8004ff4:	1d23      	adds	r3, r4, #4
 8004ff6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004ffa:	6833      	ldr	r3, [r6, #0]
 8004ffc:	f8c4 a008 	str.w	sl, [r4, #8]
 8005000:	4630      	mov	r0, r6
 8005002:	68db      	ldr	r3, [r3, #12]
 8005004:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005006:	4798      	blx	r3
    newPresenter->activate();
 8005008:	6823      	ldr	r3, [r4, #0]
 800500a:	4620      	mov	r0, r4
 800500c:	681b      	ldr	r3, [r3, #0]
 800500e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005010:	4629      	mov	r1, r5
 8005012:	4630      	mov	r0, r6
 8005014:	f013 fa08 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005018:	682b      	ldr	r3, [r5, #0]
 800501a:	4628      	mov	r0, r5
 800501c:	691b      	ldr	r3, [r3, #16]
 800501e:	4798      	blx	r3
    newTransition->invalidate();
 8005020:	682b      	ldr	r3, [r5, #0]
 8005022:	4628      	mov	r0, r5
 8005024:	695b      	ldr	r3, [r3, #20]
}
 8005026:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800502a:	4718      	bx	r3
    model->bind(newPresenter);
 800502c:	4623      	mov	r3, r4
 800502e:	e7e2      	b.n	8004ff6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8005030:	0802d26c 	.word	0x0802d26c
 8005034:	0802da05 	.word	0x0802da05
 8005038:	0802d408 	.word	0x0802d408
 800503c:	0802d44f 	.word	0x0802d44f
 8005040:	0802d4f2 	.word	0x0802d4f2
 8005044:	20013834 	.word	0x20013834
 8005048:	20013830 	.word	0x20013830

0800504c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 800504c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005050:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005054:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005056:	68a0      	ldr	r0, [r4, #8]
 8005058:	6803      	ldr	r3, [r0, #0]
 800505a:	6a1b      	ldr	r3, [r3, #32]
 800505c:	4798      	blx	r3
 800505e:	f641 5303 	movw	r3, #7427	; 0x1d03
 8005062:	4298      	cmp	r0, r3
 8005064:	d805      	bhi.n	8005072 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8005066:	4b42      	ldr	r3, [pc, #264]	; (8005170 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8005068:	4a42      	ldr	r2, [pc, #264]	; (8005174 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800506a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800506c:	4842      	ldr	r0, [pc, #264]	; (8005178 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800506e:	f026 fa77 	bl	802b560 <__assert_func>
 8005072:	6860      	ldr	r0, [r4, #4]
 8005074:	6803      	ldr	r3, [r0, #0]
 8005076:	6a1b      	ldr	r3, [r3, #32]
 8005078:	4798      	blx	r3
 800507a:	280f      	cmp	r0, #15
 800507c:	d803      	bhi.n	8005086 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800507e:	4b3f      	ldr	r3, [pc, #252]	; (800517c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8005080:	4a3c      	ldr	r2, [pc, #240]	; (8005174 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005082:	21a4      	movs	r1, #164	; 0xa4
 8005084:	e7f2      	b.n	800506c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005086:	68e0      	ldr	r0, [r4, #12]
 8005088:	6803      	ldr	r3, [r0, #0]
 800508a:	6a1b      	ldr	r3, [r3, #32]
 800508c:	4798      	blx	r3
 800508e:	2837      	cmp	r0, #55	; 0x37
 8005090:	d803      	bhi.n	800509a <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 8005092:	4b3b      	ldr	r3, [pc, #236]	; (8005180 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 8005094:	4a37      	ldr	r2, [pc, #220]	; (8005174 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8005096:	21a5      	movs	r1, #165	; 0xa5
 8005098:	e7e8      	b.n	800506c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800509a:	f011 fb99 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800509e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005184 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80050a2:	3004      	adds	r0, #4
 80050a4:	f011 fbfa 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80050a8:	f8d9 0000 	ldr.w	r0, [r9]
 80050ac:	b110      	cbz	r0, 80050b4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80050ae:	6803      	ldr	r3, [r0, #0]
 80050b0:	68db      	ldr	r3, [r3, #12]
 80050b2:	4798      	blx	r3
    if (*currentTrans)
 80050b4:	f8d9 0000 	ldr.w	r0, [r9]
 80050b8:	b110      	cbz	r0, 80050c0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80050ba:	6803      	ldr	r3, [r0, #0]
 80050bc:	681b      	ldr	r3, [r3, #0]
 80050be:	4798      	blx	r3
    if (*currentScreen)
 80050c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005188 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80050c4:	f8d8 0000 	ldr.w	r0, [r8]
 80050c8:	b110      	cbz	r0, 80050d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80050ca:	6803      	ldr	r3, [r0, #0]
 80050cc:	695b      	ldr	r3, [r3, #20]
 80050ce:	4798      	blx	r3
    if (*currentPresenter)
 80050d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050d4:	b110      	cbz	r0, 80050dc <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80050d6:	6803      	ldr	r3, [r0, #0]
 80050d8:	685b      	ldr	r3, [r3, #4]
 80050da:	4798      	blx	r3
    if (*currentScreen)
 80050dc:	f8d8 0000 	ldr.w	r0, [r8]
 80050e0:	b110      	cbz	r0, 80050e8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80050e2:	6803      	ldr	r3, [r0, #0]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	4798      	blx	r3
    if (*currentPresenter)
 80050e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80050ec:	b110      	cbz	r0, 80050f4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80050ee:	6803      	ldr	r3, [r0, #0]
 80050f0:	689b      	ldr	r3, [r3, #8]
 80050f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80050f4:	68e0      	ldr	r0, [r4, #12]
 80050f6:	2100      	movs	r1, #0
 80050f8:	f7ff fed6 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80050fc:	2114      	movs	r1, #20
 80050fe:	4605      	mov	r5, r0
 8005100:	f7ff fed6 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005104:	68a0      	ldr	r0, [r4, #8]
 8005106:	6803      	ldr	r3, [r0, #0]
 8005108:	2100      	movs	r1, #0
 800510a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800510c:	4798      	blx	r3
 800510e:	4606      	mov	r6, r0
 8005110:	f003 fc76 	bl	8008a00 <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005114:	6860      	ldr	r0, [r4, #4]
 8005116:	6803      	ldr	r3, [r0, #0]
 8005118:	2100      	movs	r1, #0
 800511a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800511c:	4798      	blx	r3
 800511e:	4631      	mov	r1, r6
 8005120:	4604      	mov	r4, r0
 8005122:	f003 fc47 	bl	80089b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8005126:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800512a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800512e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005132:	b1dc      	cbz	r4, 800516c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8005134:	1d23      	adds	r3, r4, #4
 8005136:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800513a:	6833      	ldr	r3, [r6, #0]
 800513c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005140:	4630      	mov	r0, r6
 8005142:	68db      	ldr	r3, [r3, #12]
 8005144:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005146:	4798      	blx	r3
    newPresenter->activate();
 8005148:	6823      	ldr	r3, [r4, #0]
 800514a:	4620      	mov	r0, r4
 800514c:	681b      	ldr	r3, [r3, #0]
 800514e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005150:	4629      	mov	r1, r5
 8005152:	4630      	mov	r0, r6
 8005154:	f013 f968 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005158:	682b      	ldr	r3, [r5, #0]
 800515a:	4628      	mov	r0, r5
 800515c:	691b      	ldr	r3, [r3, #16]
 800515e:	4798      	blx	r3
    newTransition->invalidate();
 8005160:	682b      	ldr	r3, [r5, #0]
 8005162:	4628      	mov	r0, r5
 8005164:	695b      	ldr	r3, [r3, #20]
}
 8005166:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800516a:	4718      	bx	r3
    model->bind(newPresenter);
 800516c:	4623      	mov	r3, r4
 800516e:	e7e2      	b.n	8005136 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8005170:	0802d26c 	.word	0x0802d26c
 8005174:	0802db25 	.word	0x0802db25
 8005178:	0802d408 	.word	0x0802d408
 800517c:	0802d44f 	.word	0x0802d44f
 8005180:	0802d4f2 	.word	0x0802d4f2
 8005184:	20013834 	.word	0x20013834
 8005188:	20013830 	.word	0x20013830

0800518c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 800518c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005190:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005194:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005196:	68a0      	ldr	r0, [r4, #8]
 8005198:	6803      	ldr	r3, [r0, #0]
 800519a:	6a1b      	ldr	r3, [r3, #32]
 800519c:	4798      	blx	r3
 800519e:	f241 035b 	movw	r3, #4187	; 0x105b
 80051a2:	4298      	cmp	r0, r3
 80051a4:	d805      	bhi.n	80051b2 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80051a6:	4b42      	ldr	r3, [pc, #264]	; (80052b0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80051a8:	4a42      	ldr	r2, [pc, #264]	; (80052b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80051aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80051ac:	4842      	ldr	r0, [pc, #264]	; (80052b8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80051ae:	f026 f9d7 	bl	802b560 <__assert_func>
 80051b2:	6860      	ldr	r0, [r4, #4]
 80051b4:	6803      	ldr	r3, [r0, #0]
 80051b6:	6a1b      	ldr	r3, [r3, #32]
 80051b8:	4798      	blx	r3
 80051ba:	280f      	cmp	r0, #15
 80051bc:	d803      	bhi.n	80051c6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 80051be:	4b3f      	ldr	r3, [pc, #252]	; (80052bc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 80051c0:	4a3c      	ldr	r2, [pc, #240]	; (80052b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80051c2:	21a4      	movs	r1, #164	; 0xa4
 80051c4:	e7f2      	b.n	80051ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80051c6:	68e0      	ldr	r0, [r4, #12]
 80051c8:	6803      	ldr	r3, [r0, #0]
 80051ca:	6a1b      	ldr	r3, [r3, #32]
 80051cc:	4798      	blx	r3
 80051ce:	2837      	cmp	r0, #55	; 0x37
 80051d0:	d803      	bhi.n	80051da <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 80051d2:	4b3b      	ldr	r3, [pc, #236]	; (80052c0 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 80051d4:	4a37      	ldr	r2, [pc, #220]	; (80052b4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80051d6:	21a5      	movs	r1, #165	; 0xa5
 80051d8:	e7e8      	b.n	80051ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80051da:	f011 faf9 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80051de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80052c4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 80051e2:	3004      	adds	r0, #4
 80051e4:	f011 fb5a 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80051e8:	f8d9 0000 	ldr.w	r0, [r9]
 80051ec:	b110      	cbz	r0, 80051f4 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	68db      	ldr	r3, [r3, #12]
 80051f2:	4798      	blx	r3
    if (*currentTrans)
 80051f4:	f8d9 0000 	ldr.w	r0, [r9]
 80051f8:	b110      	cbz	r0, 8005200 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80051fa:	6803      	ldr	r3, [r0, #0]
 80051fc:	681b      	ldr	r3, [r3, #0]
 80051fe:	4798      	blx	r3
    if (*currentScreen)
 8005200:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80052c8 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8005204:	f8d8 0000 	ldr.w	r0, [r8]
 8005208:	b110      	cbz	r0, 8005210 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800520a:	6803      	ldr	r3, [r0, #0]
 800520c:	695b      	ldr	r3, [r3, #20]
 800520e:	4798      	blx	r3
    if (*currentPresenter)
 8005210:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005214:	b110      	cbz	r0, 800521c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005216:	6803      	ldr	r3, [r0, #0]
 8005218:	685b      	ldr	r3, [r3, #4]
 800521a:	4798      	blx	r3
    if (*currentScreen)
 800521c:	f8d8 0000 	ldr.w	r0, [r8]
 8005220:	b110      	cbz	r0, 8005228 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005222:	6803      	ldr	r3, [r0, #0]
 8005224:	681b      	ldr	r3, [r3, #0]
 8005226:	4798      	blx	r3
    if (*currentPresenter)
 8005228:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800522c:	b110      	cbz	r0, 8005234 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800522e:	6803      	ldr	r3, [r0, #0]
 8005230:	689b      	ldr	r3, [r3, #8]
 8005232:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005234:	68e0      	ldr	r0, [r4, #12]
 8005236:	2100      	movs	r1, #0
 8005238:	f7ff fe36 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800523c:	2114      	movs	r1, #20
 800523e:	4605      	mov	r5, r0
 8005240:	f7ff fe36 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005244:	68a0      	ldr	r0, [r4, #8]
 8005246:	6803      	ldr	r3, [r0, #0]
 8005248:	2100      	movs	r1, #0
 800524a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800524c:	4798      	blx	r3
 800524e:	4606      	mov	r6, r0
 8005250:	f003 fe66 	bl	8008f20 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005254:	6860      	ldr	r0, [r4, #4]
 8005256:	6803      	ldr	r3, [r0, #0]
 8005258:	2100      	movs	r1, #0
 800525a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800525c:	4798      	blx	r3
 800525e:	4631      	mov	r1, r6
 8005260:	4604      	mov	r4, r0
 8005262:	f003 fe37 	bl	8008ed4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 8005266:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800526a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800526e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005272:	b1dc      	cbz	r4, 80052ac <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 8005274:	1d23      	adds	r3, r4, #4
 8005276:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800527a:	6833      	ldr	r3, [r6, #0]
 800527c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005280:	4630      	mov	r0, r6
 8005282:	68db      	ldr	r3, [r3, #12]
 8005284:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005286:	4798      	blx	r3
    newPresenter->activate();
 8005288:	6823      	ldr	r3, [r4, #0]
 800528a:	4620      	mov	r0, r4
 800528c:	681b      	ldr	r3, [r3, #0]
 800528e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005290:	4629      	mov	r1, r5
 8005292:	4630      	mov	r0, r6
 8005294:	f013 f8c8 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005298:	682b      	ldr	r3, [r5, #0]
 800529a:	4628      	mov	r0, r5
 800529c:	691b      	ldr	r3, [r3, #16]
 800529e:	4798      	blx	r3
    newTransition->invalidate();
 80052a0:	682b      	ldr	r3, [r5, #0]
 80052a2:	4628      	mov	r0, r5
 80052a4:	695b      	ldr	r3, [r3, #20]
}
 80052a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80052aa:	4718      	bx	r3
    model->bind(newPresenter);
 80052ac:	4623      	mov	r3, r4
 80052ae:	e7e2      	b.n	8005276 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 80052b0:	0802d26c 	.word	0x0802d26c
 80052b4:	0802dc4b 	.word	0x0802dc4b
 80052b8:	0802d408 	.word	0x0802d408
 80052bc:	0802d44f 	.word	0x0802d44f
 80052c0:	0802d4f2 	.word	0x0802d4f2
 80052c4:	20013834 	.word	0x20013834
 80052c8:	20013830 	.word	0x20013830

080052cc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 80052cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80052d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80052d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80052d6:	68a0      	ldr	r0, [r4, #8]
 80052d8:	6803      	ldr	r3, [r0, #0]
 80052da:	6a1b      	ldr	r3, [r3, #32]
 80052dc:	4798      	blx	r3
 80052de:	f241 035b 	movw	r3, #4187	; 0x105b
 80052e2:	4298      	cmp	r0, r3
 80052e4:	d805      	bhi.n	80052f2 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 80052e6:	4b42      	ldr	r3, [pc, #264]	; (80053f0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 80052e8:	4a42      	ldr	r2, [pc, #264]	; (80053f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 80052ea:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80052ec:	4842      	ldr	r0, [pc, #264]	; (80053f8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 80052ee:	f026 f937 	bl	802b560 <__assert_func>
 80052f2:	6860      	ldr	r0, [r4, #4]
 80052f4:	6803      	ldr	r3, [r0, #0]
 80052f6:	6a1b      	ldr	r3, [r3, #32]
 80052f8:	4798      	blx	r3
 80052fa:	280f      	cmp	r0, #15
 80052fc:	d803      	bhi.n	8005306 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 80052fe:	4b3f      	ldr	r3, [pc, #252]	; (80053fc <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8005300:	4a3c      	ldr	r2, [pc, #240]	; (80053f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005302:	21a4      	movs	r1, #164	; 0xa4
 8005304:	e7f2      	b.n	80052ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005306:	68e0      	ldr	r0, [r4, #12]
 8005308:	6803      	ldr	r3, [r0, #0]
 800530a:	6a1b      	ldr	r3, [r3, #32]
 800530c:	4798      	blx	r3
 800530e:	2837      	cmp	r0, #55	; 0x37
 8005310:	d803      	bhi.n	800531a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8005312:	4b3b      	ldr	r3, [pc, #236]	; (8005400 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8005314:	4a37      	ldr	r2, [pc, #220]	; (80053f4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8005316:	21a5      	movs	r1, #165	; 0xa5
 8005318:	e7e8      	b.n	80052ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800531a:	f011 fa59 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800531e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005404 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8005322:	3004      	adds	r0, #4
 8005324:	f011 faba 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005328:	f8d9 0000 	ldr.w	r0, [r9]
 800532c:	b110      	cbz	r0, 8005334 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800532e:	6803      	ldr	r3, [r0, #0]
 8005330:	68db      	ldr	r3, [r3, #12]
 8005332:	4798      	blx	r3
    if (*currentTrans)
 8005334:	f8d9 0000 	ldr.w	r0, [r9]
 8005338:	b110      	cbz	r0, 8005340 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800533a:	6803      	ldr	r3, [r0, #0]
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	4798      	blx	r3
    if (*currentScreen)
 8005340:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005408 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8005344:	f8d8 0000 	ldr.w	r0, [r8]
 8005348:	b110      	cbz	r0, 8005350 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800534a:	6803      	ldr	r3, [r0, #0]
 800534c:	695b      	ldr	r3, [r3, #20]
 800534e:	4798      	blx	r3
    if (*currentPresenter)
 8005350:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005354:	b110      	cbz	r0, 800535c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005356:	6803      	ldr	r3, [r0, #0]
 8005358:	685b      	ldr	r3, [r3, #4]
 800535a:	4798      	blx	r3
    if (*currentScreen)
 800535c:	f8d8 0000 	ldr.w	r0, [r8]
 8005360:	b110      	cbz	r0, 8005368 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005362:	6803      	ldr	r3, [r0, #0]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	4798      	blx	r3
    if (*currentPresenter)
 8005368:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800536c:	b110      	cbz	r0, 8005374 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800536e:	6803      	ldr	r3, [r0, #0]
 8005370:	689b      	ldr	r3, [r3, #8]
 8005372:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005374:	68e0      	ldr	r0, [r4, #12]
 8005376:	2100      	movs	r1, #0
 8005378:	f7ff fd96 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800537c:	2114      	movs	r1, #20
 800537e:	4605      	mov	r5, r0
 8005380:	f7ff fd96 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005384:	68a0      	ldr	r0, [r4, #8]
 8005386:	6803      	ldr	r3, [r0, #0]
 8005388:	2100      	movs	r1, #0
 800538a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800538c:	4798      	blx	r3
 800538e:	4606      	mov	r6, r0
 8005390:	f003 fd84 	bl	8008e9c <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005394:	6860      	ldr	r0, [r4, #4]
 8005396:	6803      	ldr	r3, [r0, #0]
 8005398:	2100      	movs	r1, #0
 800539a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800539c:	4798      	blx	r3
 800539e:	4631      	mov	r1, r6
 80053a0:	4604      	mov	r4, r0
 80053a2:	f003 fd55 	bl	8008e50 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80053a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80053aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80053ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80053b2:	b1dc      	cbz	r4, 80053ec <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 80053b4:	1d23      	adds	r3, r4, #4
 80053b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80053ba:	6833      	ldr	r3, [r6, #0]
 80053bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80053c0:	4630      	mov	r0, r6
 80053c2:	68db      	ldr	r3, [r3, #12]
 80053c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80053c6:	4798      	blx	r3
    newPresenter->activate();
 80053c8:	6823      	ldr	r3, [r4, #0]
 80053ca:	4620      	mov	r0, r4
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80053d0:	4629      	mov	r1, r5
 80053d2:	4630      	mov	r0, r6
 80053d4:	f013 f828 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80053d8:	682b      	ldr	r3, [r5, #0]
 80053da:	4628      	mov	r0, r5
 80053dc:	691b      	ldr	r3, [r3, #16]
 80053de:	4798      	blx	r3
    newTransition->invalidate();
 80053e0:	682b      	ldr	r3, [r5, #0]
 80053e2:	4628      	mov	r0, r5
 80053e4:	695b      	ldr	r3, [r3, #20]
}
 80053e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80053ea:	4718      	bx	r3
    model->bind(newPresenter);
 80053ec:	4623      	mov	r3, r4
 80053ee:	e7e2      	b.n	80053b6 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 80053f0:	0802d26c 	.word	0x0802d26c
 80053f4:	0802dd8f 	.word	0x0802dd8f
 80053f8:	0802d408 	.word	0x0802d408
 80053fc:	0802d44f 	.word	0x0802d44f
 8005400:	0802d4f2 	.word	0x0802d4f2
 8005404:	20013834 	.word	0x20013834
 8005408:	20013830 	.word	0x20013830

0800540c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800540c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005410:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005414:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005416:	68a0      	ldr	r0, [r4, #8]
 8005418:	6803      	ldr	r3, [r0, #0]
 800541a:	6a1b      	ldr	r3, [r3, #32]
 800541c:	4798      	blx	r3
 800541e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005422:	d205      	bcs.n	8005430 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8005424:	4b42      	ldr	r3, [pc, #264]	; (8005530 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8005426:	4a43      	ldr	r2, [pc, #268]	; (8005534 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005428:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800542a:	4843      	ldr	r0, [pc, #268]	; (8005538 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800542c:	f026 f898 	bl	802b560 <__assert_func>
 8005430:	6860      	ldr	r0, [r4, #4]
 8005432:	6803      	ldr	r3, [r0, #0]
 8005434:	6a1b      	ldr	r3, [r3, #32]
 8005436:	4798      	blx	r3
 8005438:	280f      	cmp	r0, #15
 800543a:	d803      	bhi.n	8005444 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800543c:	4b3f      	ldr	r3, [pc, #252]	; (800553c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800543e:	4a3d      	ldr	r2, [pc, #244]	; (8005534 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005440:	21a4      	movs	r1, #164	; 0xa4
 8005442:	e7f2      	b.n	800542a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005444:	68e0      	ldr	r0, [r4, #12]
 8005446:	6803      	ldr	r3, [r0, #0]
 8005448:	6a1b      	ldr	r3, [r3, #32]
 800544a:	4798      	blx	r3
 800544c:	2837      	cmp	r0, #55	; 0x37
 800544e:	d803      	bhi.n	8005458 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 8005450:	4b3b      	ldr	r3, [pc, #236]	; (8005540 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 8005452:	4a38      	ldr	r2, [pc, #224]	; (8005534 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8005454:	21a5      	movs	r1, #165	; 0xa5
 8005456:	e7e8      	b.n	800542a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005458:	f011 f9ba 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800545c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005544 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 8005460:	3004      	adds	r0, #4
 8005462:	f011 fa1b 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005466:	f8d9 0000 	ldr.w	r0, [r9]
 800546a:	b110      	cbz	r0, 8005472 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800546c:	6803      	ldr	r3, [r0, #0]
 800546e:	68db      	ldr	r3, [r3, #12]
 8005470:	4798      	blx	r3
    if (*currentTrans)
 8005472:	f8d9 0000 	ldr.w	r0, [r9]
 8005476:	b110      	cbz	r0, 800547e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005478:	6803      	ldr	r3, [r0, #0]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	4798      	blx	r3
    if (*currentScreen)
 800547e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005548 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 8005482:	f8d8 0000 	ldr.w	r0, [r8]
 8005486:	b110      	cbz	r0, 800548e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005488:	6803      	ldr	r3, [r0, #0]
 800548a:	695b      	ldr	r3, [r3, #20]
 800548c:	4798      	blx	r3
    if (*currentPresenter)
 800548e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005492:	b110      	cbz	r0, 800549a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005494:	6803      	ldr	r3, [r0, #0]
 8005496:	685b      	ldr	r3, [r3, #4]
 8005498:	4798      	blx	r3
    if (*currentScreen)
 800549a:	f8d8 0000 	ldr.w	r0, [r8]
 800549e:	b110      	cbz	r0, 80054a6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80054a0:	6803      	ldr	r3, [r0, #0]
 80054a2:	681b      	ldr	r3, [r3, #0]
 80054a4:	4798      	blx	r3
    if (*currentPresenter)
 80054a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80054aa:	b110      	cbz	r0, 80054b2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80054ac:	6803      	ldr	r3, [r0, #0]
 80054ae:	689b      	ldr	r3, [r3, #8]
 80054b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80054b2:	68e0      	ldr	r0, [r4, #12]
 80054b4:	2100      	movs	r1, #0
 80054b6:	f7ff fcf7 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80054ba:	2114      	movs	r1, #20
 80054bc:	4605      	mov	r5, r0
 80054be:	f7ff fcf7 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80054c2:	68a0      	ldr	r0, [r4, #8]
 80054c4:	6803      	ldr	r3, [r0, #0]
 80054c6:	2100      	movs	r1, #0
 80054c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054ca:	4798      	blx	r3
 80054cc:	4606      	mov	r6, r0
 80054ce:	f003 fc8b 	bl	8008de8 <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80054d2:	6860      	ldr	r0, [r4, #4]
 80054d4:	6803      	ldr	r3, [r0, #0]
 80054d6:	2100      	movs	r1, #0
 80054d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80054da:	4798      	blx	r3
 80054dc:	4631      	mov	r1, r6
 80054de:	4604      	mov	r4, r0
 80054e0:	f003 fc5c 	bl	8008d9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 80054e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80054e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80054ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80054f0:	b1dc      	cbz	r4, 800552a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 80054f2:	1d23      	adds	r3, r4, #4
 80054f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80054f8:	6833      	ldr	r3, [r6, #0]
 80054fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80054fe:	4630      	mov	r0, r6
 8005500:	68db      	ldr	r3, [r3, #12]
 8005502:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005504:	4798      	blx	r3
    newPresenter->activate();
 8005506:	6823      	ldr	r3, [r4, #0]
 8005508:	4620      	mov	r0, r4
 800550a:	681b      	ldr	r3, [r3, #0]
 800550c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800550e:	4629      	mov	r1, r5
 8005510:	4630      	mov	r0, r6
 8005512:	f012 ff89 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005516:	682b      	ldr	r3, [r5, #0]
 8005518:	4628      	mov	r0, r5
 800551a:	691b      	ldr	r3, [r3, #16]
 800551c:	4798      	blx	r3
    newTransition->invalidate();
 800551e:	682b      	ldr	r3, [r5, #0]
 8005520:	4628      	mov	r0, r5
 8005522:	695b      	ldr	r3, [r3, #20]
}
 8005524:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005528:	4718      	bx	r3
    model->bind(newPresenter);
 800552a:	4623      	mov	r3, r4
 800552c:	e7e2      	b.n	80054f4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 800552e:	bf00      	nop
 8005530:	0802d26c 	.word	0x0802d26c
 8005534:	0802decf 	.word	0x0802decf
 8005538:	0802d408 	.word	0x0802d408
 800553c:	0802d44f 	.word	0x0802d44f
 8005540:	0802d4f2 	.word	0x0802d4f2
 8005544:	20013834 	.word	0x20013834
 8005548:	20013830 	.word	0x20013830

0800554c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 800554c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005550:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005554:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005556:	68a0      	ldr	r0, [r4, #8]
 8005558:	6803      	ldr	r3, [r0, #0]
 800555a:	6a1b      	ldr	r3, [r3, #32]
 800555c:	4798      	blx	r3
 800555e:	f241 035b 	movw	r3, #4187	; 0x105b
 8005562:	4298      	cmp	r0, r3
 8005564:	d805      	bhi.n	8005572 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 8005566:	4b42      	ldr	r3, [pc, #264]	; (8005670 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 8005568:	4a42      	ldr	r2, [pc, #264]	; (8005674 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 800556a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800556c:	4842      	ldr	r0, [pc, #264]	; (8005678 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 800556e:	f025 fff7 	bl	802b560 <__assert_func>
 8005572:	6860      	ldr	r0, [r4, #4]
 8005574:	6803      	ldr	r3, [r0, #0]
 8005576:	6a1b      	ldr	r3, [r3, #32]
 8005578:	4798      	blx	r3
 800557a:	280f      	cmp	r0, #15
 800557c:	d803      	bhi.n	8005586 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 800557e:	4b3f      	ldr	r3, [pc, #252]	; (800567c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 8005580:	4a3c      	ldr	r2, [pc, #240]	; (8005674 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005582:	21a4      	movs	r1, #164	; 0xa4
 8005584:	e7f2      	b.n	800556c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005586:	68e0      	ldr	r0, [r4, #12]
 8005588:	6803      	ldr	r3, [r0, #0]
 800558a:	6a1b      	ldr	r3, [r3, #32]
 800558c:	4798      	blx	r3
 800558e:	2837      	cmp	r0, #55	; 0x37
 8005590:	d803      	bhi.n	800559a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 8005592:	4b3b      	ldr	r3, [pc, #236]	; (8005680 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 8005594:	4a37      	ldr	r2, [pc, #220]	; (8005674 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 8005596:	21a5      	movs	r1, #165	; 0xa5
 8005598:	e7e8      	b.n	800556c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800559a:	f011 f919 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800559e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005684 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80055a2:	3004      	adds	r0, #4
 80055a4:	f011 f97a 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80055a8:	f8d9 0000 	ldr.w	r0, [r9]
 80055ac:	b110      	cbz	r0, 80055b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80055ae:	6803      	ldr	r3, [r0, #0]
 80055b0:	68db      	ldr	r3, [r3, #12]
 80055b2:	4798      	blx	r3
    if (*currentTrans)
 80055b4:	f8d9 0000 	ldr.w	r0, [r9]
 80055b8:	b110      	cbz	r0, 80055c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80055ba:	6803      	ldr	r3, [r0, #0]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	4798      	blx	r3
    if (*currentScreen)
 80055c0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005688 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 80055c4:	f8d8 0000 	ldr.w	r0, [r8]
 80055c8:	b110      	cbz	r0, 80055d0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80055ca:	6803      	ldr	r3, [r0, #0]
 80055cc:	695b      	ldr	r3, [r3, #20]
 80055ce:	4798      	blx	r3
    if (*currentPresenter)
 80055d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055d4:	b110      	cbz	r0, 80055dc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80055d6:	6803      	ldr	r3, [r0, #0]
 80055d8:	685b      	ldr	r3, [r3, #4]
 80055da:	4798      	blx	r3
    if (*currentScreen)
 80055dc:	f8d8 0000 	ldr.w	r0, [r8]
 80055e0:	b110      	cbz	r0, 80055e8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80055e2:	6803      	ldr	r3, [r0, #0]
 80055e4:	681b      	ldr	r3, [r3, #0]
 80055e6:	4798      	blx	r3
    if (*currentPresenter)
 80055e8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80055ec:	b110      	cbz	r0, 80055f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80055ee:	6803      	ldr	r3, [r0, #0]
 80055f0:	689b      	ldr	r3, [r3, #8]
 80055f2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80055f4:	68e0      	ldr	r0, [r4, #12]
 80055f6:	2100      	movs	r1, #0
 80055f8:	f7ff fc56 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80055fc:	2114      	movs	r1, #20
 80055fe:	4605      	mov	r5, r0
 8005600:	f7ff fc56 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005604:	68a0      	ldr	r0, [r4, #8]
 8005606:	6803      	ldr	r3, [r0, #0]
 8005608:	2100      	movs	r1, #0
 800560a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800560c:	4798      	blx	r3
 800560e:	4606      	mov	r6, r0
 8005610:	f003 fdc8 	bl	80091a4 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005614:	6860      	ldr	r0, [r4, #4]
 8005616:	6803      	ldr	r3, [r0, #0]
 8005618:	2100      	movs	r1, #0
 800561a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800561c:	4798      	blx	r3
 800561e:	4631      	mov	r1, r6
 8005620:	4604      	mov	r4, r0
 8005622:	f003 fd99 	bl	8009158 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8005626:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800562a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800562e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005632:	b1dc      	cbz	r4, 800566c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8005634:	1d23      	adds	r3, r4, #4
 8005636:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800563a:	6833      	ldr	r3, [r6, #0]
 800563c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005640:	4630      	mov	r0, r6
 8005642:	68db      	ldr	r3, [r3, #12]
 8005644:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005646:	4798      	blx	r3
    newPresenter->activate();
 8005648:	6823      	ldr	r3, [r4, #0]
 800564a:	4620      	mov	r0, r4
 800564c:	681b      	ldr	r3, [r3, #0]
 800564e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005650:	4629      	mov	r1, r5
 8005652:	4630      	mov	r0, r6
 8005654:	f012 fee8 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005658:	682b      	ldr	r3, [r5, #0]
 800565a:	4628      	mov	r0, r5
 800565c:	691b      	ldr	r3, [r3, #16]
 800565e:	4798      	blx	r3
    newTransition->invalidate();
 8005660:	682b      	ldr	r3, [r5, #0]
 8005662:	4628      	mov	r0, r5
 8005664:	695b      	ldr	r3, [r3, #20]
}
 8005666:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800566a:	4718      	bx	r3
    model->bind(newPresenter);
 800566c:	4623      	mov	r3, r4
 800566e:	e7e2      	b.n	8005636 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8005670:	0802d26c 	.word	0x0802d26c
 8005674:	0802dfff 	.word	0x0802dfff
 8005678:	0802d408 	.word	0x0802d408
 800567c:	0802d44f 	.word	0x0802d44f
 8005680:	0802d4f2 	.word	0x0802d4f2
 8005684:	20013834 	.word	0x20013834
 8005688:	20013830 	.word	0x20013830

0800568c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 800568c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005690:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005694:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005696:	68a0      	ldr	r0, [r4, #8]
 8005698:	6803      	ldr	r3, [r0, #0]
 800569a:	6a1b      	ldr	r3, [r3, #32]
 800569c:	4798      	blx	r3
 800569e:	f241 33f7 	movw	r3, #5111	; 0x13f7
 80056a2:	4298      	cmp	r0, r3
 80056a4:	d805      	bhi.n	80056b2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 80056a6:	4b42      	ldr	r3, [pc, #264]	; (80057b0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 80056a8:	4a42      	ldr	r2, [pc, #264]	; (80057b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80056aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80056ac:	4842      	ldr	r0, [pc, #264]	; (80057b8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 80056ae:	f025 ff57 	bl	802b560 <__assert_func>
 80056b2:	6860      	ldr	r0, [r4, #4]
 80056b4:	6803      	ldr	r3, [r0, #0]
 80056b6:	6a1b      	ldr	r3, [r3, #32]
 80056b8:	4798      	blx	r3
 80056ba:	280f      	cmp	r0, #15
 80056bc:	d803      	bhi.n	80056c6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 80056be:	4b3f      	ldr	r3, [pc, #252]	; (80057bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 80056c0:	4a3c      	ldr	r2, [pc, #240]	; (80057b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80056c2:	21a4      	movs	r1, #164	; 0xa4
 80056c4:	e7f2      	b.n	80056ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80056c6:	68e0      	ldr	r0, [r4, #12]
 80056c8:	6803      	ldr	r3, [r0, #0]
 80056ca:	6a1b      	ldr	r3, [r3, #32]
 80056cc:	4798      	blx	r3
 80056ce:	2837      	cmp	r0, #55	; 0x37
 80056d0:	d803      	bhi.n	80056da <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 80056d2:	4b3b      	ldr	r3, [pc, #236]	; (80057c0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 80056d4:	4a37      	ldr	r2, [pc, #220]	; (80057b4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 80056d6:	21a5      	movs	r1, #165	; 0xa5
 80056d8:	e7e8      	b.n	80056ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80056da:	f011 f879 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80056de:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80057c4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 80056e2:	3004      	adds	r0, #4
 80056e4:	f011 f8da 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80056e8:	f8d9 0000 	ldr.w	r0, [r9]
 80056ec:	b110      	cbz	r0, 80056f4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80056ee:	6803      	ldr	r3, [r0, #0]
 80056f0:	68db      	ldr	r3, [r3, #12]
 80056f2:	4798      	blx	r3
    if (*currentTrans)
 80056f4:	f8d9 0000 	ldr.w	r0, [r9]
 80056f8:	b110      	cbz	r0, 8005700 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80056fa:	6803      	ldr	r3, [r0, #0]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	4798      	blx	r3
    if (*currentScreen)
 8005700:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80057c8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8005704:	f8d8 0000 	ldr.w	r0, [r8]
 8005708:	b110      	cbz	r0, 8005710 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800570a:	6803      	ldr	r3, [r0, #0]
 800570c:	695b      	ldr	r3, [r3, #20]
 800570e:	4798      	blx	r3
    if (*currentPresenter)
 8005710:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005714:	b110      	cbz	r0, 800571c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8005716:	6803      	ldr	r3, [r0, #0]
 8005718:	685b      	ldr	r3, [r3, #4]
 800571a:	4798      	blx	r3
    if (*currentScreen)
 800571c:	f8d8 0000 	ldr.w	r0, [r8]
 8005720:	b110      	cbz	r0, 8005728 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005722:	6803      	ldr	r3, [r0, #0]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	4798      	blx	r3
    if (*currentPresenter)
 8005728:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800572c:	b110      	cbz	r0, 8005734 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800572e:	6803      	ldr	r3, [r0, #0]
 8005730:	689b      	ldr	r3, [r3, #8]
 8005732:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005734:	68e0      	ldr	r0, [r4, #12]
 8005736:	2100      	movs	r1, #0
 8005738:	f7ff fbb6 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800573c:	2114      	movs	r1, #20
 800573e:	4605      	mov	r5, r0
 8005740:	f7ff fbb6 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005744:	68a0      	ldr	r0, [r4, #8]
 8005746:	6803      	ldr	r3, [r0, #0]
 8005748:	2100      	movs	r1, #0
 800574a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800574c:	4798      	blx	r3
 800574e:	4606      	mov	r6, r0
 8005750:	f003 fc88 	bl	8009064 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005754:	6860      	ldr	r0, [r4, #4]
 8005756:	6803      	ldr	r3, [r0, #0]
 8005758:	2100      	movs	r1, #0
 800575a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800575c:	4798      	blx	r3
 800575e:	4631      	mov	r1, r6
 8005760:	4604      	mov	r4, r0
 8005762:	f003 fc59 	bl	8009018 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8005766:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800576a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800576e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005772:	b1dc      	cbz	r4, 80057ac <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8005774:	1d23      	adds	r3, r4, #4
 8005776:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800577a:	6833      	ldr	r3, [r6, #0]
 800577c:	f8c4 a008 	str.w	sl, [r4, #8]
 8005780:	4630      	mov	r0, r6
 8005782:	68db      	ldr	r3, [r3, #12]
 8005784:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005786:	4798      	blx	r3
    newPresenter->activate();
 8005788:	6823      	ldr	r3, [r4, #0]
 800578a:	4620      	mov	r0, r4
 800578c:	681b      	ldr	r3, [r3, #0]
 800578e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005790:	4629      	mov	r1, r5
 8005792:	4630      	mov	r0, r6
 8005794:	f012 fe48 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005798:	682b      	ldr	r3, [r5, #0]
 800579a:	4628      	mov	r0, r5
 800579c:	691b      	ldr	r3, [r3, #16]
 800579e:	4798      	blx	r3
    newTransition->invalidate();
 80057a0:	682b      	ldr	r3, [r5, #0]
 80057a2:	4628      	mov	r0, r5
 80057a4:	695b      	ldr	r3, [r3, #20]
}
 80057a6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80057aa:	4718      	bx	r3
    model->bind(newPresenter);
 80057ac:	4623      	mov	r3, r4
 80057ae:	e7e2      	b.n	8005776 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 80057b0:	0802d26c 	.word	0x0802d26c
 80057b4:	0802e141 	.word	0x0802e141
 80057b8:	0802d408 	.word	0x0802d408
 80057bc:	0802d44f 	.word	0x0802d44f
 80057c0:	0802d4f2 	.word	0x0802d4f2
 80057c4:	20013834 	.word	0x20013834
 80057c8:	20013830 	.word	0x20013830

080057cc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 80057cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80057d0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80057d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80057d6:	68a0      	ldr	r0, [r4, #8]
 80057d8:	6803      	ldr	r3, [r0, #0]
 80057da:	6a1b      	ldr	r3, [r3, #32]
 80057dc:	4798      	blx	r3
 80057de:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80057e2:	d205      	bcs.n	80057f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 80057e4:	4b42      	ldr	r3, [pc, #264]	; (80058f0 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 80057e6:	4a43      	ldr	r2, [pc, #268]	; (80058f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 80057e8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80057ea:	4843      	ldr	r0, [pc, #268]	; (80058f8 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 80057ec:	f025 feb8 	bl	802b560 <__assert_func>
 80057f0:	6860      	ldr	r0, [r4, #4]
 80057f2:	6803      	ldr	r3, [r0, #0]
 80057f4:	6a1b      	ldr	r3, [r3, #32]
 80057f6:	4798      	blx	r3
 80057f8:	280f      	cmp	r0, #15
 80057fa:	d803      	bhi.n	8005804 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 80057fc:	4b3f      	ldr	r3, [pc, #252]	; (80058fc <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 80057fe:	4a3d      	ldr	r2, [pc, #244]	; (80058f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005800:	21a4      	movs	r1, #164	; 0xa4
 8005802:	e7f2      	b.n	80057ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005804:	68e0      	ldr	r0, [r4, #12]
 8005806:	6803      	ldr	r3, [r0, #0]
 8005808:	6a1b      	ldr	r3, [r3, #32]
 800580a:	4798      	blx	r3
 800580c:	2837      	cmp	r0, #55	; 0x37
 800580e:	d803      	bhi.n	8005818 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8005810:	4b3b      	ldr	r3, [pc, #236]	; (8005900 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8005812:	4a38      	ldr	r2, [pc, #224]	; (80058f4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8005814:	21a5      	movs	r1, #165	; 0xa5
 8005816:	e7e8      	b.n	80057ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005818:	f010 ffda 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800581c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005904 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8005820:	3004      	adds	r0, #4
 8005822:	f011 f83b 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005826:	f8d9 0000 	ldr.w	r0, [r9]
 800582a:	b110      	cbz	r0, 8005832 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800582c:	6803      	ldr	r3, [r0, #0]
 800582e:	68db      	ldr	r3, [r3, #12]
 8005830:	4798      	blx	r3
    if (*currentTrans)
 8005832:	f8d9 0000 	ldr.w	r0, [r9]
 8005836:	b110      	cbz	r0, 800583e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005838:	6803      	ldr	r3, [r0, #0]
 800583a:	681b      	ldr	r3, [r3, #0]
 800583c:	4798      	blx	r3
    if (*currentScreen)
 800583e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005908 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8005842:	f8d8 0000 	ldr.w	r0, [r8]
 8005846:	b110      	cbz	r0, 800584e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005848:	6803      	ldr	r3, [r0, #0]
 800584a:	695b      	ldr	r3, [r3, #20]
 800584c:	4798      	blx	r3
    if (*currentPresenter)
 800584e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005852:	b110      	cbz	r0, 800585a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005854:	6803      	ldr	r3, [r0, #0]
 8005856:	685b      	ldr	r3, [r3, #4]
 8005858:	4798      	blx	r3
    if (*currentScreen)
 800585a:	f8d8 0000 	ldr.w	r0, [r8]
 800585e:	b110      	cbz	r0, 8005866 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005860:	6803      	ldr	r3, [r0, #0]
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	4798      	blx	r3
    if (*currentPresenter)
 8005866:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800586a:	b110      	cbz	r0, 8005872 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800586c:	6803      	ldr	r3, [r0, #0]
 800586e:	689b      	ldr	r3, [r3, #8]
 8005870:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005872:	68e0      	ldr	r0, [r4, #12]
 8005874:	2100      	movs	r1, #0
 8005876:	f7ff fb17 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800587a:	2114      	movs	r1, #20
 800587c:	4605      	mov	r5, r0
 800587e:	f7ff fb17 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005882:	68a0      	ldr	r0, [r4, #8]
 8005884:	6803      	ldr	r3, [r0, #0]
 8005886:	2100      	movs	r1, #0
 8005888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800588a:	4798      	blx	r3
 800588c:	4606      	mov	r6, r0
 800588e:	f003 fb8f 	bl	8008fb0 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005892:	6860      	ldr	r0, [r4, #4]
 8005894:	6803      	ldr	r3, [r0, #0]
 8005896:	2100      	movs	r1, #0
 8005898:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800589a:	4798      	blx	r3
 800589c:	4631      	mov	r1, r6
 800589e:	4604      	mov	r4, r0
 80058a0:	f003 fb60 	bl	8008f64 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 80058a4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80058a8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80058ac:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80058b0:	b1dc      	cbz	r4, 80058ea <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 80058b2:	1d23      	adds	r3, r4, #4
 80058b4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80058b8:	6833      	ldr	r3, [r6, #0]
 80058ba:	f8c4 a008 	str.w	sl, [r4, #8]
 80058be:	4630      	mov	r0, r6
 80058c0:	68db      	ldr	r3, [r3, #12]
 80058c2:	63f4      	str	r4, [r6, #60]	; 0x3c
 80058c4:	4798      	blx	r3
    newPresenter->activate();
 80058c6:	6823      	ldr	r3, [r4, #0]
 80058c8:	4620      	mov	r0, r4
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80058ce:	4629      	mov	r1, r5
 80058d0:	4630      	mov	r0, r6
 80058d2:	f012 fda9 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80058d6:	682b      	ldr	r3, [r5, #0]
 80058d8:	4628      	mov	r0, r5
 80058da:	691b      	ldr	r3, [r3, #16]
 80058dc:	4798      	blx	r3
    newTransition->invalidate();
 80058de:	682b      	ldr	r3, [r5, #0]
 80058e0:	4628      	mov	r0, r5
 80058e2:	695b      	ldr	r3, [r3, #20]
}
 80058e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80058e8:	4718      	bx	r3
    model->bind(newPresenter);
 80058ea:	4623      	mov	r3, r4
 80058ec:	e7e2      	b.n	80058b4 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 80058ee:	bf00      	nop
 80058f0:	0802d26c 	.word	0x0802d26c
 80058f4:	0802e283 	.word	0x0802e283
 80058f8:	0802d408 	.word	0x0802d408
 80058fc:	0802d44f 	.word	0x0802d44f
 8005900:	0802d4f2 	.word	0x0802d4f2
 8005904:	20013834 	.word	0x20013834
 8005908:	20013830 	.word	0x20013830

0800590c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 800590c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005910:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8005914:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8005916:	68a0      	ldr	r0, [r4, #8]
 8005918:	6803      	ldr	r3, [r0, #0]
 800591a:	6a1b      	ldr	r3, [r3, #32]
 800591c:	4798      	blx	r3
 800591e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8005922:	d205      	bcs.n	8005930 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8005924:	4b42      	ldr	r3, [pc, #264]	; (8005a30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8005926:	4a43      	ldr	r2, [pc, #268]	; (8005a34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005928:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800592a:	4843      	ldr	r0, [pc, #268]	; (8005a38 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 800592c:	f025 fe18 	bl	802b560 <__assert_func>
 8005930:	6860      	ldr	r0, [r4, #4]
 8005932:	6803      	ldr	r3, [r0, #0]
 8005934:	6a1b      	ldr	r3, [r3, #32]
 8005936:	4798      	blx	r3
 8005938:	280f      	cmp	r0, #15
 800593a:	d803      	bhi.n	8005944 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 800593c:	4b3f      	ldr	r3, [pc, #252]	; (8005a3c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 800593e:	4a3d      	ldr	r2, [pc, #244]	; (8005a34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005940:	21a4      	movs	r1, #164	; 0xa4
 8005942:	e7f2      	b.n	800592a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8005944:	68e0      	ldr	r0, [r4, #12]
 8005946:	6803      	ldr	r3, [r0, #0]
 8005948:	6a1b      	ldr	r3, [r3, #32]
 800594a:	4798      	blx	r3
 800594c:	2837      	cmp	r0, #55	; 0x37
 800594e:	d803      	bhi.n	8005958 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8005950:	4b3b      	ldr	r3, [pc, #236]	; (8005a40 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8005952:	4a38      	ldr	r2, [pc, #224]	; (8005a34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8005954:	21a5      	movs	r1, #165	; 0xa5
 8005956:	e7e8      	b.n	800592a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005958:	f010 ff3a 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800595c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8005a44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8005960:	3004      	adds	r0, #4
 8005962:	f010 ff9b 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005966:	f8d9 0000 	ldr.w	r0, [r9]
 800596a:	b110      	cbz	r0, 8005972 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 800596c:	6803      	ldr	r3, [r0, #0]
 800596e:	68db      	ldr	r3, [r3, #12]
 8005970:	4798      	blx	r3
    if (*currentTrans)
 8005972:	f8d9 0000 	ldr.w	r0, [r9]
 8005976:	b110      	cbz	r0, 800597e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005978:	6803      	ldr	r3, [r0, #0]
 800597a:	681b      	ldr	r3, [r3, #0]
 800597c:	4798      	blx	r3
    if (*currentScreen)
 800597e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005a48 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8005982:	f8d8 0000 	ldr.w	r0, [r8]
 8005986:	b110      	cbz	r0, 800598e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005988:	6803      	ldr	r3, [r0, #0]
 800598a:	695b      	ldr	r3, [r3, #20]
 800598c:	4798      	blx	r3
    if (*currentPresenter)
 800598e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005992:	b110      	cbz	r0, 800599a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8005994:	6803      	ldr	r3, [r0, #0]
 8005996:	685b      	ldr	r3, [r3, #4]
 8005998:	4798      	blx	r3
    if (*currentScreen)
 800599a:	f8d8 0000 	ldr.w	r0, [r8]
 800599e:	b110      	cbz	r0, 80059a6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80059a0:	6803      	ldr	r3, [r0, #0]
 80059a2:	681b      	ldr	r3, [r3, #0]
 80059a4:	4798      	blx	r3
    if (*currentPresenter)
 80059a6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80059aa:	b110      	cbz	r0, 80059b2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80059ac:	6803      	ldr	r3, [r0, #0]
 80059ae:	689b      	ldr	r3, [r3, #8]
 80059b0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80059b2:	68e0      	ldr	r0, [r4, #12]
 80059b4:	2100      	movs	r1, #0
 80059b6:	f7ff fa77 	bl	8004ea8 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80059ba:	2114      	movs	r1, #20
 80059bc:	4605      	mov	r5, r0
 80059be:	f7ff fa77 	bl	8004eb0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80059c2:	68a0      	ldr	r0, [r4, #8]
 80059c4:	6803      	ldr	r3, [r0, #0]
 80059c6:	2100      	movs	r1, #0
 80059c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059ca:	4798      	blx	r3
 80059cc:	4606      	mov	r6, r0
 80059ce:	f003 f9ab 	bl	8008d28 <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80059d2:	6860      	ldr	r0, [r4, #4]
 80059d4:	6803      	ldr	r3, [r0, #0]
 80059d6:	2100      	movs	r1, #0
 80059d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80059da:	4798      	blx	r3
 80059dc:	4631      	mov	r1, r6
 80059de:	4604      	mov	r4, r0
 80059e0:	f003 f97c 	bl	8008cdc <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 80059e4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80059e8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80059ec:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80059f0:	b1dc      	cbz	r4, 8005a2a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 80059f2:	1d23      	adds	r3, r4, #4
 80059f4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80059f8:	6833      	ldr	r3, [r6, #0]
 80059fa:	f8c4 a008 	str.w	sl, [r4, #8]
 80059fe:	4630      	mov	r0, r6
 8005a00:	68db      	ldr	r3, [r3, #12]
 8005a02:	63f4      	str	r4, [r6, #60]	; 0x3c
 8005a04:	4798      	blx	r3
    newPresenter->activate();
 8005a06:	6823      	ldr	r3, [r4, #0]
 8005a08:	4620      	mov	r0, r4
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005a0e:	4629      	mov	r1, r5
 8005a10:	4630      	mov	r0, r6
 8005a12:	f012 fd09 	bl	8018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005a16:	682b      	ldr	r3, [r5, #0]
 8005a18:	4628      	mov	r0, r5
 8005a1a:	691b      	ldr	r3, [r3, #16]
 8005a1c:	4798      	blx	r3
    newTransition->invalidate();
 8005a1e:	682b      	ldr	r3, [r5, #0]
 8005a20:	4628      	mov	r0, r5
 8005a22:	695b      	ldr	r3, [r3, #20]
}
 8005a24:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005a28:	4718      	bx	r3
    model->bind(newPresenter);
 8005a2a:	4623      	mov	r3, r4
 8005a2c:	e7e2      	b.n	80059f4 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8005a2e:	bf00      	nop
 8005a30:	0802d26c 	.word	0x0802d26c
 8005a34:	0802e3af 	.word	0x0802e3af
 8005a38:	0802d408 	.word	0x0802d408
 8005a3c:	0802d44f 	.word	0x0802d44f
 8005a40:	0802d4f2 	.word	0x0802d4f2
 8005a44:	20013834 	.word	0x20013834
 8005a48:	20013830 	.word	0x20013830

08005a4c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8005a4c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8005a4e:	4770      	bx	lr

08005a50 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005a50:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005a52:	4770      	bx	lr

08005a54 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005a54:	4770      	bx	lr

08005a56 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005a56:	888b      	ldrh	r3, [r1, #4]
 8005a58:	69c0      	ldr	r0, [r0, #28]
 8005a5a:	680a      	ldr	r2, [r1, #0]
 8005a5c:	0adb      	lsrs	r3, r3, #11
 8005a5e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005a62:	4410      	add	r0, r2
 8005a64:	4770      	bx	lr

08005a66 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005a66:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005a68:	b1c2      	cbz	r2, 8005a9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8005a6a:	7b13      	ldrb	r3, [r2, #12]
 8005a6c:	b1b3      	cbz	r3, 8005a9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8005a6e:	7b54      	ldrb	r4, [r2, #13]
 8005a70:	7ad2      	ldrb	r2, [r2, #11]
 8005a72:	0224      	lsls	r4, r4, #8
 8005a74:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005a78:	4314      	orrs	r4, r2
 8005a7a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005a7c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005a7e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005a82:	8813      	ldrh	r3, [r2, #0]
 8005a84:	428b      	cmp	r3, r1
 8005a86:	d102      	bne.n	8005a8e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005a88:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8005a8c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8005a8e:	d805      	bhi.n	8005a9c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005a90:	3801      	subs	r0, #1
 8005a92:	b280      	uxth	r0, r0
 8005a94:	3204      	adds	r2, #4
 8005a96:	2800      	cmp	r0, #0
 8005a98:	d1f3      	bne.n	8005a82 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8005a9a:	e7f7      	b.n	8005a8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005a9c:	2000      	movs	r0, #0
 8005a9e:	e7f5      	b.n	8005a8c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005aa0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005aa0:	b510      	push	{r4, lr}
 8005aa2:	212c      	movs	r1, #44	; 0x2c
 8005aa4:	4604      	mov	r4, r0
 8005aa6:	f024 ff48 	bl	802a93a <_ZdlPvj>
 8005aaa:	4620      	mov	r0, r4
 8005aac:	bd10      	pop	{r4, pc}
	...

08005ab0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005ab0:	b530      	push	{r4, r5, lr}
 8005ab2:	b08b      	sub	sp, #44	; 0x2c
 8005ab4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005ab6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8005aba:	9508      	str	r5, [sp, #32]
 8005abc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005ac0:	9507      	str	r5, [sp, #28]
 8005ac2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005ac6:	9506      	str	r5, [sp, #24]
 8005ac8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005acc:	9505      	str	r5, [sp, #20]
 8005ace:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005ad2:	9504      	str	r5, [sp, #16]
 8005ad4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005ad8:	9503      	str	r5, [sp, #12]
 8005ada:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005ade:	9502      	str	r5, [sp, #8]
 8005ae0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005ae4:	9501      	str	r5, [sp, #4]
 8005ae6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8005aea:	9500      	str	r5, [sp, #0]
 8005aec:	f012 f806 	bl	8017afc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005af0:	4b06      	ldr	r3, [pc, #24]	; (8005b0c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005af2:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005af4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005af6:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 8005af8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8005afa:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005afc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005afe:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005b00:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005b02:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005b04:	4620      	mov	r0, r4
 8005b06:	b00b      	add	sp, #44	; 0x2c
 8005b08:	bd30      	pop	{r4, r5, pc}
 8005b0a:	bf00      	nop
 8005b0c:	0802e618 	.word	0x0802e618

08005b10 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005b10:	4770      	bx	lr

08005b12 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b12:	4770      	bx	lr

08005b14 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005b14:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b16:	68c2      	ldr	r2, [r0, #12]
 8005b18:	6844      	ldr	r4, [r0, #4]
 8005b1a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005b1c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005b1e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005b22:	07d2      	lsls	r2, r2, #31
 8005b24:	bf48      	it	mi
 8005b26:	5962      	ldrmi	r2, [r4, r5]
 8005b28:	689b      	ldr	r3, [r3, #8]
    }
 8005b2a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005b2c:	bf48      	it	mi
 8005b2e:	58d3      	ldrmi	r3, [r2, r3]
 8005b30:	4718      	bx	r3

08005b32 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005b32:	6843      	ldr	r3, [r0, #4]
 8005b34:	b12b      	cbz	r3, 8005b42 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005b36:	6883      	ldr	r3, [r0, #8]
 8005b38:	b92b      	cbnz	r3, 8005b46 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005b3a:	68c0      	ldr	r0, [r0, #12]
 8005b3c:	f000 0001 	and.w	r0, r0, #1
 8005b40:	4770      	bx	lr
 8005b42:	4618      	mov	r0, r3
 8005b44:	4770      	bx	lr
 8005b46:	2001      	movs	r0, #1
    }
 8005b48:	4770      	bx	lr

08005b4a <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005b4a:	b510      	push	{r4, lr}
 8005b4c:	2110      	movs	r1, #16
 8005b4e:	4604      	mov	r4, r0
 8005b50:	f024 fef3 	bl	802a93a <_ZdlPvj>
 8005b54:	4620      	mov	r0, r4
 8005b56:	bd10      	pop	{r4, pc}

08005b58 <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005b58:	b510      	push	{r4, lr}
 8005b5a:	4b03      	ldr	r3, [pc, #12]	; (8005b68 <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 8005b5c:	6003      	str	r3, [r0, #0]
 8005b5e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b60:	f00f f934 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b64:	4620      	mov	r0, r4
 8005b66:	bd10      	pop	{r4, pc}
 8005b68:	0802e690 	.word	0x0802e690

08005b6c <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 8005b6c:	b507      	push	{r0, r1, r2, lr}
 8005b6e:	4b07      	ldr	r3, [pc, #28]	; (8005b8c <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 8005b70:	6003      	str	r3, [r0, #0]
 8005b72:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005b74:	f00f f92a 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005b78:	9801      	ldr	r0, [sp, #4]
 8005b7a:	f241 117c 	movw	r1, #4476	; 0x117c
 8005b7e:	f024 fedc 	bl	802a93a <_ZdlPvj>
 8005b82:	9801      	ldr	r0, [sp, #4]
 8005b84:	b003      	add	sp, #12
 8005b86:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b8a:	bf00      	nop
 8005b8c:	0802e690 	.word	0x0802e690

08005b90 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005b90:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 8005b92:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 8005b96:	4299      	cmp	r1, r3
{
 8005b98:	4604      	mov	r4, r0
 8005b9a:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 8005b9c:	d103      	bne.n	8005ba6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005b9e:	f010 fe17 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 8005ba2:	f7fe feaf 	bl	8004904 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 8005ba6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005baa:	429d      	cmp	r5, r3
 8005bac:	d103      	bne.n	8005bb6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005bae:	f010 fe0f 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 8005bb2:	f7fe ff37 	bl	8004a24 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 8005bb6:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005bba:	429d      	cmp	r5, r3
 8005bbc:	d103      	bne.n	8005bc6 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005bbe:	f010 fe07 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005bc2:	f7fe ff3f 	bl	8004a44 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 8005bc6:	f504 7446 	add.w	r4, r4, #792	; 0x318
 8005bca:	42a5      	cmp	r5, r4
 8005bcc:	d10a      	bne.n	8005be4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005bce:	4806      	ldr	r0, [pc, #24]	; (8005be8 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005bd0:	2200      	movs	r2, #0
 8005bd2:	2120      	movs	r1, #32
 8005bd4:	f004 fa42 	bl	800a05c <HAL_GPIO_WritePin>
 8005bd8:	f010 fdfa 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005be0:	f7fe bf40 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005be4:	bd38      	pop	{r3, r4, r5, pc}
 8005be6:	bf00      	nop
 8005be8:	40021000 	.word	0x40021000

08005bec <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bf0:	ed2d 8b06 	vpush	{d8-d10}
 8005bf4:	4604      	mov	r4, r0
 8005bf6:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 8005bf8:	46a3      	mov	fp, r4
        : presenter(0)
 8005bfa:	2500      	movs	r5, #0
 8005bfc:	f012 fa68 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8005c00:	4b6a      	ldr	r3, [pc, #424]	; (8005dac <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005c02:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005c04:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005c08:	2226      	movs	r2, #38	; 0x26
 8005c0a:	4629      	mov	r1, r5
 8005c0c:	4658      	mov	r0, fp
 8005c0e:	f025 feac 	bl	802b96a <memset>
 8005c12:	4658      	mov	r0, fp
 8005c14:	f7fc fec6 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8005c18:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005c1c:	26ff      	movs	r6, #255	; 0xff
 8005c1e:	4b64      	ldr	r3, [pc, #400]	; (8005db0 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005c20:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005c22:	2226      	movs	r2, #38	; 0x26
 8005c24:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005c28:	4629      	mov	r1, r5
 8005c2a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005c2e:	4650      	mov	r0, sl
        : color(col)
 8005c30:	66a5      	str	r5, [r4, #104]	; 0x68
 8005c32:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005c36:	f025 fe98 	bl	802b96a <memset>
 8005c3a:	4650      	mov	r0, sl
 8005c3c:	f7fc feb2 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8005c40:	4b5c      	ldr	r3, [pc, #368]	; (8005db4 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005c42:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005c44:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8005c48:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005c4c:	a90c      	add	r1, sp, #48	; 0x30
 8005c4e:	4650      	mov	r0, sl
 8005c50:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005c54:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005c58:	f00e f8bb 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005c5c:	4648      	mov	r0, r9
 8005c5e:	f7fc ff05 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8005c62:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005c66:	4b54      	ldr	r3, [pc, #336]	; (8005db8 <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 8005c68:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005c6c:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005c70:	4638      	mov	r0, r7
 8005c72:	f00c fda1 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8005c76:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005c7a:	4618      	mov	r0, r3
 8005c7c:	9303      	str	r3, [sp, #12]
 8005c7e:	f7fc fc95 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005c82:	4b4e      	ldr	r3, [pc, #312]	; (8005dbc <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 8005c84:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005c88:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005c8c:	3324      	adds	r3, #36	; 0x24
 8005c8e:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005c92:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005c96:	4640      	mov	r0, r8
 8005c98:	f7fc fee8 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8005c9c:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005ca0:	4618      	mov	r0, r3
 8005ca2:	ee08 3a10 	vmov	s16, r3
 8005ca6:	f7fc fee1 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8005caa:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005cae:	4618      	mov	r0, r3
 8005cb0:	ee08 3a90 	vmov	s17, r3
 8005cb4:	f7fc feda 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8005cb8:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005cbc:	4618      	mov	r0, r3
 8005cbe:	ee09 3a10 	vmov	s18, r3
 8005cc2:	f00e f9bd 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cc6:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005cca:	4618      	mov	r0, r3
 8005ccc:	ee09 3a90 	vmov	s19, r3
 8005cd0:	f00e f9b6 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005cd4:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005cd8:	4618      	mov	r0, r3
 8005cda:	ee0a 3a10 	vmov	s20, r3
 8005cde:	f00e f9af 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005ce2:	f504 7346 	add.w	r3, r4, #792	; 0x318
 8005ce6:	4618      	mov	r0, r3
 8005ce8:	ee0a 3a90 	vmov	s21, r3
 8005cec:	f00e f84a 	bl	8013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005cf0:	4a33      	ldr	r2, [pc, #204]	; (8005dc0 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005cf2:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005cf6:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 8005cfa:	4a32      	ldr	r2, [pc, #200]	; (8005dc4 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005cfc:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005d00:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005d04:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 8005d08:	f00f f856 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005d0c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005d10:	462a      	mov	r2, r5
 8005d12:	4658      	mov	r0, fp
 8005d14:	9300      	str	r3, [sp, #0]
 8005d16:	4629      	mov	r1, r5
 8005d18:	23f0      	movs	r3, #240	; 0xf0
 8005d1a:	f7fc fe1e 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d1e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005d20:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005d24:	66a3      	str	r3, [r4, #104]	; 0x68
 8005d26:	4659      	mov	r1, fp
 8005d28:	4630      	mov	r0, r6
 8005d2a:	f00a fc79 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005d2e:	462a      	mov	r2, r5
 8005d30:	4650      	mov	r0, sl
 8005d32:	4629      	mov	r1, r5
 8005d34:	f7fc fe04 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8005d38:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005d3a:	4650      	mov	r0, sl
 8005d3c:	a90c      	add	r1, sp, #48	; 0x30
 8005d3e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005d42:	f00e f846 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005d46:	4651      	mov	r1, sl
 8005d48:	4630      	mov	r0, r6
 8005d4a:	f00a fc69 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 8005d4e:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005d52:	2156      	movs	r1, #86	; 0x56
 8005d54:	4648      	mov	r0, r9
 8005d56:	f7fc fdf3 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8005d5a:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005d5e:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005d62:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005d66:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005d6a:	4650      	mov	r0, sl
 8005d6c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005d70:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005d74:	4649      	mov	r1, r9
 8005d76:	4798      	blx	r3
 8005d78:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005d7c:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005d80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005d84:	4b10      	ldr	r3, [pc, #64]	; (8005dc8 <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 8005d86:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 8005d88:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 8005d8c:	b92b      	cbnz	r3, 8005d9a <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 8005d8e:	4b0f      	ldr	r3, [pc, #60]	; (8005dcc <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 8005d90:	4a0f      	ldr	r2, [pc, #60]	; (8005dd0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005d92:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d94:	480f      	ldr	r0, [pc, #60]	; (8005dd4 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 8005d96:	f025 fbe3 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005d9a:	4b0f      	ldr	r3, [pc, #60]	; (8005dd8 <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005d9c:	881b      	ldrh	r3, [r3, #0]
 8005d9e:	2b38      	cmp	r3, #56	; 0x38
 8005da0:	d81e      	bhi.n	8005de0 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 8005da2:	4b0e      	ldr	r3, [pc, #56]	; (8005ddc <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 8005da4:	4a0a      	ldr	r2, [pc, #40]	; (8005dd0 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 8005da6:	2161      	movs	r1, #97	; 0x61
 8005da8:	e7f4      	b.n	8005d94 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 8005daa:	bf00      	nop
 8005dac:	0802e690 	.word	0x0802e690
 8005db0:	0802f644 	.word	0x0802f644
 8005db4:	0802f890 	.word	0x0802f890
 8005db8:	0802d190 	.word	0x0802d190
 8005dbc:	0802f378 	.word	0x0802f378
 8005dc0:	0802e678 	.word	0x0802e678
 8005dc4:	08005b91 	.word	0x08005b91
 8005dc8:	20013844 	.word	0x20013844
 8005dcc:	0802cf40 	.word	0x0802cf40
 8005dd0:	0802d045 	.word	0x0802d045
 8005dd4:	0802cfbd 	.word	0x0802cfbd
 8005dd8:	20013848 	.word	0x20013848
 8005ddc:	0802d004 	.word	0x0802d004
        return texts->getText(typedTextId);
 8005de0:	4ba5      	ldr	r3, [pc, #660]	; (8006078 <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005de2:	2138      	movs	r1, #56	; 0x38
 8005de4:	6818      	ldr	r0, [r3, #0]
 8005de6:	f002 fdaf 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8005dea:	4aa4      	ldr	r2, [pc, #656]	; (800607c <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005dec:	4603      	mov	r3, r0
 8005dee:	2104      	movs	r1, #4
 8005df0:	4650      	mov	r0, sl
 8005df2:	f013 fe9b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 8005df6:	4648      	mov	r0, r9
        wc1 = value;
 8005df8:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005dfc:	f00d fa18 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005e00:	4b9f      	ldr	r3, [pc, #636]	; (8006080 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005e02:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005e04:	a90c      	add	r1, sp, #48	; 0x30
 8005e06:	2339      	movs	r3, #57	; 0x39
 8005e08:	4648      	mov	r0, r9
 8005e0a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005e0e:	f00d fa2f 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e12:	4649      	mov	r1, r9
 8005e14:	4630      	mov	r0, r6
 8005e16:	f00a fc03 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005e1a:	230a      	movs	r3, #10
 8005e1c:	9300      	str	r3, [sp, #0]
 8005e1e:	2232      	movs	r2, #50	; 0x32
 8005e20:	23f0      	movs	r3, #240	; 0xf0
 8005e22:	4629      	mov	r1, r5
 8005e24:	4638      	mov	r0, r7
 8005e26:	f7fc fd98 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8005e2a:	9b03      	ldr	r3, [sp, #12]
 8005e2c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e30:	22a0      	movs	r2, #160	; 0xa0
 8005e32:	4611      	mov	r1, r2
 8005e34:	4638      	mov	r0, r7
 8005e36:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005e3a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005e3e:	f00c fdd1 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005e42:	22a0      	movs	r2, #160	; 0xa0
 8005e44:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005e48:	4638      	mov	r0, r7
 8005e4a:	f00c fdd6 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005e4e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005e52:	2b20      	cmp	r3, #32
 8005e54:	d005      	beq.n	8005e62 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 8005e56:	2320      	movs	r3, #32
 8005e58:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005e5c:	4638      	mov	r0, r7
 8005e5e:	f00c fccb 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005e62:	4638      	mov	r0, r7
 8005e64:	2101      	movs	r1, #1
 8005e66:	f00c fdd3 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005e6a:	4639      	mov	r1, r7
 8005e6c:	4630      	mov	r0, r6
 8005e6e:	ad04      	add	r5, sp, #16
        color = newColor;
 8005e70:	f04f 37ff 	mov.w	r7, #4294967295
 8005e74:	f00a fbd4 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8005e78:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8005e7c:	2223      	movs	r2, #35	; 0x23
 8005e7e:	4640      	mov	r0, r8
 8005e80:	2145      	movs	r1, #69	; 0x45
 8005e82:	f7fc fd5d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005e86:	4641      	mov	r1, r8
 8005e88:	4628      	mov	r0, r5
        color = newColor;
 8005e8a:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8005e8e:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8005e92:	f00c ff53 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e96:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 8005e9a:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8005e9e:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005ea2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ea6:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 8006080 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 8005eaa:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005eae:	2353      	movs	r3, #83	; 0x53
 8005eb0:	4649      	mov	r1, r9
 8005eb2:	4640      	mov	r0, r8
 8005eb4:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005eb8:	f00d f9da 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ebc:	4641      	mov	r1, r8
 8005ebe:	4630      	mov	r0, r6
 8005ec0:	f00a fbae 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005ec4:	ee18 0a10 	vmov	r0, s16
 8005ec8:	220c      	movs	r2, #12
 8005eca:	2136      	movs	r1, #54	; 0x36
 8005ecc:	f7fc fd38 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8005ed0:	ee18 1a10 	vmov	r1, s16
 8005ed4:	4628      	mov	r0, r5
        color = newColor;
 8005ed6:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8005eda:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005ede:	f00c ff2d 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ee2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005ee6:	ee18 3a10 	vmov	r3, s16
 8005eea:	333c      	adds	r3, #60	; 0x3c
 8005eec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ef0:	2354      	movs	r3, #84	; 0x54
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005ef2:	ee18 0a10 	vmov	r0, s16
 8005ef6:	4649      	mov	r1, r9
 8005ef8:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005efc:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f00:	f00d f9b6 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f04:	ee18 1a10 	vmov	r1, s16
 8005f08:	4630      	mov	r0, r6
 8005f0a:	f00a fb89 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005f0e:	ee18 0a90 	vmov	r0, s17
 8005f12:	223c      	movs	r2, #60	; 0x3c
 8005f14:	2158      	movs	r1, #88	; 0x58
 8005f16:	f7fc fd13 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8005f1a:	ee18 1a90 	vmov	r1, s17
 8005f1e:	4628      	mov	r0, r5
        color = newColor;
 8005f20:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005f24:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005f28:	f00c ff08 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005f2c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005f30:	ee18 3a90 	vmov	r3, s17
 8005f34:	333c      	adds	r3, #60	; 0x3c
 8005f36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005f3a:	2328      	movs	r3, #40	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005f3c:	ee18 0a90 	vmov	r0, s17
 8005f40:	4649      	mov	r1, r9
 8005f42:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005f46:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005f4a:	f00d f991 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005f4e:	ee18 1a90 	vmov	r1, s17
 8005f52:	4630      	mov	r0, r6
 8005f54:	f00a fb64 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005f58:	ee19 0a10 	vmov	r0, s18
 8005f5c:	22f0      	movs	r2, #240	; 0xf0
 8005f5e:	2121      	movs	r1, #33	; 0x21
 8005f60:	f7fc fcee 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8005f64:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f68:	464a      	mov	r2, r9
 8005f6a:	f04f 0802 	mov.w	r8, #2
 8005f6e:	a90b      	add	r1, sp, #44	; 0x2c
 8005f70:	ee19 0a10 	vmov	r0, s18
 8005f74:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005f78:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 8005f7c:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005f80:	f00d fd31 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005f84:	2355      	movs	r3, #85	; 0x55
 8005f86:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005f8a:	350c      	adds	r5, #12
        updateTextPosition();
 8005f8c:	ee19 0a10 	vmov	r0, s18
 8005f90:	f7fc fd1a 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005f94:	ee19 1a10 	vmov	r1, s18
 8005f98:	4630      	mov	r0, r6
        colorPressed = col;
 8005f9a:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8005f9e:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8005fa2:	f00a fb3d 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005fa6:	ee19 0a90 	vmov	r0, s19
 8005faa:	22aa      	movs	r2, #170	; 0xaa
 8005fac:	2121      	movs	r1, #33	; 0x21
 8005fae:	f7fc fcc7 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005fb2:	464a      	mov	r2, r9
 8005fb4:	a90b      	add	r1, sp, #44	; 0x2c
 8005fb6:	ee19 0a90 	vmov	r0, s19
 8005fba:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005fbe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005fc2:	f00d fd10 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005fc6:	2356      	movs	r3, #86	; 0x56
 8005fc8:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005fcc:	ee19 0a90 	vmov	r0, s19
 8005fd0:	f7fc fcfa 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005fd4:	ee19 1a90 	vmov	r1, s19
 8005fd8:	4630      	mov	r0, r6
        colorPressed = col;
 8005fda:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005fde:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005fe2:	f00a fb1d 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005fe6:	ee1a 0a10 	vmov	r0, s20
 8005fea:	2264      	movs	r2, #100	; 0x64
 8005fec:	2121      	movs	r1, #33	; 0x21
 8005fee:	f7fc fca7 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005ff2:	464a      	mov	r2, r9
 8005ff4:	a90b      	add	r1, sp, #44	; 0x2c
 8005ff6:	ee1a 0a10 	vmov	r0, s20
 8005ffa:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005ffe:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8006002:	f00d fcf0 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006006:	2357      	movs	r3, #87	; 0x57
 8006008:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 800600c:	ee1a 0a10 	vmov	r0, s20
 8006010:	f7fc fcda 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006014:	ee1a 1a10 	vmov	r1, s20
 8006018:	4630      	mov	r0, r6
        colorPressed = col;
 800601a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 800601e:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006022:	f00a fafd 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 8006026:	ee1a 0a90 	vmov	r0, s21
 800602a:	2205      	movs	r2, #5
 800602c:	21c6      	movs	r1, #198	; 0xc6
 800602e:	f7fc fc87 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006032:	2301      	movs	r3, #1
 8006034:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006038:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800603a:	ee1a 0a90 	vmov	r0, s21
 800603e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006042:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8006046:	aa0a      	add	r2, sp, #40	; 0x28
 8006048:	ab0b      	add	r3, sp, #44	; 0x2c
 800604a:	a909      	add	r1, sp, #36	; 0x24
 800604c:	f8cd 9000 	str.w	r9, [sp]
 8006050:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 8006054:	f00d fe01 	bl	8013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8006058:	4630      	mov	r0, r6
 800605a:	ee1a 1a90 	vmov	r1, s21
 800605e:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 8006062:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 8006066:	f00a fadb 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800606a:	4620      	mov	r0, r4
 800606c:	b00f      	add	sp, #60	; 0x3c
 800606e:	ecbd 8b06 	vpop	{d8-d10}
 8006072:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006076:	bf00      	nop
 8006078:	20013850 	.word	0x20013850
 800607c:	0802d07d 	.word	0x0802d07d
 8006080:	0802d0f0 	.word	0x0802d0f0

08006084 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 8006084:	4770      	bx	lr

08006086 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006086:	4770      	bx	lr

08006088 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006088:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800608a:	68c2      	ldr	r2, [r0, #12]
 800608c:	6844      	ldr	r4, [r0, #4]
 800608e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006090:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006092:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006096:	07d2      	lsls	r2, r2, #31
 8006098:	bf48      	it	mi
 800609a:	5962      	ldrmi	r2, [r4, r5]
 800609c:	689b      	ldr	r3, [r3, #8]
    }
 800609e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80060a0:	bf48      	it	mi
 80060a2:	58d3      	ldrmi	r3, [r2, r3]
 80060a4:	4718      	bx	r3

080060a6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80060a6:	6843      	ldr	r3, [r0, #4]
 80060a8:	b12b      	cbz	r3, 80060b6 <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80060aa:	6883      	ldr	r3, [r0, #8]
 80060ac:	b92b      	cbnz	r3, 80060ba <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80060ae:	68c0      	ldr	r0, [r0, #12]
 80060b0:	f000 0001 	and.w	r0, r0, #1
 80060b4:	4770      	bx	lr
 80060b6:	4618      	mov	r0, r3
 80060b8:	4770      	bx	lr
 80060ba:	2001      	movs	r0, #1
    }
 80060bc:	4770      	bx	lr

080060be <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80060be:	b510      	push	{r4, lr}
 80060c0:	2110      	movs	r1, #16
 80060c2:	4604      	mov	r4, r0
 80060c4:	f024 fc39 	bl	802a93a <_ZdlPvj>
 80060c8:	4620      	mov	r0, r4
 80060ca:	bd10      	pop	{r4, pc}

080060cc <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80060cc:	b510      	push	{r4, lr}
 80060ce:	4b03      	ldr	r3, [pc, #12]	; (80060dc <_ZN19MeasurementViewBaseD1Ev+0x10>)
 80060d0:	6003      	str	r3, [r0, #0]
 80060d2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80060d4:	f00e fe7a 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80060d8:	4620      	mov	r0, r4
 80060da:	bd10      	pop	{r4, pc}
 80060dc:	0802e6dc 	.word	0x0802e6dc

080060e0 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 80060e0:	b507      	push	{r0, r1, r2, lr}
 80060e2:	4b07      	ldr	r3, [pc, #28]	; (8006100 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 80060e4:	6003      	str	r3, [r0, #0]
 80060e6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80060e8:	f00e fe70 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80060ec:	9801      	ldr	r0, [sp, #4]
 80060ee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80060f2:	f024 fc22 	bl	802a93a <_ZdlPvj>
 80060f6:	9801      	ldr	r0, [sp, #4]
 80060f8:	b003      	add	sp, #12
 80060fa:	f85d fb04 	ldr.w	pc, [sp], #4
 80060fe:	bf00      	nop
 8006100:	0802e6dc 	.word	0x0802e6dc

08006104 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006104:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8006106:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800610a:	4299      	cmp	r1, r3
{
 800610c:	4604      	mov	r4, r0
 800610e:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006110:	d103      	bne.n	800611a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006112:	f010 fb5d 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 8006116:	f7fe fbe5 	bl	80048e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800611a:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800611e:	429d      	cmp	r5, r3
 8006120:	d103      	bne.n	800612a <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006122:	f010 fb55 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006126:	f7fe fc0d 	bl	8004944 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800612a:	f504 7422 	add.w	r4, r4, #648	; 0x288
 800612e:	42a5      	cmp	r5, r4
 8006130:	d105      	bne.n	800613e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006132:	f010 fb4d 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 8006136:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800613a:	f7fe bc33 	b.w	80049a4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 800613e:	bd38      	pop	{r3, r4, r5, pc}

08006140 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8006140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006144:	ed2d 8b06 	vpush	{d8-d10}
 8006148:	4604      	mov	r4, r0
 800614a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 800614c:	46a3      	mov	fp, r4
 800614e:	2500      	movs	r5, #0
 8006150:	f011 ffbe 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8006154:	4b66      	ldr	r3, [pc, #408]	; (80062f0 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 8006156:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006158:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800615c:	2226      	movs	r2, #38	; 0x26
 800615e:	4629      	mov	r1, r5
 8006160:	4658      	mov	r0, fp
 8006162:	f025 fc02 	bl	802b96a <memset>
 8006166:	4658      	mov	r0, fp
 8006168:	f7fc fc1c 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 800616c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006170:	26ff      	movs	r6, #255	; 0xff
 8006172:	4b60      	ldr	r3, [pc, #384]	; (80062f4 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 8006174:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006176:	2226      	movs	r2, #38	; 0x26
 8006178:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800617c:	4629      	mov	r1, r5
 800617e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006182:	4650      	mov	r0, sl
 8006184:	66a5      	str	r5, [r4, #104]	; 0x68
 8006186:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800618a:	f025 fbee 	bl	802b96a <memset>
 800618e:	4650      	mov	r0, sl
 8006190:	f7fc fc08 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006194:	4b58      	ldr	r3, [pc, #352]	; (80062f8 <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 8006196:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006198:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800619c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80061a0:	a90a      	add	r1, sp, #40	; 0x28
 80061a2:	4650      	mov	r0, sl
 80061a4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80061a8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80061ac:	f00d fe11 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80061b0:	4648      	mov	r0, r9
 80061b2:	f7fc fc5b 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80061b6:	4b51      	ldr	r3, [pc, #324]	; (80062fc <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 80061b8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80061bc:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 80061c0:	4618      	mov	r0, r3
 80061c2:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80061c6:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 80061ca:	ee08 3a90 	vmov	s17, r3
 80061ce:	f7fc fc4d 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80061d2:	4638      	mov	r0, r7
 80061d4:	f00c faf0 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 80061d8:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80061dc:	4618      	mov	r0, r3
 80061de:	9303      	str	r3, [sp, #12]
 80061e0:	f7fc f9e4 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80061e4:	4b46      	ldr	r3, [pc, #280]	; (8006300 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 80061e6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80061ea:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80061ee:	3324      	adds	r3, #36	; 0x24
 80061f0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80061f4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80061f8:	4640      	mov	r0, r8
 80061fa:	f7fc fc37 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80061fe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006202:	4618      	mov	r0, r3
 8006204:	ee08 3a10 	vmov	s16, r3
 8006208:	f7fc fc30 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 800620c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006210:	4618      	mov	r0, r3
 8006212:	ee09 3a10 	vmov	s18, r3
 8006216:	f00d ff13 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800621a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800621e:	4618      	mov	r0, r3
 8006220:	ee09 3a90 	vmov	s19, r3
 8006224:	f00d ff0c 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006228:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800622c:	4618      	mov	r0, r3
 800622e:	ee0a 3a10 	vmov	s20, r3
 8006232:	f00d ff05 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006236:	4a33      	ldr	r2, [pc, #204]	; (8006304 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 8006238:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800623c:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006240:	4a31      	ldr	r2, [pc, #196]	; (8006308 <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006242:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006246:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800624a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800624e:	f00e fdb3 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006252:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006256:	462a      	mov	r2, r5
 8006258:	4658      	mov	r0, fp
 800625a:	9300      	str	r3, [sp, #0]
 800625c:	4629      	mov	r1, r5
 800625e:	23f0      	movs	r3, #240	; 0xf0
 8006260:	f7fc fb7b 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006264:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006266:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800626a:	66a3      	str	r3, [r4, #104]	; 0x68
 800626c:	4659      	mov	r1, fp
 800626e:	4630      	mov	r0, r6
 8006270:	f00a f9d6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006274:	462a      	mov	r2, r5
 8006276:	4650      	mov	r0, sl
 8006278:	4629      	mov	r1, r5
 800627a:	f7fc fb61 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800627e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006280:	4650      	mov	r0, sl
 8006282:	a90a      	add	r1, sp, #40	; 0x28
 8006284:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006288:	f00d fda3 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800628c:	4651      	mov	r1, sl
 800628e:	4630      	mov	r0, r6
 8006290:	f00a f9c6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006294:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006298:	2156      	movs	r1, #86	; 0x56
 800629a:	4648      	mov	r0, r9
 800629c:	f7fc fb50 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80062a0:	f04f 33ff 	mov.w	r3, #4294967295
 80062a4:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80062a8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80062ac:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80062b0:	f10d 0b10 	add.w	fp, sp, #16
 80062b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80062b8:	4649      	mov	r1, r9
 80062ba:	4658      	mov	r0, fp
 80062bc:	4798      	blx	r3
 80062be:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80062c2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80062c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062ca:	4b10      	ldr	r3, [pc, #64]	; (800630c <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 80062cc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 80062ce:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80062d2:	b92b      	cbnz	r3, 80062e0 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 80062d4:	4b0e      	ldr	r3, [pc, #56]	; (8006310 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 80062d6:	4a0f      	ldr	r2, [pc, #60]	; (8006314 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80062d8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062da:	480f      	ldr	r0, [pc, #60]	; (8006318 <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 80062dc:	f025 f940 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80062e0:	4b0e      	ldr	r3, [pc, #56]	; (800631c <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80062e2:	881b      	ldrh	r3, [r3, #0]
 80062e4:	2b29      	cmp	r3, #41	; 0x29
 80062e6:	d81d      	bhi.n	8006324 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 80062e8:	4b0d      	ldr	r3, [pc, #52]	; (8006320 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 80062ea:	4a0a      	ldr	r2, [pc, #40]	; (8006314 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 80062ec:	2161      	movs	r1, #97	; 0x61
 80062ee:	e7f4      	b.n	80062da <_ZN19MeasurementViewBaseC1Ev+0x19a>
 80062f0:	0802e6dc 	.word	0x0802e6dc
 80062f4:	0802f644 	.word	0x0802f644
 80062f8:	0802f890 	.word	0x0802f890
 80062fc:	0802d190 	.word	0x0802d190
 8006300:	0802f378 	.word	0x0802f378
 8006304:	0802e6c4 	.word	0x0802e6c4
 8006308:	08006105 	.word	0x08006105
 800630c:	20013844 	.word	0x20013844
 8006310:	0802cf40 	.word	0x0802cf40
 8006314:	0802d045 	.word	0x0802d045
 8006318:	0802cfbd 	.word	0x0802cfbd
 800631c:	20013848 	.word	0x20013848
 8006320:	0802d004 	.word	0x0802d004
        return texts->getText(typedTextId);
 8006324:	4b95      	ldr	r3, [pc, #596]	; (800657c <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8006326:	2129      	movs	r1, #41	; 0x29
 8006328:	6818      	ldr	r0, [r3, #0]
 800632a:	f002 fb0d 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 800632e:	4a94      	ldr	r2, [pc, #592]	; (8006580 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8006330:	4603      	mov	r3, r0
 8006332:	2104      	movs	r1, #4
 8006334:	4650      	mov	r0, sl
 8006336:	f013 fbf9 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 800633a:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 800633e:	4648      	mov	r0, r9
 8006340:	f00c ff76 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006344:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8006584 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8006348:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800634c:	232a      	movs	r3, #42	; 0x2a
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 800634e:	a90a      	add	r1, sp, #40	; 0x28
 8006350:	4648      	mov	r0, r9
 8006352:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006356:	f00c ff8b 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800635a:	4649      	mov	r1, r9
 800635c:	4630      	mov	r0, r6
 800635e:	f00a f95f 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8006362:	223c      	movs	r2, #60	; 0x3c
 8006364:	ee18 0a90 	vmov	r0, s17
 8006368:	213d      	movs	r1, #61	; 0x3d
 800636a:	f7fc fae9 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800636e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006372:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006376:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800637a:	4658      	mov	r0, fp
        linespace = space;
 800637c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006380:	f00c fcdc 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006384:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006388:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800638c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006390:	2337      	movs	r3, #55	; 0x37
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8006392:	ee18 0a90 	vmov	r0, s17
 8006396:	a90a      	add	r1, sp, #40	; 0x28
 8006398:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800639c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 80063a0:	f00c ff66 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80063a4:	ee18 1a90 	vmov	r1, s17
 80063a8:	4630      	mov	r0, r6
 80063aa:	f00a f939 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80063ae:	230a      	movs	r3, #10
 80063b0:	9300      	str	r3, [sp, #0]
 80063b2:	2232      	movs	r2, #50	; 0x32
 80063b4:	23f0      	movs	r3, #240	; 0xf0
 80063b6:	4629      	mov	r1, r5
 80063b8:	4638      	mov	r0, r7
 80063ba:	f7fc face 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 80063be:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063c2:	22a0      	movs	r2, #160	; 0xa0
 80063c4:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80063c8:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 80063cc:	9b03      	ldr	r3, [sp, #12]
 80063ce:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80063d2:	4611      	mov	r1, r2
 80063d4:	4638      	mov	r0, r7
 80063d6:	f00c fb05 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80063da:	22a0      	movs	r2, #160	; 0xa0
 80063dc:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80063e0:	4638      	mov	r0, r7
 80063e2:	f00c fb0a 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80063e6:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80063ea:	2b20      	cmp	r3, #32
 80063ec:	d005      	beq.n	80063fa <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80063ee:	2320      	movs	r3, #32
 80063f0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80063f4:	4638      	mov	r0, r7
 80063f6:	f00c f9ff 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80063fa:	4638      	mov	r0, r7
 80063fc:	2101      	movs	r1, #1
 80063fe:	f00c fb07 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006402:	4639      	mov	r1, r7
 8006404:	4630      	mov	r0, r6
 8006406:	f00a f90b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800640a:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 800640e:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006410:	2223      	movs	r2, #35	; 0x23
 8006412:	4640      	mov	r0, r8
        linespace = space;
 8006414:	f04f 0a00 	mov.w	sl, #0
 8006418:	2145      	movs	r1, #69	; 0x45
 800641a:	f7fc fa91 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800641e:	4641      	mov	r1, r8
 8006420:	4638      	mov	r0, r7
        color = newColor;
 8006422:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006426:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 800642a:	f00c fc87 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800642e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006432:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006436:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800643a:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006584 <_ZN19MeasurementViewBaseC1Ev+0x444>
 800643e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006442:	2351      	movs	r3, #81	; 0x51
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8006444:	a90a      	add	r1, sp, #40	; 0x28
 8006446:	4640      	mov	r0, r8
 8006448:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800644c:	f00c ff10 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006450:	4641      	mov	r1, r8
 8006452:	4630      	mov	r0, r6
 8006454:	f00a f8e4 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006458:	ee18 0a10 	vmov	r0, s16
 800645c:	220c      	movs	r2, #12
 800645e:	2136      	movs	r1, #54	; 0x36
 8006460:	f7fc fa6e 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006464:	ee18 1a10 	vmov	r1, s16
 8006468:	4638      	mov	r0, r7
        color = newColor;
 800646a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800646e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006472:	f00c fc63 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006476:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800647a:	ee18 3a10 	vmov	r3, s16
 800647e:	333c      	adds	r3, #60	; 0x3c
 8006480:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006484:	2352      	movs	r3, #82	; 0x52
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8006486:	ee18 0a10 	vmov	r0, s16
 800648a:	a90a      	add	r1, sp, #40	; 0x28
 800648c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006490:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006494:	f00c feec 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006498:	ee18 1a10 	vmov	r1, s16
 800649c:	4630      	mov	r0, r6
 800649e:	f00a f8bf 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80064a2:	ee19 0a10 	vmov	r0, s18
 80064a6:	22f0      	movs	r2, #240	; 0xf0
 80064a8:	2121      	movs	r1, #33	; 0x21
 80064aa:	f7fc fa49 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80064ae:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064b2:	aa0a      	add	r2, sp, #40	; 0x28
 80064b4:	f04f 0802 	mov.w	r8, #2
 80064b8:	a909      	add	r1, sp, #36	; 0x24
 80064ba:	ee19 0a10 	vmov	r0, s18
 80064be:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80064c2:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80064c6:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064ca:	f00d fa8c 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80064ce:	2350      	movs	r3, #80	; 0x50
 80064d0:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80064d4:	3710      	adds	r7, #16
        updateTextPosition();
 80064d6:	ee19 0a10 	vmov	r0, s18
 80064da:	f7fc fa75 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80064de:	ee19 1a10 	vmov	r1, s18
 80064e2:	4630      	mov	r0, r6
        colorPressed = col;
 80064e4:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80064e8:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80064ec:	f00a f898 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80064f0:	ee19 0a90 	vmov	r0, s19
 80064f4:	22aa      	movs	r2, #170	; 0xaa
 80064f6:	2121      	movs	r1, #33	; 0x21
 80064f8:	f7fc fa22 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80064fc:	aa0a      	add	r2, sp, #40	; 0x28
 80064fe:	a909      	add	r1, sp, #36	; 0x24
 8006500:	ee19 0a90 	vmov	r0, s19
 8006504:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006508:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800650c:	f00d fa6b 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006510:	234f      	movs	r3, #79	; 0x4f
 8006512:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006516:	ee19 0a90 	vmov	r0, s19
 800651a:	f7fc fa55 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800651e:	ee19 1a90 	vmov	r1, s19
 8006522:	4630      	mov	r0, r6
        colorPressed = col;
 8006524:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006528:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 800652c:	f00a f878 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006530:	ee1a 0a10 	vmov	r0, s20
 8006534:	2264      	movs	r2, #100	; 0x64
 8006536:	2121      	movs	r1, #33	; 0x21
 8006538:	f7fc fa02 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800653c:	aa0a      	add	r2, sp, #40	; 0x28
 800653e:	a909      	add	r1, sp, #36	; 0x24
 8006540:	ee1a 0a10 	vmov	r0, s20
 8006544:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006548:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800654c:	f00d fa4b 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006550:	234e      	movs	r3, #78	; 0x4e
        updateTextPosition();
 8006552:	ee1a 0a10 	vmov	r0, s20
 8006556:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800655a:	f7fc fa35 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800655e:	4630      	mov	r0, r6
        colorPressed = col;
 8006560:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006564:	ee1a 1a10 	vmov	r1, s20
 8006568:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800656c:	f00a f858 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006570:	4620      	mov	r0, r4
 8006572:	b00d      	add	sp, #52	; 0x34
 8006574:	ecbd 8b06 	vpop	{d8-d10}
 8006578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800657c:	20013850 	.word	0x20013850
 8006580:	0802d07d 	.word	0x0802d07d
 8006584:	0802d0f0 	.word	0x0802d0f0

08006588 <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8006588:	4770      	bx	lr

0800658a <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800658a:	4770      	bx	lr

0800658c <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800658c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800658e:	68c2      	ldr	r2, [r0, #12]
 8006590:	6844      	ldr	r4, [r0, #4]
 8006592:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006594:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006596:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800659a:	07d2      	lsls	r2, r2, #31
 800659c:	bf48      	it	mi
 800659e:	5962      	ldrmi	r2, [r4, r5]
 80065a0:	689b      	ldr	r3, [r3, #8]
    }
 80065a2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80065a4:	bf48      	it	mi
 80065a6:	58d3      	ldrmi	r3, [r2, r3]
 80065a8:	4718      	bx	r3

080065aa <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80065aa:	6843      	ldr	r3, [r0, #4]
 80065ac:	b12b      	cbz	r3, 80065ba <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80065ae:	6883      	ldr	r3, [r0, #8]
 80065b0:	b92b      	cbnz	r3, 80065be <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80065b2:	68c0      	ldr	r0, [r0, #12]
 80065b4:	f000 0001 	and.w	r0, r0, #1
 80065b8:	4770      	bx	lr
 80065ba:	4618      	mov	r0, r3
 80065bc:	4770      	bx	lr
 80065be:	2001      	movs	r0, #1
    }
 80065c0:	4770      	bx	lr

080065c2 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80065c2:	b510      	push	{r4, lr}
 80065c4:	2110      	movs	r1, #16
 80065c6:	4604      	mov	r4, r0
 80065c8:	f024 f9b7 	bl	802a93a <_ZdlPvj>
 80065cc:	4620      	mov	r0, r4
 80065ce:	bd10      	pop	{r4, pc}

080065d0 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80065d0:	b510      	push	{r4, lr}
 80065d2:	4b03      	ldr	r3, [pc, #12]	; (80065e0 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 80065d4:	6003      	str	r3, [r0, #0]
 80065d6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80065d8:	f00e fbf8 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80065dc:	4620      	mov	r0, r4
 80065de:	bd10      	pop	{r4, pc}
 80065e0:	0802e728 	.word	0x0802e728

080065e4 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 80065e4:	b507      	push	{r0, r1, r2, lr}
 80065e6:	4b07      	ldr	r3, [pc, #28]	; (8006604 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 80065e8:	6003      	str	r3, [r0, #0]
 80065ea:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80065ec:	f00e fbee 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80065f0:	9801      	ldr	r0, [sp, #4]
 80065f2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80065f6:	f024 f9a0 	bl	802a93a <_ZdlPvj>
 80065fa:	9801      	ldr	r0, [sp, #4]
 80065fc:	b003      	add	sp, #12
 80065fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8006602:	bf00      	nop
 8006604:	0802e728 	.word	0x0802e728

08006608 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006608:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800660a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800660e:	4299      	cmp	r1, r3
{
 8006610:	4604      	mov	r4, r0
 8006612:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006614:	d103      	bne.n	800661e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006616:	f010 f8db 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800661a:	f7fe f983 	bl	8004924 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 800661e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006622:	429d      	cmp	r5, r3
 8006624:	d103      	bne.n	800662e <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006626:	f010 f8d3 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 800662a:	f7fe f9eb 	bl	8004a04 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 800662e:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8006632:	42a5      	cmp	r5, r4
 8006634:	d105      	bne.n	8006642 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006636:	f010 f8cb 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 800663a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 800663e:	f7fe b9d1 	b.w	80049e4 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8006642:	bd38      	pop	{r3, r4, r5, pc}

08006644 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8006644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006648:	ed2d 8b06 	vpush	{d8-d10}
 800664c:	4604      	mov	r4, r0
 800664e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8006650:	46a3      	mov	fp, r4
 8006652:	2500      	movs	r5, #0
 8006654:	f011 fd3c 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8006658:	4b66      	ldr	r3, [pc, #408]	; (80067f4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 800665a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800665c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8006660:	2226      	movs	r2, #38	; 0x26
 8006662:	4629      	mov	r1, r5
 8006664:	4658      	mov	r0, fp
 8006666:	f025 f980 	bl	802b96a <memset>
 800666a:	4658      	mov	r0, fp
 800666c:	f7fc f99a 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006670:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8006674:	26ff      	movs	r6, #255	; 0xff
 8006676:	4b60      	ldr	r3, [pc, #384]	; (80067f8 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8006678:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800667a:	2226      	movs	r2, #38	; 0x26
 800667c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006680:	4629      	mov	r1, r5
 8006682:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006686:	4650      	mov	r0, sl
 8006688:	66a5      	str	r5, [r4, #104]	; 0x68
 800668a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800668e:	f025 f96c 	bl	802b96a <memset>
 8006692:	4650      	mov	r0, sl
 8006694:	f7fc f986 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006698:	4b58      	ldr	r3, [pc, #352]	; (80067fc <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 800669a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800669c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80066a0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80066a4:	a90a      	add	r1, sp, #40	; 0x28
 80066a6:	4650      	mov	r0, sl
 80066a8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80066ac:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80066b0:	f00d fb8f 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80066b4:	4648      	mov	r0, r9
 80066b6:	f7fc f9d9 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80066ba:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80066be:	4b50      	ldr	r3, [pc, #320]	; (8006800 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 80066c0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80066c4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80066c8:	4638      	mov	r0, r7
 80066ca:	f00c f875 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 80066ce:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80066d2:	4618      	mov	r0, r3
 80066d4:	9303      	str	r3, [sp, #12]
 80066d6:	f7fb ff69 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80066da:	4b4a      	ldr	r3, [pc, #296]	; (8006804 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 80066dc:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80066e0:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80066e4:	3324      	adds	r3, #36	; 0x24
 80066e6:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80066ea:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80066ee:	4640      	mov	r0, r8
 80066f0:	f7fc f9bc 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80066f4:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80066f8:	4618      	mov	r0, r3
 80066fa:	ee08 3a10 	vmov	s16, r3
 80066fe:	f7fc f9b5 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006702:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006706:	4618      	mov	r0, r3
 8006708:	ee08 3a90 	vmov	s17, r3
 800670c:	f7fc f9ae 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006710:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006714:	4618      	mov	r0, r3
 8006716:	ee09 3a10 	vmov	s18, r3
 800671a:	f00d fc91 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800671e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006722:	4618      	mov	r0, r3
 8006724:	ee09 3a90 	vmov	s19, r3
 8006728:	f00d fc8a 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800672c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006730:	4618      	mov	r0, r3
 8006732:	ee0a 3a10 	vmov	s20, r3
 8006736:	f00d fc83 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800673a:	4a33      	ldr	r2, [pc, #204]	; (8006808 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 800673c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006740:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006744:	4a31      	ldr	r2, [pc, #196]	; (800680c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006746:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800674a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800674e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006752:	f00e fb31 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006756:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800675a:	462a      	mov	r2, r5
 800675c:	4658      	mov	r0, fp
 800675e:	9300      	str	r3, [sp, #0]
 8006760:	4629      	mov	r1, r5
 8006762:	23f0      	movs	r3, #240	; 0xf0
 8006764:	f7fc f8f9 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006768:	1d26      	adds	r6, r4, #4
        color = newColor;
 800676a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800676e:	66a3      	str	r3, [r4, #104]	; 0x68
 8006770:	4659      	mov	r1, fp
 8006772:	4630      	mov	r0, r6
 8006774:	f009 ff54 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006778:	462a      	mov	r2, r5
 800677a:	4650      	mov	r0, sl
 800677c:	4629      	mov	r1, r5
 800677e:	f7fc f8df 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006782:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006784:	4650      	mov	r0, sl
 8006786:	a90a      	add	r1, sp, #40	; 0x28
 8006788:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800678c:	f00d fb21 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006790:	4651      	mov	r1, sl
 8006792:	4630      	mov	r0, r6
 8006794:	f009 ff44 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006798:	f44f 729a 	mov.w	r2, #308	; 0x134
 800679c:	2156      	movs	r1, #86	; 0x56
 800679e:	4648      	mov	r0, r9
 80067a0:	f7fc f8ce 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80067a4:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80067a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80067ac:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80067b0:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80067b4:	4650      	mov	r0, sl
 80067b6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80067ba:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80067be:	4649      	mov	r1, r9
 80067c0:	4798      	blx	r3
 80067c2:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80067c6:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80067ca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80067ce:	4b10      	ldr	r3, [pc, #64]	; (8006810 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 80067d0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 80067d2:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80067d6:	b92b      	cbnz	r3, 80067e4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 80067d8:	4b0e      	ldr	r3, [pc, #56]	; (8006814 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 80067da:	4a0f      	ldr	r2, [pc, #60]	; (8006818 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80067dc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80067de:	480f      	ldr	r0, [pc, #60]	; (800681c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 80067e0:	f024 febe 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80067e4:	4b0e      	ldr	r3, [pc, #56]	; (8006820 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80067e6:	881b      	ldrh	r3, [r3, #0]
 80067e8:	2b24      	cmp	r3, #36	; 0x24
 80067ea:	d81d      	bhi.n	8006828 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 80067ec:	4b0d      	ldr	r3, [pc, #52]	; (8006824 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 80067ee:	4a0a      	ldr	r2, [pc, #40]	; (8006818 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 80067f0:	2161      	movs	r1, #97	; 0x61
 80067f2:	e7f4      	b.n	80067de <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 80067f4:	0802e728 	.word	0x0802e728
 80067f8:	0802f644 	.word	0x0802f644
 80067fc:	0802f890 	.word	0x0802f890
 8006800:	0802d190 	.word	0x0802d190
 8006804:	0802f378 	.word	0x0802f378
 8006808:	0802e710 	.word	0x0802e710
 800680c:	08006609 	.word	0x08006609
 8006810:	20013844 	.word	0x20013844
 8006814:	0802cf40 	.word	0x0802cf40
 8006818:	0802d045 	.word	0x0802d045
 800681c:	0802cfbd 	.word	0x0802cfbd
 8006820:	20013848 	.word	0x20013848
 8006824:	0802d004 	.word	0x0802d004
        return texts->getText(typedTextId);
 8006828:	4b93      	ldr	r3, [pc, #588]	; (8006a78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 800682a:	2124      	movs	r1, #36	; 0x24
 800682c:	6818      	ldr	r0, [r3, #0]
 800682e:	f002 f88b 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8006832:	4a92      	ldr	r2, [pc, #584]	; (8006a7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8006834:	4603      	mov	r3, r0
 8006836:	2104      	movs	r1, #4
 8006838:	4650      	mov	r0, sl
 800683a:	f013 f977 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800683e:	4648      	mov	r0, r9
        wc1 = value;
 8006840:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8006844:	f00c fcf4 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006848:	4b8d      	ldr	r3, [pc, #564]	; (8006a80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 800684a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 800684c:	a90a      	add	r1, sp, #40	; 0x28
 800684e:	2325      	movs	r3, #37	; 0x25
 8006850:	4648      	mov	r0, r9
 8006852:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006856:	f00c fd0b 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800685a:	4649      	mov	r1, r9
 800685c:	4630      	mov	r0, r6
 800685e:	f009 fedf 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006862:	230a      	movs	r3, #10
 8006864:	9300      	str	r3, [sp, #0]
 8006866:	2232      	movs	r2, #50	; 0x32
 8006868:	23f0      	movs	r3, #240	; 0xf0
 800686a:	4629      	mov	r1, r5
 800686c:	4638      	mov	r0, r7
 800686e:	f7fc f874 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006872:	9b03      	ldr	r3, [sp, #12]
 8006874:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006878:	22a0      	movs	r2, #160	; 0xa0
 800687a:	4611      	mov	r1, r2
 800687c:	4638      	mov	r0, r7
 800687e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006882:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8006886:	f00c f8ad 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800688a:	22a0      	movs	r2, #160	; 0xa0
 800688c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006890:	4638      	mov	r0, r7
 8006892:	f00c f8b2 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006896:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800689a:	2b20      	cmp	r3, #32
 800689c:	d005      	beq.n	80068aa <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 800689e:	2320      	movs	r3, #32
 80068a0:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80068a4:	4638      	mov	r0, r7
 80068a6:	f00b ffa7 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80068aa:	4638      	mov	r0, r7
 80068ac:	2101      	movs	r1, #1
 80068ae:	f00c f8af 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80068b2:	4639      	mov	r1, r7
 80068b4:	4630      	mov	r0, r6
 80068b6:	ad04      	add	r5, sp, #16
        color = newColor;
 80068b8:	f04f 37ff 	mov.w	r7, #4294967295
 80068bc:	f009 feb0 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80068c0:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80068c4:	2223      	movs	r2, #35	; 0x23
 80068c6:	4640      	mov	r0, r8
 80068c8:	2145      	movs	r1, #69	; 0x45
 80068ca:	f7fc f839 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80068ce:	4641      	mov	r1, r8
 80068d0:	4628      	mov	r0, r5
        color = newColor;
 80068d2:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80068d6:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80068da:	f00c fa2f 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068de:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80068e2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80068e6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80068ea:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8006a80 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 80068ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80068f2:	2344      	movs	r3, #68	; 0x44
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 80068f4:	a90a      	add	r1, sp, #40	; 0x28
 80068f6:	4640      	mov	r0, r8
 80068f8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80068fc:	f00c fcb8 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006900:	4641      	mov	r1, r8
 8006902:	4630      	mov	r0, r6
 8006904:	f009 fe8c 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006908:	ee18 0a10 	vmov	r0, s16
 800690c:	220c      	movs	r2, #12
 800690e:	2136      	movs	r1, #54	; 0x36
 8006910:	f7fc f816 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006914:	ee18 1a10 	vmov	r1, s16
 8006918:	4628      	mov	r0, r5
        color = newColor;
 800691a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800691e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006922:	f00c fa0b 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006926:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800692a:	ee18 3a10 	vmov	r3, s16
 800692e:	333c      	adds	r3, #60	; 0x3c
 8006930:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006934:	2343      	movs	r3, #67	; 0x43
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 8006936:	ee18 0a10 	vmov	r0, s16
 800693a:	a90a      	add	r1, sp, #40	; 0x28
 800693c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006940:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006944:	f00c fc94 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006948:	ee18 1a10 	vmov	r1, s16
 800694c:	4630      	mov	r0, r6
 800694e:	f009 fe67 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 8006952:	ee18 0a90 	vmov	r0, s17
 8006956:	223c      	movs	r2, #60	; 0x3c
 8006958:	2121      	movs	r1, #33	; 0x21
 800695a:	f7fb fff1 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800695e:	ee18 1a90 	vmov	r1, s17
 8006962:	4628      	mov	r0, r5
        color = newColor;
 8006964:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8006968:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800696c:	f00c f9e6 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006970:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006974:	ee18 3a90 	vmov	r3, s17
 8006978:	333c      	adds	r3, #60	; 0x3c
 800697a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800697e:	2333      	movs	r3, #51	; 0x33
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 8006980:	ee18 0a90 	vmov	r0, s17
 8006984:	a90a      	add	r1, sp, #40	; 0x28
 8006986:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800698a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800698e:	f00c fc6f 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006992:	ee18 1a90 	vmov	r1, s17
 8006996:	4630      	mov	r0, r6
 8006998:	f009 fe42 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800699c:	ee19 0a10 	vmov	r0, s18
 80069a0:	22f0      	movs	r2, #240	; 0xf0
 80069a2:	2121      	movs	r1, #33	; 0x21
 80069a4:	f7fb ffcc 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80069a8:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069ac:	aa0a      	add	r2, sp, #40	; 0x28
 80069ae:	f04f 0802 	mov.w	r8, #2
 80069b2:	a909      	add	r1, sp, #36	; 0x24
 80069b4:	ee19 0a10 	vmov	r0, s18
 80069b8:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80069bc:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 80069c0:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069c4:	f00d f80f 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80069c8:	2342      	movs	r3, #66	; 0x42
 80069ca:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80069ce:	3510      	adds	r5, #16
        updateTextPosition();
 80069d0:	ee19 0a10 	vmov	r0, s18
 80069d4:	f7fb fff8 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80069d8:	ee19 1a10 	vmov	r1, s18
 80069dc:	4630      	mov	r0, r6
        colorPressed = col;
 80069de:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80069e2:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80069e6:	f009 fe1b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80069ea:	ee19 0a90 	vmov	r0, s19
 80069ee:	22aa      	movs	r2, #170	; 0xaa
 80069f0:	2121      	movs	r1, #33	; 0x21
 80069f2:	f7fb ffa5 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80069f6:	aa0a      	add	r2, sp, #40	; 0x28
 80069f8:	a909      	add	r1, sp, #36	; 0x24
 80069fa:	ee19 0a90 	vmov	r0, s19
 80069fe:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a02:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006a06:	f00c ffee 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a0a:	2341      	movs	r3, #65	; 0x41
 8006a0c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006a10:	ee19 0a90 	vmov	r0, s19
 8006a14:	f7fb ffd8 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a18:	ee19 1a90 	vmov	r1, s19
 8006a1c:	4630      	mov	r0, r6
        colorPressed = col;
 8006a1e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006a22:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8006a26:	f009 fdfb 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006a2a:	ee1a 0a10 	vmov	r0, s20
 8006a2e:	2264      	movs	r2, #100	; 0x64
 8006a30:	2121      	movs	r1, #33	; 0x21
 8006a32:	f7fb ff85 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006a36:	aa0a      	add	r2, sp, #40	; 0x28
 8006a38:	a909      	add	r1, sp, #36	; 0x24
 8006a3a:	ee1a 0a10 	vmov	r0, s20
 8006a3e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006a42:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006a46:	f00c ffce 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006a4a:	2340      	movs	r3, #64	; 0x40
        updateTextPosition();
 8006a4c:	ee1a 0a10 	vmov	r0, s20
 8006a50:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006a54:	f7fb ffb8 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006a58:	4630      	mov	r0, r6
        colorPressed = col;
 8006a5a:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8006a5e:	ee1a 1a10 	vmov	r1, s20
 8006a62:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8006a66:	f009 fddb 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006a6a:	4620      	mov	r0, r4
 8006a6c:	b00d      	add	sp, #52	; 0x34
 8006a6e:	ecbd 8b06 	vpop	{d8-d10}
 8006a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006a76:	bf00      	nop
 8006a78:	20013850 	.word	0x20013850
 8006a7c:	0802d07d 	.word	0x0802d07d
 8006a80:	0802d0f0 	.word	0x0802d0f0

08006a84 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{

}
 8006a84:	4770      	bx	lr

08006a86 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006a86:	4770      	bx	lr

08006a88 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006a88:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006a8a:	68c2      	ldr	r2, [r0, #12]
 8006a8c:	6844      	ldr	r4, [r0, #4]
 8006a8e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006a90:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006a92:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006a96:	07d2      	lsls	r2, r2, #31
 8006a98:	bf48      	it	mi
 8006a9a:	5962      	ldrmi	r2, [r4, r5]
 8006a9c:	689b      	ldr	r3, [r3, #8]
    }
 8006a9e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006aa0:	bf48      	it	mi
 8006aa2:	58d3      	ldrmi	r3, [r2, r3]
 8006aa4:	4718      	bx	r3

08006aa6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006aa6:	6843      	ldr	r3, [r0, #4]
 8006aa8:	b12b      	cbz	r3, 8006ab6 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006aaa:	6883      	ldr	r3, [r0, #8]
 8006aac:	b92b      	cbnz	r3, 8006aba <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006aae:	68c0      	ldr	r0, [r0, #12]
 8006ab0:	f000 0001 	and.w	r0, r0, #1
 8006ab4:	4770      	bx	lr
 8006ab6:	4618      	mov	r0, r3
 8006ab8:	4770      	bx	lr
 8006aba:	2001      	movs	r0, #1
    }
 8006abc:	4770      	bx	lr

08006abe <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006abe:	b510      	push	{r4, lr}
 8006ac0:	2110      	movs	r1, #16
 8006ac2:	4604      	mov	r4, r0
 8006ac4:	f023 ff39 	bl	802a93a <_ZdlPvj>
 8006ac8:	4620      	mov	r0, r4
 8006aca:	bd10      	pop	{r4, pc}

08006acc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006acc:	b510      	push	{r4, lr}
 8006ace:	4b03      	ldr	r3, [pc, #12]	; (8006adc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x10>)
 8006ad0:	6003      	str	r3, [r0, #0]
 8006ad2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ad4:	f00e f97a 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006ad8:	4620      	mov	r0, r4
 8006ada:	bd10      	pop	{r4, pc}
 8006adc:	0802e774 	.word	0x0802e774

08006ae0 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006ae0:	b507      	push	{r0, r1, r2, lr}
 8006ae2:	4b07      	ldr	r3, [pc, #28]	; (8006b00 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev+0x20>)
 8006ae4:	6003      	str	r3, [r0, #0]
 8006ae6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006ae8:	f00e f970 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006aec:	9801      	ldr	r0, [sp, #4]
 8006aee:	f241 015c 	movw	r1, #4188	; 0x105c
 8006af2:	f023 ff22 	bl	802a93a <_ZdlPvj>
 8006af6:	9801      	ldr	r0, [sp, #4]
 8006af8:	b003      	add	sp, #12
 8006afa:	f85d fb04 	ldr.w	pc, [sp], #4
 8006afe:	bf00      	nop
 8006b00:	0802e774 	.word	0x0802e774

08006b04 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006b04:	3098      	adds	r0, #152	; 0x98
 8006b06:	4288      	cmp	r0, r1
{
 8006b08:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006b0a:	d105      	bne.n	8006b18 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006b0c:	f00f fe60 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006b10:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006b14:	f7fd bf56 	b.w	80049c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006b18:	bd08      	pop	{r3, pc}
	...

08006b1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 8006b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b20:	ed2d 8b02 	vpush	{d8}
 8006b24:	4604      	mov	r4, r0
 8006b26:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006b28:	46a1      	mov	r9, r4
 8006b2a:	2500      	movs	r5, #0
 8006b2c:	f011 fad0 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8006b30:	4ba5      	ldr	r3, [pc, #660]	; (8006dc8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2ac>)
 8006b32:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006b34:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006b38:	2226      	movs	r2, #38	; 0x26
 8006b3a:	4629      	mov	r1, r5
 8006b3c:	4648      	mov	r0, r9
 8006b3e:	f024 ff14 	bl	802b96a <memset>
 8006b42:	4648      	mov	r0, r9
 8006b44:	f7fb ff2e 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006b48:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006b4c:	26ff      	movs	r6, #255	; 0xff
 8006b4e:	4b9f      	ldr	r3, [pc, #636]	; (8006dcc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b0>)
 8006b50:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006b52:	2226      	movs	r2, #38	; 0x26
 8006b54:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006b58:	4629      	mov	r1, r5
 8006b5a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006b5e:	4640      	mov	r0, r8
 8006b60:	66a5      	str	r5, [r4, #104]	; 0x68
 8006b62:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006b66:	f024 ff00 	bl	802b96a <memset>
 8006b6a:	4640      	mov	r0, r8
 8006b6c:	f7fb ff1a 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006b70:	4b97      	ldr	r3, [pc, #604]	; (8006dd0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b4>)
 8006b72:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006b74:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006b78:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006b7c:	a90a      	add	r1, sp, #40	; 0x28
 8006b7e:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006b82:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006b84:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006b88:	f00d f923 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006b8c:	4658      	mov	r0, fp
 8006b8e:	f00d fa57 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006b92:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006b96:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006b9a:	4618      	mov	r0, r3
 8006b9c:	ee08 3a90 	vmov	s17, r3
 8006ba0:	f7fb ff64 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006ba4:	4638      	mov	r0, r7
 8006ba6:	f00b fe07 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8006baa:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006bae:	4618      	mov	r0, r3
 8006bb0:	9303      	str	r3, [sp, #12]
 8006bb2:	f7fb fcfb 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006bb6:	4b87      	ldr	r3, [pc, #540]	; (8006dd4 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2b8>)
 8006bb8:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006bbc:	3324      	adds	r3, #36	; 0x24
 8006bbe:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006bc2:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006bc6:	4618      	mov	r0, r3
 8006bc8:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006bcc:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006bd0:	ee08 3a10 	vmov	s16, r3
 8006bd4:	f7fb ff4a 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006bd8:	4650      	mov	r0, sl
 8006bda:	f7fb ff47 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006bde:	4a7e      	ldr	r2, [pc, #504]	; (8006dd8 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2bc>)
 8006be0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006be4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006be8:	4a7c      	ldr	r2, [pc, #496]	; (8006ddc <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006bea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006bee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006bf2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006bf6:	f00e f8df 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006bfa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006bfe:	462a      	mov	r2, r5
 8006c00:	4648      	mov	r0, r9
 8006c02:	9300      	str	r3, [sp, #0]
 8006c04:	4629      	mov	r1, r5
 8006c06:	23f0      	movs	r3, #240	; 0xf0
 8006c08:	f7fb fea7 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c0c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006c0e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006c12:	66a3      	str	r3, [r4, #104]	; 0x68
 8006c14:	4649      	mov	r1, r9
 8006c16:	4630      	mov	r0, r6
 8006c18:	f009 fd02 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006c1c:	462a      	mov	r2, r5
 8006c1e:	4640      	mov	r0, r8
 8006c20:	4629      	mov	r1, r5
 8006c22:	f7fb fe8d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006c26:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006c28:	4640      	mov	r0, r8
 8006c2a:	a90a      	add	r1, sp, #40	; 0x28
 8006c2c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c30:	f00d f8cf 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c34:	4641      	mov	r1, r8
 8006c36:	4630      	mov	r0, r6
 8006c38:	f009 fcf2 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006c3c:	4658      	mov	r0, fp
 8006c3e:	f240 1201 	movw	r2, #257	; 0x101
 8006c42:	2121      	movs	r1, #33	; 0x21
 8006c44:	f7fb fe7c 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006c48:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006c4a:	aa0a      	add	r2, sp, #40	; 0x28
 8006c4c:	a909      	add	r1, sp, #36	; 0x24
 8006c4e:	4658      	mov	r0, fp
 8006c50:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006c54:	2302      	movs	r3, #2
 8006c56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006c5a:	f00c fec4 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006c5e:	232f      	movs	r3, #47	; 0x2f
        updateTextPosition();
 8006c60:	4658      	mov	r0, fp
 8006c62:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006c66:	f7fb feaf 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006c6a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006c6e:	330c      	adds	r3, #12
        color = col;
 8006c70:	f04f 39ff 	mov.w	r9, #4294967295
 8006c74:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006c78:	4659      	mov	r1, fp
 8006c7a:	4630      	mov	r0, r6
        colorPressed = col;
 8006c7c:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006c80:	f009 fcce 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006c84:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006c88:	223c      	movs	r2, #60	; 0x3c
 8006c8a:	ee18 0a90 	vmov	r0, s17
 8006c8e:	2117      	movs	r1, #23
 8006c90:	f7fb fe56 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006c94:	ee18 1a90 	vmov	r1, s17
 8006c98:	4640      	mov	r0, r8
        color = newColor;
 8006c9a:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006c9e:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006ca2:	f00c f84b 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006ca6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006caa:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006cae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006cb2:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8006de0 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c4>
 8006cb6:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006cba:	2330      	movs	r3, #48	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 8006cbc:	ee18 0a90 	vmov	r0, s17
 8006cc0:	a90a      	add	r1, sp, #40	; 0x28
 8006cc2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cc6:	f00c fad3 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cca:	ee18 1a90 	vmov	r1, s17
 8006cce:	4630      	mov	r0, r6
 8006cd0:	f009 fca6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006cd4:	230a      	movs	r3, #10
 8006cd6:	9300      	str	r3, [sp, #0]
 8006cd8:	2232      	movs	r2, #50	; 0x32
 8006cda:	23f0      	movs	r3, #240	; 0xf0
 8006cdc:	4629      	mov	r1, r5
 8006cde:	4638      	mov	r0, r7
 8006ce0:	f7fb fe3b 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ce4:	9b03      	ldr	r3, [sp, #12]
 8006ce6:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cea:	22a0      	movs	r2, #160	; 0xa0
 8006cec:	4611      	mov	r1, r2
 8006cee:	4638      	mov	r0, r7
 8006cf0:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006cf4:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8006cf8:	f00b fe74 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006cfc:	22a0      	movs	r2, #160	; 0xa0
 8006cfe:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006d02:	4638      	mov	r0, r7
 8006d04:	f00b fe79 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006d08:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006d0c:	2b20      	cmp	r3, #32
 8006d0e:	d005      	beq.n	8006d1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8006d10:	2320      	movs	r3, #32
 8006d12:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006d16:	4638      	mov	r0, r7
 8006d18:	f00b fd6e 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006d1c:	4638      	mov	r0, r7
 8006d1e:	2101      	movs	r1, #1
 8006d20:	f00b fe76 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006d24:	4639      	mov	r1, r7
 8006d26:	4630      	mov	r0, r6
 8006d28:	f009 fc7a 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006d2c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8006d30:	ee18 0a10 	vmov	r0, s16
 8006d34:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8006d36:	2500      	movs	r5, #0
 8006d38:	2145      	movs	r1, #69	; 0x45
 8006d3a:	f7fb fe01 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006d3e:	ee18 1a10 	vmov	r1, s16
 8006d42:	4640      	mov	r0, r8
        color = newColor;
 8006d44:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8006d48:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006d4c:	f00b fff6 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d50:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d54:	ee18 3a10 	vmov	r3, s16
 8006d58:	333c      	adds	r3, #60	; 0x3c
 8006d5a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d5e:	2331      	movs	r3, #49	; 0x31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 8006d60:	ee18 0a10 	vmov	r0, s16
 8006d64:	a90a      	add	r1, sp, #40	; 0x28
 8006d66:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006d6a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006d6e:	f00c fa7f 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d72:	ee18 1a10 	vmov	r1, s16
 8006d76:	4630      	mov	r0, r6
 8006d78:	f009 fc52 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006d7c:	220c      	movs	r2, #12
 8006d7e:	4650      	mov	r0, sl
 8006d80:	2136      	movs	r1, #54	; 0x36
 8006d82:	f7fb fddd 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006d86:	4651      	mov	r1, sl
 8006d88:	4640      	mov	r0, r8
        color = newColor;
 8006d8a:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8006d8e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006d92:	f00b ffd3 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d96:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006d9a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006d9e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006da2:	2332      	movs	r3, #50	; 0x32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 8006da4:	a90a      	add	r1, sp, #40	; 0x28
 8006da6:	4650      	mov	r0, sl
 8006da8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006dac:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8006db0:	f00c fa5e 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006db4:	4630      	mov	r0, r6
 8006db6:	4651      	mov	r1, sl
 8006db8:	f009 fc32 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006dbc:	4620      	mov	r0, r4
 8006dbe:	b00d      	add	sp, #52	; 0x34
 8006dc0:	ecbd 8b02 	vpop	{d8}
 8006dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006dc8:	0802e774 	.word	0x0802e774
 8006dcc:	0802f644 	.word	0x0802f644
 8006dd0:	0802f890 	.word	0x0802f890
 8006dd4:	0802f378 	.word	0x0802f378
 8006dd8:	0802e75c 	.word	0x0802e75c
 8006ddc:	08006b05 	.word	0x08006b05
 8006de0:	0802d0f0 	.word	0x0802d0f0

08006de4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{

}
 8006de4:	4770      	bx	lr

08006de6 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006de6:	4770      	bx	lr

08006de8 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006de8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006dea:	68c2      	ldr	r2, [r0, #12]
 8006dec:	6844      	ldr	r4, [r0, #4]
 8006dee:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006df0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006df2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006df6:	07d2      	lsls	r2, r2, #31
 8006df8:	bf48      	it	mi
 8006dfa:	5962      	ldrmi	r2, [r4, r5]
 8006dfc:	689b      	ldr	r3, [r3, #8]
    }
 8006dfe:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e00:	bf48      	it	mi
 8006e02:	58d3      	ldrmi	r3, [r2, r3]
 8006e04:	4718      	bx	r3

08006e06 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e06:	6843      	ldr	r3, [r0, #4]
 8006e08:	b12b      	cbz	r3, 8006e16 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e0a:	6883      	ldr	r3, [r0, #8]
 8006e0c:	b92b      	cbnz	r3, 8006e1a <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e0e:	68c0      	ldr	r0, [r0, #12]
 8006e10:	f000 0001 	and.w	r0, r0, #1
 8006e14:	4770      	bx	lr
 8006e16:	4618      	mov	r0, r3
 8006e18:	4770      	bx	lr
 8006e1a:	2001      	movs	r0, #1
    }
 8006e1c:	4770      	bx	lr

08006e1e <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e1e:	b510      	push	{r4, lr}
 8006e20:	2110      	movs	r1, #16
 8006e22:	4604      	mov	r4, r0
 8006e24:	f023 fd89 	bl	802a93a <_ZdlPvj>
 8006e28:	4620      	mov	r0, r4
 8006e2a:	bd10      	pop	{r4, pc}

08006e2c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006e2c:	b510      	push	{r4, lr}
 8006e2e:	4b03      	ldr	r3, [pc, #12]	; (8006e3c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x10>)
 8006e30:	6003      	str	r3, [r0, #0]
 8006e32:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e34:	f00d ffca 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e38:	4620      	mov	r0, r4
 8006e3a:	bd10      	pop	{r4, pc}
 8006e3c:	0802e7c0 	.word	0x0802e7c0

08006e40 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 8006e40:	b507      	push	{r0, r1, r2, lr}
 8006e42:	4b07      	ldr	r3, [pc, #28]	; (8006e60 <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev+0x20>)
 8006e44:	6003      	str	r3, [r0, #0]
 8006e46:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e48:	f00d ffc0 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e4c:	9801      	ldr	r0, [sp, #4]
 8006e4e:	f241 015c 	movw	r1, #4188	; 0x105c
 8006e52:	f023 fd72 	bl	802a93a <_ZdlPvj>
 8006e56:	9801      	ldr	r0, [sp, #4]
 8006e58:	b003      	add	sp, #12
 8006e5a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e5e:	bf00      	nop
 8006e60:	0802e7c0 	.word	0x0802e7c0

08006e64 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006e64:	3098      	adds	r0, #152	; 0x98
 8006e66:	4288      	cmp	r0, r1
{
 8006e68:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006e6a:	d105      	bne.n	8006e78 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006e6c:	f00f fcb0 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006e70:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006e74:	f7fd bda6 	b.w	80049c4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 8006e78:	bd08      	pop	{r3, pc}
	...

08006e7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006e80:	ed2d 8b02 	vpush	{d8}
 8006e84:	4604      	mov	r4, r0
 8006e86:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006e88:	46a1      	mov	r9, r4
 8006e8a:	2500      	movs	r5, #0
 8006e8c:	f011 f920 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8006e90:	4ba5      	ldr	r3, [pc, #660]	; (8007128 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2ac>)
 8006e92:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006e94:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006e98:	2226      	movs	r2, #38	; 0x26
 8006e9a:	4629      	mov	r1, r5
 8006e9c:	4648      	mov	r0, r9
 8006e9e:	f024 fd64 	bl	802b96a <memset>
 8006ea2:	4648      	mov	r0, r9
 8006ea4:	f7fb fd7e 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006ea8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006eac:	26ff      	movs	r6, #255	; 0xff
 8006eae:	4b9f      	ldr	r3, [pc, #636]	; (800712c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b0>)
 8006eb0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006eb2:	2226      	movs	r2, #38	; 0x26
 8006eb4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006eb8:	4629      	mov	r1, r5
 8006eba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006ebe:	4640      	mov	r0, r8
 8006ec0:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ec2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006ec6:	f024 fd50 	bl	802b96a <memset>
 8006eca:	4640      	mov	r0, r8
 8006ecc:	f7fb fd6a 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8006ed0:	4b97      	ldr	r3, [pc, #604]	; (8007130 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b4>)
 8006ed2:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006ed4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006ed8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006edc:	a90a      	add	r1, sp, #40	; 0x28
 8006ede:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006ee2:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006ee4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006ee8:	f00c ff73 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006eec:	4658      	mov	r0, fp
 8006eee:	f00d f8a7 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006ef2:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006ef6:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006efa:	4618      	mov	r0, r3
 8006efc:	ee08 3a90 	vmov	s17, r3
 8006f00:	f7fb fdb4 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006f04:	4638      	mov	r0, r7
 8006f06:	f00b fc57 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8006f0a:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006f0e:	4618      	mov	r0, r3
 8006f10:	9303      	str	r3, [sp, #12]
 8006f12:	f7fb fb4b 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006f16:	4b87      	ldr	r3, [pc, #540]	; (8007134 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2b8>)
 8006f18:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006f1c:	3324      	adds	r3, #36	; 0x24
 8006f1e:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8006f22:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8006f26:	4618      	mov	r0, r3
 8006f28:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8006f2c:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006f30:	ee08 3a10 	vmov	s16, r3
 8006f34:	f7fb fd9a 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8006f38:	4650      	mov	r0, sl
 8006f3a:	f7fb fd97 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006f3e:	4a7e      	ldr	r2, [pc, #504]	; (8007138 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2bc>)
 8006f40:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006f44:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8006f48:	4a7c      	ldr	r2, [pc, #496]	; (800713c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006f4a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006f4e:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8006f52:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006f56:	f00d ff2f 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006f5a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006f5e:	462a      	mov	r2, r5
 8006f60:	4648      	mov	r0, r9
 8006f62:	9300      	str	r3, [sp, #0]
 8006f64:	4629      	mov	r1, r5
 8006f66:	23f0      	movs	r3, #240	; 0xf0
 8006f68:	f7fb fcf7 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8006f6c:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006f6e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006f72:	66a3      	str	r3, [r4, #104]	; 0x68
 8006f74:	4649      	mov	r1, r9
 8006f76:	4630      	mov	r0, r6
 8006f78:	f009 fb52 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006f7c:	462a      	mov	r2, r5
 8006f7e:	4640      	mov	r0, r8
 8006f80:	4629      	mov	r1, r5
 8006f82:	f7fb fcdd 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006f86:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006f88:	4640      	mov	r0, r8
 8006f8a:	a90a      	add	r1, sp, #40	; 0x28
 8006f8c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006f90:	f00c ff1f 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f94:	4641      	mov	r1, r8
 8006f96:	4630      	mov	r0, r6
 8006f98:	f009 fb42 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006f9c:	4658      	mov	r0, fp
 8006f9e:	f240 1201 	movw	r2, #257	; 0x101
 8006fa2:	2121      	movs	r1, #33	; 0x21
 8006fa4:	f7fb fccc 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006fa8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006faa:	aa0a      	add	r2, sp, #40	; 0x28
 8006fac:	a909      	add	r1, sp, #36	; 0x24
 8006fae:	4658      	mov	r0, fp
 8006fb0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8006fb4:	2302      	movs	r3, #2
 8006fb6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006fba:	f00c fd14 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006fbe:	232b      	movs	r3, #43	; 0x2b
        updateTextPosition();
 8006fc0:	4658      	mov	r0, fp
 8006fc2:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006fc6:	f7fb fcff 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006fca:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8006fce:	330c      	adds	r3, #12
        color = col;
 8006fd0:	f04f 39ff 	mov.w	r9, #4294967295
 8006fd4:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006fd8:	4659      	mov	r1, fp
 8006fda:	4630      	mov	r0, r6
        colorPressed = col;
 8006fdc:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8006fe0:	f009 fb1e 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006fe4:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006fe8:	223c      	movs	r2, #60	; 0x3c
 8006fea:	ee18 0a90 	vmov	r0, s17
 8006fee:	2117      	movs	r1, #23
 8006ff0:	f7fb fca6 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8006ff4:	ee18 1a90 	vmov	r1, s17
 8006ff8:	4640      	mov	r0, r8
        color = newColor;
 8006ffa:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006ffe:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8007002:	f00b fe9b 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007006:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800700a:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 800700e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007012:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8007140 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c4>
 8007016:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800701a:	232c      	movs	r3, #44	; 0x2c
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 800701c:	ee18 0a90 	vmov	r0, s17
 8007020:	a90a      	add	r1, sp, #40	; 0x28
 8007022:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007026:	f00c f923 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800702a:	ee18 1a90 	vmov	r1, s17
 800702e:	4630      	mov	r0, r6
 8007030:	f009 faf6 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007034:	230a      	movs	r3, #10
 8007036:	9300      	str	r3, [sp, #0]
 8007038:	2232      	movs	r2, #50	; 0x32
 800703a:	23f0      	movs	r3, #240	; 0xf0
 800703c:	4629      	mov	r1, r5
 800703e:	4638      	mov	r0, r7
 8007040:	f7fb fc8b 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007044:	9b03      	ldr	r3, [sp, #12]
 8007046:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800704a:	22a0      	movs	r2, #160	; 0xa0
 800704c:	4611      	mov	r1, r2
 800704e:	4638      	mov	r0, r7
 8007050:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007054:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8007058:	f00b fcc4 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800705c:	22a0      	movs	r2, #160	; 0xa0
 800705e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007062:	4638      	mov	r0, r7
 8007064:	f00b fcc9 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007068:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800706c:	2b20      	cmp	r3, #32
 800706e:	d005      	beq.n	800707c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8007070:	2320      	movs	r3, #32
 8007072:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8007076:	4638      	mov	r0, r7
 8007078:	f00b fbbe 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800707c:	4638      	mov	r0, r7
 800707e:	2101      	movs	r1, #1
 8007080:	f00b fcc6 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007084:	4639      	mov	r1, r7
 8007086:	4630      	mov	r0, r6
 8007088:	f009 faca 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800708c:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8007090:	ee18 0a10 	vmov	r0, s16
 8007094:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007096:	2500      	movs	r5, #0
 8007098:	2145      	movs	r1, #69	; 0x45
 800709a:	f7fb fc51 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800709e:	ee18 1a10 	vmov	r1, s16
 80070a2:	4640      	mov	r0, r8
        color = newColor;
 80070a4:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 80070a8:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80070ac:	f00b fe46 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070b0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070b4:	ee18 3a10 	vmov	r3, s16
 80070b8:	333c      	adds	r3, #60	; 0x3c
 80070ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070be:	232d      	movs	r3, #45	; 0x2d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 80070c0:	ee18 0a10 	vmov	r0, s16
 80070c4:	a90a      	add	r1, sp, #40	; 0x28
 80070c6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80070ca:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80070ce:	f00c f8cf 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070d2:	ee18 1a10 	vmov	r1, s16
 80070d6:	4630      	mov	r0, r6
 80070d8:	f009 faa2 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80070dc:	220c      	movs	r2, #12
 80070de:	4650      	mov	r0, sl
 80070e0:	2136      	movs	r1, #54	; 0x36
 80070e2:	f7fb fc2d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80070e6:	4651      	mov	r1, sl
 80070e8:	4640      	mov	r0, r8
        color = newColor;
 80070ea:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80070ee:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80070f2:	f00b fe23 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070f6:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80070fa:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80070fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007102:	232e      	movs	r3, #46	; 0x2e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8007104:	a90a      	add	r1, sp, #40	; 0x28
 8007106:	4650      	mov	r0, sl
 8007108:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800710c:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8007110:	f00c f8ae 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007114:	4630      	mov	r0, r6
 8007116:	4651      	mov	r1, sl
 8007118:	f009 fa82 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800711c:	4620      	mov	r0, r4
 800711e:	b00d      	add	sp, #52	; 0x34
 8007120:	ecbd 8b02 	vpop	{d8}
 8007124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007128:	0802e7c0 	.word	0x0802e7c0
 800712c:	0802f644 	.word	0x0802f644
 8007130:	0802f890 	.word	0x0802f890
 8007134:	0802f378 	.word	0x0802f378
 8007138:	0802e7a8 	.word	0x0802e7a8
 800713c:	08006e65 	.word	0x08006e65
 8007140:	0802d0f0 	.word	0x0802d0f0

08007144 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 8007144:	4770      	bx	lr

08007146 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007146:	4770      	bx	lr

08007148 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007148:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800714a:	68c2      	ldr	r2, [r0, #12]
 800714c:	6844      	ldr	r4, [r0, #4]
 800714e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007150:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007152:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007156:	07d2      	lsls	r2, r2, #31
 8007158:	bf48      	it	mi
 800715a:	5962      	ldrmi	r2, [r4, r5]
 800715c:	689b      	ldr	r3, [r3, #8]
    }
 800715e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007160:	bf48      	it	mi
 8007162:	58d3      	ldrmi	r3, [r2, r3]
 8007164:	4718      	bx	r3

08007166 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007166:	6843      	ldr	r3, [r0, #4]
 8007168:	b12b      	cbz	r3, 8007176 <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800716a:	6883      	ldr	r3, [r0, #8]
 800716c:	b92b      	cbnz	r3, 800717a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800716e:	68c0      	ldr	r0, [r0, #12]
 8007170:	f000 0001 	and.w	r0, r0, #1
 8007174:	4770      	bx	lr
 8007176:	4618      	mov	r0, r3
 8007178:	4770      	bx	lr
 800717a:	2001      	movs	r0, #1
    }
 800717c:	4770      	bx	lr

0800717e <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800717e:	b510      	push	{r4, lr}
 8007180:	2110      	movs	r1, #16
 8007182:	4604      	mov	r4, r0
 8007184:	f023 fbd9 	bl	802a93a <_ZdlPvj>
 8007188:	4620      	mov	r0, r4
 800718a:	bd10      	pop	{r4, pc}

0800718c <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 800718c:	b510      	push	{r4, lr}
 800718e:	4b03      	ldr	r3, [pc, #12]	; (800719c <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8007190:	6003      	str	r3, [r0, #0]
 8007192:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007194:	f00d fe1a 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007198:	4620      	mov	r0, r4
 800719a:	bd10      	pop	{r4, pc}
 800719c:	0802e80c 	.word	0x0802e80c

080071a0 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 80071a0:	b507      	push	{r0, r1, r2, lr}
 80071a2:	4b07      	ldr	r3, [pc, #28]	; (80071c0 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 80071a4:	6003      	str	r3, [r0, #0]
 80071a6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80071a8:	f00d fe10 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80071ac:	9801      	ldr	r0, [sp, #4]
 80071ae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80071b2:	f023 fbc2 	bl	802a93a <_ZdlPvj>
 80071b6:	9801      	ldr	r0, [sp, #4]
 80071b8:	b003      	add	sp, #12
 80071ba:	f85d fb04 	ldr.w	pc, [sp], #4
 80071be:	bf00      	nop
 80071c0:	0802e80c 	.word	0x0802e80c

080071c4 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80071c4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80071c6:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80071ca:	4299      	cmp	r1, r3
{
 80071cc:	4604      	mov	r4, r0
 80071ce:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80071d0:	d103      	bne.n	80071da <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80071d2:	f00f fafd 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 80071d6:	f7fd fba5 	bl	8004924 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80071da:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80071de:	429d      	cmp	r5, r3
 80071e0:	d103      	bne.n	80071ea <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80071e2:	f00f faf5 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 80071e6:	f7fd fbbd 	bl	8004964 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80071ea:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80071ee:	42a5      	cmp	r5, r4
 80071f0:	d105      	bne.n	80071fe <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80071f2:	f00f faed 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 80071f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 80071fa:	f7fd bbc3 	b.w	8004984 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80071fe:	bd38      	pop	{r3, r4, r5, pc}

08007200 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 8007200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007204:	ed2d 8b06 	vpush	{d8-d10}
 8007208:	4604      	mov	r4, r0
 800720a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 800720c:	46a3      	mov	fp, r4
 800720e:	2500      	movs	r5, #0
 8007210:	f010 ff5e 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8007214:	4b66      	ldr	r3, [pc, #408]	; (80073b0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 8007216:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007218:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800721c:	2226      	movs	r2, #38	; 0x26
 800721e:	4629      	mov	r1, r5
 8007220:	4658      	mov	r0, fp
 8007222:	f024 fba2 	bl	802b96a <memset>
 8007226:	4658      	mov	r0, fp
 8007228:	f7fb fbbc 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 800722c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007230:	26ff      	movs	r6, #255	; 0xff
 8007232:	4b60      	ldr	r3, [pc, #384]	; (80073b4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 8007234:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007236:	2226      	movs	r2, #38	; 0x26
 8007238:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800723c:	4629      	mov	r1, r5
 800723e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007242:	4650      	mov	r0, sl
 8007244:	66a5      	str	r5, [r4, #104]	; 0x68
 8007246:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800724a:	f024 fb8e 	bl	802b96a <memset>
 800724e:	4650      	mov	r0, sl
 8007250:	f7fb fba8 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8007254:	4b58      	ldr	r3, [pc, #352]	; (80073b8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 8007256:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007258:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800725c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007260:	a90a      	add	r1, sp, #40	; 0x28
 8007262:	4650      	mov	r0, sl
 8007264:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007268:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800726c:	f00c fdb1 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8007270:	4648      	mov	r0, r9
 8007272:	f7fb fbfb 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007276:	4b51      	ldr	r3, [pc, #324]	; (80073bc <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8007278:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800727c:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8007280:	4618      	mov	r0, r3
 8007282:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8007286:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800728a:	ee08 3a90 	vmov	s17, r3
 800728e:	f7fb fbed 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8007292:	4638      	mov	r0, r7
 8007294:	f00b fa90 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8007298:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800729c:	4618      	mov	r0, r3
 800729e:	9303      	str	r3, [sp, #12]
 80072a0:	f7fb f984 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80072a4:	4b46      	ldr	r3, [pc, #280]	; (80073c0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 80072a6:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 80072aa:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 80072ae:	3324      	adds	r3, #36	; 0x24
 80072b0:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 80072b4:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 80072b8:	4640      	mov	r0, r8
 80072ba:	f7fb fbd7 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80072be:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80072c2:	4618      	mov	r0, r3
 80072c4:	ee08 3a10 	vmov	s16, r3
 80072c8:	f7fb fbd0 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80072cc:	f504 7310 	add.w	r3, r4, #576	; 0x240
 80072d0:	4618      	mov	r0, r3
 80072d2:	ee09 3a10 	vmov	s18, r3
 80072d6:	f00c feb3 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072da:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80072de:	4618      	mov	r0, r3
 80072e0:	ee09 3a90 	vmov	s19, r3
 80072e4:	f00c feac 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072e8:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80072ec:	4618      	mov	r0, r3
 80072ee:	ee0a 3a10 	vmov	s20, r3
 80072f2:	f00c fea5 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80072f6:	4a33      	ldr	r2, [pc, #204]	; (80073c4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 80072f8:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80072fc:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8007300:	4a31      	ldr	r2, [pc, #196]	; (80073c8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007302:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007306:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800730a:	f504 7048 	add.w	r0, r4, #800	; 0x320
 800730e:	f00d fd53 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007312:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007316:	462a      	mov	r2, r5
 8007318:	4658      	mov	r0, fp
 800731a:	9300      	str	r3, [sp, #0]
 800731c:	4629      	mov	r1, r5
 800731e:	23f0      	movs	r3, #240	; 0xf0
 8007320:	f7fb fb1b 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007324:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007326:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800732a:	66a3      	str	r3, [r4, #104]	; 0x68
 800732c:	4659      	mov	r1, fp
 800732e:	4630      	mov	r0, r6
 8007330:	f009 f976 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007334:	462a      	mov	r2, r5
 8007336:	4650      	mov	r0, sl
 8007338:	4629      	mov	r1, r5
 800733a:	f7fb fb01 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800733e:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007340:	4650      	mov	r0, sl
 8007342:	a90a      	add	r1, sp, #40	; 0x28
 8007344:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007348:	f00c fd43 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800734c:	4651      	mov	r1, sl
 800734e:	4630      	mov	r0, r6
 8007350:	f009 f966 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007354:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007358:	2156      	movs	r1, #86	; 0x56
 800735a:	4648      	mov	r0, r9
 800735c:	f7fb faf0 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007360:	f04f 33ff 	mov.w	r3, #4294967295
 8007364:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007368:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800736c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007370:	f10d 0b10 	add.w	fp, sp, #16
 8007374:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007378:	4649      	mov	r1, r9
 800737a:	4658      	mov	r0, fp
 800737c:	4798      	blx	r3
 800737e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007382:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007386:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800738a:	4b10      	ldr	r3, [pc, #64]	; (80073cc <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 800738c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 800738e:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8007392:	b92b      	cbnz	r3, 80073a0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8007394:	4b0e      	ldr	r3, [pc, #56]	; (80073d0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8007396:	4a0f      	ldr	r2, [pc, #60]	; (80073d4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8007398:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800739a:	480f      	ldr	r0, [pc, #60]	; (80073d8 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 800739c:	f024 f8e0 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80073a0:	4b0e      	ldr	r3, [pc, #56]	; (80073dc <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80073a2:	881b      	ldrh	r3, [r3, #0]
 80073a4:	2b26      	cmp	r3, #38	; 0x26
 80073a6:	d81d      	bhi.n	80073e4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 80073a8:	4b0d      	ldr	r3, [pc, #52]	; (80073e0 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 80073aa:	4a0a      	ldr	r2, [pc, #40]	; (80073d4 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 80073ac:	2161      	movs	r1, #97	; 0x61
 80073ae:	e7f4      	b.n	800739a <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 80073b0:	0802e80c 	.word	0x0802e80c
 80073b4:	0802f644 	.word	0x0802f644
 80073b8:	0802f890 	.word	0x0802f890
 80073bc:	0802d190 	.word	0x0802d190
 80073c0:	0802f378 	.word	0x0802f378
 80073c4:	0802e7f4 	.word	0x0802e7f4
 80073c8:	080071c5 	.word	0x080071c5
 80073cc:	20013844 	.word	0x20013844
 80073d0:	0802cf40 	.word	0x0802cf40
 80073d4:	0802d045 	.word	0x0802d045
 80073d8:	0802cfbd 	.word	0x0802cfbd
 80073dc:	20013848 	.word	0x20013848
 80073e0:	0802d004 	.word	0x0802d004
        return texts->getText(typedTextId);
 80073e4:	4b95      	ldr	r3, [pc, #596]	; (800763c <_ZN26Measurement_SingleViewBaseC1Ev+0x43c>)
 80073e6:	2126      	movs	r1, #38	; 0x26
 80073e8:	6818      	ldr	r0, [r3, #0]
 80073ea:	f001 faad 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 80073ee:	4a94      	ldr	r2, [pc, #592]	; (8007640 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 80073f0:	4603      	mov	r3, r0
 80073f2:	2104      	movs	r1, #4
 80073f4:	4650      	mov	r0, sl
 80073f6:	f012 fb99 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80073fa:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 80073fe:	4648      	mov	r0, r9
 8007400:	f00b ff16 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007404:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8007644 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 8007408:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 800740c:	2327      	movs	r3, #39	; 0x27
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 800740e:	a90a      	add	r1, sp, #40	; 0x28
 8007410:	4648      	mov	r0, r9
 8007412:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007416:	f00b ff2b 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800741a:	4649      	mov	r1, r9
 800741c:	4630      	mov	r0, r6
 800741e:	f009 f8ff 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8007422:	223c      	movs	r2, #60	; 0x3c
 8007424:	ee18 0a90 	vmov	r0, s17
 8007428:	2129      	movs	r1, #41	; 0x29
 800742a:	f7fb fa89 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800742e:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007432:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8007436:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 800743a:	4658      	mov	r0, fp
        linespace = space;
 800743c:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8007440:	f00b fc7c 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007444:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8007448:	f504 7390 	add.w	r3, r4, #288	; 0x120
 800744c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007450:	2336      	movs	r3, #54	; 0x36
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8007452:	ee18 0a90 	vmov	r0, s17
 8007456:	a90a      	add	r1, sp, #40	; 0x28
 8007458:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800745c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8007460:	f00b ff06 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007464:	ee18 1a90 	vmov	r1, s17
 8007468:	4630      	mov	r0, r6
 800746a:	f009 f8d9 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800746e:	230a      	movs	r3, #10
 8007470:	9300      	str	r3, [sp, #0]
 8007472:	2232      	movs	r2, #50	; 0x32
 8007474:	23f0      	movs	r3, #240	; 0xf0
 8007476:	4629      	mov	r1, r5
 8007478:	4638      	mov	r0, r7
 800747a:	f7fb fa6e 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 800747e:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007482:	22a0      	movs	r2, #160	; 0xa0
 8007484:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007488:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 800748c:	9b03      	ldr	r3, [sp, #12]
 800748e:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8007492:	4611      	mov	r1, r2
 8007494:	4638      	mov	r0, r7
 8007496:	f00b faa5 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800749a:	22a0      	movs	r2, #160	; 0xa0
 800749c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80074a0:	4638      	mov	r0, r7
 80074a2:	f00b faaa 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80074a6:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 80074aa:	2b20      	cmp	r3, #32
 80074ac:	d005      	beq.n	80074ba <_ZN26Measurement_SingleViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 80074ae:	2320      	movs	r3, #32
 80074b0:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 80074b4:	4638      	mov	r0, r7
 80074b6:	f00b f99f 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80074ba:	4638      	mov	r0, r7
 80074bc:	2101      	movs	r1, #1
 80074be:	f00b faa7 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80074c2:	4639      	mov	r1, r7
 80074c4:	4630      	mov	r0, r6
 80074c6:	f009 f8ab 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80074ca:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 80074ce:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 80074d0:	2223      	movs	r2, #35	; 0x23
 80074d2:	4640      	mov	r0, r8
        linespace = space;
 80074d4:	f04f 0a00 	mov.w	sl, #0
 80074d8:	2145      	movs	r1, #69	; 0x45
 80074da:	f7fb fa31 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80074de:	4641      	mov	r1, r8
 80074e0:	4638      	mov	r0, r7
        color = newColor;
 80074e2:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 80074e6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 80074ea:	f00b fc27 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80074ee:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80074f2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80074f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074fa:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8007644 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>
 80074fe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007502:	2349      	movs	r3, #73	; 0x49
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8007504:	a90a      	add	r1, sp, #40	; 0x28
 8007506:	4640      	mov	r0, r8
 8007508:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800750c:	f00b feb0 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007510:	4641      	mov	r1, r8
 8007512:	4630      	mov	r0, r6
 8007514:	f009 f884 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007518:	ee18 0a10 	vmov	r0, s16
 800751c:	220c      	movs	r2, #12
 800751e:	2136      	movs	r1, #54	; 0x36
 8007520:	f7fb fa0e 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007524:	ee18 1a10 	vmov	r1, s16
 8007528:	4638      	mov	r0, r7
        color = newColor;
 800752a:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 800752e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007532:	f00b fc03 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007536:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800753a:	ee18 3a10 	vmov	r3, s16
 800753e:	333c      	adds	r3, #60	; 0x3c
 8007540:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007544:	2348      	movs	r3, #72	; 0x48
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8007546:	ee18 0a10 	vmov	r0, s16
 800754a:	a90a      	add	r1, sp, #40	; 0x28
 800754c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007550:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007554:	f00b fe8c 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007558:	ee18 1a10 	vmov	r1, s16
 800755c:	4630      	mov	r0, r6
 800755e:	f009 f85f 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007562:	ee19 0a10 	vmov	r0, s18
 8007566:	22f0      	movs	r2, #240	; 0xf0
 8007568:	2121      	movs	r1, #33	; 0x21
 800756a:	f7fb f9e9 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800756e:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007572:	aa0a      	add	r2, sp, #40	; 0x28
 8007574:	f04f 0802 	mov.w	r8, #2
 8007578:	a909      	add	r1, sp, #36	; 0x24
 800757a:	ee19 0a10 	vmov	r0, s18
 800757e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007582:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8007586:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800758a:	f00c fa2c 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800758e:	2347      	movs	r3, #71	; 0x47
 8007590:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8007594:	3710      	adds	r7, #16
        updateTextPosition();
 8007596:	ee19 0a10 	vmov	r0, s18
 800759a:	f7fb fa15 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800759e:	ee19 1a10 	vmov	r1, s18
 80075a2:	4630      	mov	r0, r6
        colorPressed = col;
 80075a4:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 80075a8:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 80075ac:	f009 f838 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80075b0:	ee19 0a90 	vmov	r0, s19
 80075b4:	22aa      	movs	r2, #170	; 0xaa
 80075b6:	2121      	movs	r1, #33	; 0x21
 80075b8:	f7fb f9c2 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80075bc:	aa0a      	add	r2, sp, #40	; 0x28
 80075be:	a909      	add	r1, sp, #36	; 0x24
 80075c0:	ee19 0a90 	vmov	r0, s19
 80075c4:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80075c8:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 80075cc:	f00c fa0b 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80075d0:	2346      	movs	r3, #70	; 0x46
 80075d2:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 80075d6:	ee19 0a90 	vmov	r0, s19
 80075da:	f7fb f9f5 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80075de:	ee19 1a90 	vmov	r1, s19
 80075e2:	4630      	mov	r0, r6
        colorPressed = col;
 80075e4:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 80075e8:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 80075ec:	f009 f818 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 80075f0:	ee1a 0a10 	vmov	r0, s20
 80075f4:	2264      	movs	r2, #100	; 0x64
 80075f6:	2121      	movs	r1, #33	; 0x21
 80075f8:	f7fb f9a2 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80075fc:	aa0a      	add	r2, sp, #40	; 0x28
 80075fe:	a909      	add	r1, sp, #36	; 0x24
 8007600:	ee1a 0a10 	vmov	r0, s20
 8007604:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8007608:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800760c:	f00c f9eb 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007610:	2345      	movs	r3, #69	; 0x45
        updateTextPosition();
 8007612:	ee1a 0a10 	vmov	r0, s20
 8007616:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 800761a:	f7fb f9d5 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800761e:	4630      	mov	r0, r6
        colorPressed = col;
 8007620:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8007624:	ee1a 1a10 	vmov	r1, s20
 8007628:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 800762c:	f008 fff8 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007630:	4620      	mov	r0, r4
 8007632:	b00d      	add	sp, #52	; 0x34
 8007634:	ecbd 8b06 	vpop	{d8-d10}
 8007638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800763c:	20013850 	.word	0x20013850
 8007640:	0802d07d 	.word	0x0802d07d
 8007644:	0802d0f0 	.word	0x0802d0f0

08007648 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8007648:	4770      	bx	lr

0800764a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 800764a:	4770      	bx	lr

0800764c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800764c:	4770      	bx	lr

0800764e <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800764e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007650:	68c2      	ldr	r2, [r0, #12]
 8007652:	6844      	ldr	r4, [r0, #4]
 8007654:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007656:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007658:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800765c:	07d2      	lsls	r2, r2, #31
 800765e:	bf48      	it	mi
 8007660:	5962      	ldrmi	r2, [r4, r5]
 8007662:	689b      	ldr	r3, [r3, #8]
    }
 8007664:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007666:	bf48      	it	mi
 8007668:	58d3      	ldrmi	r3, [r2, r3]
 800766a:	4718      	bx	r3

0800766c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800766c:	6843      	ldr	r3, [r0, #4]
 800766e:	b12b      	cbz	r3, 800767c <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007670:	6883      	ldr	r3, [r0, #8]
 8007672:	b92b      	cbnz	r3, 8007680 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007674:	68c0      	ldr	r0, [r0, #12]
 8007676:	f000 0001 	and.w	r0, r0, #1
 800767a:	4770      	bx	lr
 800767c:	4618      	mov	r0, r3
 800767e:	4770      	bx	lr
 8007680:	2001      	movs	r0, #1
    }
 8007682:	4770      	bx	lr

08007684 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007684:	b510      	push	{r4, lr}
 8007686:	2110      	movs	r1, #16
 8007688:	4604      	mov	r4, r0
 800768a:	f023 f956 	bl	802a93a <_ZdlPvj>
 800768e:	4620      	mov	r0, r4
 8007690:	bd10      	pop	{r4, pc}
	...

08007694 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8007694:	b510      	push	{r4, lr}
 8007696:	4b03      	ldr	r3, [pc, #12]	; (80076a4 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8007698:	6003      	str	r3, [r0, #0]
 800769a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800769c:	f00d fb96 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076a0:	4620      	mov	r0, r4
 80076a2:	bd10      	pop	{r4, pc}
 80076a4:	0802e858 	.word	0x0802e858

080076a8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 80076a8:	b507      	push	{r0, r1, r2, lr}
 80076aa:	4b07      	ldr	r3, [pc, #28]	; (80076c8 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 80076ac:	6003      	str	r3, [r0, #0]
 80076ae:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80076b0:	f00d fb8c 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80076b4:	9801      	ldr	r0, [sp, #4]
 80076b6:	f241 31f8 	movw	r1, #5112	; 0x13f8
 80076ba:	f023 f93e 	bl	802a93a <_ZdlPvj>
 80076be:	9801      	ldr	r0, [sp, #4]
 80076c0:	b003      	add	sp, #12
 80076c2:	f85d fb04 	ldr.w	pc, [sp], #4
 80076c6:	bf00      	nop
 80076c8:	0802e858 	.word	0x0802e858

080076cc <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 80076cc:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 80076ce:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 80076d2:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 80076d6:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80076d8:	2a05      	cmp	r2, #5
    frameCountInteraction2Interval++;
 80076da:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 80076de:	d105      	bne.n	80076ec <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 80076e0:	6803      	ldr	r3, [r0, #0]
 80076e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80076e4:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 80076e6:	2300      	movs	r3, #0
 80076e8:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 80076ec:	bd10      	pop	{r4, pc}

080076ee <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 80076ee:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 80076f2:	4288      	cmp	r0, r1
{
 80076f4:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80076f6:	d105      	bne.n	8007704 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80076f8:	f00f f86a 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
}
 80076fc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007700:	f7fd b920 	b.w	8004944 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007704:	bd08      	pop	{r3, pc}
	...

08007708 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8007708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800770c:	ed2d 8b0a 	vpush	{d8-d12}
 8007710:	4604      	mov	r4, r0
 8007712:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8007714:	46a3      	mov	fp, r4
 8007716:	2500      	movs	r5, #0
 8007718:	f010 fcda 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 800771c:	4baa      	ldr	r3, [pc, #680]	; (80079c8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 800771e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007720:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007724:	2226      	movs	r2, #38	; 0x26
 8007726:	4629      	mov	r1, r5
 8007728:	4658      	mov	r0, fp
 800772a:	f024 f91e 	bl	802b96a <memset>
 800772e:	4658      	mov	r0, fp
 8007730:	f7fb f938 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8007734:	f104 066c 	add.w	r6, r4, #108	; 0x6c
 8007738:	27ff      	movs	r7, #255	; 0xff
 800773a:	4ba4      	ldr	r3, [pc, #656]	; (80079cc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 800773c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800773e:	2226      	movs	r2, #38	; 0x26
 8007740:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007744:	4629      	mov	r1, r5
 8007746:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
 800774a:	4630      	mov	r0, r6
 800774c:	66a5      	str	r5, [r4, #104]	; 0x68
 800774e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007752:	f024 f90a 	bl	802b96a <memset>
 8007756:	4630      	mov	r0, r6
 8007758:	f7fb f924 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 800775c:	4b9c      	ldr	r3, [pc, #624]	; (80079d0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
 800775e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007760:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007764:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007768:	a90a      	add	r1, sp, #40	; 0x28
 800776a:	4630      	mov	r0, r6
        : Widget(), bitmap(bmp), alpha(255)
 800776c:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007770:	f00c fb2f 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007774:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8007778:	f104 08e0 	add.w	r8, r4, #224	; 0xe0
 800777c:	4618      	mov	r0, r3
 800777e:	ee09 3a10 	vmov	s18, r3
 8007782:	f504 7920 	add.w	r9, r4, #640	; 0x280
 8007786:	f7fb f971 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 800778a:	4640      	mov	r0, r8
 800778c:	f00b ffe4 	bl	8013758 <_ZN8touchgfx5GaugeC1Ev>
        : TextArea()
 8007790:	4648      	mov	r0, r9
 8007792:	f7fb f96b 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8007796:	4f8f      	ldr	r7, [pc, #572]	; (80079d4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8007798:	f8c4 7280 	str.w	r7, [r4, #640]	; 0x280
 800779c:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextArea()
 80077a0:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80077a2:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 80077a6:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 80077aa:	f7fb f95f 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80077ae:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 80077b2:	f8c4 72cc 	str.w	r7, [r4, #716]	; 0x2cc
        : TextArea()
 80077b6:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 80077b8:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 80077bc:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 80077c0:	f7fb f954 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80077c4:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 80077c8:	f8c4 7318 	str.w	r7, [r4, #792]	; 0x318
 80077cc:	4618      	mov	r0, r3
 80077ce:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 80077d2:	ee0a 3a90 	vmov	s21, r3
 80077d6:	f7fb f949 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80077da:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 80077de:	4618      	mov	r0, r3
 80077e0:	ee0b 3a10 	vmov	s22, r3
 80077e4:	f7fb f942 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80077e8:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 80077ec:	4618      	mov	r0, r3
 80077ee:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 80077f2:	ee0b 3a90 	vmov	s23, r3
 80077f6:	f7fb f939 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80077fa:	4650      	mov	r0, sl
 80077fc:	f00a ffdc 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8007800:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007804:	4618      	mov	r0, r3
 8007806:	9302      	str	r3, [sp, #8]
 8007808:	f7fa fed0 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800780c:	4b72      	ldr	r3, [pc, #456]	; (80079d8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 800780e:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8007812:	3324      	adds	r3, #36	; 0x24
 8007814:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8007818:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 800781c:	4618      	mov	r0, r3
 800781e:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8007822:	ee08 3a10 	vmov	s16, r3
 8007826:	f7fb f921 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 800782a:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 800782e:	4618      	mov	r0, r3
 8007830:	ee08 3a90 	vmov	s17, r3
 8007834:	f7fb f91a 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8007838:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 800783c:	4618      	mov	r0, r3
 800783e:	ee0c 3a10 	vmov	s24, r3
 8007842:	f00c fbfd 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007846:	4a65      	ldr	r2, [pc, #404]	; (80079dc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8007848:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800784c:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8007850:	4a63      	ldr	r2, [pc, #396]	; (80079e0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007852:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8007856:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800785a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800785e:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 8007862:	f00d faa9 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007866:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800786a:	462a      	mov	r2, r5
 800786c:	4658      	mov	r0, fp
 800786e:	9300      	str	r3, [sp, #0]
 8007870:	4629      	mov	r1, r5
 8007872:	23f0      	movs	r3, #240	; 0xf0
 8007874:	f7fb f871 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007878:	1d27      	adds	r7, r4, #4
        color = newColor;
 800787a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800787e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007880:	4659      	mov	r1, fp
 8007882:	4638      	mov	r0, r7
 8007884:	f008 fecc 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007888:	462a      	mov	r2, r5
 800788a:	4630      	mov	r0, r6
 800788c:	4629      	mov	r1, r5
 800788e:	f7fb f857 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007892:	f04f 0308 	mov.w	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007896:	4630      	mov	r0, r6
 8007898:	a90a      	add	r1, sp, #40	; 0x28
 800789a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800789e:	f00c fa98 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80078a2:	4631      	mov	r1, r6
 80078a4:	4638      	mov	r0, r7
 80078a6:	f008 febb 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80078aa:	ae04      	add	r6, sp, #16
    textArea3.setXY(31, 60);
 80078ac:	223c      	movs	r2, #60	; 0x3c
 80078ae:	ee19 0a10 	vmov	r0, s18
 80078b2:	211f      	movs	r1, #31
        color = newColor;
 80078b4:	f04f 3bff 	mov.w	fp, #4294967295
 80078b8:	f7fb f842 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80078bc:	ee19 1a10 	vmov	r1, s18
 80078c0:	4630      	mov	r0, r6
        color = newColor;
 80078c2:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        linespace = space;
 80078c6:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80078ca:	f00b fa37 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078ce:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80078d2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80078d6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80078da:	4b42      	ldr	r3, [pc, #264]	; (80079e4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 80078dc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 80078de:	ee19 0a10 	vmov	r0, s18
 80078e2:	f04f 0335 	mov.w	r3, #53	; 0x35
 80078e6:	a90a      	add	r1, sp, #40	; 0x28
 80078e8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80078ec:	f00b fcc0 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078f0:	ee19 1a10 	vmov	r1, s18
 80078f4:	4638      	mov	r0, r7
 80078f6:	f008 fe93 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80078fa:	2304      	movs	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 80078fc:	4640      	mov	r0, r8
 80078fe:	a90a      	add	r1, sp, #40	; 0x28
 8007900:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007904:	f008 fe1e 	bl	8010544 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 8007908:	236a      	movs	r3, #106	; 0x6a
 800790a:	4640      	mov	r0, r8
 800790c:	9300      	str	r3, [sp, #0]
 800790e:	225e      	movs	r2, #94	; 0x5e
 8007910:	23b8      	movs	r3, #184	; 0xb8
 8007912:	211c      	movs	r1, #28
 8007914:	f7fb f821 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 8007918:	225c      	movs	r2, #92	; 0x5c
 800791a:	4611      	mov	r1, r2
 800791c:	4640      	mov	r0, r8
 800791e:	f00b ffc6 	bl	80138ae <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 8007922:	4640      	mov	r0, r8
 8007924:	225a      	movs	r2, #90	; 0x5a
 8007926:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800792a:	f00c f845 	bl	80139b8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 800792e:	462b      	mov	r3, r5
 8007930:	225a      	movs	r2, #90	; 0x5a
 8007932:	4640      	mov	r0, r8
 8007934:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8007938:	9500      	str	r5, [sp, #0]
 800793a:	f008 fcb0 	bl	801029e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 800793e:	4640      	mov	r0, r8
 8007940:	4629      	mov	r1, r5
 8007942:	f00b ffe3 	bl	801390c <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8007946:	2335      	movs	r3, #53	; 0x35
 8007948:	2208      	movs	r2, #8
 800794a:	4640      	mov	r0, r8
 800794c:	2105      	movs	r1, #5
 800794e:	f00b ff99 	bl	8013884 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8007952:	4640      	mov	r0, r8
 8007954:	2101      	movs	r1, #1
 8007956:	f00b ff37 	bl	80137c8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800795a:	4640      	mov	r0, r8
 800795c:	2101      	movs	r1, #1
 800795e:	f00b ff36 	bl	80137ce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007962:	4641      	mov	r1, r8
 8007964:	4638      	mov	r0, r7
 8007966:	f008 fe5b 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800796a:	230f      	movs	r3, #15
 800796c:	22e6      	movs	r2, #230	; 0xe6
 800796e:	9300      	str	r3, [sp, #0]
 8007970:	4629      	mov	r1, r5
 8007972:	23f0      	movs	r3, #240	; 0xf0
 8007974:	4648      	mov	r0, r9
 8007976:	f7fa fff0 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 800797a:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        color = newColor;
 800797e:	f8c4 b2b0 	str.w	fp, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007982:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007986:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800798a:	4649      	mov	r1, r9
 800798c:	4630      	mov	r0, r6
 800798e:	4798      	blx	r3
 8007990:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007994:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007998:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80079fc <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 800799c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 80079a0:	f504 63b3 	add.w	r3, r4, #1432	; 0x598
 80079a4:	9303      	str	r3, [sp, #12]
 80079a6:	f8d8 3000 	ldr.w	r3, [r8]
 80079aa:	b92b      	cbnz	r3, 80079b8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b0>
 80079ac:	4b0e      	ldr	r3, [pc, #56]	; (80079e8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 80079ae:	4a0f      	ldr	r2, [pc, #60]	; (80079ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80079b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80079b2:	480f      	ldr	r0, [pc, #60]	; (80079f0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 80079b4:	f023 fdd4 	bl	802b560 <__assert_func>
 80079b8:	4b0e      	ldr	r3, [pc, #56]	; (80079f4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 80079ba:	881b      	ldrh	r3, [r3, #0]
 80079bc:	2b15      	cmp	r3, #21
 80079be:	d81f      	bhi.n	8007a00 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f8>
 80079c0:	4b0d      	ldr	r3, [pc, #52]	; (80079f8 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>)
 80079c2:	4a0a      	ldr	r2, [pc, #40]	; (80079ec <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 80079c4:	2161      	movs	r1, #97	; 0x61
 80079c6:	e7f4      	b.n	80079b2 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 80079c8:	0802e858 	.word	0x0802e858
 80079cc:	0802f644 	.word	0x0802f644
 80079d0:	0802f890 	.word	0x0802f890
 80079d4:	0802d190 	.word	0x0802d190
 80079d8:	0802f378 	.word	0x0802f378
 80079dc:	0802e840 	.word	0x0802e840
 80079e0:	080076ef 	.word	0x080076ef
 80079e4:	0802d0f0 	.word	0x0802d0f0
 80079e8:	0802cf40 	.word	0x0802cf40
 80079ec:	0802d045 	.word	0x0802d045
 80079f0:	0802cfbd 	.word	0x0802cfbd
 80079f4:	20013848 	.word	0x20013848
 80079f8:	0802d004 	.word	0x0802d004
 80079fc:	20013844 	.word	0x20013844
        return texts->getText(typedTextId);
 8007a00:	4bdb      	ldr	r3, [pc, #876]	; (8007d70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007a02:	2115      	movs	r1, #21
 8007a04:	6818      	ldr	r0, [r3, #0]
 8007a06:	f000 ff9f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8007a0a:	4ada      	ldr	r2, [pc, #872]	; (8007d74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007a0c:	4603      	mov	r3, r0
 8007a0e:	210a      	movs	r1, #10
 8007a10:	9803      	ldr	r0, [sp, #12]
 8007a12:	f012 f88b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8007a16:	9903      	ldr	r1, [sp, #12]
        : typedTextId(id)
 8007a18:	4bd7      	ldr	r3, [pc, #860]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007a1a:	f8c4 12c8 	str.w	r1, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 8007a1e:	4648      	mov	r0, r9
 8007a20:	930a      	str	r3, [sp, #40]	; 0x28
 8007a22:	a90a      	add	r1, sp, #40	; 0x28
 8007a24:	2318      	movs	r3, #24
 8007a26:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007a2a:	f00b fc21 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007a2e:	4649      	mov	r1, r9
 8007a30:	4638      	mov	r0, r7
 8007a32:	f008 fdf5 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 8007a36:	210f      	movs	r1, #15
 8007a38:	22d7      	movs	r2, #215	; 0xd7
 8007a3a:	ee19 0a90 	vmov	r0, s19
 8007a3e:	9100      	str	r1, [sp, #0]
 8007a40:	23f0      	movs	r3, #240	; 0xf0
 8007a42:	4629      	mov	r1, r5
 8007a44:	f7fa ff89 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a48:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        color = newColor;
 8007a4c:	f8c4 b2fc 	str.w	fp, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007a50:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007a54:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        boundingArea = calculateBoundingArea();
 8007a58:	ee19 1a90 	vmov	r1, s19
 8007a5c:	4630      	mov	r0, r6
 8007a5e:	4798      	blx	r3
 8007a60:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007a64:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007a68:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007a6c:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007a70:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	d099      	beq.n	80079ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007a78:	49c0      	ldr	r1, [pc, #768]	; (8007d7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007a7a:	880b      	ldrh	r3, [r1, #0]
 8007a7c:	2b16      	cmp	r3, #22
 8007a7e:	d99f      	bls.n	80079c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007a80:	4abb      	ldr	r2, [pc, #748]	; (8007d70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007a82:	2116      	movs	r1, #22
 8007a84:	6810      	ldr	r0, [r2, #0]
 8007a86:	f000 ff5f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8007a8a:	4aba      	ldr	r2, [pc, #744]	; (8007d74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007a8c:	4603      	mov	r3, r0
 8007a8e:	210a      	movs	r1, #10
 8007a90:	4648      	mov	r0, r9
 8007a92:	f012 f84b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007a96:	4bb8      	ldr	r3, [pc, #736]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007a98:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007a9c:	a80a      	add	r0, sp, #40	; 0x28
 8007a9e:	4601      	mov	r1, r0
 8007aa0:	930a      	str	r3, [sp, #40]	; 0x28
 8007aa2:	ee19 0a90 	vmov	r0, s19
 8007aa6:	2319      	movs	r3, #25
 8007aa8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007aac:	f00b fbe0 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ab0:	ee19 1a90 	vmov	r1, s19
 8007ab4:	4638      	mov	r0, r7
 8007ab6:	f008 fdb3 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007aba:	200f      	movs	r0, #15
 8007abc:	22c8      	movs	r2, #200	; 0xc8
 8007abe:	9000      	str	r0, [sp, #0]
 8007ac0:	23f0      	movs	r3, #240	; 0xf0
 8007ac2:	ee1a 0a10 	vmov	r0, s20
 8007ac6:	4629      	mov	r1, r5
 8007ac8:	f7fa ff47 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007acc:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        color = newColor;
 8007ad0:	f8c4 b348 	str.w	fp, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007ad4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8007ad8:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 8007adc:	ee1a 1a10 	vmov	r1, s20
 8007ae0:	4630      	mov	r0, r6
 8007ae2:	4798      	blx	r3
 8007ae4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007ae8:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007aec:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007af0:	f8d8 3000 	ldr.w	r3, [r8]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 8007af4:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 8007af8:	2b00      	cmp	r3, #0
 8007afa:	f43f af57 	beq.w	80079ac <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007afe:	499f      	ldr	r1, [pc, #636]	; (8007d7c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 8007b00:	880b      	ldrh	r3, [r1, #0]
 8007b02:	2b17      	cmp	r3, #23
 8007b04:	f67f af5c 	bls.w	80079c0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b8>
        return texts->getText(typedTextId);
 8007b08:	4a99      	ldr	r2, [pc, #612]	; (8007d70 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x668>)
 8007b0a:	2117      	movs	r1, #23
 8007b0c:	6810      	ldr	r0, [r2, #0]
 8007b0e:	f000 ff1b 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8007b12:	4a98      	ldr	r2, [pc, #608]	; (8007d74 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x66c>)
 8007b14:	4603      	mov	r3, r0
 8007b16:	210a      	movs	r1, #10
 8007b18:	4648      	mov	r0, r9
 8007b1a:	f012 f807 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8007b1e:	4b96      	ldr	r3, [pc, #600]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007b20:	930a      	str	r3, [sp, #40]	; 0x28
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 8007b22:	ee1a 0a10 	vmov	r0, s20
 8007b26:	231a      	movs	r3, #26
 8007b28:	a90a      	add	r1, sp, #40	; 0x28
 8007b2a:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 8007b2e:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b32:	f00b fb9d 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b36:	ee1a 1a10 	vmov	r1, s20
 8007b3a:	4638      	mov	r0, r7
 8007b3c:	f008 fd70 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 8007b40:	224c      	movs	r2, #76	; 0x4c
 8007b42:	ee1a 0a90 	vmov	r0, s21
 8007b46:	2171      	movs	r1, #113	; 0x71
 8007b48:	f7fa fefa 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007b4c:	ee1a 1a90 	vmov	r1, s21
 8007b50:	4630      	mov	r0, r6
        color = newColor;
 8007b52:	f8c4 b394 	str.w	fp, [r4, #916]	; 0x394
        linespace = space;
 8007b56:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007b5a:	f00b f8ef 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b5e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007b62:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007b66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b6a:	4b83      	ldr	r3, [pc, #524]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007b6c:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 8007b6e:	ee1a 0a90 	vmov	r0, s21
 8007b72:	231b      	movs	r3, #27
 8007b74:	a90a      	add	r1, sp, #40	; 0x28
 8007b76:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b7a:	f00b fb79 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b7e:	ee1a 1a90 	vmov	r1, s21
 8007b82:	4638      	mov	r0, r7
 8007b84:	f008 fd4c 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007b88:	22b9      	movs	r2, #185	; 0xb9
 8007b8a:	ee1b 0a10 	vmov	r0, s22
 8007b8e:	4629      	mov	r1, r5
 8007b90:	f7fa fed6 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007b94:	ee1b 1a10 	vmov	r1, s22
 8007b98:	4630      	mov	r0, r6
        color = newColor;
 8007b9a:	f8c4 b3dc 	str.w	fp, [r4, #988]	; 0x3dc
        linespace = space;
 8007b9e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007ba2:	f00b f8cb 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ba6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007baa:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 8007bae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bb2:	4b71      	ldr	r3, [pc, #452]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007bb4:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007bb6:	ee1b 0a10 	vmov	r0, s22
 8007bba:	231c      	movs	r3, #28
 8007bbc:	a90a      	add	r1, sp, #40	; 0x28
 8007bbe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007bc2:	f00b fb55 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007bc6:	ee1b 1a10 	vmov	r1, s22
 8007bca:	4638      	mov	r0, r7
 8007bcc:	f008 fd28 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 8007bd0:	22b9      	movs	r2, #185	; 0xb9
 8007bd2:	ee1b 0a90 	vmov	r0, s23
 8007bd6:	21d9      	movs	r1, #217	; 0xd9
 8007bd8:	f7fa feb2 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007bdc:	ee1b 1a90 	vmov	r1, s23
 8007be0:	4630      	mov	r0, r6
        color = newColor;
 8007be2:	f8c4 b424 	str.w	fp, [r4, #1060]	; 0x424
        linespace = space;
 8007be6:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 8007bea:	f00b f8a7 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8007bf2:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 8007bf6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007bfa:	4b5f      	ldr	r3, [pc, #380]	; (8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>)
 8007bfc:	930a      	str	r3, [sp, #40]	; 0x28
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 8007bfe:	ee1b 0a90 	vmov	r0, s23
 8007c02:	231d      	movs	r3, #29
 8007c04:	a90a      	add	r1, sp, #40	; 0x28
 8007c06:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c0a:	f00b fb31 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c0e:	ee1b 1a90 	vmov	r1, s23
 8007c12:	4638      	mov	r0, r7
 8007c14:	f008 fd04 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007c18:	230a      	movs	r3, #10
 8007c1a:	9300      	str	r3, [sp, #0]
 8007c1c:	2232      	movs	r2, #50	; 0x32
 8007c1e:	23f0      	movs	r3, #240	; 0xf0
 8007c20:	4629      	mov	r1, r5
 8007c22:	4650      	mov	r0, sl
 8007c24:	f7fa fe99 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007c28:	9b02      	ldr	r3, [sp, #8]
 8007c2a:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c2e:	22a0      	movs	r2, #160	; 0xa0
 8007c30:	4611      	mov	r1, r2
 8007c32:	4650      	mov	r0, sl
 8007c34:	f8c4 b4b8 	str.w	fp, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007c38:	f8a4 b4bc 	strh.w	fp, [r4, #1212]	; 0x4bc
 8007c3c:	f00a fed2 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007c40:	22a0      	movs	r2, #160	; 0xa0
 8007c42:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007c46:	4650      	mov	r0, sl
 8007c48:	f00a fed7 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007c4c:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007c50:	2b20      	cmp	r3, #32
 8007c52:	d005      	beq.n	8007c60 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x558>
        lineWidthQ5 = widthQ5;
 8007c54:	2320      	movs	r3, #32
 8007c56:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 8007c5a:	4650      	mov	r0, sl
 8007c5c:	f00a fdcc 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007c60:	4650      	mov	r0, sl
 8007c62:	2101      	movs	r1, #1
 8007c64:	f00a fed4 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007c68:	4651      	mov	r1, sl
 8007c6a:	4638      	mov	r0, r7
 8007c6c:	f008 fcd8 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007c70:	f04f 36ff 	mov.w	r6, #4294967295
        boundingArea = calculateBoundingArea();
 8007c74:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 8007c76:	ee18 0a10 	vmov	r0, s16
 8007c7a:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007c7c:	f04f 0900 	mov.w	r9, #0
 8007c80:	2145      	movs	r1, #69	; 0x45
 8007c82:	f7fa fe5d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007c86:	ee18 1a10 	vmov	r1, s16
 8007c8a:	4628      	mov	r0, r5
        color = newColor;
 8007c8c:	f8c4 64f0 	str.w	r6, [r4, #1264]	; 0x4f0
        linespace = space;
 8007c90:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007c94:	f00b f852 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c98:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c9c:	ee18 3a10 	vmov	r3, s16
 8007ca0:	333c      	adds	r3, #60	; 0x3c
 8007ca2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007ca6:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8007d78 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x670>
 8007caa:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007cae:	233c      	movs	r3, #60	; 0x3c
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007cb0:	ee18 0a10 	vmov	r0, s16
 8007cb4:	a90a      	add	r1, sp, #40	; 0x28
 8007cb6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007cba:	f00b fad9 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007cbe:	ee18 1a10 	vmov	r1, s16
 8007cc2:	4638      	mov	r0, r7
 8007cc4:	f008 fcac 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007cc8:	ee18 0a90 	vmov	r0, s17
 8007ccc:	220c      	movs	r2, #12
 8007cce:	2136      	movs	r1, #54	; 0x36
 8007cd0:	f7fa fe36 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007cd4:	ee18 1a90 	vmov	r1, s17
 8007cd8:	4628      	mov	r0, r5
        color = newColor;
 8007cda:	f8c4 6538 	str.w	r6, [r4, #1336]	; 0x538
        linespace = space;
 8007cde:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007ce2:	f00b f82b 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007ce6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007cea:	ee18 3a90 	vmov	r3, s17
 8007cee:	333c      	adds	r3, #60	; 0x3c
 8007cf0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007cf4:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 8007cf6:	ee18 0a90 	vmov	r0, s17
 8007cfa:	a90a      	add	r1, sp, #40	; 0x28
 8007cfc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007d00:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007d04:	f00b fab4 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007d08:	ee18 1a90 	vmov	r1, s17
 8007d0c:	4638      	mov	r0, r7
 8007d0e:	f008 fc87 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 8007d12:	ee1c 0a10 	vmov	r0, s24
 8007d16:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007d1a:	2121      	movs	r1, #33	; 0x21
 8007d1c:	f7fa fe10 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007d20:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007d22:	aa0a      	add	r2, sp, #40	; 0x28
 8007d24:	a909      	add	r1, sp, #36	; 0x24
 8007d26:	ee1c 0a10 	vmov	r0, s24
 8007d2a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007d2e:	2302      	movs	r3, #2
 8007d30:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007d34:	f00b fe57 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007d38:	233a      	movs	r3, #58	; 0x3a
        updateTextPosition();
 8007d3a:	ee1c 0a10 	vmov	r0, s24
 8007d3e:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 8007d42:	f7fa fe41 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8007d46:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 8007d4a:	3304      	adds	r3, #4
 8007d4c:	4638      	mov	r0, r7
 8007d4e:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007d52:	f8c4 658c 	str.w	r6, [r4, #1420]	; 0x58c
        colorPressed = col;
 8007d56:	f8c4 6590 	str.w	r6, [r4, #1424]	; 0x590
 8007d5a:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007d5e:	f008 fc5f 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007d62:	4620      	mov	r0, r4
 8007d64:	b00d      	add	sp, #52	; 0x34
 8007d66:	ecbd 8b0a 	vpop	{d8-d12}
 8007d6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007d6e:	bf00      	nop
 8007d70:	20013850 	.word	0x20013850
 8007d74:	0802d07d 	.word	0x0802d07d
 8007d78:	0802d0f0 	.word	0x0802d0f0
 8007d7c:	20013848 	.word	0x20013848

08007d80 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{

}
 8007d80:	4770      	bx	lr

08007d82 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007d82:	4770      	bx	lr

08007d84 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007d84:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d86:	68c2      	ldr	r2, [r0, #12]
 8007d88:	6844      	ldr	r4, [r0, #4]
 8007d8a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8007d8c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8007d8e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007d92:	07d2      	lsls	r2, r2, #31
 8007d94:	bf48      	it	mi
 8007d96:	5962      	ldrmi	r2, [r4, r5]
 8007d98:	689b      	ldr	r3, [r3, #8]
    }
 8007d9a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007d9c:	bf48      	it	mi
 8007d9e:	58d3      	ldrmi	r3, [r2, r3]
 8007da0:	4718      	bx	r3

08007da2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007da2:	6843      	ldr	r3, [r0, #4]
 8007da4:	b12b      	cbz	r3, 8007db2 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007da6:	6883      	ldr	r3, [r0, #8]
 8007da8:	b92b      	cbnz	r3, 8007db6 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007daa:	68c0      	ldr	r0, [r0, #12]
 8007dac:	f000 0001 	and.w	r0, r0, #1
 8007db0:	4770      	bx	lr
 8007db2:	4618      	mov	r0, r3
 8007db4:	4770      	bx	lr
 8007db6:	2001      	movs	r0, #1
    }
 8007db8:	4770      	bx	lr

08007dba <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007dba:	b510      	push	{r4, lr}
 8007dbc:	2110      	movs	r1, #16
 8007dbe:	4604      	mov	r4, r0
 8007dc0:	f022 fdbb 	bl	802a93a <_ZdlPvj>
 8007dc4:	4620      	mov	r0, r4
 8007dc6:	bd10      	pop	{r4, pc}

08007dc8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007dc8:	b510      	push	{r4, lr}
 8007dca:	4b03      	ldr	r3, [pc, #12]	; (8007dd8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x10>)
 8007dcc:	6003      	str	r3, [r0, #0]
 8007dce:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007dd0:	f00c fffc 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007dd4:	4620      	mov	r0, r4
 8007dd6:	bd10      	pop	{r4, pc}
 8007dd8:	0802e8a8 	.word	0x0802e8a8

08007ddc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007ddc:	b507      	push	{r0, r1, r2, lr}
 8007dde:	4b07      	ldr	r3, [pc, #28]	; (8007dfc <_ZN37Measurement_Single_Display_3PViewBaseD0Ev+0x20>)
 8007de0:	6003      	str	r3, [r0, #0]
 8007de2:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007de4:	f00c fff2 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007de8:	9801      	ldr	r0, [sp, #4]
 8007dea:	f241 015c 	movw	r1, #4188	; 0x105c
 8007dee:	f022 fda4 	bl	802a93a <_ZdlPvj>
 8007df2:	9801      	ldr	r0, [sp, #4]
 8007df4:	b003      	add	sp, #12
 8007df6:	f85d fb04 	ldr.w	pc, [sp], #4
 8007dfa:	bf00      	nop
 8007dfc:	0802e8a8 	.word	0x0802e8a8

08007e00 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007e00:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007e04:	4288      	cmp	r0, r1
{
 8007e06:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007e08:	d105      	bne.n	8007e16 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007e0a:	f00e fce1 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 8007e0e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007e12:	f7fc bd97 	b.w	8004944 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007e16:	bd08      	pop	{r3, pc}

08007e18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 8007e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007e1c:	ed2d 8b02 	vpush	{d8}
 8007e20:	4604      	mov	r4, r0
 8007e22:	b08d      	sub	sp, #52	; 0x34
 8007e24:	f010 f954 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 8007e28:	4622      	mov	r2, r4
 8007e2a:	2500      	movs	r5, #0
 8007e2c:	4ba4      	ldr	r3, [pc, #656]	; (80080c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2a8>)
 8007e2e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007e30:	f842 3b40 	str.w	r3, [r2], #64
 8007e34:	ee08 2a10 	vmov	s16, r2
        : Widget(), alpha(255), color(0)
 8007e38:	4629      	mov	r1, r5
 8007e3a:	2226      	movs	r2, #38	; 0x26
 8007e3c:	ee18 0a10 	vmov	r0, s16
 8007e40:	f023 fd93 	bl	802b96a <memset>
 8007e44:	ee18 0a10 	vmov	r0, s16
 8007e48:	f7fa fdac 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8007e4c:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8007e50:	26ff      	movs	r6, #255	; 0xff
 8007e52:	4b9c      	ldr	r3, [pc, #624]	; (80080c4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2ac>)
 8007e54:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007e56:	2226      	movs	r2, #38	; 0x26
 8007e58:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007e5c:	4629      	mov	r1, r5
 8007e5e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8007e62:	66a5      	str	r5, [r4, #104]	; 0x68
 8007e64:	4658      	mov	r0, fp
 8007e66:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007e6a:	f023 fd7e 	bl	802b96a <memset>
 8007e6e:	4658      	mov	r0, fp
 8007e70:	f7fa fd98 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 8007e74:	4b94      	ldr	r3, [pc, #592]	; (80080c8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b0>)
 8007e76:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007e78:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007e7c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007e80:	a90a      	add	r1, sp, #40	; 0x28
 8007e82:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8007e86:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007e8a:	4658      	mov	r0, fp
 8007e8c:	f00b ffa1 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007e90:	4638      	mov	r0, r7
 8007e92:	f00a fc91 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 8007e96:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007e9a:	4618      	mov	r0, r3
 8007e9c:	9303      	str	r3, [sp, #12]
 8007e9e:	f7fa fb85 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8007ea2:	4b8a      	ldr	r3, [pc, #552]	; (80080cc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b4>)
 8007ea4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007ea8:	f504 7a8e 	add.w	sl, r4, #284	; 0x11c
 8007eac:	3324      	adds	r3, #36	; 0x24
 8007eae:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 8007eb2:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8007eb6:	4650      	mov	r0, sl
 8007eb8:	f504 79b2 	add.w	r9, r4, #356	; 0x164
 8007ebc:	f7fa fdd6 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8007ec0:	f504 78d6 	add.w	r8, r4, #428	; 0x1ac
 8007ec4:	4648      	mov	r0, r9
 8007ec6:	f7fa fdd1 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8007eca:	4640      	mov	r0, r8
 8007ecc:	f7fa fdce 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8007ed0:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007ed4:	4618      	mov	r0, r3
 8007ed6:	ee08 3a90 	vmov	s17, r3
 8007eda:	f00c f8b1 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007ede:	4a7c      	ldr	r2, [pc, #496]	; (80080d0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2b8>)
 8007ee0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007ee4:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8007ee8:	4a7a      	ldr	r2, [pc, #488]	; (80080d4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2bc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007eea:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007eee:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8007ef2:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8007ef6:	f00c ff5f 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007efa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007efe:	462a      	mov	r2, r5
 8007f00:	ee18 0a10 	vmov	r0, s16
 8007f04:	9300      	str	r3, [sp, #0]
 8007f06:	4629      	mov	r1, r5
 8007f08:	23f0      	movs	r3, #240	; 0xf0
 8007f0a:	f7fa fd26 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f0e:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007f10:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007f14:	66a3      	str	r3, [r4, #104]	; 0x68
 8007f16:	ee18 1a10 	vmov	r1, s16
 8007f1a:	4630      	mov	r0, r6
 8007f1c:	f008 fb80 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007f20:	462a      	mov	r2, r5
 8007f22:	4629      	mov	r1, r5
 8007f24:	4658      	mov	r0, fp
 8007f26:	f7fa fd0b 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007f2a:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007f2c:	a90a      	add	r1, sp, #40	; 0x28
 8007f2e:	4658      	mov	r0, fp
 8007f30:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007f34:	f00b ff4d 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007f38:	4659      	mov	r1, fp
 8007f3a:	4630      	mov	r0, r6
 8007f3c:	f008 fb70 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007f40:	230a      	movs	r3, #10
 8007f42:	9300      	str	r3, [sp, #0]
 8007f44:	2232      	movs	r2, #50	; 0x32
 8007f46:	23f0      	movs	r3, #240	; 0xf0
 8007f48:	4629      	mov	r1, r5
 8007f4a:	4638      	mov	r0, r7
 8007f4c:	f7fa fd05 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8007f50:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f54:	22a0      	movs	r2, #160	; 0xa0
 8007f56:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007f5a:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007f5e:	9b03      	ldr	r3, [sp, #12]
 8007f60:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8007f64:	4611      	mov	r1, r2
 8007f66:	4638      	mov	r0, r7
 8007f68:	f00a fd3c 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007f6c:	22a0      	movs	r2, #160	; 0xa0
 8007f6e:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007f72:	4638      	mov	r0, r7
 8007f74:	f00a fd41 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007f78:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007f7c:	2b20      	cmp	r3, #32
 8007f7e:	d005      	beq.n	8007f8c <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x174>
        lineWidthQ5 = widthQ5;
 8007f80:	2320      	movs	r3, #32
 8007f82:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 8007f86:	4638      	mov	r0, r7
 8007f88:	f00a fc36 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007f8c:	4638      	mov	r0, r7
 8007f8e:	2101      	movs	r1, #1
 8007f90:	f00a fd3e 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007f94:	4639      	mov	r1, r7
 8007f96:	4630      	mov	r0, r6
 8007f98:	f008 fb42 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007f9c:	ad04      	add	r5, sp, #16
        color = newColor;
 8007f9e:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007fa2:	f04f 0b00 	mov.w	fp, #0
    textArea2.setXY(69, 35);
 8007fa6:	2223      	movs	r2, #35	; 0x23
 8007fa8:	4650      	mov	r0, sl
 8007faa:	2145      	movs	r1, #69	; 0x45
 8007fac:	f7fa fcc8 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007fb0:	4651      	mov	r1, sl
 8007fb2:	4628      	mov	r0, r5
        color = newColor;
 8007fb4:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 8007fb8:	f8a4 b150 	strh.w	fp, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007fbc:	f00a febe 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007fc0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007fc4:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8007fc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007fcc:	4b42      	ldr	r3, [pc, #264]	; (80080d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 8007fce:	930a      	str	r3, [sp, #40]	; 0x28
 8007fd0:	223f      	movs	r2, #63	; 0x3f
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 8007fd2:	a90a      	add	r1, sp, #40	; 0x28
 8007fd4:	4650      	mov	r0, sl
 8007fd6:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8007fda:	f00b f949 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007fde:	4651      	mov	r1, sl
 8007fe0:	4630      	mov	r0, r6
 8007fe2:	f008 fb1d 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007fe6:	223c      	movs	r2, #60	; 0x3c
 8007fe8:	4648      	mov	r0, r9
 8007fea:	211f      	movs	r1, #31
 8007fec:	f7fa fca8 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8007ff0:	4649      	mov	r1, r9
 8007ff2:	4628      	mov	r0, r5
        color = newColor;
 8007ff4:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 8007ff8:	f8a4 b198 	strh.w	fp, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 8007ffc:	f00a fe9e 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008000:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008004:	f109 0c3c 	add.w	ip, r9, #60	; 0x3c
 8008008:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 800800c:	4b32      	ldr	r3, [pc, #200]	; (80080d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800800e:	930a      	str	r3, [sp, #40]	; 0x28
 8008010:	2234      	movs	r2, #52	; 0x34
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 8008012:	a90a      	add	r1, sp, #40	; 0x28
 8008014:	4648      	mov	r0, r9
 8008016:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800801a:	f00b f929 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800801e:	4649      	mov	r1, r9
 8008020:	4630      	mov	r0, r6
 8008022:	f008 fafd 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8008026:	220c      	movs	r2, #12
 8008028:	4640      	mov	r0, r8
 800802a:	2136      	movs	r1, #54	; 0x36
 800802c:	f7fa fc88 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8008030:	4641      	mov	r1, r8
 8008032:	4628      	mov	r0, r5
        color = newColor;
 8008034:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8008038:	f8a4 b1e0 	strh.w	fp, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800803c:	f00a fe7e 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008040:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008044:	f108 0c3c 	add.w	ip, r8, #60	; 0x3c
 8008048:	4b23      	ldr	r3, [pc, #140]	; (80080d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2c0>)
 800804a:	930a      	str	r3, [sp, #40]	; 0x28
 800804c:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8008050:	233e      	movs	r3, #62	; 0x3e
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 8008052:	a90a      	add	r1, sp, #40	; 0x28
 8008054:	4640      	mov	r0, r8
 8008056:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800805a:	f00b f909 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800805e:	4641      	mov	r1, r8
 8008060:	4630      	mov	r0, r6
 8008062:	f008 fadd 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8008066:	ee18 0a90 	vmov	r0, s17
 800806a:	f240 1201 	movw	r2, #257	; 0x101
 800806e:	2121      	movs	r1, #33	; 0x21
 8008070:	f7fa fc66 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8008074:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8008076:	aa0a      	add	r2, sp, #40	; 0x28
 8008078:	a909      	add	r1, sp, #36	; 0x24
 800807a:	ee18 0a90 	vmov	r0, s17
 800807e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8008082:	2302      	movs	r3, #2
 8008084:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8008088:	f00b fcad 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800808c:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 800808e:	ee18 0a90 	vmov	r0, s17
 8008092:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 8008096:	f7fa fc97 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800809a:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 800809e:	330c      	adds	r3, #12
 80080a0:	4630      	mov	r0, r6
        colorPressed = col;
 80080a2:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 80080a6:	ee18 1a90 	vmov	r1, s17
 80080aa:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 80080ae:	f008 fab7 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80080b2:	4620      	mov	r0, r4
 80080b4:	b00d      	add	sp, #52	; 0x34
 80080b6:	ecbd 8b02 	vpop	{d8}
 80080ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080be:	bf00      	nop
 80080c0:	0802e8a8 	.word	0x0802e8a8
 80080c4:	0802f644 	.word	0x0802f644
 80080c8:	0802f890 	.word	0x0802f890
 80080cc:	0802f378 	.word	0x0802f378
 80080d0:	0802e890 	.word	0x0802e890
 80080d4:	08007e01 	.word	0x08007e01
 80080d8:	0802d0f0 	.word	0x0802d0f0

080080dc <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80080dc:	4770      	bx	lr

080080de <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80080de:	4770      	bx	lr

080080e0 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80080e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080e2:	68c2      	ldr	r2, [r0, #12]
 80080e4:	6844      	ldr	r4, [r0, #4]
 80080e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80080e8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80080ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80080ee:	07d2      	lsls	r2, r2, #31
 80080f0:	bf48      	it	mi
 80080f2:	5962      	ldrmi	r2, [r4, r5]
 80080f4:	689b      	ldr	r3, [r3, #8]
    }
 80080f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80080f8:	bf48      	it	mi
 80080fa:	58d3      	ldrmi	r3, [r2, r3]
 80080fc:	4718      	bx	r3

080080fe <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80080fe:	6843      	ldr	r3, [r0, #4]
 8008100:	b12b      	cbz	r3, 800810e <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8008102:	6883      	ldr	r3, [r0, #8]
 8008104:	b92b      	cbnz	r3, 8008112 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8008106:	68c0      	ldr	r0, [r0, #12]
 8008108:	f000 0001 	and.w	r0, r0, #1
 800810c:	4770      	bx	lr
 800810e:	4618      	mov	r0, r3
 8008110:	4770      	bx	lr
 8008112:	2001      	movs	r0, #1
    }
 8008114:	4770      	bx	lr

08008116 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8008116:	b510      	push	{r4, lr}
 8008118:	2110      	movs	r1, #16
 800811a:	4604      	mov	r4, r0
 800811c:	f022 fc0d 	bl	802a93a <_ZdlPvj>
 8008120:	4620      	mov	r0, r4
 8008122:	bd10      	pop	{r4, pc}

08008124 <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008124:	b510      	push	{r4, lr}
 8008126:	4b03      	ldr	r3, [pc, #12]	; (8008134 <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8008128:	6003      	str	r3, [r0, #0]
 800812a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800812c:	f00c fe4e 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008130:	4620      	mov	r0, r4
 8008132:	bd10      	pop	{r4, pc}
 8008134:	0802e8f4 	.word	0x0802e8f4

08008138 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8008138:	b507      	push	{r0, r1, r2, lr}
 800813a:	4b07      	ldr	r3, [pc, #28]	; (8008158 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 800813c:	6003      	str	r3, [r0, #0]
 800813e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8008140:	f00c fe44 	bl	8014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8008144:	9801      	ldr	r0, [sp, #4]
 8008146:	f241 01b0 	movw	r1, #4272	; 0x10b0
 800814a:	f022 fbf6 	bl	802a93a <_ZdlPvj>
 800814e:	9801      	ldr	r0, [sp, #4]
 8008150:	b003      	add	sp, #12
 8008152:	f85d fb04 	ldr.w	pc, [sp], #4
 8008156:	bf00      	nop
 8008158:	0802e8f4 	.word	0x0802e8f4

0800815c <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800815c:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8008160:	4288      	cmp	r0, r1
{
 8008162:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8008164:	d105      	bne.n	8008172 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8008166:	f00e fb33 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 800816a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 800816e:	f7fc bbb9 	b.w	80048e4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 8008172:	bd08      	pop	{r3, pc}

08008174 <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 8008174:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008178:	ed2d 8b04 	vpush	{d8-d9}
 800817c:	4604      	mov	r4, r0
 800817e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8008180:	46a3      	mov	fp, r4
 8008182:	2500      	movs	r5, #0
 8008184:	f00f ffa4 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8008188:	4bd1      	ldr	r3, [pc, #836]	; (80084d0 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 800818a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800818c:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8008190:	2226      	movs	r2, #38	; 0x26
 8008192:	4629      	mov	r1, r5
 8008194:	4658      	mov	r0, fp
 8008196:	f023 fbe8 	bl	802b96a <memset>
 800819a:	4658      	mov	r0, fp
 800819c:	f7fa fc02 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 80081a0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80081a4:	26ff      	movs	r6, #255	; 0xff
 80081a6:	4bcb      	ldr	r3, [pc, #812]	; (80084d4 <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 80081a8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80081aa:	2226      	movs	r2, #38	; 0x26
 80081ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80081b0:	4629      	mov	r1, r5
 80081b2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80081b6:	4650      	mov	r0, sl
 80081b8:	66a5      	str	r5, [r4, #104]	; 0x68
 80081ba:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80081be:	f023 fbd4 	bl	802b96a <memset>
 80081c2:	4650      	mov	r0, sl
 80081c4:	f7fa fbee 	bl	80029a4 <_ZN8touchgfx6WidgetC1Ev>
 80081c8:	4bc3      	ldr	r3, [pc, #780]	; (80084d8 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80081ca:	66e3      	str	r3, [r4, #108]	; 0x6c
 80081cc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80081d0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80081d4:	a90a      	add	r1, sp, #40	; 0x28
 80081d6:	4650      	mov	r0, sl
 80081d8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80081dc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80081e0:	f00b fdf7 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80081e4:	4648      	mov	r0, r9
 80081e6:	f7fa fc41 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 80081ea:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80081ee:	4bbb      	ldr	r3, [pc, #748]	; (80084dc <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80081f0:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80081f4:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80081f8:	4638      	mov	r0, r7
 80081fa:	f00a fadd 	bl	80127b8 <_ZN8touchgfx4LineC1Ev>
 80081fe:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8008202:	4618      	mov	r0, r3
 8008204:	9303      	str	r3, [sp, #12]
 8008206:	f7fa f9d1 	bl	80025ac <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800820a:	4bb5      	ldr	r3, [pc, #724]	; (80084e0 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 800820c:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8008210:	3324      	adds	r3, #36	; 0x24
 8008212:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8008216:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 800821a:	4618      	mov	r0, r3
 800821c:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8008220:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8008224:	ee09 3a10 	vmov	s18, r3
 8008228:	f00b ff0a 	bl	8014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800822c:	4640      	mov	r0, r8
 800822e:	f7fa fc1d 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8008232:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8008236:	4618      	mov	r0, r3
 8008238:	ee08 3a10 	vmov	s16, r3
 800823c:	f7fa fc16 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
 8008240:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8008244:	4618      	mov	r0, r3
 8008246:	ee08 3a90 	vmov	s17, r3
 800824a:	f7fa fc0f 	bl	8002a6c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800824e:	4aa5      	ldr	r2, [pc, #660]	; (80084e4 <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8008250:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8008254:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8008258:	4aa3      	ldr	r2, [pc, #652]	; (80084e8 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800825a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800825e:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8008262:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8008266:	f00c fda7 	bl	8014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800826a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800826e:	462a      	mov	r2, r5
 8008270:	4658      	mov	r0, fp
 8008272:	9300      	str	r3, [sp, #0]
 8008274:	4629      	mov	r1, r5
 8008276:	23f0      	movs	r3, #240	; 0xf0
 8008278:	f7fa fb6f 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 800827c:	1d26      	adds	r6, r4, #4
        color = newColor;
 800827e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008282:	66a3      	str	r3, [r4, #104]	; 0x68
 8008284:	4659      	mov	r1, fp
 8008286:	4630      	mov	r0, r6
 8008288:	f008 f9ca 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800828c:	462a      	mov	r2, r5
 800828e:	4650      	mov	r0, sl
 8008290:	4629      	mov	r1, r5
 8008292:	f7fa fb55 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8008296:	2308      	movs	r3, #8
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8008298:	4650      	mov	r0, sl
 800829a:	a90a      	add	r1, sp, #40	; 0x28
 800829c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80082a0:	f00b fd97 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80082a4:	4651      	mov	r1, sl
 80082a6:	4630      	mov	r0, r6
 80082a8:	f008 f9ba 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80082ac:	f44f 729a 	mov.w	r2, #308	; 0x134
 80082b0:	2156      	movs	r1, #86	; 0x56
 80082b2:	4648      	mov	r0, r9
 80082b4:	f7fa fb44 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80082b8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80082bc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80082c0:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80082c4:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80082c8:	4650      	mov	r0, sl
 80082ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80082ce:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80082d2:	4649      	mov	r1, r9
 80082d4:	4798      	blx	r3
 80082d6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80082da:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80082de:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80082e2:	4b82      	ldr	r3, [pc, #520]	; (80084ec <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 80082e4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 80082e6:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 80082ea:	b92b      	cbnz	r3, 80082f8 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 80082ec:	4b80      	ldr	r3, [pc, #512]	; (80084f0 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 80082ee:	4a81      	ldr	r2, [pc, #516]	; (80084f4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 80082f0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082f2:	4881      	ldr	r0, [pc, #516]	; (80084f8 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 80082f4:	f023 f934 	bl	802b560 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80082f8:	4b80      	ldr	r3, [pc, #512]	; (80084fc <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80082fa:	881b      	ldrh	r3, [r3, #0]
 80082fc:	2b22      	cmp	r3, #34	; 0x22
 80082fe:	d803      	bhi.n	8008308 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8008300:	4b7f      	ldr	r3, [pc, #508]	; (8008500 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8008302:	4a7c      	ldr	r2, [pc, #496]	; (80084f4 <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8008304:	2161      	movs	r1, #97	; 0x61
 8008306:	e7f4      	b.n	80082f2 <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8008308:	4b7e      	ldr	r3, [pc, #504]	; (8008504 <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 800830a:	2122      	movs	r1, #34	; 0x22
 800830c:	6818      	ldr	r0, [r3, #0]
 800830e:	f000 fb1b 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8008312:	4a7d      	ldr	r2, [pc, #500]	; (8008508 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8008314:	4603      	mov	r3, r0
 8008316:	2104      	movs	r1, #4
 8008318:	4650      	mov	r0, sl
 800831a:	f011 fc07 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 800831e:	4648      	mov	r0, r9
        wc1 = value;
 8008320:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8008324:	f00a ff84 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8008328:	4b78      	ldr	r3, [pc, #480]	; (800850c <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 800832a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 800832c:	a90a      	add	r1, sp, #40	; 0x28
 800832e:	2323      	movs	r3, #35	; 0x23
 8008330:	4648      	mov	r0, r9
 8008332:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008336:	f00a ff9b 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800833a:	4649      	mov	r1, r9
 800833c:	4630      	mov	r0, r6
 800833e:	f008 f96f 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8008342:	230a      	movs	r3, #10
 8008344:	9300      	str	r3, [sp, #0]
 8008346:	2232      	movs	r2, #50	; 0x32
 8008348:	23f0      	movs	r3, #240	; 0xf0
 800834a:	4629      	mov	r1, r5
 800834c:	4638      	mov	r0, r7
 800834e:	f7fa fb04 	bl	800295a <_ZN8touchgfx8Drawable11setPositionEssss>
 8008352:	9b03      	ldr	r3, [sp, #12]
 8008354:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8008358:	22a0      	movs	r2, #160	; 0xa0
 800835a:	4611      	mov	r1, r2
 800835c:	4638      	mov	r0, r7
 800835e:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8008362:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8008366:	f00a fb3d 	bl	80129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800836a:	22a0      	movs	r2, #160	; 0xa0
 800836c:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8008370:	4638      	mov	r0, r7
 8008372:	f00a fb42 	bl	80129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8008376:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 800837a:	2b20      	cmp	r3, #32
 800837c:	d005      	beq.n	800838a <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 800837e:	2320      	movs	r3, #32
 8008380:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8008384:	4638      	mov	r0, r7
 8008386:	f00a fa37 	bl	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800838a:	4638      	mov	r0, r7
 800838c:	2101      	movs	r1, #1
 800838e:	f00a fb3f 	bl	8012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8008392:	4639      	mov	r1, r7
 8008394:	4630      	mov	r0, r6
 8008396:	f008 f943 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 800839a:	ee19 0a10 	vmov	r0, s18
 800839e:	22f0      	movs	r2, #240	; 0xf0
 80083a0:	2121      	movs	r1, #33	; 0x21
 80083a2:	f7fa facd 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80083a6:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80083a8:	aa0a      	add	r2, sp, #40	; 0x28
 80083aa:	a909      	add	r1, sp, #36	; 0x24
 80083ac:	ee19 0a10 	vmov	r0, s18
 80083b0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80083b4:	2302      	movs	r3, #2
 80083b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80083ba:	f00b fb14 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80083be:	234a      	movs	r3, #74	; 0x4a
        updateTextPosition();
 80083c0:	ee19 0a10 	vmov	r0, s18
 80083c4:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 80083c8:	f7fa fafe 	bl	80029c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80083cc:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 80083d0:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 80083d4:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 80083d8:	ee19 1a10 	vmov	r1, s18
 80083dc:	4630      	mov	r0, r6
        colorPressed = col;
 80083de:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 80083e2:	ad04      	add	r5, sp, #16
 80083e4:	f008 f91c 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80083e8:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 80083ec:	225b      	movs	r2, #91	; 0x5b
 80083ee:	4640      	mov	r0, r8
 80083f0:	2105      	movs	r1, #5
 80083f2:	f7fa faa5 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80083f6:	4641      	mov	r1, r8
 80083f8:	4628      	mov	r0, r5
        color = newColor;
 80083fa:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 80083fe:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8008402:	f00a fc9b 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008406:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800840a:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800840e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8008412:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800850c <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8008416:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800841a:	234b      	movs	r3, #75	; 0x4b
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 800841c:	a90a      	add	r1, sp, #40	; 0x28
 800841e:	4640      	mov	r0, r8
 8008420:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008424:	f00a ff24 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008428:	4641      	mov	r1, r8
 800842a:	4630      	mov	r0, r6
 800842c:	f008 f8f8 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8008430:	ee18 0a10 	vmov	r0, s16
 8008434:	2223      	movs	r2, #35	; 0x23
 8008436:	2145      	movs	r1, #69	; 0x45
 8008438:	f7fa fa82 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 800843c:	ee18 1a10 	vmov	r1, s16
 8008440:	4628      	mov	r0, r5
        color = newColor;
 8008442:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8008446:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800844a:	f00a fc77 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800844e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8008452:	ee18 3a10 	vmov	r3, s16
 8008456:	333c      	adds	r3, #60	; 0x3c
 8008458:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800845c:	234d      	movs	r3, #77	; 0x4d
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 800845e:	ee18 0a10 	vmov	r0, s16
 8008462:	a90a      	add	r1, sp, #40	; 0x28
 8008464:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8008468:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800846c:	f00a ff00 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8008470:	ee18 1a10 	vmov	r1, s16
 8008474:	4630      	mov	r0, r6
 8008476:	f008 f8d3 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800847a:	ee18 0a90 	vmov	r0, s17
 800847e:	220c      	movs	r2, #12
 8008480:	2136      	movs	r1, #54	; 0x36
 8008482:	f7fa fa5d 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8008486:	ee18 1a90 	vmov	r1, s17
 800848a:	4628      	mov	r0, r5
        color = newColor;
 800848c:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8008490:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8008494:	f00a fc52 	bl	8012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8008498:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800849c:	ee18 3a90 	vmov	r3, s17
 80084a0:	333c      	adds	r3, #60	; 0x3c
 80084a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80084a6:	234c      	movs	r3, #76	; 0x4c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 80084a8:	ee18 0a90 	vmov	r0, s17
 80084ac:	a90a      	add	r1, sp, #40	; 0x28
 80084ae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80084b2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80084b6:	f00a fedb 	bl	8013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80084ba:	4630      	mov	r0, r6
 80084bc:	ee18 1a90 	vmov	r1, s17
 80084c0:	f008 f8ae 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80084c4:	4620      	mov	r0, r4
 80084c6:	b00d      	add	sp, #52	; 0x34
 80084c8:	ecbd 8b04 	vpop	{d8-d9}
 80084cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80084d0:	0802e8f4 	.word	0x0802e8f4
 80084d4:	0802f644 	.word	0x0802f644
 80084d8:	0802f890 	.word	0x0802f890
 80084dc:	0802d190 	.word	0x0802d190
 80084e0:	0802f378 	.word	0x0802f378
 80084e4:	0802e8dc 	.word	0x0802e8dc
 80084e8:	0800815d 	.word	0x0800815d
 80084ec:	20013844 	.word	0x20013844
 80084f0:	0802cf40 	.word	0x0802cf40
 80084f4:	0802d045 	.word	0x0802d045
 80084f8:	0802cfbd 	.word	0x0802cfbd
 80084fc:	20013848 	.word	0x20013848
 8008500:	0802d004 	.word	0x0802d004
 8008504:	20013850 	.word	0x20013850
 8008508:	0802d07d 	.word	0x0802d07d
 800850c:	0802d0f0 	.word	0x0802d0f0

08008510 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8008510:	4770      	bx	lr

08008512 <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8008512:	4770      	bx	lr

08008514 <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008514:	b510      	push	{r4, lr}
}
 8008516:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8008518:	4604      	mov	r4, r0
}
 800851a:	f022 fa0e 	bl	802a93a <_ZdlPvj>
 800851e:	4620      	mov	r0, r4
 8008520:	bd10      	pop	{r4, pc}
	...

08008524 <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8008524:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008528:	4604      	mov	r4, r0
 800852a:	4626      	mov	r6, r4
 800852c:	f00f fdd0 	bl	80180d0 <_ZN8touchgfx6ScreenC1Ev>
 8008530:	2500      	movs	r5, #0
 8008532:	4b2e      	ldr	r3, [pc, #184]	; (80085ec <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8008534:	63e5      	str	r5, [r4, #60]	; 0x3c
 8008536:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 800853a:	4b2d      	ldr	r3, [pc, #180]	; (80085f0 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 800853c:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 800853e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8008542:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008546:	23ff      	movs	r3, #255	; 0xff
 8008548:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800854c:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8008550:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8008554:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8008558:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 800855c:	4a25      	ldr	r2, [pc, #148]	; (80085f4 <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 800855e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8008562:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8008566:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8008568:	a901      	add	r1, sp, #4
 800856a:	4638      	mov	r0, r7
 800856c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8008570:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8008574:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8008578:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800857c:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8008580:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8008584:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8008588:	66a5      	str	r5, [r4, #104]	; 0x68
 800858a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800858e:	f00b fc20 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8008592:	462a      	mov	r2, r5
 8008594:	4629      	mov	r1, r5
 8008596:	4630      	mov	r0, r6
 8008598:	f7fa f9d2 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800859c:	4630      	mov	r0, r6
 800859e:	21f0      	movs	r1, #240	; 0xf0
 80085a0:	f7f9 ff50 	bl	8002444 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80085a4:	4630      	mov	r0, r6
 80085a6:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80085aa:	f7f9 ff4d 	bl	8002448 <_ZN8touchgfx8Drawable9setHeightEs>
 80085ae:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 80085b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80085b6:	66a3      	str	r3, [r4, #104]	; 0x68
 80085b8:	4631      	mov	r1, r6
 80085ba:	4640      	mov	r0, r8
 80085bc:	f008 f830 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 80085c0:	462a      	mov	r2, r5
 80085c2:	4638      	mov	r0, r7
 80085c4:	f06f 0102 	mvn.w	r1, #2
 80085c8:	f7fa f9ba 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80085cc:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 80085ce:	a901      	add	r1, sp, #4
 80085d0:	4638      	mov	r0, r7
 80085d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80085d6:	f00b fbfc 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80085da:	4640      	mov	r0, r8
 80085dc:	4639      	mov	r1, r7
 80085de:	f008 f81f 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80085e2:	4620      	mov	r0, r4
 80085e4:	b002      	add	sp, #8
 80085e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80085ea:	bf00      	nop
 80085ec:	0802e928 	.word	0x0802e928
 80085f0:	0802f644 	.word	0x0802f644
 80085f4:	0802f890 	.word	0x0802f890

080085f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80085f8:	4770      	bx	lr
	...

080085fc <_Z23getFont_verdana_10_4bppv>:
{
 80085fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80085fe:	4d17      	ldr	r5, [pc, #92]	; (800865c <_Z23getFont_verdana_10_4bppv+0x60>)
 8008600:	682c      	ldr	r4, [r5, #0]
 8008602:	f3bf 8f5b 	dmb	ish
 8008606:	f014 0401 	ands.w	r4, r4, #1
{
 800860a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800860c:	d122      	bne.n	8008654 <_Z23getFont_verdana_10_4bppv+0x58>
 800860e:	4628      	mov	r0, r5
 8008610:	f022 f995 	bl	802a93e <__cxa_guard_acquire>
 8008614:	b1f0      	cbz	r0, 8008654 <_Z23getFont_verdana_10_4bppv+0x58>
 8008616:	233f      	movs	r3, #63	; 0x3f
 8008618:	9309      	str	r3, [sp, #36]	; 0x24
 800861a:	4b11      	ldr	r3, [pc, #68]	; (8008660 <_Z23getFont_verdana_10_4bppv+0x64>)
 800861c:	9308      	str	r3, [sp, #32]
 800861e:	4b11      	ldr	r3, [pc, #68]	; (8008664 <_Z23getFont_verdana_10_4bppv+0x68>)
 8008620:	9307      	str	r3, [sp, #28]
 8008622:	2301      	movs	r3, #1
 8008624:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008628:	9304      	str	r3, [sp, #16]
 800862a:	2304      	movs	r3, #4
 800862c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008630:	230a      	movs	r3, #10
 8008632:	490d      	ldr	r1, [pc, #52]	; (8008668 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8008634:	9300      	str	r3, [sp, #0]
 8008636:	225f      	movs	r2, #95	; 0x5f
 8008638:	230c      	movs	r3, #12
 800863a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 800863e:	480b      	ldr	r0, [pc, #44]	; (800866c <_Z23getFont_verdana_10_4bppv+0x70>)
 8008640:	940a      	str	r4, [sp, #40]	; 0x28
 8008642:	9401      	str	r4, [sp, #4]
 8008644:	f7fd fa34 	bl	8005ab0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008648:	4809      	ldr	r0, [pc, #36]	; (8008670 <_Z23getFont_verdana_10_4bppv+0x74>)
 800864a:	f022 ffa7 	bl	802b59c <atexit>
 800864e:	4628      	mov	r0, r5
 8008650:	f022 f981 	bl	802a956 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8008654:	4805      	ldr	r0, [pc, #20]	; (800866c <_Z23getFont_verdana_10_4bppv+0x70>)
 8008656:	b00f      	add	sp, #60	; 0x3c
 8008658:	bd30      	pop	{r4, r5, pc}
 800865a:	bf00      	nop
 800865c:	200028ec 	.word	0x200028ec
 8008660:	08047514 	.word	0x08047514
 8008664:	08047750 	.word	0x08047750
 8008668:	0804655c 	.word	0x0804655c
 800866c:	200028f0 	.word	0x200028f0
 8008670:	080085f9 	.word	0x080085f9

08008674 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008674:	4770      	bx	lr
	...

08008678 <_Z23getFont_verdana_12_4bppv>:
{
 8008678:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 800867a:	4d17      	ldr	r5, [pc, #92]	; (80086d8 <_Z23getFont_verdana_12_4bppv+0x60>)
 800867c:	682c      	ldr	r4, [r5, #0]
 800867e:	f3bf 8f5b 	dmb	ish
 8008682:	f014 0401 	ands.w	r4, r4, #1
{
 8008686:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8008688:	d122      	bne.n	80086d0 <_Z23getFont_verdana_12_4bppv+0x58>
 800868a:	4628      	mov	r0, r5
 800868c:	f022 f957 	bl	802a93e <__cxa_guard_acquire>
 8008690:	b1f0      	cbz	r0, 80086d0 <_Z23getFont_verdana_12_4bppv+0x58>
 8008692:	233f      	movs	r3, #63	; 0x3f
 8008694:	9309      	str	r3, [sp, #36]	; 0x24
 8008696:	4b11      	ldr	r3, [pc, #68]	; (80086dc <_Z23getFont_verdana_12_4bppv+0x64>)
 8008698:	9308      	str	r3, [sp, #32]
 800869a:	4b11      	ldr	r3, [pc, #68]	; (80086e0 <_Z23getFont_verdana_12_4bppv+0x68>)
 800869c:	9307      	str	r3, [sp, #28]
 800869e:	2301      	movs	r3, #1
 80086a0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80086a4:	9304      	str	r3, [sp, #16]
 80086a6:	2304      	movs	r3, #4
 80086a8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80086ac:	230c      	movs	r3, #12
 80086ae:	490d      	ldr	r1, [pc, #52]	; (80086e4 <_Z23getFont_verdana_12_4bppv+0x6c>)
 80086b0:	9300      	str	r3, [sp, #0]
 80086b2:	2260      	movs	r2, #96	; 0x60
 80086b4:	230f      	movs	r3, #15
 80086b6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80086ba:	480b      	ldr	r0, [pc, #44]	; (80086e8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80086bc:	940a      	str	r4, [sp, #40]	; 0x28
 80086be:	9401      	str	r4, [sp, #4]
 80086c0:	f7fd f9f6 	bl	8005ab0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80086c4:	4809      	ldr	r0, [pc, #36]	; (80086ec <_Z23getFont_verdana_12_4bppv+0x74>)
 80086c6:	f022 ff69 	bl	802b59c <atexit>
 80086ca:	4628      	mov	r0, r5
 80086cc:	f022 f943 	bl	802a956 <__cxa_guard_release>
    return verdana_12_4bpp;
}
 80086d0:	4805      	ldr	r0, [pc, #20]	; (80086e8 <_Z23getFont_verdana_12_4bppv+0x70>)
 80086d2:	b00f      	add	sp, #60	; 0x3c
 80086d4:	bd30      	pop	{r4, r5, pc}
 80086d6:	bf00      	nop
 80086d8:	2000291c 	.word	0x2000291c
 80086dc:	08047548 	.word	0x08047548
 80086e0:	08047754 	.word	0x08047754
 80086e4:	08046a90 	.word	0x08046a90
 80086e8:	20002920 	.word	0x20002920
 80086ec:	08008675 	.word	0x08008675

080086f0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80086f0:	4770      	bx	lr
	...

080086f4 <_Z23getFont_verdana_19_4bppv>:
{
 80086f4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 80086f6:	4d17      	ldr	r5, [pc, #92]	; (8008754 <_Z23getFont_verdana_19_4bppv+0x60>)
 80086f8:	682c      	ldr	r4, [r5, #0]
 80086fa:	f3bf 8f5b 	dmb	ish
 80086fe:	f014 0401 	ands.w	r4, r4, #1
{
 8008702:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 95, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8008704:	d122      	bne.n	800874c <_Z23getFont_verdana_19_4bppv+0x58>
 8008706:	4628      	mov	r0, r5
 8008708:	f022 f919 	bl	802a93e <__cxa_guard_acquire>
 800870c:	b1f0      	cbz	r0, 800874c <_Z23getFont_verdana_19_4bppv+0x58>
 800870e:	233f      	movs	r3, #63	; 0x3f
 8008710:	9309      	str	r3, [sp, #36]	; 0x24
 8008712:	4b11      	ldr	r3, [pc, #68]	; (8008758 <_Z23getFont_verdana_19_4bppv+0x64>)
 8008714:	9308      	str	r3, [sp, #32]
 8008716:	4b11      	ldr	r3, [pc, #68]	; (800875c <_Z23getFont_verdana_19_4bppv+0x68>)
 8008718:	9307      	str	r3, [sp, #28]
 800871a:	2301      	movs	r3, #1
 800871c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8008720:	9304      	str	r3, [sp, #16]
 8008722:	2304      	movs	r3, #4
 8008724:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8008728:	2313      	movs	r3, #19
 800872a:	490d      	ldr	r1, [pc, #52]	; (8008760 <_Z23getFont_verdana_19_4bppv+0x6c>)
 800872c:	9300      	str	r3, [sp, #0]
 800872e:	225f      	movs	r2, #95	; 0x5f
 8008730:	2317      	movs	r3, #23
 8008732:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8008736:	480b      	ldr	r0, [pc, #44]	; (8008764 <_Z23getFont_verdana_19_4bppv+0x70>)
 8008738:	940a      	str	r4, [sp, #40]	; 0x28
 800873a:	9401      	str	r4, [sp, #4]
 800873c:	f7fd f9b8 	bl	8005ab0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008740:	4809      	ldr	r0, [pc, #36]	; (8008768 <_Z23getFont_verdana_19_4bppv+0x74>)
 8008742:	f022 ff2b 	bl	802b59c <atexit>
 8008746:	4628      	mov	r0, r5
 8008748:	f022 f905 	bl	802a956 <__cxa_guard_release>
    return verdana_19_4bpp;
}
 800874c:	4805      	ldr	r0, [pc, #20]	; (8008764 <_Z23getFont_verdana_19_4bppv+0x70>)
 800874e:	b00f      	add	sp, #60	; 0x3c
 8008750:	bd30      	pop	{r4, r5, pc}
 8008752:	bf00      	nop
 8008754:	2000294c 	.word	0x2000294c
 8008758:	080475cc 	.word	0x080475cc
 800875c:	08047758 	.word	0x08047758
 8008760:	08046fd0 	.word	0x08046fd0
 8008764:	20002950 	.word	0x20002950
 8008768:	080086f1 	.word	0x080086f1

0800876c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800876c:	4770      	bx	lr
	...

08008770 <_Z23getFont_verdana_40_4bppv>:
{
 8008770:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008772:	4d16      	ldr	r5, [pc, #88]	; (80087cc <_Z23getFont_verdana_40_4bppv+0x5c>)
 8008774:	682c      	ldr	r4, [r5, #0]
 8008776:	f3bf 8f5b 	dmb	ish
 800877a:	f014 0401 	ands.w	r4, r4, #1
{
 800877e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8008780:	d120      	bne.n	80087c4 <_Z23getFont_verdana_40_4bppv+0x54>
 8008782:	4628      	mov	r0, r5
 8008784:	f022 f8db 	bl	802a93e <__cxa_guard_acquire>
 8008788:	b1e0      	cbz	r0, 80087c4 <_Z23getFont_verdana_40_4bppv+0x54>
 800878a:	233f      	movs	r3, #63	; 0x3f
 800878c:	9309      	str	r3, [sp, #36]	; 0x24
 800878e:	4b10      	ldr	r3, [pc, #64]	; (80087d0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8008790:	9308      	str	r3, [sp, #32]
 8008792:	4b10      	ldr	r3, [pc, #64]	; (80087d4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8008794:	4910      	ldr	r1, [pc, #64]	; (80087d8 <_Z23getFont_verdana_40_4bppv+0x68>)
 8008796:	4811      	ldr	r0, [pc, #68]	; (80087dc <_Z23getFont_verdana_40_4bppv+0x6c>)
 8008798:	940a      	str	r4, [sp, #40]	; 0x28
 800879a:	2201      	movs	r2, #1
 800879c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 80087a0:	2304      	movs	r3, #4
 80087a2:	e9cd 3203 	strd	r3, r2, [sp, #12]
 80087a6:	2328      	movs	r3, #40	; 0x28
 80087a8:	9300      	str	r3, [sp, #0]
 80087aa:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80087ae:	e9cd 4401 	strd	r4, r4, [sp, #4]
 80087b2:	9405      	str	r4, [sp, #20]
 80087b4:	f7fd f97c 	bl	8005ab0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80087b8:	4809      	ldr	r0, [pc, #36]	; (80087e0 <_Z23getFont_verdana_40_4bppv+0x70>)
 80087ba:	f022 feef 	bl	802b59c <atexit>
 80087be:	4628      	mov	r0, r5
 80087c0:	f022 f8c9 	bl	802a956 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 80087c4:	4805      	ldr	r0, [pc, #20]	; (80087dc <_Z23getFont_verdana_40_4bppv+0x6c>)
 80087c6:	b00f      	add	sp, #60	; 0x3c
 80087c8:	bd30      	pop	{r4, r5, pc}
 80087ca:	bf00      	nop
 80087cc:	2000297c 	.word	0x2000297c
 80087d0:	0804774c 	.word	0x0804774c
 80087d4:	0804775c 	.word	0x0804775c
 80087d8:	08047504 	.word	0x08047504
 80087dc:	20002980 	.word	0x20002980
 80087e0:	0800876d 	.word	0x0800876d

080087e4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 80087e4:	2000      	movs	r0, #0
 80087e6:	4770      	bx	lr

080087e8 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 80087e8:	2000      	movs	r0, #0
 80087ea:	4770      	bx	lr

080087ec <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80087ec:	b40e      	push	{r1, r2, r3}
 80087ee:	b503      	push	{r0, r1, lr}
 80087f0:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80087f2:	2100      	movs	r1, #0
{
 80087f4:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80087f8:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80087fa:	f00e ffa7 	bl	801774c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80087fe:	b002      	add	sp, #8
 8008800:	f85d eb04 	ldr.w	lr, [sp], #4
 8008804:	b003      	add	sp, #12
 8008806:	4770      	bx	lr

08008808 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008808:	b40c      	push	{r2, r3}
 800880a:	b507      	push	{r0, r1, r2, lr}
 800880c:	ab04      	add	r3, sp, #16
 800880e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8008812:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008814:	f00e ff9a 	bl	801774c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008818:	b003      	add	sp, #12
 800881a:	f85d eb04 	ldr.w	lr, [sp], #4
 800881e:	b002      	add	sp, #8
 8008820:	4770      	bx	lr
	...

08008824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008824:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008826:	b510      	push	{r4, lr}
 8008828:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800882a:	b373      	cbz	r3, 800888a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800882c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800882e:	b92b      	cbnz	r3, 800883c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008830:	4b18      	ldr	r3, [pc, #96]	; (8008894 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8008832:	4a19      	ldr	r2, [pc, #100]	; (8008898 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008834:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008836:	4819      	ldr	r0, [pc, #100]	; (800889c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008838:	f022 fe92 	bl	802b560 <__assert_func>
            return buffer[pos];
 800883c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800883e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8008842:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008844:	b30b      	cbz	r3, 800888a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008846:	f010 fbbc 	bl	8018fc2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 800884a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800884c:	2b01      	cmp	r3, #1
 800884e:	d803      	bhi.n	8008858 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008850:	4b13      	ldr	r3, [pc, #76]	; (80088a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8008852:	4a14      	ldr	r2, [pc, #80]	; (80088a4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008854:	21cb      	movs	r1, #203	; 0xcb
 8008856:	e7ee      	b.n	8008836 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008858:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800885a:	1c53      	adds	r3, r2, #1
 800885c:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800885e:	2b09      	cmp	r3, #9
 8008860:	4619      	mov	r1, r3
 8008862:	bf88      	it	hi
 8008864:	f1a3 010a 	subhi.w	r1, r3, #10
 8008868:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800886c:	f640 103f 	movw	r0, #2367	; 0x93f
 8008870:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8008872:	4281      	cmp	r1, r0
 8008874:	d109      	bne.n	800888a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008876:	2b0a      	cmp	r3, #10
 8008878:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 800887c:	bf28      	it	cs
 800887e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008880:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8008884:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8008886:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008888:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 800888a:	4620      	mov	r0, r4
}
 800888c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008890:	f010 ba9a 	b.w	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8008894:	0802e954 	.word	0x0802e954
 8008898:	0802e95d 	.word	0x0802e95d
 800889c:	0802ea08 	.word	0x0802ea08
 80088a0:	0802ea52 	.word	0x0802ea52
 80088a4:	0802ea60 	.word	0x0802ea60

080088a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80088a8:	f010 ba55 	b.w	8018d56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080088ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80088ac:	b510      	push	{r4, lr}
 80088ae:	b086      	sub	sp, #24
 80088b0:	ac02      	add	r4, sp, #8
 80088b2:	e884 0006 	stmia.w	r4, {r1, r2}
 80088b6:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80088b8:	ab0a      	add	r3, sp, #40	; 0x28
 80088ba:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80088bc:	9301      	str	r3, [sp, #4]
 80088be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80088c0:	9300      	str	r3, [sp, #0]
 80088c2:	4621      	mov	r1, r4
 80088c4:	9b08      	ldr	r3, [sp, #32]
 80088c6:	f00d fb05 	bl	8015ed4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80088ca:	b006      	add	sp, #24
 80088cc:	bd10      	pop	{r4, pc}
	...

080088d0 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80088d0:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80088d2:	bb18      	cbnz	r0, 800891c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80088d4:	4b12      	ldr	r3, [pc, #72]	; (8008920 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80088d6:	4813      	ldr	r0, [pc, #76]	; (8008924 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80088d8:	681c      	ldr	r4, [r3, #0]
 80088da:	4913      	ldr	r1, [pc, #76]	; (8008928 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80088dc:	b1b4      	cbz	r4, 800890c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80088de:	6822      	ldr	r2, [r4, #0]
 80088e0:	4422      	add	r2, r4
 80088e2:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80088e4:	6862      	ldr	r2, [r4, #4]
 80088e6:	4422      	add	r2, r4
 80088e8:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80088ea:	68a2      	ldr	r2, [r4, #8]
 80088ec:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80088ee:	4b0f      	ldr	r3, [pc, #60]	; (800892c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80088f0:	2200      	movs	r2, #0
 80088f2:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80088f4:	f000 f838 	bl	8008968 <_ZN17TypedTextDatabase8getFontsEv>
 80088f8:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80088fa:	f000 f833 	bl	8008964 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80088fe:	4b0c      	ldr	r3, [pc, #48]	; (8008930 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8008900:	601c      	str	r4, [r3, #0]
        fonts = f;
 8008902:	4b0c      	ldr	r3, [pc, #48]	; (8008934 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008904:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008906:	4b0c      	ldr	r3, [pc, #48]	; (8008938 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008908:	8018      	strh	r0, [r3, #0]
    }
}
 800890a:	e007      	b.n	800891c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 800890c:	4b0b      	ldr	r3, [pc, #44]	; (800893c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800890e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8008910:	4b0b      	ldr	r3, [pc, #44]	; (8008940 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8008912:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008914:	4b0b      	ldr	r3, [pc, #44]	; (8008944 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008916:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008918:	2c00      	cmp	r4, #0
 800891a:	d1e8      	bne.n	80088ee <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 800891c:	bd38      	pop	{r3, r4, r5, pc}
 800891e:	bf00      	nop
 8008920:	200029ac 	.word	0x200029ac
 8008924:	200029b0 	.word	0x200029b0
 8008928:	200029b4 	.word	0x200029b4
 800892c:	200029b8 	.word	0x200029b8
 8008930:	20013844 	.word	0x20013844
 8008934:	2001384c 	.word	0x2001384c
 8008938:	20013848 	.word	0x20013848
 800893c:	080478c0 	.word	0x080478c0
 8008940:	08047760 	.word	0x08047760
 8008944:	08047ddc 	.word	0x08047ddc

08008948 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008948:	4b04      	ldr	r3, [pc, #16]	; (800895c <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 800894a:	681b      	ldr	r3, [r3, #0]
 800894c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008950:	4b03      	ldr	r3, [pc, #12]	; (8008960 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8008952:	681b      	ldr	r3, [r3, #0]
}
 8008954:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008958:	4770      	bx	lr
 800895a:	bf00      	nop
 800895c:	200029b4 	.word	0x200029b4
 8008960:	200029b0 	.word	0x200029b0

08008964 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008964:	2058      	movs	r0, #88	; 0x58
 8008966:	4770      	bx	lr

08008968 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008968:	4800      	ldr	r0, [pc, #0]	; (800896c <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 800896a:	4770      	bx	lr
 800896c:	200029bc 	.word	0x200029bc

08008970 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008970:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 8008972:	f7ff febf 	bl	80086f4 <_Z23getFont_verdana_19_4bppv>
};
 8008976:	4c06      	ldr	r4, [pc, #24]	; (8008990 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008978:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 800897a:	f7ff fef9 	bl	8008770 <_Z23getFont_verdana_40_4bppv>
};
 800897e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008980:	f7ff fe3c 	bl	80085fc <_Z23getFont_verdana_10_4bppv>
};
 8008984:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 8008986:	f7ff fe77 	bl	8008678 <_Z23getFont_verdana_12_4bppv>
};
 800898a:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 800898c:	bd10      	pop	{r4, pc}
 800898e:	bf00      	nop
 8008990:	200029bc 	.word	0x200029bc

08008994 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 8008994:	4770      	bx	lr

08008996 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 8008996:	3804      	subs	r0, #4
 8008998:	4770      	bx	lr

0800899a <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 800899a:	4770      	bx	lr

0800899c <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 800899c:	4770      	bx	lr

0800899e <_ZN24Calibration_PadPresenterD0Ev>:
 800899e:	b510      	push	{r4, lr}
 80089a0:	2110      	movs	r1, #16
 80089a2:	4604      	mov	r4, r0
 80089a4:	f021 ffc9 	bl	802a93a <_ZdlPvj>
 80089a8:	4620      	mov	r0, r4
 80089aa:	bd10      	pop	{r4, pc}

080089ac <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80089ac:	f1a0 0004 	sub.w	r0, r0, #4
 80089b0:	e7f5      	b.n	800899e <_ZN24Calibration_PadPresenterD0Ev>

080089b2 <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80089b2:	4770      	bx	lr

080089b4 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80089b4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80089b6:	2200      	movs	r2, #0
 80089b8:	6082      	str	r2, [r0, #8]
    : view(v)
 80089ba:	4a04      	ldr	r2, [pc, #16]	; (80089cc <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80089bc:	60c1      	str	r1, [r0, #12]
 80089be:	f102 0408 	add.w	r4, r2, #8
 80089c2:	3224      	adds	r2, #36	; 0x24
 80089c4:	6004      	str	r4, [r0, #0]
 80089c6:	6042      	str	r2, [r0, #4]
}
 80089c8:	bd10      	pop	{r4, pc}
 80089ca:	bf00      	nop
 80089cc:	0802eb34 	.word	0x0802eb34

080089d0 <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 80089d0:	4770      	bx	lr

080089d2 <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 80089d2:	4770      	bx	lr

080089d4 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 80089d4:	b510      	push	{r4, lr}
 80089d6:	4b03      	ldr	r3, [pc, #12]	; (80089e4 <_ZN19Calibration_PadViewD1Ev+0x10>)
 80089d8:	6003      	str	r3, [r0, #0]
 80089da:	4604      	mov	r4, r0
 80089dc:	f7f9 ff5a 	bl	8002894 <_ZN23Calibration_PadViewBaseD1Ev>
 80089e0:	4620      	mov	r0, r4
 80089e2:	bd10      	pop	{r4, pc}
 80089e4:	0802eb6c 	.word	0x0802eb6c

080089e8 <_ZN19Calibration_PadViewD0Ev>:
 80089e8:	b510      	push	{r4, lr}
 80089ea:	4604      	mov	r4, r0
 80089ec:	f7ff fff2 	bl	80089d4 <_ZN19Calibration_PadViewD1Ev>
 80089f0:	4620      	mov	r0, r4
 80089f2:	f641 5104 	movw	r1, #7428	; 0x1d04
 80089f6:	f021 ffa0 	bl	802a93a <_ZdlPvj>
 80089fa:	4620      	mov	r0, r4
 80089fc:	bd10      	pop	{r4, pc}
	...

08008a00 <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 8008a00:	b510      	push	{r4, lr}
 8008a02:	4604      	mov	r4, r0
 8008a04:	f7fa fb32 	bl	800306c <_ZN23Calibration_PadViewBaseC1Ev>
 8008a08:	4b01      	ldr	r3, [pc, #4]	; (8008a10 <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008a0a:	6023      	str	r3, [r4, #0]
}
 8008a0c:	4620      	mov	r0, r4
 8008a0e:	bd10      	pop	{r4, pc}
 8008a10:	0802eb6c 	.word	0x0802eb6c

08008a14 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv>:

void Calibration_PadView::Load_FLASH_Values()
{
 8008a14:	b570      	push	{r4, r5, r6, lr}
 8008a16:	4604      	mov	r4, r0
 8008a18:	b0ca      	sub	sp, #296	; 0x128
 8008a1a:	f100 06e0 	add.w	r6, r0, #224	; 0xe0
 8008a1e:	4631      	mov	r1, r6
 8008a20:	a80d      	add	r0, sp, #52	; 0x34
 8008a22:	f7fa f84f 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008a26:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8008a2a:	9317      	str	r3, [sp, #92]	; 0x5c
 8008a2c:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8008a30:	9318      	str	r3, [sp, #96]	; 0x60
 8008a32:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
 8008a36:	4a57      	ldr	r2, [pc, #348]	; (8008b94 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x180>)
 8008a38:	9319      	str	r3, [sp, #100]	; 0x64
 8008a3a:	f504 718c 	add.w	r1, r4, #280	; 0x118
 8008a3e:	f8d4 3114 	ldr.w	r3, [r4, #276]	; 0x114
 8008a42:	920d      	str	r2, [sp, #52]	; 0x34
 8008a44:	a81b      	add	r0, sp, #108	; 0x6c
 8008a46:	931a      	str	r3, [sp, #104]	; 0x68
 8008a48:	f7fa f83c 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008a4c:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8008a50:	9325      	str	r3, [sp, #148]	; 0x94
 8008a52:	4b51      	ldr	r3, [pc, #324]	; (8008b98 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x184>)
 8008a54:	931b      	str	r3, [sp, #108]	; 0x6c
 8008a56:	f894 3144 	ldrb.w	r3, [r4, #324]	; 0x144
 8008a5a:	f88d 3098 	strb.w	r3, [sp, #152]	; 0x98
 8008a5e:	f504 71a4 	add.w	r1, r4, #328	; 0x148
 8008a62:	f8b4 3146 	ldrh.w	r3, [r4, #326]	; 0x146
 8008a66:	f8ad 309a 	strh.w	r3, [sp, #154]	; 0x9a
 8008a6a:	a827      	add	r0, sp, #156	; 0x9c
 8008a6c:	f7fa f82a 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008a70:	f8d4 3170 	ldr.w	r3, [r4, #368]	; 0x170
 8008a74:	9331      	str	r3, [sp, #196]	; 0xc4
 8008a76:	f504 71ba 	add.w	r1, r4, #372	; 0x174
    class PageIndicator : public Container
 8008a7a:	4b48      	ldr	r3, [pc, #288]	; (8008b9c <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x188>)
 8008a7c:	9327      	str	r3, [sp, #156]	; 0x9c
 8008a7e:	a832      	add	r0, sp, #200	; 0xc8
 8008a80:	f7fa f820 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
class Image : public Widget
 8008a84:	f8b4 319a 	ldrh.w	r3, [r4, #410]	; 0x19a
 8008a88:	f8ad 30ee 	strh.w	r3, [sp, #238]	; 0xee
 8008a8c:	f894 319c 	ldrb.w	r3, [r4, #412]	; 0x19c
 8008a90:	f88d 30f0 	strb.w	r3, [sp, #240]	; 0xf0
 8008a94:	4b42      	ldr	r3, [pc, #264]	; (8008ba0 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x18c>)
 8008a96:	9332      	str	r3, [sp, #200]	; 0xc8
 8008a98:	f8b4 319e 	ldrh.w	r3, [r4, #414]	; 0x19e
 8008a9c:	f8ad 30f2 	strh.w	r3, [sp, #242]	; 0xf2
 8008aa0:	f504 71d2 	add.w	r1, r4, #420	; 0x1a4
 8008aa4:	f8b4 31a0 	ldrh.w	r3, [r4, #416]	; 0x1a0
 8008aa8:	f8ad 30f4 	strh.w	r3, [sp, #244]	; 0xf4
 8008aac:	a83e      	add	r0, sp, #248	; 0xf8
 8008aae:	f7fa f809 	bl	8002ac4 <_ZN8touchgfx8DrawableC1ERKS0_>
 8008ab2:	4b3c      	ldr	r3, [pc, #240]	; (8008ba4 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x190>)
 8008ab4:	933e      	str	r3, [sp, #248]	; 0xf8
 8008ab6:	f8b4 31ca 	ldrh.w	r3, [r4, #458]	; 0x1ca
	//Load the 6 Calibration Values from the Flash
	Flash_Read_Data(0x081E0000, Rx_Data, 12);

	// Write current Data stored in the Flash to the GUI
	//Left Pad
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008aba:	4d3b      	ldr	r5, [pc, #236]	; (8008ba8 <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x194>)
 8008abc:	f8ad 311e 	strh.w	r3, [sp, #286]	; 0x11e
 8008ac0:	f894 31cc 	ldrb.w	r3, [r4, #460]	; 0x1cc
 8008ac4:	f88d 3120 	strb.w	r3, [sp, #288]	; 0x120
	Flash_Read_Data(0x081E0000, Rx_Data, 12);
 8008ac8:	a901      	add	r1, sp, #4
 8008aca:	f8b4 31d0 	ldrh.w	r3, [r4, #464]	; 0x1d0
 8008ace:	4837      	ldr	r0, [pc, #220]	; (8008bac <_ZN19Calibration_PadView17Load_FLASH_ValuesEv+0x198>)
 8008ad0:	f8ad 3124 	strh.w	r3, [sp, #292]	; 0x124
 8008ad4:	220c      	movs	r2, #12
 8008ad6:	f7f7 febb 	bl	8000850 <Flash_Read_Data>
	Unicode::snprintf(textAreaCal_LP1Buffer, TEXTAREACAL_LP1_SIZE, "%d", Rx_Data[0]);
 8008ada:	9b01      	ldr	r3, [sp, #4]
 8008adc:	462a      	mov	r2, r5
 8008ade:	210a      	movs	r1, #10
 8008ae0:	f604 601c 	addw	r0, r4, #3612	; 0xe1c
 8008ae4:	f011 f822 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP2Buffer, TEXTAREACAL_LP2_SIZE, "%d", Rx_Data[1]);
 8008ae8:	9b02      	ldr	r3, [sp, #8]
 8008aea:	462a      	mov	r2, r5
 8008aec:	210a      	movs	r1, #10
 8008aee:	f604 6008 	addw	r0, r4, #3592	; 0xe08
 8008af2:	f011 f81b 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LP3Buffer, TEXTAREACAL_LP3_SIZE, "%d", Rx_Data[2]);
 8008af6:	9b03      	ldr	r3, [sp, #12]
 8008af8:	462a      	mov	r2, r5
 8008afa:	210a      	movs	r1, #10
 8008afc:	f604 50f4 	addw	r0, r4, #3572	; 0xdf4
 8008b00:	f011 f814 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RP1Buffer, TEXTAREACAL_RP1_SIZE, "%d", Rx_Data[3]);
 8008b04:	9b04      	ldr	r3, [sp, #16]
 8008b06:	462a      	mov	r2, r5
 8008b08:	210a      	movs	r1, #10
 8008b0a:	f604 6058 	addw	r0, r4, #3672	; 0xe58
 8008b0e:	f011 f80d 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP2Buffer, TEXTAREACAL_RP2_SIZE, "%d", Rx_Data[4]);
 8008b12:	9b05      	ldr	r3, [sp, #20]
 8008b14:	462a      	mov	r2, r5
 8008b16:	210a      	movs	r1, #10
 8008b18:	f604 6044 	addw	r0, r4, #3652	; 0xe44
 8008b1c:	f011 f806 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RP3Buffer, TEXTAREACAL_RP3_SIZE, "%d", Rx_Data[5]);
 8008b20:	9b06      	ldr	r3, [sp, #24]
 8008b22:	462a      	mov	r2, r5
 8008b24:	210a      	movs	r1, #10
 8008b26:	f504 6063 	add.w	r0, r4, #3632	; 0xe30
 8008b2a:	f010 ffff 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

	//Left Pad
	Unicode::snprintf(textAreaCal_LH1Buffer, TEXTAREACAL_LH1_SIZE, "%d", Rx_Data[6]);
 8008b2e:	9b07      	ldr	r3, [sp, #28]
 8008b30:	462a      	mov	r2, r5
 8008b32:	210a      	movs	r1, #10
 8008b34:	f604 6094 	addw	r0, r4, #3732	; 0xe94
 8008b38:	f010 fff8 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH2Buffer, TEXTAREACAL_LH2_SIZE, "%d", Rx_Data[7]);
 8008b3c:	9b08      	ldr	r3, [sp, #32]
 8008b3e:	462a      	mov	r2, r5
 8008b40:	210a      	movs	r1, #10
 8008b42:	f504 6068 	add.w	r0, r4, #3712	; 0xe80
 8008b46:	f010 fff1 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_LH3Buffer, TEXTAREACAL_LH3_SIZE, "%d", Rx_Data[8]);
 8008b4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b4c:	462a      	mov	r2, r5
 8008b4e:	210a      	movs	r1, #10
 8008b50:	f604 606c 	addw	r0, r4, #3692	; 0xe6c
 8008b54:	f010 ffea 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	//Right Pad
	Unicode::snprintf(textAreaCal_RH1Buffer, TEXTAREACAL_RH1_SIZE, "%d", Rx_Data[9]);
 8008b58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b5a:	462a      	mov	r2, r5
 8008b5c:	210a      	movs	r1, #10
 8008b5e:	f504 606d 	add.w	r0, r4, #3792	; 0xed0
 8008b62:	f010 ffe3 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH2Buffer, TEXTAREACAL_RH2_SIZE, "%d", Rx_Data[10]);
 8008b66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008b68:	462a      	mov	r2, r5
 8008b6a:	210a      	movs	r1, #10
 8008b6c:	f604 60bc 	addw	r0, r4, #3772	; 0xebc
 8008b70:	f010 ffdc 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(textAreaCal_RH3Buffer, TEXTAREACAL_RH3_SIZE, "%d", Rx_Data[11]);
 8008b74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008b76:	462a      	mov	r2, r5
 8008b78:	210a      	movs	r1, #10
 8008b7a:	f604 60a8 	addw	r0, r4, #3752	; 0xea8
 8008b7e:	f010 ffd5 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	swipeContainer1.invalidate();
 8008b82:	4630      	mov	r0, r6
 8008b84:	f00e ff0c 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>


#endif
}
 8008b88:	a80d      	add	r0, sp, #52	; 0x34
 8008b8a:	f007 ffd7 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
 8008b8e:	b04a      	add	sp, #296	; 0x128
 8008b90:	bd70      	pop	{r4, r5, r6, pc}
 8008b92:	bf00      	nop
 8008b94:	0802f1ec 	.word	0x0802f1ec
 8008b98:	0802f2b0 	.word	0x0802f2b0
 8008b9c:	0802d100 	.word	0x0802d100
 8008ba0:	0802f6ac 	.word	0x0802f6ac
 8008ba4:	0802f890 	.word	0x0802f890
 8008ba8:	0802d042 	.word	0x0802d042
 8008bac:	081e0000 	.word	0x081e0000

08008bb0 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008bb0:	f7f9 be30 	b.w	8002814 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008bb4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008bb4:	4770      	bx	lr

08008bb6 <_ZN19FrontendApplicationD0Ev>:
 8008bb6:	b510      	push	{r4, lr}
 8008bb8:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008bbc:	4604      	mov	r4, r0
 8008bbe:	f021 febc 	bl	802a93a <_ZdlPvj>
 8008bc2:	4620      	mov	r0, r4
 8008bc4:	bd10      	pop	{r4, pc}

08008bc6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008bc6:	b510      	push	{r4, lr}
 8008bc8:	4604      	mov	r4, r0
    {
        model.tick();
 8008bca:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008bce:	f000 fafb 	bl	80091c8 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008bd2:	4620      	mov	r0, r4
    }
 8008bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008bd8:	f00d bebe 	b.w	8016958 <_ZN8touchgfx11Application15handleTickEventEv>

08008bdc <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008bdc:	b510      	push	{r4, lr}
 8008bde:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008be0:	f7fb fe40 	bl	8004864 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008be4:	4b01      	ldr	r3, [pc, #4]	; (8008bec <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008be6:	6023      	str	r3, [r4, #0]
{

}
 8008be8:	4620      	mov	r0, r4
 8008bea:	bd10      	pop	{r4, pc}
 8008bec:	0802ebac 	.word	0x0802ebac

08008bf0 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 8008bf0:	4770      	bx	lr

08008bf2 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 8008bf2:	3804      	subs	r0, #4
 8008bf4:	4770      	bx	lr

08008bf6 <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 8008bf6:	4770      	bx	lr

08008bf8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008bf8:	68c0      	ldr	r0, [r0, #12]
 8008bfa:	6803      	ldr	r3, [r0, #0]
 8008bfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bfe:	4718      	bx	r3

08008c00 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008c00:	f1a0 0004 	sub.w	r0, r0, #4
 8008c04:	f7ff bff8 	b.w	8008bf8 <_ZN18Main_MenuPresenter15setTimeoutValueEi>

08008c08 <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 8008c08:	b510      	push	{r4, lr}
 8008c0a:	2110      	movs	r1, #16
 8008c0c:	4604      	mov	r4, r0
 8008c0e:	f021 fe94 	bl	802a93a <_ZdlPvj>
 8008c12:	4620      	mov	r0, r4
 8008c14:	bd10      	pop	{r4, pc}

08008c16 <_ZThn4_N18Main_MenuPresenterD0Ev>:
 8008c16:	f1a0 0004 	sub.w	r0, r0, #4
 8008c1a:	e7f5      	b.n	8008c08 <_ZN18Main_MenuPresenterD0Ev>

08008c1c <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 8008c1c:	b510      	push	{r4, lr}
 8008c1e:	2200      	movs	r2, #0
 8008c20:	6082      	str	r2, [r0, #8]
    : view(v)
 8008c22:	4a04      	ldr	r2, [pc, #16]	; (8008c34 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 8008c24:	60c1      	str	r1, [r0, #12]
 8008c26:	f102 0408 	add.w	r4, r2, #8
 8008c2a:	3224      	adds	r2, #36	; 0x24
 8008c2c:	6004      	str	r4, [r0, #0]
 8008c2e:	6042      	str	r2, [r0, #4]
}
 8008c30:	bd10      	pop	{r4, pc}
 8008c32:	bf00      	nop
 8008c34:	0802ebf8 	.word	0x0802ebf8

08008c38 <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 8008c38:	4770      	bx	lr
	...

08008c3c <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008c3c:	b510      	push	{r4, lr}
 8008c3e:	4b03      	ldr	r3, [pc, #12]	; (8008c4c <_ZN13Main_MenuViewD1Ev+0x10>)
 8008c40:	6003      	str	r3, [r0, #0]
 8008c42:	4604      	mov	r4, r0
 8008c44:	f7fc ff88 	bl	8005b58 <_ZN17Main_MenuViewBaseD1Ev>
 8008c48:	4620      	mov	r0, r4
 8008c4a:	bd10      	pop	{r4, pc}
 8008c4c:	0802ec30 	.word	0x0802ec30

08008c50 <_ZN13Main_MenuViewD0Ev>:
 8008c50:	b510      	push	{r4, lr}
 8008c52:	4604      	mov	r4, r0
 8008c54:	f7ff fff2 	bl	8008c3c <_ZN13Main_MenuViewD1Ev>
 8008c58:	4620      	mov	r0, r4
 8008c5a:	f241 117c 	movw	r1, #4476	; 0x117c
 8008c5e:	f021 fe6c 	bl	802a93a <_ZdlPvj>
 8008c62:	4620      	mov	r0, r4
 8008c64:	bd10      	pop	{r4, pc}
	...

08008c68 <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 8008c68:	b510      	push	{r4, lr}
 8008c6a:	4604      	mov	r4, r0
 8008c6c:	f7fc ffbe 	bl	8005bec <_ZN17Main_MenuViewBaseC1Ev>
 8008c70:	4b01      	ldr	r3, [pc, #4]	; (8008c78 <_ZN13Main_MenuViewC1Ev+0x10>)
 8008c72:	6023      	str	r3, [r4, #0]
}
 8008c74:	4620      	mov	r0, r4
 8008c76:	bd10      	pop	{r4, pc}
 8008c78:	0802ec30 	.word	0x0802ec30

08008c7c <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008c7c:	f7fc bf48 	b.w	8005b10 <_ZN17Main_MenuViewBase11setupScreenEv>

08008c80 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008c80:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008c82:	4a0a      	ldr	r2, [pc, #40]	; (8008cac <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008c84:	4605      	mov	r5, r0
 8008c86:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008c88:	460b      	mov	r3, r1
 8008c8a:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008c8e:	2104      	movs	r1, #4
 8008c90:	f010 ff4c 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008c94:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008c98:	f00e fe82 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008c9c:	b92c      	cbnz	r4, 8008caa <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008c9e:	f00d fd97 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008ca2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008ca6:	f7fb bedd 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008caa:	bd38      	pop	{r3, r4, r5, pc}
 8008cac:	0802d042 	.word	0x0802d042

08008cb0 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008cb0:	4770      	bx	lr

08008cb2 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008cb2:	3804      	subs	r0, #4
 8008cb4:	4770      	bx	lr

08008cb6 <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 8008cb6:	4770      	bx	lr

08008cb8 <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008cb8:	68c0      	ldr	r0, [r0, #12]
 8008cba:	6803      	ldr	r3, [r0, #0]
 8008cbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008cbe:	4718      	bx	r3

08008cc0 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008cc0:	f1a0 0004 	sub.w	r0, r0, #4
 8008cc4:	f7ff bff8 	b.w	8008cb8 <_ZN20MeasurementPresenter15setTimeoutValueEi>

08008cc8 <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 8008cc8:	b510      	push	{r4, lr}
 8008cca:	2110      	movs	r1, #16
 8008ccc:	4604      	mov	r4, r0
 8008cce:	f021 fe34 	bl	802a93a <_ZdlPvj>
 8008cd2:	4620      	mov	r0, r4
 8008cd4:	bd10      	pop	{r4, pc}

08008cd6 <_ZThn4_N20MeasurementPresenterD0Ev>:
 8008cd6:	f1a0 0004 	sub.w	r0, r0, #4
 8008cda:	e7f5      	b.n	8008cc8 <_ZN20MeasurementPresenterD0Ev>

08008cdc <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 8008cdc:	b510      	push	{r4, lr}
 8008cde:	2200      	movs	r2, #0
 8008ce0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ce2:	4a04      	ldr	r2, [pc, #16]	; (8008cf4 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 8008ce4:	60c1      	str	r1, [r0, #12]
 8008ce6:	f102 0408 	add.w	r4, r2, #8
 8008cea:	3224      	adds	r2, #36	; 0x24
 8008cec:	6004      	str	r4, [r0, #0]
 8008cee:	6042      	str	r2, [r0, #4]
}
 8008cf0:	bd10      	pop	{r4, pc}
 8008cf2:	bf00      	nop
 8008cf4:	0802ec60 	.word	0x0802ec60

08008cf8 <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 8008cf8:	4770      	bx	lr
	...

08008cfc <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 8008cfc:	b510      	push	{r4, lr}
 8008cfe:	4b03      	ldr	r3, [pc, #12]	; (8008d0c <_ZN15MeasurementViewD1Ev+0x10>)
 8008d00:	6003      	str	r3, [r0, #0]
 8008d02:	4604      	mov	r4, r0
 8008d04:	f7fd f9e2 	bl	80060cc <_ZN19MeasurementViewBaseD1Ev>
 8008d08:	4620      	mov	r0, r4
 8008d0a:	bd10      	pop	{r4, pc}
 8008d0c:	0802ec98 	.word	0x0802ec98

08008d10 <_ZN15MeasurementViewD0Ev>:
 8008d10:	b510      	push	{r4, lr}
 8008d12:	4604      	mov	r4, r0
 8008d14:	f7ff fff2 	bl	8008cfc <_ZN15MeasurementViewD1Ev>
 8008d18:	4620      	mov	r0, r4
 8008d1a:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008d1e:	f021 fe0c 	bl	802a93a <_ZdlPvj>
 8008d22:	4620      	mov	r0, r4
 8008d24:	bd10      	pop	{r4, pc}
	...

08008d28 <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 8008d28:	b510      	push	{r4, lr}
 8008d2a:	4604      	mov	r4, r0
 8008d2c:	f7fd fa08 	bl	8006140 <_ZN19MeasurementViewBaseC1Ev>
 8008d30:	4b01      	ldr	r3, [pc, #4]	; (8008d38 <_ZN15MeasurementViewC1Ev+0x10>)
 8008d32:	6023      	str	r3, [r4, #0]
}
 8008d34:	4620      	mov	r0, r4
 8008d36:	bd10      	pop	{r4, pc}
 8008d38:	0802ec98 	.word	0x0802ec98

08008d3c <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008d3c:	f7fd b9a2 	b.w	8006084 <_ZN19MeasurementViewBase11setupScreenEv>

08008d40 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008d40:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008d42:	4a0a      	ldr	r2, [pc, #40]	; (8008d6c <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008d44:	4605      	mov	r5, r0
 8008d46:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008d48:	460b      	mov	r3, r1
 8008d4a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008d4e:	2104      	movs	r1, #4
 8008d50:	f010 feec 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008d54:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008d58:	f00e fe22 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008d5c:	b92c      	cbnz	r4, 8008d6a <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008d5e:	f00d fd37 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008d62:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008d66:	f7fb be7d 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008d6a:	bd38      	pop	{r3, r4, r5, pc}
 8008d6c:	0802d042 	.word	0x0802d042

08008d70 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008d70:	4770      	bx	lr

08008d72 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008d72:	3804      	subs	r0, #4
 8008d74:	4770      	bx	lr

08008d76 <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 8008d76:	4770      	bx	lr

08008d78 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008d78:	68c0      	ldr	r0, [r0, #12]
 8008d7a:	6803      	ldr	r3, [r0, #0]
 8008d7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d7e:	4718      	bx	r3

08008d80 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008d80:	f1a0 0004 	sub.w	r0, r0, #4
 8008d84:	f7ff bff8 	b.w	8008d78 <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

08008d88 <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 8008d88:	b510      	push	{r4, lr}
 8008d8a:	2110      	movs	r1, #16
 8008d8c:	4604      	mov	r4, r0
 8008d8e:	f021 fdd4 	bl	802a93a <_ZdlPvj>
 8008d92:	4620      	mov	r0, r4
 8008d94:	bd10      	pop	{r4, pc}

08008d96 <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 8008d96:	f1a0 0004 	sub.w	r0, r0, #4
 8008d9a:	e7f5      	b.n	8008d88 <_ZN29Measurement_AccuratePresenterD0Ev>

08008d9c <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008d9c:	b510      	push	{r4, lr}
 8008d9e:	2200      	movs	r2, #0
 8008da0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008da2:	4a04      	ldr	r2, [pc, #16]	; (8008db4 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008da4:	60c1      	str	r1, [r0, #12]
 8008da6:	f102 0408 	add.w	r4, r2, #8
 8008daa:	3224      	adds	r2, #36	; 0x24
 8008dac:	6004      	str	r4, [r0, #0]
 8008dae:	6042      	str	r2, [r0, #4]
}
 8008db0:	bd10      	pop	{r4, pc}
 8008db2:	bf00      	nop
 8008db4:	0802ecc8 	.word	0x0802ecc8

08008db8 <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 8008db8:	4770      	bx	lr
	...

08008dbc <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008dbc:	b510      	push	{r4, lr}
 8008dbe:	4b03      	ldr	r3, [pc, #12]	; (8008dcc <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008dc0:	6003      	str	r3, [r0, #0]
 8008dc2:	4604      	mov	r4, r0
 8008dc4:	f7fd fc04 	bl	80065d0 <_ZN28Measurement_AccurateViewBaseD1Ev>
 8008dc8:	4620      	mov	r0, r4
 8008dca:	bd10      	pop	{r4, pc}
 8008dcc:	0802ed00 	.word	0x0802ed00

08008dd0 <_ZN24Measurement_AccurateViewD0Ev>:
 8008dd0:	b510      	push	{r4, lr}
 8008dd2:	4604      	mov	r4, r0
 8008dd4:	f7ff fff2 	bl	8008dbc <_ZN24Measurement_AccurateViewD1Ev>
 8008dd8:	4620      	mov	r0, r4
 8008dda:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008dde:	f021 fdac 	bl	802a93a <_ZdlPvj>
 8008de2:	4620      	mov	r0, r4
 8008de4:	bd10      	pop	{r4, pc}
	...

08008de8 <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 8008de8:	b510      	push	{r4, lr}
 8008dea:	4604      	mov	r4, r0
 8008dec:	f7fd fc2a 	bl	8006644 <_ZN28Measurement_AccurateViewBaseC1Ev>
 8008df0:	4b01      	ldr	r3, [pc, #4]	; (8008df8 <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 8008df2:	6023      	str	r3, [r4, #0]
}
 8008df4:	4620      	mov	r0, r4
 8008df6:	bd10      	pop	{r4, pc}
 8008df8:	0802ed00 	.word	0x0802ed00

08008dfc <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 8008dfc:	f7fd bbc4 	b.w	8006588 <_ZN28Measurement_AccurateViewBase11setupScreenEv>

08008e00 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 8008e00:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e02:	4a0a      	ldr	r2, [pc, #40]	; (8008e2c <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 8008e04:	4605      	mov	r5, r0
 8008e06:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008e08:	460b      	mov	r3, r1
 8008e0a:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008e0e:	2104      	movs	r1, #4
 8008e10:	f010 fe8c 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008e14:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008e18:	f00e fdc2 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008e1c:	b92c      	cbnz	r4, 8008e2a <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 8008e1e:	f00d fcd7 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008e22:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008e26:	f7fb be1d 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008e2a:	bd38      	pop	{r3, r4, r5, pc}
 8008e2c:	0802d042 	.word	0x0802d042

08008e30 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008e30:	4770      	bx	lr

08008e32 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008e32:	3804      	subs	r0, #4
 8008e34:	4770      	bx	lr

08008e36 <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 8008e36:	4770      	bx	lr

08008e38 <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 8008e38:	4770      	bx	lr

08008e3a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008e3a:	b510      	push	{r4, lr}
 8008e3c:	2110      	movs	r1, #16
 8008e3e:	4604      	mov	r4, r0
 8008e40:	f021 fd7b 	bl	802a93a <_ZdlPvj>
 8008e44:	4620      	mov	r0, r4
 8008e46:	bd10      	pop	{r4, pc}

08008e48 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 8008e48:	f1a0 0004 	sub.w	r0, r0, #4
 8008e4c:	e7f5      	b.n	8008e3a <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008e4e <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008e4e:	4770      	bx	lr

08008e50 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008e50:	b510      	push	{r4, lr}
 8008e52:	2200      	movs	r2, #0
 8008e54:	6082      	str	r2, [r0, #8]
    : view(v)
 8008e56:	4a04      	ldr	r2, [pc, #16]	; (8008e68 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 8008e58:	60c1      	str	r1, [r0, #12]
 8008e5a:	f102 0408 	add.w	r4, r2, #8
 8008e5e:	3224      	adds	r2, #36	; 0x24
 8008e60:	6004      	str	r4, [r0, #0]
 8008e62:	6042      	str	r2, [r0, #4]
}
 8008e64:	bd10      	pop	{r4, pc}
 8008e66:	bf00      	nop
 8008e68:	0802ed30 	.word	0x0802ed30

08008e6c <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008e6c:	4770      	bx	lr
	...

08008e70 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008e70:	b510      	push	{r4, lr}
 8008e72:	4b03      	ldr	r3, [pc, #12]	; (8008e80 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008e74:	6003      	str	r3, [r0, #0]
 8008e76:	4604      	mov	r4, r0
 8008e78:	f7fd fe28 	bl	8006acc <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008e7c:	4620      	mov	r0, r4
 8008e7e:	bd10      	pop	{r4, pc}
 8008e80:	0802ed68 	.word	0x0802ed68

08008e84 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008e84:	b510      	push	{r4, lr}
 8008e86:	4604      	mov	r4, r0
 8008e88:	f7ff fff2 	bl	8008e70 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008e8c:	4620      	mov	r0, r4
 8008e8e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008e92:	f021 fd52 	bl	802a93a <_ZdlPvj>
 8008e96:	4620      	mov	r0, r4
 8008e98:	bd10      	pop	{r4, pc}
	...

08008e9c <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008e9c:	b510      	push	{r4, lr}
 8008e9e:	4604      	mov	r4, r0
 8008ea0:	f7fd fe3c 	bl	8006b1c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008ea4:	4b01      	ldr	r3, [pc, #4]	; (8008eac <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 8008ea6:	6023      	str	r3, [r4, #0]
}
 8008ea8:	4620      	mov	r0, r4
 8008eaa:	bd10      	pop	{r4, pc}
 8008eac:	0802ed68 	.word	0x0802ed68

08008eb0 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008eb0:	f7fd bde8 	b.w	8006a84 <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008eb4 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008eb4:	4770      	bx	lr

08008eb6 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 8008eb6:	3804      	subs	r0, #4
 8008eb8:	4770      	bx	lr

08008eba <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 8008eba:	4770      	bx	lr

08008ebc <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008ebc:	4770      	bx	lr

08008ebe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008ebe:	b510      	push	{r4, lr}
 8008ec0:	2110      	movs	r1, #16
 8008ec2:	4604      	mov	r4, r0
 8008ec4:	f021 fd39 	bl	802a93a <_ZdlPvj>
 8008ec8:	4620      	mov	r0, r4
 8008eca:	bd10      	pop	{r4, pc}

08008ecc <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008ecc:	f1a0 0004 	sub.w	r0, r0, #4
 8008ed0:	e7f5      	b.n	8008ebe <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

08008ed2 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 8008ed2:	4770      	bx	lr

08008ed4 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 8008ed4:	b510      	push	{r4, lr}
 8008ed6:	2200      	movs	r2, #0
 8008ed8:	6082      	str	r2, [r0, #8]
    : view(v)
 8008eda:	4a04      	ldr	r2, [pc, #16]	; (8008eec <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 8008edc:	60c1      	str	r1, [r0, #12]
 8008ede:	f102 0408 	add.w	r4, r2, #8
 8008ee2:	3224      	adds	r2, #36	; 0x24
 8008ee4:	6004      	str	r4, [r0, #0]
 8008ee6:	6042      	str	r2, [r0, #4]
}
 8008ee8:	bd10      	pop	{r4, pc}
 8008eea:	bf00      	nop
 8008eec:	0802ed94 	.word	0x0802ed94

08008ef0 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 8008ef0:	4770      	bx	lr
	...

08008ef4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 8008ef4:	b510      	push	{r4, lr}
 8008ef6:	4b03      	ldr	r3, [pc, #12]	; (8008f04 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 8008ef8:	6003      	str	r3, [r0, #0]
 8008efa:	4604      	mov	r4, r0
 8008efc:	f7fd ff96 	bl	8006e2c <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 8008f00:	4620      	mov	r0, r4
 8008f02:	bd10      	pop	{r4, pc}
 8008f04:	0802edcc 	.word	0x0802edcc

08008f08 <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 8008f08:	b510      	push	{r4, lr}
 8008f0a:	4604      	mov	r4, r0
 8008f0c:	f7ff fff2 	bl	8008ef4 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 8008f10:	4620      	mov	r0, r4
 8008f12:	f241 015c 	movw	r1, #4188	; 0x105c
 8008f16:	f021 fd10 	bl	802a93a <_ZdlPvj>
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	bd10      	pop	{r4, pc}
	...

08008f20 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 8008f20:	b510      	push	{r4, lr}
 8008f22:	4604      	mov	r4, r0
 8008f24:	f7fd ffaa 	bl	8006e7c <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 8008f28:	4b01      	ldr	r3, [pc, #4]	; (8008f30 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 8008f2a:	6023      	str	r3, [r4, #0]
}
 8008f2c:	4620      	mov	r0, r4
 8008f2e:	bd10      	pop	{r4, pc}
 8008f30:	0802edcc 	.word	0x0802edcc

08008f34 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008f34:	f7fd bf56 	b.w	8006de4 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

08008f38 <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 8008f38:	4770      	bx	lr

08008f3a <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 8008f3a:	3804      	subs	r0, #4
 8008f3c:	4770      	bx	lr

08008f3e <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008f3e:	4770      	bx	lr

08008f40 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008f40:	68c0      	ldr	r0, [r0, #12]
 8008f42:	6803      	ldr	r3, [r0, #0]
 8008f44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008f46:	4718      	bx	r3

08008f48 <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008f48:	f1a0 0004 	sub.w	r0, r0, #4
 8008f4c:	f7ff bff8 	b.w	8008f40 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008f50 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008f50:	b510      	push	{r4, lr}
 8008f52:	2110      	movs	r1, #16
 8008f54:	4604      	mov	r4, r0
 8008f56:	f021 fcf0 	bl	802a93a <_ZdlPvj>
 8008f5a:	4620      	mov	r0, r4
 8008f5c:	bd10      	pop	{r4, pc}

08008f5e <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008f5e:	f1a0 0004 	sub.w	r0, r0, #4
 8008f62:	e7f5      	b.n	8008f50 <_ZN27Measurement_SinglePresenterD0Ev>

08008f64 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008f64:	b510      	push	{r4, lr}
 8008f66:	2200      	movs	r2, #0
 8008f68:	6082      	str	r2, [r0, #8]
    : view(v)
 8008f6a:	4a04      	ldr	r2, [pc, #16]	; (8008f7c <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008f6c:	60c1      	str	r1, [r0, #12]
 8008f6e:	f102 0408 	add.w	r4, r2, #8
 8008f72:	3224      	adds	r2, #36	; 0x24
 8008f74:	6004      	str	r4, [r0, #0]
 8008f76:	6042      	str	r2, [r0, #4]
}
 8008f78:	bd10      	pop	{r4, pc}
 8008f7a:	bf00      	nop
 8008f7c:	0802edf8 	.word	0x0802edf8

08008f80 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008f80:	4770      	bx	lr
	...

08008f84 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008f84:	b510      	push	{r4, lr}
 8008f86:	4b03      	ldr	r3, [pc, #12]	; (8008f94 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 8008f88:	6003      	str	r3, [r0, #0]
 8008f8a:	4604      	mov	r4, r0
 8008f8c:	f7fe f8fe 	bl	800718c <_ZN26Measurement_SingleViewBaseD1Ev>
 8008f90:	4620      	mov	r0, r4
 8008f92:	bd10      	pop	{r4, pc}
 8008f94:	0802ee30 	.word	0x0802ee30

08008f98 <_ZN22Measurement_SingleViewD0Ev>:
 8008f98:	b510      	push	{r4, lr}
 8008f9a:	4604      	mov	r4, r0
 8008f9c:	f7ff fff2 	bl	8008f84 <_ZN22Measurement_SingleViewD1Ev>
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8008fa6:	f021 fcc8 	bl	802a93a <_ZdlPvj>
 8008faa:	4620      	mov	r0, r4
 8008fac:	bd10      	pop	{r4, pc}
	...

08008fb0 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008fb0:	b510      	push	{r4, lr}
 8008fb2:	4604      	mov	r4, r0
 8008fb4:	f7fe f924 	bl	8007200 <_ZN26Measurement_SingleViewBaseC1Ev>
 8008fb8:	4b01      	ldr	r3, [pc, #4]	; (8008fc0 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 8008fba:	6023      	str	r3, [r4, #0]
}
 8008fbc:	4620      	mov	r0, r4
 8008fbe:	bd10      	pop	{r4, pc}
 8008fc0:	0802ee30 	.word	0x0802ee30

08008fc4 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008fc4:	f7fe b8be 	b.w	8007144 <_ZN26Measurement_SingleViewBase11setupScreenEv>

08008fc8 <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 8008fc8:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fca:	4a0a      	ldr	r2, [pc, #40]	; (8008ff4 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 8008fcc:	4605      	mov	r5, r0
 8008fce:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008fd0:	460b      	mov	r3, r1
 8008fd2:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008fd6:	2104      	movs	r1, #4
 8008fd8:	f010 fda8 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008fdc:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008fe0:	f00e fcde 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008fe4:	b92c      	cbnz	r4, 8008ff2 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 8008fe6:	f00d fbf3 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008fea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008fee:	f7fb bd39 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008ff2:	bd38      	pop	{r3, r4, r5, pc}
 8008ff4:	0802d042 	.word	0x0802d042

08008ff8 <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 8008ff8:	4770      	bx	lr

08008ffa <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 8008ffa:	3804      	subs	r0, #4
 8008ffc:	4770      	bx	lr

08008ffe <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 8008ffe:	4770      	bx	lr

08009000 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 8009000:	4770      	bx	lr

08009002 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 8009002:	b510      	push	{r4, lr}
 8009004:	2110      	movs	r1, #16
 8009006:	4604      	mov	r4, r0
 8009008:	f021 fc97 	bl	802a93a <_ZdlPvj>
 800900c:	4620      	mov	r0, r4
 800900e:	bd10      	pop	{r4, pc}

08009010 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 8009010:	f1a0 0004 	sub.w	r0, r0, #4
 8009014:	e7f5      	b.n	8009002 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

08009016 <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 8009016:	4770      	bx	lr

08009018 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 8009018:	b510      	push	{r4, lr}
 800901a:	2200      	movs	r2, #0
 800901c:	6082      	str	r2, [r0, #8]
    : view(v)
 800901e:	4a04      	ldr	r2, [pc, #16]	; (8009030 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 8009020:	60c1      	str	r1, [r0, #12]
 8009022:	f102 0408 	add.w	r4, r2, #8
 8009026:	3224      	adds	r2, #36	; 0x24
 8009028:	6004      	str	r4, [r0, #0]
 800902a:	6042      	str	r2, [r0, #4]
}
 800902c:	bd10      	pop	{r4, pc}
 800902e:	bf00      	nop
 8009030:	0802ee60 	.word	0x0802ee60

08009034 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8009034:	4770      	bx	lr
	...

08009038 <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 8009038:	b510      	push	{r4, lr}
 800903a:	4b03      	ldr	r3, [pc, #12]	; (8009048 <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 800903c:	6003      	str	r3, [r0, #0]
 800903e:	4604      	mov	r4, r0
 8009040:	f7fe fb28 	bl	8007694 <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8009044:	4620      	mov	r0, r4
 8009046:	bd10      	pop	{r4, pc}
 8009048:	0802eea0 	.word	0x0802eea0

0800904c <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 800904c:	b510      	push	{r4, lr}
 800904e:	4604      	mov	r4, r0
 8009050:	f7ff fff2 	bl	8009038 <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8009054:	4620      	mov	r0, r4
 8009056:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800905a:	f021 fc6e 	bl	802a93a <_ZdlPvj>
 800905e:	4620      	mov	r0, r4
 8009060:	bd10      	pop	{r4, pc}
	...

08009064 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8009064:	b510      	push	{r4, lr}
 8009066:	4604      	mov	r4, r0
 8009068:	f7fe fb4e 	bl	8007708 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 800906c:	4b01      	ldr	r3, [pc, #4]	; (8009074 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 800906e:	6023      	str	r3, [r4, #0]
}
 8009070:	4620      	mov	r0, r4
 8009072:	bd10      	pop	{r4, pc}
 8009074:	0802eea0 	.word	0x0802eea0

08009078 <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 8009078:	f7fe bae7 	b.w	800764a <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

0800907c <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 800907c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800907e:	4e2a      	ldr	r6, [pc, #168]	; (8009128 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8009080:	4f2a      	ldr	r7, [pc, #168]	; (800912c <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8009082:	4604      	mov	r4, r0
 8009084:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 8009086:	6803      	ldr	r3, [r0, #0]
{
 8009088:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800908a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800908c:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 800908e:	2201      	movs	r2, #1
 8009090:	2180      	movs	r1, #128	; 0x80
 8009092:	4638      	mov	r0, r7
 8009094:	f000 ffe2 	bl	800a05c <HAL_GPIO_WritePin>

	test = updateGUI_test();
 8009098:	f7f7 fc9a 	bl	80009d0 <updateGUI_test>
 800909c:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 800909e:	f7f8 fa25 	bl	80014ec <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80090a2:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 80090a4:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80090a6:	2001      	movs	r0, #1
 80090a8:	f7f7 fbde 	bl	8000868 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 80090ac:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 80090b0:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 80090b2:	ed8d 0a04 	vstr	s0, [sp, #16]
 80090b6:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 80090ba:	9001      	str	r0, [sp, #4]
 80090bc:	f00a fc26 	bl	801390c <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 80090c0:	9801      	ldr	r0, [sp, #4]
 80090c2:	f00e fc6d 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 80090c6:	462b      	mov	r3, r5
 80090c8:	4a19      	ldr	r2, [pc, #100]	; (8009130 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 80090ca:	210a      	movs	r1, #10
 80090cc:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80090d0:	f010 fd2c 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80090d4:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80090d8:	f00e fc62 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80090dc:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80090de:	4a15      	ldr	r2, [pc, #84]	; (8009134 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80090e0:	9303      	str	r3, [sp, #12]
 80090e2:	210a      	movs	r1, #10
 80090e4:	ab03      	add	r3, sp, #12
 80090e6:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80090ea:	f010 ff0b 	bl	8019f04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80090ee:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80090f2:	f00e fc55 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80090f6:	9b05      	ldr	r3, [sp, #20]
 80090f8:	4a0e      	ldr	r2, [pc, #56]	; (8009134 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80090fa:	9303      	str	r3, [sp, #12]
 80090fc:	210a      	movs	r1, #10
 80090fe:	ab03      	add	r3, sp, #12
 8009100:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8009104:	f010 fefe 	bl	8019f04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 8009108:	f504 7046 	add.w	r0, r4, #792	; 0x318
 800910c:	f00e fc48 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 8009110:	4638      	mov	r0, r7
 8009112:	2200      	movs	r2, #0
 8009114:	2180      	movs	r1, #128	; 0x80
 8009116:	f000 ffa1 	bl	800a05c <HAL_GPIO_WritePin>
 800911a:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 800911c:	6803      	ldr	r3, [r0, #0]
 800911e:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 8009120:	b007      	add	sp, #28
 8009122:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 8009126:	4718      	bx	r3
 8009128:	200137ec 	.word	0x200137ec
 800912c:	40020000 	.word	0x40020000
 8009130:	0802d042 	.word	0x0802d042
 8009134:	0802ee90 	.word	0x0802ee90

08009138 <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 8009138:	4770      	bx	lr

0800913a <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800913a:	3804      	subs	r0, #4
 800913c:	4770      	bx	lr

0800913e <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 800913e:	4770      	bx	lr

08009140 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8009140:	4770      	bx	lr

08009142 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8009142:	b510      	push	{r4, lr}
 8009144:	2110      	movs	r1, #16
 8009146:	4604      	mov	r4, r0
 8009148:	f021 fbf7 	bl	802a93a <_ZdlPvj>
 800914c:	4620      	mov	r0, r4
 800914e:	bd10      	pop	{r4, pc}

08009150 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8009150:	f1a0 0004 	sub.w	r0, r0, #4
 8009154:	e7f5      	b.n	8009142 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

08009156 <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 8009156:	4770      	bx	lr

08009158 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 8009158:	b510      	push	{r4, lr}
 800915a:	2200      	movs	r2, #0
 800915c:	6082      	str	r2, [r0, #8]
    : view(v)
 800915e:	4a04      	ldr	r2, [pc, #16]	; (8009170 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8009160:	60c1      	str	r1, [r0, #12]
 8009162:	f102 0408 	add.w	r4, r2, #8
 8009166:	3224      	adds	r2, #36	; 0x24
 8009168:	6004      	str	r4, [r0, #0]
 800916a:	6042      	str	r2, [r0, #4]
}
 800916c:	bd10      	pop	{r4, pc}
 800916e:	bf00      	nop
 8009170:	0802eed0 	.word	0x0802eed0

08009174 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8009174:	4770      	bx	lr
	...

08009178 <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 8009178:	b510      	push	{r4, lr}
 800917a:	4b03      	ldr	r3, [pc, #12]	; (8009188 <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 800917c:	6003      	str	r3, [r0, #0]
 800917e:	4604      	mov	r4, r0
 8009180:	f7fe fe22 	bl	8007dc8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8009184:	4620      	mov	r0, r4
 8009186:	bd10      	pop	{r4, pc}
 8009188:	0802ef08 	.word	0x0802ef08

0800918c <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 800918c:	b510      	push	{r4, lr}
 800918e:	4604      	mov	r4, r0
 8009190:	f7ff fff2 	bl	8009178 <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8009194:	4620      	mov	r0, r4
 8009196:	f241 015c 	movw	r1, #4188	; 0x105c
 800919a:	f021 fbce 	bl	802a93a <_ZdlPvj>
 800919e:	4620      	mov	r0, r4
 80091a0:	bd10      	pop	{r4, pc}
	...

080091a4 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 80091a4:	b510      	push	{r4, lr}
 80091a6:	4604      	mov	r4, r0
 80091a8:	f7fe fe36 	bl	8007e18 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 80091ac:	4b01      	ldr	r3, [pc, #4]	; (80091b4 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 80091ae:	6023      	str	r3, [r4, #0]
}
 80091b0:	4620      	mov	r0, r4
 80091b2:	bd10      	pop	{r4, pc}
 80091b4:	0802ef08 	.word	0x0802ef08

080091b8 <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 80091b8:	f7fe bde2 	b.w	8007d80 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

080091bc <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 80091bc:	2100      	movs	r1, #0
 80091be:	223c      	movs	r2, #60	; 0x3c
 80091c0:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 80091c4:	4770      	bx	lr
	...

080091c8 <_ZN5Model4tickEv>:

void Model::tick()
{
 80091c8:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80091ca:	4d0a      	ldr	r5, [pc, #40]	; (80091f4 <_ZN5Model4tickEv+0x2c>)
{
 80091cc:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80091ce:	6828      	ldr	r0, [r5, #0]
 80091d0:	f004 fc20 	bl	800da14 <osMessageQueueGetCount>
 80091d4:	b168      	cbz	r0, 80091f2 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80091d6:	2300      	movs	r3, #0
 80091d8:	6828      	ldr	r0, [r5, #0]
 80091da:	461a      	mov	r2, r3
 80091dc:	1d21      	adds	r1, r4, #4
 80091de:	f004 fbe5 	bl	800d9ac <osMessageQueueGet>
 80091e2:	b930      	cbnz	r0, 80091f2 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80091e4:	6820      	ldr	r0, [r4, #0]
 80091e6:	6861      	ldr	r1, [r4, #4]
 80091e8:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80091ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80091ee:	689b      	ldr	r3, [r3, #8]
 80091f0:	4718      	bx	r3
}
 80091f2:	bd70      	pop	{r4, r5, r6, pc}
 80091f4:	200001d0 	.word	0x200001d0

080091f8 <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80091f8:	4770      	bx	lr

080091fa <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80091fa:	3804      	subs	r0, #4
 80091fc:	4770      	bx	lr

080091fe <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80091fe:	4770      	bx	lr

08009200 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8009200:	68c0      	ldr	r0, [r0, #12]
 8009202:	6803      	ldr	r3, [r0, #0]
 8009204:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009206:	4718      	bx	r3

08009208 <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8009208:	f1a0 0004 	sub.w	r0, r0, #4
 800920c:	f7ff bff8 	b.w	8009200 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

08009210 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 8009210:	b510      	push	{r4, lr}
 8009212:	2110      	movs	r1, #16
 8009214:	4604      	mov	r4, r0
 8009216:	f021 fb90 	bl	802a93a <_ZdlPvj>
 800921a:	4620      	mov	r0, r4
 800921c:	bd10      	pop	{r4, pc}

0800921e <_ZThn4_N21Project_InfoPresenterD0Ev>:
 800921e:	f1a0 0004 	sub.w	r0, r0, #4
 8009222:	e7f5      	b.n	8009210 <_ZN21Project_InfoPresenterD0Ev>

08009224 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 8009224:	b510      	push	{r4, lr}
 8009226:	2200      	movs	r2, #0
 8009228:	6082      	str	r2, [r0, #8]
    : view(v)
 800922a:	4a04      	ldr	r2, [pc, #16]	; (800923c <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 800922c:	60c1      	str	r1, [r0, #12]
 800922e:	f102 0408 	add.w	r4, r2, #8
 8009232:	3224      	adds	r2, #36	; 0x24
 8009234:	6004      	str	r4, [r0, #0]
 8009236:	6042      	str	r2, [r0, #4]
}
 8009238:	bd10      	pop	{r4, pc}
 800923a:	bf00      	nop
 800923c:	0802ef34 	.word	0x0802ef34

08009240 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8009240:	4770      	bx	lr
	...

08009244 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8009244:	b510      	push	{r4, lr}
 8009246:	4b03      	ldr	r3, [pc, #12]	; (8009254 <_ZN16Project_InfoViewD1Ev+0x10>)
 8009248:	6003      	str	r3, [r0, #0]
 800924a:	4604      	mov	r4, r0
 800924c:	f7fe ff6a 	bl	8008124 <_ZN20Project_InfoViewBaseD1Ev>
 8009250:	4620      	mov	r0, r4
 8009252:	bd10      	pop	{r4, pc}
 8009254:	0802ef6c 	.word	0x0802ef6c

08009258 <_ZN16Project_InfoViewD0Ev>:
 8009258:	b510      	push	{r4, lr}
 800925a:	4604      	mov	r4, r0
 800925c:	f7ff fff2 	bl	8009244 <_ZN16Project_InfoViewD1Ev>
 8009260:	4620      	mov	r0, r4
 8009262:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8009266:	f021 fb68 	bl	802a93a <_ZdlPvj>
 800926a:	4620      	mov	r0, r4
 800926c:	bd10      	pop	{r4, pc}
	...

08009270 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8009270:	b510      	push	{r4, lr}
 8009272:	4604      	mov	r4, r0
 8009274:	f7fe ff7e 	bl	8008174 <_ZN20Project_InfoViewBaseC1Ev>
 8009278:	4b01      	ldr	r3, [pc, #4]	; (8009280 <_ZN16Project_InfoViewC1Ev+0x10>)
 800927a:	6023      	str	r3, [r4, #0]
}
 800927c:	4620      	mov	r0, r4
 800927e:	bd10      	pop	{r4, pc}
 8009280:	0802ef6c 	.word	0x0802ef6c

08009284 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8009284:	f7fe bf2a 	b.w	80080dc <_ZN20Project_InfoViewBase11setupScreenEv>

08009288 <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8009288:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800928a:	4a0a      	ldr	r2, [pc, #40]	; (80092b4 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 800928c:	4605      	mov	r5, r0
 800928e:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8009290:	460b      	mov	r3, r1
 8009292:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8009296:	2104      	movs	r1, #4
 8009298:	f010 fc48 	bl	8019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 800929c:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80092a0:	f00e fb7e 	bl	80179a0 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 80092a4:	b92c      	cbnz	r4, 80092b2 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 80092a6:	f00d fa93 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80092aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80092ae:	f7fb bbd9 	b.w	8004a64 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80092b2:	bd38      	pop	{r3, r4, r5, pc}
 80092b4:	0802d042 	.word	0x0802d042

080092b8 <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 80092b8:	4770      	bx	lr

080092ba <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 80092ba:	3804      	subs	r0, #4
 80092bc:	4770      	bx	lr

080092be <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 80092be:	4770      	bx	lr

080092c0 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 80092c0:	4770      	bx	lr

080092c2 <_ZN21Shutting_OffPresenterD0Ev>:
 80092c2:	b510      	push	{r4, lr}
 80092c4:	2110      	movs	r1, #16
 80092c6:	4604      	mov	r4, r0
 80092c8:	f021 fb37 	bl	802a93a <_ZdlPvj>
 80092cc:	4620      	mov	r0, r4
 80092ce:	bd10      	pop	{r4, pc}

080092d0 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 80092d0:	f1a0 0004 	sub.w	r0, r0, #4
 80092d4:	e7f5      	b.n	80092c2 <_ZN21Shutting_OffPresenterD0Ev>

080092d6 <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 80092d6:	4770      	bx	lr

080092d8 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 80092d8:	b510      	push	{r4, lr}
 80092da:	2200      	movs	r2, #0
 80092dc:	6082      	str	r2, [r0, #8]
    : view(v)
 80092de:	4a04      	ldr	r2, [pc, #16]	; (80092f0 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 80092e0:	60c1      	str	r1, [r0, #12]
 80092e2:	f102 0408 	add.w	r4, r2, #8
 80092e6:	3224      	adds	r2, #36	; 0x24
 80092e8:	6004      	str	r4, [r0, #0]
 80092ea:	6042      	str	r2, [r0, #4]
}
 80092ec:	bd10      	pop	{r4, pc}
 80092ee:	bf00      	nop
 80092f0:	0802ef9c 	.word	0x0802ef9c

080092f4 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 80092f4:	4770      	bx	lr
	...

080092f8 <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 80092f8:	b510      	push	{r4, lr}
 80092fa:	4b03      	ldr	r3, [pc, #12]	; (8009308 <_ZN16Shutting_OffViewD1Ev+0x10>)
 80092fc:	6003      	str	r3, [r0, #0]
 80092fe:	4604      	mov	r4, r0
 8009300:	f7ff f906 	bl	8008510 <_ZN20Shutting_OffViewBaseD1Ev>
 8009304:	4620      	mov	r0, r4
 8009306:	bd10      	pop	{r4, pc}
 8009308:	0802efd4 	.word	0x0802efd4

0800930c <_ZN16Shutting_OffViewD0Ev>:
 800930c:	b510      	push	{r4, lr}
 800930e:	4604      	mov	r4, r0
 8009310:	f7ff fff2 	bl	80092f8 <_ZN16Shutting_OffViewD1Ev>
 8009314:	4620      	mov	r0, r4
 8009316:	2198      	movs	r1, #152	; 0x98
 8009318:	f021 fb0f 	bl	802a93a <_ZdlPvj>
 800931c:	4620      	mov	r0, r4
 800931e:	bd10      	pop	{r4, pc}

08009320 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8009320:	b510      	push	{r4, lr}
 8009322:	4604      	mov	r4, r0
 8009324:	f7ff f8fe 	bl	8008524 <_ZN20Shutting_OffViewBaseC1Ev>
 8009328:	4b01      	ldr	r3, [pc, #4]	; (8009330 <_ZN16Shutting_OffViewC1Ev+0x10>)
 800932a:	6023      	str	r3, [r4, #0]
}
 800932c:	4620      	mov	r0, r4
 800932e:	bd10      	pop	{r4, pc}
 8009330:	0802efd4 	.word	0x0802efd4

08009334 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8009334:	f7ff b8ed 	b.w	8008512 <_ZN20Shutting_OffViewBase11setupScreenEv>

08009338 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8009338:	20f0      	movs	r0, #240	; 0xf0
 800933a:	4770      	bx	lr

0800933c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 800933c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8009340:	4770      	bx	lr
 8009342:	bf00      	nop

08009344 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8009344:	2029      	movs	r0, #41	; 0x29
 8009346:	f7f7 bf49 	b.w	80011dc <LCD_IO_WriteReg>
 800934a:	bf00      	nop

0800934c <ili9341_DisplayOff>:
 800934c:	2028      	movs	r0, #40	; 0x28
 800934e:	f7f7 bf45 	b.w	80011dc <LCD_IO_WriteReg>
 8009352:	bf00      	nop

08009354 <ili9341_Init>:
{
 8009354:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8009356:	f7f7 ff07 	bl	8001168 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800935a:	20ca      	movs	r0, #202	; 0xca
 800935c:	f7f7 ff3e 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009360:	20c3      	movs	r0, #195	; 0xc3
 8009362:	f7f7 ff11 	bl	8001188 <LCD_IO_WriteData>
 8009366:	2008      	movs	r0, #8
 8009368:	f7f7 ff0e 	bl	8001188 <LCD_IO_WriteData>
 800936c:	2050      	movs	r0, #80	; 0x50
 800936e:	f7f7 ff0b 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009372:	20cf      	movs	r0, #207	; 0xcf
 8009374:	f7f7 ff32 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009378:	2000      	movs	r0, #0
 800937a:	f7f7 ff05 	bl	8001188 <LCD_IO_WriteData>
 800937e:	20c1      	movs	r0, #193	; 0xc1
 8009380:	f7f7 ff02 	bl	8001188 <LCD_IO_WriteData>
 8009384:	2030      	movs	r0, #48	; 0x30
 8009386:	f7f7 feff 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800938a:	20ed      	movs	r0, #237	; 0xed
 800938c:	f7f7 ff26 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009390:	2064      	movs	r0, #100	; 0x64
 8009392:	f7f7 fef9 	bl	8001188 <LCD_IO_WriteData>
 8009396:	2003      	movs	r0, #3
 8009398:	f7f7 fef6 	bl	8001188 <LCD_IO_WriteData>
 800939c:	2012      	movs	r0, #18
 800939e:	f7f7 fef3 	bl	8001188 <LCD_IO_WriteData>
 80093a2:	2081      	movs	r0, #129	; 0x81
 80093a4:	f7f7 fef0 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80093a8:	20e8      	movs	r0, #232	; 0xe8
 80093aa:	f7f7 ff17 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80093ae:	2085      	movs	r0, #133	; 0x85
 80093b0:	f7f7 feea 	bl	8001188 <LCD_IO_WriteData>
 80093b4:	2000      	movs	r0, #0
 80093b6:	f7f7 fee7 	bl	8001188 <LCD_IO_WriteData>
 80093ba:	2078      	movs	r0, #120	; 0x78
 80093bc:	f7f7 fee4 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80093c0:	20cb      	movs	r0, #203	; 0xcb
 80093c2:	f7f7 ff0b 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80093c6:	2039      	movs	r0, #57	; 0x39
 80093c8:	f7f7 fede 	bl	8001188 <LCD_IO_WriteData>
 80093cc:	202c      	movs	r0, #44	; 0x2c
 80093ce:	f7f7 fedb 	bl	8001188 <LCD_IO_WriteData>
 80093d2:	2000      	movs	r0, #0
 80093d4:	f7f7 fed8 	bl	8001188 <LCD_IO_WriteData>
 80093d8:	2034      	movs	r0, #52	; 0x34
 80093da:	f7f7 fed5 	bl	8001188 <LCD_IO_WriteData>
 80093de:	2002      	movs	r0, #2
 80093e0:	f7f7 fed2 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80093e4:	20f7      	movs	r0, #247	; 0xf7
 80093e6:	f7f7 fef9 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80093ea:	2020      	movs	r0, #32
 80093ec:	f7f7 fecc 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80093f0:	20ea      	movs	r0, #234	; 0xea
 80093f2:	f7f7 fef3 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80093f6:	2000      	movs	r0, #0
 80093f8:	f7f7 fec6 	bl	8001188 <LCD_IO_WriteData>
 80093fc:	2000      	movs	r0, #0
 80093fe:	f7f7 fec3 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009402:	20b1      	movs	r0, #177	; 0xb1
 8009404:	f7f7 feea 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009408:	2000      	movs	r0, #0
 800940a:	f7f7 febd 	bl	8001188 <LCD_IO_WriteData>
 800940e:	201b      	movs	r0, #27
 8009410:	f7f7 feba 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009414:	20b6      	movs	r0, #182	; 0xb6
 8009416:	f7f7 fee1 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800941a:	200a      	movs	r0, #10
 800941c:	f7f7 feb4 	bl	8001188 <LCD_IO_WriteData>
 8009420:	20a2      	movs	r0, #162	; 0xa2
 8009422:	f7f7 feb1 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009426:	20c0      	movs	r0, #192	; 0xc0
 8009428:	f7f7 fed8 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800942c:	2010      	movs	r0, #16
 800942e:	f7f7 feab 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009432:	20c1      	movs	r0, #193	; 0xc1
 8009434:	f7f7 fed2 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009438:	2010      	movs	r0, #16
 800943a:	f7f7 fea5 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800943e:	20c5      	movs	r0, #197	; 0xc5
 8009440:	f7f7 fecc 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009444:	2045      	movs	r0, #69	; 0x45
 8009446:	f7f7 fe9f 	bl	8001188 <LCD_IO_WriteData>
 800944a:	2015      	movs	r0, #21
 800944c:	f7f7 fe9c 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009450:	20c7      	movs	r0, #199	; 0xc7
 8009452:	f7f7 fec3 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009456:	2090      	movs	r0, #144	; 0x90
 8009458:	f7f7 fe96 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800945c:	2036      	movs	r0, #54	; 0x36
 800945e:	f7f7 febd 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009462:	20c8      	movs	r0, #200	; 0xc8
 8009464:	f7f7 fe90 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009468:	20f2      	movs	r0, #242	; 0xf2
 800946a:	f7f7 feb7 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800946e:	2000      	movs	r0, #0
 8009470:	f7f7 fe8a 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009474:	20b0      	movs	r0, #176	; 0xb0
 8009476:	f7f7 feb1 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800947a:	20c2      	movs	r0, #194	; 0xc2
 800947c:	f7f7 fe84 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8009480:	20b6      	movs	r0, #182	; 0xb6
 8009482:	f7f7 feab 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009486:	200a      	movs	r0, #10
 8009488:	f7f7 fe7e 	bl	8001188 <LCD_IO_WriteData>
 800948c:	20a7      	movs	r0, #167	; 0xa7
 800948e:	f7f7 fe7b 	bl	8001188 <LCD_IO_WriteData>
 8009492:	2027      	movs	r0, #39	; 0x27
 8009494:	f7f7 fe78 	bl	8001188 <LCD_IO_WriteData>
 8009498:	2004      	movs	r0, #4
 800949a:	f7f7 fe75 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800949e:	202a      	movs	r0, #42	; 0x2a
 80094a0:	f7f7 fe9c 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094a4:	2000      	movs	r0, #0
 80094a6:	f7f7 fe6f 	bl	8001188 <LCD_IO_WriteData>
 80094aa:	2000      	movs	r0, #0
 80094ac:	f7f7 fe6c 	bl	8001188 <LCD_IO_WriteData>
 80094b0:	2000      	movs	r0, #0
 80094b2:	f7f7 fe69 	bl	8001188 <LCD_IO_WriteData>
 80094b6:	20ef      	movs	r0, #239	; 0xef
 80094b8:	f7f7 fe66 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094bc:	202b      	movs	r0, #43	; 0x2b
 80094be:	f7f7 fe8d 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094c2:	2000      	movs	r0, #0
 80094c4:	f7f7 fe60 	bl	8001188 <LCD_IO_WriteData>
 80094c8:	2000      	movs	r0, #0
 80094ca:	f7f7 fe5d 	bl	8001188 <LCD_IO_WriteData>
 80094ce:	2001      	movs	r0, #1
 80094d0:	f7f7 fe5a 	bl	8001188 <LCD_IO_WriteData>
 80094d4:	203f      	movs	r0, #63	; 0x3f
 80094d6:	f7f7 fe57 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094da:	20f6      	movs	r0, #246	; 0xf6
 80094dc:	f7f7 fe7e 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80094e0:	2001      	movs	r0, #1
 80094e2:	f7f7 fe51 	bl	8001188 <LCD_IO_WriteData>
 80094e6:	2000      	movs	r0, #0
 80094e8:	f7f7 fe4e 	bl	8001188 <LCD_IO_WriteData>
 80094ec:	2006      	movs	r0, #6
 80094ee:	f7f7 fe4b 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80094f2:	202c      	movs	r0, #44	; 0x2c
 80094f4:	f7f7 fe72 	bl	80011dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 80094f8:	20c8      	movs	r0, #200	; 0xc8
 80094fa:	f7f7 fed7 	bl	80012ac <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80094fe:	2026      	movs	r0, #38	; 0x26
 8009500:	f7f7 fe6c 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009504:	2001      	movs	r0, #1
 8009506:	f7f7 fe3f 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800950a:	20e0      	movs	r0, #224	; 0xe0
 800950c:	f7f7 fe66 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009510:	200f      	movs	r0, #15
 8009512:	f7f7 fe39 	bl	8001188 <LCD_IO_WriteData>
 8009516:	2029      	movs	r0, #41	; 0x29
 8009518:	f7f7 fe36 	bl	8001188 <LCD_IO_WriteData>
 800951c:	2024      	movs	r0, #36	; 0x24
 800951e:	f7f7 fe33 	bl	8001188 <LCD_IO_WriteData>
 8009522:	200c      	movs	r0, #12
 8009524:	f7f7 fe30 	bl	8001188 <LCD_IO_WriteData>
 8009528:	200e      	movs	r0, #14
 800952a:	f7f7 fe2d 	bl	8001188 <LCD_IO_WriteData>
 800952e:	2009      	movs	r0, #9
 8009530:	f7f7 fe2a 	bl	8001188 <LCD_IO_WriteData>
 8009534:	204e      	movs	r0, #78	; 0x4e
 8009536:	f7f7 fe27 	bl	8001188 <LCD_IO_WriteData>
 800953a:	2078      	movs	r0, #120	; 0x78
 800953c:	f7f7 fe24 	bl	8001188 <LCD_IO_WriteData>
 8009540:	203c      	movs	r0, #60	; 0x3c
 8009542:	f7f7 fe21 	bl	8001188 <LCD_IO_WriteData>
 8009546:	2009      	movs	r0, #9
 8009548:	f7f7 fe1e 	bl	8001188 <LCD_IO_WriteData>
 800954c:	2013      	movs	r0, #19
 800954e:	f7f7 fe1b 	bl	8001188 <LCD_IO_WriteData>
 8009552:	2005      	movs	r0, #5
 8009554:	f7f7 fe18 	bl	8001188 <LCD_IO_WriteData>
 8009558:	2017      	movs	r0, #23
 800955a:	f7f7 fe15 	bl	8001188 <LCD_IO_WriteData>
 800955e:	2011      	movs	r0, #17
 8009560:	f7f7 fe12 	bl	8001188 <LCD_IO_WriteData>
 8009564:	2000      	movs	r0, #0
 8009566:	f7f7 fe0f 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800956a:	20e1      	movs	r0, #225	; 0xe1
 800956c:	f7f7 fe36 	bl	80011dc <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8009570:	2000      	movs	r0, #0
 8009572:	f7f7 fe09 	bl	8001188 <LCD_IO_WriteData>
 8009576:	2016      	movs	r0, #22
 8009578:	f7f7 fe06 	bl	8001188 <LCD_IO_WriteData>
 800957c:	201b      	movs	r0, #27
 800957e:	f7f7 fe03 	bl	8001188 <LCD_IO_WriteData>
 8009582:	2004      	movs	r0, #4
 8009584:	f7f7 fe00 	bl	8001188 <LCD_IO_WriteData>
 8009588:	2011      	movs	r0, #17
 800958a:	f7f7 fdfd 	bl	8001188 <LCD_IO_WriteData>
 800958e:	2007      	movs	r0, #7
 8009590:	f7f7 fdfa 	bl	8001188 <LCD_IO_WriteData>
 8009594:	2031      	movs	r0, #49	; 0x31
 8009596:	f7f7 fdf7 	bl	8001188 <LCD_IO_WriteData>
 800959a:	2033      	movs	r0, #51	; 0x33
 800959c:	f7f7 fdf4 	bl	8001188 <LCD_IO_WriteData>
 80095a0:	2042      	movs	r0, #66	; 0x42
 80095a2:	f7f7 fdf1 	bl	8001188 <LCD_IO_WriteData>
 80095a6:	2005      	movs	r0, #5
 80095a8:	f7f7 fdee 	bl	8001188 <LCD_IO_WriteData>
 80095ac:	200c      	movs	r0, #12
 80095ae:	f7f7 fdeb 	bl	8001188 <LCD_IO_WriteData>
 80095b2:	200a      	movs	r0, #10
 80095b4:	f7f7 fde8 	bl	8001188 <LCD_IO_WriteData>
 80095b8:	2028      	movs	r0, #40	; 0x28
 80095ba:	f7f7 fde5 	bl	8001188 <LCD_IO_WriteData>
 80095be:	202f      	movs	r0, #47	; 0x2f
 80095c0:	f7f7 fde2 	bl	8001188 <LCD_IO_WriteData>
 80095c4:	200f      	movs	r0, #15
 80095c6:	f7f7 fddf 	bl	8001188 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80095ca:	2011      	movs	r0, #17
 80095cc:	f7f7 fe06 	bl	80011dc <LCD_IO_WriteReg>
  LCD_Delay(200);
 80095d0:	20c8      	movs	r0, #200	; 0xc8
 80095d2:	f7f7 fe6b 	bl	80012ac <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80095d6:	2029      	movs	r0, #41	; 0x29
 80095d8:	f7f7 fe00 	bl	80011dc <LCD_IO_WriteReg>
}
 80095dc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80095e0:	202c      	movs	r0, #44	; 0x2c
 80095e2:	f7f7 bdfb 	b.w	80011dc <LCD_IO_WriteReg>
 80095e6:	bf00      	nop

080095e8 <ili9341_ReadID>:
{
 80095e8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80095ea:	f7f7 fdbd 	bl	8001168 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80095ee:	2103      	movs	r1, #3
 80095f0:	20d3      	movs	r0, #211	; 0xd3
 80095f2:	f7f7 fe1d 	bl	8001230 <LCD_IO_ReadData>
}
 80095f6:	b280      	uxth	r0, r0
 80095f8:	bd08      	pop	{r3, pc}
 80095fa:	bf00      	nop

080095fc <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80095fc:	221f      	movs	r2, #31
 80095fe:	210b      	movs	r1, #11
 8009600:	b2c0      	uxtb	r0, r0
 8009602:	f7f7 bd63 	b.w	80010cc <IOE_Write>
 8009606:	bf00      	nop

08009608 <stmpe811_Reset>:
{
 8009608:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 800960a:	b2c4      	uxtb	r4, r0
 800960c:	2202      	movs	r2, #2
 800960e:	2103      	movs	r1, #3
 8009610:	4620      	mov	r0, r4
 8009612:	f7f7 fd5b 	bl	80010cc <IOE_Write>
  IOE_Delay(10); 
 8009616:	200a      	movs	r0, #10
 8009618:	f7f7 fda4 	bl	8001164 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 800961c:	4620      	mov	r0, r4
 800961e:	2200      	movs	r2, #0
 8009620:	2103      	movs	r1, #3
 8009622:	f7f7 fd53 	bl	80010cc <IOE_Write>
}
 8009626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 800962a:	2002      	movs	r0, #2
 800962c:	f7f7 bd9a 	b.w	8001164 <IOE_Delay>

08009630 <stmpe811_ReadID>:
{
 8009630:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009632:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8009634:	f7f7 fd46 	bl	80010c4 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009638:	2100      	movs	r1, #0
 800963a:	4620      	mov	r0, r4
 800963c:	f7f7 fd5e 	bl	80010fc <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009640:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009642:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009644:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8009646:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8009648:	f7f7 fd58 	bl	80010fc <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 800964c:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8009650:	b280      	uxth	r0, r0
 8009652:	bd10      	pop	{r4, pc}

08009654 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8009654:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8009656:	b2c4      	uxtb	r4, r0
 8009658:	2140      	movs	r1, #64	; 0x40
 800965a:	4620      	mov	r0, r4
 800965c:	f7f7 fd4e 	bl	80010fc <IOE_Read>
  
  if(state > 0)
 8009660:	0603      	lsls	r3, r0, #24
 8009662:	d40b      	bmi.n	800967c <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009664:	4620      	mov	r0, r4
 8009666:	2201      	movs	r2, #1
 8009668:	214b      	movs	r1, #75	; 0x4b
 800966a:	f7f7 fd2f 	bl	80010cc <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800966e:	4620      	mov	r0, r4
 8009670:	2200      	movs	r2, #0
 8009672:	214b      	movs	r1, #75	; 0x4b
 8009674:	f7f7 fd2a 	bl	80010cc <IOE_Write>
  uint8_t ret = 0;
 8009678:	2000      	movs	r0, #0
  }
  
  return ret;
}
 800967a:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 800967c:	214c      	movs	r1, #76	; 0x4c
 800967e:	4620      	mov	r0, r4
 8009680:	f7f7 fd3c 	bl	80010fc <IOE_Read>
      ret = 1;
 8009684:	3800      	subs	r0, #0
 8009686:	bf18      	it	ne
 8009688:	2001      	movne	r0, #1
}
 800968a:	bd10      	pop	{r4, pc}

0800968c <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 800968c:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800968e:	210b      	movs	r1, #11
 8009690:	b2c0      	uxtb	r0, r0
 8009692:	f7f7 fd33 	bl	80010fc <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8009696:	f000 001f 	and.w	r0, r0, #31
 800969a:	bd08      	pop	{r3, pc}

0800969c <stmpe811_TS_GetXY>:
{
 800969c:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 800969e:	2304      	movs	r3, #4
{
 80096a0:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80096a2:	b2c4      	uxtb	r4, r0
{
 80096a4:	4615      	mov	r5, r2
 80096a6:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80096a8:	eb0d 0203 	add.w	r2, sp, r3
 80096ac:	21d7      	movs	r1, #215	; 0xd7
 80096ae:	4620      	mov	r0, r4
 80096b0:	f7f7 fd40 	bl	8001134 <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80096b4:	9b01      	ldr	r3, [sp, #4]
 80096b6:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80096b8:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80096ba:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80096be:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80096c0:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80096c2:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80096c4:	2201      	movs	r2, #1
 80096c6:	214b      	movs	r1, #75	; 0x4b
 80096c8:	f7f7 fd00 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80096cc:	2200      	movs	r2, #0
 80096ce:	214b      	movs	r1, #75	; 0x4b
 80096d0:	4620      	mov	r0, r4
 80096d2:	f7f7 fcfb 	bl	80010cc <IOE_Write>
}
 80096d6:	b002      	add	sp, #8
 80096d8:	bd70      	pop	{r4, r5, r6, pc}
 80096da:	bf00      	nop

080096dc <stmpe811_TS_Start>:
{
 80096dc:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80096de:	b2c4      	uxtb	r4, r0
 80096e0:	2104      	movs	r1, #4
 80096e2:	4620      	mov	r0, r4
 80096e4:	f7f7 fd0a 	bl	80010fc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80096e8:	2104      	movs	r1, #4
 80096ea:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 80096ee:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 80096f0:	4620      	mov	r0, r4
 80096f2:	f7f7 fceb 	bl	80010cc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80096f6:	2117      	movs	r1, #23
 80096f8:	4620      	mov	r0, r4
 80096fa:	f7f7 fcff 	bl	80010fc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80096fe:	2117      	movs	r1, #23
 8009700:	f000 020f 	and.w	r2, r0, #15
 8009704:	4620      	mov	r0, r4
 8009706:	f7f7 fce1 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 800970a:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800970e:	4620      	mov	r0, r4
 8009710:	2104      	movs	r1, #4
 8009712:	f7f7 fcdb 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8009716:	2249      	movs	r2, #73	; 0x49
 8009718:	2120      	movs	r1, #32
 800971a:	4620      	mov	r0, r4
 800971c:	f7f7 fcd6 	bl	80010cc <IOE_Write>
  IOE_Delay(2); 
 8009720:	2002      	movs	r0, #2
 8009722:	f7f7 fd1f 	bl	8001164 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8009726:	4620      	mov	r0, r4
 8009728:	2201      	movs	r2, #1
 800972a:	2121      	movs	r1, #33	; 0x21
 800972c:	f7f7 fcce 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8009730:	4620      	mov	r0, r4
 8009732:	229a      	movs	r2, #154	; 0x9a
 8009734:	2141      	movs	r1, #65	; 0x41
 8009736:	f7f7 fcc9 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 800973a:	4620      	mov	r0, r4
 800973c:	2201      	movs	r2, #1
 800973e:	214a      	movs	r1, #74	; 0x4a
 8009740:	f7f7 fcc4 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8009744:	4620      	mov	r0, r4
 8009746:	2201      	movs	r2, #1
 8009748:	214b      	movs	r1, #75	; 0x4b
 800974a:	f7f7 fcbf 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 800974e:	4620      	mov	r0, r4
 8009750:	2200      	movs	r2, #0
 8009752:	214b      	movs	r1, #75	; 0x4b
 8009754:	f7f7 fcba 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8009758:	4620      	mov	r0, r4
 800975a:	2201      	movs	r2, #1
 800975c:	2156      	movs	r1, #86	; 0x56
 800975e:	f7f7 fcb5 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8009762:	4620      	mov	r0, r4
 8009764:	2201      	movs	r2, #1
 8009766:	2158      	movs	r1, #88	; 0x58
 8009768:	f7f7 fcb0 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 800976c:	4620      	mov	r0, r4
 800976e:	2201      	movs	r2, #1
 8009770:	2140      	movs	r1, #64	; 0x40
 8009772:	f7f7 fcab 	bl	80010cc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8009776:	4620      	mov	r0, r4
 8009778:	22ff      	movs	r2, #255	; 0xff
 800977a:	210b      	movs	r1, #11
 800977c:	f7f7 fca6 	bl	80010cc <IOE_Write>
}
 8009780:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8009784:	2002      	movs	r0, #2
 8009786:	f7f7 bced 	b.w	8001164 <IOE_Delay>
 800978a:	bf00      	nop

0800978c <stmpe811_TS_DisableIT>:
{
 800978c:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 800978e:	b2c4      	uxtb	r4, r0
 8009790:	2109      	movs	r1, #9
 8009792:	4620      	mov	r0, r4
 8009794:	f7f7 fcb2 	bl	80010fc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8009798:	2109      	movs	r1, #9
 800979a:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 800979e:	4620      	mov	r0, r4
 80097a0:	f7f7 fc94 	bl	80010cc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80097a4:	210a      	movs	r1, #10
 80097a6:	4620      	mov	r0, r4
 80097a8:	f7f7 fca8 	bl	80010fc <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80097ac:	210a      	movs	r1, #10
 80097ae:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 80097b2:	4620      	mov	r0, r4
}
 80097b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80097b8:	f7f7 bc88 	b.w	80010cc <IOE_Write>

080097bc <stmpe811_TS_EnableIT>:
{
 80097bc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80097be:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 80097c0:	f7f7 fc82 	bl	80010c8 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 80097c4:	210a      	movs	r1, #10
 80097c6:	4620      	mov	r0, r4
 80097c8:	f7f7 fc98 	bl	80010fc <IOE_Read>
  tmp |= Source; 
 80097cc:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80097d0:	b2c2      	uxtb	r2, r0
 80097d2:	210a      	movs	r1, #10
 80097d4:	4620      	mov	r0, r4
 80097d6:	f7f7 fc79 	bl	80010cc <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 80097da:	2109      	movs	r1, #9
 80097dc:	4620      	mov	r0, r4
 80097de:	f7f7 fc8d 	bl	80010fc <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 80097e2:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80097e6:	b2c2      	uxtb	r2, r0
 80097e8:	2109      	movs	r1, #9
 80097ea:	4620      	mov	r0, r4
}
 80097ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 80097f0:	f7f7 bc6c 	b.w	80010cc <IOE_Write>

080097f4 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80097f4:	4a10      	ldr	r2, [pc, #64]	; (8009838 <stmpe811_Init+0x44>)
 80097f6:	7813      	ldrb	r3, [r2, #0]
 80097f8:	4298      	cmp	r0, r3
 80097fa:	d004      	beq.n	8009806 <stmpe811_Init+0x12>
 80097fc:	7851      	ldrb	r1, [r2, #1]
 80097fe:	4288      	cmp	r0, r1
 8009800:	d001      	beq.n	8009806 <stmpe811_Init+0x12>
 8009802:	b113      	cbz	r3, 800980a <stmpe811_Init+0x16>
 8009804:	b101      	cbz	r1, 8009808 <stmpe811_Init+0x14>
 8009806:	4770      	bx	lr
 8009808:	2301      	movs	r3, #1
{
 800980a:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 800980c:	b2c4      	uxtb	r4, r0
 800980e:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8009810:	f7f7 fc58 	bl	80010c4 <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8009814:	2202      	movs	r2, #2
 8009816:	2103      	movs	r1, #3
 8009818:	4620      	mov	r0, r4
 800981a:	f7f7 fc57 	bl	80010cc <IOE_Write>
  IOE_Delay(10); 
 800981e:	200a      	movs	r0, #10
 8009820:	f7f7 fca0 	bl	8001164 <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8009824:	4620      	mov	r0, r4
 8009826:	2200      	movs	r2, #0
 8009828:	2103      	movs	r1, #3
 800982a:	f7f7 fc4f 	bl	80010cc <IOE_Write>
}
 800982e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009832:	2002      	movs	r0, #2
 8009834:	f7f7 bc96 	b.w	8001164 <IOE_Delay>
 8009838:	200029cc 	.word	0x200029cc

0800983c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800983c:	4b05      	ldr	r3, [pc, #20]	; (8009854 <SystemInit+0x18>)
 800983e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009842:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009846:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800984a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800984e:	6099      	str	r1, [r3, #8]
#endif
}
 8009850:	4770      	bx	lr
 8009852:	bf00      	nop
 8009854:	e000ed00 	.word	0xe000ed00

08009858 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009858:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800985a:	4b0b      	ldr	r3, [pc, #44]	; (8009888 <HAL_Init+0x30>)
 800985c:	681a      	ldr	r2, [r3, #0]
 800985e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009862:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009864:	681a      	ldr	r2, [r3, #0]
 8009866:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800986a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800986c:	681a      	ldr	r2, [r3, #0]
 800986e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009872:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009874:	2003      	movs	r0, #3
 8009876:	f000 f82d 	bl	80098d4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800987a:	2000      	movs	r0, #0
 800987c:	f7f8 f8ea 	bl	8001a54 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009880:	f7f7 fe68 	bl	8001554 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009884:	2000      	movs	r0, #0
 8009886:	bd08      	pop	{r3, pc}
 8009888:	40023c00 	.word	0x40023c00

0800988c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800988c:	4a03      	ldr	r2, [pc, #12]	; (800989c <HAL_IncTick+0x10>)
 800988e:	4b04      	ldr	r3, [pc, #16]	; (80098a0 <HAL_IncTick+0x14>)
 8009890:	6811      	ldr	r1, [r2, #0]
 8009892:	781b      	ldrb	r3, [r3, #0]
 8009894:	440b      	add	r3, r1
 8009896:	6013      	str	r3, [r2, #0]
}
 8009898:	4770      	bx	lr
 800989a:	bf00      	nop
 800989c:	200029d0 	.word	0x200029d0
 80098a0:	2000007c 	.word	0x2000007c

080098a4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 80098a4:	4b01      	ldr	r3, [pc, #4]	; (80098ac <HAL_GetTick+0x8>)
 80098a6:	6818      	ldr	r0, [r3, #0]
}
 80098a8:	4770      	bx	lr
 80098aa:	bf00      	nop
 80098ac:	200029d0 	.word	0x200029d0

080098b0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80098b0:	b538      	push	{r3, r4, r5, lr}
 80098b2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80098b4:	f7ff fff6 	bl	80098a4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80098b8:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 80098ba:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 80098bc:	d002      	beq.n	80098c4 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 80098be:	4b04      	ldr	r3, [pc, #16]	; (80098d0 <HAL_Delay+0x20>)
 80098c0:	781b      	ldrb	r3, [r3, #0]
 80098c2:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80098c4:	f7ff ffee 	bl	80098a4 <HAL_GetTick>
 80098c8:	1b43      	subs	r3, r0, r5
 80098ca:	42a3      	cmp	r3, r4
 80098cc:	d3fa      	bcc.n	80098c4 <HAL_Delay+0x14>
  {
  }
}
 80098ce:	bd38      	pop	{r3, r4, r5, pc}
 80098d0:	2000007c 	.word	0x2000007c

080098d4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80098d4:	4907      	ldr	r1, [pc, #28]	; (80098f4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80098d6:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80098d8:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80098da:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80098de:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80098e2:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80098e4:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80098e6:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80098ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80098ee:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80098f0:	4770      	bx	lr
 80098f2:	bf00      	nop
 80098f4:	e000ed00 	.word	0xe000ed00

080098f8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80098f8:	4b1c      	ldr	r3, [pc, #112]	; (800996c <HAL_NVIC_SetPriority+0x74>)
 80098fa:	68db      	ldr	r3, [r3, #12]
 80098fc:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009900:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009902:	f1c3 0e07 	rsb	lr, r3, #7
 8009906:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800990a:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800990e:	bf28      	it	cs
 8009910:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009914:	f1bc 0f06 	cmp.w	ip, #6
 8009918:	d91b      	bls.n	8009952 <HAL_NVIC_SetPriority+0x5a>
 800991a:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800991c:	f04f 3cff 	mov.w	ip, #4294967295
 8009920:	fa0c fc03 	lsl.w	ip, ip, r3
 8009924:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009928:	f04f 3cff 	mov.w	ip, #4294967295
 800992c:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009930:	ea21 010c 	bic.w	r1, r1, ip
 8009934:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 8009936:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009938:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 800993c:	db0c      	blt.n	8009958 <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800993e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009942:	0109      	lsls	r1, r1, #4
 8009944:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 8009948:	b2c9      	uxtb	r1, r1
 800994a:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 800994e:	f85d fb04 	ldr.w	pc, [sp], #4
 8009952:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009954:	4613      	mov	r3, r2
 8009956:	e7e7      	b.n	8009928 <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009958:	4b05      	ldr	r3, [pc, #20]	; (8009970 <HAL_NVIC_SetPriority+0x78>)
 800995a:	f000 000f 	and.w	r0, r0, #15
 800995e:	0109      	lsls	r1, r1, #4
 8009960:	4403      	add	r3, r0
 8009962:	b2c9      	uxtb	r1, r1
 8009964:	7619      	strb	r1, [r3, #24]
 8009966:	f85d fb04 	ldr.w	pc, [sp], #4
 800996a:	bf00      	nop
 800996c:	e000ed00 	.word	0xe000ed00
 8009970:	e000ecfc 	.word	0xe000ecfc

08009974 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009974:	2800      	cmp	r0, #0
 8009976:	db07      	blt.n	8009988 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009978:	0941      	lsrs	r1, r0, #5
 800997a:	4a04      	ldr	r2, [pc, #16]	; (800998c <HAL_NVIC_EnableIRQ+0x18>)
 800997c:	f000 001f 	and.w	r0, r0, #31
 8009980:	2301      	movs	r3, #1
 8009982:	4083      	lsls	r3, r0
 8009984:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009988:	4770      	bx	lr
 800998a:	bf00      	nop
 800998c:	e000e100 	.word	0xe000e100

08009990 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009990:	b180      	cbz	r0, 80099b4 <HAL_CRC_Init+0x24>
{
 8009992:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009994:	7943      	ldrb	r3, [r0, #5]
 8009996:	4604      	mov	r4, r0
 8009998:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800999c:	b11b      	cbz	r3, 80099a6 <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800999e:	2301      	movs	r3, #1
 80099a0:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80099a2:	2000      	movs	r0, #0
}
 80099a4:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 80099a6:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 80099a8:	f7f7 fdf4 	bl	8001594 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 80099ac:	2301      	movs	r3, #1
 80099ae:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 80099b0:	2000      	movs	r0, #0
}
 80099b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80099b4:	2001      	movs	r0, #1
}
 80099b6:	4770      	bx	lr

080099b8 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80099b8:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80099bc:	2b02      	cmp	r3, #2
 80099be:	d003      	beq.n	80099c8 <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80099c0:	2380      	movs	r3, #128	; 0x80
 80099c2:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 80099c4:	2001      	movs	r0, #1
 80099c6:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80099c8:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 80099ca:	2305      	movs	r3, #5
 80099cc:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80099d0:	6813      	ldr	r3, [r2, #0]
 80099d2:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80099d6:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80099d8:	6013      	str	r3, [r2, #0]
}
 80099da:	4770      	bx	lr

080099dc <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80099dc:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80099e0:	4770      	bx	lr
 80099e2:	bf00      	nop

080099e4 <FLASH_SetErrorCode>:
  * @brief  Set the specific FLASH error flag.
  * @retval None
  */
static void FLASH_SetErrorCode(void)
{ 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 80099e4:	4b21      	ldr	r3, [pc, #132]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 80099e6:	68da      	ldr	r2, [r3, #12]
 80099e8:	06d0      	lsls	r0, r2, #27
 80099ea:	d505      	bpl.n	80099f8 <FLASH_SetErrorCode+0x14>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 80099ec:	4920      	ldr	r1, [pc, #128]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 80099ee:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH write protection error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 80099f0:	2010      	movs	r0, #16
   pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 80099f2:	4302      	orrs	r2, r0
 80099f4:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_WRPERR);
 80099f6:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 80099f8:	4b1c      	ldr	r3, [pc, #112]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 80099fa:	68da      	ldr	r2, [r3, #12]
 80099fc:	0691      	lsls	r1, r2, #26
 80099fe:	d506      	bpl.n	8009a0e <FLASH_SetErrorCode+0x2a>
  {
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009a00:	491b      	ldr	r1, [pc, #108]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 8009a02:	69ca      	ldr	r2, [r1, #28]
   
   /* Clear FLASH Programming alignment error pending bit */
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009a04:	2020      	movs	r0, #32
   pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 8009a06:	f042 0208 	orr.w	r2, r2, #8
 8009a0a:	61ca      	str	r2, [r1, #28]
   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGAERR);
 8009a0c:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 8009a0e:	4b17      	ldr	r3, [pc, #92]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 8009a10:	68da      	ldr	r2, [r3, #12]
 8009a12:	0652      	lsls	r2, r2, #25
 8009a14:	d506      	bpl.n	8009a24 <FLASH_SetErrorCode+0x40>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009a16:	4916      	ldr	r1, [pc, #88]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 8009a18:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming parallelism error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009a1a:	2040      	movs	r0, #64	; 0x40
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 8009a1c:	f042 0204 	orr.w	r2, r2, #4
 8009a20:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGPERR);
 8009a22:	60d8      	str	r0, [r3, #12]
  }
  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGSERR) != RESET)
 8009a24:	4b11      	ldr	r3, [pc, #68]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 8009a26:	68da      	ldr	r2, [r3, #12]
 8009a28:	0610      	lsls	r0, r2, #24
 8009a2a:	d506      	bpl.n	8009a3a <FLASH_SetErrorCode+0x56>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009a2c:	4910      	ldr	r1, [pc, #64]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 8009a2e:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Programming sequence error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009a30:	2080      	movs	r0, #128	; 0x80
    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGS;
 8009a32:	f042 0202 	orr.w	r2, r2, #2
 8009a36:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_PGSERR);
 8009a38:	60d8      	str	r0, [r3, #12]
  }
#if defined(FLASH_SR_RDERR) 
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_RDERR) != RESET)
 8009a3a:	4b0c      	ldr	r3, [pc, #48]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 8009a3c:	68da      	ldr	r2, [r3, #12]
 8009a3e:	05d1      	lsls	r1, r2, #23
 8009a40:	d507      	bpl.n	8009a52 <FLASH_SetErrorCode+0x6e>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009a42:	490b      	ldr	r1, [pc, #44]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 8009a44:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Proprietary readout protection error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009a46:	f44f 7080 	mov.w	r0, #256	; 0x100
    pFlash.ErrorCode |= HAL_FLASH_ERROR_RD;
 8009a4a:	f042 0201 	orr.w	r2, r2, #1
 8009a4e:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_RDERR);
 8009a50:	60d8      	str	r0, [r3, #12]
  }
#endif /* FLASH_SR_RDERR */  
  if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 8009a52:	4b06      	ldr	r3, [pc, #24]	; (8009a6c <FLASH_SetErrorCode+0x88>)
 8009a54:	68da      	ldr	r2, [r3, #12]
 8009a56:	0792      	lsls	r2, r2, #30
 8009a58:	d506      	bpl.n	8009a68 <FLASH_SetErrorCode+0x84>
  {
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009a5a:	4905      	ldr	r1, [pc, #20]	; (8009a70 <FLASH_SetErrorCode+0x8c>)
 8009a5c:	69ca      	ldr	r2, [r1, #28]
    
    /* Clear FLASH Operation error pending bit */
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009a5e:	2002      	movs	r0, #2
    pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 8009a60:	f042 0220 	orr.w	r2, r2, #32
 8009a64:	61ca      	str	r2, [r1, #28]
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_OPERR);
 8009a66:	60d8      	str	r0, [r3, #12]
  }
}
 8009a68:	4770      	bx	lr
 8009a6a:	bf00      	nop
 8009a6c:	40023c00 	.word	0x40023c00
 8009a70:	200029d4 	.word	0x200029d4

08009a74 <HAL_FLASH_Program>:
{
 8009a74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  __HAL_LOCK(&pFlash);
 8009a78:	4f4d      	ldr	r7, [pc, #308]	; (8009bb0 <HAL_FLASH_Program+0x13c>)
{
 8009a7a:	469b      	mov	fp, r3
  __HAL_LOCK(&pFlash);
 8009a7c:	7e3b      	ldrb	r3, [r7, #24]
 8009a7e:	2b01      	cmp	r3, #1
 8009a80:	d060      	beq.n	8009b44 <HAL_FLASH_Program+0xd0>
 8009a82:	2301      	movs	r3, #1
 8009a84:	763b      	strb	r3, [r7, #24]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009a86:	2300      	movs	r3, #0
 8009a88:	4681      	mov	r9, r0
 8009a8a:	468a      	mov	sl, r1
 8009a8c:	4690      	mov	r8, r2
 8009a8e:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009a90:	f7ff ff08 	bl	80098a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009a94:	4d47      	ldr	r5, [pc, #284]	; (8009bb4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009a96:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009a98:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009a9c:	e004      	b.n	8009aa8 <HAL_FLASH_Program+0x34>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009a9e:	f7ff ff01 	bl	80098a4 <HAL_GetTick>
 8009aa2:	1b00      	subs	r0, r0, r4
 8009aa4:	42b0      	cmp	r0, r6
 8009aa6:	d848      	bhi.n	8009b3a <HAL_FLASH_Program+0xc6>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009aa8:	68eb      	ldr	r3, [r5, #12]
 8009aaa:	03d8      	lsls	r0, r3, #15
 8009aac:	d4f7      	bmi.n	8009a9e <HAL_FLASH_Program+0x2a>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009aae:	68eb      	ldr	r3, [r5, #12]
 8009ab0:	07d9      	lsls	r1, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009ab2:	bf44      	itt	mi
 8009ab4:	2301      	movmi	r3, #1
 8009ab6:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009ab8:	4b3e      	ldr	r3, [pc, #248]	; (8009bb4 <HAL_FLASH_Program+0x140>)
 8009aba:	68da      	ldr	r2, [r3, #12]
 8009abc:	f412 7ff9 	tst.w	r2, #498	; 0x1f2
 8009ac0:	d154      	bne.n	8009b6c <HAL_FLASH_Program+0xf8>
    if(TypeProgram == FLASH_TYPEPROGRAM_BYTE)
 8009ac2:	f1b9 0f00 	cmp.w	r9, #0
 8009ac6:	d040      	beq.n	8009b4a <HAL_FLASH_Program+0xd6>
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009ac8:	f1b9 0f01 	cmp.w	r9, #1
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009acc:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_HALFWORD)
 8009ace:	d051      	beq.n	8009b74 <HAL_FLASH_Program+0x100>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009ad0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009ad4:	611a      	str	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009ad6:	f1b9 0f02 	cmp.w	r9, #2
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009ada:	691a      	ldr	r2, [r3, #16]
    else if(TypeProgram == FLASH_TYPEPROGRAM_WORD)
 8009adc:	d05e      	beq.n	8009b9c <HAL_FLASH_Program+0x128>
  FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 8009ade:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8009ae2:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009ae4:	691a      	ldr	r2, [r3, #16]
 8009ae6:	f042 0201 	orr.w	r2, r2, #1
 8009aea:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = (uint32_t)Data;
 8009aec:	f8ca 8000 	str.w	r8, [sl]
 8009af0:	f3bf 8f6f 	isb	sy
  *(__IO uint32_t*)(Address+4) = (uint32_t)(Data >> 32);
 8009af4:	f8ca b004 	str.w	fp, [sl, #4]
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009af8:	2300      	movs	r3, #0
 8009afa:	61fb      	str	r3, [r7, #28]
  tickstart = HAL_GetTick();
 8009afc:	f7ff fed2 	bl	80098a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b00:	4d2c      	ldr	r5, [pc, #176]	; (8009bb4 <HAL_FLASH_Program+0x140>)
  tickstart = HAL_GetTick();
 8009b02:	4604      	mov	r4, r0
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b04:	f24c 3650 	movw	r6, #50000	; 0xc350
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b08:	e004      	b.n	8009b14 <HAL_FLASH_Program+0xa0>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009b0a:	f7ff fecb 	bl	80098a4 <HAL_GetTick>
 8009b0e:	1b00      	subs	r0, r0, r4
 8009b10:	42b0      	cmp	r0, r6
 8009b12:	d829      	bhi.n	8009b68 <HAL_FLASH_Program+0xf4>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009b14:	68eb      	ldr	r3, [r5, #12]
 8009b16:	03da      	lsls	r2, r3, #15
 8009b18:	d4f7      	bmi.n	8009b0a <HAL_FLASH_Program+0x96>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009b1a:	68eb      	ldr	r3, [r5, #12]
 8009b1c:	07db      	lsls	r3, r3, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009b1e:	bf44      	itt	mi
 8009b20:	2301      	movmi	r3, #1
 8009b22:	60eb      	strmi	r3, [r5, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009b24:	4b23      	ldr	r3, [pc, #140]	; (8009bb4 <HAL_FLASH_Program+0x140>)
 8009b26:	68d8      	ldr	r0, [r3, #12]
 8009b28:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009b2c:	d132      	bne.n	8009b94 <HAL_FLASH_Program+0x120>
    FLASH->CR &= (~FLASH_CR_PG);  
 8009b2e:	4a21      	ldr	r2, [pc, #132]	; (8009bb4 <HAL_FLASH_Program+0x140>)
 8009b30:	6913      	ldr	r3, [r2, #16]
 8009b32:	f023 0301 	bic.w	r3, r3, #1
 8009b36:	6113      	str	r3, [r2, #16]
 8009b38:	e000      	b.n	8009b3c <HAL_FLASH_Program+0xc8>
 8009b3a:	2003      	movs	r0, #3
  __HAL_UNLOCK(&pFlash);
 8009b3c:	2300      	movs	r3, #0
 8009b3e:	763b      	strb	r3, [r7, #24]
}
 8009b40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  __HAL_LOCK(&pFlash);
 8009b44:	2002      	movs	r0, #2
}
 8009b46:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b4a:	691a      	ldr	r2, [r3, #16]
 8009b4c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009b50:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_BYTE;
 8009b52:	691a      	ldr	r2, [r3, #16]
 8009b54:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009b56:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_Byte(Address, (uint8_t) Data);
 8009b58:	fa5f f888 	uxtb.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009b5c:	f042 0201 	orr.w	r2, r2, #1
 8009b60:	611a      	str	r2, [r3, #16]
  *(__IO uint8_t*)Address = Data;
 8009b62:	f88a 8000 	strb.w	r8, [sl]
}
 8009b66:	e7c7      	b.n	8009af8 <HAL_FLASH_Program+0x84>
        return HAL_TIMEOUT;
 8009b68:	2003      	movs	r0, #3
 8009b6a:	e7e0      	b.n	8009b2e <HAL_FLASH_Program+0xba>
    FLASH_SetErrorCode();
 8009b6c:	f7ff ff3a 	bl	80099e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009b70:	2001      	movs	r0, #1
 8009b72:	e7e3      	b.n	8009b3c <HAL_FLASH_Program+0xc8>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009b74:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8009b78:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 8009b7a:	691a      	ldr	r2, [r3, #16]
 8009b7c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009b80:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009b82:	691a      	ldr	r2, [r3, #16]
      FLASH_Program_HalfWord(Address, (uint16_t) Data);
 8009b84:	fa1f f888 	uxth.w	r8, r8
  FLASH->CR |= FLASH_CR_PG;
 8009b88:	f042 0201 	orr.w	r2, r2, #1
 8009b8c:	611a      	str	r2, [r3, #16]
  *(__IO uint16_t*)Address = Data;
 8009b8e:	f8aa 8000 	strh.w	r8, [sl]
}
 8009b92:	e7b1      	b.n	8009af8 <HAL_FLASH_Program+0x84>
    FLASH_SetErrorCode();
 8009b94:	f7ff ff26 	bl	80099e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009b98:	2001      	movs	r0, #1
 8009b9a:	e7c8      	b.n	8009b2e <HAL_FLASH_Program+0xba>
  FLASH->CR |= FLASH_PSIZE_WORD;
 8009b9c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009ba0:	611a      	str	r2, [r3, #16]
  FLASH->CR |= FLASH_CR_PG;
 8009ba2:	691a      	ldr	r2, [r3, #16]
 8009ba4:	f042 0201 	orr.w	r2, r2, #1
 8009ba8:	611a      	str	r2, [r3, #16]
  *(__IO uint32_t*)Address = Data;
 8009baa:	f8ca 8000 	str.w	r8, [sl]
}
 8009bae:	e7a3      	b.n	8009af8 <HAL_FLASH_Program+0x84>
 8009bb0:	200029d4 	.word	0x200029d4
 8009bb4:	40023c00 	.word	0x40023c00

08009bb8 <HAL_FLASH_Unlock>:
  if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009bb8:	4b06      	ldr	r3, [pc, #24]	; (8009bd4 <HAL_FLASH_Unlock+0x1c>)
 8009bba:	691a      	ldr	r2, [r3, #16]
 8009bbc:	2a00      	cmp	r2, #0
 8009bbe:	db01      	blt.n	8009bc4 <HAL_FLASH_Unlock+0xc>
  HAL_StatusTypeDef status = HAL_OK;
 8009bc0:	2000      	movs	r0, #0
}
 8009bc2:	4770      	bx	lr
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009bc4:	4904      	ldr	r1, [pc, #16]	; (8009bd8 <HAL_FLASH_Unlock+0x20>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009bc6:	4a05      	ldr	r2, [pc, #20]	; (8009bdc <HAL_FLASH_Unlock+0x24>)
    WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 8009bc8:	6059      	str	r1, [r3, #4]
    WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 8009bca:	605a      	str	r2, [r3, #4]
    if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != RESET)
 8009bcc:	6918      	ldr	r0, [r3, #16]
  HAL_StatusTypeDef status = HAL_OK;
 8009bce:	0fc0      	lsrs	r0, r0, #31
 8009bd0:	4770      	bx	lr
 8009bd2:	bf00      	nop
 8009bd4:	40023c00 	.word	0x40023c00
 8009bd8:	45670123 	.word	0x45670123
 8009bdc:	cdef89ab 	.word	0xcdef89ab

08009be0 <HAL_FLASH_Lock>:
  FLASH->CR |= FLASH_CR_LOCK;
 8009be0:	4a03      	ldr	r2, [pc, #12]	; (8009bf0 <HAL_FLASH_Lock+0x10>)
 8009be2:	6913      	ldr	r3, [r2, #16]
 8009be4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
}
 8009be8:	2000      	movs	r0, #0
  FLASH->CR |= FLASH_CR_LOCK;
 8009bea:	6113      	str	r3, [r2, #16]
}
 8009bec:	4770      	bx	lr
 8009bee:	bf00      	nop
 8009bf0:	40023c00 	.word	0x40023c00

08009bf4 <HAL_FLASH_GetError>:
   return pFlash.ErrorCode;
 8009bf4:	4b01      	ldr	r3, [pc, #4]	; (8009bfc <HAL_FLASH_GetError+0x8>)
 8009bf6:	69d8      	ldr	r0, [r3, #28]
}  
 8009bf8:	4770      	bx	lr
 8009bfa:	bf00      	nop
 8009bfc:	200029d4 	.word	0x200029d4

08009c00 <FLASH_WaitForLastOperation>:
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009c00:	4b14      	ldr	r3, [pc, #80]	; (8009c54 <FLASH_WaitForLastOperation+0x54>)
{ 
 8009c02:	b570      	push	{r4, r5, r6, lr}
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009c04:	2200      	movs	r2, #0
{ 
 8009c06:	4604      	mov	r4, r0
  pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 8009c08:	61da      	str	r2, [r3, #28]
  tickstart = HAL_GetTick();
 8009c0a:	f7ff fe4b 	bl	80098a4 <HAL_GetTick>
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c0e:	4e12      	ldr	r6, [pc, #72]	; (8009c58 <FLASH_WaitForLastOperation+0x58>)
  tickstart = HAL_GetTick();
 8009c10:	4605      	mov	r5, r0
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c12:	1c63      	adds	r3, r4, #1
 8009c14:	d10f      	bne.n	8009c36 <FLASH_WaitForLastOperation+0x36>
 8009c16:	4a10      	ldr	r2, [pc, #64]	; (8009c58 <FLASH_WaitForLastOperation+0x58>)
 8009c18:	68d3      	ldr	r3, [r2, #12]
 8009c1a:	03d8      	lsls	r0, r3, #15
 8009c1c:	d4fc      	bmi.n	8009c18 <FLASH_WaitForLastOperation+0x18>
  if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 8009c1e:	4b0e      	ldr	r3, [pc, #56]	; (8009c58 <FLASH_WaitForLastOperation+0x58>)
 8009c20:	68da      	ldr	r2, [r3, #12]
 8009c22:	07d2      	lsls	r2, r2, #31
    __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 8009c24:	bf44      	itt	mi
 8009c26:	2201      	movmi	r2, #1
 8009c28:	60da      	strmi	r2, [r3, #12]
  if(__HAL_FLASH_GET_FLAG((FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | \
 8009c2a:	4b0b      	ldr	r3, [pc, #44]	; (8009c58 <FLASH_WaitForLastOperation+0x58>)
 8009c2c:	68d8      	ldr	r0, [r3, #12]
 8009c2e:	f410 70f9 	ands.w	r0, r0, #498	; 0x1f2
 8009c32:	d10b      	bne.n	8009c4c <FLASH_WaitForLastOperation+0x4c>
}  
 8009c34:	bd70      	pop	{r4, r5, r6, pc}
  while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 8009c36:	68f3      	ldr	r3, [r6, #12]
 8009c38:	03d9      	lsls	r1, r3, #15
 8009c3a:	d5f0      	bpl.n	8009c1e <FLASH_WaitForLastOperation+0x1e>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8009c3c:	b124      	cbz	r4, 8009c48 <FLASH_WaitForLastOperation+0x48>
 8009c3e:	f7ff fe31 	bl	80098a4 <HAL_GetTick>
 8009c42:	1b40      	subs	r0, r0, r5
 8009c44:	42a0      	cmp	r0, r4
 8009c46:	d9e4      	bls.n	8009c12 <FLASH_WaitForLastOperation+0x12>
        return HAL_TIMEOUT;
 8009c48:	2003      	movs	r0, #3
}  
 8009c4a:	bd70      	pop	{r4, r5, r6, pc}
    FLASH_SetErrorCode();
 8009c4c:	f7ff feca 	bl	80099e4 <FLASH_SetErrorCode>
    return HAL_ERROR;
 8009c50:	2001      	movs	r0, #1
}  
 8009c52:	bd70      	pop	{r4, r5, r6, pc}
 8009c54:	200029d4 	.word	0x200029d4
 8009c58:	40023c00 	.word	0x40023c00

08009c5c <FLASH_FlushCaches>:
  * @retval None
  */
void FLASH_FlushCaches(void)
{
  /* Flush instruction cache  */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_ICEN) != RESET)
 8009c5c:	4b14      	ldr	r3, [pc, #80]	; (8009cb0 <FLASH_FlushCaches+0x54>)
 8009c5e:	681a      	ldr	r2, [r3, #0]
 8009c60:	0591      	lsls	r1, r2, #22
 8009c62:	d50f      	bpl.n	8009c84 <FLASH_FlushCaches+0x28>
  {
    /* Disable instruction cache  */
    __HAL_FLASH_INSTRUCTION_CACHE_DISABLE();
 8009c64:	681a      	ldr	r2, [r3, #0]
 8009c66:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8009c6a:	601a      	str	r2, [r3, #0]
    /* Reset instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_RESET();
 8009c6c:	681a      	ldr	r2, [r3, #0]
 8009c6e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009c72:	601a      	str	r2, [r3, #0]
 8009c74:	681a      	ldr	r2, [r3, #0]
 8009c76:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009c7a:	601a      	str	r2, [r3, #0]
    /* Enable instruction cache */
    __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009c7c:	681a      	ldr	r2, [r3, #0]
 8009c7e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009c82:	601a      	str	r2, [r3, #0]
  }

  /* Flush data cache */
  if (READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != RESET)
 8009c84:	4b0a      	ldr	r3, [pc, #40]	; (8009cb0 <FLASH_FlushCaches+0x54>)
 8009c86:	681a      	ldr	r2, [r3, #0]
 8009c88:	0552      	lsls	r2, r2, #21
 8009c8a:	d50f      	bpl.n	8009cac <FLASH_FlushCaches+0x50>
  {
    /* Disable data cache  */
    __HAL_FLASH_DATA_CACHE_DISABLE();
 8009c8c:	681a      	ldr	r2, [r3, #0]
 8009c8e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009c92:	601a      	str	r2, [r3, #0]
    /* Reset data cache */
    __HAL_FLASH_DATA_CACHE_RESET();
 8009c94:	681a      	ldr	r2, [r3, #0]
 8009c96:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8009c9a:	601a      	str	r2, [r3, #0]
 8009c9c:	681a      	ldr	r2, [r3, #0]
 8009c9e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8009ca2:	601a      	str	r2, [r3, #0]
    /* Enable data cache */
    __HAL_FLASH_DATA_CACHE_ENABLE();
 8009ca4:	681a      	ldr	r2, [r3, #0]
 8009ca6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009caa:	601a      	str	r2, [r3, #0]
  }
}
 8009cac:	4770      	bx	lr
 8009cae:	bf00      	nop
 8009cb0:	40023c00 	.word	0x40023c00

08009cb4 <HAL_FLASHEx_Erase>:
{
 8009cb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  __HAL_LOCK(&pFlash);
 8009cb8:	4f44      	ldr	r7, [pc, #272]	; (8009dcc <HAL_FLASHEx_Erase+0x118>)
 8009cba:	7e3b      	ldrb	r3, [r7, #24]
 8009cbc:	2b01      	cmp	r3, #1
 8009cbe:	d053      	beq.n	8009d68 <HAL_FLASHEx_Erase+0xb4>
 8009cc0:	2301      	movs	r3, #1
 8009cc2:	4681      	mov	r9, r0
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009cc4:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009cc8:	4688      	mov	r8, r1
  __HAL_LOCK(&pFlash);
 8009cca:	763b      	strb	r3, [r7, #24]
  status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009ccc:	f7ff ff98 	bl	8009c00 <FLASH_WaitForLastOperation>
  if (status == HAL_OK)
 8009cd0:	4606      	mov	r6, r0
 8009cd2:	2800      	cmp	r0, #0
 8009cd4:	d143      	bne.n	8009d5e <HAL_FLASHEx_Erase+0xaa>
    *SectorError = 0xFFFFFFFFU;
 8009cd6:	f04f 33ff 	mov.w	r3, #4294967295
 8009cda:	f8c8 3000 	str.w	r3, [r8]
    if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 8009cde:	f8d9 3000 	ldr.w	r3, [r9]
 8009ce2:	2b01      	cmp	r3, #1
 8009ce4:	d044      	beq.n	8009d70 <HAL_FLASHEx_Erase+0xbc>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009ce6:	e9d9 5302 	ldrd	r5, r3, [r9, #8]
 8009cea:	442b      	add	r3, r5
 8009cec:	429d      	cmp	r5, r3
 8009cee:	d234      	bcs.n	8009d5a <HAL_FLASHEx_Erase+0xa6>
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009cf0:	4c37      	ldr	r4, [pc, #220]	; (8009dd0 <HAL_FLASHEx_Erase+0x11c>)
 8009cf2:	e005      	b.n	8009d00 <HAL_FLASHEx_Erase+0x4c>
      for (index = pEraseInit->Sector; index < (pEraseInit->NbSectors + pEraseInit->Sector); index++)
 8009cf4:	e9d9 2302 	ldrd	r2, r3, [r9, #8]
 8009cf8:	3501      	adds	r5, #1
 8009cfa:	4413      	add	r3, r2
 8009cfc:	42ab      	cmp	r3, r5
 8009cfe:	d92c      	bls.n	8009d5a <HAL_FLASHEx_Erase+0xa6>
  if (VoltageRange == FLASH_VOLTAGE_RANGE_1)
 8009d00:	f899 3010 	ldrb.w	r3, [r9, #16]
 8009d04:	2b02      	cmp	r3, #2
        FLASH_Erase_Sector(index, (uint8_t) pEraseInit->VoltageRange);
 8009d06:	f44f 7140 	mov.w	r1, #768	; 0x300
 8009d0a:	bf98      	it	ls
 8009d0c:	0219      	lslls	r1, r3, #8
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d0e:	6923      	ldr	r3, [r4, #16]
 8009d10:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009d14:	6123      	str	r3, [r4, #16]
  FLASH->CR |= tmp_psize;
 8009d16:	6923      	ldr	r3, [r4, #16]
 8009d18:	430b      	orrs	r3, r1
 8009d1a:	6123      	str	r3, [r4, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_SNB);
 8009d1c:	6923      	ldr	r3, [r4, #16]
 8009d1e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8009d22:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009d24:	6923      	ldr	r3, [r4, #16]
  if (Sector > FLASH_SECTOR_11)
 8009d26:	2d0b      	cmp	r5, #11
    Sector += 4U;
 8009d28:	bf8c      	ite	hi
 8009d2a:	1d2a      	addhi	r2, r5, #4
 8009d2c:	462a      	movls	r2, r5
  FLASH->CR |= FLASH_CR_SER | (Sector << FLASH_CR_SNB_Pos);
 8009d2e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8009d32:	f043 0302 	orr.w	r3, r3, #2
 8009d36:	6123      	str	r3, [r4, #16]
  FLASH->CR |= FLASH_CR_STRT;
 8009d38:	6923      	ldr	r3, [r4, #16]
 8009d3a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009d3e:	6123      	str	r3, [r4, #16]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d40:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009d44:	f7ff ff5c 	bl	8009c00 <FLASH_WaitForLastOperation>
        CLEAR_BIT(FLASH->CR, (FLASH_CR_SER | FLASH_CR_SNB));
 8009d48:	6923      	ldr	r3, [r4, #16]
 8009d4a:	f023 03fa 	bic.w	r3, r3, #250	; 0xfa
 8009d4e:	6123      	str	r3, [r4, #16]
        if (status != HAL_OK)
 8009d50:	2800      	cmp	r0, #0
 8009d52:	d0cf      	beq.n	8009cf4 <HAL_FLASHEx_Erase+0x40>
          *SectorError = index;
 8009d54:	f8c8 5000 	str.w	r5, [r8]
        status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009d58:	4606      	mov	r6, r0
    FLASH_FlushCaches();
 8009d5a:	f7ff ff7f 	bl	8009c5c <FLASH_FlushCaches>
  __HAL_UNLOCK(&pFlash);
 8009d5e:	2300      	movs	r3, #0
 8009d60:	763b      	strb	r3, [r7, #24]
}
 8009d62:	4630      	mov	r0, r6
 8009d64:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(&pFlash);
 8009d68:	2602      	movs	r6, #2
}
 8009d6a:	4630      	mov	r0, r6
 8009d6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d70:	4a17      	ldr	r2, [pc, #92]	; (8009dd0 <HAL_FLASHEx_Erase+0x11c>)
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009d72:	f8d9 0004 	ldr.w	r0, [r9, #4]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d76:	6911      	ldr	r1, [r2, #16]
      FLASH_MassErase((uint8_t) pEraseInit->VoltageRange, pEraseInit->Banks);
 8009d78:	f8d9 3010 	ldr.w	r3, [r9, #16]
  CLEAR_BIT(FLASH->CR, FLASH_CR_PSIZE);
 8009d7c:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 8009d80:	6111      	str	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009d82:	2803      	cmp	r0, #3
    FLASH->CR |= FLASH_MER_BIT;
 8009d84:	6911      	ldr	r1, [r2, #16]
  if (Banks == FLASH_BANK_BOTH)
 8009d86:	d01a      	beq.n	8009dbe <HAL_FLASHEx_Erase+0x10a>
  else if (Banks == FLASH_BANK_1)
 8009d88:	2801      	cmp	r0, #1
    FLASH->CR |= FLASH_CR_MER1;
 8009d8a:	bf0c      	ite	eq
 8009d8c:	f041 0104 	orreq.w	r1, r1, #4
    FLASH->CR |= FLASH_CR_MER2;
 8009d90:	f441 4100 	orrne.w	r1, r1, #32768	; 0x8000
 8009d94:	6111      	str	r1, [r2, #16]
  FLASH->CR |= FLASH_CR_STRT | ((uint32_t)VoltageRange << 8U);
 8009d96:	4c0e      	ldr	r4, [pc, #56]	; (8009dd0 <HAL_FLASHEx_Erase+0x11c>)
 8009d98:	021b      	lsls	r3, r3, #8
 8009d9a:	6922      	ldr	r2, [r4, #16]
 8009d9c:	b29b      	uxth	r3, r3
 8009d9e:	4313      	orrs	r3, r2
 8009da0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009da4:	6123      	str	r3, [r4, #16]
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009da6:	f24c 3050 	movw	r0, #50000	; 0xc350
 8009daa:	f7ff ff29 	bl	8009c00 <FLASH_WaitForLastOperation>
      FLASH->CR &= (~FLASH_MER_BIT);
 8009dae:	6923      	ldr	r3, [r4, #16]
 8009db0:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8009db4:	f023 0304 	bic.w	r3, r3, #4
      status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 8009db8:	4606      	mov	r6, r0
      FLASH->CR &= (~FLASH_MER_BIT);
 8009dba:	6123      	str	r3, [r4, #16]
 8009dbc:	e7cd      	b.n	8009d5a <HAL_FLASHEx_Erase+0xa6>
    FLASH->CR |= FLASH_MER_BIT;
 8009dbe:	f441 4100 	orr.w	r1, r1, #32768	; 0x8000
 8009dc2:	f041 0104 	orr.w	r1, r1, #4
 8009dc6:	6111      	str	r1, [r2, #16]
 8009dc8:	e7e5      	b.n	8009d96 <HAL_FLASHEx_Erase+0xe2>
 8009dca:	bf00      	nop
 8009dcc:	200029d4 	.word	0x200029d4
 8009dd0:	40023c00 	.word	0x40023c00

08009dd4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8009dd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009dd8:	2200      	movs	r2, #0
 8009dda:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009ddc:	f8df a260 	ldr.w	sl, [pc, #608]	; 800a040 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8009de0:	4e90      	ldr	r6, [pc, #576]	; (800a024 <HAL_GPIO_Init+0x250>)
{
 8009de2:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009de4:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009de6:	4689      	mov	r9, r1
 8009de8:	e005      	b.n	8009df6 <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009dea:	3301      	adds	r3, #1
 8009dec:	2b10      	cmp	r3, #16
 8009dee:	f102 0202 	add.w	r2, r2, #2
 8009df2:	f000 8095 	beq.w	8009f20 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 8009df6:	2101      	movs	r1, #1
 8009df8:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8009dfa:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 8009dfe:	43a1      	bics	r1, r4
 8009e00:	d1f3      	bne.n	8009dea <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8009e02:	f8d9 c004 	ldr.w	ip, [r9, #4]
 8009e06:	f00c 0103 	and.w	r1, ip, #3
 8009e0a:	1e4d      	subs	r5, r1, #1
 8009e0c:	2d01      	cmp	r5, #1
 8009e0e:	f240 808a 	bls.w	8009f26 <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8009e12:	2903      	cmp	r1, #3
 8009e14:	f040 80ca 	bne.w	8009fac <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009e18:	4091      	lsls	r1, r2
 8009e1a:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009e1c:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009e1e:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009e20:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009e22:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 8009e26:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009e28:	d0df      	beq.n	8009dea <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8009e2a:	2100      	movs	r1, #0
 8009e2c:	9103      	str	r1, [sp, #12]
 8009e2e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009e32:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8009e36:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 8009e3a:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009e3e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009e42:	9103      	str	r1, [sp, #12]
 8009e44:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 8009e46:	f023 0103 	bic.w	r1, r3, #3
 8009e4a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009e4e:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009e52:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8009e56:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009e58:	00bf      	lsls	r7, r7, #2
 8009e5a:	f04f 0e0f 	mov.w	lr, #15
 8009e5e:	fa0e fe07 	lsl.w	lr, lr, r7
 8009e62:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009e66:	4d70      	ldr	r5, [pc, #448]	; (800a028 <HAL_GPIO_Init+0x254>)
 8009e68:	42a8      	cmp	r0, r5
 8009e6a:	d02e      	beq.n	8009eca <HAL_GPIO_Init+0xf6>
 8009e6c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009e70:	42a8      	cmp	r0, r5
 8009e72:	f000 809f 	beq.w	8009fb4 <HAL_GPIO_Init+0x1e0>
 8009e76:	4d6d      	ldr	r5, [pc, #436]	; (800a02c <HAL_GPIO_Init+0x258>)
 8009e78:	42a8      	cmp	r0, r5
 8009e7a:	f000 80a2 	beq.w	8009fc2 <HAL_GPIO_Init+0x1ee>
 8009e7e:	4d6c      	ldr	r5, [pc, #432]	; (800a030 <HAL_GPIO_Init+0x25c>)
 8009e80:	42a8      	cmp	r0, r5
 8009e82:	f000 80a5 	beq.w	8009fd0 <HAL_GPIO_Init+0x1fc>
 8009e86:	4d6b      	ldr	r5, [pc, #428]	; (800a034 <HAL_GPIO_Init+0x260>)
 8009e88:	42a8      	cmp	r0, r5
 8009e8a:	f000 80a8 	beq.w	8009fde <HAL_GPIO_Init+0x20a>
 8009e8e:	4d6a      	ldr	r5, [pc, #424]	; (800a038 <HAL_GPIO_Init+0x264>)
 8009e90:	42a8      	cmp	r0, r5
 8009e92:	f000 80b2 	beq.w	8009ffa <HAL_GPIO_Init+0x226>
 8009e96:	4d69      	ldr	r5, [pc, #420]	; (800a03c <HAL_GPIO_Init+0x268>)
 8009e98:	42a8      	cmp	r0, r5
 8009e9a:	f000 80b5 	beq.w	800a008 <HAL_GPIO_Init+0x234>
 8009e9e:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 800a044 <HAL_GPIO_Init+0x270>
 8009ea2:	4570      	cmp	r0, lr
 8009ea4:	f000 80a2 	beq.w	8009fec <HAL_GPIO_Init+0x218>
 8009ea8:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800a048 <HAL_GPIO_Init+0x274>
 8009eac:	4570      	cmp	r0, lr
 8009eae:	f000 80b2 	beq.w	800a016 <HAL_GPIO_Init+0x242>
 8009eb2:	f8df e198 	ldr.w	lr, [pc, #408]	; 800a04c <HAL_GPIO_Init+0x278>
 8009eb6:	4570      	cmp	r0, lr
 8009eb8:	bf0c      	ite	eq
 8009eba:	f04f 0e09 	moveq.w	lr, #9
 8009ebe:	f04f 0e0a 	movne.w	lr, #10
 8009ec2:	fa0e f707 	lsl.w	r7, lr, r7
 8009ec6:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8009eca:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 8009ece:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 8009ed0:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8009ed4:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8009ed8:	bf0c      	ite	eq
 8009eda:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009edc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 8009ee0:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 8009ee2:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8009ee4:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 8009ee8:	bf0c      	ite	eq
 8009eea:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009eec:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 8009ef0:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 8009ef2:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8009ef4:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8009ef8:	bf0c      	ite	eq
 8009efa:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009efc:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 8009f00:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8009f02:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8009f04:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009f08:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 8009f0c:	bf0c      	ite	eq
 8009f0e:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 8009f10:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009f14:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 8009f16:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8009f18:	f102 0202 	add.w	r2, r2, #2
 8009f1c:	f47f af6b 	bne.w	8009df6 <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009f20:	b005      	add	sp, #20
 8009f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009f26:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 8009f2a:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009f2e:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009f32:	2503      	movs	r5, #3
 8009f34:	fa05 f802 	lsl.w	r8, r5, r2
 8009f38:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009f3c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009f40:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009f42:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009f44:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8009f48:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009f4c:	409f      	lsls	r7, r3
 8009f4e:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009f52:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 8009f56:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8009f58:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8009f5a:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009f5e:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009f62:	4097      	lsls	r7, r2
 8009f64:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009f68:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 8009f6a:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009f6c:	fa01 f102 	lsl.w	r1, r1, r2
 8009f70:	f47f af54 	bne.w	8009e1c <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009f74:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 8009f78:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009f7c:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009f80:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009f84:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009f86:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009f8a:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009f8e:	fa07 f708 	lsl.w	r7, r7, r8
 8009f92:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009f94:	270f      	movs	r7, #15
 8009f96:	fa07 f808 	lsl.w	r8, r7, r8
 8009f9a:	9f00      	ldr	r7, [sp, #0]
 8009f9c:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009fa0:	9f01      	ldr	r7, [sp, #4]
 8009fa2:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 8009fa6:	f8ce 7020 	str.w	r7, [lr, #32]
 8009faa:	e737      	b.n	8009e1c <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009fac:	2503      	movs	r5, #3
 8009fae:	4095      	lsls	r5, r2
 8009fb0:	43ed      	mvns	r5, r5
 8009fb2:	e7d1      	b.n	8009f58 <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009fb4:	f04f 0e01 	mov.w	lr, #1
 8009fb8:	fa0e f707 	lsl.w	r7, lr, r7
 8009fbc:	ea48 0807 	orr.w	r8, r8, r7
 8009fc0:	e783      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 8009fc2:	f04f 0e02 	mov.w	lr, #2
 8009fc6:	fa0e f707 	lsl.w	r7, lr, r7
 8009fca:	ea48 0807 	orr.w	r8, r8, r7
 8009fce:	e77c      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 8009fd0:	f04f 0e03 	mov.w	lr, #3
 8009fd4:	fa0e f707 	lsl.w	r7, lr, r7
 8009fd8:	ea48 0807 	orr.w	r8, r8, r7
 8009fdc:	e775      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 8009fde:	f04f 0e04 	mov.w	lr, #4
 8009fe2:	fa0e f707 	lsl.w	r7, lr, r7
 8009fe6:	ea48 0807 	orr.w	r8, r8, r7
 8009fea:	e76e      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 8009fec:	f04f 0e07 	mov.w	lr, #7
 8009ff0:	fa0e f707 	lsl.w	r7, lr, r7
 8009ff4:	ea48 0807 	orr.w	r8, r8, r7
 8009ff8:	e767      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 8009ffa:	f04f 0e05 	mov.w	lr, #5
 8009ffe:	fa0e f707 	lsl.w	r7, lr, r7
 800a002:	ea48 0807 	orr.w	r8, r8, r7
 800a006:	e760      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 800a008:	f04f 0e06 	mov.w	lr, #6
 800a00c:	fa0e f707 	lsl.w	r7, lr, r7
 800a010:	ea48 0807 	orr.w	r8, r8, r7
 800a014:	e759      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 800a016:	f04f 0e08 	mov.w	lr, #8
 800a01a:	fa0e f707 	lsl.w	r7, lr, r7
 800a01e:	ea48 0807 	orr.w	r8, r8, r7
 800a022:	e752      	b.n	8009eca <HAL_GPIO_Init+0xf6>
 800a024:	40013c00 	.word	0x40013c00
 800a028:	40020000 	.word	0x40020000
 800a02c:	40020800 	.word	0x40020800
 800a030:	40020c00 	.word	0x40020c00
 800a034:	40021000 	.word	0x40021000
 800a038:	40021400 	.word	0x40021400
 800a03c:	40021800 	.word	0x40021800
 800a040:	40023800 	.word	0x40023800
 800a044:	40021c00 	.word	0x40021c00
 800a048:	40022000 	.word	0x40022000
 800a04c:	40022400 	.word	0x40022400

0800a050 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800a050:	6903      	ldr	r3, [r0, #16]
 800a052:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800a054:	bf14      	ite	ne
 800a056:	2001      	movne	r0, #1
 800a058:	2000      	moveq	r0, #0
 800a05a:	4770      	bx	lr

0800a05c <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800a05c:	b902      	cbnz	r2, 800a060 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800a05e:	0409      	lsls	r1, r1, #16
 800a060:	6181      	str	r1, [r0, #24]
  }
}
 800a062:	4770      	bx	lr

0800a064 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800a064:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800a066:	ea01 0203 	and.w	r2, r1, r3
 800a06a:	ea21 0103 	bic.w	r1, r1, r3
 800a06e:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800a072:	6181      	str	r1, [r0, #24]
}
 800a074:	4770      	bx	lr
 800a076:	bf00      	nop

0800a078 <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800a078:	4770      	bx	lr
 800a07a:	bf00      	nop

0800a07c <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800a07c:	4a04      	ldr	r2, [pc, #16]	; (800a090 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 800a07e:	6951      	ldr	r1, [r2, #20]
 800a080:	4201      	tst	r1, r0
 800a082:	d100      	bne.n	800a086 <HAL_GPIO_EXTI_IRQHandler+0xa>
 800a084:	4770      	bx	lr
{
 800a086:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800a088:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800a08a:	f7ff fff5 	bl	800a078 <HAL_GPIO_EXTI_Callback>
}
 800a08e:	bd08      	pop	{r3, pc}
 800a090:	40013c00 	.word	0x40013c00

0800a094 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 800a094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a098:	6804      	ldr	r4, [r0, #0]
{
 800a09a:	b083      	sub	sp, #12
 800a09c:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a09e:	6823      	ldr	r3, [r4, #0]
{
 800a0a0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800a0a4:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a0a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a0ac:	4606      	mov	r6, r0
 800a0ae:	468a      	mov	sl, r1
 800a0b0:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a0b2:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a0b4:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a0b8:	d136      	bne.n	800a128 <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a0ba:	6965      	ldr	r5, [r4, #20]
 800a0bc:	07e8      	lsls	r0, r5, #31
 800a0be:	d5fc      	bpl.n	800a0ba <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a0c0:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 800a0c4:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a0c6:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a0ca:	d003      	beq.n	800a0d4 <I2C_RequestMemoryWrite+0x40>
 800a0cc:	e04f      	b.n	800a16e <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0ce:	6961      	ldr	r1, [r4, #20]
 800a0d0:	054d      	lsls	r5, r1, #21
 800a0d2:	d45d      	bmi.n	800a190 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a0d4:	6961      	ldr	r1, [r4, #20]
 800a0d6:	078b      	lsls	r3, r1, #30
 800a0d8:	d5f9      	bpl.n	800a0ce <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a0da:	2300      	movs	r3, #0
 800a0dc:	9301      	str	r3, [sp, #4]
 800a0de:	6963      	ldr	r3, [r4, #20]
 800a0e0:	9301      	str	r3, [sp, #4]
 800a0e2:	69a3      	ldr	r3, [r4, #24]
 800a0e4:	9301      	str	r3, [sp, #4]
 800a0e6:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a0e8:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a0ec:	f040 8088 	bne.w	800a200 <I2C_RequestMemoryWrite+0x16c>
 800a0f0:	6963      	ldr	r3, [r4, #20]
 800a0f2:	061a      	lsls	r2, r3, #24
 800a0f4:	d464      	bmi.n	800a1c0 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a0f6:	6963      	ldr	r3, [r4, #20]
 800a0f8:	055b      	lsls	r3, r3, #21
 800a0fa:	d5f9      	bpl.n	800a0f0 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 800a0fc:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a0fe:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a102:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a104:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a106:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a108:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a10c:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a110:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a112:	f043 0304 	orr.w	r3, r3, #4
 800a116:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a118:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800a11a:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a11c:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a11e:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a122:	d066      	beq.n	800a1f2 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 800a124:	2001      	movs	r0, #1
 800a126:	e01f      	b.n	800a168 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a128:	6963      	ldr	r3, [r4, #20]
 800a12a:	07d9      	lsls	r1, r3, #31
 800a12c:	d4c8      	bmi.n	800a0c0 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a12e:	f7ff fbb9 	bl	80098a4 <HAL_GetTick>
 800a132:	eba0 000b 	sub.w	r0, r0, fp
 800a136:	4581      	cmp	r9, r0
 800a138:	d304      	bcc.n	800a144 <I2C_RequestMemoryWrite+0xb0>
 800a13a:	f1b9 0f00 	cmp.w	r9, #0
 800a13e:	d001      	beq.n	800a144 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a140:	6834      	ldr	r4, [r6, #0]
 800a142:	e7b7      	b.n	800a0b4 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a144:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a146:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a148:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a14a:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a14e:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a152:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a154:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a156:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a15a:	f042 0220 	orr.w	r2, r2, #32
 800a15e:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a160:	680b      	ldr	r3, [r1, #0]
 800a162:	05dc      	lsls	r4, r3, #23
 800a164:	d435      	bmi.n	800a1d2 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800a166:	2003      	movs	r0, #3
}
 800a168:	b003      	add	sp, #12
 800a16a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a16e:	6963      	ldr	r3, [r4, #20]
 800a170:	0798      	lsls	r0, r3, #30
 800a172:	d4b2      	bmi.n	800a0da <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a174:	6963      	ldr	r3, [r4, #20]
 800a176:	055a      	lsls	r2, r3, #21
 800a178:	d40a      	bmi.n	800a190 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a17a:	f7ff fb93 	bl	80098a4 <HAL_GetTick>
 800a17e:	eba0 000b 	sub.w	r0, r0, fp
 800a182:	4581      	cmp	r9, r0
 800a184:	d34e      	bcc.n	800a224 <I2C_RequestMemoryWrite+0x190>
 800a186:	f1b9 0f00 	cmp.w	r9, #0
 800a18a:	d04b      	beq.n	800a224 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a18c:	6834      	ldr	r4, [r6, #0]
 800a18e:	e79a      	b.n	800a0c6 <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a190:	6823      	ldr	r3, [r4, #0]
 800a192:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a196:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a198:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a19a:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a19e:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a1a0:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a1a2:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a1a4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a1a8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1ac:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a1ae:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1b2:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a1b6:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a1b8:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a1ba:	b003      	add	sp, #12
 800a1bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a1c0:	f1b8 0f01 	cmp.w	r8, #1
 800a1c4:	d109      	bne.n	800a1da <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a1c6:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 800a1c8:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a1ca:	6127      	str	r7, [r4, #16]
}
 800a1cc:	b003      	add	sp, #12
 800a1ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a1d2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a1d6:	6433      	str	r3, [r6, #64]	; 0x40
 800a1d8:	e7c5      	b.n	800a166 <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a1da:	0a3b      	lsrs	r3, r7, #8
 800a1dc:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a1de:	f1b9 3fff 	cmp.w	r9, #4294967295
 800a1e2:	d12e      	bne.n	800a242 <I2C_RequestMemoryWrite+0x1ae>
 800a1e4:	6963      	ldr	r3, [r4, #20]
 800a1e6:	0619      	lsls	r1, r3, #24
 800a1e8:	d4ed      	bmi.n	800a1c6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a1ea:	6963      	ldr	r3, [r4, #20]
 800a1ec:	055a      	lsls	r2, r3, #21
 800a1ee:	d5f9      	bpl.n	800a1e4 <I2C_RequestMemoryWrite+0x150>
 800a1f0:	e784      	b.n	800a0fc <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1f2:	6832      	ldr	r2, [r6, #0]
 800a1f4:	6813      	ldr	r3, [r2, #0]
 800a1f6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a1fa:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a1fc:	6013      	str	r3, [r2, #0]
 800a1fe:	e7b3      	b.n	800a168 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a200:	6963      	ldr	r3, [r4, #20]
 800a202:	061d      	lsls	r5, r3, #24
 800a204:	d4dc      	bmi.n	800a1c0 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a206:	6963      	ldr	r3, [r4, #20]
 800a208:	0559      	lsls	r1, r3, #21
 800a20a:	f53f af77 	bmi.w	800a0fc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a20e:	f7ff fb49 	bl	80098a4 <HAL_GetTick>
 800a212:	eba0 000b 	sub.w	r0, r0, fp
 800a216:	4581      	cmp	r9, r0
 800a218:	d325      	bcc.n	800a266 <I2C_RequestMemoryWrite+0x1d2>
 800a21a:	f1b9 0f00 	cmp.w	r9, #0
 800a21e:	d022      	beq.n	800a266 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a220:	6834      	ldr	r4, [r6, #0]
 800a222:	e761      	b.n	800a0e8 <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a224:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a226:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a228:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a22a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a22e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a232:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a234:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a238:	f043 0320 	orr.w	r3, r3, #32
 800a23c:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 800a23e:	2001      	movs	r0, #1
 800a240:	e792      	b.n	800a168 <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a242:	6963      	ldr	r3, [r4, #20]
 800a244:	061b      	lsls	r3, r3, #24
 800a246:	d4be      	bmi.n	800a1c6 <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a248:	6963      	ldr	r3, [r4, #20]
 800a24a:	0558      	lsls	r0, r3, #21
 800a24c:	f53f af56 	bmi.w	800a0fc <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a250:	f7ff fb28 	bl	80098a4 <HAL_GetTick>
 800a254:	eba0 000b 	sub.w	r0, r0, fp
 800a258:	4581      	cmp	r9, r0
 800a25a:	d304      	bcc.n	800a266 <I2C_RequestMemoryWrite+0x1d2>
 800a25c:	f1b9 0f00 	cmp.w	r9, #0
 800a260:	d001      	beq.n	800a266 <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a262:	6834      	ldr	r4, [r6, #0]
 800a264:	e7bb      	b.n	800a1de <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a266:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a268:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a26a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a26c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a270:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a274:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a276:	4313      	orrs	r3, r2
 800a278:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a27a:	e74d      	b.n	800a118 <I2C_RequestMemoryWrite+0x84>

0800a27c <I2C_RequestMemoryRead>:
{
 800a27c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a280:	6804      	ldr	r4, [r0, #0]
{
 800a282:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a284:	6823      	ldr	r3, [r4, #0]
 800a286:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a28a:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a28c:	6823      	ldr	r3, [r4, #0]
{
 800a28e:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a290:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800a294:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a298:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a29c:	6023      	str	r3, [r4, #0]
{
 800a29e:	4606      	mov	r6, r0
 800a2a0:	468b      	mov	fp, r1
 800a2a2:	4617      	mov	r7, r2
 800a2a4:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a2a8:	d13a      	bne.n	800a320 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a2aa:	6965      	ldr	r5, [r4, #20]
 800a2ac:	07eb      	lsls	r3, r5, #31
 800a2ae:	d5fc      	bpl.n	800a2aa <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800a2b0:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 800a2b4:	6123      	str	r3, [r4, #16]
 800a2b6:	fa5f fb8b 	uxtb.w	fp, fp
 800a2ba:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a2be:	d003      	beq.n	800a2c8 <I2C_RequestMemoryRead+0x4c>
 800a2c0:	e069      	b.n	800a396 <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2c2:	6965      	ldr	r5, [r4, #20]
 800a2c4:	056a      	lsls	r2, r5, #21
 800a2c6:	d44e      	bmi.n	800a366 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a2c8:	6965      	ldr	r5, [r4, #20]
 800a2ca:	07a9      	lsls	r1, r5, #30
 800a2cc:	d5f9      	bpl.n	800a2c2 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a2ce:	2300      	movs	r3, #0
 800a2d0:	9301      	str	r3, [sp, #4]
 800a2d2:	6963      	ldr	r3, [r4, #20]
 800a2d4:	9301      	str	r3, [sp, #4]
 800a2d6:	69a3      	ldr	r3, [r4, #24]
 800a2d8:	9301      	str	r3, [sp, #4]
 800a2da:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a2dc:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a2e0:	f040 80bd 	bne.w	800a45e <I2C_RequestMemoryRead+0x1e2>
 800a2e4:	6963      	ldr	r3, [r4, #20]
 800a2e6:	0618      	lsls	r0, r3, #24
 800a2e8:	d468      	bmi.n	800a3bc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a2ea:	6963      	ldr	r3, [r4, #20]
 800a2ec:	0559      	lsls	r1, r3, #21
 800a2ee:	d5f9      	bpl.n	800a2e4 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a2f0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a2f2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a2f6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a2f8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a2fa:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a2fc:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a300:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a304:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a306:	f043 0304 	orr.w	r3, r3, #4
 800a30a:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a30c:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a30e:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a310:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a312:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a316:	d070      	beq.n	800a3fa <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 800a318:	2001      	movs	r0, #1
}
 800a31a:	b003      	add	sp, #12
 800a31c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a320:	6963      	ldr	r3, [r4, #20]
 800a322:	07dd      	lsls	r5, r3, #31
 800a324:	d4c4      	bmi.n	800a2b0 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a326:	f7ff fabd 	bl	80098a4 <HAL_GetTick>
 800a32a:	eba0 0009 	sub.w	r0, r0, r9
 800a32e:	4582      	cmp	sl, r0
 800a330:	d304      	bcc.n	800a33c <I2C_RequestMemoryRead+0xc0>
 800a332:	f1ba 0f00 	cmp.w	sl, #0
 800a336:	d001      	beq.n	800a33c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a338:	6834      	ldr	r4, [r6, #0]
 800a33a:	e7b3      	b.n	800a2a4 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a33c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a33e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a340:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a342:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a346:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a34a:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a34c:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800a34e:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a352:	f042 0220 	orr.w	r2, r2, #32
 800a356:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a358:	680b      	ldr	r3, [r1, #0]
 800a35a:	05dc      	lsls	r4, r3, #23
 800a35c:	d43d      	bmi.n	800a3da <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 800a35e:	2003      	movs	r0, #3
}
 800a360:	b003      	add	sp, #12
 800a362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a366:	6823      	ldr	r3, [r4, #0]
 800a368:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a36c:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a36e:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a370:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 800a374:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a376:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800a378:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800a37a:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a37e:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a382:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800a384:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a388:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800a38c:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a38e:	6433      	str	r3, [r6, #64]	; 0x40
}
 800a390:	b003      	add	sp, #12
 800a392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a396:	6963      	ldr	r3, [r4, #20]
 800a398:	079b      	lsls	r3, r3, #30
 800a39a:	d498      	bmi.n	800a2ce <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a39c:	6963      	ldr	r3, [r4, #20]
 800a39e:	0558      	lsls	r0, r3, #21
 800a3a0:	d4e1      	bmi.n	800a366 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a3a2:	f7ff fa7f 	bl	80098a4 <HAL_GetTick>
 800a3a6:	eba0 0009 	sub.w	r0, r0, r9
 800a3aa:	4582      	cmp	sl, r0
 800a3ac:	f0c0 808f 	bcc.w	800a4ce <I2C_RequestMemoryRead+0x252>
 800a3b0:	f1ba 0f00 	cmp.w	sl, #0
 800a3b4:	f000 808b 	beq.w	800a4ce <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a3b8:	6834      	ldr	r4, [r6, #0]
 800a3ba:	e77e      	b.n	800a2ba <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800a3bc:	f1b8 0f01 	cmp.w	r8, #1
 800a3c0:	d10f      	bne.n	800a3e2 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800a3c2:	b2ff      	uxtb	r7, r7
 800a3c4:	6127      	str	r7, [r4, #16]
 800a3c6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3ca:	d16e      	bne.n	800a4aa <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3cc:	6963      	ldr	r3, [r4, #20]
 800a3ce:	061b      	lsls	r3, r3, #24
 800a3d0:	d41a      	bmi.n	800a408 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3d2:	6963      	ldr	r3, [r4, #20]
 800a3d4:	055f      	lsls	r7, r3, #21
 800a3d6:	d5f9      	bpl.n	800a3cc <I2C_RequestMemoryRead+0x150>
 800a3d8:	e78a      	b.n	800a2f0 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800a3da:	f44f 7300 	mov.w	r3, #512	; 0x200
 800a3de:	6433      	str	r3, [r6, #64]	; 0x40
 800a3e0:	e7bd      	b.n	800a35e <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800a3e2:	0a3b      	lsrs	r3, r7, #8
 800a3e4:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a3e6:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a3ea:	d17e      	bne.n	800a4ea <I2C_RequestMemoryRead+0x26e>
 800a3ec:	6963      	ldr	r3, [r4, #20]
 800a3ee:	061d      	lsls	r5, r3, #24
 800a3f0:	d4e7      	bmi.n	800a3c2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a3f2:	6963      	ldr	r3, [r4, #20]
 800a3f4:	0558      	lsls	r0, r3, #21
 800a3f6:	d5f9      	bpl.n	800a3ec <I2C_RequestMemoryRead+0x170>
 800a3f8:	e77a      	b.n	800a2f0 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a3fa:	6832      	ldr	r2, [r6, #0]
 800a3fc:	6813      	ldr	r3, [r2, #0]
 800a3fe:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 800a402:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a404:	6013      	str	r3, [r2, #0]
 800a406:	e7ab      	b.n	800a360 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a408:	6823      	ldr	r3, [r4, #0]
 800a40a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a40e:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a410:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a414:	d113      	bne.n	800a43e <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a416:	6963      	ldr	r3, [r4, #20]
 800a418:	07d8      	lsls	r0, r3, #31
 800a41a:	d5fc      	bpl.n	800a416 <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800a41c:	f04b 0301 	orr.w	r3, fp, #1
 800a420:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 800a422:	f1ba 3fff 	cmp.w	sl, #4294967295
 800a426:	d003      	beq.n	800a430 <I2C_RequestMemoryRead+0x1b4>
 800a428:	e02b      	b.n	800a482 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a42a:	6963      	ldr	r3, [r4, #20]
 800a42c:	055b      	lsls	r3, r3, #21
 800a42e:	d49a      	bmi.n	800a366 <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a430:	6963      	ldr	r3, [r4, #20]
 800a432:	43db      	mvns	r3, r3
 800a434:	f013 0302 	ands.w	r3, r3, #2
 800a438:	d1f7      	bne.n	800a42a <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800a43a:	4618      	mov	r0, r3
 800a43c:	e790      	b.n	800a360 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a43e:	6963      	ldr	r3, [r4, #20]
 800a440:	07d9      	lsls	r1, r3, #31
 800a442:	d4eb      	bmi.n	800a41c <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a444:	f7ff fa2e 	bl	80098a4 <HAL_GetTick>
 800a448:	eba0 0009 	sub.w	r0, r0, r9
 800a44c:	4582      	cmp	sl, r0
 800a44e:	f4ff af75 	bcc.w	800a33c <I2C_RequestMemoryRead+0xc0>
 800a452:	f1ba 0f00 	cmp.w	sl, #0
 800a456:	f43f af71 	beq.w	800a33c <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800a45a:	6834      	ldr	r4, [r6, #0]
 800a45c:	e7d8      	b.n	800a410 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a45e:	6963      	ldr	r3, [r4, #20]
 800a460:	061a      	lsls	r2, r3, #24
 800a462:	d4ab      	bmi.n	800a3bc <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a464:	6963      	ldr	r3, [r4, #20]
 800a466:	055d      	lsls	r5, r3, #21
 800a468:	f53f af42 	bmi.w	800a2f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a46c:	f7ff fa1a 	bl	80098a4 <HAL_GetTick>
 800a470:	eba0 0009 	sub.w	r0, r0, r9
 800a474:	4582      	cmp	sl, r0
 800a476:	d34b      	bcc.n	800a510 <I2C_RequestMemoryRead+0x294>
 800a478:	f1ba 0f00 	cmp.w	sl, #0
 800a47c:	d048      	beq.n	800a510 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a47e:	6834      	ldr	r4, [r6, #0]
 800a480:	e72c      	b.n	800a2dc <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a482:	6963      	ldr	r3, [r4, #20]
 800a484:	43db      	mvns	r3, r3
 800a486:	f013 0302 	ands.w	r3, r3, #2
 800a48a:	d0d6      	beq.n	800a43a <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a48c:	6963      	ldr	r3, [r4, #20]
 800a48e:	055a      	lsls	r2, r3, #21
 800a490:	f53f af69 	bmi.w	800a366 <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a494:	f7ff fa06 	bl	80098a4 <HAL_GetTick>
 800a498:	eba0 0009 	sub.w	r0, r0, r9
 800a49c:	4582      	cmp	sl, r0
 800a49e:	d316      	bcc.n	800a4ce <I2C_RequestMemoryRead+0x252>
 800a4a0:	f1ba 0f00 	cmp.w	sl, #0
 800a4a4:	d013      	beq.n	800a4ce <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800a4a6:	6834      	ldr	r4, [r6, #0]
 800a4a8:	e7bb      	b.n	800a422 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4aa:	6963      	ldr	r3, [r4, #20]
 800a4ac:	061d      	lsls	r5, r3, #24
 800a4ae:	d4ab      	bmi.n	800a408 <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4b0:	6963      	ldr	r3, [r4, #20]
 800a4b2:	055a      	lsls	r2, r3, #21
 800a4b4:	f53f af1c 	bmi.w	800a2f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4b8:	f7ff f9f4 	bl	80098a4 <HAL_GetTick>
 800a4bc:	eba0 0009 	sub.w	r0, r0, r9
 800a4c0:	4582      	cmp	sl, r0
 800a4c2:	d325      	bcc.n	800a510 <I2C_RequestMemoryRead+0x294>
 800a4c4:	f1ba 0f00 	cmp.w	sl, #0
 800a4c8:	d022      	beq.n	800a510 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4ca:	6834      	ldr	r4, [r6, #0]
 800a4cc:	e77b      	b.n	800a3c6 <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a4ce:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800a4d0:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800a4d2:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800a4d4:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a4d8:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a4dc:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a4de:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800a4e2:	f043 0320 	orr.w	r3, r3, #32
 800a4e6:	6433      	str	r3, [r6, #64]	; 0x40
 800a4e8:	e716      	b.n	800a318 <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a4ea:	6963      	ldr	r3, [r4, #20]
 800a4ec:	0619      	lsls	r1, r3, #24
 800a4ee:	f53f af68 	bmi.w	800a3c2 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a4f2:	6963      	ldr	r3, [r4, #20]
 800a4f4:	055b      	lsls	r3, r3, #21
 800a4f6:	f53f aefb 	bmi.w	800a2f0 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a4fa:	f7ff f9d3 	bl	80098a4 <HAL_GetTick>
 800a4fe:	eba0 0009 	sub.w	r0, r0, r9
 800a502:	4582      	cmp	sl, r0
 800a504:	d304      	bcc.n	800a510 <I2C_RequestMemoryRead+0x294>
 800a506:	f1ba 0f00 	cmp.w	sl, #0
 800a50a:	d001      	beq.n	800a510 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a50c:	6834      	ldr	r4, [r6, #0]
 800a50e:	e76a      	b.n	800a3e6 <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a510:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a512:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a514:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a516:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a51a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a51e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800a520:	4313      	orrs	r3, r2
 800a522:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800a524:	e6f2      	b.n	800a30c <I2C_RequestMemoryRead+0x90>
 800a526:	bf00      	nop

0800a528 <HAL_I2C_Init>:
  if (hi2c == NULL)
 800a528:	2800      	cmp	r0, #0
 800a52a:	f000 80b9 	beq.w	800a6a0 <HAL_I2C_Init+0x178>
{
 800a52e:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800a530:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a534:	4604      	mov	r4, r0
 800a536:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a53a:	2b00      	cmp	r3, #0
 800a53c:	f000 8098 	beq.w	800a670 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 800a540:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800a542:	2224      	movs	r2, #36	; 0x24
 800a544:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800a548:	681a      	ldr	r2, [r3, #0]
 800a54a:	f022 0201 	bic.w	r2, r2, #1
 800a54e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800a550:	681a      	ldr	r2, [r3, #0]
 800a552:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a556:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800a558:	681a      	ldr	r2, [r3, #0]
 800a55a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800a55e:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800a560:	f001 fe70 	bl	800c244 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a564:	6865      	ldr	r5, [r4, #4]
 800a566:	4b4f      	ldr	r3, [pc, #316]	; (800a6a4 <HAL_I2C_Init+0x17c>)
 800a568:	429d      	cmp	r5, r3
 800a56a:	d84f      	bhi.n	800a60c <HAL_I2C_Init+0xe4>
 800a56c:	4b4e      	ldr	r3, [pc, #312]	; (800a6a8 <HAL_I2C_Init+0x180>)
 800a56e:	4298      	cmp	r0, r3
 800a570:	d97c      	bls.n	800a66c <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 800a572:	4b4e      	ldr	r3, [pc, #312]	; (800a6ac <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a574:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800a576:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a57a:	1e43      	subs	r3, r0, #1
 800a57c:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a580:	6822      	ldr	r2, [r4, #0]
 800a582:	6851      	ldr	r1, [r2, #4]
 800a584:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a588:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 800a58c:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a58e:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 800a590:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a594:	f10c 0c01 	add.w	ip, ip, #1
 800a598:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a59c:	ea41 010c 	orr.w	r1, r1, ip
 800a5a0:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a5a2:	69d1      	ldr	r1, [r2, #28]
 800a5a4:	f640 70fc 	movw	r0, #4092	; 0xffc
 800a5a8:	3301      	adds	r3, #1
 800a5aa:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a5ae:	4203      	tst	r3, r0
 800a5b0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a5b4:	d161      	bne.n	800a67a <HAL_I2C_Init+0x152>
 800a5b6:	2304      	movs	r3, #4
 800a5b8:	430b      	orrs	r3, r1
 800a5ba:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800a5bc:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800a5c0:	6811      	ldr	r1, [r2, #0]
 800a5c2:	4303      	orrs	r3, r0
 800a5c4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800a5c8:	430b      	orrs	r3, r1
 800a5ca:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800a5cc:	6891      	ldr	r1, [r2, #8]
 800a5ce:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800a5d2:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800a5d6:	4303      	orrs	r3, r0
 800a5d8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a5dc:	430b      	orrs	r3, r1
 800a5de:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800a5e0:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800a5e4:	68d1      	ldr	r1, [r2, #12]
 800a5e6:	4303      	orrs	r3, r0
 800a5e8:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a5ec:	430b      	orrs	r3, r1
 800a5ee:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800a5f0:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a5f2:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 800a5f4:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 800a5f8:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 800a5fa:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a5fc:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800a5fe:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800a602:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800a604:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 800a608:	4618      	mov	r0, r3
}
 800a60a:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800a60c:	4b28      	ldr	r3, [pc, #160]	; (800a6b0 <HAL_I2C_Init+0x188>)
 800a60e:	4298      	cmp	r0, r3
 800a610:	d92c      	bls.n	800a66c <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a612:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 800a614:	4b25      	ldr	r3, [pc, #148]	; (800a6ac <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a616:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a618:	4e26      	ldr	r6, [pc, #152]	; (800a6b4 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 800a61a:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800a61e:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a622:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 800a626:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800a628:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800a62c:	f44f 7196 	mov.w	r1, #300	; 0x12c
 800a630:	fb01 f303 	mul.w	r3, r1, r3
 800a634:	fba6 6303 	umull	r6, r3, r6, r3
 800a638:	6a11      	ldr	r1, [r2, #32]
 800a63a:	099b      	lsrs	r3, r3, #6
 800a63c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a640:	3301      	adds	r3, #1
 800a642:	430b      	orrs	r3, r1
 800a644:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a646:	69d1      	ldr	r1, [r2, #28]
 800a648:	68a3      	ldr	r3, [r4, #8]
 800a64a:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800a64e:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800a652:	b9ab      	cbnz	r3, 800a680 <HAL_I2C_Init+0x158>
 800a654:	1e43      	subs	r3, r0, #1
 800a656:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800a65a:	fbb3 f3f5 	udiv	r3, r3, r5
 800a65e:	3301      	adds	r3, #1
 800a660:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a664:	b1d3      	cbz	r3, 800a69c <HAL_I2C_Init+0x174>
 800a666:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800a66a:	e7a5      	b.n	800a5b8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a66c:	2001      	movs	r0, #1
}
 800a66e:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 800a670:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800a674:	f7f6 ffa8 	bl	80015c8 <HAL_I2C_MspInit>
 800a678:	e762      	b.n	800a540 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800a67a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a67e:	e79b      	b.n	800a5b8 <HAL_I2C_Init+0x90>
 800a680:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a684:	1e43      	subs	r3, r0, #1
 800a686:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 800a68a:	fbb3 f3f5 	udiv	r3, r3, r5
 800a68e:	3301      	adds	r3, #1
 800a690:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800a694:	b113      	cbz	r3, 800a69c <HAL_I2C_Init+0x174>
 800a696:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800a69a:	e78d      	b.n	800a5b8 <HAL_I2C_Init+0x90>
 800a69c:	2301      	movs	r3, #1
 800a69e:	e78b      	b.n	800a5b8 <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 800a6a0:	2001      	movs	r0, #1
}
 800a6a2:	4770      	bx	lr
 800a6a4:	000186a0 	.word	0x000186a0
 800a6a8:	001e847f 	.word	0x001e847f
 800a6ac:	431bde83 	.word	0x431bde83
 800a6b0:	003d08ff 	.word	0x003d08ff
 800a6b4:	10624dd3 	.word	0x10624dd3

0800a6b8 <HAL_I2C_Mem_Write>:
{
 800a6b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a6bc:	4604      	mov	r4, r0
 800a6be:	b083      	sub	sp, #12
 800a6c0:	4699      	mov	r9, r3
 800a6c2:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 800a6c6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a6c8:	460f      	mov	r7, r1
 800a6ca:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a6cc:	f7ff f8ea 	bl	80098a4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a6d0:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a6d4:	2b20      	cmp	r3, #32
 800a6d6:	d004      	beq.n	800a6e2 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 800a6d8:	2702      	movs	r7, #2
}
 800a6da:	4638      	mov	r0, r7
 800a6dc:	b003      	add	sp, #12
 800a6de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6e2:	4605      	mov	r5, r0
 800a6e4:	e005      	b.n	800a6f2 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a6e6:	f7ff f8dd 	bl	80098a4 <HAL_GetTick>
 800a6ea:	1b40      	subs	r0, r0, r5
 800a6ec:	2819      	cmp	r0, #25
 800a6ee:	f200 80a8 	bhi.w	800a842 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a6f2:	6820      	ldr	r0, [r4, #0]
 800a6f4:	6983      	ldr	r3, [r0, #24]
 800a6f6:	ea6f 0c03 	mvn.w	ip, r3
 800a6fa:	f01c 0b02 	ands.w	fp, ip, #2
 800a6fe:	d0f2      	beq.n	800a6e6 <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 800a700:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a704:	2b01      	cmp	r3, #1
 800a706:	d0e7      	beq.n	800a6d8 <HAL_I2C_Mem_Write+0x20>
 800a708:	2301      	movs	r3, #1
 800a70a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a70e:	6803      	ldr	r3, [r0, #0]
 800a710:	07db      	lsls	r3, r3, #31
 800a712:	d572      	bpl.n	800a7fa <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a714:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a716:	6807      	ldr	r7, [r0, #0]
 800a718:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 800a71c:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 800a71e:	980c      	ldr	r0, [sp, #48]	; 0x30
 800a720:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a722:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a724:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800a728:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a72c:	2040      	movs	r0, #64	; 0x40
 800a72e:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a732:	2000      	movs	r0, #0
 800a734:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a736:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a73a:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a73c:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a73e:	4856      	ldr	r0, [pc, #344]	; (800a898 <HAL_I2C_Mem_Write+0x1e0>)
 800a740:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a742:	464b      	mov	r3, r9
 800a744:	4642      	mov	r2, r8
 800a746:	4620      	mov	r0, r4
 800a748:	f7ff fca4 	bl	800a094 <I2C_RequestMemoryWrite>
 800a74c:	4607      	mov	r7, r0
 800a74e:	bb00      	cbnz	r0, 800a792 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 800a750:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800a752:	2b00      	cmp	r3, #0
 800a754:	f000 809e 	beq.w	800a894 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a758:	6823      	ldr	r3, [r4, #0]
 800a75a:	1c72      	adds	r2, r6, #1
 800a75c:	d159      	bne.n	800a812 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a75e:	695a      	ldr	r2, [r3, #20]
 800a760:	0610      	lsls	r0, r2, #24
 800a762:	d41b      	bmi.n	800a79c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a764:	695a      	ldr	r2, [r3, #20]
 800a766:	0551      	lsls	r1, r2, #21
 800a768:	d5f9      	bpl.n	800a75e <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a76a:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a76c:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 800a770:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800a772:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 800a774:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800a776:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800a77a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800a77e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a780:	f043 0304 	orr.w	r3, r3, #4
 800a784:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a786:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 800a788:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a78a:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 800a78c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800a790:	d038      	beq.n	800a804 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 800a792:	2701      	movs	r7, #1
}
 800a794:	4638      	mov	r0, r7
 800a796:	b003      	add	sp, #12
 800a798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a79c:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 800a7a0:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a7a4:	4661      	mov	r1, ip
      hi2c->XferSize--;
 800a7a6:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a7aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 800a7ae:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 800a7b0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a7b2:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a7b4:	3a01      	subs	r2, #1
 800a7b6:	b292      	uxth	r2, r2
 800a7b8:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800a7ba:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a7bc:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 800a7be:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800a7c0:	0740      	lsls	r0, r0, #29
 800a7c2:	d517      	bpl.n	800a7f4 <HAL_I2C_Mem_Write+0x13c>
 800a7c4:	b942      	cbnz	r2, 800a7d8 <HAL_I2C_Mem_Write+0x120>
 800a7c6:	1c72      	adds	r2, r6, #1
 800a7c8:	d156      	bne.n	800a878 <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a7ca:	695a      	ldr	r2, [r3, #20]
 800a7cc:	0750      	lsls	r0, r2, #29
 800a7ce:	d446      	bmi.n	800a85e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a7d0:	695a      	ldr	r2, [r3, #20]
 800a7d2:	0551      	lsls	r1, r2, #21
 800a7d4:	d5f9      	bpl.n	800a7ca <HAL_I2C_Mem_Write+0x112>
 800a7d6:	e7c8      	b.n	800a76a <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a7d8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 800a7dc:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 800a7de:	f10c 0102 	add.w	r1, ip, #2
 800a7e2:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800a7e4:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 800a7e6:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 800a7ea:	3901      	subs	r1, #1
        hi2c->XferSize--;
 800a7ec:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 800a7ee:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 800a7f0:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800a7f2:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800a7f4:	2a00      	cmp	r2, #0
 800a7f6:	d1b0      	bne.n	800a75a <HAL_I2C_Mem_Write+0xa2>
 800a7f8:	e7e5      	b.n	800a7c6 <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 800a7fa:	6803      	ldr	r3, [r0, #0]
 800a7fc:	f043 0301 	orr.w	r3, r3, #1
 800a800:	6003      	str	r3, [r0, #0]
 800a802:	e787      	b.n	800a714 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a804:	6822      	ldr	r2, [r4, #0]
 800a806:	6813      	ldr	r3, [r2, #0]
 800a808:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 800a80c:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a80e:	6013      	str	r3, [r2, #0]
 800a810:	e763      	b.n	800a6da <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800a812:	695a      	ldr	r2, [r3, #20]
 800a814:	0612      	lsls	r2, r2, #24
 800a816:	d4c1      	bmi.n	800a79c <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a818:	695a      	ldr	r2, [r3, #20]
 800a81a:	0551      	lsls	r1, r2, #21
 800a81c:	d4a5      	bmi.n	800a76a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a81e:	f7ff f841 	bl	80098a4 <HAL_GetTick>
 800a822:	1b40      	subs	r0, r0, r5
 800a824:	4286      	cmp	r6, r0
 800a826:	d301      	bcc.n	800a82c <HAL_I2C_Mem_Write+0x174>
 800a828:	2e00      	cmp	r6, #0
 800a82a:	d195      	bne.n	800a758 <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a82c:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800a82e:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a830:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a832:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a836:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a83a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a83c:	4313      	orrs	r3, r2
 800a83e:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 800a840:	e7a1      	b.n	800a786 <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 800a842:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800a844:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800a848:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800a84c:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a850:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800a852:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800a856:	f043 0320 	orr.w	r3, r3, #32
 800a85a:	6423      	str	r3, [r4, #64]	; 0x40
 800a85c:	e73c      	b.n	800a6d8 <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a85e:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a860:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a862:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 800a866:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a868:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800a86a:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a86e:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a872:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 800a876:	e730      	b.n	800a6da <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a878:	695a      	ldr	r2, [r3, #20]
 800a87a:	0752      	lsls	r2, r2, #29
 800a87c:	d4ef      	bmi.n	800a85e <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800a87e:	695a      	ldr	r2, [r3, #20]
 800a880:	0551      	lsls	r1, r2, #21
 800a882:	f53f af72 	bmi.w	800a76a <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a886:	f7ff f80d 	bl	80098a4 <HAL_GetTick>
 800a88a:	1b40      	subs	r0, r0, r5
 800a88c:	4286      	cmp	r6, r0
 800a88e:	d3cd      	bcc.n	800a82c <HAL_I2C_Mem_Write+0x174>
 800a890:	2e00      	cmp	r6, #0
 800a892:	d0cb      	beq.n	800a82c <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800a894:	6823      	ldr	r3, [r4, #0]
 800a896:	e796      	b.n	800a7c6 <HAL_I2C_Mem_Write+0x10e>
 800a898:	ffff0000 	.word	0xffff0000

0800a89c <HAL_I2C_Mem_Read>:
{
 800a89c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a8a0:	4604      	mov	r4, r0
 800a8a2:	b087      	sub	sp, #28
 800a8a4:	4699      	mov	r9, r3
 800a8a6:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 800a8aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800a8ac:	460f      	mov	r7, r1
 800a8ae:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800a8b0:	f7fe fff8 	bl	80098a4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800a8b4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a8b8:	2b20      	cmp	r3, #32
 800a8ba:	d004      	beq.n	800a8c6 <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 800a8bc:	2702      	movs	r7, #2
}
 800a8be:	4638      	mov	r0, r7
 800a8c0:	b007      	add	sp, #28
 800a8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a8c6:	4606      	mov	r6, r0
 800a8c8:	e005      	b.n	800a8d6 <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800a8ca:	f7fe ffeb 	bl	80098a4 <HAL_GetTick>
 800a8ce:	1b80      	subs	r0, r0, r6
 800a8d0:	2819      	cmp	r0, #25
 800a8d2:	f200 80d2 	bhi.w	800aa7a <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a8d6:	f8d4 c000 	ldr.w	ip, [r4]
 800a8da:	f8dc 0018 	ldr.w	r0, [ip, #24]
 800a8de:	43c0      	mvns	r0, r0
 800a8e0:	f010 0b02 	ands.w	fp, r0, #2
 800a8e4:	d0f1      	beq.n	800a8ca <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 800a8e6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800a8ea:	2b01      	cmp	r3, #1
 800a8ec:	d0e6      	beq.n	800a8bc <HAL_I2C_Mem_Read+0x20>
 800a8ee:	2301      	movs	r3, #1
 800a8f0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800a8f4:	f8dc 3000 	ldr.w	r3, [ip]
 800a8f8:	07d9      	lsls	r1, r3, #31
 800a8fa:	d537      	bpl.n	800a96c <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800a8fc:	f8dc 0000 	ldr.w	r0, [ip]
 800a900:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 800a904:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 800a908:	9810      	ldr	r0, [sp, #64]	; 0x40
 800a90a:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a90c:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a90e:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800a912:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800a916:	2040      	movs	r0, #64	; 0x40
 800a918:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a91c:	2000      	movs	r0, #0
 800a91e:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 800a920:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800a924:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 800a926:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a928:	4893      	ldr	r0, [pc, #588]	; (800ab78 <HAL_I2C_Mem_Read+0x2dc>)
 800a92a:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800a92c:	4639      	mov	r1, r7
 800a92e:	464b      	mov	r3, r9
 800a930:	4642      	mov	r2, r8
 800a932:	4620      	mov	r0, r4
 800a934:	f7ff fca2 	bl	800a27c <I2C_RequestMemoryRead>
 800a938:	4607      	mov	r7, r0
 800a93a:	2800      	cmp	r0, #0
 800a93c:	f040 80ab 	bne.w	800aa96 <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 800a940:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 800a942:	b9d2      	cbnz	r2, 800a97a <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a944:	6823      	ldr	r3, [r4, #0]
 800a946:	9002      	str	r0, [sp, #8]
 800a948:	695a      	ldr	r2, [r3, #20]
 800a94a:	9202      	str	r2, [sp, #8]
 800a94c:	699a      	ldr	r2, [r3, #24]
 800a94e:	9202      	str	r2, [sp, #8]
 800a950:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a952:	681a      	ldr	r2, [r3, #0]
 800a954:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a958:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a95a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800a95c:	2220      	movs	r2, #32
 800a95e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800a962:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800a966:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800a96a:	e7a8      	b.n	800a8be <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 800a96c:	f8dc 3000 	ldr.w	r3, [ip]
 800a970:	f043 0301 	orr.w	r3, r3, #1
 800a974:	f8cc 3000 	str.w	r3, [ip]
 800a978:	e7c0      	b.n	800a8fc <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 800a97a:	2a01      	cmp	r2, #1
 800a97c:	f000 812c 	beq.w	800abd8 <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 800a980:	2a02      	cmp	r2, #2
 800a982:	f000 80bd 	beq.w	800ab00 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a986:	6823      	ldr	r3, [r4, #0]
 800a988:	9005      	str	r0, [sp, #20]
 800a98a:	6959      	ldr	r1, [r3, #20]
 800a98c:	9105      	str	r1, [sp, #20]
 800a98e:	6999      	ldr	r1, [r3, #24]
 800a990:	9105      	str	r1, [sp, #20]
 800a992:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 800a994:	2a03      	cmp	r2, #3
 800a996:	d849      	bhi.n	800aa2c <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 800a998:	2a01      	cmp	r2, #1
 800a99a:	f000 80eb 	beq.w	800ab74 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 800a99e:	2a02      	cmp	r2, #2
 800a9a0:	f000 8089 	beq.w	800aab6 <HAL_I2C_Mem_Read+0x21a>
 800a9a4:	1c69      	adds	r1, r5, #1
 800a9a6:	f040 80bb 	bne.w	800ab20 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9aa:	695a      	ldr	r2, [r3, #20]
 800a9ac:	0752      	lsls	r2, r2, #29
 800a9ae:	d5fc      	bpl.n	800a9aa <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9b0:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9b2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9b4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9b8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9ba:	691b      	ldr	r3, [r3, #16]
 800a9bc:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a9be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800a9c0:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a9c2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a9c4:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800a9c6:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800a9c8:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800a9ca:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800a9cc:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800a9ce:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800a9d0:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 800a9d2:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800a9d4:	6822      	ldr	r2, [r4, #0]
 800a9d6:	f040 80af 	bne.w	800ab38 <HAL_I2C_Mem_Read+0x29c>
 800a9da:	6953      	ldr	r3, [r2, #20]
 800a9dc:	075b      	lsls	r3, r3, #29
 800a9de:	d5fc      	bpl.n	800a9da <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9e0:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9e2:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a9e8:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9ea:	6913      	ldr	r3, [r2, #16]
 800a9ec:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 800a9ee:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800a9f0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800a9f2:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9f4:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 800a9f6:	3b01      	subs	r3, #1
 800a9f8:	b29b      	uxth	r3, r3
 800a9fa:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9fc:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 800a9fe:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 800aa00:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 800aa04:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aa06:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa0a:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 800aa0c:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa0e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aa10:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa12:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aa14:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 800aa16:	3101      	adds	r1, #1
          hi2c->XferSize--;
 800aa18:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aa1a:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 800aa1c:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aa1e:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aa20:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800aa22:	2a00      	cmp	r2, #0
 800aa24:	d099      	beq.n	800a95a <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 800aa26:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aa28:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 800aa2a:	d9b5      	bls.n	800a998 <HAL_I2C_Mem_Read+0xfc>
 800aa2c:	b95d      	cbnz	r5, 800aa46 <HAL_I2C_Mem_Read+0x1aa>
 800aa2e:	e0c5      	b.n	800abbc <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800aa30:	695a      	ldr	r2, [r3, #20]
 800aa32:	06d0      	lsls	r0, r2, #27
 800aa34:	f100 80b2 	bmi.w	800ab9c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aa38:	f7fe ff34 	bl	80098a4 <HAL_GetTick>
 800aa3c:	1b80      	subs	r0, r0, r6
 800aa3e:	4285      	cmp	r5, r0
 800aa40:	f0c0 8086 	bcc.w	800ab50 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800aa44:	6823      	ldr	r3, [r4, #0]
 800aa46:	695a      	ldr	r2, [r3, #20]
 800aa48:	0652      	lsls	r2, r2, #25
 800aa4a:	d5f1      	bpl.n	800aa30 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa4c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aa4e:	691b      	ldr	r3, [r3, #16]
 800aa50:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 800aa52:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aa54:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 800aa56:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800aa58:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800aa5a:	3b01      	subs	r3, #1
 800aa5c:	b29b      	uxth	r3, r3
 800aa5e:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aa60:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 800aa62:	3a01      	subs	r2, #1
 800aa64:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 800aa66:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aa6a:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 800aa6c:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 800aa6e:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800aa72:	d5d6      	bpl.n	800aa22 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa74:	6903      	ldr	r3, [r0, #16]
 800aa76:	704b      	strb	r3, [r1, #1]
 800aa78:	e036      	b.n	800aae8 <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 800aa7a:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800aa7c:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800aa80:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800aa84:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aa88:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800aa8a:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800aa8e:	f043 0320 	orr.w	r3, r3, #32
 800aa92:	6423      	str	r3, [r4, #64]	; 0x40
 800aa94:	e712      	b.n	800a8bc <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 800aa96:	2701      	movs	r7, #1
}
 800aa98:	4638      	mov	r0, r7
 800aa9a:	b007      	add	sp, #28
 800aa9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aaa0:	695a      	ldr	r2, [r3, #20]
 800aaa2:	0750      	lsls	r0, r2, #29
 800aaa4:	d40c      	bmi.n	800aac0 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800aaa6:	f7fe fefd 	bl	80098a4 <HAL_GetTick>
 800aaaa:	1b80      	subs	r0, r0, r6
 800aaac:	4285      	cmp	r5, r0
 800aaae:	d34f      	bcc.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
 800aab0:	2d00      	cmp	r5, #0
 800aab2:	d04d      	beq.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aab4:	6823      	ldr	r3, [r4, #0]
 800aab6:	1c69      	adds	r1, r5, #1
 800aab8:	d1f2      	bne.n	800aaa0 <HAL_I2C_Mem_Read+0x204>
 800aaba:	695a      	ldr	r2, [r3, #20]
 800aabc:	0752      	lsls	r2, r2, #29
 800aabe:	d5fc      	bpl.n	800aaba <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aac0:	681a      	ldr	r2, [r3, #0]
 800aac2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800aac6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aac8:	691a      	ldr	r2, [r3, #16]
 800aaca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800aacc:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 800aace:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 800aad0:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800aad2:	3b01      	subs	r3, #1
 800aad4:	b29b      	uxth	r3, r3
 800aad6:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aad8:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800aada:	3b01      	subs	r3, #1
 800aadc:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aade:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800aae0:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aae2:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 800aae4:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aae6:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 800aae8:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800aaea:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 800aaec:	3301      	adds	r3, #1
 800aaee:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 800aaf0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 800aaf2:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 800aaf4:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 800aaf6:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 800aaf8:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 800aafa:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800aafc:	8563      	strh	r3, [r4, #42]	; 0x2a
 800aafe:	e790      	b.n	800aa22 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ab00:	6823      	ldr	r3, [r4, #0]
 800ab02:	6819      	ldr	r1, [r3, #0]
 800ab04:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ab08:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800ab0a:	6819      	ldr	r1, [r3, #0]
 800ab0c:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 800ab10:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ab12:	9004      	str	r0, [sp, #16]
 800ab14:	6959      	ldr	r1, [r3, #20]
 800ab16:	9104      	str	r1, [sp, #16]
 800ab18:	6999      	ldr	r1, [r3, #24]
 800ab1a:	9104      	str	r1, [sp, #16]
 800ab1c:	9904      	ldr	r1, [sp, #16]
 800ab1e:	e739      	b.n	800a994 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab20:	695a      	ldr	r2, [r3, #20]
 800ab22:	0750      	lsls	r0, r2, #29
 800ab24:	f53f af44 	bmi.w	800a9b0 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab28:	f7fe febc 	bl	80098a4 <HAL_GetTick>
 800ab2c:	1b80      	subs	r0, r0, r6
 800ab2e:	4285      	cmp	r5, r0
 800ab30:	d30e      	bcc.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
 800ab32:	b16d      	cbz	r5, 800ab50 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ab34:	6823      	ldr	r3, [r4, #0]
 800ab36:	e735      	b.n	800a9a4 <HAL_I2C_Mem_Read+0x108>
 800ab38:	6953      	ldr	r3, [r2, #20]
 800ab3a:	0758      	lsls	r0, r3, #29
 800ab3c:	f53f af50 	bmi.w	800a9e0 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab40:	f7fe feb0 	bl	80098a4 <HAL_GetTick>
 800ab44:	1b80      	subs	r0, r0, r6
 800ab46:	4285      	cmp	r5, r0
 800ab48:	d302      	bcc.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
 800ab4a:	2d00      	cmp	r5, #0
 800ab4c:	f47f af41 	bne.w	800a9d2 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab50:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab52:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ab54:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ab56:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ab5a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab5e:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ab60:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800ab64:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab66:	f043 0320 	orr.w	r3, r3, #32
}
 800ab6a:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ab6c:	6423      	str	r3, [r4, #64]	; 0x40
}
 800ab6e:	b007      	add	sp, #28
 800ab70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab74:	b95d      	cbnz	r5, 800ab8e <HAL_I2C_Mem_Read+0x2f2>
 800ab76:	e02b      	b.n	800abd0 <HAL_I2C_Mem_Read+0x334>
 800ab78:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ab7c:	695a      	ldr	r2, [r3, #20]
 800ab7e:	06d2      	lsls	r2, r2, #27
 800ab80:	d40c      	bmi.n	800ab9c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab82:	f7fe fe8f 	bl	80098a4 <HAL_GetTick>
 800ab86:	1b80      	subs	r0, r0, r6
 800ab88:	4285      	cmp	r5, r0
 800ab8a:	d3e1      	bcc.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800ab8c:	6823      	ldr	r3, [r4, #0]
 800ab8e:	695a      	ldr	r2, [r3, #20]
 800ab90:	0651      	lsls	r1, r2, #25
 800ab92:	d5f3      	bpl.n	800ab7c <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab94:	691a      	ldr	r2, [r3, #16]
 800ab96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ab98:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800ab9a:	e7a5      	b.n	800aae8 <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ab9c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ab9e:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 800aba2:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800aba4:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800aba6:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800aba8:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800abac:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800abb0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800abb2:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800abb4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 800abb8:	2701      	movs	r7, #1
 800abba:	e680      	b.n	800a8be <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800abbc:	695a      	ldr	r2, [r3, #20]
 800abbe:	0652      	lsls	r2, r2, #25
 800abc0:	f53f af44 	bmi.w	800aa4c <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800abc4:	695a      	ldr	r2, [r3, #20]
 800abc6:	06d1      	lsls	r1, r2, #27
 800abc8:	d4e8      	bmi.n	800ab9c <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800abca:	f7fe fe6b 	bl	80098a4 <HAL_GetTick>
 800abce:	e7bf      	b.n	800ab50 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800abd0:	695a      	ldr	r2, [r3, #20]
 800abd2:	0650      	lsls	r0, r2, #25
 800abd4:	d5f6      	bpl.n	800abc4 <HAL_I2C_Mem_Read+0x328>
 800abd6:	e7dd      	b.n	800ab94 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abd8:	6823      	ldr	r3, [r4, #0]
 800abda:	6819      	ldr	r1, [r3, #0]
 800abdc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800abe0:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abe2:	9003      	str	r0, [sp, #12]
 800abe4:	6959      	ldr	r1, [r3, #20]
 800abe6:	9103      	str	r1, [sp, #12]
 800abe8:	6999      	ldr	r1, [r3, #24]
 800abea:	9103      	str	r1, [sp, #12]
 800abec:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abee:	6819      	ldr	r1, [r3, #0]
 800abf0:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800abf4:	6019      	str	r1, [r3, #0]
 800abf6:	e6cd      	b.n	800a994 <HAL_I2C_Mem_Read+0xf8>

0800abf8 <HAL_I2C_MasterTxCpltCallback>:
 800abf8:	4770      	bx	lr
 800abfa:	bf00      	nop

0800abfc <HAL_I2C_MasterRxCpltCallback>:
 800abfc:	4770      	bx	lr
 800abfe:	bf00      	nop

0800ac00 <HAL_I2C_SlaveTxCpltCallback>:
 800ac00:	4770      	bx	lr
 800ac02:	bf00      	nop

0800ac04 <HAL_I2C_SlaveRxCpltCallback>:
 800ac04:	4770      	bx	lr
 800ac06:	bf00      	nop

0800ac08 <HAL_I2C_AddrCallback>:
}
 800ac08:	4770      	bx	lr
 800ac0a:	bf00      	nop

0800ac0c <HAL_I2C_ListenCpltCallback>:
 800ac0c:	4770      	bx	lr
 800ac0e:	bf00      	nop

0800ac10 <HAL_I2C_MemTxCpltCallback>:
 800ac10:	4770      	bx	lr
 800ac12:	bf00      	nop

0800ac14 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ac14:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 800ac18:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 800ac1a:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800ac1c:	b959      	cbnz	r1, 800ac36 <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ac1e:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ac20:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ac22:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ac24:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800ac26:	d00d      	beq.n	800ac44 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800ac28:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800ac2c:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800ac2e:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ac30:	3201      	adds	r2, #1
 800ac32:	6502      	str	r2, [r0, #80]	; 0x50
 800ac34:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800ac36:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ac38:	2901      	cmp	r1, #1
 800ac3a:	d009      	beq.n	800ac50 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800ac3c:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800ac3e:	2902      	cmp	r1, #2
 800ac40:	d00e      	beq.n	800ac60 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800ac42:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ac44:	b2d2      	uxtb	r2, r2
 800ac46:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800ac48:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ac4a:	3202      	adds	r2, #2
 800ac4c:	6502      	str	r2, [r0, #80]	; 0x50
 800ac4e:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800ac50:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800ac52:	6801      	ldr	r1, [r0, #0]
 800ac54:	b2d2      	uxtb	r2, r2
 800ac56:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800ac58:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ac5a:	3201      	adds	r2, #1
 800ac5c:	6502      	str	r2, [r0, #80]	; 0x50
 800ac5e:	4770      	bx	lr
 800ac60:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800ac62:	2a22      	cmp	r2, #34	; 0x22
 800ac64:	d01f      	beq.n	800aca6 <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ac66:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ac68:	b289      	uxth	r1, r1
 800ac6a:	b9c1      	cbnz	r1, 800ac9e <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ac6c:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800ac6e:	b289      	uxth	r1, r1
 800ac70:	2900      	cmp	r1, #0
 800ac72:	d1e6      	bne.n	800ac42 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800ac74:	2a21      	cmp	r2, #33	; 0x21
 800ac76:	d1e4      	bne.n	800ac42 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac78:	6802      	ldr	r2, [r0, #0]
{
 800ac7a:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac7c:	6854      	ldr	r4, [r2, #4]
 800ac7e:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800ac82:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac84:	6814      	ldr	r4, [r2, #0]
 800ac86:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800ac8a:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800ac8c:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac8e:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800ac90:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac94:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800ac98:	f7ff ffba 	bl	800ac10 <HAL_I2C_MemTxCpltCallback>
}
 800ac9c:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800ac9e:	2a21      	cmp	r2, #33	; 0x21
 800aca0:	d00a      	beq.n	800acb8 <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800aca2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800aca4:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800aca6:	6801      	ldr	r1, [r0, #0]
 800aca8:	680a      	ldr	r2, [r1, #0]
 800acaa:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800acae:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800acb0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800acb2:	3201      	adds	r2, #1
 800acb4:	6502      	str	r2, [r0, #80]	; 0x50
 800acb6:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800acb8:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800acba:	6802      	ldr	r2, [r0, #0]
 800acbc:	f811 0b01 	ldrb.w	r0, [r1], #1
 800acc0:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800acc2:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800acc4:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800acc6:	3a01      	subs	r2, #1
 800acc8:	b292      	uxth	r2, r2
 800acca:	855a      	strh	r2, [r3, #42]	; 0x2a
 800accc:	4770      	bx	lr
 800acce:	bf00      	nop

0800acd0 <HAL_I2C_MemRxCpltCallback>:
 800acd0:	4770      	bx	lr
 800acd2:	bf00      	nop

0800acd4 <HAL_I2C_ErrorCallback>:
 800acd4:	4770      	bx	lr
 800acd6:	bf00      	nop

0800acd8 <HAL_I2C_AbortCpltCallback>:
 800acd8:	4770      	bx	lr
 800acda:	bf00      	nop

0800acdc <I2C_DMAAbort>:
{
 800acdc:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800acde:	4b3a      	ldr	r3, [pc, #232]	; (800adc8 <I2C_DMAAbort+0xec>)
 800ace0:	4a3a      	ldr	r2, [pc, #232]	; (800adcc <I2C_DMAAbort+0xf0>)
 800ace2:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800ace4:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800ace6:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ace8:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800acea:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800acec:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800acf0:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800acf2:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800acf4:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800acf8:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800acfa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800acfe:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800ad02:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800ad04:	9301      	str	r3, [sp, #4]
 800ad06:	e005      	b.n	800ad14 <I2C_DMAAbort+0x38>
    count--;
 800ad08:	9b01      	ldr	r3, [sp, #4]
 800ad0a:	3b01      	subs	r3, #1
 800ad0c:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ad0e:	6813      	ldr	r3, [r2, #0]
 800ad10:	059b      	lsls	r3, r3, #22
 800ad12:	d506      	bpl.n	800ad22 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800ad14:	9b01      	ldr	r3, [sp, #4]
 800ad16:	2b00      	cmp	r3, #0
 800ad18:	d1f6      	bne.n	800ad08 <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800ad1a:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ad1c:	f043 0320 	orr.w	r3, r3, #32
 800ad20:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800ad22:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800ad24:	b34c      	cbz	r4, 800ad7a <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800ad26:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800ad28:	2500      	movs	r5, #0
 800ad2a:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800ad2c:	b1f3      	cbz	r3, 800ad6c <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad2e:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ad30:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad32:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800ad36:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800ad38:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ad3a:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800ad3c:	2400      	movs	r4, #0
 800ad3e:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800ad40:	6813      	ldr	r3, [r2, #0]
 800ad42:	f023 0301 	bic.w	r3, r3, #1
 800ad46:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ad48:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ad4c:	2b60      	cmp	r3, #96	; 0x60
 800ad4e:	d02a      	beq.n	800ada6 <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ad50:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800ad54:	2928      	cmp	r1, #40	; 0x28
 800ad56:	d019      	beq.n	800ad8c <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800ad58:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad5a:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ad5c:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ad60:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800ad64:	f7ff ffb6 	bl	800acd4 <HAL_I2C_ErrorCallback>
}
 800ad68:	b002      	add	sp, #8
 800ad6a:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad6c:	6815      	ldr	r5, [r2, #0]
 800ad6e:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ad72:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ad74:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800ad76:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800ad78:	e7e2      	b.n	800ad40 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800ad7a:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800ad7c:	b1f3      	cbz	r3, 800adbc <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad7e:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800ad80:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad82:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800ad86:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800ad88:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800ad8a:	e7d7      	b.n	800ad3c <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800ad8c:	6813      	ldr	r3, [r2, #0]
 800ad8e:	f043 0301 	orr.w	r3, r3, #1
 800ad92:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad94:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad96:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ad98:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ad9c:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800ad9e:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800ada0:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800ada4:	e7de      	b.n	800ad64 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800ada6:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800ada8:	2220      	movs	r2, #32
 800adaa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800adae:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800adb2:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800adb4:	f7ff ff90 	bl	800acd8 <HAL_I2C_AbortCpltCallback>
}
 800adb8:	b002      	add	sp, #8
 800adba:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800adbc:	6814      	ldr	r4, [r2, #0]
 800adbe:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800adc2:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800adc4:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800adc6:	e7bb      	b.n	800ad40 <I2C_DMAAbort+0x64>
 800adc8:	20000078 	.word	0x20000078
 800adcc:	14f8b589 	.word	0x14f8b589

0800add0 <I2C_ITError>:
{
 800add0:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800add2:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800add6:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800adda:	2b10      	cmp	r3, #16
{
 800addc:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800adde:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ade0:	d039      	beq.n	800ae56 <I2C_ITError+0x86>
 800ade2:	b2d9      	uxtb	r1, r3
 800ade4:	2940      	cmp	r1, #64	; 0x40
 800ade6:	d036      	beq.n	800ae56 <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800ade8:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800adec:	2928      	cmp	r1, #40	; 0x28
 800adee:	d03d      	beq.n	800ae6c <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800adf0:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800adf2:	6859      	ldr	r1, [r3, #4]
 800adf4:	0508      	lsls	r0, r1, #20
 800adf6:	d407      	bmi.n	800ae08 <I2C_ITError+0x38>
 800adf8:	2a60      	cmp	r2, #96	; 0x60
 800adfa:	d005      	beq.n	800ae08 <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800adfc:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800adfe:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ae00:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ae04:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800ae08:	2200      	movs	r2, #0
 800ae0a:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ae0c:	685a      	ldr	r2, [r3, #4]
 800ae0e:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ae12:	d134      	bne.n	800ae7e <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800ae14:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800ae18:	2960      	cmp	r1, #96	; 0x60
 800ae1a:	d075      	beq.n	800af08 <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800ae1c:	695a      	ldr	r2, [r3, #20]
 800ae1e:	0650      	lsls	r0, r2, #25
 800ae20:	d505      	bpl.n	800ae2e <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ae22:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800ae24:	691b      	ldr	r3, [r3, #16]
 800ae26:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800ae28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ae2a:	3301      	adds	r3, #1
 800ae2c:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800ae2e:	4620      	mov	r0, r4
 800ae30:	f7ff ff50 	bl	800acd4 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800ae34:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800ae36:	0719      	lsls	r1, r3, #28
 800ae38:	d004      	beq.n	800ae44 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ae3a:	6822      	ldr	r2, [r4, #0]
 800ae3c:	6853      	ldr	r3, [r2, #4]
 800ae3e:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800ae42:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800ae44:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ae48:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ae4a:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800ae4c:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800ae4e:	d501      	bpl.n	800ae54 <I2C_ITError+0x84>
 800ae50:	2b28      	cmp	r3, #40	; 0x28
 800ae52:	d02f      	beq.n	800aeb4 <I2C_ITError+0xe4>
}
 800ae54:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800ae56:	2a22      	cmp	r2, #34	; 0x22
 800ae58:	d1c6      	bne.n	800ade8 <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ae5a:	6823      	ldr	r3, [r4, #0]
 800ae5c:	681a      	ldr	r2, [r3, #0]
 800ae5e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ae62:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800ae64:	685a      	ldr	r2, [r3, #4]
 800ae66:	0512      	lsls	r2, r2, #20
 800ae68:	d5c8      	bpl.n	800adfc <I2C_ITError+0x2c>
 800ae6a:	e7cd      	b.n	800ae08 <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800ae6c:	2300      	movs	r3, #0
 800ae6e:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800ae70:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800ae72:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800ae76:	685a      	ldr	r2, [r3, #4]
 800ae78:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800ae7c:	d0ca      	beq.n	800ae14 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ae7e:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ae80:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800ae82:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800ae86:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800ae88:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800ae8c:	2b01      	cmp	r3, #1
 800ae8e:	d01e      	beq.n	800aece <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800ae90:	4b28      	ldr	r3, [pc, #160]	; (800af34 <I2C_ITError+0x164>)
 800ae92:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800ae94:	f7fe fd90 	bl	80099b8 <HAL_DMA_Abort_IT>
 800ae98:	2800      	cmp	r0, #0
 800ae9a:	d0cb      	beq.n	800ae34 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800ae9c:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800ae9e:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800aea0:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800aea2:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800aea4:	f023 0301 	bic.w	r3, r3, #1
 800aea8:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800aeaa:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800aeae:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800aeb0:	4798      	blx	r3
 800aeb2:	e7bf      	b.n	800ae34 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800aeb4:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800aeb6:	4920      	ldr	r1, [pc, #128]	; (800af38 <I2C_ITError+0x168>)
 800aeb8:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800aeba:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800aebc:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800aebe:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800aec0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800aec4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800aec8:	f7ff fea0 	bl	800ac0c <HAL_I2C_ListenCpltCallback>
}
 800aecc:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800aece:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800aed0:	4b18      	ldr	r3, [pc, #96]	; (800af34 <I2C_ITError+0x164>)
 800aed2:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800aed4:	f7fe fd70 	bl	80099b8 <HAL_DMA_Abort_IT>
 800aed8:	2800      	cmp	r0, #0
 800aeda:	d0ab      	beq.n	800ae34 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800aedc:	6823      	ldr	r3, [r4, #0]
 800aede:	695a      	ldr	r2, [r3, #20]
 800aee0:	0651      	lsls	r1, r2, #25
 800aee2:	d506      	bpl.n	800aef2 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aee4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800aee6:	691b      	ldr	r3, [r3, #16]
 800aee8:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800aeea:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800aeec:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800aeee:	3201      	adds	r2, #1
 800aef0:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800aef2:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800aef4:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800aef6:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800aefa:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800aefc:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800aefe:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800af02:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800af04:	4798      	blx	r3
 800af06:	e795      	b.n	800ae34 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800af08:	2120      	movs	r1, #32
 800af0a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800af0e:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800af10:	695a      	ldr	r2, [r3, #20]
 800af12:	0652      	lsls	r2, r2, #25
 800af14:	d506      	bpl.n	800af24 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800af16:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800af18:	691b      	ldr	r3, [r3, #16]
 800af1a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800af1c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800af1e:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800af20:	3201      	adds	r2, #1
 800af22:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800af24:	681a      	ldr	r2, [r3, #0]
 800af26:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800af2a:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800af2c:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800af2e:	f7ff fed3 	bl	800acd8 <HAL_I2C_AbortCpltCallback>
 800af32:	e77f      	b.n	800ae34 <I2C_ITError+0x64>
 800af34:	0800acdd 	.word	0x0800acdd
 800af38:	ffff0000 	.word	0xffff0000

0800af3c <HAL_I2C_EV_IRQHandler>:
{
 800af3c:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800af3e:	6803      	ldr	r3, [r0, #0]
{
 800af40:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800af42:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800af44:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800af46:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af4a:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800af4e:	2910      	cmp	r1, #16
{
 800af50:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800af52:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800af54:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800af58:	d022      	beq.n	800afa0 <HAL_I2C_EV_IRQHandler+0x64>
 800af5a:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800af5e:	d01f      	beq.n	800afa0 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800af60:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800af62:	2900      	cmp	r1, #0
 800af64:	f000 8094 	beq.w	800b090 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800af68:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800af6a:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800af6c:	f011 0602 	ands.w	r6, r1, #2
 800af70:	d059      	beq.n	800b026 <HAL_I2C_EV_IRQHandler+0xea>
 800af72:	0586      	lsls	r6, r0, #22
 800af74:	d559      	bpl.n	800b02a <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800af76:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af78:	b102      	cbz	r2, 800af7c <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800af7a:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800af7c:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800af80:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800af84:	2a28      	cmp	r2, #40	; 0x28
 800af86:	f000 821e 	beq.w	800b3c6 <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af8a:	2200      	movs	r2, #0
 800af8c:	920c      	str	r2, [sp, #48]	; 0x30
 800af8e:	6959      	ldr	r1, [r3, #20]
 800af90:	910c      	str	r1, [sp, #48]	; 0x30
 800af92:	699b      	ldr	r3, [r3, #24]
 800af94:	930c      	str	r3, [sp, #48]	; 0x30
 800af96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800af98:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800af9c:	b00e      	add	sp, #56	; 0x38
 800af9e:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800afa0:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800afa2:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800afa4:	f011 0f01 	tst.w	r1, #1
 800afa8:	d11a      	bne.n	800afe0 <HAL_I2C_EV_IRQHandler+0xa4>
 800afaa:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800afae:	d0f5      	beq.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800afb0:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800afb4:	d0f2      	beq.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800afb6:	070d      	lsls	r5, r1, #28
 800afb8:	d56d      	bpl.n	800b096 <HAL_I2C_EV_IRQHandler+0x15a>
 800afba:	0585      	lsls	r5, r0, #22
 800afbc:	f140 8083 	bpl.w	800b0c6 <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800afc0:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800afc2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800afc4:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800afc6:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800afc8:	2900      	cmp	r1, #0
 800afca:	f000 81e3 	beq.w	800b394 <HAL_I2C_EV_IRQHandler+0x458>
 800afce:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800afd0:	2a00      	cmp	r2, #0
 800afd2:	f000 81df 	beq.w	800b394 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800afd6:	685a      	ldr	r2, [r3, #4]
 800afd8:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800afdc:	605a      	str	r2, [r3, #4]
 800afde:	e7dd      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800afe0:	0585      	lsls	r5, r0, #22
 800afe2:	d56e      	bpl.n	800b0c2 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800afe4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800afe6:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800afea:	f000 81e9 	beq.w	800b3c0 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800afee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800aff0:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800aff4:	bf04      	itt	eq
 800aff6:	2208      	moveq	r2, #8
 800aff8:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800affa:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800affe:	2a40      	cmp	r2, #64	; 0x40
 800b000:	f000 81d7 	beq.w	800b3b2 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800b004:	6922      	ldr	r2, [r4, #16]
 800b006:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800b00a:	f000 81b2 	beq.w	800b372 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800b00e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b010:	2a00      	cmp	r2, #0
 800b012:	f040 81ef 	bne.w	800b3f4 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800b016:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b018:	11d2      	asrs	r2, r2, #7
 800b01a:	f002 0206 	and.w	r2, r2, #6
 800b01e:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800b022:	611a      	str	r2, [r3, #16]
 800b024:	e7ba      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b026:	06cd      	lsls	r5, r1, #27
 800b028:	d47c      	bmi.n	800b124 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b02a:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800b02e:	2a21      	cmp	r2, #33	; 0x21
 800b030:	f000 80f5 	beq.w	800b21e <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b034:	064e      	lsls	r6, r1, #25
 800b036:	f140 8132 	bpl.w	800b29e <HAL_I2C_EV_IRQHandler+0x362>
 800b03a:	0545      	lsls	r5, r0, #21
 800b03c:	f140 812f 	bpl.w	800b29e <HAL_I2C_EV_IRQHandler+0x362>
 800b040:	0749      	lsls	r1, r1, #29
 800b042:	f100 812f 	bmi.w	800b2a4 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b046:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b04a:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b04c:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b04e:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800b050:	2a00      	cmp	r2, #0
 800b052:	d0a3      	beq.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b054:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b056:	691b      	ldr	r3, [r3, #16]
 800b058:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b05a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b05c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b05e:	3b01      	subs	r3, #1
 800b060:	b29b      	uxth	r3, r3
 800b062:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b064:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b066:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b068:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b06a:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b06c:	2b00      	cmp	r3, #0
 800b06e:	d195      	bne.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b070:	292a      	cmp	r1, #42	; 0x2a
 800b072:	d193      	bne.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b074:	6822      	ldr	r2, [r4, #0]
 800b076:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b078:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b07a:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b07c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b080:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b082:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800b084:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b086:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b08a:	f7ff fdbb 	bl	800ac04 <HAL_I2C_SlaveRxCpltCallback>
 800b08e:	e785      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800b090:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800b092:	6959      	ldr	r1, [r3, #20]
 800b094:	e76a      	b.n	800af6c <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b096:	078d      	lsls	r5, r1, #30
 800b098:	d515      	bpl.n	800b0c6 <HAL_I2C_EV_IRQHandler+0x18a>
 800b09a:	0585      	lsls	r5, r0, #22
 800b09c:	d513      	bpl.n	800b0c6 <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b09e:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800b0a2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800b0a4:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b0a6:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800b0aa:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800b0ac:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b0ae:	f000 81b3 	beq.w	800b418 <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b0b2:	2200      	movs	r2, #0
 800b0b4:	920a      	str	r2, [sp, #40]	; 0x28
 800b0b6:	695a      	ldr	r2, [r3, #20]
 800b0b8:	920a      	str	r2, [sp, #40]	; 0x28
 800b0ba:	699b      	ldr	r3, [r3, #24]
 800b0bc:	930a      	str	r3, [sp, #40]	; 0x28
 800b0be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b0c0:	e76c      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b0c2:	070d      	lsls	r5, r1, #28
 800b0c4:	d5e7      	bpl.n	800b096 <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800b0c6:	0776      	lsls	r6, r6, #29
 800b0c8:	f140 80f5 	bpl.w	800b2b6 <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b0cc:	685d      	ldr	r5, [r3, #4]
 800b0ce:	052d      	lsls	r5, r5, #20
 800b0d0:	f53f af64 	bmi.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b0d4:	060e      	lsls	r6, r1, #24
 800b0d6:	f140 8115 	bpl.w	800b304 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b0da:	0545      	lsls	r5, r0, #21
 800b0dc:	f140 8112 	bpl.w	800b304 <HAL_I2C_EV_IRQHandler+0x3c8>
 800b0e0:	074e      	lsls	r6, r1, #29
 800b0e2:	f100 8112 	bmi.w	800b30a <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0e6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b0ea:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b0ec:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800b0f0:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b0f2:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800b0f4:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800b0f6:	2800      	cmp	r0, #0
 800b0f8:	f040 8235 	bne.w	800b566 <HAL_I2C_EV_IRQHandler+0x62a>
 800b0fc:	2a21      	cmp	r2, #33	; 0x21
 800b0fe:	f000 8347 	beq.w	800b790 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b102:	2940      	cmp	r1, #64	; 0x40
 800b104:	f47f af4a 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800b108:	2a22      	cmp	r2, #34	; 0x22
 800b10a:	f47f af47 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800b10e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b110:	b292      	uxth	r2, r2
 800b112:	2a00      	cmp	r2, #0
 800b114:	f000 8268 	beq.w	800b5e8 <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b118:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800b11c:	2a40      	cmp	r2, #64	; 0x40
 800b11e:	f040 80b4 	bne.w	800b28a <HAL_I2C_EV_IRQHandler+0x34e>
 800b122:	e0fc      	b.n	800b31e <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b124:	0585      	lsls	r5, r0, #22
 800b126:	d580      	bpl.n	800b02a <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b128:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b12c:	685a      	ldr	r2, [r3, #4]
 800b12e:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b132:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800b134:	960d      	str	r6, [sp, #52]	; 0x34
 800b136:	695a      	ldr	r2, [r3, #20]
 800b138:	920d      	str	r2, [sp, #52]	; 0x34
 800b13a:	681a      	ldr	r2, [r3, #0]
 800b13c:	f042 0201 	orr.w	r2, r2, #1
 800b140:	601a      	str	r2, [r3, #0]
 800b142:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b144:	681a      	ldr	r2, [r3, #0]
 800b146:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b14a:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b14c:	685a      	ldr	r2, [r3, #4]
 800b14e:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b150:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b152:	d521      	bpl.n	800b198 <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800b154:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800b158:	2a22      	cmp	r2, #34	; 0x22
 800b15a:	f000 817a 	beq.w	800b452 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800b15e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b160:	6802      	ldr	r2, [r0, #0]
 800b162:	6852      	ldr	r2, [r2, #4]
 800b164:	b292      	uxth	r2, r2
 800b166:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b168:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b16a:	b292      	uxth	r2, r2
 800b16c:	b11a      	cbz	r2, 800b176 <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b16e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b170:	f042 0204 	orr.w	r2, r2, #4
 800b174:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b176:	685a      	ldr	r2, [r3, #4]
 800b178:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b17c:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800b17e:	f7fe fc2d 	bl	80099dc <HAL_DMA_GetState>
 800b182:	2801      	cmp	r0, #1
 800b184:	d008      	beq.n	800b198 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800b186:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b188:	4b99      	ldr	r3, [pc, #612]	; (800b3f0 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800b18a:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800b18c:	f7fe fc14 	bl	80099b8 <HAL_DMA_Abort_IT>
 800b190:	b110      	cbz	r0, 800b198 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800b192:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800b194:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b196:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800b198:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b19a:	b29b      	uxth	r3, r3
 800b19c:	b313      	cbz	r3, 800b1e4 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b19e:	6823      	ldr	r3, [r4, #0]
 800b1a0:	695a      	ldr	r2, [r3, #20]
 800b1a2:	0752      	lsls	r2, r2, #29
 800b1a4:	d50a      	bpl.n	800b1bc <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1a8:	691b      	ldr	r3, [r3, #16]
 800b1aa:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b1ac:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b1ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b1b0:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800b1b2:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800b1b4:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1b6:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800b1b8:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b1ba:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800b1bc:	695a      	ldr	r2, [r3, #20]
 800b1be:	0656      	lsls	r6, r2, #25
 800b1c0:	d509      	bpl.n	800b1d6 <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b1c2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b1c4:	691b      	ldr	r3, [r3, #16]
 800b1c6:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b1c8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b1ca:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b1cc:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800b1ce:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800b1d0:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b1d2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b1d4:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800b1d6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b1d8:	b29b      	uxth	r3, r3
 800b1da:	b11b      	cbz	r3, 800b1e4 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b1dc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b1de:	f043 0304 	orr.w	r3, r3, #4
 800b1e2:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800b1e4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b1e6:	2b00      	cmp	r3, #0
 800b1e8:	f040 80dd 	bne.w	800b3a6 <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800b1ec:	2d2a      	cmp	r5, #42	; 0x2a
 800b1ee:	f000 8151 	beq.w	800b494 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800b1f2:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b1f6:	2b28      	cmp	r3, #40	; 0x28
 800b1f8:	f000 8154 	beq.w	800b4a4 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800b1fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800b1fe:	2b22      	cmp	r3, #34	; 0x22
 800b200:	d002      	beq.n	800b208 <HAL_I2C_EV_IRQHandler+0x2cc>
 800b202:	2d22      	cmp	r5, #34	; 0x22
 800b204:	f47f aeca 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800b208:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b20a:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800b20c:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b20e:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b210:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b214:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b218:	f7ff fcf4 	bl	800ac04 <HAL_I2C_SlaveRxCpltCallback>
 800b21c:	e6be      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b21e:	060d      	lsls	r5, r1, #24
 800b220:	d528      	bpl.n	800b274 <HAL_I2C_EV_IRQHandler+0x338>
 800b222:	0546      	lsls	r6, r0, #21
 800b224:	d526      	bpl.n	800b274 <HAL_I2C_EV_IRQHandler+0x338>
 800b226:	074d      	lsls	r5, r1, #29
 800b228:	d427      	bmi.n	800b27a <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b22a:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800b22e:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b230:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800b232:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800b234:	2900      	cmp	r1, #0
 800b236:	f43f aeb1 	beq.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b23a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b23c:	f811 5b01 	ldrb.w	r5, [r1], #1
 800b240:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800b242:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b244:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b246:	3901      	subs	r1, #1
 800b248:	b289      	uxth	r1, r1
 800b24a:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800b24c:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800b24e:	b289      	uxth	r1, r1
 800b250:	2900      	cmp	r1, #0
 800b252:	f47f aea3 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b256:	2829      	cmp	r0, #41	; 0x29
 800b258:	f47f aea0 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b25c:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b25e:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b260:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b264:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b266:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800b268:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b26a:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800b26e:	f7ff fcc7 	bl	800ac00 <HAL_I2C_SlaveTxCpltCallback>
 800b272:	e693      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b274:	0749      	lsls	r1, r1, #29
 800b276:	f57f ae91 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b27a:	0582      	lsls	r2, r0, #22
 800b27c:	f57f ae8e 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b280:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b282:	b292      	uxth	r2, r2
 800b284:	2a00      	cmp	r2, #0
 800b286:	f43f ae89 	beq.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b28a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b28c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b290:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800b292:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b294:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b296:	3b01      	subs	r3, #1
 800b298:	b29b      	uxth	r3, r3
 800b29a:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b29c:	e67e      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b29e:	074a      	lsls	r2, r1, #29
 800b2a0:	f57f ae7c 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b2a4:	0586      	lsls	r6, r0, #22
 800b2a6:	f57f ae79 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800b2aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2ac:	b292      	uxth	r2, r2
 800b2ae:	2a00      	cmp	r2, #0
 800b2b0:	f43f ae74 	beq.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b2b4:	e01b      	b.n	800b2ee <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800b2b6:	685a      	ldr	r2, [r3, #4]
 800b2b8:	0512      	lsls	r2, r2, #20
 800b2ba:	f53f ae6f 	bmi.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b2be:	064e      	lsls	r6, r1, #25
 800b2c0:	d433      	bmi.n	800b32a <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b2c2:	0749      	lsls	r1, r1, #29
 800b2c4:	f57f ae6a 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b2c8:	0582      	lsls	r2, r0, #22
 800b2ca:	f57f ae67 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b2ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800b2d0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2d2:	b292      	uxth	r2, r2
 800b2d4:	2a04      	cmp	r2, #4
 800b2d6:	f000 8113 	beq.w	800b500 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800b2da:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2dc:	b292      	uxth	r2, r2
 800b2de:	2a03      	cmp	r2, #3
 800b2e0:	f000 8153 	beq.w	800b58a <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800b2e4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b2e6:	b292      	uxth	r2, r2
 800b2e8:	2a02      	cmp	r2, #2
 800b2ea:	f000 8182 	beq.w	800b5f2 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b2ee:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b2f0:	691b      	ldr	r3, [r3, #16]
 800b2f2:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b2f4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b2f6:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b2f8:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800b2fa:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800b2fc:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800b2fe:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b300:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800b302:	e64b      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800b304:	074d      	lsls	r5, r1, #29
 800b306:	f57f ae49 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b30a:	0581      	lsls	r1, r0, #22
 800b30c:	f57f ae46 	bpl.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800b310:	2a21      	cmp	r2, #33	; 0x21
 800b312:	f000 80fd 	beq.w	800b510 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800b316:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800b31a:	f47f ae3f 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b31e:	4620      	mov	r0, r4
}
 800b320:	b00e      	add	sp, #56	; 0x38
 800b322:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800b326:	f7ff bc75 	b.w	800ac14 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800b32a:	0545      	lsls	r5, r0, #21
 800b32c:	d5c9      	bpl.n	800b2c2 <HAL_I2C_EV_IRQHandler+0x386>
 800b32e:	f011 0104 	ands.w	r1, r1, #4
 800b332:	d1c9      	bne.n	800b2c8 <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800b334:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b338:	2a22      	cmp	r2, #34	; 0x22
 800b33a:	f47f ae2f 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800b33e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b340:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800b342:	2a03      	cmp	r2, #3
 800b344:	f240 81ec 	bls.w	800b720 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b348:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b34a:	691b      	ldr	r3, [r3, #16]
 800b34c:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800b34e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800b350:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b352:	3b01      	subs	r3, #1
 800b354:	b29b      	uxth	r3, r3
 800b356:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800b358:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b35a:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800b35c:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800b35e:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800b360:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800b362:	f47f ae1b 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b366:	6822      	ldr	r2, [r4, #0]
 800b368:	6853      	ldr	r3, [r2, #4]
 800b36a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b36e:	6053      	str	r3, [r2, #4]
 800b370:	e614      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b372:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b376:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b378:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b37a:	bf16      	itet	ne
 800b37c:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b380:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b384:	b2d2      	uxtbne	r2, r2
 800b386:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800b388:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800b38a:	b11a      	cbz	r2, 800b394 <HAL_I2C_EV_IRQHandler+0x458>
 800b38c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b38e:	2a00      	cmp	r2, #0
 800b390:	f47f ae21 	bne.w	800afd6 <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800b394:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800b396:	2a00      	cmp	r2, #0
 800b398:	f43f ae00 	beq.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b39c:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800b39e:	2a00      	cmp	r2, #0
 800b3a0:	f47f ae19 	bne.w	800afd6 <HAL_I2C_EV_IRQHandler+0x9a>
 800b3a4:	e5fa      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800b3a6:	4620      	mov	r0, r4
}
 800b3a8:	b00e      	add	sp, #56	; 0x38
 800b3aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800b3ae:	f7ff bd0f 	b.w	800add0 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800b3b2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b3b4:	bb52      	cbnz	r2, 800b40c <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800b3b6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b3b8:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800b3bc:	611a      	str	r2, [r3, #16]
 800b3be:	e5ed      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800b3c0:	2201      	movs	r2, #1
 800b3c2:	62e2      	str	r2, [r4, #44]	; 0x2c
 800b3c4:	e619      	b.n	800affa <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800b3c6:	685a      	ldr	r2, [r3, #4]
 800b3c8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b3cc:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800b3ce:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800b3d0:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800b3d4:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800b3d8:	bf54      	ite	pl
 800b3da:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800b3dc:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800b3de:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800b3e2:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	f7ff fc0e 	bl	800ac08 <HAL_I2C_AddrCallback>
 800b3ec:	e5d6      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b3ee:	bf00      	nop
 800b3f0:	0800acdd 	.word	0x0800acdd
      else if (hi2c->EventCount == 1U)
 800b3f4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b3f6:	2a01      	cmp	r2, #1
 800b3f8:	f47f add0 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800b3fc:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b3fe:	11d2      	asrs	r2, r2, #7
 800b400:	f002 0206 	and.w	r2, r2, #6
 800b404:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800b408:	611a      	str	r2, [r3, #16]
 800b40a:	e5c7      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800b40c:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800b40e:	f042 0201 	orr.w	r2, r2, #1
 800b412:	b2d2      	uxtb	r2, r2
 800b414:	611a      	str	r2, [r3, #16]
 800b416:	e5c1      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800b418:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800b41a:	b911      	cbnz	r1, 800b422 <HAL_I2C_EV_IRQHandler+0x4e6>
 800b41c:	2a40      	cmp	r2, #64	; 0x40
 800b41e:	f000 809b 	beq.w	800b558 <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800b422:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800b424:	b922      	cbnz	r2, 800b430 <HAL_I2C_EV_IRQHandler+0x4f4>
 800b426:	6921      	ldr	r1, [r4, #16]
 800b428:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800b42c:	f000 809f 	beq.w	800b56e <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800b430:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b432:	b292      	uxth	r2, r2
 800b434:	2a00      	cmp	r2, #0
 800b436:	d142      	bne.n	800b4be <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b438:	9203      	str	r2, [sp, #12]
 800b43a:	695a      	ldr	r2, [r3, #20]
 800b43c:	9203      	str	r2, [sp, #12]
 800b43e:	699a      	ldr	r2, [r3, #24]
 800b440:	9203      	str	r2, [sp, #12]
 800b442:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b444:	681a      	ldr	r2, [r3, #0]
 800b446:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b44a:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800b44c:	2300      	movs	r3, #0
 800b44e:	6523      	str	r3, [r4, #80]	; 0x50
 800b450:	e5a4      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800b452:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b454:	6802      	ldr	r2, [r0, #0]
 800b456:	6852      	ldr	r2, [r2, #4]
 800b458:	b292      	uxth	r2, r2
 800b45a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800b45c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b45e:	b292      	uxth	r2, r2
 800b460:	b11a      	cbz	r2, 800b46a <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800b462:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b464:	f042 0204 	orr.w	r2, r2, #4
 800b468:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800b46a:	685a      	ldr	r2, [r3, #4]
 800b46c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b470:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800b472:	f7fe fab3 	bl	80099dc <HAL_DMA_GetState>
 800b476:	2801      	cmp	r0, #1
 800b478:	f43f ae8e 	beq.w	800b198 <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800b47c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b47e:	4b98      	ldr	r3, [pc, #608]	; (800b6e0 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800b480:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800b482:	f7fe fa99 	bl	80099b8 <HAL_DMA_Abort_IT>
 800b486:	2800      	cmp	r0, #0
 800b488:	f43f ae86 	beq.w	800b198 <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800b48c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800b48e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800b490:	4798      	blx	r3
 800b492:	e681      	b.n	800b198 <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b494:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800b496:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b498:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800b49a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800b49e:	f7ff fbb1 	bl	800ac04 <HAL_I2C_SlaveRxCpltCallback>
 800b4a2:	e6a6      	b.n	800b1f2 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800b4a4:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b4a6:	498f      	ldr	r1, [pc, #572]	; (800b6e4 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800b4a8:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800b4aa:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800b4ac:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800b4ae:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b4b0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b4b4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800b4b8:	f7ff fba8 	bl	800ac0c <HAL_I2C_ListenCpltCallback>
 800b4bc:	e56e      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800b4be:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4c0:	b292      	uxth	r2, r2
 800b4c2:	2a01      	cmp	r2, #1
 800b4c4:	d070      	beq.n	800b5a8 <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800b4c6:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b4c8:	b292      	uxth	r2, r2
 800b4ca:	2a02      	cmp	r2, #2
 800b4cc:	f000 80d6 	beq.w	800b67c <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b4d0:	681a      	ldr	r2, [r3, #0]
 800b4d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b4d6:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b4d8:	685a      	ldr	r2, [r3, #4]
 800b4da:	0511      	lsls	r1, r2, #20
 800b4dc:	d508      	bpl.n	800b4f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b4de:	2820      	cmp	r0, #32
 800b4e0:	f200 80f8 	bhi.w	800b6d4 <HAL_I2C_EV_IRQHandler+0x798>
 800b4e4:	2807      	cmp	r0, #7
 800b4e6:	f200 80ea 	bhi.w	800b6be <HAL_I2C_EV_IRQHandler+0x782>
 800b4ea:	2801      	cmp	r0, #1
 800b4ec:	f000 80ed 	beq.w	800b6ca <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b4f0:	2200      	movs	r2, #0
 800b4f2:	9209      	str	r2, [sp, #36]	; 0x24
 800b4f4:	695a      	ldr	r2, [r3, #20]
 800b4f6:	9209      	str	r2, [sp, #36]	; 0x24
 800b4f8:	699b      	ldr	r3, [r3, #24]
 800b4fa:	9309      	str	r3, [sp, #36]	; 0x24
 800b4fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800b4fe:	e7a5      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b500:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b502:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b504:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b508:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b50a:	691b      	ldr	r3, [r3, #16]
 800b50c:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800b50e:	e6f1      	b.n	800b2f4 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800b510:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800b512:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800b516:	2a21      	cmp	r2, #33	; 0x21
 800b518:	f47f ad40 	bne.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800b51c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800b51e:	b292      	uxth	r2, r2
 800b520:	2a00      	cmp	r2, #0
 800b522:	f47f aeb2 	bne.w	800b28a <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b526:	2908      	cmp	r1, #8
 800b528:	f000 80e2 	beq.w	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b52c:	2920      	cmp	r1, #32
 800b52e:	f000 80df 	beq.w	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b532:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800b536:	f000 80db 	beq.w	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b53a:	6859      	ldr	r1, [r3, #4]
 800b53c:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b540:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b542:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800b544:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b546:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b548:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b54c:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800b54e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800b552:	f7ff fb51 	bl	800abf8 <HAL_I2C_MasterTxCpltCallback>
 800b556:	e521      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b558:	9101      	str	r1, [sp, #4]
 800b55a:	695a      	ldr	r2, [r3, #20]
 800b55c:	9201      	str	r2, [sp, #4]
 800b55e:	699b      	ldr	r3, [r3, #24]
 800b560:	9301      	str	r3, [sp, #4]
 800b562:	9b01      	ldr	r3, [sp, #4]
 800b564:	e51a      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800b566:	2a21      	cmp	r2, #33	; 0x21
 800b568:	f43f add1 	beq.w	800b10e <HAL_I2C_EV_IRQHandler+0x1d2>
 800b56c:	e5c9      	b.n	800b102 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b56e:	9202      	str	r2, [sp, #8]
 800b570:	695a      	ldr	r2, [r3, #20]
 800b572:	9202      	str	r2, [sp, #8]
 800b574:	699a      	ldr	r2, [r3, #24]
 800b576:	9202      	str	r2, [sp, #8]
 800b578:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b57a:	681a      	ldr	r2, [r3, #0]
 800b57c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b580:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800b582:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b584:	3301      	adds	r3, #1
 800b586:	6523      	str	r3, [r4, #80]	; 0x50
 800b588:	e508      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b58a:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b58c:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b58e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b592:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800b594:	f43f aeab 	beq.w	800b2ee <HAL_I2C_EV_IRQHandler+0x3b2>
 800b598:	2902      	cmp	r1, #2
 800b59a:	f43f aea8 	beq.w	800b2ee <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b59e:	681a      	ldr	r2, [r3, #0]
 800b5a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5a4:	601a      	str	r2, [r3, #0]
 800b5a6:	e6a2      	b.n	800b2ee <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800b5a8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b5ac:	f000 811b 	beq.w	800b7e6 <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800b5b0:	2808      	cmp	r0, #8
 800b5b2:	f000 8108 	beq.w	800b7c6 <HAL_I2C_EV_IRQHandler+0x88a>
 800b5b6:	2820      	cmp	r0, #32
 800b5b8:	f000 8105 	beq.w	800b7c6 <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b5bc:	2d12      	cmp	r5, #18
 800b5be:	f000 80ff 	beq.w	800b7c0 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b5c2:	2810      	cmp	r0, #16
 800b5c4:	d804      	bhi.n	800b5d0 <HAL_I2C_EV_IRQHandler+0x694>
 800b5c6:	4a48      	ldr	r2, [pc, #288]	; (800b6e8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b5c8:	40c2      	lsrs	r2, r0
 800b5ca:	07d1      	lsls	r1, r2, #31
 800b5cc:	f100 814c 	bmi.w	800b868 <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5d0:	681a      	ldr	r2, [r3, #0]
 800b5d2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5d6:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5d8:	2200      	movs	r2, #0
 800b5da:	9206      	str	r2, [sp, #24]
 800b5dc:	695a      	ldr	r2, [r3, #20]
 800b5de:	9206      	str	r2, [sp, #24]
 800b5e0:	699b      	ldr	r3, [r3, #24]
 800b5e2:	9306      	str	r3, [sp, #24]
 800b5e4:	9b06      	ldr	r3, [sp, #24]
 800b5e6:	e731      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800b5e8:	685a      	ldr	r2, [r3, #4]
 800b5ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5ee:	605a      	str	r2, [r3, #4]
 800b5f0:	e4d4      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800b5f2:	3901      	subs	r1, #1
 800b5f4:	290f      	cmp	r1, #15
 800b5f6:	d809      	bhi.n	800b60c <HAL_I2C_EV_IRQHandler+0x6d0>
 800b5f8:	e8df f001 	tbb	[pc, r1]
 800b5fc:	3608363b 	.word	0x3608363b
 800b600:	08080808 	.word	0x08080808
 800b604:	08080808 	.word	0x08080808
 800b608:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b60c:	681a      	ldr	r2, [r3, #0]
 800b60e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b612:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b614:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b616:	691b      	ldr	r3, [r3, #16]
 800b618:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800b61a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800b61c:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b61e:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800b620:	3b01      	subs	r3, #1
 800b622:	b29b      	uxth	r3, r3
 800b624:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b626:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800b628:	1c51      	adds	r1, r2, #1
 800b62a:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b62c:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800b62e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b630:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800b632:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800b634:	3b01      	subs	r3, #1
 800b636:	b29b      	uxth	r3, r3
 800b638:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b63a:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800b63c:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b63e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800b642:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800b644:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800b646:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800b648:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b64c:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800b650:	2b40      	cmp	r3, #64	; 0x40
 800b652:	f000 80f5 	beq.w	800b840 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b656:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b658:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b65a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b65e:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800b660:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800b662:	f7ff facb 	bl	800abfc <HAL_I2C_MasterRxCpltCallback>
 800b666:	e499      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b668:	681a      	ldr	r2, [r3, #0]
 800b66a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b66e:	601a      	str	r2, [r3, #0]
 800b670:	e7d0      	b.n	800b614 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b672:	681a      	ldr	r2, [r3, #0]
 800b674:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b678:	601a      	str	r2, [r3, #0]
 800b67a:	e7cb      	b.n	800b614 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800b67c:	2810      	cmp	r0, #16
 800b67e:	d804      	bhi.n	800b68a <HAL_I2C_EV_IRQHandler+0x74e>
 800b680:	4a19      	ldr	r2, [pc, #100]	; (800b6e8 <HAL_I2C_EV_IRQHandler+0x7ac>)
 800b682:	40c2      	lsrs	r2, r0
 800b684:	07d2      	lsls	r2, r2, #31
 800b686:	f100 80c2 	bmi.w	800b80e <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b68a:	681a      	ldr	r2, [r3, #0]
 800b68c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b690:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b692:	681a      	ldr	r2, [r3, #0]
 800b694:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b698:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b69a:	685a      	ldr	r2, [r3, #4]
 800b69c:	0516      	lsls	r6, r2, #20
 800b69e:	d506      	bpl.n	800b6ae <HAL_I2C_EV_IRQHandler+0x772>
 800b6a0:	2820      	cmp	r0, #32
 800b6a2:	f240 80bc 	bls.w	800b81e <HAL_I2C_EV_IRQHandler+0x8e2>
 800b6a6:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b6aa:	f000 80bd 	beq.w	800b828 <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b6ae:	2200      	movs	r2, #0
 800b6b0:	9208      	str	r2, [sp, #32]
 800b6b2:	695a      	ldr	r2, [r3, #20]
 800b6b4:	9208      	str	r2, [sp, #32]
 800b6b6:	699b      	ldr	r3, [r3, #24]
 800b6b8:	9308      	str	r3, [sp, #32]
 800b6ba:	9b08      	ldr	r3, [sp, #32]
 800b6bc:	e6c6      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
 800b6be:	4a0b      	ldr	r2, [pc, #44]	; (800b6ec <HAL_I2C_EV_IRQHandler+0x7b0>)
 800b6c0:	3808      	subs	r0, #8
 800b6c2:	40c2      	lsrs	r2, r0
 800b6c4:	07d2      	lsls	r2, r2, #31
 800b6c6:	f57f af13 	bpl.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b6ca:	685a      	ldr	r2, [r3, #4]
 800b6cc:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b6d0:	605a      	str	r2, [r3, #4]
 800b6d2:	e70d      	b.n	800b4f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b6d4:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800b6d8:	f47f af0a 	bne.w	800b4f0 <HAL_I2C_EV_IRQHandler+0x5b4>
 800b6dc:	e7f5      	b.n	800b6ca <HAL_I2C_EV_IRQHandler+0x78e>
 800b6de:	bf00      	nop
 800b6e0:	0800acdd 	.word	0x0800acdd
 800b6e4:	ffff0000 	.word	0xffff0000
 800b6e8:	00010014 	.word	0x00010014
 800b6ec:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b6f0:	6859      	ldr	r1, [r3, #4]
 800b6f2:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b6f6:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6f8:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b6fa:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800b6fc:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b6fe:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800b702:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800b704:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800b706:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b70a:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b70e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b712:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b714:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b716:	f47f af1c 	bne.w	800b552 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800b71a:	f7ff fa79 	bl	800ac10 <HAL_I2C_MemTxCpltCallback>
 800b71e:	e43d      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800b720:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800b722:	2802      	cmp	r0, #2
 800b724:	f43f af60 	beq.w	800b5e8 <HAL_I2C_EV_IRQHandler+0x6ac>
 800b728:	2a01      	cmp	r2, #1
 800b72a:	f63f af5d 	bhi.w	800b5e8 <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b72e:	4a62      	ldr	r2, [pc, #392]	; (800b8b8 <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800b730:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800b732:	6812      	ldr	r2, [r2, #0]
 800b734:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800b738:	fbb2 f2f0 	udiv	r2, r2, r0
 800b73c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800b740:	920b      	str	r2, [sp, #44]	; 0x2c
 800b742:	e004      	b.n	800b74e <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800b744:	681a      	ldr	r2, [r3, #0]
 800b746:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800b74a:	f000 8092 	beq.w	800b872 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800b74e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800b750:	3a01      	subs	r2, #1
 800b752:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800b754:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800b756:	2900      	cmp	r1, #0
 800b758:	d1f4      	bne.n	800b744 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b75a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b75c:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b75e:	f042 0220 	orr.w	r2, r2, #32
 800b762:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b764:	685a      	ldr	r2, [r3, #4]
 800b766:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b76a:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b76c:	691b      	ldr	r3, [r3, #16]
 800b76e:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b770:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b772:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b774:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800b776:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800b778:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800b77a:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800b77c:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800b77e:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800b780:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800b784:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800b786:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800b78a:	f7ff faa3 	bl	800acd4 <HAL_I2C_ErrorCallback>
 800b78e:	e405      	b.n	800af9c <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800b790:	2d08      	cmp	r5, #8
 800b792:	d0ad      	beq.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b794:	2d20      	cmp	r5, #32
 800b796:	d0ab      	beq.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
 800b798:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800b79c:	d0a8      	beq.n	800b6f0 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b79e:	685a      	ldr	r2, [r3, #4]
 800b7a0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800b7a4:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b7a6:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7a8:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800b7aa:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800b7ac:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b7ae:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b7b2:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800b7b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800b7b8:	f7ff fa1e 	bl	800abf8 <HAL_I2C_MasterTxCpltCallback>
 800b7bc:	f7ff bbee 	b.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800b7c0:	2801      	cmp	r0, #1
 800b7c2:	f43f af05 	beq.w	800b5d0 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7c6:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b7c8:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7ca:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7ce:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b7d0:	9107      	str	r1, [sp, #28]
 800b7d2:	695a      	ldr	r2, [r3, #20]
 800b7d4:	9207      	str	r2, [sp, #28]
 800b7d6:	699a      	ldr	r2, [r3, #24]
 800b7d8:	9207      	str	r2, [sp, #28]
 800b7da:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b7dc:	681a      	ldr	r2, [r3, #0]
 800b7de:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b7e2:	601a      	str	r2, [r3, #0]
 800b7e4:	e632      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7e6:	681a      	ldr	r2, [r3, #0]
 800b7e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7ec:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800b7ee:	685a      	ldr	r2, [r3, #4]
 800b7f0:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800b7f4:	d02d      	beq.n	800b852 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7f6:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b7f8:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b7fa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b7fe:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b800:	9104      	str	r1, [sp, #16]
 800b802:	695a      	ldr	r2, [r3, #20]
 800b804:	9204      	str	r2, [sp, #16]
 800b806:	699b      	ldr	r3, [r3, #24]
 800b808:	9304      	str	r3, [sp, #16]
 800b80a:	9b04      	ldr	r3, [sp, #16]
 800b80c:	e61e      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b80e:	681a      	ldr	r2, [r3, #0]
 800b810:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b814:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800b816:	685a      	ldr	r2, [r3, #4]
 800b818:	0515      	lsls	r5, r2, #20
 800b81a:	f57f af48 	bpl.w	800b6ae <HAL_I2C_EV_IRQHandler+0x772>
 800b81e:	2807      	cmp	r0, #7
 800b820:	d807      	bhi.n	800b832 <HAL_I2C_EV_IRQHandler+0x8f6>
 800b822:	2801      	cmp	r0, #1
 800b824:	f47f af43 	bne.w	800b6ae <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800b828:	685a      	ldr	r2, [r3, #4]
 800b82a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800b82e:	605a      	str	r2, [r3, #4]
 800b830:	e73d      	b.n	800b6ae <HAL_I2C_EV_IRQHandler+0x772>
 800b832:	4a22      	ldr	r2, [pc, #136]	; (800b8bc <HAL_I2C_EV_IRQHandler+0x980>)
 800b834:	3808      	subs	r0, #8
 800b836:	40c2      	lsrs	r2, r0
 800b838:	07d0      	lsls	r0, r2, #31
 800b83a:	f57f af38 	bpl.w	800b6ae <HAL_I2C_EV_IRQHandler+0x772>
 800b83e:	e7f3      	b.n	800b828 <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800b840:	2300      	movs	r3, #0
 800b842:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b846:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800b848:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800b84a:	f7ff fa41 	bl	800acd0 <HAL_I2C_MemRxCpltCallback>
 800b84e:	f7ff bba5 	b.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b852:	9205      	str	r2, [sp, #20]
 800b854:	695a      	ldr	r2, [r3, #20]
 800b856:	9205      	str	r2, [sp, #20]
 800b858:	699a      	ldr	r2, [r3, #24]
 800b85a:	9205      	str	r2, [sp, #20]
 800b85c:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b85e:	681a      	ldr	r2, [r3, #0]
 800b860:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b864:	601a      	str	r2, [r3, #0]
 800b866:	e5f1      	b.n	800b44c <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b868:	681a      	ldr	r2, [r3, #0]
 800b86a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b86e:	601a      	str	r2, [r3, #0]
 800b870:	e6b2      	b.n	800b5d8 <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b872:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b874:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b876:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800b87a:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800b87c:	6859      	ldr	r1, [r3, #4]
 800b87e:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800b882:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b884:	691b      	ldr	r3, [r3, #16]
 800b886:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800b888:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b88a:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800b88c:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800b88e:	b29b      	uxth	r3, r3
 800b890:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800b892:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800b896:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b898:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800b89c:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b89e:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800b8a0:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800b8a2:	f47f aed9 	bne.w	800b658 <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800b8a6:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b8aa:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800b8ac:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800b8ae:	f7ff fa0f 	bl	800acd0 <HAL_I2C_MemRxCpltCallback>
 800b8b2:	f7ff bb73 	b.w	800af9c <HAL_I2C_EV_IRQHandler+0x60>
 800b8b6:	bf00      	nop
 800b8b8:	20000078 	.word	0x20000078
 800b8bc:	01000101 	.word	0x01000101

0800b8c0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b8c0:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b8c4:	2a20      	cmp	r2, #32
{
 800b8c6:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b8c8:	fa5f fc82 	uxtb.w	ip, r2
 800b8cc:	d001      	beq.n	800b8d2 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b8ce:	2002      	movs	r0, #2
  }
}
 800b8d0:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800b8d2:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b8d4:	2024      	movs	r0, #36	; 0x24
 800b8d6:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b8da:	6810      	ldr	r0, [r2, #0]
 800b8dc:	f020 0001 	bic.w	r0, r0, #1
 800b8e0:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800b8e2:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b8e4:	f020 0010 	bic.w	r0, r0, #16
 800b8e8:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800b8ea:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800b8ec:	4301      	orrs	r1, r0
 800b8ee:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b8f0:	6811      	ldr	r1, [r2, #0]
 800b8f2:	f041 0101 	orr.w	r1, r1, #1
 800b8f6:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800b8f8:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800b8fa:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b8fe:	4770      	bx	lr

0800b900 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800b900:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800b904:	2a20      	cmp	r2, #32
 800b906:	d001      	beq.n	800b90c <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800b908:	2002      	movs	r0, #2
  }
}
 800b90a:	4770      	bx	lr
{
 800b90c:	b410      	push	{r4}
 800b90e:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800b912:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800b914:	2224      	movs	r2, #36	; 0x24
 800b916:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800b91a:	6822      	ldr	r2, [r4, #0]
 800b91c:	f022 0201 	bic.w	r2, r2, #1
 800b920:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800b922:	4603      	mov	r3, r0
 800b924:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800b926:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800b92a:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800b92c:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800b92e:	b289      	uxth	r1, r1
 800b930:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800b932:	6822      	ldr	r2, [r4, #0]
 800b934:	f042 0201 	orr.w	r2, r2, #1
 800b938:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b93a:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800b93e:	2000      	movs	r0, #0
}
 800b940:	f85d 4b04 	ldr.w	r4, [sp], #4
 800b944:	4770      	bx	lr
 800b946:	bf00      	nop

0800b948 <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800b948:	2800      	cmp	r0, #0
 800b94a:	d069      	beq.n	800ba20 <HAL_LTDC_Init+0xd8>
{
 800b94c:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b94e:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b952:	4604      	mov	r4, r0
 800b954:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b958:	2b00      	cmp	r3, #0
 800b95a:	d05c      	beq.n	800ba16 <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b95c:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b95e:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b960:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b964:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b968:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b96a:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b96c:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b970:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800b974:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b976:	6999      	ldr	r1, [r3, #24]
 800b978:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b97a:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b97c:	430a      	orrs	r2, r1
 800b97e:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b980:	689a      	ldr	r2, [r3, #8]
 800b982:	4928      	ldr	r1, [pc, #160]	; (800ba24 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b984:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b986:	400a      	ands	r2, r1
 800b988:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b98a:	689a      	ldr	r2, [r3, #8]
 800b98c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b990:	69a0      	ldr	r0, [r4, #24]
 800b992:	4302      	orrs	r2, r0
 800b994:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b996:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b998:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b99a:	400a      	ands	r2, r1
 800b99c:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b99e:	68da      	ldr	r2, [r3, #12]
 800b9a0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b9a4:	6a20      	ldr	r0, [r4, #32]
 800b9a6:	4302      	orrs	r2, r0
 800b9a8:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b9aa:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b9ac:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b9ae:	400a      	ands	r2, r1
 800b9b0:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b9b2:	691a      	ldr	r2, [r3, #16]
 800b9b4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b9b8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b9ba:	4302      	orrs	r2, r0
 800b9bc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b9be:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b9c0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b9c2:	400a      	ands	r2, r1
 800b9c4:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b9c6:	695a      	ldr	r2, [r3, #20]
 800b9c8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b9ca:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b9ce:	430a      	orrs	r2, r1
 800b9d0:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b9d2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b9d4:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b9d8:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b9dc:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800b9e0:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b9e2:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800b9e4:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b9e8:	432a      	orrs	r2, r5
 800b9ea:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800b9ee:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b9f2:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b9f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b9f6:	f042 0206 	orr.w	r2, r2, #6
 800b9fa:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800b9fc:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800b9fe:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ba02:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800ba04:	ea42 020c 	orr.w	r2, r2, ip
 800ba08:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ba0a:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800ba0e:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800ba12:	4608      	mov	r0, r1
}
 800ba14:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800ba16:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800ba1a:	f7f5 fe3d 	bl	8001698 <HAL_LTDC_MspInit>
 800ba1e:	e79d      	b.n	800b95c <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800ba20:	2001      	movs	r0, #1
}
 800ba22:	4770      	bx	lr
 800ba24:	f000f800 	.word	0xf000f800

0800ba28 <HAL_LTDC_ErrorCallback>:
 800ba28:	4770      	bx	lr
 800ba2a:	bf00      	nop

0800ba2c <HAL_LTDC_ReloadEventCallback>:
 800ba2c:	4770      	bx	lr
 800ba2e:	bf00      	nop

0800ba30 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ba30:	6803      	ldr	r3, [r0, #0]
{
 800ba32:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ba34:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ba36:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ba38:	076a      	lsls	r2, r5, #29
{
 800ba3a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ba3c:	d501      	bpl.n	800ba42 <HAL_LTDC_IRQHandler+0x12>
 800ba3e:	0771      	lsls	r1, r6, #29
 800ba40:	d41d      	bmi.n	800ba7e <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ba42:	07aa      	lsls	r2, r5, #30
 800ba44:	d501      	bpl.n	800ba4a <HAL_LTDC_IRQHandler+0x1a>
 800ba46:	07b3      	lsls	r3, r6, #30
 800ba48:	d42d      	bmi.n	800baa6 <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ba4a:	07e8      	lsls	r0, r5, #31
 800ba4c:	d501      	bpl.n	800ba52 <HAL_LTDC_IRQHandler+0x22>
 800ba4e:	07f1      	lsls	r1, r6, #31
 800ba50:	d440      	bmi.n	800bad4 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ba52:	072a      	lsls	r2, r5, #28
 800ba54:	d501      	bpl.n	800ba5a <HAL_LTDC_IRQHandler+0x2a>
 800ba56:	0733      	lsls	r3, r6, #28
 800ba58:	d400      	bmi.n	800ba5c <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ba5a:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ba5c:	6823      	ldr	r3, [r4, #0]
 800ba5e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ba60:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ba62:	f022 0208 	bic.w	r2, r2, #8
 800ba66:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ba68:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ba6a:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ba6c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ba6e:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ba72:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800ba76:	4620      	mov	r0, r4
 800ba78:	f7ff ffd8 	bl	800ba2c <HAL_LTDC_ReloadEventCallback>
}
 800ba7c:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800ba7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ba80:	f022 0204 	bic.w	r2, r2, #4
 800ba84:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800ba86:	2204      	movs	r2, #4
 800ba88:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800ba8a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ba8e:	f043 0301 	orr.w	r3, r3, #1
 800ba92:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800ba96:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ba98:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ba9c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800baa0:	f7ff ffc2 	bl	800ba28 <HAL_LTDC_ErrorCallback>
 800baa4:	e7cd      	b.n	800ba42 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800baa6:	6823      	ldr	r3, [r4, #0]
 800baa8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800baaa:	f022 0202 	bic.w	r2, r2, #2
 800baae:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800bab0:	2202      	movs	r2, #2
 800bab2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800bab4:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800bab8:	f043 0302 	orr.w	r3, r3, #2
 800babc:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bac0:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800bac2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800bac4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bac8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800bacc:	4620      	mov	r0, r4
 800bace:	f7ff ffab 	bl	800ba28 <HAL_LTDC_ErrorCallback>
 800bad2:	e7ba      	b.n	800ba4a <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bad4:	6823      	ldr	r3, [r4, #0]
 800bad6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800bad8:	f022 0201 	bic.w	r2, r2, #1
 800badc:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800bade:	2201      	movs	r2, #1
 800bae0:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800bae2:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800bae4:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800bae8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800baec:	4620      	mov	r0, r4
 800baee:	f7f6 fdd1 	bl	8002694 <HAL_LTDC_LineEventCallback>
 800baf2:	e7ae      	b.n	800ba52 <HAL_LTDC_IRQHandler+0x22>

0800baf4 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800baf4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800baf8:	2b01      	cmp	r3, #1
 800bafa:	f000 80c2 	beq.w	800bc82 <HAL_LTDC_ConfigLayer+0x18e>
{
 800bafe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bb02:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bb06:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bb0a:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bb0e:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb10:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bb12:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb16:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800bb1a:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bb1e:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800bb22:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb26:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800bb2a:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb2c:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bb30:	460c      	mov	r4, r1
 800bb32:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb34:	9301      	str	r3, [sp, #4]
 800bb36:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bb38:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bb3a:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800bb3e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bb42:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bb44:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800bb46:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bb4a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bb4c:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800bb50:	6823      	ldr	r3, [r4, #0]
 800bb52:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800bb56:	9b01      	ldr	r3, [sp, #4]
 800bb58:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bb5c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bb60:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bb62:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800bb64:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bb68:	1c51      	adds	r1, r2, #1
 800bb6a:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800bb6e:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800bb70:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800bb72:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800bb76:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bb7a:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800bb7e:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800bb82:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800bb86:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bb8a:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bb8e:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800bb90:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800bb92:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800bb96:	3301      	adds	r3, #1
 800bb98:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800bb9c:	4403      	add	r3, r0
 800bb9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bba2:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bba6:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bbaa:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800bbac:	f023 0307 	bic.w	r3, r3, #7
 800bbb0:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bbb4:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800bbb8:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bbbc:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800bbc0:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800bbc4:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800bbc8:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800bbcc:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800bbd0:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800bbd4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800bbd8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800bbdc:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800bbe0:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800bbe4:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800bbe8:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800bbec:	696b      	ldr	r3, [r5, #20]
 800bbee:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800bbf2:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800bbf6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800bbfa:	f023 0307 	bic.w	r3, r3, #7
 800bbfe:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800bc02:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800bc06:	4303      	orrs	r3, r0
 800bc08:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bc0c:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bc10:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800bc12:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800bc16:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bc1a:	bb69      	cbnz	r1, 800bc78 <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800bc1c:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bc1e:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bc20:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800bc22:	fb03 f707 	mul.w	r7, r3, r7
 800bc26:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bc28:	fb02 f303 	mul.w	r3, r2, r3
 800bc2c:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bc30:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bc34:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800bc36:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800bc3a:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800bc3e:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800bc42:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800bc46:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800bc4a:	f023 0307 	bic.w	r3, r3, #7
 800bc4e:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800bc52:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bc56:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bc5a:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800bc5c:	4313      	orrs	r3, r2
 800bc5e:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800bc62:	2300      	movs	r3, #0
  return HAL_OK;
 800bc64:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800bc66:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800bc6a:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bc6e:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800bc72:	b003      	add	sp, #12
 800bc74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800bc78:	3901      	subs	r1, #1
 800bc7a:	2906      	cmp	r1, #6
 800bc7c:	d903      	bls.n	800bc86 <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800bc7e:	2301      	movs	r3, #1
 800bc80:	e7cd      	b.n	800bc1e <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800bc82:	2002      	movs	r0, #2
}
 800bc84:	4770      	bx	lr
 800bc86:	4b02      	ldr	r3, [pc, #8]	; (800bc90 <HAL_LTDC_ConfigLayer+0x19c>)
 800bc88:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800bc8c:	e7c7      	b.n	800bc1e <HAL_LTDC_ConfigLayer+0x12a>
 800bc8e:	bf00      	nop
 800bc90:	0802f018 	.word	0x0802f018

0800bc94 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800bc94:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800bc98:	2b01      	cmp	r3, #1
 800bc9a:	d019      	beq.n	800bcd0 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bc9c:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bc9e:	2302      	movs	r3, #2
{
 800bca0:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800bca2:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bca6:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bca8:	4c0a      	ldr	r4, [pc, #40]	; (800bcd4 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800bcaa:	f023 0301 	bic.w	r3, r3, #1
 800bcae:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800bcb0:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bcb2:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800bcb4:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bcb6:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800bcba:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800bcbe:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800bcc0:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800bcc4:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800bcc8:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800bccc:	4618      	mov	r0, r3
}
 800bcce:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800bcd0:	2002      	movs	r0, #2
}
 800bcd2:	4770      	bx	lr
 800bcd4:	40016800 	.word	0x40016800

0800bcd8 <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800bcd8:	2800      	cmp	r0, #0
 800bcda:	f000 81a2 	beq.w	800c022 <HAL_RCC_OscConfig+0x34a>
{
 800bcde:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bce2:	6803      	ldr	r3, [r0, #0]
 800bce4:	07dd      	lsls	r5, r3, #31
{
 800bce6:	b082      	sub	sp, #8
 800bce8:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800bcea:	d52f      	bpl.n	800bd4c <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bcec:	499e      	ldr	r1, [pc, #632]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bcee:	688a      	ldr	r2, [r1, #8]
 800bcf0:	f002 020c 	and.w	r2, r2, #12
 800bcf4:	2a04      	cmp	r2, #4
 800bcf6:	f000 80ed 	beq.w	800bed4 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800bcfa:	688a      	ldr	r2, [r1, #8]
 800bcfc:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800bd00:	2a08      	cmp	r2, #8
 800bd02:	f000 80e3 	beq.w	800becc <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bd06:	6863      	ldr	r3, [r4, #4]
 800bd08:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800bd0c:	f000 80ec 	beq.w	800bee8 <HAL_RCC_OscConfig+0x210>
 800bd10:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800bd14:	f000 8175 	beq.w	800c002 <HAL_RCC_OscConfig+0x32a>
 800bd18:	4d93      	ldr	r5, [pc, #588]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bd1a:	682a      	ldr	r2, [r5, #0]
 800bd1c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800bd20:	602a      	str	r2, [r5, #0]
 800bd22:	682a      	ldr	r2, [r5, #0]
 800bd24:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800bd28:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800bd2a:	2b00      	cmp	r3, #0
 800bd2c:	f040 80e1 	bne.w	800bef2 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800bd30:	f7fd fdb8 	bl	80098a4 <HAL_GetTick>
 800bd34:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bd36:	e005      	b.n	800bd44 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800bd38:	f7fd fdb4 	bl	80098a4 <HAL_GetTick>
 800bd3c:	1b80      	subs	r0, r0, r6
 800bd3e:	2864      	cmp	r0, #100	; 0x64
 800bd40:	f200 8101 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800bd44:	682b      	ldr	r3, [r5, #0]
 800bd46:	039b      	lsls	r3, r3, #14
 800bd48:	d4f6      	bmi.n	800bd38 <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800bd4a:	6823      	ldr	r3, [r4, #0]
 800bd4c:	079f      	lsls	r7, r3, #30
 800bd4e:	d528      	bpl.n	800bda2 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bd50:	4a85      	ldr	r2, [pc, #532]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bd52:	6891      	ldr	r1, [r2, #8]
 800bd54:	f011 0f0c 	tst.w	r1, #12
 800bd58:	f000 8090 	beq.w	800be7c <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800bd5c:	6891      	ldr	r1, [r2, #8]
 800bd5e:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800bd62:	2908      	cmp	r1, #8
 800bd64:	f000 8086 	beq.w	800be74 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800bd68:	68e3      	ldr	r3, [r4, #12]
 800bd6a:	2b00      	cmp	r3, #0
 800bd6c:	f000 810e 	beq.w	800bf8c <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800bd70:	4b7e      	ldr	r3, [pc, #504]	; (800bf6c <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bd72:	4e7d      	ldr	r6, [pc, #500]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800bd74:	2201      	movs	r2, #1
 800bd76:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800bd78:	f7fd fd94 	bl	80098a4 <HAL_GetTick>
 800bd7c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bd7e:	e005      	b.n	800bd8c <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bd80:	f7fd fd90 	bl	80098a4 <HAL_GetTick>
 800bd84:	1b40      	subs	r0, r0, r5
 800bd86:	2802      	cmp	r0, #2
 800bd88:	f200 80dd 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bd8c:	6833      	ldr	r3, [r6, #0]
 800bd8e:	0798      	lsls	r0, r3, #30
 800bd90:	d5f6      	bpl.n	800bd80 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bd92:	6833      	ldr	r3, [r6, #0]
 800bd94:	6922      	ldr	r2, [r4, #16]
 800bd96:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800bd9a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800bd9e:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bda0:	6823      	ldr	r3, [r4, #0]
 800bda2:	071a      	lsls	r2, r3, #28
 800bda4:	d451      	bmi.n	800be4a <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800bda6:	0758      	lsls	r0, r3, #29
 800bda8:	d52f      	bpl.n	800be0a <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800bdaa:	4a6f      	ldr	r2, [pc, #444]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bdac:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bdae:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800bdb2:	d07f      	beq.n	800beb4 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800bdb4:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bdb6:	4e6e      	ldr	r6, [pc, #440]	; (800bf70 <HAL_RCC_OscConfig+0x298>)
 800bdb8:	6833      	ldr	r3, [r6, #0]
 800bdba:	05d9      	lsls	r1, r3, #23
 800bdbc:	f140 80b3 	bpl.w	800bf26 <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bdc0:	68a3      	ldr	r3, [r4, #8]
 800bdc2:	2b01      	cmp	r3, #1
 800bdc4:	f000 80c3 	beq.w	800bf4e <HAL_RCC_OscConfig+0x276>
 800bdc8:	2b05      	cmp	r3, #5
 800bdca:	f000 812c 	beq.w	800c026 <HAL_RCC_OscConfig+0x34e>
 800bdce:	4e66      	ldr	r6, [pc, #408]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bdd0:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bdd2:	f022 0201 	bic.w	r2, r2, #1
 800bdd6:	6732      	str	r2, [r6, #112]	; 0x70
 800bdd8:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800bdda:	f022 0204 	bic.w	r2, r2, #4
 800bdde:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800bde0:	2b00      	cmp	r3, #0
 800bde2:	f040 80b9 	bne.w	800bf58 <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800bde6:	f7fd fd5d 	bl	80098a4 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bdea:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800bdee:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bdf0:	e005      	b.n	800bdfe <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bdf2:	f7fd fd57 	bl	80098a4 <HAL_GetTick>
 800bdf6:	1bc0      	subs	r0, r0, r7
 800bdf8:	4540      	cmp	r0, r8
 800bdfa:	f200 80a4 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800bdfe:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800be00:	0798      	lsls	r0, r3, #30
 800be02:	d4f6      	bmi.n	800bdf2 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800be04:	2d00      	cmp	r5, #0
 800be06:	f040 8106 	bne.w	800c016 <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800be0a:	69a0      	ldr	r0, [r4, #24]
 800be0c:	b1c8      	cbz	r0, 800be42 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800be0e:	4d56      	ldr	r5, [pc, #344]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800be10:	68ab      	ldr	r3, [r5, #8]
 800be12:	f003 030c 	and.w	r3, r3, #12
 800be16:	2b08      	cmp	r3, #8
 800be18:	f000 80c9 	beq.w	800bfae <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800be1c:	4b53      	ldr	r3, [pc, #332]	; (800bf6c <HAL_RCC_OscConfig+0x294>)
 800be1e:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800be20:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800be22:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800be24:	f000 8109 	beq.w	800c03a <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800be28:	f7fd fd3c 	bl	80098a4 <HAL_GetTick>
 800be2c:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800be2e:	e005      	b.n	800be3c <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800be30:	f7fd fd38 	bl	80098a4 <HAL_GetTick>
 800be34:	1b00      	subs	r0, r0, r4
 800be36:	2802      	cmp	r0, #2
 800be38:	f200 8085 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800be3c:	682b      	ldr	r3, [r5, #0]
 800be3e:	019b      	lsls	r3, r3, #6
 800be40:	d4f6      	bmi.n	800be30 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800be42:	2000      	movs	r0, #0
}
 800be44:	b002      	add	sp, #8
 800be46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800be4a:	6963      	ldr	r3, [r4, #20]
 800be4c:	b30b      	cbz	r3, 800be92 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800be4e:	4b47      	ldr	r3, [pc, #284]	; (800bf6c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800be50:	4e45      	ldr	r6, [pc, #276]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800be52:	2201      	movs	r2, #1
 800be54:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800be58:	f7fd fd24 	bl	80098a4 <HAL_GetTick>
 800be5c:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800be5e:	e004      	b.n	800be6a <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800be60:	f7fd fd20 	bl	80098a4 <HAL_GetTick>
 800be64:	1b40      	subs	r0, r0, r5
 800be66:	2802      	cmp	r0, #2
 800be68:	d86d      	bhi.n	800bf46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800be6a:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800be6c:	079b      	lsls	r3, r3, #30
 800be6e:	d5f7      	bpl.n	800be60 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800be70:	6823      	ldr	r3, [r4, #0]
 800be72:	e798      	b.n	800bda6 <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800be74:	6852      	ldr	r2, [r2, #4]
 800be76:	0256      	lsls	r6, r2, #9
 800be78:	f53f af76 	bmi.w	800bd68 <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800be7c:	4a3a      	ldr	r2, [pc, #232]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800be7e:	6812      	ldr	r2, [r2, #0]
 800be80:	0795      	lsls	r5, r2, #30
 800be82:	d544      	bpl.n	800bf0e <HAL_RCC_OscConfig+0x236>
 800be84:	68e2      	ldr	r2, [r4, #12]
 800be86:	2a01      	cmp	r2, #1
 800be88:	d041      	beq.n	800bf0e <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800be8a:	2001      	movs	r0, #1
}
 800be8c:	b002      	add	sp, #8
 800be8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800be92:	4a36      	ldr	r2, [pc, #216]	; (800bf6c <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800be94:	4e34      	ldr	r6, [pc, #208]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800be96:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800be9a:	f7fd fd03 	bl	80098a4 <HAL_GetTick>
 800be9e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800bea0:	e004      	b.n	800beac <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800bea2:	f7fd fcff 	bl	80098a4 <HAL_GetTick>
 800bea6:	1b40      	subs	r0, r0, r5
 800bea8:	2802      	cmp	r0, #2
 800beaa:	d84c      	bhi.n	800bf46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800beac:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800beae:	079f      	lsls	r7, r3, #30
 800beb0:	d4f7      	bmi.n	800bea2 <HAL_RCC_OscConfig+0x1ca>
 800beb2:	e7dd      	b.n	800be70 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800beb4:	9301      	str	r3, [sp, #4]
 800beb6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800beb8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800bebc:	6413      	str	r3, [r2, #64]	; 0x40
 800bebe:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800bec0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bec4:	9301      	str	r3, [sp, #4]
 800bec6:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800bec8:	2501      	movs	r5, #1
 800beca:	e774      	b.n	800bdb6 <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800becc:	684a      	ldr	r2, [r1, #4]
 800bece:	0250      	lsls	r0, r2, #9
 800bed0:	f57f af19 	bpl.w	800bd06 <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800bed4:	4a24      	ldr	r2, [pc, #144]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bed6:	6812      	ldr	r2, [r2, #0]
 800bed8:	0391      	lsls	r1, r2, #14
 800beda:	f57f af37 	bpl.w	800bd4c <HAL_RCC_OscConfig+0x74>
 800bede:	6862      	ldr	r2, [r4, #4]
 800bee0:	2a00      	cmp	r2, #0
 800bee2:	f47f af33 	bne.w	800bd4c <HAL_RCC_OscConfig+0x74>
 800bee6:	e7d0      	b.n	800be8a <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800bee8:	4a1f      	ldr	r2, [pc, #124]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800beea:	6813      	ldr	r3, [r2, #0]
 800beec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800bef0:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bef2:	f7fd fcd7 	bl	80098a4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bef6:	4e1c      	ldr	r6, [pc, #112]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800bef8:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800befa:	e004      	b.n	800bf06 <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800befc:	f7fd fcd2 	bl	80098a4 <HAL_GetTick>
 800bf00:	1b40      	subs	r0, r0, r5
 800bf02:	2864      	cmp	r0, #100	; 0x64
 800bf04:	d81f      	bhi.n	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bf06:	6833      	ldr	r3, [r6, #0]
 800bf08:	039a      	lsls	r2, r3, #14
 800bf0a:	d5f7      	bpl.n	800befc <HAL_RCC_OscConfig+0x224>
 800bf0c:	e71d      	b.n	800bd4a <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800bf0e:	4916      	ldr	r1, [pc, #88]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bf10:	6920      	ldr	r0, [r4, #16]
 800bf12:	680a      	ldr	r2, [r1, #0]
 800bf14:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800bf18:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800bf1c:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bf1e:	071a      	lsls	r2, r3, #28
 800bf20:	f57f af41 	bpl.w	800bda6 <HAL_RCC_OscConfig+0xce>
 800bf24:	e791      	b.n	800be4a <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800bf26:	6833      	ldr	r3, [r6, #0]
 800bf28:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800bf2c:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800bf2e:	f7fd fcb9 	bl	80098a4 <HAL_GetTick>
 800bf32:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800bf34:	6833      	ldr	r3, [r6, #0]
 800bf36:	05da      	lsls	r2, r3, #23
 800bf38:	f53f af42 	bmi.w	800bdc0 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800bf3c:	f7fd fcb2 	bl	80098a4 <HAL_GetTick>
 800bf40:	1bc0      	subs	r0, r0, r7
 800bf42:	2802      	cmp	r0, #2
 800bf44:	d9f6      	bls.n	800bf34 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800bf46:	2003      	movs	r0, #3
}
 800bf48:	b002      	add	sp, #8
 800bf4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800bf4e:	4a06      	ldr	r2, [pc, #24]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
 800bf50:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800bf52:	f043 0301 	orr.w	r3, r3, #1
 800bf56:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800bf58:	f7fd fca4 	bl	80098a4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bf5c:	4f02      	ldr	r7, [pc, #8]	; (800bf68 <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800bf5e:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bf60:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bf64:	e00b      	b.n	800bf7e <HAL_RCC_OscConfig+0x2a6>
 800bf66:	bf00      	nop
 800bf68:	40023800 	.word	0x40023800
 800bf6c:	42470000 	.word	0x42470000
 800bf70:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800bf74:	f7fd fc96 	bl	80098a4 <HAL_GetTick>
 800bf78:	1b80      	subs	r0, r0, r6
 800bf7a:	4540      	cmp	r0, r8
 800bf7c:	d8e3      	bhi.n	800bf46 <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800bf7e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800bf80:	079b      	lsls	r3, r3, #30
 800bf82:	d5f7      	bpl.n	800bf74 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800bf84:	2d00      	cmp	r5, #0
 800bf86:	f43f af40 	beq.w	800be0a <HAL_RCC_OscConfig+0x132>
 800bf8a:	e044      	b.n	800c016 <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800bf8c:	4a42      	ldr	r2, [pc, #264]	; (800c098 <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bf8e:	4e43      	ldr	r6, [pc, #268]	; (800c09c <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800bf90:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800bf92:	f7fd fc87 	bl	80098a4 <HAL_GetTick>
 800bf96:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bf98:	e004      	b.n	800bfa4 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800bf9a:	f7fd fc83 	bl	80098a4 <HAL_GetTick>
 800bf9e:	1b40      	subs	r0, r0, r5
 800bfa0:	2802      	cmp	r0, #2
 800bfa2:	d8d0      	bhi.n	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800bfa4:	6833      	ldr	r3, [r6, #0]
 800bfa6:	0799      	lsls	r1, r3, #30
 800bfa8:	d4f7      	bmi.n	800bf9a <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800bfaa:	6823      	ldr	r3, [r4, #0]
 800bfac:	e6f9      	b.n	800bda2 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800bfae:	2801      	cmp	r0, #1
 800bfb0:	f43f af48 	beq.w	800be44 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800bfb4:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bfb6:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bfb8:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800bfbc:	4291      	cmp	r1, r2
 800bfbe:	f47f af64 	bne.w	800be8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bfc2:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bfc4:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800bfc8:	4291      	cmp	r1, r2
 800bfca:	f47f af5e 	bne.w	800be8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bfce:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800bfd0:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800bfd4:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800bfd6:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800bfda:	f47f af56 	bne.w	800be8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bfde:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800bfe0:	0852      	lsrs	r2, r2, #1
 800bfe2:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800bfe6:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800bfe8:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800bfec:	f47f af4d 	bne.w	800be8a <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800bff0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bff2:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800bff6:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800bffa:	bf14      	ite	ne
 800bffc:	2001      	movne	r0, #1
 800bffe:	2000      	moveq	r0, #0
 800c000:	e720      	b.n	800be44 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c002:	4b26      	ldr	r3, [pc, #152]	; (800c09c <HAL_RCC_OscConfig+0x3c4>)
 800c004:	681a      	ldr	r2, [r3, #0]
 800c006:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800c00a:	601a      	str	r2, [r3, #0]
 800c00c:	681a      	ldr	r2, [r3, #0]
 800c00e:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c012:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c014:	e76d      	b.n	800bef2 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c016:	4a21      	ldr	r2, [pc, #132]	; (800c09c <HAL_RCC_OscConfig+0x3c4>)
 800c018:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c01a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c01e:	6413      	str	r3, [r2, #64]	; 0x40
 800c020:	e6f3      	b.n	800be0a <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800c022:	2001      	movs	r0, #1
}
 800c024:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c026:	4b1d      	ldr	r3, [pc, #116]	; (800c09c <HAL_RCC_OscConfig+0x3c4>)
 800c028:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c02a:	f042 0204 	orr.w	r2, r2, #4
 800c02e:	671a      	str	r2, [r3, #112]	; 0x70
 800c030:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800c032:	f042 0201 	orr.w	r2, r2, #1
 800c036:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c038:	e78e      	b.n	800bf58 <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800c03a:	f7fd fc33 	bl	80098a4 <HAL_GetTick>
 800c03e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c040:	e005      	b.n	800c04e <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c042:	f7fd fc2f 	bl	80098a4 <HAL_GetTick>
 800c046:	1b80      	subs	r0, r0, r6
 800c048:	2802      	cmp	r0, #2
 800c04a:	f63f af7c 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c04e:	682b      	ldr	r3, [r5, #0]
 800c050:	0199      	lsls	r1, r3, #6
 800c052:	d4f6      	bmi.n	800c042 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c054:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800c058:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c05a:	430b      	orrs	r3, r1
 800c05c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c060:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800c064:	0852      	lsrs	r2, r2, #1
 800c066:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800c06a:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800c06c:	490a      	ldr	r1, [pc, #40]	; (800c098 <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c06e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800c072:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c074:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c076:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c078:	f7fd fc14 	bl	80098a4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c07c:	4d07      	ldr	r5, [pc, #28]	; (800c09c <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800c07e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c080:	e005      	b.n	800c08e <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c082:	f7fd fc0f 	bl	80098a4 <HAL_GetTick>
 800c086:	1b00      	subs	r0, r0, r4
 800c088:	2802      	cmp	r0, #2
 800c08a:	f63f af5c 	bhi.w	800bf46 <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c08e:	682b      	ldr	r3, [r5, #0]
 800c090:	019a      	lsls	r2, r3, #6
 800c092:	d5f6      	bpl.n	800c082 <HAL_RCC_OscConfig+0x3aa>
 800c094:	e6d5      	b.n	800be42 <HAL_RCC_OscConfig+0x16a>
 800c096:	bf00      	nop
 800c098:	42470000 	.word	0x42470000
 800c09c:	40023800 	.word	0x40023800

0800c0a0 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c0a0:	4916      	ldr	r1, [pc, #88]	; (800c0fc <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800c0a2:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c0a4:	688b      	ldr	r3, [r1, #8]
 800c0a6:	f003 030c 	and.w	r3, r3, #12
 800c0aa:	2b04      	cmp	r3, #4
 800c0ac:	d01b      	beq.n	800c0e6 <HAL_RCC_GetSysClockFreq+0x46>
 800c0ae:	2b08      	cmp	r3, #8
 800c0b0:	d117      	bne.n	800c0e2 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c0b2:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c0b4:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c0b6:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c0b8:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c0bc:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c0c0:	d113      	bne.n	800c0ea <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c0c2:	480f      	ldr	r0, [pc, #60]	; (800c100 <HAL_RCC_GetSysClockFreq+0x60>)
 800c0c4:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c0c8:	fba1 0100 	umull	r0, r1, r1, r0
 800c0cc:	f7f4 f940 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c0d0:	4b0a      	ldr	r3, [pc, #40]	; (800c0fc <HAL_RCC_GetSysClockFreq+0x5c>)
 800c0d2:	685b      	ldr	r3, [r3, #4]
 800c0d4:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c0d8:	3301      	adds	r3, #1
 800c0da:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c0dc:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c0e0:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800c0e2:	4807      	ldr	r0, [pc, #28]	; (800c100 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800c0e4:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c0e6:	4807      	ldr	r0, [pc, #28]	; (800c104 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800c0e8:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c0ea:	4806      	ldr	r0, [pc, #24]	; (800c104 <HAL_RCC_GetSysClockFreq+0x64>)
 800c0ec:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c0f0:	2300      	movs	r3, #0
 800c0f2:	fba1 0100 	umull	r0, r1, r1, r0
 800c0f6:	f7f4 f92b 	bl	8000350 <__aeabi_uldivmod>
 800c0fa:	e7e9      	b.n	800c0d0 <HAL_RCC_GetSysClockFreq+0x30>
 800c0fc:	40023800 	.word	0x40023800
 800c100:	00f42400 	.word	0x00f42400
 800c104:	007a1200 	.word	0x007a1200

0800c108 <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800c108:	2800      	cmp	r0, #0
 800c10a:	f000 8087 	beq.w	800c21c <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c10e:	4a48      	ldr	r2, [pc, #288]	; (800c230 <HAL_RCC_ClockConfig+0x128>)
 800c110:	6813      	ldr	r3, [r2, #0]
 800c112:	f003 030f 	and.w	r3, r3, #15
 800c116:	428b      	cmp	r3, r1
{
 800c118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c11c:	460d      	mov	r5, r1
 800c11e:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c120:	d209      	bcs.n	800c136 <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c122:	b2cb      	uxtb	r3, r1
 800c124:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c126:	6813      	ldr	r3, [r2, #0]
 800c128:	f003 030f 	and.w	r3, r3, #15
 800c12c:	428b      	cmp	r3, r1
 800c12e:	d002      	beq.n	800c136 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800c130:	2001      	movs	r0, #1
}
 800c132:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c136:	6823      	ldr	r3, [r4, #0]
 800c138:	0798      	lsls	r0, r3, #30
 800c13a:	d514      	bpl.n	800c166 <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c13c:	0759      	lsls	r1, r3, #29
 800c13e:	d504      	bpl.n	800c14a <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c140:	493c      	ldr	r1, [pc, #240]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c142:	688a      	ldr	r2, [r1, #8]
 800c144:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800c148:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c14a:	071a      	lsls	r2, r3, #28
 800c14c:	d504      	bpl.n	800c158 <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c14e:	4939      	ldr	r1, [pc, #228]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c150:	688a      	ldr	r2, [r1, #8]
 800c152:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800c156:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c158:	4936      	ldr	r1, [pc, #216]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c15a:	68a0      	ldr	r0, [r4, #8]
 800c15c:	688a      	ldr	r2, [r1, #8]
 800c15e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800c162:	4302      	orrs	r2, r0
 800c164:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c166:	07df      	lsls	r7, r3, #31
 800c168:	d521      	bpl.n	800c1ae <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c16a:	6862      	ldr	r2, [r4, #4]
 800c16c:	2a01      	cmp	r2, #1
 800c16e:	d057      	beq.n	800c220 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c170:	1e93      	subs	r3, r2, #2
 800c172:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c174:	4b2f      	ldr	r3, [pc, #188]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c176:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c178:	d94d      	bls.n	800c216 <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c17a:	0799      	lsls	r1, r3, #30
 800c17c:	d5d8      	bpl.n	800c130 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c17e:	4e2d      	ldr	r6, [pc, #180]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c180:	68b3      	ldr	r3, [r6, #8]
 800c182:	f023 0303 	bic.w	r3, r3, #3
 800c186:	4313      	orrs	r3, r2
 800c188:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c18a:	f7fd fb8b 	bl	80098a4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c18e:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c192:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c194:	e004      	b.n	800c1a0 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c196:	f7fd fb85 	bl	80098a4 <HAL_GetTick>
 800c19a:	1bc0      	subs	r0, r0, r7
 800c19c:	4540      	cmp	r0, r8
 800c19e:	d844      	bhi.n	800c22a <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c1a0:	68b3      	ldr	r3, [r6, #8]
 800c1a2:	6862      	ldr	r2, [r4, #4]
 800c1a4:	f003 030c 	and.w	r3, r3, #12
 800c1a8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c1ac:	d1f3      	bne.n	800c196 <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c1ae:	4a20      	ldr	r2, [pc, #128]	; (800c230 <HAL_RCC_ClockConfig+0x128>)
 800c1b0:	6813      	ldr	r3, [r2, #0]
 800c1b2:	f003 030f 	and.w	r3, r3, #15
 800c1b6:	42ab      	cmp	r3, r5
 800c1b8:	d906      	bls.n	800c1c8 <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1ba:	b2eb      	uxtb	r3, r5
 800c1bc:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1be:	6813      	ldr	r3, [r2, #0]
 800c1c0:	f003 030f 	and.w	r3, r3, #15
 800c1c4:	42ab      	cmp	r3, r5
 800c1c6:	d1b3      	bne.n	800c130 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c1c8:	6823      	ldr	r3, [r4, #0]
 800c1ca:	075a      	lsls	r2, r3, #29
 800c1cc:	d506      	bpl.n	800c1dc <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c1ce:	4919      	ldr	r1, [pc, #100]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c1d0:	68e0      	ldr	r0, [r4, #12]
 800c1d2:	688a      	ldr	r2, [r1, #8]
 800c1d4:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800c1d8:	4302      	orrs	r2, r0
 800c1da:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c1dc:	071b      	lsls	r3, r3, #28
 800c1de:	d507      	bpl.n	800c1f0 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c1e0:	4a14      	ldr	r2, [pc, #80]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c1e2:	6921      	ldr	r1, [r4, #16]
 800c1e4:	6893      	ldr	r3, [r2, #8]
 800c1e6:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c1ea:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c1ee:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c1f0:	f7ff ff56 	bl	800c0a0 <HAL_RCC_GetSysClockFreq>
 800c1f4:	4a0f      	ldr	r2, [pc, #60]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c1f6:	4c10      	ldr	r4, [pc, #64]	; (800c238 <HAL_RCC_ClockConfig+0x130>)
 800c1f8:	6892      	ldr	r2, [r2, #8]
 800c1fa:	4910      	ldr	r1, [pc, #64]	; (800c23c <HAL_RCC_ClockConfig+0x134>)
 800c1fc:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800c200:	4603      	mov	r3, r0
 800c202:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800c204:	480e      	ldr	r0, [pc, #56]	; (800c240 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c206:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800c208:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c20a:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800c20c:	f7f5 fc22 	bl	8001a54 <HAL_InitTick>
  return HAL_OK;
 800c210:	2000      	movs	r0, #0
}
 800c212:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c216:	0198      	lsls	r0, r3, #6
 800c218:	d4b1      	bmi.n	800c17e <HAL_RCC_ClockConfig+0x76>
 800c21a:	e789      	b.n	800c130 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800c21c:	2001      	movs	r0, #1
}
 800c21e:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c220:	4b04      	ldr	r3, [pc, #16]	; (800c234 <HAL_RCC_ClockConfig+0x12c>)
 800c222:	681b      	ldr	r3, [r3, #0]
 800c224:	039e      	lsls	r6, r3, #14
 800c226:	d4aa      	bmi.n	800c17e <HAL_RCC_ClockConfig+0x76>
 800c228:	e782      	b.n	800c130 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800c22a:	2003      	movs	r0, #3
 800c22c:	e781      	b.n	800c132 <HAL_RCC_ClockConfig+0x2a>
 800c22e:	bf00      	nop
 800c230:	40023c00 	.word	0x40023c00
 800c234:	40023800 	.word	0x40023800
 800c238:	0802f000 	.word	0x0802f000
 800c23c:	20000078 	.word	0x20000078
 800c240:	20000080 	.word	0x20000080

0800c244 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c244:	4b04      	ldr	r3, [pc, #16]	; (800c258 <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800c246:	4905      	ldr	r1, [pc, #20]	; (800c25c <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c248:	689b      	ldr	r3, [r3, #8]
 800c24a:	4a05      	ldr	r2, [pc, #20]	; (800c260 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c24c:	6808      	ldr	r0, [r1, #0]
 800c24e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c252:	5cd3      	ldrb	r3, [r2, r3]
}
 800c254:	40d8      	lsrs	r0, r3
 800c256:	4770      	bx	lr
 800c258:	40023800 	.word	0x40023800
 800c25c:	20000078 	.word	0x20000078
 800c260:	0802f010 	.word	0x0802f010

0800c264 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c264:	4b0e      	ldr	r3, [pc, #56]	; (800c2a0 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c266:	220f      	movs	r2, #15
 800c268:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c26a:	689a      	ldr	r2, [r3, #8]
 800c26c:	f002 0203 	and.w	r2, r2, #3
 800c270:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c272:	689a      	ldr	r2, [r3, #8]
 800c274:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c278:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c27a:	689a      	ldr	r2, [r3, #8]
 800c27c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c280:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c282:	689b      	ldr	r3, [r3, #8]
 800c284:	08db      	lsrs	r3, r3, #3
{
 800c286:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c288:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c28c:	4c05      	ldr	r4, [pc, #20]	; (800c2a4 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c28e:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c290:	6823      	ldr	r3, [r4, #0]
}
 800c292:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c296:	f003 030f 	and.w	r3, r3, #15
 800c29a:	600b      	str	r3, [r1, #0]
}
 800c29c:	4770      	bx	lr
 800c29e:	bf00      	nop
 800c2a0:	40023800 	.word	0x40023800
 800c2a4:	40023c00 	.word	0x40023c00

0800c2a8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c2a8:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800c2aa:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c2ac:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800c2b0:	b083      	sub	sp, #12
 800c2b2:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c2b4:	d111      	bne.n	800c2da <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c2b6:	f013 0f0c 	tst.w	r3, #12
 800c2ba:	d16f      	bne.n	800c39c <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c2bc:	0698      	lsls	r0, r3, #26
 800c2be:	f100 80c2 	bmi.w	800c446 <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c2c2:	f013 0310 	ands.w	r3, r3, #16
 800c2c6:	f000 80bb 	beq.w	800c440 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c2ca:	4b89      	ldr	r3, [pc, #548]	; (800c4f0 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800c2cc:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c2d0:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800c2d4:	2000      	movs	r0, #0
}
 800c2d6:	b003      	add	sp, #12
 800c2d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800c2da:	4b86      	ldr	r3, [pc, #536]	; (800c4f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c2dc:	4e86      	ldr	r6, [pc, #536]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c2de:	2200      	movs	r2, #0
 800c2e0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c2e2:	f7fd fadf 	bl	80098a4 <HAL_GetTick>
 800c2e6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c2e8:	e004      	b.n	800c2f4 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c2ea:	f7fd fadb 	bl	80098a4 <HAL_GetTick>
 800c2ee:	1b43      	subs	r3, r0, r5
 800c2f0:	2b02      	cmp	r3, #2
 800c2f2:	d850      	bhi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c2f4:	6833      	ldr	r3, [r6, #0]
 800c2f6:	0118      	lsls	r0, r3, #4
 800c2f8:	d4f7      	bmi.n	800c2ea <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c2fa:	6823      	ldr	r3, [r4, #0]
 800c2fc:	07d9      	lsls	r1, r3, #31
 800c2fe:	d506      	bpl.n	800c30e <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c300:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800c304:	0712      	lsls	r2, r2, #28
 800c306:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800c30a:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c30e:	079a      	lsls	r2, r3, #30
 800c310:	d515      	bpl.n	800c33e <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c312:	4979      	ldr	r1, [pc, #484]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c314:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c316:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c31a:	6865      	ldr	r5, [r4, #4]
 800c31c:	0612      	lsls	r2, r2, #24
 800c31e:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c322:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800c326:	4302      	orrs	r2, r0
 800c328:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c32c:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800c330:	69e2      	ldr	r2, [r4, #28]
 800c332:	f020 001f 	bic.w	r0, r0, #31
 800c336:	3a01      	subs	r2, #1
 800c338:	4302      	orrs	r2, r0
 800c33a:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c33e:	065b      	lsls	r3, r3, #25
 800c340:	d509      	bpl.n	800c356 <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c342:	1d20      	adds	r0, r4, #4
 800c344:	c80b      	ldmia	r0, {r0, r1, r3}
 800c346:	061b      	lsls	r3, r3, #24
 800c348:	4a6b      	ldr	r2, [pc, #428]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c34a:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c34e:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800c352:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c356:	4b67      	ldr	r3, [pc, #412]	; (800c4f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c358:	4e67      	ldr	r6, [pc, #412]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c35a:	2201      	movs	r2, #1
 800c35c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c35e:	f7fd faa1 	bl	80098a4 <HAL_GetTick>
 800c362:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c364:	e004      	b.n	800c370 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c366:	f7fd fa9d 	bl	80098a4 <HAL_GetTick>
 800c36a:	1b40      	subs	r0, r0, r5
 800c36c:	2802      	cmp	r0, #2
 800c36e:	d812      	bhi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c370:	6833      	ldr	r3, [r6, #0]
 800c372:	011f      	lsls	r7, r3, #4
 800c374:	d5f7      	bpl.n	800c366 <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c376:	6823      	ldr	r3, [r4, #0]
 800c378:	e79d      	b.n	800c2b6 <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800c37a:	f7fd fa93 	bl	80098a4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c37e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c382:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c384:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c386:	079b      	lsls	r3, r3, #30
 800c388:	f100 80a5 	bmi.w	800c4d6 <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c38c:	f7fd fa8a 	bl	80098a4 <HAL_GetTick>
 800c390:	1b80      	subs	r0, r0, r6
 800c392:	42b8      	cmp	r0, r7
 800c394:	d9f6      	bls.n	800c384 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800c396:	2003      	movs	r0, #3
}
 800c398:	b003      	add	sp, #12
 800c39a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800c39c:	4b55      	ldr	r3, [pc, #340]	; (800c4f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c39e:	4e56      	ldr	r6, [pc, #344]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c3a0:	2200      	movs	r2, #0
 800c3a2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c3a4:	f7fd fa7e 	bl	80098a4 <HAL_GetTick>
 800c3a8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c3aa:	e004      	b.n	800c3b6 <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c3ac:	f7fd fa7a 	bl	80098a4 <HAL_GetTick>
 800c3b0:	1b43      	subs	r3, r0, r5
 800c3b2:	2b02      	cmp	r3, #2
 800c3b4:	d8ef      	bhi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c3b6:	6833      	ldr	r3, [r6, #0]
 800c3b8:	0098      	lsls	r0, r3, #2
 800c3ba:	d4f7      	bmi.n	800c3ac <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c3bc:	6822      	ldr	r2, [r4, #0]
 800c3be:	0751      	lsls	r1, r2, #29
 800c3c0:	d515      	bpl.n	800c3ee <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c3c2:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c3c4:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800c3c8:	6920      	ldr	r0, [r4, #16]
 800c3ca:	061b      	lsls	r3, r3, #24
 800c3cc:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800c3d0:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c3d4:	430b      	orrs	r3, r1
 800c3d6:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c3da:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800c3de:	6a21      	ldr	r1, [r4, #32]
 800c3e0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c3e4:	3901      	subs	r1, #1
 800c3e6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c3ea:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c3ee:	0713      	lsls	r3, r2, #28
 800c3f0:	d514      	bpl.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3f2:	4a41      	ldr	r2, [pc, #260]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c3f4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3f6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800c3fa:	6920      	ldr	r0, [r4, #16]
 800c3fc:	071b      	lsls	r3, r3, #28
 800c3fe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800c402:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c406:	430b      	orrs	r3, r1
 800c408:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c40c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c410:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c412:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c416:	430b      	orrs	r3, r1
 800c418:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800c41c:	4b35      	ldr	r3, [pc, #212]	; (800c4f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c41e:	4e36      	ldr	r6, [pc, #216]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c420:	2201      	movs	r2, #1
 800c422:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c424:	f7fd fa3e 	bl	80098a4 <HAL_GetTick>
 800c428:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c42a:	e004      	b.n	800c436 <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c42c:	f7fd fa3a 	bl	80098a4 <HAL_GetTick>
 800c430:	1b40      	subs	r0, r0, r5
 800c432:	2802      	cmp	r0, #2
 800c434:	d8af      	bhi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c436:	6833      	ldr	r3, [r6, #0]
 800c438:	009f      	lsls	r7, r3, #2
 800c43a:	d5f7      	bpl.n	800c42c <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c43c:	6823      	ldr	r3, [r4, #0]
 800c43e:	e73d      	b.n	800c2bc <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800c440:	4618      	mov	r0, r3
}
 800c442:	b003      	add	sp, #12
 800c444:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800c446:	4b2c      	ldr	r3, [pc, #176]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800c448:	4d2c      	ldr	r5, [pc, #176]	; (800c4fc <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c44a:	2200      	movs	r2, #0
 800c44c:	9201      	str	r2, [sp, #4]
 800c44e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c450:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c454:	641a      	str	r2, [r3, #64]	; 0x40
 800c456:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c458:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c45c:	9301      	str	r3, [sp, #4]
 800c45e:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c460:	682b      	ldr	r3, [r5, #0]
 800c462:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c466:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c468:	f7fd fa1c 	bl	80098a4 <HAL_GetTick>
 800c46c:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c46e:	e004      	b.n	800c47a <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c470:	f7fd fa18 	bl	80098a4 <HAL_GetTick>
 800c474:	1b83      	subs	r3, r0, r6
 800c476:	2b02      	cmp	r3, #2
 800c478:	d88d      	bhi.n	800c396 <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c47a:	682b      	ldr	r3, [r5, #0]
 800c47c:	05d9      	lsls	r1, r3, #23
 800c47e:	d5f7      	bpl.n	800c470 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c480:	4d1d      	ldr	r5, [pc, #116]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c482:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c484:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c486:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800c48a:	d111      	bne.n	800c4b0 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c48c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c490:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c494:	d021      	beq.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x232>
 800c496:	4918      	ldr	r1, [pc, #96]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c498:	688a      	ldr	r2, [r1, #8]
 800c49a:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c49e:	608a      	str	r2, [r1, #8]
 800c4a0:	4a15      	ldr	r2, [pc, #84]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c4a2:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c4a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c4a8:	430b      	orrs	r3, r1
 800c4aa:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c4ac:	6823      	ldr	r3, [r4, #0]
 800c4ae:	e708      	b.n	800c2c2 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c4b0:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800c4b4:	4291      	cmp	r1, r2
 800c4b6:	d0eb      	beq.n	800c490 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c4b8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c4ba:	4a0e      	ldr	r2, [pc, #56]	; (800c4f4 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800c4bc:	2101      	movs	r1, #1
 800c4be:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c4c2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c4c6:	2100      	movs	r1, #0
 800c4c8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c4cc:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c4ce:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c4d0:	07da      	lsls	r2, r3, #31
 800c4d2:	f53f af52 	bmi.w	800c37a <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c4d6:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c4d8:	e7d8      	b.n	800c48c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800c4da:	4807      	ldr	r0, [pc, #28]	; (800c4f8 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800c4dc:	6882      	ldr	r2, [r0, #8]
 800c4de:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800c4e2:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800c4e6:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800c4ea:	430a      	orrs	r2, r1
 800c4ec:	6082      	str	r2, [r0, #8]
 800c4ee:	e7d7      	b.n	800c4a0 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800c4f0:	42471000 	.word	0x42471000
 800c4f4:	42470000 	.word	0x42470000
 800c4f8:	40023800 	.word	0x40023800
 800c4fc:	40007000 	.word	0x40007000

0800c500 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c500:	b1f0      	cbz	r0, 800c540 <HAL_SDRAM_Init+0x40>
{
 800c502:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c504:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c508:	460d      	mov	r5, r1
 800c50a:	4604      	mov	r4, r0
 800c50c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c510:	b18b      	cbz	r3, 800c536 <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c512:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c514:	2302      	movs	r3, #2
 800c516:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c51a:	f851 0b04 	ldr.w	r0, [r1], #4
 800c51e:	f000 ffcd 	bl	800d4bc <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c522:	e9d4 0200 	ldrd	r0, r2, [r4]
 800c526:	4629      	mov	r1, r5
 800c528:	f001 f806 	bl	800d538 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c52c:	2301      	movs	r3, #1
 800c52e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c532:	2000      	movs	r0, #0
}
 800c534:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800c536:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800c53a:	f7f5 fa23 	bl	8001984 <HAL_SDRAM_MspInit>
 800c53e:	e7e8      	b.n	800c512 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800c540:	2001      	movs	r0, #1
}
 800c542:	4770      	bx	lr

0800c544 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c544:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c546:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c54a:	2b02      	cmp	r3, #2
{
 800c54c:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c54e:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c550:	d004      	beq.n	800c55c <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c552:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c556:	2c01      	cmp	r4, #1
 800c558:	d001      	beq.n	800c55e <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800c55a:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c55c:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c55e:	460e      	mov	r6, r1
 800c560:	2302      	movs	r3, #2
 800c562:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c566:	6828      	ldr	r0, [r5, #0]
 800c568:	f001 f832 	bl	800d5d0 <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c56c:	6833      	ldr	r3, [r6, #0]
 800c56e:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c570:	bf06      	itte	eq
 800c572:	2305      	moveq	r3, #5
 800c574:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c578:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800c57c:	2000      	movs	r0, #0
}
 800c57e:	bd70      	pop	{r4, r5, r6, pc}

0800c580 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c580:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c582:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c586:	2b02      	cmp	r3, #2
{
 800c588:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c58a:	b2d8      	uxtb	r0, r3
 800c58c:	d005      	beq.n	800c59a <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c58e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c592:	2b01      	cmp	r3, #1
 800c594:	b2dd      	uxtb	r5, r3
 800c596:	d001      	beq.n	800c59c <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800c598:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800c59a:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c59c:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c59e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c5a0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c5a4:	f001 f83e 	bl	800d624 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c5a8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800c5ac:	2000      	movs	r0, #0
}
 800c5ae:	bd38      	pop	{r3, r4, r5, pc}

0800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800c5b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c5b4:	b082      	sub	sp, #8
 800c5b6:	461d      	mov	r5, r3
 800c5b8:	4616      	mov	r6, r2
 800c5ba:	460c      	mov	r4, r1
 800c5bc:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800c5be:	f7fd f971 	bl	80098a4 <HAL_GetTick>
 800c5c2:	4435      	add	r5, r6
 800c5c4:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800c5c6:	f7fd f96d 	bl	80098a4 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c5ca:	4b27      	ldr	r3, [pc, #156]	; (800c668 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800c5cc:	681b      	ldr	r3, [r3, #0]
 800c5ce:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800c5d2:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800c5d6:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800c5d8:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c5da:	1c73      	adds	r3, r6, #1
 800c5dc:	6839      	ldr	r1, [r7, #0]
 800c5de:	d107      	bne.n	800c5f0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800c5e0:	688b      	ldr	r3, [r1, #8]
 800c5e2:	ea34 0303 	bics.w	r3, r4, r3
 800c5e6:	d0fb      	beq.n	800c5e0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800c5e8:	2000      	movs	r0, #0
}
 800c5ea:	b002      	add	sp, #8
 800c5ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800c5f0:	688b      	ldr	r3, [r1, #8]
 800c5f2:	ea34 0303 	bics.w	r3, r4, r3
 800c5f6:	d1f7      	bne.n	800c5e8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800c5f8:	f7fd f954 	bl	80098a4 <HAL_GetTick>
 800c5fc:	eba0 0008 	sub.w	r0, r0, r8
 800c600:	42a8      	cmp	r0, r5
 800c602:	d208      	bcs.n	800c616 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800c604:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800c606:	2b00      	cmp	r3, #0
      count--;
 800c608:	9b01      	ldr	r3, [sp, #4]
 800c60a:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800c60e:	bf08      	it	eq
 800c610:	2500      	moveq	r5, #0
      count--;
 800c612:	9301      	str	r3, [sp, #4]
 800c614:	e7e1      	b.n	800c5da <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c616:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c61a:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c61c:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800c620:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800c624:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c626:	d013      	beq.n	800c650 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800c628:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800c62a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800c62e:	d107      	bne.n	800c640 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800c630:	681a      	ldr	r2, [r3, #0]
 800c632:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800c636:	601a      	str	r2, [r3, #0]
 800c638:	681a      	ldr	r2, [r3, #0]
 800c63a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800c63e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800c640:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800c642:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800c644:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800c648:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800c64c:	2003      	movs	r0, #3
 800c64e:	e7cc      	b.n	800c5ea <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c650:	68ba      	ldr	r2, [r7, #8]
 800c652:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c656:	d002      	beq.n	800c65e <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c658:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c65c:	d1e4      	bne.n	800c628 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800c65e:	681a      	ldr	r2, [r3, #0]
 800c660:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c664:	601a      	str	r2, [r3, #0]
 800c666:	e7df      	b.n	800c628 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800c668:	20000078 	.word	0x20000078

0800c66c <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800c66c:	b538      	push	{r3, r4, r5, lr}
 800c66e:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c670:	6842      	ldr	r2, [r0, #4]
 800c672:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800c676:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c678:	d006      	beq.n	800c688 <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c67a:	460a      	mov	r2, r1
 800c67c:	2101      	movs	r1, #1
 800c67e:	f7ff ff97 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c682:	b978      	cbnz	r0, 800c6a4 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800c684:	2000      	movs	r0, #0
}
 800c686:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c688:	6882      	ldr	r2, [r0, #8]
 800c68a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800c68e:	d01c      	beq.n	800c6ca <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800c690:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800c694:	d00c      	beq.n	800c6b0 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c696:	460a      	mov	r2, r1
 800c698:	4620      	mov	r0, r4
 800c69a:	2180      	movs	r1, #128	; 0x80
 800c69c:	f7ff ff88 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c6a0:	2800      	cmp	r0, #0
 800c6a2:	d0ef      	beq.n	800c684 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c6a4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800c6a6:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800c6aa:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c6ac:	6563      	str	r3, [r4, #84]	; 0x54
}
 800c6ae:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800c6b0:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c6b2:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800c6b4:	6829      	ldr	r1, [r5, #0]
 800c6b6:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c6ba:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800c6bc:	2101      	movs	r1, #1
 800c6be:	f7ff ff77 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c6c2:	2800      	cmp	r0, #0
 800c6c4:	d1ee      	bne.n	800c6a4 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800c6c6:	2000      	movs	r0, #0
 800c6c8:	e7dd      	b.n	800c686 <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800c6ca:	6800      	ldr	r0, [r0, #0]
 800c6cc:	6802      	ldr	r2, [r0, #0]
 800c6ce:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800c6d2:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c6d4:	460a      	mov	r2, r1
 800c6d6:	4620      	mov	r0, r4
 800c6d8:	2180      	movs	r1, #128	; 0x80
 800c6da:	f7ff ff69 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c6de:	2800      	cmp	r0, #0
 800c6e0:	d0d0      	beq.n	800c684 <SPI_EndRxTransaction+0x18>
 800c6e2:	e7df      	b.n	800c6a4 <SPI_EndRxTransaction+0x38>

0800c6e4 <HAL_SPI_Init>:
  if (hspi == NULL)
 800c6e4:	2800      	cmp	r0, #0
 800c6e6:	d05c      	beq.n	800c7a2 <HAL_SPI_Init+0xbe>
{
 800c6e8:	b570      	push	{r4, r5, r6, lr}
 800c6ea:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c6ec:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800c6ee:	2800      	cmp	r0, #0
 800c6f0:	d047      	beq.n	800c782 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c6f2:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c6f4:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c6f8:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c6fc:	2200      	movs	r2, #0
 800c6fe:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800c700:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800c704:	2b00      	cmp	r3, #0
 800c706:	d042      	beq.n	800c78e <HAL_SPI_Init+0xaa>
 800c708:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800c70a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c70c:	68a5      	ldr	r5, [r4, #8]
 800c70e:	69a2      	ldr	r2, [r4, #24]
 800c710:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c712:	2302      	movs	r3, #2
 800c714:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c718:	680b      	ldr	r3, [r1, #0]
 800c71a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c71e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c720:	6863      	ldr	r3, [r4, #4]
 800c722:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800c726:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c72a:	432b      	orrs	r3, r5
 800c72c:	68e5      	ldr	r5, [r4, #12]
 800c72e:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800c732:	432b      	orrs	r3, r5
 800c734:	6925      	ldr	r5, [r4, #16]
 800c736:	f005 0502 	and.w	r5, r5, #2
 800c73a:	432b      	orrs	r3, r5
 800c73c:	6965      	ldr	r5, [r4, #20]
 800c73e:	f005 0501 	and.w	r5, r5, #1
 800c742:	432b      	orrs	r3, r5
 800c744:	69e5      	ldr	r5, [r4, #28]
 800c746:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800c74a:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800c74e:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800c752:	4333      	orrs	r3, r6
 800c754:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c756:	0c12      	lsrs	r2, r2, #16
 800c758:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c75c:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c760:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c764:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c768:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c76a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c76c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c76e:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c770:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c772:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800c776:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c778:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c77a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c77c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800c780:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c782:	6863      	ldr	r3, [r4, #4]
 800c784:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800c788:	d0b6      	beq.n	800c6f8 <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c78a:	61e0      	str	r0, [r4, #28]
 800c78c:	e7b4      	b.n	800c6f8 <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800c78e:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800c790:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800c794:	f7f5 f870 	bl	8001878 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c798:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c79c:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800c7a0:	e7b3      	b.n	800c70a <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800c7a2:	2001      	movs	r0, #1
}
 800c7a4:	4770      	bx	lr
 800c7a6:	bf00      	nop

0800c7a8 <HAL_SPI_Transmit>:
{
 800c7a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c7ac:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c7ae:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c7b2:	2801      	cmp	r0, #1
{
 800c7b4:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c7b6:	f000 8085 	beq.w	800c8c4 <HAL_SPI_Transmit+0x11c>
 800c7ba:	461d      	mov	r5, r3
 800c7bc:	2301      	movs	r3, #1
 800c7be:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c7c2:	4688      	mov	r8, r1
 800c7c4:	4617      	mov	r7, r2
 800c7c6:	f7fd f86d 	bl	80098a4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c7ca:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c7ce:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800c7d0:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c7d2:	b2d8      	uxtb	r0, r3
 800c7d4:	d009      	beq.n	800c7ea <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800c7d6:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c7d8:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c7da:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c7dc:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c7e0:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c7e4:	b002      	add	sp, #8
 800c7e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c7ea:	f1b8 0f00 	cmp.w	r8, #0
 800c7ee:	d0f3      	beq.n	800c7d8 <HAL_SPI_Transmit+0x30>
 800c7f0:	2f00      	cmp	r7, #0
 800c7f2:	d0f1      	beq.n	800c7d8 <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c7f4:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800c7f6:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800c7f8:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c7fc:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c7fe:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c800:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800c804:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800c808:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c80c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800c80e:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800c810:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800c812:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800c814:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800c816:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c818:	f000 8085 	beq.w	800c926 <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c81c:	6803      	ldr	r3, [r0, #0]
 800c81e:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800c820:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c822:	d403      	bmi.n	800c82c <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800c824:	6803      	ldr	r3, [r0, #0]
 800c826:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c82a:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800c82c:	68e3      	ldr	r3, [r4, #12]
 800c82e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800c832:	d04b      	beq.n	800c8cc <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c834:	6863      	ldr	r3, [r4, #4]
 800c836:	2b00      	cmp	r3, #0
 800c838:	f000 8097 	beq.w	800c96a <HAL_SPI_Transmit+0x1c2>
 800c83c:	2f01      	cmp	r7, #1
 800c83e:	f000 8094 	beq.w	800c96a <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800c842:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c844:	b29b      	uxth	r3, r3
 800c846:	b1ab      	cbz	r3, 800c874 <HAL_SPI_Transmit+0xcc>
 800c848:	1c68      	adds	r0, r5, #1
 800c84a:	f040 8083 	bne.w	800c954 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c84e:	6823      	ldr	r3, [r4, #0]
 800c850:	689a      	ldr	r2, [r3, #8]
 800c852:	0791      	lsls	r1, r2, #30
 800c854:	f140 8094 	bpl.w	800c980 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c858:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c85a:	7812      	ldrb	r2, [r2, #0]
 800c85c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c85e:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c860:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c862:	3901      	subs	r1, #1
 800c864:	b289      	uxth	r1, r1
 800c866:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c868:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c86a:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800c86c:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c86e:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800c870:	2900      	cmp	r1, #0
 800c872:	d1ec      	bne.n	800c84e <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c874:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c876:	4b5b      	ldr	r3, [pc, #364]	; (800c9e4 <HAL_SPI_Transmit+0x23c>)
 800c878:	4a5b      	ldr	r2, [pc, #364]	; (800c9e8 <HAL_SPI_Transmit+0x240>)
 800c87a:	681b      	ldr	r3, [r3, #0]
 800c87c:	fba2 2303 	umull	r2, r3, r2, r3
 800c880:	0d5b      	lsrs	r3, r3, #21
 800c882:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c886:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c88a:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800c88e:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c890:	d107      	bne.n	800c8a2 <HAL_SPI_Transmit+0xfa>
 800c892:	e098      	b.n	800c9c6 <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800c894:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c896:	6822      	ldr	r2, [r4, #0]
      count--;
 800c898:	3b01      	subs	r3, #1
 800c89a:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800c89c:	6893      	ldr	r3, [r2, #8]
 800c89e:	061b      	lsls	r3, r3, #24
 800c8a0:	d502      	bpl.n	800c8a8 <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800c8a2:	9b01      	ldr	r3, [sp, #4]
 800c8a4:	2b00      	cmp	r3, #0
 800c8a6:	d1f5      	bne.n	800c894 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800c8a8:	68a3      	ldr	r3, [r4, #8]
 800c8aa:	b933      	cbnz	r3, 800c8ba <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800c8ac:	6822      	ldr	r2, [r4, #0]
 800c8ae:	9300      	str	r3, [sp, #0]
 800c8b0:	68d3      	ldr	r3, [r2, #12]
 800c8b2:	9300      	str	r3, [sp, #0]
 800c8b4:	6893      	ldr	r3, [r2, #8]
 800c8b6:	9300      	str	r3, [sp, #0]
 800c8b8:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c8ba:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c8bc:	3800      	subs	r0, #0
 800c8be:	bf18      	it	ne
 800c8c0:	2001      	movne	r0, #1
error:
 800c8c2:	e789      	b.n	800c7d8 <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800c8c4:	2002      	movs	r0, #2
}
 800c8c6:	b002      	add	sp, #8
 800c8c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c8cc:	6861      	ldr	r1, [r4, #4]
 800c8ce:	2900      	cmp	r1, #0
 800c8d0:	d176      	bne.n	800c9c0 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c8d2:	4643      	mov	r3, r8
 800c8d4:	f833 7b02 	ldrh.w	r7, [r3], #2
 800c8d8:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800c8da:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c8dc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8de:	3b01      	subs	r3, #1
 800c8e0:	b29b      	uxth	r3, r3
 800c8e2:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c8e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c8e6:	b29b      	uxth	r3, r3
 800c8e8:	2b00      	cmp	r3, #0
 800c8ea:	d0c4      	beq.n	800c876 <HAL_SPI_Transmit+0xce>
 800c8ec:	1c6b      	adds	r3, r5, #1
 800c8ee:	d15e      	bne.n	800c9ae <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c8f0:	6883      	ldr	r3, [r0, #8]
 800c8f2:	079f      	lsls	r7, r3, #30
 800c8f4:	d50f      	bpl.n	800c916 <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c8f6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c8f8:	f832 3b02 	ldrh.w	r3, [r2], #2
 800c8fc:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800c8fe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c900:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c902:	3b01      	subs	r3, #1
 800c904:	b29b      	uxth	r3, r3
 800c906:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c908:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c90a:	b29b      	uxth	r3, r3
 800c90c:	2b00      	cmp	r3, #0
 800c90e:	d0b1      	beq.n	800c874 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c910:	6883      	ldr	r3, [r0, #8]
 800c912:	079f      	lsls	r7, r3, #30
 800c914:	d4ef      	bmi.n	800c8f6 <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c916:	f7fc ffc5 	bl	80098a4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c91a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c91c:	b29b      	uxth	r3, r3
 800c91e:	2b00      	cmp	r3, #0
 800c920:	d0a8      	beq.n	800c874 <HAL_SPI_Transmit+0xcc>
 800c922:	6820      	ldr	r0, [r4, #0]
 800c924:	e7e4      	b.n	800c8f0 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800c926:	6803      	ldr	r3, [r0, #0]
 800c928:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c92c:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800c92e:	6803      	ldr	r3, [r0, #0]
 800c930:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c934:	6003      	str	r3, [r0, #0]
 800c936:	e771      	b.n	800c81c <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c938:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c93a:	7812      	ldrb	r2, [r2, #0]
 800c93c:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800c93e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c940:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c942:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c944:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800c946:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800c948:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c94a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c94c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c94e:	b29b      	uxth	r3, r3
 800c950:	2b00      	cmp	r3, #0
 800c952:	d08f      	beq.n	800c874 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c954:	6823      	ldr	r3, [r4, #0]
 800c956:	689a      	ldr	r2, [r3, #8]
 800c958:	0792      	lsls	r2, r2, #30
 800c95a:	d4ed      	bmi.n	800c938 <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c95c:	f7fc ffa2 	bl	80098a4 <HAL_GetTick>
 800c960:	1b80      	subs	r0, r0, r6
 800c962:	42a8      	cmp	r0, r5
 800c964:	d3f2      	bcc.n	800c94c <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800c966:	2003      	movs	r0, #3
 800c968:	e736      	b.n	800c7d8 <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800c96a:	f898 3000 	ldrb.w	r3, [r8]
 800c96e:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800c970:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c972:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c974:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c976:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800c978:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800c97a:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800c97c:	86e3      	strh	r3, [r4, #54]	; 0x36
 800c97e:	e760      	b.n	800c842 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c980:	f7fc ff90 	bl	80098a4 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800c984:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c986:	b29b      	uxth	r3, r3
 800c988:	2b00      	cmp	r3, #0
 800c98a:	f47f af60 	bne.w	800c84e <HAL_SPI_Transmit+0xa6>
 800c98e:	e771      	b.n	800c874 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c990:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c992:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c996:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c998:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c99a:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c99c:	3b01      	subs	r3, #1
 800c99e:	b29b      	uxth	r3, r3
 800c9a0:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800c9a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c9a4:	b29b      	uxth	r3, r3
 800c9a6:	2b00      	cmp	r3, #0
 800c9a8:	f43f af64 	beq.w	800c874 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800c9ac:	6822      	ldr	r2, [r4, #0]
 800c9ae:	6893      	ldr	r3, [r2, #8]
 800c9b0:	0799      	lsls	r1, r3, #30
 800c9b2:	d4ed      	bmi.n	800c990 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c9b4:	f7fc ff76 	bl	80098a4 <HAL_GetTick>
 800c9b8:	1b80      	subs	r0, r0, r6
 800c9ba:	42a8      	cmp	r0, r5
 800c9bc:	d3f1      	bcc.n	800c9a2 <HAL_SPI_Transmit+0x1fa>
 800c9be:	e7d2      	b.n	800c966 <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c9c0:	2f01      	cmp	r7, #1
 800c9c2:	d18f      	bne.n	800c8e4 <HAL_SPI_Transmit+0x13c>
 800c9c4:	e785      	b.n	800c8d2 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c9c6:	4633      	mov	r3, r6
 800c9c8:	462a      	mov	r2, r5
 800c9ca:	2180      	movs	r1, #128	; 0x80
 800c9cc:	4620      	mov	r0, r4
 800c9ce:	f7ff fdef 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c9d2:	2800      	cmp	r0, #0
 800c9d4:	f43f af68 	beq.w	800c8a8 <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c9d8:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c9da:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c9dc:	4313      	orrs	r3, r2
 800c9de:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c9e0:	6562      	str	r2, [r4, #84]	; 0x54
 800c9e2:	e761      	b.n	800c8a8 <HAL_SPI_Transmit+0x100>
 800c9e4:	20000078 	.word	0x20000078
 800c9e8:	165e9f81 	.word	0x165e9f81

0800c9ec <HAL_SPI_TransmitReceive>:
{
 800c9ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9f0:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800c9f2:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800c9f6:	2801      	cmp	r0, #1
{
 800c9f8:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800c9fa:	f000 80ac 	beq.w	800cb56 <HAL_SPI_TransmitReceive+0x16a>
 800c9fe:	461e      	mov	r6, r3
 800ca00:	2301      	movs	r3, #1
 800ca02:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800ca06:	4690      	mov	r8, r2
 800ca08:	460f      	mov	r7, r1
 800ca0a:	f7fc ff4b 	bl	80098a4 <HAL_GetTick>
 800ca0e:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800ca10:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800ca14:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ca16:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800ca18:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800ca1a:	d011      	beq.n	800ca40 <HAL_SPI_TransmitReceive+0x54>
 800ca1c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800ca20:	d009      	beq.n	800ca36 <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800ca22:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800ca24:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800ca26:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800ca28:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800ca2c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800ca30:	b002      	add	sp, #8
 800ca32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800ca36:	68a1      	ldr	r1, [r4, #8]
 800ca38:	2900      	cmp	r1, #0
 800ca3a:	d1f2      	bne.n	800ca22 <HAL_SPI_TransmitReceive+0x36>
 800ca3c:	2a04      	cmp	r2, #4
 800ca3e:	d1f0      	bne.n	800ca22 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800ca40:	2f00      	cmp	r7, #0
 800ca42:	f000 808c 	beq.w	800cb5e <HAL_SPI_TransmitReceive+0x172>
 800ca46:	f1b8 0f00 	cmp.w	r8, #0
 800ca4a:	f000 8088 	beq.w	800cb5e <HAL_SPI_TransmitReceive+0x172>
 800ca4e:	2e00      	cmp	r6, #0
 800ca50:	f000 8085 	beq.w	800cb5e <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ca54:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800ca58:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800ca5c:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800ca5e:	bf1c      	itt	ne
 800ca60:	2205      	movne	r2, #5
 800ca62:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800ca66:	2200      	movs	r2, #0
 800ca68:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800ca6a:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ca6e:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800ca70:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800ca72:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ca74:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800ca76:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ca78:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800ca7a:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800ca7c:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800ca7e:	d403      	bmi.n	800ca88 <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800ca80:	6811      	ldr	r1, [r2, #0]
 800ca82:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800ca86:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800ca88:	68e1      	ldr	r1, [r4, #12]
 800ca8a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800ca8e:	f000 809e 	beq.w	800cbce <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800ca92:	2b00      	cmp	r3, #0
 800ca94:	f000 8091 	beq.w	800cbba <HAL_SPI_TransmitReceive+0x1ce>
 800ca98:	2e01      	cmp	r6, #1
 800ca9a:	f000 808e 	beq.w	800cbba <HAL_SPI_TransmitReceive+0x1ce>
 800ca9e:	9b08      	ldr	r3, [sp, #32]
 800caa0:	3301      	adds	r3, #1
        txallowed = 1U;
 800caa2:	f04f 0601 	mov.w	r6, #1
 800caa6:	d028      	beq.n	800cafa <HAL_SPI_TransmitReceive+0x10e>
 800caa8:	e05b      	b.n	800cb62 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800caaa:	6821      	ldr	r1, [r4, #0]
 800caac:	688b      	ldr	r3, [r1, #8]
 800caae:	0798      	lsls	r0, r3, #30
 800cab0:	d50f      	bpl.n	800cad2 <HAL_SPI_TransmitReceive+0xe6>
 800cab2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cab4:	b29b      	uxth	r3, r3
 800cab6:	b163      	cbz	r3, 800cad2 <HAL_SPI_TransmitReceive+0xe6>
 800cab8:	b15e      	cbz	r6, 800cad2 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800caba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cabc:	781b      	ldrb	r3, [r3, #0]
 800cabe:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800cac0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cac2:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cac4:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800cac6:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cac8:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800caca:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800cacc:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cace:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cad0:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cad2:	688a      	ldr	r2, [r1, #8]
 800cad4:	f012 0201 	ands.w	r2, r2, #1
 800cad8:	d00d      	beq.n	800caf6 <HAL_SPI_TransmitReceive+0x10a>
 800cada:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cadc:	b29b      	uxth	r3, r3
 800cade:	b153      	cbz	r3, 800caf6 <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800cae0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cae2:	68c9      	ldr	r1, [r1, #12]
 800cae4:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800cae6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800cae8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caea:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800caec:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800caee:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800caf0:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800caf2:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800caf4:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800caf6:	f7fc fed5 	bl	80098a4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cafa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cafc:	b292      	uxth	r2, r2
 800cafe:	2a00      	cmp	r2, #0
 800cb00:	d1d3      	bne.n	800caaa <HAL_SPI_TransmitReceive+0xbe>
 800cb02:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cb04:	b29b      	uxth	r3, r3
 800cb06:	2b00      	cmp	r3, #0
 800cb08:	d1cf      	bne.n	800caaa <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb0a:	4b79      	ldr	r3, [pc, #484]	; (800ccf0 <HAL_SPI_TransmitReceive+0x304>)
 800cb0c:	4a79      	ldr	r2, [pc, #484]	; (800ccf4 <HAL_SPI_TransmitReceive+0x308>)
 800cb0e:	681b      	ldr	r3, [r3, #0]
 800cb10:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb14:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb16:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800cb1a:	0d5b      	lsrs	r3, r3, #21
 800cb1c:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb20:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800cb24:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800cb26:	d107      	bne.n	800cb38 <HAL_SPI_TransmitReceive+0x14c>
 800cb28:	e0d2      	b.n	800ccd0 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800cb2a:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cb2c:	6822      	ldr	r2, [r4, #0]
      count--;
 800cb2e:	3b01      	subs	r3, #1
 800cb30:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800cb32:	6893      	ldr	r3, [r2, #8]
 800cb34:	061b      	lsls	r3, r3, #24
 800cb36:	d502      	bpl.n	800cb3e <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800cb38:	9b01      	ldr	r3, [sp, #4]
 800cb3a:	2b00      	cmp	r3, #0
 800cb3c:	d1f5      	bne.n	800cb2a <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800cb3e:	68a0      	ldr	r0, [r4, #8]
 800cb40:	2800      	cmp	r0, #0
 800cb42:	f040 8082 	bne.w	800cc4a <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800cb46:	6823      	ldr	r3, [r4, #0]
 800cb48:	9000      	str	r0, [sp, #0]
 800cb4a:	68da      	ldr	r2, [r3, #12]
 800cb4c:	9200      	str	r2, [sp, #0]
 800cb4e:	689b      	ldr	r3, [r3, #8]
 800cb50:	9300      	str	r3, [sp, #0]
 800cb52:	9b00      	ldr	r3, [sp, #0]
 800cb54:	e766      	b.n	800ca24 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800cb56:	2002      	movs	r0, #2
}
 800cb58:	b002      	add	sp, #8
 800cb5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800cb5e:	2001      	movs	r0, #1
 800cb60:	e760      	b.n	800ca24 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cb62:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb64:	b29b      	uxth	r3, r3
 800cb66:	b91b      	cbnz	r3, 800cb70 <HAL_SPI_TransmitReceive+0x184>
 800cb68:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cb6a:	b29b      	uxth	r3, r3
 800cb6c:	2b00      	cmp	r3, #0
 800cb6e:	d0cc      	beq.n	800cb0a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cb70:	6822      	ldr	r2, [r4, #0]
 800cb72:	6893      	ldr	r3, [r2, #8]
 800cb74:	0799      	lsls	r1, r3, #30
 800cb76:	d50f      	bpl.n	800cb98 <HAL_SPI_TransmitReceive+0x1ac>
 800cb78:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cb7a:	b29b      	uxth	r3, r3
 800cb7c:	b163      	cbz	r3, 800cb98 <HAL_SPI_TransmitReceive+0x1ac>
 800cb7e:	b15e      	cbz	r6, 800cb98 <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800cb80:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cb82:	781b      	ldrb	r3, [r3, #0]
 800cb84:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800cb86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800cb88:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cb8a:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800cb8c:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800cb8e:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800cb90:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb92:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800cb94:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cb96:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cb98:	6893      	ldr	r3, [r2, #8]
 800cb9a:	f013 0301 	ands.w	r3, r3, #1
 800cb9e:	d004      	beq.n	800cbaa <HAL_SPI_TransmitReceive+0x1be>
 800cba0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cba2:	b289      	uxth	r1, r1
 800cba4:	2900      	cmp	r1, #0
 800cba6:	f040 8087 	bne.w	800ccb8 <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800cbaa:	f7fc fe7b 	bl	80098a4 <HAL_GetTick>
 800cbae:	9b08      	ldr	r3, [sp, #32]
 800cbb0:	1b40      	subs	r0, r0, r5
 800cbb2:	4298      	cmp	r0, r3
 800cbb4:	d3d5      	bcc.n	800cb62 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800cbb6:	2003      	movs	r0, #3
 800cbb8:	e734      	b.n	800ca24 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800cbba:	783b      	ldrb	r3, [r7, #0]
 800cbbc:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800cbbe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cbc0:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cbc2:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cbc4:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800cbc6:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800cbc8:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cbca:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cbcc:	e767      	b.n	800ca9e <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	d13d      	bne.n	800cc4e <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cbd2:	f837 3b02 	ldrh.w	r3, [r7], #2
 800cbd6:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800cbd8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800cbda:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800cbdc:	3b01      	subs	r3, #1
 800cbde:	b29b      	uxth	r3, r3
 800cbe0:	86e3      	strh	r3, [r4, #54]	; 0x36
 800cbe2:	9b08      	ldr	r3, [sp, #32]
 800cbe4:	3301      	adds	r3, #1
{
 800cbe6:	f04f 0601 	mov.w	r6, #1
 800cbea:	d025      	beq.n	800cc38 <HAL_SPI_TransmitReceive+0x24c>
 800cbec:	e032      	b.n	800cc54 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cbee:	6823      	ldr	r3, [r4, #0]
 800cbf0:	689a      	ldr	r2, [r3, #8]
 800cbf2:	0792      	lsls	r2, r2, #30
 800cbf4:	d50d      	bpl.n	800cc12 <HAL_SPI_TransmitReceive+0x226>
 800cbf6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cbf8:	b292      	uxth	r2, r2
 800cbfa:	b152      	cbz	r2, 800cc12 <HAL_SPI_TransmitReceive+0x226>
 800cbfc:	b14e      	cbz	r6, 800cc12 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cbfe:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cc00:	f831 2b02 	ldrh.w	r2, [r1], #2
 800cc04:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800cc06:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc08:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc0a:	3a01      	subs	r2, #1
 800cc0c:	b292      	uxth	r2, r2
        txallowed = 0U;
 800cc0e:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800cc10:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc12:	689a      	ldr	r2, [r3, #8]
 800cc14:	f012 0201 	ands.w	r2, r2, #1
 800cc18:	d00c      	beq.n	800cc34 <HAL_SPI_TransmitReceive+0x248>
 800cc1a:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc1c:	b289      	uxth	r1, r1
 800cc1e:	b149      	cbz	r1, 800cc34 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cc20:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800cc22:	68db      	ldr	r3, [r3, #12]
 800cc24:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800cc28:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cc2a:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cc2c:	3b01      	subs	r3, #1
 800cc2e:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800cc30:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800cc32:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800cc34:	f7fc fe36 	bl	80098a4 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc38:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc3a:	b29b      	uxth	r3, r3
 800cc3c:	2b00      	cmp	r3, #0
 800cc3e:	d1d6      	bne.n	800cbee <HAL_SPI_TransmitReceive+0x202>
 800cc40:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc42:	b29b      	uxth	r3, r3
 800cc44:	2b00      	cmp	r3, #0
 800cc46:	d1d2      	bne.n	800cbee <HAL_SPI_TransmitReceive+0x202>
 800cc48:	e75f      	b.n	800cb0a <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800cc4a:	2000      	movs	r0, #0
 800cc4c:	e6ea      	b.n	800ca24 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800cc4e:	2e01      	cmp	r6, #1
 800cc50:	d1c7      	bne.n	800cbe2 <HAL_SPI_TransmitReceive+0x1f6>
 800cc52:	e7be      	b.n	800cbd2 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800cc54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc56:	b29b      	uxth	r3, r3
 800cc58:	b923      	cbnz	r3, 800cc64 <HAL_SPI_TransmitReceive+0x278>
 800cc5a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cc5c:	b29b      	uxth	r3, r3
 800cc5e:	2b00      	cmp	r3, #0
 800cc60:	f43f af53 	beq.w	800cb0a <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800cc64:	6822      	ldr	r2, [r4, #0]
 800cc66:	6893      	ldr	r3, [r2, #8]
 800cc68:	079f      	lsls	r7, r3, #30
 800cc6a:	d50d      	bpl.n	800cc88 <HAL_SPI_TransmitReceive+0x29c>
 800cc6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800cc6e:	b29b      	uxth	r3, r3
 800cc70:	b153      	cbz	r3, 800cc88 <HAL_SPI_TransmitReceive+0x29c>
 800cc72:	b14e      	cbz	r6, 800cc88 <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800cc74:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800cc76:	f831 3b02 	ldrh.w	r3, [r1], #2
 800cc7a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800cc7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800cc7e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800cc80:	3b01      	subs	r3, #1
 800cc82:	b29b      	uxth	r3, r3
 800cc84:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800cc86:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800cc88:	6893      	ldr	r3, [r2, #8]
 800cc8a:	f013 0301 	ands.w	r3, r3, #1
 800cc8e:	d00c      	beq.n	800ccaa <HAL_SPI_TransmitReceive+0x2be>
 800cc90:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cc92:	b289      	uxth	r1, r1
 800cc94:	b149      	cbz	r1, 800ccaa <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cc96:	68d1      	ldr	r1, [r2, #12]
 800cc98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800cc9a:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800cc9e:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800cca0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cca2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cca4:	3b01      	subs	r3, #1
 800cca6:	b29b      	uxth	r3, r3
 800cca8:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800ccaa:	f7fc fdfb 	bl	80098a4 <HAL_GetTick>
 800ccae:	9b08      	ldr	r3, [sp, #32]
 800ccb0:	1b40      	subs	r0, r0, r5
 800ccb2:	4298      	cmp	r0, r3
 800ccb4:	d3ce      	bcc.n	800cc54 <HAL_SPI_TransmitReceive+0x268>
 800ccb6:	e77e      	b.n	800cbb6 <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800ccb8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800ccba:	68d2      	ldr	r2, [r2, #12]
 800ccbc:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800ccbe:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800ccc0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ccc2:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800ccc4:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800ccc6:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800ccc8:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ccca:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800cccc:	461e      	mov	r6, r3
 800ccce:	e76c      	b.n	800cbaa <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ccd0:	9a08      	ldr	r2, [sp, #32]
 800ccd2:	462b      	mov	r3, r5
 800ccd4:	2180      	movs	r1, #128	; 0x80
 800ccd6:	4620      	mov	r0, r4
 800ccd8:	f7ff fc6a 	bl	800c5b0 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ccdc:	2800      	cmp	r0, #0
 800ccde:	f43f af2e 	beq.w	800cb3e <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cce2:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cce4:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800cce6:	4313      	orrs	r3, r2
 800cce8:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800ccea:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800ccec:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800ccee:	e699      	b.n	800ca24 <HAL_SPI_TransmitReceive+0x38>
 800ccf0:	20000078 	.word	0x20000078
 800ccf4:	165e9f81 	.word	0x165e9f81

0800ccf8 <HAL_SPI_Receive>:
{
 800ccf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800ccfc:	6846      	ldr	r6, [r0, #4]
 800ccfe:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800cd02:	b082      	sub	sp, #8
 800cd04:	4604      	mov	r4, r0
 800cd06:	4690      	mov	r8, r2
 800cd08:	461d      	mov	r5, r3
 800cd0a:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cd0c:	d06e      	beq.n	800cdec <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800cd0e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800cd12:	2b01      	cmp	r3, #1
 800cd14:	d076      	beq.n	800ce04 <HAL_SPI_Receive+0x10c>
 800cd16:	2301      	movs	r3, #1
 800cd18:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800cd1c:	f7fc fdc2 	bl	80098a4 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800cd20:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800cd24:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800cd28:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800cd2a:	fa5f f08c 	uxtb.w	r0, ip
 800cd2e:	d009      	beq.n	800cd44 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800cd30:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800cd32:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800cd34:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800cd36:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800cd3a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800cd3e:	b002      	add	sp, #8
 800cd40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800cd44:	2f00      	cmp	r7, #0
 800cd46:	d0f4      	beq.n	800cd32 <HAL_SPI_Receive+0x3a>
 800cd48:	f1b8 0f00 	cmp.w	r8, #0
 800cd4c:	d0f1      	beq.n	800cd32 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd4e:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800cd50:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd52:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800cd56:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800cd58:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd5c:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800cd60:	f04f 0104 	mov.w	r1, #4
 800cd64:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800cd68:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800cd6c:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800cd6e:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800cd70:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800cd72:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800cd76:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800cd78:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800cd7a:	d107      	bne.n	800cd8c <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800cd7c:	6811      	ldr	r1, [r2, #0]
 800cd7e:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800cd82:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800cd84:	6811      	ldr	r1, [r2, #0]
 800cd86:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800cd8a:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800cd8c:	6811      	ldr	r1, [r2, #0]
 800cd8e:	0648      	lsls	r0, r1, #25
 800cd90:	d403      	bmi.n	800cd9a <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800cd92:	6811      	ldr	r1, [r2, #0]
 800cd94:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800cd98:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800cd9a:	68e1      	ldr	r1, [r4, #12]
 800cd9c:	2900      	cmp	r1, #0
 800cd9e:	d054      	beq.n	800ce4a <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800cda0:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800cda2:	b289      	uxth	r1, r1
 800cda4:	b1a9      	cbz	r1, 800cdd2 <HAL_SPI_Receive+0xda>
 800cda6:	1c69      	adds	r1, r5, #1
 800cda8:	d13e      	bne.n	800ce28 <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800cdaa:	6893      	ldr	r3, [r2, #8]
 800cdac:	07db      	lsls	r3, r3, #31
 800cdae:	d544      	bpl.n	800ce3a <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800cdb0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800cdb2:	68d1      	ldr	r1, [r2, #12]
 800cdb4:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800cdb8:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800cdbc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cdbe:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cdc2:	fa1f fc8c 	uxth.w	ip, ip
 800cdc6:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cdca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cdcc:	b29b      	uxth	r3, r3
 800cdce:	2b00      	cmp	r3, #0
 800cdd0:	d1eb      	bne.n	800cdaa <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800cdd2:	4632      	mov	r2, r6
 800cdd4:	4629      	mov	r1, r5
 800cdd6:	4620      	mov	r0, r4
 800cdd8:	f7ff fc48 	bl	800c66c <SPI_EndRxTransaction>
 800cddc:	b108      	cbz	r0, 800cde2 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800cdde:	2320      	movs	r3, #32
 800cde0:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800cde2:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800cde4:	3800      	subs	r0, #0
 800cde6:	bf18      	it	ne
 800cde8:	2001      	movne	r0, #1
error :
 800cdea:	e7a2      	b.n	800cd32 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800cdec:	6883      	ldr	r3, [r0, #8]
 800cdee:	2b00      	cmp	r3, #0
 800cdf0:	d18d      	bne.n	800cd0e <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cdf2:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cdf4:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cdf6:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800cdf8:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800cdfc:	460a      	mov	r2, r1
 800cdfe:	f7ff fdf5 	bl	800c9ec <HAL_SPI_TransmitReceive>
 800ce02:	e79c      	b.n	800cd3e <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800ce04:	2002      	movs	r0, #2
}
 800ce06:	b002      	add	sp, #8
 800ce08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800ce0c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce0e:	68db      	ldr	r3, [r3, #12]
 800ce10:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800ce14:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800ce16:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce18:	3b01      	subs	r3, #1
 800ce1a:	b29b      	uxth	r3, r3
 800ce1c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce1e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce20:	b29b      	uxth	r3, r3
 800ce22:	2b00      	cmp	r3, #0
 800ce24:	d0d5      	beq.n	800cdd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce26:	6823      	ldr	r3, [r4, #0]
 800ce28:	689a      	ldr	r2, [r3, #8]
 800ce2a:	07d2      	lsls	r2, r2, #31
 800ce2c:	d4ee      	bmi.n	800ce0c <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce2e:	f7fc fd39 	bl	80098a4 <HAL_GetTick>
 800ce32:	1b80      	subs	r0, r0, r6
 800ce34:	42a8      	cmp	r0, r5
 800ce36:	d243      	bcs.n	800cec0 <HAL_SPI_Receive+0x1c8>
 800ce38:	e7f1      	b.n	800ce1e <HAL_SPI_Receive+0x126>
 800ce3a:	f7fc fd33 	bl	80098a4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ce3e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce40:	b29b      	uxth	r3, r3
 800ce42:	2b00      	cmp	r3, #0
 800ce44:	d0c5      	beq.n	800cdd2 <HAL_SPI_Receive+0xda>
 800ce46:	6822      	ldr	r2, [r4, #0]
 800ce48:	e7af      	b.n	800cdaa <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800ce4a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800ce4c:	b292      	uxth	r2, r2
 800ce4e:	2a00      	cmp	r2, #0
 800ce50:	d0bf      	beq.n	800cdd2 <HAL_SPI_Receive+0xda>
 800ce52:	1c6f      	adds	r7, r5, #1
 800ce54:	d013      	beq.n	800ce7e <HAL_SPI_Receive+0x186>
 800ce56:	e02b      	b.n	800ceb0 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ce58:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce5a:	7b1b      	ldrb	r3, [r3, #12]
 800ce5c:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ce5e:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ce62:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce64:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ce68:	fa1f fc8c 	uxth.w	ip, ip
 800ce6c:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800ce70:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ce72:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800ce74:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ce76:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800ce78:	2b00      	cmp	r3, #0
 800ce7a:	d0aa      	beq.n	800cdd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ce7c:	6823      	ldr	r3, [r4, #0]
 800ce7e:	689a      	ldr	r2, [r3, #8]
 800ce80:	07d0      	lsls	r0, r2, #31
 800ce82:	d4e9      	bmi.n	800ce58 <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ce84:	f7fc fd0e 	bl	80098a4 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800ce88:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800ce8a:	b29b      	uxth	r3, r3
 800ce8c:	2b00      	cmp	r3, #0
 800ce8e:	d1f5      	bne.n	800ce7c <HAL_SPI_Receive+0x184>
 800ce90:	e79f      	b.n	800cdd2 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800ce92:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ce94:	7b1b      	ldrb	r3, [r3, #12]
 800ce96:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800ce98:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ce9a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800ce9c:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800ce9e:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800cea0:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800cea2:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800cea4:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800cea6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800cea8:	b29b      	uxth	r3, r3
 800ceaa:	2b00      	cmp	r3, #0
 800ceac:	d091      	beq.n	800cdd2 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800ceae:	6823      	ldr	r3, [r4, #0]
 800ceb0:	689a      	ldr	r2, [r3, #8]
 800ceb2:	07d1      	lsls	r1, r2, #31
 800ceb4:	d4ed      	bmi.n	800ce92 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800ceb6:	f7fc fcf5 	bl	80098a4 <HAL_GetTick>
 800ceba:	1b80      	subs	r0, r0, r6
 800cebc:	42a8      	cmp	r0, r5
 800cebe:	d3f2      	bcc.n	800cea6 <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800cec0:	2003      	movs	r0, #3
 800cec2:	e736      	b.n	800cd32 <HAL_SPI_Receive+0x3a>

0800cec4 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800cec4:	2800      	cmp	r0, #0
 800cec6:	f000 8087 	beq.w	800cfd8 <HAL_TIM_Base_Init+0x114>
{
 800ceca:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800cecc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800ced0:	4604      	mov	r4, r0
 800ced2:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ced6:	2b00      	cmp	r3, #0
 800ced8:	d079      	beq.n	800cfce <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800ceda:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cedc:	493f      	ldr	r1, [pc, #252]	; (800cfdc <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cede:	2302      	movs	r3, #2
 800cee0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cee4:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800cee6:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cee8:	d05d      	beq.n	800cfa6 <HAL_TIM_Base_Init+0xe2>
 800ceea:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800ceee:	d031      	beq.n	800cf54 <HAL_TIM_Base_Init+0x90>
 800cef0:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800cef4:	428a      	cmp	r2, r1
 800cef6:	d02d      	beq.n	800cf54 <HAL_TIM_Base_Init+0x90>
 800cef8:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cefc:	428a      	cmp	r2, r1
 800cefe:	d029      	beq.n	800cf54 <HAL_TIM_Base_Init+0x90>
 800cf00:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cf04:	428a      	cmp	r2, r1
 800cf06:	d025      	beq.n	800cf54 <HAL_TIM_Base_Init+0x90>
 800cf08:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800cf0c:	428a      	cmp	r2, r1
 800cf0e:	d04a      	beq.n	800cfa6 <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800cf10:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800cf14:	428a      	cmp	r2, r1
 800cf16:	d021      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
 800cf18:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cf1c:	428a      	cmp	r2, r1
 800cf1e:	d01d      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
 800cf20:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cf24:	428a      	cmp	r2, r1
 800cf26:	d019      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
 800cf28:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800cf2c:	428a      	cmp	r2, r1
 800cf2e:	d015      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
 800cf30:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cf34:	428a      	cmp	r2, r1
 800cf36:	d011      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
 800cf38:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800cf3c:	428a      	cmp	r2, r1
 800cf3e:	d00d      	beq.n	800cf5c <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf40:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cf42:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf44:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cf48:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800cf4a:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cf4c:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cf4e:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cf50:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cf52:	e010      	b.n	800cf76 <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800cf54:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cf56:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cf5a:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cf5c:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf5e:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cf60:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cf64:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf66:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cf6a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cf6c:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800cf6e:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800cf70:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cf72:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cf74:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cf76:	2301      	movs	r3, #1
 800cf78:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cf7a:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cf7e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cf82:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cf86:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cf8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cf8e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cf92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cf96:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cf9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cf9e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800cfa2:	2000      	movs	r0, #0
}
 800cfa4:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800cfa6:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cfa8:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800cfaa:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cfae:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800cfb0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cfb4:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cfb6:	69a1      	ldr	r1, [r4, #24]
 800cfb8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cfbc:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800cfbe:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cfc0:	68e3      	ldr	r3, [r4, #12]
 800cfc2:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800cfc4:	6863      	ldr	r3, [r4, #4]
 800cfc6:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800cfc8:	6963      	ldr	r3, [r4, #20]
 800cfca:	6313      	str	r3, [r2, #48]	; 0x30
 800cfcc:	e7d3      	b.n	800cf76 <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800cfce:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cfd2:	f7f4 fc8d 	bl	80018f0 <HAL_TIM_Base_MspInit>
 800cfd6:	e780      	b.n	800ceda <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800cfd8:	2001      	movs	r0, #1
}
 800cfda:	4770      	bx	lr
 800cfdc:	40010000 	.word	0x40010000

0800cfe0 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800cfe0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cfe4:	2b01      	cmp	r3, #1
 800cfe6:	d12f      	bne.n	800d048 <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cfe8:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cfea:	4919      	ldr	r1, [pc, #100]	; (800d050 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800cfec:	2202      	movs	r2, #2
 800cfee:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cff2:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cff4:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cff6:	f042 0201 	orr.w	r2, r2, #1
 800cffa:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800cffc:	d019      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800cffe:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d002:	d016      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d004:	4a13      	ldr	r2, [pc, #76]	; (800d054 <HAL_TIM_Base_Start_IT+0x74>)
 800d006:	4293      	cmp	r3, r2
 800d008:	d013      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d00a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d00e:	4293      	cmp	r3, r2
 800d010:	d00f      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d012:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d016:	4293      	cmp	r3, r2
 800d018:	d00b      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d01a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d01e:	4293      	cmp	r3, r2
 800d020:	d007      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d022:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d026:	4293      	cmp	r3, r2
 800d028:	d003      	beq.n	800d032 <HAL_TIM_Base_Start_IT+0x52>
 800d02a:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d02e:	4293      	cmp	r3, r2
 800d030:	d104      	bne.n	800d03c <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800d032:	689a      	ldr	r2, [r3, #8]
 800d034:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800d038:	2a06      	cmp	r2, #6
 800d03a:	d007      	beq.n	800d04c <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800d03c:	681a      	ldr	r2, [r3, #0]
 800d03e:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800d042:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800d044:	601a      	str	r2, [r3, #0]
 800d046:	4770      	bx	lr
    return HAL_ERROR;
 800d048:	2001      	movs	r0, #1
 800d04a:	4770      	bx	lr
  return HAL_OK;
 800d04c:	2000      	movs	r0, #0
}
 800d04e:	4770      	bx	lr
 800d050:	40010000 	.word	0x40010000
 800d054:	40000400 	.word	0x40000400

0800d058 <HAL_TIM_ConfigClockSource>:
  __HAL_LOCK(htim);
 800d058:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d05c:	2b01      	cmp	r3, #1
 800d05e:	d075      	beq.n	800d14c <HAL_TIM_ConfigClockSource+0xf4>
 800d060:	4602      	mov	r2, r0
{
 800d062:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d064:	2302      	movs	r3, #2
  tmpsmcr = htim->Instance->SMCR;
 800d066:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d068:	f882 303d 	strb.w	r3, [r2, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d06c:	2001      	movs	r0, #1
 800d06e:	f882 003c 	strb.w	r0, [r2, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d072:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d074:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800d078:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 800d07c:	60a3      	str	r3, [r4, #8]
  switch (sClockSourceConfig->ClockSource)
 800d07e:	680b      	ldr	r3, [r1, #0]
 800d080:	2b60      	cmp	r3, #96	; 0x60
 800d082:	d065      	beq.n	800d150 <HAL_TIM_ConfigClockSource+0xf8>
 800d084:	d824      	bhi.n	800d0d0 <HAL_TIM_ConfigClockSource+0x78>
 800d086:	2b40      	cmp	r3, #64	; 0x40
 800d088:	d07c      	beq.n	800d184 <HAL_TIM_ConfigClockSource+0x12c>
 800d08a:	d94b      	bls.n	800d124 <HAL_TIM_ConfigClockSource+0xcc>
 800d08c:	2b50      	cmp	r3, #80	; 0x50
 800d08e:	d117      	bne.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d090:	684b      	ldr	r3, [r1, #4]
 800d092:	68cd      	ldr	r5, [r1, #12]
{
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 800d094:	6a21      	ldr	r1, [r4, #32]
  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
  tmpccmr1 |= (TIM_ICFilter << 4U);

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d096:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d09a:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d09c:	6a23      	ldr	r3, [r4, #32]
 800d09e:	f023 0301 	bic.w	r3, r3, #1
 800d0a2:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d0a4:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d0a6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d0aa:	ea43 1305 	orr.w	r3, r3, r5, lsl #4

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 800d0ae:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d0b0:	6221      	str	r1, [r4, #32]
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 800d0b2:	68a3      	ldr	r3, [r4, #8]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 800d0b4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d0b8:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  HAL_StatusTypeDef status = HAL_OK;
 800d0bc:	2000      	movs	r0, #0
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d0be:	60a3      	str	r3, [r4, #8]
  htim->State = HAL_TIM_STATE_READY;
 800d0c0:	2101      	movs	r1, #1
  __HAL_UNLOCK(htim);
 800d0c2:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d0c4:	f882 103d 	strb.w	r1, [r2, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d0c8:	f882 303c 	strb.w	r3, [r2, #60]	; 0x3c
}
 800d0cc:	bc30      	pop	{r4, r5}
 800d0ce:	4770      	bx	lr
  switch (sClockSourceConfig->ClockSource)
 800d0d0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800d0d4:	d038      	beq.n	800d148 <HAL_TIM_ConfigClockSource+0xf0>
 800d0d6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800d0da:	d110      	bne.n	800d0fe <HAL_TIM_ConfigClockSource+0xa6>

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d0dc:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d0e0:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d0e2:	432b      	orrs	r3, r5
 800d0e4:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d0e6:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d0ea:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d0ee:	430b      	orrs	r3, r1

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800d0f0:	60a3      	str	r3, [r4, #8]
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d0f2:	68a3      	ldr	r3, [r4, #8]
 800d0f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  HAL_StatusTypeDef status = HAL_OK;
 800d0f8:	2000      	movs	r0, #0
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 800d0fa:	60a3      	str	r3, [r4, #8]
      break;
 800d0fc:	e7e0      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d0fe:	2b70      	cmp	r3, #112	; 0x70
 800d100:	d1de      	bne.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d102:	e9d1 5301 	ldrd	r5, r3, [r1, #4]
  tmpsmcr = TIMx->SMCR;
 800d106:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d108:	432b      	orrs	r3, r5
 800d10a:	68cd      	ldr	r5, [r1, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d10c:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d110:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 800d114:	430b      	orrs	r3, r1
  TIMx->SMCR = tmpsmcr;
 800d116:	60a3      	str	r3, [r4, #8]
      tmpsmcr = htim->Instance->SMCR;
 800d118:	68a3      	ldr	r3, [r4, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800d11a:	f043 0377 	orr.w	r3, r3, #119	; 0x77
  HAL_StatusTypeDef status = HAL_OK;
 800d11e:	2000      	movs	r0, #0
      htim->Instance->SMCR = tmpsmcr;
 800d120:	60a3      	str	r3, [r4, #8]
      break;
 800d122:	e7cd      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d124:	2b20      	cmp	r3, #32
 800d126:	d002      	beq.n	800d12e <HAL_TIM_ConfigClockSource+0xd6>
 800d128:	d90a      	bls.n	800d140 <HAL_TIM_ConfigClockSource+0xe8>
 800d12a:	2b30      	cmp	r3, #48	; 0x30
 800d12c:	d1c8      	bne.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  tmpsmcr = TIMx->SMCR;
 800d12e:	68a1      	ldr	r1, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d130:	f021 0170 	bic.w	r1, r1, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d134:	430b      	orrs	r3, r1
 800d136:	f043 0307 	orr.w	r3, r3, #7
  HAL_StatusTypeDef status = HAL_OK;
 800d13a:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d13c:	60a3      	str	r3, [r4, #8]
}
 800d13e:	e7bf      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  switch (sClockSourceConfig->ClockSource)
 800d140:	f033 0110 	bics.w	r1, r3, #16
 800d144:	d1bc      	bne.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
 800d146:	e7f2      	b.n	800d12e <HAL_TIM_ConfigClockSource+0xd6>
  HAL_StatusTypeDef status = HAL_OK;
 800d148:	2000      	movs	r0, #0
 800d14a:	e7b9      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
  __HAL_LOCK(htim);
 800d14c:	2002      	movs	r0, #2
}
 800d14e:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d150:	6a23      	ldr	r3, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d152:	6848      	ldr	r0, [r1, #4]
 800d154:	68cd      	ldr	r5, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d156:	f023 0310 	bic.w	r3, r3, #16
 800d15a:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d15c:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d15e:	6a23      	ldr	r3, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d160:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d164:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 800d168:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d16c:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 800d170:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d172:	6223      	str	r3, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d174:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d176:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d17a:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  HAL_StatusTypeDef status = HAL_OK;
 800d17e:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d180:	60a3      	str	r3, [r4, #8]
}
 800d182:	e79d      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d184:	684b      	ldr	r3, [r1, #4]
 800d186:	68cd      	ldr	r5, [r1, #12]
  tmpccer = TIMx->CCER;
 800d188:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d18a:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d18e:	4319      	orrs	r1, r3
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d190:	6a23      	ldr	r3, [r4, #32]
 800d192:	f023 0301 	bic.w	r3, r3, #1
 800d196:	6223      	str	r3, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d198:	69a3      	ldr	r3, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d19a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d19e:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d1a2:	61a3      	str	r3, [r4, #24]
  TIMx->CCER = tmpccer;
 800d1a4:	6221      	str	r1, [r4, #32]
  tmpsmcr = TIMx->SMCR;
 800d1a6:	68a3      	ldr	r3, [r4, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d1a8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800d1ac:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  HAL_StatusTypeDef status = HAL_OK;
 800d1b0:	2000      	movs	r0, #0
  TIMx->SMCR = tmpsmcr;
 800d1b2:	60a3      	str	r3, [r4, #8]
}
 800d1b4:	e784      	b.n	800d0c0 <HAL_TIM_ConfigClockSource+0x68>
 800d1b6:	bf00      	nop

0800d1b8 <HAL_TIM_SlaveConfigSynchro>:
  __HAL_LOCK(htim);
 800d1b8:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 800d1bc:	2a01      	cmp	r2, #1
 800d1be:	d050      	beq.n	800d262 <HAL_TIM_SlaveConfigSynchro+0xaa>
 800d1c0:	4603      	mov	r3, r0
{
 800d1c2:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d1c4:	2202      	movs	r2, #2
  tmpsmcr = htim->Instance->SMCR;
 800d1c6:	6804      	ldr	r4, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d1c8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  __HAL_LOCK(htim);
 800d1cc:	2001      	movs	r0, #1
 800d1ce:	f883 003c 	strb.w	r0, [r3, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800d1d2:	68a2      	ldr	r2, [r4, #8]
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d1d4:	6848      	ldr	r0, [r1, #4]
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d1d6:	680d      	ldr	r5, [r1, #0]
  tmpsmcr &= ~TIM_SMCR_TS;
 800d1d8:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= sSlaveConfig->InputTrigger;
 800d1dc:	4302      	orrs	r2, r0
  tmpsmcr &= ~TIM_SMCR_SMS;
 800d1de:	f022 0207 	bic.w	r2, r2, #7
  tmpsmcr |= sSlaveConfig->SlaveMode;
 800d1e2:	432a      	orrs	r2, r5
  switch (sSlaveConfig->InputTrigger)
 800d1e4:	2850      	cmp	r0, #80	; 0x50
  htim->Instance->SMCR = tmpsmcr;
 800d1e6:	60a2      	str	r2, [r4, #8]
  switch (sSlaveConfig->InputTrigger)
 800d1e8:	d060      	beq.n	800d2ac <HAL_TIM_SlaveConfigSynchro+0xf4>
 800d1ea:	d90f      	bls.n	800d20c <HAL_TIM_SlaveConfigSynchro+0x54>
 800d1ec:	2860      	cmp	r0, #96	; 0x60
 800d1ee:	d03a      	beq.n	800d266 <HAL_TIM_SlaveConfigSynchro+0xae>
 800d1f0:	2870      	cmp	r0, #112	; 0x70
 800d1f2:	d10e      	bne.n	800d212 <HAL_TIM_SlaveConfigSynchro+0x5a>
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1f4:	e9d1 5202 	ldrd	r5, r2, [r1, #8]
  tmpsmcr = TIMx->SMCR;
 800d1f8:	68a0      	ldr	r0, [r4, #8]
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d1fa:	432a      	orrs	r2, r5
 800d1fc:	690d      	ldr	r5, [r1, #16]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800d1fe:	f420 417f 	bic.w	r1, r0, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800d202:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800d206:	430a      	orrs	r2, r1
  TIMx->SMCR = tmpsmcr;
 800d208:	60a2      	str	r2, [r4, #8]
 800d20a:	e00f      	b.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>
  switch (sSlaveConfig->InputTrigger)
 800d20c:	2840      	cmp	r0, #64	; 0x40
 800d20e:	d03d      	beq.n	800d28c <HAL_TIM_SlaveConfigSynchro+0xd4>
 800d210:	d907      	bls.n	800d222 <HAL_TIM_SlaveConfigSynchro+0x6a>
    htim->State = HAL_TIM_STATE_READY;
 800d212:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d214:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d216:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d21a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
}
 800d21e:	bc30      	pop	{r4, r5}
 800d220:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d222:	2820      	cmp	r0, #32
 800d224:	d002      	beq.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>
 800d226:	d912      	bls.n	800d24e <HAL_TIM_SlaveConfigSynchro+0x96>
 800d228:	2830      	cmp	r0, #48	; 0x30
 800d22a:	d1f2      	bne.n	800d212 <HAL_TIM_SlaveConfigSynchro+0x5a>
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 800d22c:	68e2      	ldr	r2, [r4, #12]
 800d22e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800d232:	60e2      	str	r2, [r4, #12]
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d234:	68e2      	ldr	r2, [r4, #12]
  __HAL_UNLOCK(htim);
 800d236:	2100      	movs	r1, #0
  htim->State = HAL_TIM_STATE_READY;
 800d238:	2501      	movs	r5, #1
  __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 800d23a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800d23e:	60e2      	str	r2, [r4, #12]
  htim->State = HAL_TIM_STATE_READY;
 800d240:	f883 503d 	strb.w	r5, [r3, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d244:	f883 103c 	strb.w	r1, [r3, #60]	; 0x3c
  return HAL_OK;
 800d248:	4608      	mov	r0, r1
}
 800d24a:	bc30      	pop	{r4, r5}
 800d24c:	4770      	bx	lr
  switch (sSlaveConfig->InputTrigger)
 800d24e:	f030 0210 	bics.w	r2, r0, #16
 800d252:	d0eb      	beq.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>
    htim->State = HAL_TIM_STATE_READY;
 800d254:	2001      	movs	r0, #1
    __HAL_UNLOCK(htim);
 800d256:	2200      	movs	r2, #0
    htim->State = HAL_TIM_STATE_READY;
 800d258:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_UNLOCK(htim);
 800d25c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    return HAL_ERROR;
 800d260:	e7dd      	b.n	800d21e <HAL_TIM_SlaveConfigSynchro+0x66>
  __HAL_LOCK(htim);
 800d262:	2002      	movs	r0, #2
}
 800d264:	4770      	bx	lr
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d266:	6a22      	ldr	r2, [r4, #32]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800d268:	6888      	ldr	r0, [r1, #8]
 800d26a:	690d      	ldr	r5, [r1, #16]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800d26c:	f022 0210 	bic.w	r2, r2, #16
 800d270:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d272:	69a1      	ldr	r1, [r4, #24]
  tmpccer = TIMx->CCER;
 800d274:	6a22      	ldr	r2, [r4, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800d276:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800d27a:	f022 02a0 	bic.w	r2, r2, #160	; 0xa0
  tmpccmr1 |= (TIM_ICFilter << 12U);
 800d27e:	ea41 3105 	orr.w	r1, r1, r5, lsl #12
  tmpccer |= (TIM_ICPolarity << 4U);
 800d282:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1 ;
 800d286:	61a1      	str	r1, [r4, #24]
  TIMx->CCER = tmpccer;
 800d288:	6222      	str	r2, [r4, #32]
 800d28a:	e7cf      	b.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>
      if (sSlaveConfig->SlaveMode == TIM_SLAVEMODE_GATED)
 800d28c:	2d05      	cmp	r5, #5
 800d28e:	d0c0      	beq.n	800d212 <HAL_TIM_SlaveConfigSynchro+0x5a>
      tmpccer = htim->Instance->CCER;
 800d290:	6a20      	ldr	r0, [r4, #32]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d292:	6a22      	ldr	r2, [r4, #32]
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d294:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCER &= ~TIM_CCER_CC1E;
 800d296:	f022 0201 	bic.w	r2, r2, #1
 800d29a:	6222      	str	r2, [r4, #32]
      tmpccmr1 = htim->Instance->CCMR1;
 800d29c:	69a2      	ldr	r2, [r4, #24]
      tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d29e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
      tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 800d2a2:	ea42 1201 	orr.w	r2, r2, r1, lsl #4
      htim->Instance->CCMR1 = tmpccmr1;
 800d2a6:	61a2      	str	r2, [r4, #24]
      htim->Instance->CCER = tmpccer;
 800d2a8:	6220      	str	r0, [r4, #32]
      break;
 800d2aa:	e7bf      	b.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800d2ac:	688a      	ldr	r2, [r1, #8]
 800d2ae:	6908      	ldr	r0, [r1, #16]
  tmpccer = TIMx->CCER;
 800d2b0:	6a21      	ldr	r1, [r4, #32]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800d2b2:	f021 010a 	bic.w	r1, r1, #10
  tmpccer |= TIM_ICPolarity;
 800d2b6:	4311      	orrs	r1, r2
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800d2b8:	6a22      	ldr	r2, [r4, #32]
 800d2ba:	f022 0201 	bic.w	r2, r2, #1
 800d2be:	6222      	str	r2, [r4, #32]
  tmpccmr1 = TIMx->CCMR1;
 800d2c0:	69a2      	ldr	r2, [r4, #24]
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800d2c2:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 800d2c6:	ea42 1200 	orr.w	r2, r2, r0, lsl #4
  TIMx->CCMR1 = tmpccmr1;
 800d2ca:	61a2      	str	r2, [r4, #24]
  TIMx->CCER = tmpccer;
 800d2cc:	6221      	str	r1, [r4, #32]
 800d2ce:	e7ad      	b.n	800d22c <HAL_TIM_SlaveConfigSynchro+0x74>

0800d2d0 <HAL_TIM_OC_DelayElapsedCallback>:
 800d2d0:	4770      	bx	lr
 800d2d2:	bf00      	nop

0800d2d4 <HAL_TIM_IC_CaptureCallback>:
 800d2d4:	4770      	bx	lr
 800d2d6:	bf00      	nop

0800d2d8 <HAL_TIM_PWM_PulseFinishedCallback>:
 800d2d8:	4770      	bx	lr
 800d2da:	bf00      	nop

0800d2dc <HAL_TIM_TriggerCallback>:
 800d2dc:	4770      	bx	lr
 800d2de:	bf00      	nop

0800d2e0 <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d2e0:	6803      	ldr	r3, [r0, #0]
 800d2e2:	691a      	ldr	r2, [r3, #16]
 800d2e4:	0791      	lsls	r1, r2, #30
{
 800d2e6:	b510      	push	{r4, lr}
 800d2e8:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800d2ea:	d502      	bpl.n	800d2f2 <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800d2ec:	68da      	ldr	r2, [r3, #12]
 800d2ee:	0792      	lsls	r2, r2, #30
 800d2f0:	d45f      	bmi.n	800d3b2 <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d2f2:	691a      	ldr	r2, [r3, #16]
 800d2f4:	0750      	lsls	r0, r2, #29
 800d2f6:	d502      	bpl.n	800d2fe <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800d2f8:	68da      	ldr	r2, [r3, #12]
 800d2fa:	0751      	lsls	r1, r2, #29
 800d2fc:	d446      	bmi.n	800d38c <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d2fe:	691a      	ldr	r2, [r3, #16]
 800d300:	0712      	lsls	r2, r2, #28
 800d302:	d502      	bpl.n	800d30a <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800d304:	68da      	ldr	r2, [r3, #12]
 800d306:	0710      	lsls	r0, r2, #28
 800d308:	d42e      	bmi.n	800d368 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d30a:	691a      	ldr	r2, [r3, #16]
 800d30c:	06d2      	lsls	r2, r2, #27
 800d30e:	d502      	bpl.n	800d316 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800d310:	68da      	ldr	r2, [r3, #12]
 800d312:	06d0      	lsls	r0, r2, #27
 800d314:	d418      	bmi.n	800d348 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d316:	691a      	ldr	r2, [r3, #16]
 800d318:	07d1      	lsls	r1, r2, #31
 800d31a:	d502      	bpl.n	800d322 <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800d31c:	68da      	ldr	r2, [r3, #12]
 800d31e:	07d2      	lsls	r2, r2, #31
 800d320:	d45d      	bmi.n	800d3de <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d322:	691a      	ldr	r2, [r3, #16]
 800d324:	0610      	lsls	r0, r2, #24
 800d326:	d502      	bpl.n	800d32e <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800d328:	68da      	ldr	r2, [r3, #12]
 800d32a:	0611      	lsls	r1, r2, #24
 800d32c:	d45f      	bmi.n	800d3ee <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d32e:	691a      	ldr	r2, [r3, #16]
 800d330:	0652      	lsls	r2, r2, #25
 800d332:	d502      	bpl.n	800d33a <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800d334:	68da      	ldr	r2, [r3, #12]
 800d336:	0650      	lsls	r0, r2, #25
 800d338:	d461      	bmi.n	800d3fe <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d33a:	691a      	ldr	r2, [r3, #16]
 800d33c:	0691      	lsls	r1, r2, #26
 800d33e:	d502      	bpl.n	800d346 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800d340:	68da      	ldr	r2, [r3, #12]
 800d342:	0692      	lsls	r2, r2, #26
 800d344:	d443      	bmi.n	800d3ce <HAL_TIM_IRQHandler+0xee>
}
 800d346:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d348:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d34c:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800d34e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800d350:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d352:	69db      	ldr	r3, [r3, #28]
 800d354:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d358:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800d35a:	d064      	beq.n	800d426 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800d35c:	f7ff ffba 	bl	800d2d4 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d360:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800d362:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d364:	7722      	strb	r2, [r4, #28]
 800d366:	e7d6      	b.n	800d316 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d368:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d36c:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800d36e:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800d370:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d372:	69db      	ldr	r3, [r3, #28]
 800d374:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800d376:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800d378:	d152      	bne.n	800d420 <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d37a:	f7ff ffa9 	bl	800d2d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d37e:	4620      	mov	r0, r4
 800d380:	f7ff ffaa 	bl	800d2d8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d384:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800d386:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d388:	7722      	strb	r2, [r4, #28]
 800d38a:	e7be      	b.n	800d30a <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d38c:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d390:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800d392:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800d394:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d396:	699b      	ldr	r3, [r3, #24]
 800d398:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800d39c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800d39e:	d13c      	bne.n	800d41a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d3a0:	f7ff ff96 	bl	800d2d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d3a4:	4620      	mov	r0, r4
 800d3a6:	f7ff ff97 	bl	800d2d8 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3aa:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800d3ac:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3ae:	7722      	strb	r2, [r4, #28]
 800d3b0:	e7a5      	b.n	800d2fe <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d3b2:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d3b6:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800d3b8:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800d3ba:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800d3bc:	699b      	ldr	r3, [r3, #24]
 800d3be:	079b      	lsls	r3, r3, #30
 800d3c0:	d025      	beq.n	800d40e <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800d3c2:	f7ff ff87 	bl	800d2d4 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3c6:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800d3c8:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800d3ca:	7722      	strb	r2, [r4, #28]
 800d3cc:	e791      	b.n	800d2f2 <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d3ce:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800d3d2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800d3d4:	611a      	str	r2, [r3, #16]
}
 800d3d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800d3da:	f000 b86b 	b.w	800d4b4 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800d3de:	f06f 0201 	mvn.w	r2, #1
 800d3e2:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800d3e4:	4620      	mov	r0, r4
 800d3e6:	f7f3 ff63 	bl	80012b0 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800d3ea:	6823      	ldr	r3, [r4, #0]
 800d3ec:	e799      	b.n	800d322 <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800d3ee:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800d3f2:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	f000 f85f 	bl	800d4b8 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800d3fa:	6823      	ldr	r3, [r4, #0]
 800d3fc:	e797      	b.n	800d32e <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800d3fe:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800d402:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800d404:	4620      	mov	r0, r4
 800d406:	f7ff ff69 	bl	800d2dc <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800d40a:	6823      	ldr	r3, [r4, #0]
 800d40c:	e795      	b.n	800d33a <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800d40e:	f7ff ff5f 	bl	800d2d0 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d412:	4620      	mov	r0, r4
 800d414:	f7ff ff60 	bl	800d2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d418:	e7d5      	b.n	800d3c6 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800d41a:	f7ff ff5b 	bl	800d2d4 <HAL_TIM_IC_CaptureCallback>
 800d41e:	e7c4      	b.n	800d3aa <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800d420:	f7ff ff58 	bl	800d2d4 <HAL_TIM_IC_CaptureCallback>
 800d424:	e7ae      	b.n	800d384 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800d426:	f7ff ff53 	bl	800d2d0 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800d42a:	4620      	mov	r0, r4
 800d42c:	f7ff ff54 	bl	800d2d8 <HAL_TIM_PWM_PulseFinishedCallback>
 800d430:	e796      	b.n	800d360 <HAL_TIM_IRQHandler+0x80>
 800d432:	bf00      	nop

0800d434 <HAL_TIMEx_MasterConfigSynchronization>:
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800d434:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 800d438:	2b01      	cmp	r3, #1
 800d43a:	d037      	beq.n	800d4ac <HAL_TIMEx_MasterConfigSynchronization+0x78>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800d43c:	6803      	ldr	r3, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800d43e:	2202      	movs	r2, #2
{
 800d440:	b430      	push	{r4, r5}
  htim->State = HAL_TIM_STATE_BUSY;
 800d442:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  tmpcr2 = htim->Instance->CR2;
 800d446:	685a      	ldr	r2, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d448:	680d      	ldr	r5, [r1, #0]
  tmpsmcr = htim->Instance->SMCR;
 800d44a:	689c      	ldr	r4, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800d44c:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800d450:	432a      	orrs	r2, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800d452:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800d454:	4a16      	ldr	r2, [pc, #88]	; (800d4b0 <HAL_TIMEx_MasterConfigSynchronization+0x7c>)
 800d456:	4293      	cmp	r3, r2
 800d458:	d01a      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d45a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800d45e:	d017      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d460:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800d464:	4293      	cmp	r3, r2
 800d466:	d013      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d468:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d46c:	4293      	cmp	r3, r2
 800d46e:	d00f      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d470:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800d474:	4293      	cmp	r3, r2
 800d476:	d00b      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d478:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800d47c:	4293      	cmp	r3, r2
 800d47e:	d007      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d480:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800d484:	4293      	cmp	r3, r2
 800d486:	d003      	beq.n	800d490 <HAL_TIMEx_MasterConfigSynchronization+0x5c>
 800d488:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800d48c:	4293      	cmp	r3, r2
 800d48e:	d104      	bne.n	800d49a <HAL_TIMEx_MasterConfigSynchronization+0x66>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d490:	684a      	ldr	r2, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 800d492:	f024 0480 	bic.w	r4, r4, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800d496:	4314      	orrs	r4, r2

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800d498:	609c      	str	r4, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;

  __HAL_UNLOCK(htim);
 800d49a:	2300      	movs	r3, #0
  htim->State = HAL_TIM_STATE_READY;
 800d49c:	2201      	movs	r2, #1
 800d49e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800d4a2:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c

  return HAL_OK;
}
 800d4a6:	bc30      	pop	{r4, r5}
  return HAL_OK;
 800d4a8:	4618      	mov	r0, r3
}
 800d4aa:	4770      	bx	lr
  __HAL_LOCK(htim);
 800d4ac:	2002      	movs	r0, #2
}
 800d4ae:	4770      	bx	lr
 800d4b0:	40010000 	.word	0x40010000

0800d4b4 <HAL_TIMEx_CommutCallback>:
 800d4b4:	4770      	bx	lr
 800d4b6:	bf00      	nop

0800d4b8 <HAL_TIMEx_BreakCallback>:
 800d4b8:	4770      	bx	lr
 800d4ba:	bf00      	nop

0800d4bc <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d4bc:	680b      	ldr	r3, [r1, #0]
{
 800d4be:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800d4c0:	b9d3      	cbnz	r3, 800d4f8 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d4c2:	6803      	ldr	r3, [r0, #0]
 800d4c4:	684c      	ldr	r4, [r1, #4]
 800d4c6:	688a      	ldr	r2, [r1, #8]
 800d4c8:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d4cc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d4d0:	4323      	orrs	r3, r4
 800d4d2:	4313      	orrs	r3, r2
 800d4d4:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800d4d8:	4323      	orrs	r3, r4
 800d4da:	4313      	orrs	r3, r2
 800d4dc:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800d4e0:	4323      	orrs	r3, r4
 800d4e2:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800d4e6:	4313      	orrs	r3, r2
 800d4e8:	432b      	orrs	r3, r5
 800d4ea:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800d4ec:	4323      	orrs	r3, r4
 800d4ee:	4313      	orrs	r3, r2
 800d4f0:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800d4f2:	bc30      	pop	{r4, r5}
 800d4f4:	2000      	movs	r0, #0
 800d4f6:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d4f8:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800d4fc:	6803      	ldr	r3, [r0, #0]
 800d4fe:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800d502:	4323      	orrs	r3, r4
 800d504:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800d506:	4313      	orrs	r3, r2
 800d508:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d50a:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800d50c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800d50e:	6843      	ldr	r3, [r0, #4]
 800d510:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800d514:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800d518:	4313      	orrs	r3, r2
 800d51a:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d51e:	4323      	orrs	r3, r4
 800d520:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d524:	4313      	orrs	r3, r2
 800d526:	432b      	orrs	r3, r5
 800d528:	698a      	ldr	r2, [r1, #24]
 800d52a:	4323      	orrs	r3, r4
 800d52c:	4313      	orrs	r3, r2
 800d52e:	6043      	str	r3, [r0, #4]
}
 800d530:	bc30      	pop	{r4, r5}
 800d532:	2000      	movs	r0, #0
 800d534:	4770      	bx	lr
 800d536:	bf00      	nop

0800d538 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800d538:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d53a:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800d53c:	bb02      	cbnz	r2, 800d580 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d53e:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d542:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d546:	3c01      	subs	r4, #1
 800d548:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d54c:	3a01      	subs	r2, #1
 800d54e:	4313      	orrs	r3, r2
 800d550:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800d554:	3c01      	subs	r4, #1
 800d556:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800d55a:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800d55e:	3a01      	subs	r2, #1
 800d560:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800d564:	698a      	ldr	r2, [r1, #24]
 800d566:	1e69      	subs	r1, r5, #1
 800d568:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d56c:	1e61      	subs	r1, r4, #1
 800d56e:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800d572:	3a01      	subs	r2, #1
 800d574:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d578:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800d57a:	bc30      	pop	{r4, r5}
 800d57c:	2000      	movs	r0, #0
 800d57e:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d580:	68cc      	ldr	r4, [r1, #12]
 800d582:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d584:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800d586:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800d58a:	3c01      	subs	r4, #1
 800d58c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800d590:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800d594:	3a01      	subs	r2, #1
 800d596:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800d59a:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800d59c:	e9d1 2400 	ldrd	r2, r4, [r1]
 800d5a0:	68c3      	ldr	r3, [r0, #12]
 800d5a2:	3c01      	subs	r4, #1
 800d5a4:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800d5a8:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800d5ac:	3a01      	subs	r2, #1
 800d5ae:	690c      	ldr	r4, [r1, #16]
 800d5b0:	4313      	orrs	r3, r2
 800d5b2:	698a      	ldr	r2, [r1, #24]
 800d5b4:	1e69      	subs	r1, r5, #1
 800d5b6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800d5ba:	1e61      	subs	r1, r4, #1
 800d5bc:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800d5c0:	3a01      	subs	r2, #1
 800d5c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800d5c6:	60c3      	str	r3, [r0, #12]
}
 800d5c8:	bc30      	pop	{r4, r5}
 800d5ca:	2000      	movs	r0, #0
 800d5cc:	4770      	bx	lr
 800d5ce:	bf00      	nop

0800d5d0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800d5d0:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5d2:	680b      	ldr	r3, [r1, #0]
{
 800d5d4:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5d6:	684a      	ldr	r2, [r1, #4]
{
 800d5d8:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800d5da:	4313      	orrs	r3, r2
 800d5dc:	6900      	ldr	r0, [r0, #16]
 800d5de:	68ca      	ldr	r2, [r1, #12]
 800d5e0:	0d80      	lsrs	r0, r0, #22
 800d5e2:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800d5e6:	688a      	ldr	r2, [r1, #8]
 800d5e8:	0580      	lsls	r0, r0, #22
 800d5ea:	4303      	orrs	r3, r0
 800d5ec:	3a01      	subs	r2, #1
 800d5ee:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800d5f2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800d5f4:	f7fc f956 	bl	80098a4 <HAL_GetTick>
 800d5f8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d5fa:	1c6b      	adds	r3, r5, #1
 800d5fc:	d105      	bne.n	800d60a <FMC_SDRAM_SendCommand+0x3a>
 800d5fe:	69a3      	ldr	r3, [r4, #24]
 800d600:	f013 0320 	ands.w	r3, r3, #32
 800d604:	d1fb      	bne.n	800d5fe <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800d606:	4618      	mov	r0, r3
}
 800d608:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800d60a:	69a3      	ldr	r3, [r4, #24]
 800d60c:	f013 0320 	ands.w	r3, r3, #32
 800d610:	d0f9      	beq.n	800d606 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800d612:	b125      	cbz	r5, 800d61e <FMC_SDRAM_SendCommand+0x4e>
 800d614:	f7fc f946 	bl	80098a4 <HAL_GetTick>
 800d618:	1b80      	subs	r0, r0, r6
 800d61a:	42a8      	cmp	r0, r5
 800d61c:	d9ed      	bls.n	800d5fa <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800d61e:	2003      	movs	r0, #3
}
 800d620:	bd70      	pop	{r4, r5, r6, pc}
 800d622:	bf00      	nop

0800d624 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d624:	6943      	ldr	r3, [r0, #20]
 800d626:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800d62a:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d62c:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800d630:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800d634:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800d636:	6151      	str	r1, [r2, #20]
}
 800d638:	4770      	bx	lr
 800d63a:	bf00      	nop

0800d63c <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800d63c:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800d63e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d642:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800d644:	f002 fafe 	bl	800fc44 <xTaskGetSchedulerState>
 800d648:	2801      	cmp	r0, #1
 800d64a:	d100      	bne.n	800d64e <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800d64c:	bd08      	pop	{r3, pc}
 800d64e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800d652:	f000 bc3f 	b.w	800ded4 <xPortSysTickHandler>
 800d656:	bf00      	nop

0800d658 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800d658:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800d65c:	b92b      	cbnz	r3, 800d66a <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800d65e:	4b06      	ldr	r3, [pc, #24]	; (800d678 <osKernelInitialize+0x20>)
 800d660:	6818      	ldr	r0, [r3, #0]
 800d662:	b928      	cbnz	r0, 800d670 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800d664:	2201      	movs	r2, #1
 800d666:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800d668:	4770      	bx	lr
    stat = osErrorISR;
 800d66a:	f06f 0005 	mvn.w	r0, #5
 800d66e:	4770      	bx	lr
    } else {
      stat = osError;
 800d670:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800d674:	4770      	bx	lr
 800d676:	bf00      	nop
 800d678:	20002ca0 	.word	0x20002ca0

0800d67c <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800d67c:	b510      	push	{r4, lr}
 800d67e:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d682:	b974      	cbnz	r4, 800d6a2 <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800d684:	4b08      	ldr	r3, [pc, #32]	; (800d6a8 <osKernelStart+0x2c>)
 800d686:	681a      	ldr	r2, [r3, #0]
 800d688:	2a01      	cmp	r2, #1
 800d68a:	d107      	bne.n	800d69c <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d68c:	4907      	ldr	r1, [pc, #28]	; (800d6ac <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800d68e:	2202      	movs	r2, #2
 800d690:	77cc      	strb	r4, [r1, #31]
 800d692:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800d694:	f002 f8b0 	bl	800f7f8 <vTaskStartScheduler>
      stat = osOK;
 800d698:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800d69a:	bd10      	pop	{r4, pc}
      stat = osError;
 800d69c:	f04f 30ff 	mov.w	r0, #4294967295
}
 800d6a0:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d6a2:	f06f 0005 	mvn.w	r0, #5
}
 800d6a6:	bd10      	pop	{r4, pc}
 800d6a8:	20002ca0 	.word	0x20002ca0
 800d6ac:	e000ed00 	.word	0xe000ed00

0800d6b0 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d6b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d6b2:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800d6b4:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800d6b6:	4615      	mov	r5, r2
  hTask = NULL;
 800d6b8:	9405      	str	r4, [sp, #20]
 800d6ba:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800d6be:	b9ea      	cbnz	r2, 800d6fc <osThreadNew+0x4c>
 800d6c0:	b350      	cbz	r0, 800d718 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800d6c2:	b1f5      	cbz	r5, 800d702 <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800d6c4:	69ab      	ldr	r3, [r5, #24]
 800d6c6:	bb5b      	cbnz	r3, 800d720 <osThreadNew+0x70>
 800d6c8:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d6ca:	686a      	ldr	r2, [r5, #4]
 800d6cc:	07d2      	lsls	r2, r2, #31
 800d6ce:	d423      	bmi.n	800d718 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800d6d0:	696e      	ldr	r6, [r5, #20]
 800d6d2:	b34e      	cbz	r6, 800d728 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800d6d4:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6d8:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800d6da:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6dc:	b34c      	cbz	r4, 800d732 <osThreadNew+0x82>
 800d6de:	68ea      	ldr	r2, [r5, #12]
 800d6e0:	2aab      	cmp	r2, #171	; 0xab
 800d6e2:	d919      	bls.n	800d718 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d6e4:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800d6e6:	b1bd      	cbz	r5, 800d718 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800d6e8:	b1b6      	cbz	r6, 800d718 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d6ea:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800d6ee:	9300      	str	r3, [sp, #0]
 800d6f0:	4662      	mov	r2, ip
 800d6f2:	460b      	mov	r3, r1
 800d6f4:	4639      	mov	r1, r7
 800d6f6:	f001 ffbd 	bl	800f674 <xTaskCreateStatic>
 800d6fa:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800d6fc:	4620      	mov	r0, r4
 800d6fe:	b007      	add	sp, #28
 800d700:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d702:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800d704:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d706:	ac05      	add	r4, sp, #20
 800d708:	9300      	str	r3, [sp, #0]
 800d70a:	9401      	str	r4, [sp, #4]
 800d70c:	460b      	mov	r3, r1
 800d70e:	4629      	mov	r1, r5
 800d710:	f001 ffea 	bl	800f6e8 <xTaskCreate>
 800d714:	2801      	cmp	r0, #1
 800d716:	d00a      	beq.n	800d72e <osThreadNew+0x7e>
        return (NULL);
 800d718:	2400      	movs	r4, #0
}
 800d71a:	4620      	mov	r0, r4
 800d71c:	b007      	add	sp, #28
 800d71e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800d720:	1e5c      	subs	r4, r3, #1
 800d722:	2c37      	cmp	r4, #55	; 0x37
 800d724:	d9d1      	bls.n	800d6ca <osThreadNew+0x1a>
 800d726:	e7f7      	b.n	800d718 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800d728:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d72c:	e7d4      	b.n	800d6d8 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800d72e:	9c05      	ldr	r4, [sp, #20]
 800d730:	e7e4      	b.n	800d6fc <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800d732:	68ee      	ldr	r6, [r5, #12]
 800d734:	2e00      	cmp	r6, #0
 800d736:	d1e1      	bne.n	800d6fc <osThreadNew+0x4c>
 800d738:	692d      	ldr	r5, [r5, #16]
 800d73a:	2d00      	cmp	r5, #0
 800d73c:	d1de      	bne.n	800d6fc <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800d73e:	fa1f f28c 	uxth.w	r2, ip
 800d742:	463d      	mov	r5, r7
 800d744:	e7df      	b.n	800d706 <osThreadNew+0x56>
 800d746:	bf00      	nop

0800d748 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d748:	b510      	push	{r4, lr}
 800d74a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d74e:	b92c      	cbnz	r4, 800d75c <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d750:	b900      	cbnz	r0, 800d754 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800d752:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800d754:	f001 fffa 	bl	800f74c <vTaskDelay>
    stat = osOK;
 800d758:	4620      	mov	r0, r4
}
 800d75a:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d75c:	f06f 0005 	mvn.w	r0, #5
}
 800d760:	bd10      	pop	{r4, pc}
 800d762:	bf00      	nop

0800d764 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d764:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d766:	b083      	sub	sp, #12
 800d768:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d76c:	b9fe      	cbnz	r6, 800d7ae <osSemaphoreNew+0x4a>
 800d76e:	b1f0      	cbz	r0, 800d7ae <osSemaphoreNew+0x4a>
 800d770:	4288      	cmp	r0, r1
 800d772:	460f      	mov	r7, r1
 800d774:	d31b      	bcc.n	800d7ae <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800d776:	4615      	mov	r5, r2
 800d778:	b192      	cbz	r2, 800d7a0 <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d77a:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800d77e:	b1d2      	cbz	r2, 800d7b6 <osSemaphoreNew+0x52>
 800d780:	2b4f      	cmp	r3, #79	; 0x4f
 800d782:	d914      	bls.n	800d7ae <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800d784:	2801      	cmp	r0, #1
 800d786:	d038      	beq.n	800d7fa <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d788:	f000 fd8a 	bl	800e2a0 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800d78c:	4604      	mov	r4, r0
 800d78e:	b170      	cbz	r0, 800d7ae <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800d790:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800d792:	4620      	mov	r0, r4
 800d794:	4629      	mov	r1, r5
 800d796:	f001 fc35 	bl	800f004 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d79a:	4620      	mov	r0, r4
 800d79c:	b003      	add	sp, #12
 800d79e:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800d7a0:	2801      	cmp	r0, #1
 800d7a2:	d012      	beq.n	800d7ca <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d7a4:	f000 fddc 	bl	800e360 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d7a8:	4604      	mov	r4, r0
 800d7aa:	2800      	cmp	r0, #0
 800d7ac:	d1f1      	bne.n	800d792 <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800d7ae:	2400      	movs	r4, #0
}
 800d7b0:	4620      	mov	r0, r4
 800d7b2:	b003      	add	sp, #12
 800d7b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d7b6:	2b00      	cmp	r3, #0
 800d7b8:	d1f9      	bne.n	800d7ae <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800d7ba:	2801      	cmp	r0, #1
 800d7bc:	d005      	beq.n	800d7ca <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d7be:	f000 fdcf 	bl	800e360 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d7c2:	4604      	mov	r4, r0
 800d7c4:	2800      	cmp	r0, #0
 800d7c6:	d1e3      	bne.n	800d790 <osSemaphoreNew+0x2c>
 800d7c8:	e7f1      	b.n	800d7ae <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800d7ca:	2203      	movs	r2, #3
 800d7cc:	2100      	movs	r1, #0
 800d7ce:	2001      	movs	r0, #1
 800d7d0:	f000 fd24 	bl	800e21c <xQueueGenericCreate>
 800d7d4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d7d6:	2c00      	cmp	r4, #0
 800d7d8:	d0e9      	beq.n	800d7ae <osSemaphoreNew+0x4a>
 800d7da:	b917      	cbnz	r7, 800d7e2 <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800d7dc:	2d00      	cmp	r5, #0
 800d7de:	d1d7      	bne.n	800d790 <osSemaphoreNew+0x2c>
 800d7e0:	e7d7      	b.n	800d792 <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d7e2:	2300      	movs	r3, #0
 800d7e4:	461a      	mov	r2, r3
 800d7e6:	4619      	mov	r1, r3
 800d7e8:	4620      	mov	r0, r4
 800d7ea:	f000 fdff 	bl	800e3ec <xQueueGenericSend>
 800d7ee:	2801      	cmp	r0, #1
 800d7f0:	d0f4      	beq.n	800d7dc <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d7f2:	4620      	mov	r0, r4
 800d7f4:	f001 fbc0 	bl	800ef78 <vQueueDelete>
 800d7f8:	e7d9      	b.n	800d7ae <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d7fa:	4613      	mov	r3, r2
 800d7fc:	2203      	movs	r2, #3
 800d7fe:	9200      	str	r2, [sp, #0]
 800d800:	4631      	mov	r1, r6
 800d802:	4632      	mov	r2, r6
 800d804:	f000 fc9c 	bl	800e140 <xQueueGenericCreateStatic>
 800d808:	4604      	mov	r4, r0
 800d80a:	e7e4      	b.n	800d7d6 <osSemaphoreNew+0x72>

0800d80c <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d80c:	b370      	cbz	r0, 800d86c <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d80e:	b510      	push	{r4, lr}
 800d810:	460c      	mov	r4, r1
 800d812:	b082      	sub	sp, #8
 800d814:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d818:	b1c3      	cbz	r3, 800d84c <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800d81a:	bb21      	cbnz	r1, 800d866 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d81c:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d81e:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d820:	f001 fb28 	bl	800ee74 <xQueueReceiveFromISR>
 800d824:	2801      	cmp	r0, #1
 800d826:	d11a      	bne.n	800d85e <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d828:	9b01      	ldr	r3, [sp, #4]
 800d82a:	b913      	cbnz	r3, 800d832 <osSemaphoreAcquire+0x26>
  stat = osOK;
 800d82c:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d82e:	b002      	add	sp, #8
 800d830:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d832:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d836:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d83a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d83e:	f3bf 8f4f 	dsb	sy
 800d842:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d846:	4620      	mov	r0, r4
}
 800d848:	b002      	add	sp, #8
 800d84a:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d84c:	f001 f988 	bl	800eb60 <xQueueSemaphoreTake>
 800d850:	2801      	cmp	r0, #1
 800d852:	d0eb      	beq.n	800d82c <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800d854:	b11c      	cbz	r4, 800d85e <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800d856:	f06f 0001 	mvn.w	r0, #1
}
 800d85a:	b002      	add	sp, #8
 800d85c:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800d85e:	f06f 0002 	mvn.w	r0, #2
}
 800d862:	b002      	add	sp, #8
 800d864:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800d866:	f06f 0003 	mvn.w	r0, #3
 800d86a:	e7e0      	b.n	800d82e <osSemaphoreAcquire+0x22>
 800d86c:	f06f 0003 	mvn.w	r0, #3
}
 800d870:	4770      	bx	lr
 800d872:	bf00      	nop

0800d874 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d874:	b330      	cbz	r0, 800d8c4 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d876:	b510      	push	{r4, lr}
 800d878:	b082      	sub	sp, #8
 800d87a:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d87e:	b1ab      	cbz	r3, 800d8ac <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d880:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d882:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d884:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d886:	f000 ff95 	bl	800e7b4 <xQueueGiveFromISR>
 800d88a:	2801      	cmp	r0, #1
 800d88c:	d117      	bne.n	800d8be <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d88e:	9b01      	ldr	r3, [sp, #4]
 800d890:	b193      	cbz	r3, 800d8b8 <osSemaphoreRelease+0x44>
 800d892:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d896:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d89a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d89e:	f3bf 8f4f 	dsb	sy
 800d8a2:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d8a6:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d8a8:	b002      	add	sp, #8
 800d8aa:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d8ac:	461a      	mov	r2, r3
 800d8ae:	4619      	mov	r1, r3
 800d8b0:	f000 fd9c 	bl	800e3ec <xQueueGenericSend>
 800d8b4:	2801      	cmp	r0, #1
 800d8b6:	d102      	bne.n	800d8be <osSemaphoreRelease+0x4a>
  stat = osOK;
 800d8b8:	2000      	movs	r0, #0
}
 800d8ba:	b002      	add	sp, #8
 800d8bc:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800d8be:	f06f 0002 	mvn.w	r0, #2
 800d8c2:	e7fa      	b.n	800d8ba <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800d8c4:	f06f 0003 	mvn.w	r0, #3
}
 800d8c8:	4770      	bx	lr
 800d8ca:	bf00      	nop

0800d8cc <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d8cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8ce:	b085      	sub	sp, #20
 800d8d0:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d8d4:	b987      	cbnz	r7, 800d8f8 <osMessageQueueNew+0x2c>
 800d8d6:	4605      	mov	r5, r0
 800d8d8:	b170      	cbz	r0, 800d8f8 <osMessageQueueNew+0x2c>
 800d8da:	b169      	cbz	r1, 800d8f8 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800d8dc:	4614      	mov	r4, r2
 800d8de:	b1ea      	cbz	r2, 800d91c <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d8e0:	6893      	ldr	r3, [r2, #8]
 800d8e2:	b163      	cbz	r3, 800d8fe <osMessageQueueNew+0x32>
 800d8e4:	68d2      	ldr	r2, [r2, #12]
 800d8e6:	2a4f      	cmp	r2, #79	; 0x4f
 800d8e8:	d906      	bls.n	800d8f8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d8ea:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d8ec:	b122      	cbz	r2, 800d8f8 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d8ee:	6966      	ldr	r6, [r4, #20]
 800d8f0:	fb01 f505 	mul.w	r5, r1, r5
 800d8f4:	42ae      	cmp	r6, r5
 800d8f6:	d21c      	bcs.n	800d932 <osMessageQueueNew+0x66>
  hQueue = NULL;
 800d8f8:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d8fa:	b005      	add	sp, #20
 800d8fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d8fe:	68d3      	ldr	r3, [r2, #12]
 800d900:	2b00      	cmp	r3, #0
 800d902:	d1f9      	bne.n	800d8f8 <osMessageQueueNew+0x2c>
 800d904:	6913      	ldr	r3, [r2, #16]
 800d906:	2b00      	cmp	r3, #0
 800d908:	d1f6      	bne.n	800d8f8 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d90a:	6952      	ldr	r2, [r2, #20]
 800d90c:	2a00      	cmp	r2, #0
 800d90e:	d1f3      	bne.n	800d8f8 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d910:	f000 fc84 	bl	800e21c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d914:	2800      	cmp	r0, #0
 800d916:	d0ef      	beq.n	800d8f8 <osMessageQueueNew+0x2c>
        name = attr->name;
 800d918:	6824      	ldr	r4, [r4, #0]
 800d91a:	e003      	b.n	800d924 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d91c:	f000 fc7e 	bl	800e21c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d920:	2800      	cmp	r0, #0
 800d922:	d0e9      	beq.n	800d8f8 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800d924:	4621      	mov	r1, r4
 800d926:	9003      	str	r0, [sp, #12]
 800d928:	f001 fb6c 	bl	800f004 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d92c:	9803      	ldr	r0, [sp, #12]
}
 800d92e:	b005      	add	sp, #20
 800d930:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d932:	9700      	str	r7, [sp, #0]
 800d934:	f000 fc04 	bl	800e140 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d938:	2800      	cmp	r0, #0
 800d93a:	d1ed      	bne.n	800d918 <osMessageQueueNew+0x4c>
 800d93c:	e7dc      	b.n	800d8f8 <osMessageQueueNew+0x2c>
 800d93e:	bf00      	nop

0800d940 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d940:	b570      	push	{r4, r5, r6, lr}
 800d942:	461c      	mov	r4, r3
 800d944:	b082      	sub	sp, #8
 800d946:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d94a:	b1be      	cbz	r6, 800d97c <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d94c:	b350      	cbz	r0, 800d9a4 <osMessageQueuePut+0x64>
 800d94e:	b349      	cbz	r1, 800d9a4 <osMessageQueuePut+0x64>
 800d950:	bb43      	cbnz	r3, 800d9a4 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d952:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d954:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d956:	f000 fec7 	bl	800e6e8 <xQueueGenericSendFromISR>
 800d95a:	2801      	cmp	r0, #1
 800d95c:	d11e      	bne.n	800d99c <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d95e:	9b01      	ldr	r3, [sp, #4]
 800d960:	b1cb      	cbz	r3, 800d996 <osMessageQueuePut+0x56>
 800d962:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d966:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d96a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d96e:	f3bf 8f4f 	dsb	sy
 800d972:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d976:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d978:	b002      	add	sp, #8
 800d97a:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d97c:	b190      	cbz	r0, 800d9a4 <osMessageQueuePut+0x64>
 800d97e:	b189      	cbz	r1, 800d9a4 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d980:	4633      	mov	r3, r6
 800d982:	4622      	mov	r2, r4
 800d984:	f000 fd32 	bl	800e3ec <xQueueGenericSend>
 800d988:	2801      	cmp	r0, #1
 800d98a:	d004      	beq.n	800d996 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800d98c:	b134      	cbz	r4, 800d99c <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800d98e:	f06f 0001 	mvn.w	r0, #1
}
 800d992:	b002      	add	sp, #8
 800d994:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800d996:	2000      	movs	r0, #0
}
 800d998:	b002      	add	sp, #8
 800d99a:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800d99c:	f06f 0002 	mvn.w	r0, #2
}
 800d9a0:	b002      	add	sp, #8
 800d9a2:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800d9a4:	f06f 0003 	mvn.w	r0, #3
 800d9a8:	e7e6      	b.n	800d978 <osMessageQueuePut+0x38>
 800d9aa:	bf00      	nop

0800d9ac <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d9ac:	b530      	push	{r4, r5, lr}
 800d9ae:	461c      	mov	r4, r3
 800d9b0:	b083      	sub	sp, #12
 800d9b2:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d9b6:	b1bb      	cbz	r3, 800d9e8 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d9b8:	b348      	cbz	r0, 800da0e <osMessageQueueGet+0x62>
 800d9ba:	b341      	cbz	r1, 800da0e <osMessageQueueGet+0x62>
 800d9bc:	bb3c      	cbnz	r4, 800da0e <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d9be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d9c0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d9c2:	f001 fa57 	bl	800ee74 <xQueueReceiveFromISR>
 800d9c6:	2801      	cmp	r0, #1
 800d9c8:	d11d      	bne.n	800da06 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d9ca:	9b01      	ldr	r3, [sp, #4]
 800d9cc:	b1c3      	cbz	r3, 800da00 <osMessageQueueGet+0x54>
 800d9ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d9d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d9d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d9da:	f3bf 8f4f 	dsb	sy
 800d9de:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800d9e2:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800d9e4:	b003      	add	sp, #12
 800d9e6:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d9e8:	b188      	cbz	r0, 800da0e <osMessageQueueGet+0x62>
 800d9ea:	b181      	cbz	r1, 800da0e <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d9ec:	4622      	mov	r2, r4
 800d9ee:	f000 ff39 	bl	800e864 <xQueueReceive>
 800d9f2:	2801      	cmp	r0, #1
 800d9f4:	d004      	beq.n	800da00 <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800d9f6:	b134      	cbz	r4, 800da06 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800d9f8:	f06f 0001 	mvn.w	r0, #1
}
 800d9fc:	b003      	add	sp, #12
 800d9fe:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800da00:	2000      	movs	r0, #0
}
 800da02:	b003      	add	sp, #12
 800da04:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800da06:	f06f 0002 	mvn.w	r0, #2
}
 800da0a:	b003      	add	sp, #12
 800da0c:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800da0e:	f06f 0003 	mvn.w	r0, #3
 800da12:	e7e7      	b.n	800d9e4 <osMessageQueueGet+0x38>

0800da14 <osMessageQueueGetCount>:
 800da14:	b130      	cbz	r0, 800da24 <osMessageQueueGetCount+0x10>
 800da16:	f3ef 8305 	mrs	r3, IPSR
 800da1a:	b10b      	cbz	r3, 800da20 <osMessageQueueGetCount+0xc>
 800da1c:	f001 ba9e 	b.w	800ef5c <uxQueueMessagesWaitingFromISR>
 800da20:	f001 ba86 	b.w	800ef30 <uxQueueMessagesWaiting>
 800da24:	4770      	bx	lr
 800da26:	bf00      	nop

0800da28 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800da28:	4b04      	ldr	r3, [pc, #16]	; (800da3c <vApplicationGetIdleTaskMemory+0x14>)
 800da2a:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800da2c:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800da2e:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800da30:	4c03      	ldr	r4, [pc, #12]	; (800da40 <vApplicationGetIdleTaskMemory+0x18>)
 800da32:	600c      	str	r4, [r1, #0]
}
 800da34:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800da38:	6013      	str	r3, [r2, #0]
}
 800da3a:	4770      	bx	lr
 800da3c:	20002bf4 	.word	0x20002bf4
 800da40:	200029f4 	.word	0x200029f4

0800da44 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800da44:	4b05      	ldr	r3, [pc, #20]	; (800da5c <vApplicationGetTimerTaskMemory+0x18>)
 800da46:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800da48:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da4a:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800da4e:	4c04      	ldr	r4, [pc, #16]	; (800da60 <vApplicationGetTimerTaskMemory+0x1c>)
 800da50:	600c      	str	r4, [r1, #0]
}
 800da52:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800da56:	6013      	str	r3, [r2, #0]
}
 800da58:	4770      	bx	lr
 800da5a:	bf00      	nop
 800da5c:	200030a4 	.word	0x200030a4
 800da60:	20002ca4 	.word	0x20002ca4

0800da64 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800da64:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da68:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800da6a:	f001 ff41 	bl	800f8f0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800da6e:	4a54      	ldr	r2, [pc, #336]	; (800dbc0 <pvPortMalloc+0x15c>)
 800da70:	6816      	ldr	r6, [r2, #0]
 800da72:	2e00      	cmp	r6, #0
 800da74:	d06e      	beq.n	800db54 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800da76:	4b53      	ldr	r3, [pc, #332]	; (800dbc4 <pvPortMalloc+0x160>)
 800da78:	681f      	ldr	r7, [r3, #0]
 800da7a:	423d      	tst	r5, r7
 800da7c:	d12e      	bne.n	800dadc <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800da7e:	b36d      	cbz	r5, 800dadc <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800da80:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800da84:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800da86:	bf1c      	itt	ne
 800da88:	f024 0407 	bicne.w	r4, r4, #7
 800da8c:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800da8e:	b32c      	cbz	r4, 800dadc <pvPortMalloc+0x78>
 800da90:	f8df c144 	ldr.w	ip, [pc, #324]	; 800dbd8 <pvPortMalloc+0x174>
 800da94:	f8dc 5000 	ldr.w	r5, [ip]
 800da98:	42a5      	cmp	r5, r4
 800da9a:	d31f      	bcc.n	800dadc <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800da9c:	484a      	ldr	r0, [pc, #296]	; (800dbc8 <pvPortMalloc+0x164>)
 800da9e:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800daa0:	e003      	b.n	800daaa <pvPortMalloc+0x46>
 800daa2:	681a      	ldr	r2, [r3, #0]
 800daa4:	b122      	cbz	r2, 800dab0 <pvPortMalloc+0x4c>
 800daa6:	4618      	mov	r0, r3
 800daa8:	4613      	mov	r3, r2
 800daaa:	6859      	ldr	r1, [r3, #4]
 800daac:	42a1      	cmp	r1, r4
 800daae:	d3f8      	bcc.n	800daa2 <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800dab0:	42b3      	cmp	r3, r6
 800dab2:	d013      	beq.n	800dadc <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800dab4:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dab6:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800dab8:	f858 eb08 	ldr.w	lr, [r8], #8
 800dabc:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800dac0:	2a10      	cmp	r2, #16
 800dac2:	d929      	bls.n	800db18 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800dac4:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800dac6:	0748      	lsls	r0, r1, #29
 800dac8:	d00f      	beq.n	800daea <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800daca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dace:	f383 8811 	msr	BASEPRI, r3
 800dad2:	f3bf 8f6f 	isb	sy
 800dad6:	f3bf 8f4f 	dsb	sy
 800dada:	e7fe      	b.n	800dada <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800dadc:	f001 ff10 	bl	800f900 <xTaskResumeAll>
 800dae0:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800dae4:	4640      	mov	r0, r8
 800dae6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800daea:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800daec:	4a36      	ldr	r2, [pc, #216]	; (800dbc8 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800daee:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800daf0:	4614      	mov	r4, r2
 800daf2:	6812      	ldr	r2, [r2, #0]
 800daf4:	4291      	cmp	r1, r2
 800daf6:	d8fb      	bhi.n	800daf0 <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800daf8:	6860      	ldr	r0, [r4, #4]
 800dafa:	eb04 0e00 	add.w	lr, r4, r0
 800dafe:	4571      	cmp	r1, lr
 800db00:	d04b      	beq.n	800db9a <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800db02:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800db06:	eb01 000e 	add.w	r0, r1, lr
 800db0a:	4282      	cmp	r2, r0
 800db0c:	d051      	beq.n	800dbb2 <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800db0e:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800db10:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800db12:	bf18      	it	ne
 800db14:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db16:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800db18:	4a2c      	ldr	r2, [pc, #176]	; (800dbcc <pvPortMalloc+0x168>)
 800db1a:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db1c:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800db1e:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800db20:	bf38      	it	cc
 800db22:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800db24:	4a2a      	ldr	r2, [pc, #168]	; (800dbd0 <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800db26:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800db2a:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800db2c:	2000      	movs	r0, #0
 800db2e:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800db32:	6813      	ldr	r3, [r2, #0]
 800db34:	3301      	adds	r3, #1
 800db36:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800db38:	f001 fee2 	bl	800f900 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800db3c:	f018 0f07 	tst.w	r8, #7
 800db40:	d0d0      	beq.n	800dae4 <pvPortMalloc+0x80>
 800db42:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db46:	f383 8811 	msr	BASEPRI, r3
 800db4a:	f3bf 8f6f 	isb	sy
 800db4e:	f3bf 8f4f 	dsb	sy
 800db52:	e7fe      	b.n	800db52 <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800db54:	4b1f      	ldr	r3, [pc, #124]	; (800dbd4 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800db56:	075e      	lsls	r6, r3, #29
 800db58:	d118      	bne.n	800db8c <pvPortMalloc+0x128>
 800db5a:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800db5e:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800db60:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800db62:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800db66:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db68:	4a18      	ldr	r2, [pc, #96]	; (800dbcc <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db6a:	4817      	ldr	r0, [pc, #92]	; (800dbc8 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db6c:	4c15      	ldr	r4, [pc, #84]	; (800dbc4 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800db6e:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800db70:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db72:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db74:	4a18      	ldr	r2, [pc, #96]	; (800dbd8 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db76:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800db7a:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800db7c:	2200      	movs	r2, #0
 800db7e:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800db80:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800db82:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800db86:	e9c1 6300 	strd	r6, r3, [r1]
}
 800db8a:	e776      	b.n	800da7a <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800db8c:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800db8e:	f021 0107 	bic.w	r1, r1, #7
 800db92:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800db96:	460b      	mov	r3, r1
 800db98:	e7e2      	b.n	800db60 <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800db9a:	6849      	ldr	r1, [r1, #4]
 800db9c:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dba0:	eb04 010e 	add.w	r1, r4, lr
 800dba4:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dba6:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbaa:	d001      	beq.n	800dbb0 <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbac:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800dbae:	e7b2      	b.n	800db16 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dbb0:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dbb2:	42b2      	cmp	r2, r6
 800dbb4:	d0ab      	beq.n	800db0e <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dbb6:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbb8:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dbba:	4470      	add	r0, lr
 800dbbc:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dbbe:	e7a6      	b.n	800db0e <pvPortMalloc+0xaa>
 800dbc0:	20003150 	.word	0x20003150
 800dbc4:	20013154 	.word	0x20013154
 800dbc8:	20013168 	.word	0x20013168
 800dbcc:	2001315c 	.word	0x2001315c
 800dbd0:	20013160 	.word	0x20013160
 800dbd4:	20003154 	.word	0x20003154
 800dbd8:	20013158 	.word	0x20013158

0800dbdc <vPortFree>:
	if( pv != NULL )
 800dbdc:	b1d0      	cbz	r0, 800dc14 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dbde:	4a2c      	ldr	r2, [pc, #176]	; (800dc90 <vPortFree+0xb4>)
 800dbe0:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800dbe4:	6812      	ldr	r2, [r2, #0]
 800dbe6:	4213      	tst	r3, r2
 800dbe8:	d00b      	beq.n	800dc02 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800dbea:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800dbee:	b191      	cbz	r1, 800dc16 <vPortFree+0x3a>
 800dbf0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbf4:	f383 8811 	msr	BASEPRI, r3
 800dbf8:	f3bf 8f6f 	isb	sy
 800dbfc:	f3bf 8f4f 	dsb	sy
 800dc00:	e7fe      	b.n	800dc00 <vPortFree+0x24>
 800dc02:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc06:	f383 8811 	msr	BASEPRI, r3
 800dc0a:	f3bf 8f6f 	isb	sy
 800dc0e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800dc12:	e7fe      	b.n	800dc12 <vPortFree+0x36>
 800dc14:	4770      	bx	lr
{
 800dc16:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc18:	ea23 0302 	bic.w	r3, r3, r2
{
 800dc1c:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc1e:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc22:	4c1c      	ldr	r4, [pc, #112]	; (800dc94 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800dc24:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800dc26:	f001 fe63 	bl	800f8f0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc2a:	9801      	ldr	r0, [sp, #4]
 800dc2c:	6822      	ldr	r2, [r4, #0]
 800dc2e:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc32:	4b19      	ldr	r3, [pc, #100]	; (800dc98 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc34:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800dc36:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800dc38:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800dc3a:	461a      	mov	r2, r3
 800dc3c:	681b      	ldr	r3, [r3, #0]
 800dc3e:	4298      	cmp	r0, r3
 800dc40:	d8fb      	bhi.n	800dc3a <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800dc42:	6854      	ldr	r4, [r2, #4]
 800dc44:	eb02 0e04 	add.w	lr, r2, r4
 800dc48:	4570      	cmp	r0, lr
 800dc4a:	d010      	beq.n	800dc6e <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc4c:	eb00 0c01 	add.w	ip, r0, r1
 800dc50:	4563      	cmp	r3, ip
 800dc52:	d014      	beq.n	800dc7e <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800dc54:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc56:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800dc58:	bf18      	it	ne
 800dc5a:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800dc5c:	4a0f      	ldr	r2, [pc, #60]	; (800dc9c <vPortFree+0xc0>)
 800dc5e:	6813      	ldr	r3, [r2, #0]
 800dc60:	3301      	adds	r3, #1
 800dc62:	6013      	str	r3, [r2, #0]
}
 800dc64:	b002      	add	sp, #8
 800dc66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800dc6a:	f001 be49 	b.w	800f900 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc6e:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc70:	1850      	adds	r0, r2, r1
 800dc72:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800dc74:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc76:	d001      	beq.n	800dc7c <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc78:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800dc7a:	e7ef      	b.n	800dc5c <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800dc7c:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800dc7e:	4c08      	ldr	r4, [pc, #32]	; (800dca0 <vPortFree+0xc4>)
 800dc80:	6824      	ldr	r4, [r4, #0]
 800dc82:	42a3      	cmp	r3, r4
 800dc84:	d0e6      	beq.n	800dc54 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc86:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800dc8a:	4421      	add	r1, r4
 800dc8c:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800dc8e:	e7e1      	b.n	800dc54 <vPortFree+0x78>
 800dc90:	20013154 	.word	0x20013154
 800dc94:	20013158 	.word	0x20013158
 800dc98:	20013168 	.word	0x20013168
 800dc9c:	20013164 	.word	0x20013164
 800dca0:	20003150 	.word	0x20003150

0800dca4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dca4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dca8:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dcac:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800dcae:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800dcb2:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800dcb6:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800dcb8:	4770      	bx	lr
 800dcba:	bf00      	nop

0800dcbc <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800dcbc:	2300      	movs	r3, #0
 800dcbe:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800dcc0:	4770      	bx	lr
 800dcc2:	bf00      	nop

0800dcc4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800dcc4:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800dcc6:	689a      	ldr	r2, [r3, #8]
 800dcc8:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dcca:	6802      	ldr	r2, [r0, #0]
{
 800dccc:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dcce:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800dcd0:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dcd2:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800dcd4:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800dcd6:	6099      	str	r1, [r3, #8]
}
 800dcd8:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800dcdc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800dcde:	6002      	str	r2, [r0, #0]
}
 800dce0:	4770      	bx	lr
 800dce2:	bf00      	nop

0800dce4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800dce4:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800dce6:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800dce8:	1c6b      	adds	r3, r5, #1
 800dcea:	d010      	beq.n	800dd0e <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800dcec:	f100 0308 	add.w	r3, r0, #8
 800dcf0:	461c      	mov	r4, r3
 800dcf2:	685b      	ldr	r3, [r3, #4]
 800dcf4:	681a      	ldr	r2, [r3, #0]
 800dcf6:	42aa      	cmp	r2, r5
 800dcf8:	d9fa      	bls.n	800dcf0 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800dcfa:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dcfc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800dcfe:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800dd00:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800dd02:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800dd04:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800dd06:	6108      	str	r0, [r1, #16]
}
 800dd08:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800dd0a:	6002      	str	r2, [r0, #0]
}
 800dd0c:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800dd0e:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800dd10:	6863      	ldr	r3, [r4, #4]
 800dd12:	e7f2      	b.n	800dcfa <vListInsert+0x16>

0800dd14 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800dd14:	6903      	ldr	r3, [r0, #16]
{
 800dd16:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dd18:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800dd1c:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800dd1e:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800dd20:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800dd22:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800dd24:	bf08      	it	eq
 800dd26:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800dd28:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800dd2a:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800dd2e:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800dd30:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800dd32:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800dd34:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800dd36:	6818      	ldr	r0, [r3, #0]
}
 800dd38:	4770      	bx	lr
 800dd3a:	bf00      	nop

0800dd3c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800dd3c:	4808      	ldr	r0, [pc, #32]	; (800dd60 <prvPortStartFirstTask+0x24>)
 800dd3e:	6800      	ldr	r0, [r0, #0]
 800dd40:	6800      	ldr	r0, [r0, #0]
 800dd42:	f380 8808 	msr	MSP, r0
 800dd46:	f04f 0000 	mov.w	r0, #0
 800dd4a:	f380 8814 	msr	CONTROL, r0
 800dd4e:	b662      	cpsie	i
 800dd50:	b661      	cpsie	f
 800dd52:	f3bf 8f4f 	dsb	sy
 800dd56:	f3bf 8f6f 	isb	sy
 800dd5a:	df00      	svc	0
 800dd5c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800dd5e:	0000      	.short	0x0000
 800dd60:	e000ed08 	.word	0xe000ed08

0800dd64 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800dd64:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800dd74 <vPortEnableVFP+0x10>
 800dd68:	6801      	ldr	r1, [r0, #0]
 800dd6a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800dd6e:	6001      	str	r1, [r0, #0]
 800dd70:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800dd72:	0000      	.short	0x0000
 800dd74:	e000ed88 	.word	0xe000ed88

0800dd78 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800dd78:	4b0e      	ldr	r3, [pc, #56]	; (800ddb4 <prvTaskExitError+0x3c>)
 800dd7a:	681b      	ldr	r3, [r3, #0]
{
 800dd7c:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800dd7e:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800dd80:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800dd82:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800dd84:	d008      	beq.n	800dd98 <prvTaskExitError+0x20>
 800dd86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd8a:	f383 8811 	msr	BASEPRI, r3
 800dd8e:	f3bf 8f6f 	isb	sy
 800dd92:	f3bf 8f4f 	dsb	sy
 800dd96:	e7fe      	b.n	800dd96 <prvTaskExitError+0x1e>
 800dd98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd9c:	f383 8811 	msr	BASEPRI, r3
 800dda0:	f3bf 8f6f 	isb	sy
 800dda4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800dda8:	9b01      	ldr	r3, [sp, #4]
 800ddaa:	2b00      	cmp	r3, #0
 800ddac:	d0fc      	beq.n	800dda8 <prvTaskExitError+0x30>
}
 800ddae:	b002      	add	sp, #8
 800ddb0:	4770      	bx	lr
 800ddb2:	bf00      	nop
 800ddb4:	20000084 	.word	0x20000084

0800ddb8 <pxPortInitialiseStack>:
{
 800ddb8:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ddba:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ddbe:	4c07      	ldr	r4, [pc, #28]	; (800dddc <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ddc0:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ddc4:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ddc8:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ddcc:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ddd0:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800ddd4:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ddd8:	3844      	subs	r0, #68	; 0x44
 800ddda:	4770      	bx	lr
 800dddc:	0800dd79 	.word	0x0800dd79

0800dde0 <SVC_Handler>:
	__asm volatile (
 800dde0:	4b07      	ldr	r3, [pc, #28]	; (800de00 <pxCurrentTCBConst2>)
 800dde2:	6819      	ldr	r1, [r3, #0]
 800dde4:	6808      	ldr	r0, [r1, #0]
 800dde6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ddea:	f380 8809 	msr	PSP, r0
 800ddee:	f3bf 8f6f 	isb	sy
 800ddf2:	f04f 0000 	mov.w	r0, #0
 800ddf6:	f380 8811 	msr	BASEPRI, r0
 800ddfa:	4770      	bx	lr
 800ddfc:	f3af 8000 	nop.w

0800de00 <pxCurrentTCBConst2>:
 800de00:	200131b8 	.word	0x200131b8

0800de04 <vPortEnterCritical>:
 800de04:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de08:	f383 8811 	msr	BASEPRI, r3
 800de0c:	f3bf 8f6f 	isb	sy
 800de10:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800de14:	4a0b      	ldr	r2, [pc, #44]	; (800de44 <vPortEnterCritical+0x40>)
 800de16:	6813      	ldr	r3, [r2, #0]
 800de18:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800de1a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800de1c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800de1e:	d000      	beq.n	800de22 <vPortEnterCritical+0x1e>
}
 800de20:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800de22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de26:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800de2a:	b2db      	uxtb	r3, r3
 800de2c:	2b00      	cmp	r3, #0
 800de2e:	d0f7      	beq.n	800de20 <vPortEnterCritical+0x1c>
 800de30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de34:	f383 8811 	msr	BASEPRI, r3
 800de38:	f3bf 8f6f 	isb	sy
 800de3c:	f3bf 8f4f 	dsb	sy
 800de40:	e7fe      	b.n	800de40 <vPortEnterCritical+0x3c>
 800de42:	bf00      	nop
 800de44:	20000084 	.word	0x20000084

0800de48 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800de48:	4a08      	ldr	r2, [pc, #32]	; (800de6c <vPortExitCritical+0x24>)
 800de4a:	6813      	ldr	r3, [r2, #0]
 800de4c:	b943      	cbnz	r3, 800de60 <vPortExitCritical+0x18>
 800de4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de52:	f383 8811 	msr	BASEPRI, r3
 800de56:	f3bf 8f6f 	isb	sy
 800de5a:	f3bf 8f4f 	dsb	sy
 800de5e:	e7fe      	b.n	800de5e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800de60:	3b01      	subs	r3, #1
 800de62:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800de64:	b90b      	cbnz	r3, 800de6a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800de66:	f383 8811 	msr	BASEPRI, r3
}
 800de6a:	4770      	bx	lr
 800de6c:	20000084 	.word	0x20000084

0800de70 <PendSV_Handler>:
	__asm volatile
 800de70:	f3ef 8009 	mrs	r0, PSP
 800de74:	f3bf 8f6f 	isb	sy
 800de78:	4b15      	ldr	r3, [pc, #84]	; (800ded0 <pxCurrentTCBConst>)
 800de7a:	681a      	ldr	r2, [r3, #0]
 800de7c:	f01e 0f10 	tst.w	lr, #16
 800de80:	bf08      	it	eq
 800de82:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800de86:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de8a:	6010      	str	r0, [r2, #0]
 800de8c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800de90:	f04f 0050 	mov.w	r0, #80	; 0x50
 800de94:	f380 8811 	msr	BASEPRI, r0
 800de98:	f3bf 8f4f 	dsb	sy
 800de9c:	f3bf 8f6f 	isb	sy
 800dea0:	f001 fd54 	bl	800f94c <vTaskSwitchContext>
 800dea4:	f04f 0000 	mov.w	r0, #0
 800dea8:	f380 8811 	msr	BASEPRI, r0
 800deac:	bc09      	pop	{r0, r3}
 800deae:	6819      	ldr	r1, [r3, #0]
 800deb0:	6808      	ldr	r0, [r1, #0]
 800deb2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deb6:	f01e 0f10 	tst.w	lr, #16
 800deba:	bf08      	it	eq
 800debc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800dec0:	f380 8809 	msr	PSP, r0
 800dec4:	f3bf 8f6f 	isb	sy
 800dec8:	4770      	bx	lr
 800deca:	bf00      	nop
 800decc:	f3af 8000 	nop.w

0800ded0 <pxCurrentTCBConst>:
 800ded0:	200131b8 	.word	0x200131b8

0800ded4 <xPortSysTickHandler>:
{
 800ded4:	b508      	push	{r3, lr}
	__asm volatile
 800ded6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deda:	f383 8811 	msr	BASEPRI, r3
 800dede:	f3bf 8f6f 	isb	sy
 800dee2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800dee6:	f001 fd21 	bl	800f92c <xTaskIncrementTick>
 800deea:	b128      	cbz	r0, 800def8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800deec:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800def0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800def4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800def8:	2300      	movs	r3, #0
 800defa:	f383 8811 	msr	BASEPRI, r3
}
 800defe:	bd08      	pop	{r3, pc}

0800df00 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800df00:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800df04:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df06:	4906      	ldr	r1, [pc, #24]	; (800df20 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800df08:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800df0a:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df0c:	680b      	ldr	r3, [r1, #0]
 800df0e:	4905      	ldr	r1, [pc, #20]	; (800df24 <vPortSetupTimerInterrupt+0x24>)
 800df10:	fba1 1303 	umull	r1, r3, r1, r3
 800df14:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800df16:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800df18:	3b01      	subs	r3, #1
 800df1a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800df1c:	6110      	str	r0, [r2, #16]
}
 800df1e:	4770      	bx	lr
 800df20:	20000078 	.word	0x20000078
 800df24:	10624dd3 	.word	0x10624dd3

0800df28 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800df28:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df2c:	4a49      	ldr	r2, [pc, #292]	; (800e054 <xPortStartScheduler+0x12c>)
 800df2e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800df32:	4291      	cmp	r1, r2
 800df34:	d043      	beq.n	800dfbe <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800df36:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800df3a:	4b47      	ldr	r3, [pc, #284]	; (800e058 <xPortStartScheduler+0x130>)
 800df3c:	429a      	cmp	r2, r3
 800df3e:	d035      	beq.n	800dfac <xPortStartScheduler+0x84>
{
 800df40:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df42:	4b46      	ldr	r3, [pc, #280]	; (800e05c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df44:	4846      	ldr	r0, [pc, #280]	; (800e060 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df46:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df48:	4c46      	ldr	r4, [pc, #280]	; (800e064 <xPortStartScheduler+0x13c>)
{
 800df4a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df4c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800df4e:	b2d2      	uxtb	r2, r2
 800df50:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800df52:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800df54:	781b      	ldrb	r3, [r3, #0]
 800df56:	b2db      	uxtb	r3, r3
 800df58:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df5c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df60:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df64:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df68:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800df6a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df6c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800df6e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df70:	bf48      	it	mi
 800df72:	2206      	movmi	r2, #6
 800df74:	d511      	bpl.n	800df9a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800df76:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800df7a:	005b      	lsls	r3, r3, #1
 800df7c:	b2db      	uxtb	r3, r3
 800df7e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800df82:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800df86:	0609      	lsls	r1, r1, #24
 800df88:	4610      	mov	r0, r2
 800df8a:	f102 32ff 	add.w	r2, r2, #4294967295
 800df8e:	d4f2      	bmi.n	800df76 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800df90:	2803      	cmp	r0, #3
 800df92:	6020      	str	r0, [r4, #0]
 800df94:	f88d 3007 	strb.w	r3, [sp, #7]
 800df98:	d01a      	beq.n	800dfd0 <xPortStartScheduler+0xa8>
	__asm volatile
 800df9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df9e:	f383 8811 	msr	BASEPRI, r3
 800dfa2:	f3bf 8f6f 	isb	sy
 800dfa6:	f3bf 8f4f 	dsb	sy
 800dfaa:	e7fe      	b.n	800dfaa <xPortStartScheduler+0x82>
 800dfac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb0:	f383 8811 	msr	BASEPRI, r3
 800dfb4:	f3bf 8f6f 	isb	sy
 800dfb8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800dfbc:	e7fe      	b.n	800dfbc <xPortStartScheduler+0x94>
 800dfbe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfc2:	f383 8811 	msr	BASEPRI, r3
 800dfc6:	f3bf 8f6f 	isb	sy
 800dfca:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800dfce:	e7fe      	b.n	800dfce <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfd0:	9b02      	ldr	r3, [sp, #8]
 800dfd2:	4a22      	ldr	r2, [pc, #136]	; (800e05c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfd4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dfd8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfdc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800dfde:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800dfe0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfe2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dfe6:	4c20      	ldr	r4, [pc, #128]	; (800e068 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800dfe8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800dfec:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800dff0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800dff4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800dff8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800dffc:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800dffe:	f7ff ff7f 	bl	800df00 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800e002:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800e004:	f7ff feae 	bl	800dd64 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800e008:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800e00c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800e010:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800e014:	f7ff fe92 	bl	800dd3c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800e018:	f001 fc98 	bl	800f94c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800e01c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800e01e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800e020:	3301      	adds	r3, #1
 800e022:	d008      	beq.n	800e036 <xPortStartScheduler+0x10e>
 800e024:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e028:	f383 8811 	msr	BASEPRI, r3
 800e02c:	f3bf 8f6f 	isb	sy
 800e030:	f3bf 8f4f 	dsb	sy
 800e034:	e7fe      	b.n	800e034 <xPortStartScheduler+0x10c>
 800e036:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03a:	f383 8811 	msr	BASEPRI, r3
 800e03e:	f3bf 8f6f 	isb	sy
 800e042:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800e046:	9b03      	ldr	r3, [sp, #12]
 800e048:	2b00      	cmp	r3, #0
 800e04a:	d0fc      	beq.n	800e046 <xPortStartScheduler+0x11e>
}
 800e04c:	2000      	movs	r0, #0
 800e04e:	b004      	add	sp, #16
 800e050:	bd70      	pop	{r4, r5, r6, pc}
 800e052:	bf00      	nop
 800e054:	410fc271 	.word	0x410fc271
 800e058:	410fc270 	.word	0x410fc270
 800e05c:	e000e400 	.word	0xe000e400
 800e060:	20013170 	.word	0x20013170
 800e064:	20013174 	.word	0x20013174
 800e068:	20000084 	.word	0x20000084

0800e06c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800e06c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800e070:	2b0f      	cmp	r3, #15
 800e072:	d90e      	bls.n	800e092 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e074:	4911      	ldr	r1, [pc, #68]	; (800e0bc <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e076:	4a12      	ldr	r2, [pc, #72]	; (800e0c0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800e078:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800e07a:	7812      	ldrb	r2, [r2, #0]
 800e07c:	429a      	cmp	r2, r3
 800e07e:	d908      	bls.n	800e092 <vPortValidateInterruptPriority+0x26>
 800e080:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e084:	f383 8811 	msr	BASEPRI, r3
 800e088:	f3bf 8f6f 	isb	sy
 800e08c:	f3bf 8f4f 	dsb	sy
 800e090:	e7fe      	b.n	800e090 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800e092:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e096:	4a0b      	ldr	r2, [pc, #44]	; (800e0c4 <vPortValidateInterruptPriority+0x58>)
 800e098:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800e09c:	6812      	ldr	r2, [r2, #0]
 800e09e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800e0a2:	4293      	cmp	r3, r2
 800e0a4:	d908      	bls.n	800e0b8 <vPortValidateInterruptPriority+0x4c>
 800e0a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0aa:	f383 8811 	msr	BASEPRI, r3
 800e0ae:	f3bf 8f6f 	isb	sy
 800e0b2:	f3bf 8f4f 	dsb	sy
 800e0b6:	e7fe      	b.n	800e0b6 <vPortValidateInterruptPriority+0x4a>
	}
 800e0b8:	4770      	bx	lr
 800e0ba:	bf00      	nop
 800e0bc:	e000e3f0 	.word	0xe000e3f0
 800e0c0:	20013170 	.word	0x20013170
 800e0c4:	20013174 	.word	0x20013174

0800e0c8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800e0c8:	b570      	push	{r4, r5, r6, lr}
 800e0ca:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e0cc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e0ce:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800e0d0:	b920      	cbnz	r0, 800e0dc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e0d2:	6825      	ldr	r5, [r4, #0]
 800e0d4:	b34d      	cbz	r5, 800e12a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0d6:	3601      	adds	r6, #1
 800e0d8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800e0da:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800e0dc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e0de:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800e0e0:	b97d      	cbnz	r5, 800e102 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800e0e2:	6860      	ldr	r0, [r4, #4]
 800e0e4:	f01d fd67 	bl	802bbb6 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e0e8:	6863      	ldr	r3, [r4, #4]
 800e0ea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e0ec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0ee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800e0f0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e0f2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800e0f4:	bf24      	itt	cs
 800e0f6:	6823      	ldrcs	r3, [r4, #0]
 800e0f8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0fa:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e0fc:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e0fe:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e100:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800e102:	68e0      	ldr	r0, [r4, #12]
 800e104:	f01d fd57 	bl	802bbb6 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e108:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e10a:	68e3      	ldr	r3, [r4, #12]
 800e10c:	4251      	negs	r1, r2
 800e10e:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e110:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800e112:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800e114:	4293      	cmp	r3, r2
 800e116:	d202      	bcs.n	800e11e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800e118:	68a3      	ldr	r3, [r4, #8]
 800e11a:	440b      	add	r3, r1
 800e11c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800e11e:	2d02      	cmp	r5, #2
 800e120:	d008      	beq.n	800e134 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e122:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800e124:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e126:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800e128:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e12a:	68a0      	ldr	r0, [r4, #8]
 800e12c:	f001 fde0 	bl	800fcf0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800e130:	60a5      	str	r5, [r4, #8]
 800e132:	e7d0      	b.n	800e0d6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e134:	2e01      	cmp	r6, #1
 800e136:	bf38      	it	cc
 800e138:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800e13a:	2000      	movs	r0, #0
 800e13c:	e7cc      	b.n	800e0d8 <prvCopyDataToQueue+0x10>
 800e13e:	bf00      	nop

0800e140 <xQueueGenericCreateStatic>:
	{
 800e140:	b530      	push	{r4, r5, lr}
 800e142:	b083      	sub	sp, #12
 800e144:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e148:	b940      	cbnz	r0, 800e15c <xQueueGenericCreateStatic+0x1c>
 800e14a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e14e:	f383 8811 	msr	BASEPRI, r3
 800e152:	f3bf 8f6f 	isb	sy
 800e156:	f3bf 8f4f 	dsb	sy
 800e15a:	e7fe      	b.n	800e15a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800e15c:	461d      	mov	r5, r3
 800e15e:	b17b      	cbz	r3, 800e180 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e160:	b302      	cbz	r2, 800e1a4 <xQueueGenericCreateStatic+0x64>
 800e162:	b1b1      	cbz	r1, 800e192 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e164:	2350      	movs	r3, #80	; 0x50
 800e166:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e168:	9b01      	ldr	r3, [sp, #4]
 800e16a:	2b50      	cmp	r3, #80	; 0x50
 800e16c:	d023      	beq.n	800e1b6 <xQueueGenericCreateStatic+0x76>
 800e16e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e172:	f383 8811 	msr	BASEPRI, r3
 800e176:	f3bf 8f6f 	isb	sy
 800e17a:	f3bf 8f4f 	dsb	sy
 800e17e:	e7fe      	b.n	800e17e <xQueueGenericCreateStatic+0x3e>
 800e180:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e184:	f383 8811 	msr	BASEPRI, r3
 800e188:	f3bf 8f6f 	isb	sy
 800e18c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e190:	e7fe      	b.n	800e190 <xQueueGenericCreateStatic+0x50>
 800e192:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e196:	f383 8811 	msr	BASEPRI, r3
 800e19a:	f3bf 8f6f 	isb	sy
 800e19e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800e1a2:	e7fe      	b.n	800e1a2 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e1a4:	bb89      	cbnz	r1, 800e20a <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e1a6:	2250      	movs	r2, #80	; 0x50
 800e1a8:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e1aa:	9a01      	ldr	r2, [sp, #4]
 800e1ac:	2a50      	cmp	r2, #80	; 0x50
 800e1ae:	d1de      	bne.n	800e16e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e1b0:	9a01      	ldr	r2, [sp, #4]
 800e1b2:	462a      	mov	r2, r5
 800e1b4:	e000      	b.n	800e1b8 <xQueueGenericCreateStatic+0x78>
 800e1b6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e1b8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e1ba:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800e1bc:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e1c0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800e1c4:	f7ff fe1e 	bl	800de04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1c8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800e1cc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e1ce:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1d0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1d4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1d6:	4401      	add	r1, r0
 800e1d8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e1da:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1dc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e1de:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e1e0:	21ff      	movs	r1, #255	; 0xff
 800e1e2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e1e6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e1e8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e1ec:	f105 0010 	add.w	r0, r5, #16
 800e1f0:	f7ff fd58 	bl	800dca4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e1f4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e1f8:	f7ff fd54 	bl	800dca4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e1fc:	f7ff fe24 	bl	800de48 <vPortExitCritical>
	}
 800e200:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e202:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800e206:	b003      	add	sp, #12
 800e208:	bd30      	pop	{r4, r5, pc}
 800e20a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20e:	f383 8811 	msr	BASEPRI, r3
 800e212:	f3bf 8f6f 	isb	sy
 800e216:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800e21a:	e7fe      	b.n	800e21a <xQueueGenericCreateStatic+0xda>

0800e21c <xQueueGenericCreate>:
	{
 800e21c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800e21e:	b940      	cbnz	r0, 800e232 <xQueueGenericCreate+0x16>
 800e220:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e224:	f383 8811 	msr	BASEPRI, r3
 800e228:	f3bf 8f6f 	isb	sy
 800e22c:	f3bf 8f4f 	dsb	sy
 800e230:	e7fe      	b.n	800e230 <xQueueGenericCreate+0x14>
 800e232:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e234:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e238:	3050      	adds	r0, #80	; 0x50
 800e23a:	460e      	mov	r6, r1
 800e23c:	4617      	mov	r7, r2
 800e23e:	f7ff fc11 	bl	800da64 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e242:	4604      	mov	r4, r0
 800e244:	b340      	cbz	r0, 800e298 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e246:	2300      	movs	r3, #0
 800e248:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800e24c:	b336      	cbz	r6, 800e29c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e24e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800e252:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e254:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800e258:	f7ff fdd4 	bl	800de04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e25c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800e260:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e262:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e264:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e268:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e26a:	440a      	add	r2, r1
 800e26c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e26e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e270:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e272:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800e274:	22ff      	movs	r2, #255	; 0xff
 800e276:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e27a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800e27c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e280:	f104 0010 	add.w	r0, r4, #16
 800e284:	f7ff fd0e 	bl	800dca4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e288:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e28c:	f7ff fd0a 	bl	800dca4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e290:	f7ff fdda 	bl	800de48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e294:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800e298:	4620      	mov	r0, r4
 800e29a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e29c:	4603      	mov	r3, r0
 800e29e:	e7d8      	b.n	800e252 <xQueueGenericCreate+0x36>

0800e2a0 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800e2a0:	b940      	cbnz	r0, 800e2b4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800e2a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2a6:	f383 8811 	msr	BASEPRI, r3
 800e2aa:	f3bf 8f6f 	isb	sy
 800e2ae:	f3bf 8f4f 	dsb	sy
 800e2b2:	e7fe      	b.n	800e2b2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e2b4:	4288      	cmp	r0, r1
 800e2b6:	d208      	bcs.n	800e2ca <xQueueCreateCountingSemaphoreStatic+0x2a>
 800e2b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2bc:	f383 8811 	msr	BASEPRI, r3
 800e2c0:	f3bf 8f6f 	isb	sy
 800e2c4:	f3bf 8f4f 	dsb	sy
 800e2c8:	e7fe      	b.n	800e2c8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800e2ca:	b530      	push	{r4, r5, lr}
 800e2cc:	4615      	mov	r5, r2
 800e2ce:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800e2d0:	2a00      	cmp	r2, #0
 800e2d2:	d03c      	beq.n	800e34e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800e2d4:	2350      	movs	r3, #80	; 0x50
 800e2d6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800e2d8:	9b03      	ldr	r3, [sp, #12]
 800e2da:	2b50      	cmp	r3, #80	; 0x50
 800e2dc:	d008      	beq.n	800e2f0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800e2de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2e2:	f383 8811 	msr	BASEPRI, r3
 800e2e6:	f3bf 8f6f 	isb	sy
 800e2ea:	f3bf 8f4f 	dsb	sy
 800e2ee:	e7fe      	b.n	800e2ee <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800e2f0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800e2f2:	2301      	movs	r3, #1
 800e2f4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e2f8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800e2fa:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800e2fe:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800e300:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800e302:	f7ff fd7f 	bl	800de04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e306:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800e30a:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e30c:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e30e:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e312:	1ac3      	subs	r3, r0, r3
 800e314:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e316:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800e318:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800e31c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e320:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e322:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e324:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e328:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e32a:	f105 0010 	add.w	r0, r5, #16
 800e32e:	f7ff fcb9 	bl	800dca4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e332:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e336:	f7ff fcb5 	bl	800dca4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e33a:	f7ff fd85 	bl	800de48 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e33e:	9901      	ldr	r1, [sp, #4]
 800e340:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800e342:	2302      	movs	r3, #2
	}
 800e344:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800e346:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800e34a:	b005      	add	sp, #20
 800e34c:	bd30      	pop	{r4, r5, pc}
 800e34e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e352:	f383 8811 	msr	BASEPRI, r3
 800e356:	f3bf 8f6f 	isb	sy
 800e35a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800e35e:	e7fe      	b.n	800e35e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800e360 <xQueueCreateCountingSemaphore>:
	{
 800e360:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800e362:	b940      	cbnz	r0, 800e376 <xQueueCreateCountingSemaphore+0x16>
 800e364:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e368:	f383 8811 	msr	BASEPRI, r3
 800e36c:	f3bf 8f6f 	isb	sy
 800e370:	f3bf 8f4f 	dsb	sy
 800e374:	e7fe      	b.n	800e374 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800e376:	4288      	cmp	r0, r1
 800e378:	460e      	mov	r6, r1
 800e37a:	4604      	mov	r4, r0
 800e37c:	d208      	bcs.n	800e390 <xQueueCreateCountingSemaphore+0x30>
 800e37e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e382:	f383 8811 	msr	BASEPRI, r3
 800e386:	f3bf 8f6f 	isb	sy
 800e38a:	f3bf 8f4f 	dsb	sy
 800e38e:	e7fe      	b.n	800e38e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800e390:	2050      	movs	r0, #80	; 0x50
 800e392:	f7ff fb67 	bl	800da64 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800e396:	4605      	mov	r5, r0
 800e398:	b330      	cbz	r0, 800e3e8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e39a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800e39c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800e3a0:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800e3a4:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800e3a6:	f7ff fd2d 	bl	800de04 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3aa:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800e3ae:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800e3b0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3b2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3b6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3b8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3ba:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3bc:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800e3be:	22ff      	movs	r2, #255	; 0xff
 800e3c0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800e3c4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800e3c6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800e3c8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800e3cc:	f105 0010 	add.w	r0, r5, #16
 800e3d0:	f7ff fc68 	bl	800dca4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800e3d4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e3d8:	f7ff fc64 	bl	800dca4 <vListInitialise>
	taskEXIT_CRITICAL();
 800e3dc:	f7ff fd34 	bl	800de48 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800e3e0:	2302      	movs	r3, #2
 800e3e2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800e3e6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800e3e8:	4628      	mov	r0, r5
 800e3ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e3ec <xQueueGenericSend>:
{
 800e3ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e3f0:	b085      	sub	sp, #20
 800e3f2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800e3f4:	2800      	cmp	r0, #0
 800e3f6:	f000 80a4 	beq.w	800e542 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e3fa:	4688      	mov	r8, r1
 800e3fc:	461f      	mov	r7, r3
 800e3fe:	4604      	mov	r4, r0
 800e400:	2900      	cmp	r1, #0
 800e402:	f000 8091 	beq.w	800e528 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e406:	2f02      	cmp	r7, #2
 800e408:	d10b      	bne.n	800e422 <xQueueGenericSend+0x36>
 800e40a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e40c:	2b01      	cmp	r3, #1
 800e40e:	d008      	beq.n	800e422 <xQueueGenericSend+0x36>
 800e410:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e414:	f383 8811 	msr	BASEPRI, r3
 800e418:	f3bf 8f6f 	isb	sy
 800e41c:	f3bf 8f4f 	dsb	sy
 800e420:	e7fe      	b.n	800e420 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e422:	f001 fc0f 	bl	800fc44 <xTaskGetSchedulerState>
 800e426:	4605      	mov	r5, r0
 800e428:	2800      	cmp	r0, #0
 800e42a:	f000 8093 	beq.w	800e554 <xQueueGenericSend+0x168>
 800e42e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e430:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800e434:	f7ff fce6 	bl	800de04 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e438:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e43a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e43c:	429a      	cmp	r2, r3
 800e43e:	f0c0 80ef 	bcc.w	800e620 <xQueueGenericSend+0x234>
 800e442:	2f02      	cmp	r7, #2
 800e444:	f000 80ec 	beq.w	800e620 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e448:	9801      	ldr	r0, [sp, #4]
 800e44a:	2800      	cmp	r0, #0
 800e44c:	f000 8101 	beq.w	800e652 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800e450:	2d00      	cmp	r5, #0
 800e452:	f000 80e1 	beq.w	800e618 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800e456:	f7ff fcf7 	bl	800de48 <vPortExitCritical>
		vTaskSuspendAll();
 800e45a:	f001 fa49 	bl	800f8f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e45e:	f7ff fcd1 	bl	800de04 <vPortEnterCritical>
 800e462:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e466:	2bff      	cmp	r3, #255	; 0xff
 800e468:	bf04      	itt	eq
 800e46a:	2300      	moveq	r3, #0
 800e46c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e470:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e474:	2bff      	cmp	r3, #255	; 0xff
 800e476:	bf04      	itt	eq
 800e478:	2300      	moveq	r3, #0
 800e47a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e47e:	f7ff fce3 	bl	800de48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e482:	a901      	add	r1, sp, #4
 800e484:	a802      	add	r0, sp, #8
 800e486:	f001 fb8f 	bl	800fba8 <xTaskCheckForTimeOut>
 800e48a:	2800      	cmp	r0, #0
 800e48c:	f040 80e6 	bne.w	800e65c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800e490:	f7ff fcb8 	bl	800de04 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800e494:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e496:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e498:	429a      	cmp	r2, r3
 800e49a:	d068      	beq.n	800e56e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800e49c:	f7ff fcd4 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4a0:	f7ff fcb0 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e4a4:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e4a8:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4aa:	2d00      	cmp	r5, #0
 800e4ac:	dc04      	bgt.n	800e4b8 <xQueueGenericSend+0xcc>
 800e4ae:	e011      	b.n	800e4d4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800e4b0:	1e6a      	subs	r2, r5, #1
 800e4b2:	b2d3      	uxtb	r3, r2
 800e4b4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4b6:	b16b      	cbz	r3, 800e4d4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e4bc:	b153      	cbz	r3, 800e4d4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e4be:	f001 fb1f 	bl	800fb00 <xTaskRemoveFromEventList>
 800e4c2:	2800      	cmp	r0, #0
 800e4c4:	d0f4      	beq.n	800e4b0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800e4c6:	f001 fbb7 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800e4ca:	1e6a      	subs	r2, r5, #1
 800e4cc:	b2d3      	uxtb	r3, r2
 800e4ce:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e4d0:	2b00      	cmp	r3, #0
 800e4d2:	d1f1      	bne.n	800e4b8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800e4d4:	23ff      	movs	r3, #255	; 0xff
 800e4d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e4da:	f7ff fcb5 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e4de:	f7ff fc91 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e4e2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800e4e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4e8:	2d00      	cmp	r5, #0
 800e4ea:	dd14      	ble.n	800e516 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4ec:	f104 0910 	add.w	r9, r4, #16
 800e4f0:	e003      	b.n	800e4fa <xQueueGenericSend+0x10e>
				--cRxLock;
 800e4f2:	1e6a      	subs	r2, r5, #1
 800e4f4:	b2d3      	uxtb	r3, r2
 800e4f6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e4f8:	b16b      	cbz	r3, 800e516 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e4fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e4fe:	b153      	cbz	r3, 800e516 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e500:	f001 fafe 	bl	800fb00 <xTaskRemoveFromEventList>
 800e504:	2800      	cmp	r0, #0
 800e506:	d0f4      	beq.n	800e4f2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800e508:	f001 fb96 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800e50c:	1e6a      	subs	r2, r5, #1
 800e50e:	b2d3      	uxtb	r3, r2
 800e510:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e512:	2b00      	cmp	r3, #0
 800e514:	d1f1      	bne.n	800e4fa <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800e516:	23ff      	movs	r3, #255	; 0xff
 800e518:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e51c:	f7ff fc94 	bl	800de48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e520:	f001 f9ee 	bl	800f900 <xTaskResumeAll>
 800e524:	2501      	movs	r5, #1
 800e526:	e785      	b.n	800e434 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e528:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e52a:	2b00      	cmp	r3, #0
 800e52c:	f43f af6b 	beq.w	800e406 <xQueueGenericSend+0x1a>
 800e530:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e534:	f383 8811 	msr	BASEPRI, r3
 800e538:	f3bf 8f6f 	isb	sy
 800e53c:	f3bf 8f4f 	dsb	sy
 800e540:	e7fe      	b.n	800e540 <xQueueGenericSend+0x154>
 800e542:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e546:	f383 8811 	msr	BASEPRI, r3
 800e54a:	f3bf 8f6f 	isb	sy
 800e54e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e552:	e7fe      	b.n	800e552 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e554:	9b01      	ldr	r3, [sp, #4]
 800e556:	2b00      	cmp	r3, #0
 800e558:	f43f af6a 	beq.w	800e430 <xQueueGenericSend+0x44>
 800e55c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e560:	f383 8811 	msr	BASEPRI, r3
 800e564:	f3bf 8f6f 	isb	sy
 800e568:	f3bf 8f4f 	dsb	sy
 800e56c:	e7fe      	b.n	800e56c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e56e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800e572:	f7ff fc69 	bl	800de48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800e576:	9901      	ldr	r1, [sp, #4]
 800e578:	4648      	mov	r0, r9
 800e57a:	f001 fa33 	bl	800f9e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800e57e:	f7ff fc41 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e582:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e586:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e588:	2d00      	cmp	r5, #0
 800e58a:	dc04      	bgt.n	800e596 <xQueueGenericSend+0x1aa>
 800e58c:	e011      	b.n	800e5b2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800e58e:	1e6b      	subs	r3, r5, #1
 800e590:	b2da      	uxtb	r2, r3
 800e592:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e594:	b16a      	cbz	r2, 800e5b2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e596:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e598:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e59a:	b153      	cbz	r3, 800e5b2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e59c:	f001 fab0 	bl	800fb00 <xTaskRemoveFromEventList>
 800e5a0:	2800      	cmp	r0, #0
 800e5a2:	d0f4      	beq.n	800e58e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800e5a4:	f001 fb48 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800e5a8:	1e6b      	subs	r3, r5, #1
 800e5aa:	b2da      	uxtb	r2, r3
 800e5ac:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e5ae:	2a00      	cmp	r2, #0
 800e5b0:	d1f1      	bne.n	800e596 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800e5b2:	23ff      	movs	r3, #255	; 0xff
 800e5b4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e5b8:	f7ff fc46 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e5bc:	f7ff fc22 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e5c0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e5c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5c6:	2d00      	cmp	r5, #0
 800e5c8:	dc04      	bgt.n	800e5d4 <xQueueGenericSend+0x1e8>
 800e5ca:	e011      	b.n	800e5f0 <xQueueGenericSend+0x204>
				--cRxLock;
 800e5cc:	1e6b      	subs	r3, r5, #1
 800e5ce:	b2da      	uxtb	r2, r3
 800e5d0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5d2:	b16a      	cbz	r2, 800e5f0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5d6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e5d8:	b153      	cbz	r3, 800e5f0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e5da:	f001 fa91 	bl	800fb00 <xTaskRemoveFromEventList>
 800e5de:	2800      	cmp	r0, #0
 800e5e0:	d0f4      	beq.n	800e5cc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800e5e2:	f001 fb29 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800e5e6:	1e6b      	subs	r3, r5, #1
 800e5e8:	b2da      	uxtb	r2, r3
 800e5ea:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e5ec:	2a00      	cmp	r2, #0
 800e5ee:	d1f1      	bne.n	800e5d4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800e5f0:	23ff      	movs	r3, #255	; 0xff
 800e5f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e5f6:	f7ff fc27 	bl	800de48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800e5fa:	f001 f981 	bl	800f900 <xTaskResumeAll>
 800e5fe:	2800      	cmp	r0, #0
 800e600:	d190      	bne.n	800e524 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800e602:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e606:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e60a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e60e:	f3bf 8f4f 	dsb	sy
 800e612:	f3bf 8f6f 	isb	sy
 800e616:	e785      	b.n	800e524 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e618:	a802      	add	r0, sp, #8
 800e61a:	f001 fab9 	bl	800fb90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800e61e:	e71a      	b.n	800e456 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e620:	463a      	mov	r2, r7
 800e622:	4641      	mov	r1, r8
 800e624:	4620      	mov	r0, r4
 800e626:	f7ff fd4f 	bl	800e0c8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e62a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e62c:	2b00      	cmp	r3, #0
 800e62e:	d153      	bne.n	800e6d8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800e630:	b148      	cbz	r0, 800e646 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800e632:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e636:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e63a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e63e:	f3bf 8f4f 	dsb	sy
 800e642:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e646:	f7ff fbff 	bl	800de48 <vPortExitCritical>
				return pdPASS;
 800e64a:	2001      	movs	r0, #1
}
 800e64c:	b005      	add	sp, #20
 800e64e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e652:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800e654:	f7ff fbf8 	bl	800de48 <vPortExitCritical>
					return errQUEUE_FULL;
 800e658:	9800      	ldr	r0, [sp, #0]
 800e65a:	e7f7      	b.n	800e64c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800e65c:	f7ff fbd2 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e660:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e664:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e666:	2d00      	cmp	r5, #0
 800e668:	dd10      	ble.n	800e68c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e66a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800e66e:	e003      	b.n	800e678 <xQueueGenericSend+0x28c>
			--cTxLock;
 800e670:	1e6b      	subs	r3, r5, #1
 800e672:	b2da      	uxtb	r2, r3
 800e674:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e676:	b14a      	cbz	r2, 800e68c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e678:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e67a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e67c:	b133      	cbz	r3, 800e68c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e67e:	f001 fa3f 	bl	800fb00 <xTaskRemoveFromEventList>
 800e682:	2800      	cmp	r0, #0
 800e684:	d0f4      	beq.n	800e670 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800e686:	f001 fad7 	bl	800fc38 <vTaskMissedYield>
 800e68a:	e7f1      	b.n	800e670 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800e68c:	23ff      	movs	r3, #255	; 0xff
 800e68e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e692:	f7ff fbd9 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e696:	f7ff fbb5 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e69a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e69e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6a0:	2d00      	cmp	r5, #0
 800e6a2:	dd10      	ble.n	800e6c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6a4:	f104 0610 	add.w	r6, r4, #16
 800e6a8:	e003      	b.n	800e6b2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800e6aa:	1e6b      	subs	r3, r5, #1
 800e6ac:	b2da      	uxtb	r2, r3
 800e6ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e6b0:	b14a      	cbz	r2, 800e6c6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6b4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e6b6:	b133      	cbz	r3, 800e6c6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e6b8:	f001 fa22 	bl	800fb00 <xTaskRemoveFromEventList>
 800e6bc:	2800      	cmp	r0, #0
 800e6be:	d0f4      	beq.n	800e6aa <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800e6c0:	f001 faba 	bl	800fc38 <vTaskMissedYield>
 800e6c4:	e7f1      	b.n	800e6aa <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800e6c6:	23ff      	movs	r3, #255	; 0xff
 800e6c8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e6cc:	f7ff fbbc 	bl	800de48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800e6d0:	f001 f916 	bl	800f900 <xTaskResumeAll>
			return errQUEUE_FULL;
 800e6d4:	2000      	movs	r0, #0
 800e6d6:	e7b9      	b.n	800e64c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e6d8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e6dc:	f001 fa10 	bl	800fb00 <xTaskRemoveFromEventList>
 800e6e0:	2800      	cmp	r0, #0
 800e6e2:	d0b0      	beq.n	800e646 <xQueueGenericSend+0x25a>
 800e6e4:	e7a5      	b.n	800e632 <xQueueGenericSend+0x246>
 800e6e6:	bf00      	nop

0800e6e8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800e6e8:	2800      	cmp	r0, #0
 800e6ea:	d04b      	beq.n	800e784 <xQueueGenericSendFromISR+0x9c>
{
 800e6ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e6f0:	460e      	mov	r6, r1
 800e6f2:	4617      	mov	r7, r2
 800e6f4:	461d      	mov	r5, r3
 800e6f6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e6f8:	b321      	cbz	r1, 800e744 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800e6fa:	2d02      	cmp	r5, #2
 800e6fc:	d10b      	bne.n	800e716 <xQueueGenericSendFromISR+0x2e>
 800e6fe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e700:	2b01      	cmp	r3, #1
 800e702:	d008      	beq.n	800e716 <xQueueGenericSendFromISR+0x2e>
 800e704:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e708:	f383 8811 	msr	BASEPRI, r3
 800e70c:	f3bf 8f6f 	isb	sy
 800e710:	f3bf 8f4f 	dsb	sy
 800e714:	e7fe      	b.n	800e714 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e716:	f7ff fca9 	bl	800e06c <vPortValidateInterruptPriority>
	__asm volatile
 800e71a:	f3ef 8811 	mrs	r8, BASEPRI
 800e71e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e722:	f383 8811 	msr	BASEPRI, r3
 800e726:	f3bf 8f6f 	isb	sy
 800e72a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800e72e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800e730:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e732:	429a      	cmp	r2, r3
 800e734:	d312      	bcc.n	800e75c <xQueueGenericSendFromISR+0x74>
 800e736:	2d02      	cmp	r5, #2
 800e738:	d010      	beq.n	800e75c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800e73a:	2000      	movs	r0, #0
	__asm volatile
 800e73c:	f388 8811 	msr	BASEPRI, r8
}
 800e740:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e744:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e746:	2b00      	cmp	r3, #0
 800e748:	d0d7      	beq.n	800e6fa <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800e74a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e74e:	f383 8811 	msr	BASEPRI, r3
 800e752:	f3bf 8f6f 	isb	sy
 800e756:	f3bf 8f4f 	dsb	sy
 800e75a:	e7fe      	b.n	800e75a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e75c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800e75e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e762:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e764:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800e766:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800e768:	4620      	mov	r0, r4
 800e76a:	f7ff fcad 	bl	800e0c8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800e76e:	1c6b      	adds	r3, r5, #1
 800e770:	d011      	beq.n	800e796 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e772:	1c6b      	adds	r3, r5, #1
 800e774:	b25b      	sxtb	r3, r3
 800e776:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800e77a:	2001      	movs	r0, #1
	__asm volatile
 800e77c:	f388 8811 	msr	BASEPRI, r8
}
 800e780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800e784:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e788:	f383 8811 	msr	BASEPRI, r3
 800e78c:	f3bf 8f6f 	isb	sy
 800e790:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e794:	e7fe      	b.n	800e794 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e796:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e798:	2b00      	cmp	r3, #0
 800e79a:	d0ee      	beq.n	800e77a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e79c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e7a0:	f001 f9ae 	bl	800fb00 <xTaskRemoveFromEventList>
 800e7a4:	2800      	cmp	r0, #0
 800e7a6:	d0e8      	beq.n	800e77a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800e7a8:	2f00      	cmp	r7, #0
 800e7aa:	d0e6      	beq.n	800e77a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e7ac:	2001      	movs	r0, #1
 800e7ae:	6038      	str	r0, [r7, #0]
 800e7b0:	e7c4      	b.n	800e73c <xQueueGenericSendFromISR+0x54>
 800e7b2:	bf00      	nop

0800e7b4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800e7b4:	b370      	cbz	r0, 800e814 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800e7b6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800e7b8:	b570      	push	{r4, r5, r6, lr}
 800e7ba:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800e7bc:	b143      	cbz	r3, 800e7d0 <xQueueGiveFromISR+0x1c>
 800e7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7c2:	f383 8811 	msr	BASEPRI, r3
 800e7c6:	f3bf 8f6f 	isb	sy
 800e7ca:	f3bf 8f4f 	dsb	sy
 800e7ce:	e7fe      	b.n	800e7ce <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e7d0:	6803      	ldr	r3, [r0, #0]
 800e7d2:	460c      	mov	r4, r1
 800e7d4:	b33b      	cbz	r3, 800e826 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e7d6:	f7ff fc49 	bl	800e06c <vPortValidateInterruptPriority>
	__asm volatile
 800e7da:	f3ef 8511 	mrs	r5, BASEPRI
 800e7de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7e2:	f383 8811 	msr	BASEPRI, r3
 800e7e6:	f3bf 8f6f 	isb	sy
 800e7ea:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e7ee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800e7f0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800e7f2:	429a      	cmp	r2, r3
 800e7f4:	d923      	bls.n	800e83e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800e7f6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e7fa:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800e7fc:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800e7fe:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800e800:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800e802:	d020      	beq.n	800e846 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800e804:	3301      	adds	r3, #1
 800e806:	b25b      	sxtb	r3, r3
 800e808:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800e80c:	2001      	movs	r0, #1
	__asm volatile
 800e80e:	f385 8811 	msr	BASEPRI, r5
}
 800e812:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800e814:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e818:	f383 8811 	msr	BASEPRI, r3
 800e81c:	f3bf 8f6f 	isb	sy
 800e820:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e824:	e7fe      	b.n	800e824 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800e826:	6883      	ldr	r3, [r0, #8]
 800e828:	2b00      	cmp	r3, #0
 800e82a:	d0d4      	beq.n	800e7d6 <xQueueGiveFromISR+0x22>
 800e82c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e830:	f383 8811 	msr	BASEPRI, r3
 800e834:	f3bf 8f6f 	isb	sy
 800e838:	f3bf 8f4f 	dsb	sy
 800e83c:	e7fe      	b.n	800e83c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800e83e:	2000      	movs	r0, #0
	__asm volatile
 800e840:	f385 8811 	msr	BASEPRI, r5
}
 800e844:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e846:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800e848:	2b00      	cmp	r3, #0
 800e84a:	d0df      	beq.n	800e80c <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e84c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800e850:	f001 f956 	bl	800fb00 <xTaskRemoveFromEventList>
 800e854:	2800      	cmp	r0, #0
 800e856:	d0d9      	beq.n	800e80c <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800e858:	2c00      	cmp	r4, #0
 800e85a:	d0d7      	beq.n	800e80c <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800e85c:	2001      	movs	r0, #1
 800e85e:	6020      	str	r0, [r4, #0]
 800e860:	e7ee      	b.n	800e840 <xQueueGiveFromISR+0x8c>
 800e862:	bf00      	nop

0800e864 <xQueueReceive>:
{
 800e864:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e868:	b085      	sub	sp, #20
 800e86a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800e86c:	2800      	cmp	r0, #0
 800e86e:	f000 815c 	beq.w	800eb2a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e872:	460f      	mov	r7, r1
 800e874:	4604      	mov	r4, r0
 800e876:	2900      	cmp	r1, #0
 800e878:	d079      	beq.n	800e96e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e87a:	f001 f9e3 	bl	800fc44 <xTaskGetSchedulerState>
 800e87e:	2800      	cmp	r0, #0
 800e880:	f000 8081 	beq.w	800e986 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800e884:	f7ff fabe 	bl	800de04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e888:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e88a:	2d00      	cmp	r5, #0
 800e88c:	f040 8138 	bne.w	800eb00 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e890:	9b01      	ldr	r3, [sp, #4]
 800e892:	2b00      	cmp	r3, #0
 800e894:	f000 80d5 	beq.w	800ea42 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e898:	a802      	add	r0, sp, #8
 800e89a:	f001 f979 	bl	800fb90 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800e89e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e8a0:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800e8a4:	f7ff fad0 	bl	800de48 <vPortExitCritical>
		vTaskSuspendAll();
 800e8a8:	f001 f822 	bl	800f8f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e8ac:	f7ff faaa 	bl	800de04 <vPortEnterCritical>
 800e8b0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e8b4:	2bff      	cmp	r3, #255	; 0xff
 800e8b6:	bf08      	it	eq
 800e8b8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800e8bc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8c0:	2bff      	cmp	r3, #255	; 0xff
 800e8c2:	bf08      	it	eq
 800e8c4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800e8c8:	f7ff fabe 	bl	800de48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e8cc:	a901      	add	r1, sp, #4
 800e8ce:	a802      	add	r0, sp, #8
 800e8d0:	f001 f96a 	bl	800fba8 <xTaskCheckForTimeOut>
 800e8d4:	2800      	cmp	r0, #0
 800e8d6:	d163      	bne.n	800e9a0 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800e8d8:	f7ff fa94 	bl	800de04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800e8dc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e8de:	2b00      	cmp	r3, #0
 800e8e0:	f000 80b5 	beq.w	800ea4e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800e8e4:	f7ff fab0 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e8e8:	f7ff fa8c 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e8ec:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e8f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8f2:	2d00      	cmp	r5, #0
 800e8f4:	dc04      	bgt.n	800e900 <xQueueReceive+0x9c>
 800e8f6:	e011      	b.n	800e91c <xQueueReceive+0xb8>
			--cTxLock;
 800e8f8:	1e6b      	subs	r3, r5, #1
 800e8fa:	b2da      	uxtb	r2, r3
 800e8fc:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e8fe:	b16a      	cbz	r2, 800e91c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e900:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e902:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e904:	b153      	cbz	r3, 800e91c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e906:	f001 f8fb 	bl	800fb00 <xTaskRemoveFromEventList>
 800e90a:	2800      	cmp	r0, #0
 800e90c:	d0f4      	beq.n	800e8f8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800e90e:	f001 f993 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800e912:	1e6b      	subs	r3, r5, #1
 800e914:	b2da      	uxtb	r2, r3
 800e916:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e918:	2a00      	cmp	r2, #0
 800e91a:	d1f1      	bne.n	800e900 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800e91c:	23ff      	movs	r3, #255	; 0xff
 800e91e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e922:	f7ff fa91 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e926:	f7ff fa6d 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e92a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e92e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e930:	2d00      	cmp	r5, #0
 800e932:	dd14      	ble.n	800e95e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e934:	f104 0910 	add.w	r9, r4, #16
 800e938:	e003      	b.n	800e942 <xQueueReceive+0xde>
				--cRxLock;
 800e93a:	1e6b      	subs	r3, r5, #1
 800e93c:	b2da      	uxtb	r2, r3
 800e93e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e940:	b16a      	cbz	r2, 800e95e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e942:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e944:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e946:	b153      	cbz	r3, 800e95e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e948:	f001 f8da 	bl	800fb00 <xTaskRemoveFromEventList>
 800e94c:	2800      	cmp	r0, #0
 800e94e:	d0f4      	beq.n	800e93a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800e950:	f001 f972 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800e954:	1e6b      	subs	r3, r5, #1
 800e956:	b2da      	uxtb	r2, r3
 800e958:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e95a:	2a00      	cmp	r2, #0
 800e95c:	d1f1      	bne.n	800e942 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800e95e:	23ff      	movs	r3, #255	; 0xff
 800e960:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800e964:	f7ff fa70 	bl	800de48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800e968:	f000 ffca 	bl	800f900 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800e96c:	e060      	b.n	800ea30 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e96e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e970:	2b00      	cmp	r3, #0
 800e972:	d082      	beq.n	800e87a <xQueueReceive+0x16>
	__asm volatile
 800e974:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e978:	f383 8811 	msr	BASEPRI, r3
 800e97c:	f3bf 8f6f 	isb	sy
 800e980:	f3bf 8f4f 	dsb	sy
 800e984:	e7fe      	b.n	800e984 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800e986:	9b01      	ldr	r3, [sp, #4]
 800e988:	2b00      	cmp	r3, #0
 800e98a:	f43f af7b 	beq.w	800e884 <xQueueReceive+0x20>
 800e98e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e992:	f383 8811 	msr	BASEPRI, r3
 800e996:	f3bf 8f6f 	isb	sy
 800e99a:	f3bf 8f4f 	dsb	sy
 800e99e:	e7fe      	b.n	800e99e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800e9a0:	f7ff fa30 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e9a4:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e9a8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9aa:	2d00      	cmp	r5, #0
 800e9ac:	dc04      	bgt.n	800e9b8 <xQueueReceive+0x154>
 800e9ae:	e011      	b.n	800e9d4 <xQueueReceive+0x170>
			--cTxLock;
 800e9b0:	1e6b      	subs	r3, r5, #1
 800e9b2:	b2da      	uxtb	r2, r3
 800e9b4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9b6:	b16a      	cbz	r2, 800e9d4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9ba:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e9bc:	b153      	cbz	r3, 800e9d4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e9be:	f001 f89f 	bl	800fb00 <xTaskRemoveFromEventList>
 800e9c2:	2800      	cmp	r0, #0
 800e9c4:	d0f4      	beq.n	800e9b0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800e9c6:	f001 f937 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800e9ca:	1e6b      	subs	r3, r5, #1
 800e9cc:	b2da      	uxtb	r2, r3
 800e9ce:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e9d0:	2a00      	cmp	r2, #0
 800e9d2:	d1f1      	bne.n	800e9b8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800e9d4:	23ff      	movs	r3, #255	; 0xff
 800e9d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e9da:	f7ff fa35 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e9de:	f7ff fa11 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e9e2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e9e6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9e8:	2d00      	cmp	r5, #0
 800e9ea:	dd14      	ble.n	800ea16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9ec:	f104 0910 	add.w	r9, r4, #16
 800e9f0:	e003      	b.n	800e9fa <xQueueReceive+0x196>
				--cRxLock;
 800e9f2:	1e6b      	subs	r3, r5, #1
 800e9f4:	b2da      	uxtb	r2, r3
 800e9f6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e9f8:	b16a      	cbz	r2, 800ea16 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9fa:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e9fc:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e9fe:	b153      	cbz	r3, 800ea16 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ea00:	f001 f87e 	bl	800fb00 <xTaskRemoveFromEventList>
 800ea04:	2800      	cmp	r0, #0
 800ea06:	d0f4      	beq.n	800e9f2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800ea08:	f001 f916 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800ea0c:	1e6b      	subs	r3, r5, #1
 800ea0e:	b2da      	uxtb	r2, r3
 800ea10:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ea12:	2a00      	cmp	r2, #0
 800ea14:	d1f1      	bne.n	800e9fa <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800ea16:	23ff      	movs	r3, #255	; 0xff
 800ea18:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ea1c:	f7ff fa14 	bl	800de48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ea20:	f000 ff6e 	bl	800f900 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ea24:	f7ff f9ee 	bl	800de04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ea28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ea2a:	b153      	cbz	r3, 800ea42 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800ea2c:	f7ff fa0c 	bl	800de48 <vPortExitCritical>
		taskENTER_CRITICAL();
 800ea30:	f7ff f9e8 	bl	800de04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ea34:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ea36:	2d00      	cmp	r5, #0
 800ea38:	d162      	bne.n	800eb00 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800ea3a:	9b01      	ldr	r3, [sp, #4]
 800ea3c:	2b00      	cmp	r3, #0
 800ea3e:	f47f af31 	bne.w	800e8a4 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800ea42:	f7ff fa01 	bl	800de48 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ea46:	2000      	movs	r0, #0
}
 800ea48:	b005      	add	sp, #20
 800ea4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800ea4e:	f7ff f9fb 	bl	800de48 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ea52:	9901      	ldr	r1, [sp, #4]
 800ea54:	4630      	mov	r0, r6
 800ea56:	f000 ffc5 	bl	800f9e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ea5a:	f7ff f9d3 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ea5e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ea62:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea64:	2d00      	cmp	r5, #0
 800ea66:	dc04      	bgt.n	800ea72 <xQueueReceive+0x20e>
 800ea68:	e011      	b.n	800ea8e <xQueueReceive+0x22a>
			--cTxLock;
 800ea6a:	1e6b      	subs	r3, r5, #1
 800ea6c:	b2da      	uxtb	r2, r3
 800ea6e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea70:	b16a      	cbz	r2, 800ea8e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea72:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea74:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ea76:	b153      	cbz	r3, 800ea8e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ea78:	f001 f842 	bl	800fb00 <xTaskRemoveFromEventList>
 800ea7c:	2800      	cmp	r0, #0
 800ea7e:	d0f4      	beq.n	800ea6a <xQueueReceive+0x206>
						vTaskMissedYield();
 800ea80:	f001 f8da 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800ea84:	1e6b      	subs	r3, r5, #1
 800ea86:	b2da      	uxtb	r2, r3
 800ea88:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ea8a:	2a00      	cmp	r2, #0
 800ea8c:	d1f1      	bne.n	800ea72 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ea8e:	23ff      	movs	r3, #255	; 0xff
 800ea90:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ea94:	f7ff f9d8 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ea98:	f7ff f9b4 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ea9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800eaa0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eaa2:	2d00      	cmp	r5, #0
 800eaa4:	dd14      	ble.n	800ead0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaa6:	f104 0910 	add.w	r9, r4, #16
 800eaaa:	e003      	b.n	800eab4 <xQueueReceive+0x250>
				--cRxLock;
 800eaac:	1e6b      	subs	r3, r5, #1
 800eaae:	b2da      	uxtb	r2, r3
 800eab0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eab2:	b16a      	cbz	r2, 800ead0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eab4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eab6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eab8:	b153      	cbz	r3, 800ead0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eaba:	f001 f821 	bl	800fb00 <xTaskRemoveFromEventList>
 800eabe:	2800      	cmp	r0, #0
 800eac0:	d0f4      	beq.n	800eaac <xQueueReceive+0x248>
					vTaskMissedYield();
 800eac2:	f001 f8b9 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800eac6:	1e6b      	subs	r3, r5, #1
 800eac8:	b2da      	uxtb	r2, r3
 800eaca:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800eacc:	2a00      	cmp	r2, #0
 800eace:	d1f1      	bne.n	800eab4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800ead0:	23ff      	movs	r3, #255	; 0xff
 800ead2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ead6:	f7ff f9b7 	bl	800de48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800eada:	f000 ff11 	bl	800f900 <xTaskResumeAll>
 800eade:	2800      	cmp	r0, #0
 800eae0:	d1a6      	bne.n	800ea30 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800eae2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eae6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eaea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eaee:	f3bf 8f4f 	dsb	sy
 800eaf2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800eaf6:	f7ff f985 	bl	800de04 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800eafa:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800eafc:	2d00      	cmp	r5, #0
 800eafe:	d09c      	beq.n	800ea3a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eb00:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800eb02:	b152      	cbz	r2, 800eb1a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb04:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb06:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb08:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eb0a:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eb0c:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eb0e:	bf24      	itt	cs
 800eb10:	6821      	ldrcs	r1, [r4, #0]
 800eb12:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eb14:	4638      	mov	r0, r7
 800eb16:	f01d f84e 	bl	802bbb6 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eb1a:	3d01      	subs	r5, #1
 800eb1c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eb1e:	6923      	ldr	r3, [r4, #16]
 800eb20:	b963      	cbnz	r3, 800eb3c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800eb22:	f7ff f991 	bl	800de48 <vPortExitCritical>
				return pdPASS;
 800eb26:	2001      	movs	r0, #1
 800eb28:	e78e      	b.n	800ea48 <xQueueReceive+0x1e4>
 800eb2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb2e:	f383 8811 	msr	BASEPRI, r3
 800eb32:	f3bf 8f6f 	isb	sy
 800eb36:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800eb3a:	e7fe      	b.n	800eb3a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eb3c:	f104 0010 	add.w	r0, r4, #16
 800eb40:	f000 ffde 	bl	800fb00 <xTaskRemoveFromEventList>
 800eb44:	2800      	cmp	r0, #0
 800eb46:	d0ec      	beq.n	800eb22 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800eb48:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800eb4c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eb50:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800eb54:	f3bf 8f4f 	dsb	sy
 800eb58:	f3bf 8f6f 	isb	sy
 800eb5c:	e7e1      	b.n	800eb22 <xQueueReceive+0x2be>
 800eb5e:	bf00      	nop

0800eb60 <xQueueSemaphoreTake>:
{
 800eb60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb64:	b084      	sub	sp, #16
 800eb66:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800eb68:	2800      	cmp	r0, #0
 800eb6a:	d05c      	beq.n	800ec26 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800eb6c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800eb6e:	4604      	mov	r4, r0
 800eb70:	b147      	cbz	r7, 800eb84 <xQueueSemaphoreTake+0x24>
 800eb72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb76:	f383 8811 	msr	BASEPRI, r3
 800eb7a:	f3bf 8f6f 	isb	sy
 800eb7e:	f3bf 8f4f 	dsb	sy
 800eb82:	e7fe      	b.n	800eb82 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800eb84:	f001 f85e 	bl	800fc44 <xTaskGetSchedulerState>
 800eb88:	4605      	mov	r5, r0
 800eb8a:	2800      	cmp	r0, #0
 800eb8c:	d054      	beq.n	800ec38 <xQueueSemaphoreTake+0xd8>
 800eb8e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800eb90:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800eb94:	f7ff f936 	bl	800de04 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800eb98:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800eb9a:	2b00      	cmp	r3, #0
 800eb9c:	f040 8148 	bne.w	800ee30 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800eba0:	9b01      	ldr	r3, [sp, #4]
 800eba2:	2b00      	cmp	r3, #0
 800eba4:	f000 813a 	beq.w	800ee1c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800eba8:	2d00      	cmp	r5, #0
 800ebaa:	f000 809d 	beq.w	800ece8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800ebae:	f7ff f94b 	bl	800de48 <vPortExitCritical>
		vTaskSuspendAll();
 800ebb2:	f000 fe9d 	bl	800f8f0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800ebb6:	f7ff f925 	bl	800de04 <vPortEnterCritical>
 800ebba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ebbe:	2bff      	cmp	r3, #255	; 0xff
 800ebc0:	bf04      	itt	eq
 800ebc2:	2300      	moveq	r3, #0
 800ebc4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800ebc8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebcc:	2bff      	cmp	r3, #255	; 0xff
 800ebce:	bf04      	itt	eq
 800ebd0:	2300      	moveq	r3, #0
 800ebd2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800ebd6:	f7ff f937 	bl	800de48 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ebda:	a901      	add	r1, sp, #4
 800ebdc:	a802      	add	r0, sp, #8
 800ebde:	f000 ffe3 	bl	800fba8 <xTaskCheckForTimeOut>
 800ebe2:	2800      	cmp	r0, #0
 800ebe4:	d135      	bne.n	800ec52 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800ebe6:	f7ff f90d 	bl	800de04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ebea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ebec:	2b00      	cmp	r3, #0
 800ebee:	f000 80a4 	beq.w	800ed3a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800ebf2:	f7ff f929 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ebf6:	f7ff f905 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ebfa:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ebfe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec00:	2d00      	cmp	r5, #0
 800ec02:	dc05      	bgt.n	800ec10 <xQueueSemaphoreTake+0xb0>
 800ec04:	e074      	b.n	800ecf0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800ec06:	1e6b      	subs	r3, r5, #1
 800ec08:	b2da      	uxtb	r2, r3
 800ec0a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec0c:	2a00      	cmp	r2, #0
 800ec0e:	d06f      	beq.n	800ecf0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec10:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec12:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec14:	2b00      	cmp	r3, #0
 800ec16:	d06b      	beq.n	800ecf0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec18:	f000 ff72 	bl	800fb00 <xTaskRemoveFromEventList>
 800ec1c:	2800      	cmp	r0, #0
 800ec1e:	d0f2      	beq.n	800ec06 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800ec20:	f001 f80a 	bl	800fc38 <vTaskMissedYield>
 800ec24:	e7ef      	b.n	800ec06 <xQueueSemaphoreTake+0xa6>
 800ec26:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec2a:	f383 8811 	msr	BASEPRI, r3
 800ec2e:	f3bf 8f6f 	isb	sy
 800ec32:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800ec36:	e7fe      	b.n	800ec36 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800ec38:	9b01      	ldr	r3, [sp, #4]
 800ec3a:	2b00      	cmp	r3, #0
 800ec3c:	f000 80d4 	beq.w	800ede8 <xQueueSemaphoreTake+0x288>
 800ec40:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec44:	f383 8811 	msr	BASEPRI, r3
 800ec48:	f3bf 8f6f 	isb	sy
 800ec4c:	f3bf 8f4f 	dsb	sy
 800ec50:	e7fe      	b.n	800ec50 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800ec52:	f7ff f8d7 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ec56:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ec5a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec5c:	2d00      	cmp	r5, #0
 800ec5e:	dc04      	bgt.n	800ec6a <xQueueSemaphoreTake+0x10a>
 800ec60:	e011      	b.n	800ec86 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800ec62:	1e6b      	subs	r3, r5, #1
 800ec64:	b2da      	uxtb	r2, r3
 800ec66:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec68:	b16a      	cbz	r2, 800ec86 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec6a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec6c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ec6e:	b153      	cbz	r3, 800ec86 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ec70:	f000 ff46 	bl	800fb00 <xTaskRemoveFromEventList>
 800ec74:	2800      	cmp	r0, #0
 800ec76:	d0f4      	beq.n	800ec62 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800ec78:	f000 ffde 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800ec7c:	1e6b      	subs	r3, r5, #1
 800ec7e:	b2da      	uxtb	r2, r3
 800ec80:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ec82:	2a00      	cmp	r2, #0
 800ec84:	d1f1      	bne.n	800ec6a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800ec86:	23ff      	movs	r3, #255	; 0xff
 800ec88:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ec8c:	f7ff f8dc 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ec90:	f7ff f8b8 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ec94:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ec98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ec9a:	2d00      	cmp	r5, #0
 800ec9c:	dd14      	ble.n	800ecc8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ec9e:	f104 0810 	add.w	r8, r4, #16
 800eca2:	e003      	b.n	800ecac <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800eca4:	1e6b      	subs	r3, r5, #1
 800eca6:	b2da      	uxtb	r2, r3
 800eca8:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecaa:	b16a      	cbz	r2, 800ecc8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecac:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecae:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ecb0:	b153      	cbz	r3, 800ecc8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ecb2:	f000 ff25 	bl	800fb00 <xTaskRemoveFromEventList>
 800ecb6:	2800      	cmp	r0, #0
 800ecb8:	d0f4      	beq.n	800eca4 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ecba:	f000 ffbd 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800ecbe:	1e6b      	subs	r3, r5, #1
 800ecc0:	b2da      	uxtb	r2, r3
 800ecc2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ecc4:	2a00      	cmp	r2, #0
 800ecc6:	d1f1      	bne.n	800ecac <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ecc8:	23ff      	movs	r3, #255	; 0xff
 800ecca:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ecce:	f7ff f8bb 	bl	800de48 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ecd2:	f000 fe15 	bl	800f900 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ecd6:	f7ff f895 	bl	800de04 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ecda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ecdc:	2b00      	cmp	r3, #0
 800ecde:	d07c      	beq.n	800edda <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ece0:	f7ff f8b2 	bl	800de48 <vPortExitCritical>
	return xReturn;
 800ece4:	2501      	movs	r5, #1
 800ece6:	e755      	b.n	800eb94 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ece8:	a802      	add	r0, sp, #8
 800ecea:	f000 ff51 	bl	800fb90 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ecee:	e75e      	b.n	800ebae <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800ecf0:	23ff      	movs	r3, #255	; 0xff
 800ecf2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ecf6:	f7ff f8a7 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ecfa:	f7ff f883 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ecfe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed04:	2d00      	cmp	r5, #0
 800ed06:	dd10      	ble.n	800ed2a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed08:	f104 0810 	add.w	r8, r4, #16
 800ed0c:	e003      	b.n	800ed16 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ed0e:	1e6b      	subs	r3, r5, #1
 800ed10:	b2da      	uxtb	r2, r3
 800ed12:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed14:	b14a      	cbz	r2, 800ed2a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed16:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed18:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed1a:	b133      	cbz	r3, 800ed2a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed1c:	f000 fef0 	bl	800fb00 <xTaskRemoveFromEventList>
 800ed20:	2800      	cmp	r0, #0
 800ed22:	d0f4      	beq.n	800ed0e <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800ed24:	f000 ff88 	bl	800fc38 <vTaskMissedYield>
 800ed28:	e7f1      	b.n	800ed0e <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800ed2a:	23ff      	movs	r3, #255	; 0xff
 800ed2c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ed30:	f7ff f88a 	bl	800de48 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800ed34:	f000 fde4 	bl	800f900 <xTaskResumeAll>
 800ed38:	e7d4      	b.n	800ece4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800ed3a:	f7ff f885 	bl	800de48 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ed3e:	6823      	ldr	r3, [r4, #0]
 800ed40:	2b00      	cmp	r3, #0
 800ed42:	d062      	beq.n	800ee0a <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800ed44:	9901      	ldr	r1, [sp, #4]
 800ed46:	4630      	mov	r0, r6
 800ed48:	f000 fe4c 	bl	800f9e4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800ed4c:	f7ff f85a 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800ed50:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ed54:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed56:	2d00      	cmp	r5, #0
 800ed58:	dc04      	bgt.n	800ed64 <xQueueSemaphoreTake+0x204>
 800ed5a:	e00d      	b.n	800ed78 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800ed5c:	1e6b      	subs	r3, r5, #1
 800ed5e:	b2da      	uxtb	r2, r3
 800ed60:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800ed62:	b14a      	cbz	r2, 800ed78 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed64:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed66:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800ed68:	b133      	cbz	r3, 800ed78 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ed6a:	f000 fec9 	bl	800fb00 <xTaskRemoveFromEventList>
 800ed6e:	2800      	cmp	r0, #0
 800ed70:	d0f4      	beq.n	800ed5c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800ed72:	f000 ff61 	bl	800fc38 <vTaskMissedYield>
 800ed76:	e7f1      	b.n	800ed5c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800ed78:	23ff      	movs	r3, #255	; 0xff
 800ed7a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800ed7e:	f7ff f863 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ed82:	f7ff f83f 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ed86:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ed8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed8c:	2d00      	cmp	r5, #0
 800ed8e:	dd10      	ble.n	800edb2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ed90:	f104 0810 	add.w	r8, r4, #16
 800ed94:	e003      	b.n	800ed9e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800ed96:	1e6b      	subs	r3, r5, #1
 800ed98:	b2da      	uxtb	r2, r3
 800ed9a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ed9c:	b14a      	cbz	r2, 800edb2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ed9e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eda0:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800eda2:	b133      	cbz	r3, 800edb2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800eda4:	f000 feac 	bl	800fb00 <xTaskRemoveFromEventList>
 800eda8:	2800      	cmp	r0, #0
 800edaa:	d0f4      	beq.n	800ed96 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800edac:	f000 ff44 	bl	800fc38 <vTaskMissedYield>
 800edb0:	e7f1      	b.n	800ed96 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800edb2:	23ff      	movs	r3, #255	; 0xff
 800edb4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800edb8:	f7ff f846 	bl	800de48 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800edbc:	f000 fda0 	bl	800f900 <xTaskResumeAll>
 800edc0:	2800      	cmp	r0, #0
 800edc2:	d18f      	bne.n	800ece4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800edc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800edc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800edcc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800edd0:	f3bf 8f4f 	dsb	sy
 800edd4:	f3bf 8f6f 	isb	sy
 800edd8:	e784      	b.n	800ece4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800edda:	f7ff f835 	bl	800de48 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800edde:	b92f      	cbnz	r7, 800edec <xQueueSemaphoreTake+0x28c>
}
 800ede0:	4638      	mov	r0, r7
 800ede2:	b004      	add	sp, #16
 800ede4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ede8:	4607      	mov	r7, r0
 800edea:	e6d1      	b.n	800eb90 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800edec:	f7ff f80a 	bl	800de04 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800edf0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800edf2:	b119      	cbz	r1, 800edfc <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800edf4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800edf6:	6819      	ldr	r1, [r3, #0]
 800edf8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800edfc:	68a0      	ldr	r0, [r4, #8]
 800edfe:	f000 ffbd 	bl	800fd7c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800ee02:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800ee04:	f7ff f820 	bl	800de48 <vPortExitCritical>
 800ee08:	e7ea      	b.n	800ede0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800ee0a:	f7fe fffb 	bl	800de04 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ee0e:	68a0      	ldr	r0, [r4, #8]
 800ee10:	f000 ff28 	bl	800fc64 <xTaskPriorityInherit>
 800ee14:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800ee16:	f7ff f817 	bl	800de48 <vPortExitCritical>
 800ee1a:	e793      	b.n	800ed44 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800ee1c:	b197      	cbz	r7, 800ee44 <xQueueSemaphoreTake+0x2e4>
 800ee1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee22:	f383 8811 	msr	BASEPRI, r3
 800ee26:	f3bf 8f6f 	isb	sy
 800ee2a:	f3bf 8f4f 	dsb	sy
 800ee2e:	e7fe      	b.n	800ee2e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee30:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800ee32:	3b01      	subs	r3, #1
 800ee34:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ee36:	b1ca      	cbz	r2, 800ee6c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ee38:	6923      	ldr	r3, [r4, #16]
 800ee3a:	b933      	cbnz	r3, 800ee4a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800ee3c:	f7ff f804 	bl	800de48 <vPortExitCritical>
				return pdPASS;
 800ee40:	2701      	movs	r7, #1
 800ee42:	e7cd      	b.n	800ede0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800ee44:	f7ff f800 	bl	800de48 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800ee48:	e7ca      	b.n	800ede0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ee4a:	f104 0010 	add.w	r0, r4, #16
 800ee4e:	f000 fe57 	bl	800fb00 <xTaskRemoveFromEventList>
 800ee52:	2800      	cmp	r0, #0
 800ee54:	d0f2      	beq.n	800ee3c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800ee56:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ee5a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ee5e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ee62:	f3bf 8f4f 	dsb	sy
 800ee66:	f3bf 8f6f 	isb	sy
 800ee6a:	e7e7      	b.n	800ee3c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800ee6c:	f000 ffda 	bl	800fe24 <pvTaskIncrementMutexHeldCount>
 800ee70:	60a0      	str	r0, [r4, #8]
 800ee72:	e7e1      	b.n	800ee38 <xQueueSemaphoreTake+0x2d8>

0800ee74 <xQueueReceiveFromISR>:
{
 800ee74:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800ee78:	b310      	cbz	r0, 800eec0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800ee7a:	460e      	mov	r6, r1
 800ee7c:	4617      	mov	r7, r2
 800ee7e:	4604      	mov	r4, r0
 800ee80:	b191      	cbz	r1, 800eea8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800ee82:	f7ff f8f3 	bl	800e06c <vPortValidateInterruptPriority>
	__asm volatile
 800ee86:	f3ef 8911 	mrs	r9, BASEPRI
 800ee8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee8e:	f383 8811 	msr	BASEPRI, r3
 800ee92:	f3bf 8f6f 	isb	sy
 800ee96:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800ee9a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800ee9c:	b9cd      	cbnz	r5, 800eed2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800ee9e:	4628      	mov	r0, r5
	__asm volatile
 800eea0:	f389 8811 	msr	BASEPRI, r9
}
 800eea4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800eea8:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800eeaa:	2b00      	cmp	r3, #0
 800eeac:	d0e9      	beq.n	800ee82 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800eeae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eeb2:	f383 8811 	msr	BASEPRI, r3
 800eeb6:	f3bf 8f6f 	isb	sy
 800eeba:	f3bf 8f4f 	dsb	sy
 800eebe:	e7fe      	b.n	800eebe <xQueueReceiveFromISR+0x4a>
 800eec0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eec4:	f383 8811 	msr	BASEPRI, r3
 800eec8:	f3bf 8f6f 	isb	sy
 800eecc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800eed0:	e7fe      	b.n	800eed0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800eed2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eed6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800eed8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800eedc:	b152      	cbz	r2, 800eef4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eede:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eee0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eee2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800eee4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800eee6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800eee8:	bf24      	itt	cs
 800eeea:	6821      	ldrcs	r1, [r4, #0]
 800eeec:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800eeee:	4630      	mov	r0, r6
 800eef0:	f01c fe61 	bl	802bbb6 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eef4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800eef6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800eefa:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800eefc:	d009      	beq.n	800ef12 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800eefe:	f108 0301 	add.w	r3, r8, #1
 800ef02:	b25b      	sxtb	r3, r3
 800ef04:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800ef08:	2001      	movs	r0, #1
	__asm volatile
 800ef0a:	f389 8811 	msr	BASEPRI, r9
}
 800ef0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800ef12:	6923      	ldr	r3, [r4, #16]
 800ef14:	2b00      	cmp	r3, #0
 800ef16:	d0f7      	beq.n	800ef08 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ef18:	f104 0010 	add.w	r0, r4, #16
 800ef1c:	f000 fdf0 	bl	800fb00 <xTaskRemoveFromEventList>
 800ef20:	2800      	cmp	r0, #0
 800ef22:	d0f1      	beq.n	800ef08 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800ef24:	2f00      	cmp	r7, #0
 800ef26:	d0ef      	beq.n	800ef08 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800ef28:	2001      	movs	r0, #1
 800ef2a:	6038      	str	r0, [r7, #0]
 800ef2c:	e7b8      	b.n	800eea0 <xQueueReceiveFromISR+0x2c>
 800ef2e:	bf00      	nop

0800ef30 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800ef30:	b158      	cbz	r0, 800ef4a <uxQueueMessagesWaiting+0x1a>
{
 800ef32:	b510      	push	{r4, lr}
 800ef34:	4604      	mov	r4, r0
 800ef36:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800ef38:	f7fe ff64 	bl	800de04 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800ef3c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800ef3e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ef40:	f7fe ff82 	bl	800de48 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef44:	9801      	ldr	r0, [sp, #4]
 800ef46:	b002      	add	sp, #8
 800ef48:	bd10      	pop	{r4, pc}
	__asm volatile
 800ef4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef4e:	f383 8811 	msr	BASEPRI, r3
 800ef52:	f3bf 8f6f 	isb	sy
 800ef56:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800ef5a:	e7fe      	b.n	800ef5a <uxQueueMessagesWaiting+0x2a>

0800ef5c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800ef5c:	b108      	cbz	r0, 800ef62 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800ef5e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800ef60:	4770      	bx	lr
 800ef62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef66:	f383 8811 	msr	BASEPRI, r3
 800ef6a:	f3bf 8f6f 	isb	sy
 800ef6e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800ef72:	e7fe      	b.n	800ef72 <uxQueueMessagesWaitingFromISR+0x16>
 800ef74:	0000      	movs	r0, r0
	...

0800ef78 <vQueueDelete>:
	configASSERT( pxQueue );
 800ef78:	b1f0      	cbz	r0, 800efb8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800ef7a:	4b21      	ldr	r3, [pc, #132]	; (800f000 <vQueueDelete+0x88>)
 800ef7c:	685a      	ldr	r2, [r3, #4]
 800ef7e:	4290      	cmp	r0, r2
 800ef80:	d025      	beq.n	800efce <vQueueDelete+0x56>
 800ef82:	68da      	ldr	r2, [r3, #12]
 800ef84:	4290      	cmp	r0, r2
 800ef86:	d02c      	beq.n	800efe2 <vQueueDelete+0x6a>
 800ef88:	695a      	ldr	r2, [r3, #20]
 800ef8a:	4290      	cmp	r0, r2
 800ef8c:	d02b      	beq.n	800efe6 <vQueueDelete+0x6e>
 800ef8e:	69da      	ldr	r2, [r3, #28]
 800ef90:	4290      	cmp	r0, r2
 800ef92:	d02a      	beq.n	800efea <vQueueDelete+0x72>
 800ef94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800ef96:	4290      	cmp	r0, r2
 800ef98:	d029      	beq.n	800efee <vQueueDelete+0x76>
 800ef9a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ef9c:	4290      	cmp	r0, r2
 800ef9e:	d01e      	beq.n	800efde <vQueueDelete+0x66>
 800efa0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800efa2:	4290      	cmp	r0, r2
 800efa4:	d025      	beq.n	800eff2 <vQueueDelete+0x7a>
 800efa6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800efa8:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800efaa:	bf08      	it	eq
 800efac:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800efae:	d00f      	beq.n	800efd0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800efb0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800efb4:	b14b      	cbz	r3, 800efca <vQueueDelete+0x52>
}
 800efb6:	4770      	bx	lr
 800efb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efbc:	f383 8811 	msr	BASEPRI, r3
 800efc0:	f3bf 8f6f 	isb	sy
 800efc4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800efc8:	e7fe      	b.n	800efc8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800efca:	f7fe be07 	b.w	800dbdc <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800efce:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800efd0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800eff8 <vQueueDelete+0x80>
 800efd4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800efd8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800efdc:	e7e8      	b.n	800efb0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800efde:	2205      	movs	r2, #5
 800efe0:	e7f6      	b.n	800efd0 <vQueueDelete+0x58>
 800efe2:	2201      	movs	r2, #1
 800efe4:	e7f4      	b.n	800efd0 <vQueueDelete+0x58>
 800efe6:	2202      	movs	r2, #2
 800efe8:	e7f2      	b.n	800efd0 <vQueueDelete+0x58>
 800efea:	2203      	movs	r2, #3
 800efec:	e7f0      	b.n	800efd0 <vQueueDelete+0x58>
 800efee:	2204      	movs	r2, #4
 800eff0:	e7ee      	b.n	800efd0 <vQueueDelete+0x58>
 800eff2:	2206      	movs	r2, #6
 800eff4:	e7ec      	b.n	800efd0 <vQueueDelete+0x58>
 800eff6:	bf00      	nop
	...
 800f000:	20013178 	.word	0x20013178

0800f004 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800f004:	4b12      	ldr	r3, [pc, #72]	; (800f050 <vQueueAddToRegistry+0x4c>)
 800f006:	681a      	ldr	r2, [r3, #0]
 800f008:	b17a      	cbz	r2, 800f02a <vQueueAddToRegistry+0x26>
 800f00a:	689a      	ldr	r2, [r3, #8]
 800f00c:	b162      	cbz	r2, 800f028 <vQueueAddToRegistry+0x24>
 800f00e:	691a      	ldr	r2, [r3, #16]
 800f010:	b192      	cbz	r2, 800f038 <vQueueAddToRegistry+0x34>
 800f012:	699a      	ldr	r2, [r3, #24]
 800f014:	b192      	cbz	r2, 800f03c <vQueueAddToRegistry+0x38>
 800f016:	6a1a      	ldr	r2, [r3, #32]
 800f018:	b192      	cbz	r2, 800f040 <vQueueAddToRegistry+0x3c>
 800f01a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800f01c:	b192      	cbz	r2, 800f044 <vQueueAddToRegistry+0x40>
 800f01e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800f020:	b192      	cbz	r2, 800f048 <vQueueAddToRegistry+0x44>
 800f022:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800f024:	b192      	cbz	r2, 800f04c <vQueueAddToRegistry+0x48>
	}
 800f026:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f028:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f02a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800f02e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800f032:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800f036:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800f038:	2202      	movs	r2, #2
 800f03a:	e7f6      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f03c:	2203      	movs	r2, #3
 800f03e:	e7f4      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f040:	2204      	movs	r2, #4
 800f042:	e7f2      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f044:	2205      	movs	r2, #5
 800f046:	e7f0      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f048:	2206      	movs	r2, #6
 800f04a:	e7ee      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f04c:	2207      	movs	r2, #7
 800f04e:	e7ec      	b.n	800f02a <vQueueAddToRegistry+0x26>
 800f050:	20013178 	.word	0x20013178

0800f054 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800f054:	b570      	push	{r4, r5, r6, lr}
 800f056:	4605      	mov	r5, r0
 800f058:	460e      	mov	r6, r1
 800f05a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800f05c:	f7fe fed2 	bl	800de04 <vPortEnterCritical>
 800f060:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f064:	2bff      	cmp	r3, #255	; 0xff
 800f066:	bf04      	itt	eq
 800f068:	2300      	moveq	r3, #0
 800f06a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800f06e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f072:	2bff      	cmp	r3, #255	; 0xff
 800f074:	bf04      	itt	eq
 800f076:	2300      	moveq	r3, #0
 800f078:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800f07c:	f7fe fee4 	bl	800de48 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800f080:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800f082:	2b00      	cmp	r3, #0
 800f084:	d043      	beq.n	800f10e <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800f086:	f7fe febd 	bl	800de04 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800f08a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800f08e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f090:	2c00      	cmp	r4, #0
 800f092:	dd14      	ble.n	800f0be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f094:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800f098:	e003      	b.n	800f0a2 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800f09a:	1e63      	subs	r3, r4, #1
 800f09c:	b2da      	uxtb	r2, r3
 800f09e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0a0:	b16a      	cbz	r2, 800f0be <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0a2:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0a4:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800f0a6:	b153      	cbz	r3, 800f0be <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800f0a8:	f000 fd2a 	bl	800fb00 <xTaskRemoveFromEventList>
 800f0ac:	2800      	cmp	r0, #0
 800f0ae:	d0f4      	beq.n	800f09a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800f0b0:	f000 fdc2 	bl	800fc38 <vTaskMissedYield>
			--cTxLock;
 800f0b4:	1e63      	subs	r3, r4, #1
 800f0b6:	b2da      	uxtb	r2, r3
 800f0b8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800f0ba:	2a00      	cmp	r2, #0
 800f0bc:	d1f1      	bne.n	800f0a2 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800f0be:	23ff      	movs	r3, #255	; 0xff
 800f0c0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800f0c4:	f7fe fec0 	bl	800de48 <vPortExitCritical>
	taskENTER_CRITICAL();
 800f0c8:	f7fe fe9c 	bl	800de04 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800f0cc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800f0d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0d2:	2c00      	cmp	r4, #0
 800f0d4:	dd14      	ble.n	800f100 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0d6:	f105 0610 	add.w	r6, r5, #16
 800f0da:	e003      	b.n	800f0e4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800f0dc:	1e63      	subs	r3, r4, #1
 800f0de:	b2da      	uxtb	r2, r3
 800f0e0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0e2:	b16a      	cbz	r2, 800f100 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f0e4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0e6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800f0e8:	b153      	cbz	r3, 800f100 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800f0ea:	f000 fd09 	bl	800fb00 <xTaskRemoveFromEventList>
 800f0ee:	2800      	cmp	r0, #0
 800f0f0:	d0f4      	beq.n	800f0dc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800f0f2:	f000 fda1 	bl	800fc38 <vTaskMissedYield>
				--cRxLock;
 800f0f6:	1e63      	subs	r3, r4, #1
 800f0f8:	b2da      	uxtb	r2, r3
 800f0fa:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800f0fc:	2a00      	cmp	r2, #0
 800f0fe:	d1f1      	bne.n	800f0e4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800f100:	23ff      	movs	r3, #255	; 0xff
 800f102:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800f106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800f10a:	f7fe be9d 	b.w	800de48 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800f10e:	4622      	mov	r2, r4
 800f110:	4631      	mov	r1, r6
 800f112:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800f116:	f000 fca9 	bl	800fa6c <vTaskPlaceOnEventListRestricted>
 800f11a:	e7b4      	b.n	800f086 <vQueueWaitForMessageRestricted+0x32>

0800f11c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800f11c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f120:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800f122:	f7fe fe6f 	bl	800de04 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800f126:	4a34      	ldr	r2, [pc, #208]	; (800f1f8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800f128:	4e34      	ldr	r6, [pc, #208]	; (800f1fc <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800f12a:	6813      	ldr	r3, [r2, #0]
 800f12c:	3301      	adds	r3, #1
 800f12e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800f130:	6833      	ldr	r3, [r6, #0]
 800f132:	2b00      	cmp	r3, #0
 800f134:	d032      	beq.n	800f19c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800f136:	4c32      	ldr	r4, [pc, #200]	; (800f200 <prvAddNewTaskToReadyList+0xe4>)
 800f138:	6823      	ldr	r3, [r4, #0]
 800f13a:	b33b      	cbz	r3, 800f18c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f13c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f13e:	4f31      	ldr	r7, [pc, #196]	; (800f204 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800f140:	4a31      	ldr	r2, [pc, #196]	; (800f208 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800f142:	4932      	ldr	r1, [pc, #200]	; (800f20c <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800f144:	6813      	ldr	r3, [r2, #0]
 800f146:	3301      	adds	r3, #1
 800f148:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800f14a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800f14c:	680b      	ldr	r3, [r1, #0]
 800f14e:	4283      	cmp	r3, r0
 800f150:	bf38      	it	cc
 800f152:	6008      	strcc	r0, [r1, #0]
 800f154:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800f158:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800f15c:	1d29      	adds	r1, r5, #4
 800f15e:	f7fe fdb1 	bl	800dcc4 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800f162:	f7fe fe71 	bl	800de48 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800f166:	6823      	ldr	r3, [r4, #0]
 800f168:	b173      	cbz	r3, 800f188 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800f16a:	6832      	ldr	r2, [r6, #0]
 800f16c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f16e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800f170:	429a      	cmp	r2, r3
 800f172:	d209      	bcs.n	800f188 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800f174:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f178:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f17c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f180:	f3bf 8f4f 	dsb	sy
 800f184:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800f188:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f18c:	6833      	ldr	r3, [r6, #0]
 800f18e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f190:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f192:	4f1c      	ldr	r7, [pc, #112]	; (800f204 <prvAddNewTaskToReadyList+0xe8>)
 800f194:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800f196:	bf98      	it	ls
 800f198:	6035      	strls	r5, [r6, #0]
 800f19a:	e7d1      	b.n	800f140 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800f19c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800f19e:	6813      	ldr	r3, [r2, #0]
 800f1a0:	2b01      	cmp	r3, #1
 800f1a2:	d003      	beq.n	800f1ac <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800f1a4:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800f1a6:	4f17      	ldr	r7, [pc, #92]	; (800f204 <prvAddNewTaskToReadyList+0xe8>)
 800f1a8:	4c15      	ldr	r4, [pc, #84]	; (800f200 <prvAddNewTaskToReadyList+0xe4>)
 800f1aa:	e7c9      	b.n	800f140 <prvAddNewTaskToReadyList+0x24>
 800f1ac:	4f15      	ldr	r7, [pc, #84]	; (800f204 <prvAddNewTaskToReadyList+0xe8>)
 800f1ae:	463c      	mov	r4, r7
 800f1b0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f1b4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f1b6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800f1b8:	f7fe fd74 	bl	800dca4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800f1bc:	45a0      	cmp	r8, r4
 800f1be:	d1f9      	bne.n	800f1b4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800f1c0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800f224 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800f1c4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f228 <prvAddNewTaskToReadyList+0x10c>
 800f1c8:	4c0d      	ldr	r4, [pc, #52]	; (800f200 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800f1ca:	4648      	mov	r0, r9
 800f1cc:	f7fe fd6a 	bl	800dca4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800f1d0:	4640      	mov	r0, r8
 800f1d2:	f7fe fd67 	bl	800dca4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800f1d6:	480e      	ldr	r0, [pc, #56]	; (800f210 <prvAddNewTaskToReadyList+0xf4>)
 800f1d8:	f7fe fd64 	bl	800dca4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800f1dc:	480d      	ldr	r0, [pc, #52]	; (800f214 <prvAddNewTaskToReadyList+0xf8>)
 800f1de:	f7fe fd61 	bl	800dca4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800f1e2:	480d      	ldr	r0, [pc, #52]	; (800f218 <prvAddNewTaskToReadyList+0xfc>)
 800f1e4:	f7fe fd5e 	bl	800dca4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800f1e8:	4b0c      	ldr	r3, [pc, #48]	; (800f21c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800f1ea:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800f1ec:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800f1f0:	4b0b      	ldr	r3, [pc, #44]	; (800f220 <prvAddNewTaskToReadyList+0x104>)
 800f1f2:	f8c3 8000 	str.w	r8, [r3]
}
 800f1f6:	e7a3      	b.n	800f140 <prvAddNewTaskToReadyList+0x24>
 800f1f8:	20013624 	.word	0x20013624
 800f1fc:	200131b8 	.word	0x200131b8
 800f200:	20013680 	.word	0x20013680
 800f204:	200131c4 	.word	0x200131c4
 800f208:	20013630 	.word	0x20013630
 800f20c:	20013634 	.word	0x20013634
 800f210:	2001366c 	.word	0x2001366c
 800f214:	20013698 	.word	0x20013698
 800f218:	20013684 	.word	0x20013684
 800f21c:	200131bc 	.word	0x200131bc
 800f220:	200131c0 	.word	0x200131c0
 800f224:	20013638 	.word	0x20013638
 800f228:	2001364c 	.word	0x2001364c

0800f22c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f22c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f230:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f232:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f236:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800f23a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f23c:	4606      	mov	r6, r0
 800f23e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f240:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f242:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800f244:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800f246:	f01c fb90 	bl	802b96a <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800f24a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f24c:	f1a9 0904 	sub.w	r9, r9, #4
 800f250:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800f252:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800f256:	2d00      	cmp	r5, #0
 800f258:	d079      	beq.n	800f34e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f25a:	782b      	ldrb	r3, [r5, #0]
 800f25c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800f260:	2b00      	cmp	r3, #0
 800f262:	d03b      	beq.n	800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f264:	786b      	ldrb	r3, [r5, #1]
 800f266:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800f26a:	2b00      	cmp	r3, #0
 800f26c:	d036      	beq.n	800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f26e:	78ab      	ldrb	r3, [r5, #2]
 800f270:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800f274:	b393      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f276:	78eb      	ldrb	r3, [r5, #3]
 800f278:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800f27c:	b373      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f27e:	792b      	ldrb	r3, [r5, #4]
 800f280:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800f284:	b353      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f286:	796b      	ldrb	r3, [r5, #5]
 800f288:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800f28c:	b333      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f28e:	79ab      	ldrb	r3, [r5, #6]
 800f290:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800f294:	b313      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f296:	79eb      	ldrb	r3, [r5, #7]
 800f298:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800f29c:	b1f3      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f29e:	7a2b      	ldrb	r3, [r5, #8]
 800f2a0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800f2a4:	b1d3      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2a6:	7a6b      	ldrb	r3, [r5, #9]
 800f2a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800f2ac:	b1b3      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2ae:	7aab      	ldrb	r3, [r5, #10]
 800f2b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800f2b4:	b193      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2b6:	7aeb      	ldrb	r3, [r5, #11]
 800f2b8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800f2bc:	b173      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2be:	7b2b      	ldrb	r3, [r5, #12]
 800f2c0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800f2c4:	b153      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2c6:	7b6b      	ldrb	r3, [r5, #13]
 800f2c8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800f2cc:	b133      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2ce:	7bab      	ldrb	r3, [r5, #14]
 800f2d0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800f2d4:	b113      	cbz	r3, 800f2dc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800f2d6:	7beb      	ldrb	r3, [r5, #15]
 800f2d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800f2dc:	2300      	movs	r3, #0
 800f2de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800f2e2:	9d08      	ldr	r5, [sp, #32]
 800f2e4:	2d37      	cmp	r5, #55	; 0x37
 800f2e6:	bf28      	it	cs
 800f2e8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800f2ea:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800f2ee:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800f2f0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f2f2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800f2f4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800f2f8:	f7fe fce0 	bl	800dcbc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f2fc:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800f300:	f104 0018 	add.w	r0, r4, #24
 800f304:	f7fe fcda 	bl	800dcbc <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f308:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800f30a:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f30e:	4651      	mov	r1, sl
 800f310:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800f312:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800f314:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800f316:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800f31a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f31e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f322:	f01c fb22 	bl	802b96a <memset>
 800f326:	4b0b      	ldr	r3, [pc, #44]	; (800f354 <prvInitialiseNewTask.constprop.0+0x128>)
 800f328:	65e3      	str	r3, [r4, #92]	; 0x5c
 800f32a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800f32e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f330:	463a      	mov	r2, r7
 800f332:	4631      	mov	r1, r6
 800f334:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800f336:	6625      	str	r5, [r4, #96]	; 0x60
 800f338:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800f33a:	f7fe fd3d 	bl	800ddb8 <pxPortInitialiseStack>
 800f33e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800f340:	f1b8 0f00 	cmp.w	r8, #0
 800f344:	d001      	beq.n	800f34a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800f346:	f8c8 4000 	str.w	r4, [r8]
}
 800f34a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800f34e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800f352:	e7c6      	b.n	800f2e2 <prvInitialiseNewTask.constprop.0+0xb6>
 800f354:	20014148 	.word	0x20014148

0800f358 <prvIdleTask>:
{
 800f358:	b580      	push	{r7, lr}
 800f35a:	4d23      	ldr	r5, [pc, #140]	; (800f3e8 <prvIdleTask+0x90>)
 800f35c:	4f23      	ldr	r7, [pc, #140]	; (800f3ec <prvIdleTask+0x94>)
 800f35e:	4e24      	ldr	r6, [pc, #144]	; (800f3f0 <prvIdleTask+0x98>)
 800f360:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800f3f4 <prvIdleTask+0x9c>
				taskYIELD();
 800f364:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800f368:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f36c:	682b      	ldr	r3, [r5, #0]
 800f36e:	b35b      	cbz	r3, 800f3c8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800f370:	f7fe fd48 	bl	800de04 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f374:	68fb      	ldr	r3, [r7, #12]
 800f376:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f378:	1d20      	adds	r0, r4, #4
 800f37a:	f7fe fccb 	bl	800dd14 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800f37e:	6833      	ldr	r3, [r6, #0]
 800f380:	3b01      	subs	r3, #1
 800f382:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800f384:	682b      	ldr	r3, [r5, #0]
 800f386:	3b01      	subs	r3, #1
 800f388:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800f38a:	f7fe fd5d 	bl	800de48 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800f38e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f392:	f01c fb33 	bl	802b9fc <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800f396:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800f39a:	b163      	cbz	r3, 800f3b6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800f39c:	2b01      	cmp	r3, #1
 800f39e:	d01e      	beq.n	800f3de <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800f3a0:	2b02      	cmp	r3, #2
 800f3a2:	d0e3      	beq.n	800f36c <prvIdleTask+0x14>
 800f3a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f3a8:	f383 8811 	msr	BASEPRI, r3
 800f3ac:	f3bf 8f6f 	isb	sy
 800f3b0:	f3bf 8f4f 	dsb	sy
 800f3b4:	e7fe      	b.n	800f3b4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800f3b6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f3b8:	f7fe fc10 	bl	800dbdc <vPortFree>
				vPortFree( pxTCB );
 800f3bc:	4620      	mov	r0, r4
 800f3be:	f7fe fc0d 	bl	800dbdc <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800f3c2:	682b      	ldr	r3, [r5, #0]
 800f3c4:	2b00      	cmp	r3, #0
 800f3c6:	d1d3      	bne.n	800f370 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800f3c8:	f8d8 3000 	ldr.w	r3, [r8]
 800f3cc:	2b01      	cmp	r3, #1
 800f3ce:	d9cd      	bls.n	800f36c <prvIdleTask+0x14>
				taskYIELD();
 800f3d0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800f3d4:	f3bf 8f4f 	dsb	sy
 800f3d8:	f3bf 8f6f 	isb	sy
 800f3dc:	e7c6      	b.n	800f36c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800f3de:	4620      	mov	r0, r4
 800f3e0:	f7fe fbfc 	bl	800dbdc <vPortFree>
 800f3e4:	e7c2      	b.n	800f36c <prvIdleTask+0x14>
 800f3e6:	bf00      	nop
 800f3e8:	20013628 	.word	0x20013628
 800f3ec:	20013698 	.word	0x20013698
 800f3f0:	20013624 	.word	0x20013624
 800f3f4:	200131c4 	.word	0x200131c4

0800f3f8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800f3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800f3fc:	4b47      	ldr	r3, [pc, #284]	; (800f51c <xTaskIncrementTick.part.0+0x124>)
 800f3fe:	681e      	ldr	r6, [r3, #0]
 800f400:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800f402:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800f404:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800f406:	2e00      	cmp	r6, #0
 800f408:	d040      	beq.n	800f48c <xTaskIncrementTick.part.0+0x94>
 800f40a:	f8df b124 	ldr.w	fp, [pc, #292]	; 800f530 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800f40e:	f8db 3000 	ldr.w	r3, [fp]
 800f412:	429e      	cmp	r6, r3
 800f414:	d347      	bcc.n	800f4a6 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f416:	4f42      	ldr	r7, [pc, #264]	; (800f520 <xTaskIncrementTick.part.0+0x128>)
 800f418:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800f534 <xTaskIncrementTick.part.0+0x13c>
 800f41c:	683b      	ldr	r3, [r7, #0]
 800f41e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800f538 <xTaskIncrementTick.part.0+0x140>
 800f422:	681d      	ldr	r5, [r3, #0]
 800f424:	2d00      	cmp	r5, #0
 800f426:	d073      	beq.n	800f510 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800f428:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800f53c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800f42c:	2500      	movs	r5, #0
 800f42e:	e022      	b.n	800f476 <xTaskIncrementTick.part.0+0x7e>
 800f430:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f432:	f7fe fc6f 	bl	800dd14 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f436:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f438:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f43a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800f43e:	b113      	cbz	r3, 800f446 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f440:	f7fe fc68 	bl	800dd14 <uxListRemove>
 800f444:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800f446:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f448:	f8d8 2000 	ldr.w	r2, [r8]
 800f44c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f450:	4293      	cmp	r3, r2
 800f452:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f456:	bf88      	it	hi
 800f458:	f8c8 3000 	strhi.w	r3, [r8]
 800f45c:	f7fe fc32 	bl	800dcc4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f460:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f464:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f466:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f468:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f46a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800f46c:	4291      	cmp	r1, r2
 800f46e:	bf28      	it	cs
 800f470:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f472:	2b00      	cmp	r3, #0
 800f474:	d04c      	beq.n	800f510 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f476:	683b      	ldr	r3, [r7, #0]
 800f478:	68db      	ldr	r3, [r3, #12]
 800f47a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800f47c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f47e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800f480:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f482:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800f484:	d2d4      	bcs.n	800f430 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800f486:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800f48a:	e011      	b.n	800f4b0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800f48c:	4b24      	ldr	r3, [pc, #144]	; (800f520 <xTaskIncrementTick.part.0+0x128>)
 800f48e:	681a      	ldr	r2, [r3, #0]
 800f490:	6812      	ldr	r2, [r2, #0]
 800f492:	b30a      	cbz	r2, 800f4d8 <xTaskIncrementTick.part.0+0xe0>
 800f494:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f498:	f383 8811 	msr	BASEPRI, r3
 800f49c:	f3bf 8f6f 	isb	sy
 800f4a0:	f3bf 8f4f 	dsb	sy
 800f4a4:	e7fe      	b.n	800f4a4 <xTaskIncrementTick.part.0+0xac>
 800f4a6:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800f534 <xTaskIncrementTick.part.0+0x13c>
 800f4aa:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800f538 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800f4ae:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f4b0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800f4b4:	491b      	ldr	r1, [pc, #108]	; (800f524 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800f4b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f4b8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800f4bc:	009b      	lsls	r3, r3, #2
 800f4be:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800f4c2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800f4c4:	2a02      	cmp	r2, #2
 800f4c6:	bf28      	it	cs
 800f4c8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800f4ca:	2b00      	cmp	r3, #0
}
 800f4cc:	bf0c      	ite	eq
 800f4ce:	4628      	moveq	r0, r5
 800f4d0:	2001      	movne	r0, #1
 800f4d2:	b003      	add	sp, #12
 800f4d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800f4d8:	4a13      	ldr	r2, [pc, #76]	; (800f528 <xTaskIncrementTick.part.0+0x130>)
 800f4da:	6818      	ldr	r0, [r3, #0]
 800f4dc:	6811      	ldr	r1, [r2, #0]
 800f4de:	6019      	str	r1, [r3, #0]
 800f4e0:	4912      	ldr	r1, [pc, #72]	; (800f52c <xTaskIncrementTick.part.0+0x134>)
 800f4e2:	6010      	str	r0, [r2, #0]
 800f4e4:	680a      	ldr	r2, [r1, #0]
 800f4e6:	3201      	adds	r2, #1
 800f4e8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f4ea:	681a      	ldr	r2, [r3, #0]
 800f4ec:	6812      	ldr	r2, [r2, #0]
 800f4ee:	b932      	cbnz	r2, 800f4fe <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800f4f0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800f530 <xTaskIncrementTick.part.0+0x138>
 800f4f4:	f04f 33ff 	mov.w	r3, #4294967295
 800f4f8:	f8cb 3000 	str.w	r3, [fp]
 800f4fc:	e787      	b.n	800f40e <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f4fe:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f500:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800f530 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f504:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f506:	68db      	ldr	r3, [r3, #12]
 800f508:	685b      	ldr	r3, [r3, #4]
 800f50a:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800f50e:	e77e      	b.n	800f40e <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f510:	f04f 33ff 	mov.w	r3, #4294967295
 800f514:	f8cb 3000 	str.w	r3, [fp]
					break;
 800f518:	e7ca      	b.n	800f4b0 <xTaskIncrementTick.part.0+0xb8>
 800f51a:	bf00      	nop
 800f51c:	200136ac 	.word	0x200136ac
 800f520:	200131bc 	.word	0x200131bc
 800f524:	200136b0 	.word	0x200136b0
 800f528:	200131c0 	.word	0x200131c0
 800f52c:	20013664 	.word	0x20013664
 800f530:	20013660 	.word	0x20013660
 800f534:	200131c4 	.word	0x200131c4
 800f538:	200131b8 	.word	0x200131b8
 800f53c:	20013634 	.word	0x20013634

0800f540 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800f540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800f544:	4d41      	ldr	r5, [pc, #260]	; (800f64c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800f546:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800f548:	f7fe fc5c 	bl	800de04 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800f54c:	682b      	ldr	r3, [r5, #0]
 800f54e:	3b01      	subs	r3, #1
 800f550:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f552:	682b      	ldr	r3, [r5, #0]
 800f554:	2b00      	cmp	r3, #0
 800f556:	d161      	bne.n	800f61c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800f558:	4b3d      	ldr	r3, [pc, #244]	; (800f650 <xTaskResumeAll.part.0+0x110>)
 800f55a:	681b      	ldr	r3, [r3, #0]
 800f55c:	2b00      	cmp	r3, #0
 800f55e:	d05d      	beq.n	800f61c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f560:	4e3c      	ldr	r6, [pc, #240]	; (800f654 <xTaskResumeAll.part.0+0x114>)
 800f562:	6833      	ldr	r3, [r6, #0]
 800f564:	2b00      	cmp	r3, #0
 800f566:	d06e      	beq.n	800f646 <xTaskResumeAll.part.0+0x106>
 800f568:	4f3b      	ldr	r7, [pc, #236]	; (800f658 <xTaskResumeAll.part.0+0x118>)
 800f56a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800f668 <xTaskResumeAll.part.0+0x128>
 800f56e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800f66c <xTaskResumeAll.part.0+0x12c>
 800f572:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800f670 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f576:	68f3      	ldr	r3, [r6, #12]
 800f578:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f57a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800f57e:	f104 0018 	add.w	r0, r4, #24
 800f582:	f7fe fbc7 	bl	800dd14 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800f586:	4658      	mov	r0, fp
 800f588:	f7fe fbc4 	bl	800dd14 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800f58c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800f58e:	683a      	ldr	r2, [r7, #0]
 800f590:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800f594:	4293      	cmp	r3, r2
 800f596:	4659      	mov	r1, fp
 800f598:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800f59c:	bf88      	it	hi
 800f59e:	603b      	strhi	r3, [r7, #0]
 800f5a0:	f7fe fb90 	bl	800dcc4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800f5a4:	f8d8 3000 	ldr.w	r3, [r8]
 800f5a8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800f5aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f5ac:	429a      	cmp	r2, r3
 800f5ae:	d33d      	bcc.n	800f62c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800f5b0:	2301      	movs	r3, #1
 800f5b2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f5b6:	6833      	ldr	r3, [r6, #0]
 800f5b8:	2b00      	cmp	r3, #0
 800f5ba:	d1dc      	bne.n	800f576 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f5bc:	4b27      	ldr	r3, [pc, #156]	; (800f65c <xTaskResumeAll.part.0+0x11c>)
 800f5be:	681a      	ldr	r2, [r3, #0]
 800f5c0:	6812      	ldr	r2, [r2, #0]
 800f5c2:	2a00      	cmp	r2, #0
 800f5c4:	d03a      	beq.n	800f63c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5c6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5c8:	4b25      	ldr	r3, [pc, #148]	; (800f660 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f5ca:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800f5cc:	68d2      	ldr	r2, [r2, #12]
 800f5ce:	6852      	ldr	r2, [r2, #4]
 800f5d0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800f5d2:	4e24      	ldr	r6, [pc, #144]	; (800f664 <xTaskResumeAll.part.0+0x124>)
 800f5d4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800f5d6:	b194      	cbz	r4, 800f5fe <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800f5d8:	2701      	movs	r7, #1
 800f5da:	e006      	b.n	800f5ea <xTaskResumeAll.part.0+0xaa>
 800f5dc:	f7ff ff0c 	bl	800f3f8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800f5e0:	b108      	cbz	r0, 800f5e6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800f5e2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5e6:	3c01      	subs	r4, #1
 800f5e8:	d008      	beq.n	800f5fc <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f5ea:	682b      	ldr	r3, [r5, #0]
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	d0f5      	beq.n	800f5dc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800f5f0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5f2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800f5f4:	f103 0301 	add.w	r3, r3, #1
 800f5f8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800f5fa:	d1f6      	bne.n	800f5ea <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800f5fc:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800f5fe:	f8da 3000 	ldr.w	r3, [sl]
 800f602:	b15b      	cbz	r3, 800f61c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800f604:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f608:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f60c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f610:	f3bf 8f4f 	dsb	sy
 800f614:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800f618:	2001      	movs	r0, #1
 800f61a:	e000      	b.n	800f61e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800f61c:	2000      	movs	r0, #0
 800f61e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800f620:	f7fe fc12 	bl	800de48 <vPortExitCritical>
}
 800f624:	9801      	ldr	r0, [sp, #4]
 800f626:	b003      	add	sp, #12
 800f628:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800f62c:	6833      	ldr	r3, [r6, #0]
 800f62e:	2b00      	cmp	r3, #0
 800f630:	d1a1      	bne.n	800f576 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800f632:	4b0a      	ldr	r3, [pc, #40]	; (800f65c <xTaskResumeAll.part.0+0x11c>)
 800f634:	681a      	ldr	r2, [r3, #0]
 800f636:	6812      	ldr	r2, [r2, #0]
 800f638:	2a00      	cmp	r2, #0
 800f63a:	d1c4      	bne.n	800f5c6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800f63c:	4b08      	ldr	r3, [pc, #32]	; (800f660 <xTaskResumeAll.part.0+0x120>)
 800f63e:	f04f 32ff 	mov.w	r2, #4294967295
 800f642:	601a      	str	r2, [r3, #0]
 800f644:	e7c5      	b.n	800f5d2 <xTaskResumeAll.part.0+0x92>
 800f646:	f8df a028 	ldr.w	sl, [pc, #40]	; 800f670 <xTaskResumeAll.part.0+0x130>
 800f64a:	e7c2      	b.n	800f5d2 <xTaskResumeAll.part.0+0x92>
 800f64c:	2001362c 	.word	0x2001362c
 800f650:	20013624 	.word	0x20013624
 800f654:	2001366c 	.word	0x2001366c
 800f658:	20013634 	.word	0x20013634
 800f65c:	200131bc 	.word	0x200131bc
 800f660:	20013660 	.word	0x20013660
 800f664:	20013668 	.word	0x20013668
 800f668:	200131c4 	.word	0x200131c4
 800f66c:	200131b8 	.word	0x200131b8
 800f670:	200136b0 	.word	0x200136b0

0800f674 <xTaskCreateStatic>:
	{
 800f674:	b530      	push	{r4, r5, lr}
 800f676:	b087      	sub	sp, #28
 800f678:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800f67a:	b1c4      	cbz	r4, 800f6ae <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800f67c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f67e:	b16d      	cbz	r5, 800f69c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f680:	25ac      	movs	r5, #172	; 0xac
 800f682:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800f684:	9d05      	ldr	r5, [sp, #20]
 800f686:	2dac      	cmp	r5, #172	; 0xac
 800f688:	d01a      	beq.n	800f6c0 <xTaskCreateStatic+0x4c>
 800f68a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f68e:	f383 8811 	msr	BASEPRI, r3
 800f692:	f3bf 8f6f 	isb	sy
 800f696:	f3bf 8f4f 	dsb	sy
 800f69a:	e7fe      	b.n	800f69a <xTaskCreateStatic+0x26>
 800f69c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6a0:	f383 8811 	msr	BASEPRI, r3
 800f6a4:	f3bf 8f6f 	isb	sy
 800f6a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f6ac:	e7fe      	b.n	800f6ac <xTaskCreateStatic+0x38>
 800f6ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f6b2:	f383 8811 	msr	BASEPRI, r3
 800f6b6:	f3bf 8f6f 	isb	sy
 800f6ba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f6be:	e7fe      	b.n	800f6be <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f6c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800f6c2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f6c4:	2402      	movs	r4, #2
 800f6c6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f6ca:	ac04      	add	r4, sp, #16
 800f6cc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800f6d0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f6d2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f6d4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f6d6:	f7ff fda9 	bl	800f22c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f6da:	980c      	ldr	r0, [sp, #48]	; 0x30
 800f6dc:	f7ff fd1e 	bl	800f11c <prvAddNewTaskToReadyList>
	}
 800f6e0:	9804      	ldr	r0, [sp, #16]
 800f6e2:	b007      	add	sp, #28
 800f6e4:	bd30      	pop	{r4, r5, pc}
 800f6e6:	bf00      	nop

0800f6e8 <xTaskCreate>:
	{
 800f6e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f6ec:	4607      	mov	r7, r0
 800f6ee:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f6f0:	0090      	lsls	r0, r2, #2
	{
 800f6f2:	4615      	mov	r5, r2
 800f6f4:	4688      	mov	r8, r1
 800f6f6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800f6f8:	f7fe f9b4 	bl	800da64 <pvPortMalloc>
			if( pxStack != NULL )
 800f6fc:	b1d8      	cbz	r0, 800f736 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800f6fe:	4604      	mov	r4, r0
 800f700:	20ac      	movs	r0, #172	; 0xac
 800f702:	f7fe f9af 	bl	800da64 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800f706:	4606      	mov	r6, r0
 800f708:	b1d0      	cbz	r0, 800f740 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800f70a:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800f70c:	2400      	movs	r4, #0
 800f70e:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800f712:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800f714:	9401      	str	r4, [sp, #4]
 800f716:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800f718:	9602      	str	r6, [sp, #8]
 800f71a:	464b      	mov	r3, r9
 800f71c:	462a      	mov	r2, r5
 800f71e:	4641      	mov	r1, r8
 800f720:	4638      	mov	r0, r7
 800f722:	9400      	str	r4, [sp, #0]
 800f724:	f7ff fd82 	bl	800f22c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f728:	4630      	mov	r0, r6
 800f72a:	f7ff fcf7 	bl	800f11c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800f72e:	2001      	movs	r0, #1
	}
 800f730:	b005      	add	sp, #20
 800f732:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f736:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800f73a:	b005      	add	sp, #20
 800f73c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800f740:	4620      	mov	r0, r4
 800f742:	f7fe fa4b 	bl	800dbdc <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800f746:	f04f 30ff 	mov.w	r0, #4294967295
 800f74a:	e7f1      	b.n	800f730 <xTaskCreate+0x48>

0800f74c <vTaskDelay>:
	{
 800f74c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800f74e:	b950      	cbnz	r0, 800f766 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800f750:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f754:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f758:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f75c:	f3bf 8f4f 	dsb	sy
 800f760:	f3bf 8f6f 	isb	sy
	}
 800f764:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800f766:	4d1e      	ldr	r5, [pc, #120]	; (800f7e0 <vTaskDelay+0x94>)
 800f768:	682b      	ldr	r3, [r5, #0]
 800f76a:	b143      	cbz	r3, 800f77e <vTaskDelay+0x32>
 800f76c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f770:	f383 8811 	msr	BASEPRI, r3
 800f774:	f3bf 8f6f 	isb	sy
 800f778:	f3bf 8f4f 	dsb	sy
 800f77c:	e7fe      	b.n	800f77c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800f77e:	682b      	ldr	r3, [r5, #0]
 800f780:	3301      	adds	r3, #1
 800f782:	4604      	mov	r4, r0
 800f784:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800f786:	4b17      	ldr	r3, [pc, #92]	; (800f7e4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f788:	4e17      	ldr	r6, [pc, #92]	; (800f7e8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800f78a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f78c:	6830      	ldr	r0, [r6, #0]
 800f78e:	3004      	adds	r0, #4
 800f790:	f7fe fac0 	bl	800dd14 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800f794:	6833      	ldr	r3, [r6, #0]
 800f796:	19e4      	adds	r4, r4, r7
 800f798:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800f79a:	d310      	bcc.n	800f7be <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f79c:	4b13      	ldr	r3, [pc, #76]	; (800f7ec <vTaskDelay+0xa0>)
 800f79e:	6818      	ldr	r0, [r3, #0]
 800f7a0:	6831      	ldr	r1, [r6, #0]
 800f7a2:	3104      	adds	r1, #4
 800f7a4:	f7fe fa9e 	bl	800dce4 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800f7a8:	682b      	ldr	r3, [r5, #0]
 800f7aa:	b9a3      	cbnz	r3, 800f7d6 <vTaskDelay+0x8a>
 800f7ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7b0:	f383 8811 	msr	BASEPRI, r3
 800f7b4:	f3bf 8f6f 	isb	sy
 800f7b8:	f3bf 8f4f 	dsb	sy
 800f7bc:	e7fe      	b.n	800f7bc <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800f7be:	4b0c      	ldr	r3, [pc, #48]	; (800f7f0 <vTaskDelay+0xa4>)
 800f7c0:	6818      	ldr	r0, [r3, #0]
 800f7c2:	6831      	ldr	r1, [r6, #0]
 800f7c4:	3104      	adds	r1, #4
 800f7c6:	f7fe fa8d 	bl	800dce4 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800f7ca:	4b0a      	ldr	r3, [pc, #40]	; (800f7f4 <vTaskDelay+0xa8>)
 800f7cc:	681a      	ldr	r2, [r3, #0]
 800f7ce:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800f7d0:	bf38      	it	cc
 800f7d2:	601c      	strcc	r4, [r3, #0]
 800f7d4:	e7e8      	b.n	800f7a8 <vTaskDelay+0x5c>
 800f7d6:	f7ff feb3 	bl	800f540 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800f7da:	2800      	cmp	r0, #0
 800f7dc:	d0b8      	beq.n	800f750 <vTaskDelay+0x4>
	}
 800f7de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f7e0:	2001362c 	.word	0x2001362c
 800f7e4:	200136ac 	.word	0x200136ac
 800f7e8:	200131b8 	.word	0x200131b8
 800f7ec:	200131c0 	.word	0x200131c0
 800f7f0:	200131bc 	.word	0x200131bc
 800f7f4:	20013660 	.word	0x20013660

0800f7f8 <vTaskStartScheduler>:
{
 800f7f8:	b530      	push	{r4, r5, lr}
 800f7fa:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f7fc:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800f7fe:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f800:	a906      	add	r1, sp, #24
 800f802:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800f804:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800f808:	f7fe f90e 	bl	800da28 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800f80c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800f810:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800f812:	b1bb      	cbz	r3, 800f844 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800f814:	b16d      	cbz	r5, 800f832 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800f816:	21ac      	movs	r1, #172	; 0xac
 800f818:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800f81a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800f81c:	29ac      	cmp	r1, #172	; 0xac
 800f81e:	d01a      	beq.n	800f856 <vTaskStartScheduler+0x5e>
 800f820:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f824:	f383 8811 	msr	BASEPRI, r3
 800f828:	f3bf 8f6f 	isb	sy
 800f82c:	f3bf 8f4f 	dsb	sy
 800f830:	e7fe      	b.n	800f830 <vTaskStartScheduler+0x38>
 800f832:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f836:	f383 8811 	msr	BASEPRI, r3
 800f83a:	f3bf 8f6f 	isb	sy
 800f83e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800f842:	e7fe      	b.n	800f842 <vTaskStartScheduler+0x4a>
 800f844:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f848:	f383 8811 	msr	BASEPRI, r3
 800f84c:	f3bf 8f6f 	isb	sy
 800f850:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800f854:	e7fe      	b.n	800f854 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f856:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f858:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800f85a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800f85c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f860:	4623      	mov	r3, r4
 800f862:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800f866:	491b      	ldr	r1, [pc, #108]	; (800f8d4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800f868:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800f86a:	9400      	str	r4, [sp, #0]
 800f86c:	481a      	ldr	r0, [pc, #104]	; (800f8d8 <vTaskStartScheduler+0xe0>)
 800f86e:	f7ff fcdd 	bl	800f22c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800f872:	4628      	mov	r0, r5
 800f874:	f7ff fc52 	bl	800f11c <prvAddNewTaskToReadyList>
		return xReturn;
 800f878:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800f87a:	b1eb      	cbz	r3, 800f8b8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800f87c:	f000 fc6e 	bl	801015c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800f880:	2801      	cmp	r0, #1
 800f882:	d11b      	bne.n	800f8bc <vTaskStartScheduler+0xc4>
 800f884:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f888:	f383 8811 	msr	BASEPRI, r3
 800f88c:	f3bf 8f6f 	isb	sy
 800f890:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f894:	4b11      	ldr	r3, [pc, #68]	; (800f8dc <vTaskStartScheduler+0xe4>)
 800f896:	4a12      	ldr	r2, [pc, #72]	; (800f8e0 <vTaskStartScheduler+0xe8>)
 800f898:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800f89a:	4912      	ldr	r1, [pc, #72]	; (800f8e4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f89c:	3358      	adds	r3, #88	; 0x58
 800f89e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800f8a0:	4a11      	ldr	r2, [pc, #68]	; (800f8e8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f8a2:	4b12      	ldr	r3, [pc, #72]	; (800f8ec <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800f8a4:	f04f 35ff 	mov.w	r5, #4294967295
 800f8a8:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800f8aa:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800f8ac:	601c      	str	r4, [r3, #0]
}
 800f8ae:	b00b      	add	sp, #44	; 0x2c
 800f8b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800f8b4:	f7fe bb38 	b.w	800df28 <xPortStartScheduler>
}
 800f8b8:	b00b      	add	sp, #44	; 0x2c
 800f8ba:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800f8bc:	3001      	adds	r0, #1
 800f8be:	d1fb      	bne.n	800f8b8 <vTaskStartScheduler+0xc0>
 800f8c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f8c4:	f383 8811 	msr	BASEPRI, r3
 800f8c8:	f3bf 8f6f 	isb	sy
 800f8cc:	f3bf 8f4f 	dsb	sy
 800f8d0:	e7fe      	b.n	800f8d0 <vTaskStartScheduler+0xd8>
 800f8d2:	bf00      	nop
 800f8d4:	0802f034 	.word	0x0802f034
 800f8d8:	0800f359 	.word	0x0800f359
 800f8dc:	200131b8 	.word	0x200131b8
 800f8e0:	20000160 	.word	0x20000160
 800f8e4:	20013660 	.word	0x20013660
 800f8e8:	20013680 	.word	0x20013680
 800f8ec:	200136ac 	.word	0x200136ac

0800f8f0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800f8f0:	4a02      	ldr	r2, [pc, #8]	; (800f8fc <vTaskSuspendAll+0xc>)
 800f8f2:	6813      	ldr	r3, [r2, #0]
 800f8f4:	3301      	adds	r3, #1
 800f8f6:	6013      	str	r3, [r2, #0]
}
 800f8f8:	4770      	bx	lr
 800f8fa:	bf00      	nop
 800f8fc:	2001362c 	.word	0x2001362c

0800f900 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800f900:	4b06      	ldr	r3, [pc, #24]	; (800f91c <xTaskResumeAll+0x1c>)
 800f902:	681b      	ldr	r3, [r3, #0]
 800f904:	b943      	cbnz	r3, 800f918 <xTaskResumeAll+0x18>
 800f906:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f90a:	f383 8811 	msr	BASEPRI, r3
 800f90e:	f3bf 8f6f 	isb	sy
 800f912:	f3bf 8f4f 	dsb	sy
 800f916:	e7fe      	b.n	800f916 <xTaskResumeAll+0x16>
 800f918:	f7ff be12 	b.w	800f540 <xTaskResumeAll.part.0>
 800f91c:	2001362c 	.word	0x2001362c

0800f920 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800f920:	4b01      	ldr	r3, [pc, #4]	; (800f928 <xTaskGetTickCount+0x8>)
 800f922:	6818      	ldr	r0, [r3, #0]
}
 800f924:	4770      	bx	lr
 800f926:	bf00      	nop
 800f928:	200136ac 	.word	0x200136ac

0800f92c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800f92c:	4b05      	ldr	r3, [pc, #20]	; (800f944 <xTaskIncrementTick+0x18>)
 800f92e:	681b      	ldr	r3, [r3, #0]
 800f930:	b90b      	cbnz	r3, 800f936 <xTaskIncrementTick+0xa>
 800f932:	f7ff bd61 	b.w	800f3f8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800f936:	4a04      	ldr	r2, [pc, #16]	; (800f948 <xTaskIncrementTick+0x1c>)
 800f938:	6813      	ldr	r3, [r2, #0]
 800f93a:	3301      	adds	r3, #1
}
 800f93c:	2000      	movs	r0, #0
		++xPendedTicks;
 800f93e:	6013      	str	r3, [r2, #0]
}
 800f940:	4770      	bx	lr
 800f942:	bf00      	nop
 800f944:	2001362c 	.word	0x2001362c
 800f948:	20013668 	.word	0x20013668

0800f94c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800f94c:	4b1f      	ldr	r3, [pc, #124]	; (800f9cc <vTaskSwitchContext+0x80>)
 800f94e:	681b      	ldr	r3, [r3, #0]
 800f950:	b11b      	cbz	r3, 800f95a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800f952:	4b1f      	ldr	r3, [pc, #124]	; (800f9d0 <vTaskSwitchContext+0x84>)
 800f954:	2201      	movs	r2, #1
 800f956:	601a      	str	r2, [r3, #0]
 800f958:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800f95a:	4a1d      	ldr	r2, [pc, #116]	; (800f9d0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f95c:	491d      	ldr	r1, [pc, #116]	; (800f9d4 <vTaskSwitchContext+0x88>)
{
 800f95e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f960:	4c1d      	ldr	r4, [pc, #116]	; (800f9d8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800f962:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f964:	6823      	ldr	r3, [r4, #0]
 800f966:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f96a:	0092      	lsls	r2, r2, #2
 800f96c:	0098      	lsls	r0, r3, #2
 800f96e:	588a      	ldr	r2, [r1, r2]
 800f970:	b942      	cbnz	r2, 800f984 <vTaskSwitchContext+0x38>
 800f972:	b313      	cbz	r3, 800f9ba <vTaskSwitchContext+0x6e>
 800f974:	3b01      	subs	r3, #1
 800f976:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800f97a:	0098      	lsls	r0, r3, #2
 800f97c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800f980:	2a00      	cmp	r2, #0
 800f982:	d0f6      	beq.n	800f972 <vTaskSwitchContext+0x26>
 800f984:	4418      	add	r0, r3
 800f986:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800f98a:	4662      	mov	r2, ip
 800f98c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800f990:	6849      	ldr	r1, [r1, #4]
 800f992:	f8cc 1004 	str.w	r1, [ip, #4]
 800f996:	3208      	adds	r2, #8
 800f998:	4291      	cmp	r1, r2
 800f99a:	bf08      	it	eq
 800f99c:	6849      	ldreq	r1, [r1, #4]
 800f99e:	4a0f      	ldr	r2, [pc, #60]	; (800f9dc <vTaskSwitchContext+0x90>)
 800f9a0:	bf08      	it	eq
 800f9a2:	f8cc 1004 	streq.w	r1, [ip, #4]
 800f9a6:	68c9      	ldr	r1, [r1, #12]
 800f9a8:	6011      	str	r1, [r2, #0]
 800f9aa:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9ac:	6813      	ldr	r3, [r2, #0]
 800f9ae:	4a0c      	ldr	r2, [pc, #48]	; (800f9e0 <vTaskSwitchContext+0x94>)
}
 800f9b0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800f9b4:	3358      	adds	r3, #88	; 0x58
 800f9b6:	6013      	str	r3, [r2, #0]
}
 800f9b8:	4770      	bx	lr
 800f9ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f9be:	f383 8811 	msr	BASEPRI, r3
 800f9c2:	f3bf 8f6f 	isb	sy
 800f9c6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f9ca:	e7fe      	b.n	800f9ca <vTaskSwitchContext+0x7e>
 800f9cc:	2001362c 	.word	0x2001362c
 800f9d0:	200136b0 	.word	0x200136b0
 800f9d4:	200131c4 	.word	0x200131c4
 800f9d8:	20013634 	.word	0x20013634
 800f9dc:	200131b8 	.word	0x200131b8
 800f9e0:	20000160 	.word	0x20000160

0800f9e4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800f9e4:	b1d0      	cbz	r0, 800fa1c <vTaskPlaceOnEventList+0x38>
{
 800f9e6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800f9e8:	4d1a      	ldr	r5, [pc, #104]	; (800fa54 <vTaskPlaceOnEventList+0x70>)
 800f9ea:	460c      	mov	r4, r1
 800f9ec:	6829      	ldr	r1, [r5, #0]
 800f9ee:	3118      	adds	r1, #24
 800f9f0:	f7fe f978 	bl	800dce4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800f9f4:	4b18      	ldr	r3, [pc, #96]	; (800fa58 <vTaskPlaceOnEventList+0x74>)
 800f9f6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800f9f8:	6828      	ldr	r0, [r5, #0]
 800f9fa:	3004      	adds	r0, #4
 800f9fc:	f7fe f98a 	bl	800dd14 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800fa00:	1c63      	adds	r3, r4, #1
 800fa02:	d014      	beq.n	800fa2e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fa04:	682b      	ldr	r3, [r5, #0]
 800fa06:	19a4      	adds	r4, r4, r6
 800fa08:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fa0a:	d317      	bcc.n	800fa3c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa0c:	4b13      	ldr	r3, [pc, #76]	; (800fa5c <vTaskPlaceOnEventList+0x78>)
 800fa0e:	6818      	ldr	r0, [r3, #0]
 800fa10:	6829      	ldr	r1, [r5, #0]
}
 800fa12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa16:	3104      	adds	r1, #4
 800fa18:	f7fe b964 	b.w	800dce4 <vListInsert>
 800fa1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fa20:	f383 8811 	msr	BASEPRI, r3
 800fa24:	f3bf 8f6f 	isb	sy
 800fa28:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800fa2c:	e7fe      	b.n	800fa2c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa2e:	6829      	ldr	r1, [r5, #0]
 800fa30:	480b      	ldr	r0, [pc, #44]	; (800fa60 <vTaskPlaceOnEventList+0x7c>)
}
 800fa32:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa36:	3104      	adds	r1, #4
 800fa38:	f7fe b944 	b.w	800dcc4 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa3c:	4b09      	ldr	r3, [pc, #36]	; (800fa64 <vTaskPlaceOnEventList+0x80>)
 800fa3e:	6818      	ldr	r0, [r3, #0]
 800fa40:	6829      	ldr	r1, [r5, #0]
 800fa42:	3104      	adds	r1, #4
 800fa44:	f7fe f94e 	bl	800dce4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fa48:	4b07      	ldr	r3, [pc, #28]	; (800fa68 <vTaskPlaceOnEventList+0x84>)
 800fa4a:	681a      	ldr	r2, [r3, #0]
 800fa4c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fa4e:	bf38      	it	cc
 800fa50:	601c      	strcc	r4, [r3, #0]
}
 800fa52:	bd70      	pop	{r4, r5, r6, pc}
 800fa54:	200131b8 	.word	0x200131b8
 800fa58:	200136ac 	.word	0x200136ac
 800fa5c:	200131c0 	.word	0x200131c0
 800fa60:	20013684 	.word	0x20013684
 800fa64:	200131bc 	.word	0x200131bc
 800fa68:	20013660 	.word	0x20013660

0800fa6c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800fa6c:	b330      	cbz	r0, 800fabc <vTaskPlaceOnEventListRestricted+0x50>
	{
 800fa6e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800fa70:	4e1d      	ldr	r6, [pc, #116]	; (800fae8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800fa72:	460c      	mov	r4, r1
 800fa74:	6831      	ldr	r1, [r6, #0]
 800fa76:	4615      	mov	r5, r2
 800fa78:	3118      	adds	r1, #24
 800fa7a:	f7fe f923 	bl	800dcc4 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800fa7e:	4b1b      	ldr	r3, [pc, #108]	; (800faec <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800fa80:	b985      	cbnz	r5, 800faa4 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800fa82:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fa84:	6830      	ldr	r0, [r6, #0]
 800fa86:	3004      	adds	r0, #4
 800fa88:	f7fe f944 	bl	800dd14 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800fa8c:	6833      	ldr	r3, [r6, #0]
 800fa8e:	1964      	adds	r4, r4, r5
 800fa90:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800fa92:	d31c      	bcc.n	800face <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa94:	4b16      	ldr	r3, [pc, #88]	; (800faf0 <vTaskPlaceOnEventListRestricted+0x84>)
 800fa96:	6818      	ldr	r0, [r3, #0]
 800fa98:	6831      	ldr	r1, [r6, #0]
	}
 800fa9a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fa9e:	3104      	adds	r1, #4
 800faa0:	f7fe b920 	b.w	800dce4 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800faa4:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800faa6:	6830      	ldr	r0, [r6, #0]
 800faa8:	3004      	adds	r0, #4
 800faaa:	f7fe f933 	bl	800dd14 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800faae:	6831      	ldr	r1, [r6, #0]
 800fab0:	4810      	ldr	r0, [pc, #64]	; (800faf4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800fab2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800fab6:	3104      	adds	r1, #4
 800fab8:	f7fe b904 	b.w	800dcc4 <vListInsertEnd>
 800fabc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fac0:	f383 8811 	msr	BASEPRI, r3
 800fac4:	f3bf 8f6f 	isb	sy
 800fac8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800facc:	e7fe      	b.n	800facc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800face:	4b0a      	ldr	r3, [pc, #40]	; (800faf8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800fad0:	6818      	ldr	r0, [r3, #0]
 800fad2:	6831      	ldr	r1, [r6, #0]
 800fad4:	3104      	adds	r1, #4
 800fad6:	f7fe f905 	bl	800dce4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800fada:	4b08      	ldr	r3, [pc, #32]	; (800fafc <vTaskPlaceOnEventListRestricted+0x90>)
 800fadc:	681a      	ldr	r2, [r3, #0]
 800fade:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800fae0:	bf38      	it	cc
 800fae2:	601c      	strcc	r4, [r3, #0]
	}
 800fae4:	bd70      	pop	{r4, r5, r6, pc}
 800fae6:	bf00      	nop
 800fae8:	200131b8 	.word	0x200131b8
 800faec:	200136ac 	.word	0x200136ac
 800faf0:	200131c0 	.word	0x200131c0
 800faf4:	20013684 	.word	0x20013684
 800faf8:	200131bc 	.word	0x200131bc
 800fafc:	20013660 	.word	0x20013660

0800fb00 <xTaskRemoveFromEventList>:
{
 800fb00:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fb02:	68c3      	ldr	r3, [r0, #12]
 800fb04:	68dc      	ldr	r4, [r3, #12]
{
 800fb06:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800fb08:	2c00      	cmp	r4, #0
 800fb0a:	d02b      	beq.n	800fb64 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800fb0c:	f104 0518 	add.w	r5, r4, #24
 800fb10:	4628      	mov	r0, r5
 800fb12:	f7fe f8ff 	bl	800dd14 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fb16:	4b18      	ldr	r3, [pc, #96]	; (800fb78 <xTaskRemoveFromEventList+0x78>)
 800fb18:	681b      	ldr	r3, [r3, #0]
 800fb1a:	b17b      	cbz	r3, 800fb3c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800fb1c:	4817      	ldr	r0, [pc, #92]	; (800fb7c <xTaskRemoveFromEventList+0x7c>)
 800fb1e:	4629      	mov	r1, r5
 800fb20:	f7fe f8d0 	bl	800dcc4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800fb24:	4b16      	ldr	r3, [pc, #88]	; (800fb80 <xTaskRemoveFromEventList+0x80>)
 800fb26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fb28:	681b      	ldr	r3, [r3, #0]
 800fb2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb2c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800fb2e:	bf85      	ittet	hi
 800fb30:	4b14      	ldrhi	r3, [pc, #80]	; (800fb84 <xTaskRemoveFromEventList+0x84>)
 800fb32:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800fb34:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800fb36:	6018      	strhi	r0, [r3, #0]
}
 800fb38:	b003      	add	sp, #12
 800fb3a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800fb3c:	1d21      	adds	r1, r4, #4
 800fb3e:	4608      	mov	r0, r1
 800fb40:	9101      	str	r1, [sp, #4]
 800fb42:	f7fe f8e7 	bl	800dd14 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800fb46:	4a10      	ldr	r2, [pc, #64]	; (800fb88 <xTaskRemoveFromEventList+0x88>)
 800fb48:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fb4a:	6810      	ldr	r0, [r2, #0]
 800fb4c:	9901      	ldr	r1, [sp, #4]
 800fb4e:	4283      	cmp	r3, r0
 800fb50:	480e      	ldr	r0, [pc, #56]	; (800fb8c <xTaskRemoveFromEventList+0x8c>)
 800fb52:	bf88      	it	hi
 800fb54:	6013      	strhi	r3, [r2, #0]
 800fb56:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fb5a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fb5e:	f7fe f8b1 	bl	800dcc4 <vListInsertEnd>
 800fb62:	e7df      	b.n	800fb24 <xTaskRemoveFromEventList+0x24>
 800fb64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb68:	f383 8811 	msr	BASEPRI, r3
 800fb6c:	f3bf 8f6f 	isb	sy
 800fb70:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800fb74:	e7fe      	b.n	800fb74 <xTaskRemoveFromEventList+0x74>
 800fb76:	bf00      	nop
 800fb78:	2001362c 	.word	0x2001362c
 800fb7c:	2001366c 	.word	0x2001366c
 800fb80:	200131b8 	.word	0x200131b8
 800fb84:	200136b0 	.word	0x200136b0
 800fb88:	20013634 	.word	0x20013634
 800fb8c:	200131c4 	.word	0x200131c4

0800fb90 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fb90:	4a03      	ldr	r2, [pc, #12]	; (800fba0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fb92:	4b04      	ldr	r3, [pc, #16]	; (800fba4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fb94:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fb96:	681b      	ldr	r3, [r3, #0]
 800fb98:	e9c0 2300 	strd	r2, r3, [r0]
}
 800fb9c:	4770      	bx	lr
 800fb9e:	bf00      	nop
 800fba0:	20013664 	.word	0x20013664
 800fba4:	200136ac 	.word	0x200136ac

0800fba8 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800fba8:	b328      	cbz	r0, 800fbf6 <xTaskCheckForTimeOut+0x4e>
{
 800fbaa:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbac:	460d      	mov	r5, r1
 800fbae:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800fbb0:	b1c1      	cbz	r1, 800fbe4 <xTaskCheckForTimeOut+0x3c>
 800fbb2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800fbb4:	f7fe f926 	bl	800de04 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800fbb8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800fbba:	4a1d      	ldr	r2, [pc, #116]	; (800fc30 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800fbbc:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800fbbe:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800fbc0:	d030      	beq.n	800fc24 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800fbc2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800fc34 <xTaskCheckForTimeOut+0x8c>
 800fbc6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800fbca:	f8dc 7000 	ldr.w	r7, [ip]
 800fbce:	42be      	cmp	r6, r7
 800fbd0:	d01a      	beq.n	800fc08 <xTaskCheckForTimeOut+0x60>
 800fbd2:	4288      	cmp	r0, r1
 800fbd4:	d818      	bhi.n	800fc08 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800fbd6:	2001      	movs	r0, #1
 800fbd8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800fbda:	f7fe f935 	bl	800de48 <vPortExitCritical>
}
 800fbde:	9801      	ldr	r0, [sp, #4]
 800fbe0:	b003      	add	sp, #12
 800fbe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fbe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbe8:	f383 8811 	msr	BASEPRI, r3
 800fbec:	f3bf 8f6f 	isb	sy
 800fbf0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800fbf4:	e7fe      	b.n	800fbf4 <xTaskCheckForTimeOut+0x4c>
 800fbf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbfa:	f383 8811 	msr	BASEPRI, r3
 800fbfe:	f3bf 8f6f 	isb	sy
 800fc02:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800fc06:	e7fe      	b.n	800fc06 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800fc08:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800fc0c:	4573      	cmp	r3, lr
 800fc0e:	d90b      	bls.n	800fc28 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800fc10:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800fc12:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc16:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800fc18:	4403      	add	r3, r0
 800fc1a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800fc1c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800fc1e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800fc22:	e7d9      	b.n	800fbd8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800fc24:	2000      	movs	r0, #0
 800fc26:	e7d7      	b.n	800fbd8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800fc28:	2300      	movs	r3, #0
 800fc2a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800fc2c:	2001      	movs	r0, #1
 800fc2e:	e7d3      	b.n	800fbd8 <xTaskCheckForTimeOut+0x30>
 800fc30:	200136ac 	.word	0x200136ac
 800fc34:	20013664 	.word	0x20013664

0800fc38 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800fc38:	4b01      	ldr	r3, [pc, #4]	; (800fc40 <vTaskMissedYield+0x8>)
 800fc3a:	2201      	movs	r2, #1
 800fc3c:	601a      	str	r2, [r3, #0]
}
 800fc3e:	4770      	bx	lr
 800fc40:	200136b0 	.word	0x200136b0

0800fc44 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800fc44:	4b05      	ldr	r3, [pc, #20]	; (800fc5c <xTaskGetSchedulerState+0x18>)
 800fc46:	681b      	ldr	r3, [r3, #0]
 800fc48:	b133      	cbz	r3, 800fc58 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800fc4a:	4b05      	ldr	r3, [pc, #20]	; (800fc60 <xTaskGetSchedulerState+0x1c>)
 800fc4c:	6818      	ldr	r0, [r3, #0]
 800fc4e:	fab0 f080 	clz	r0, r0
 800fc52:	0940      	lsrs	r0, r0, #5
 800fc54:	0040      	lsls	r0, r0, #1
 800fc56:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800fc58:	2001      	movs	r0, #1
	}
 800fc5a:	4770      	bx	lr
 800fc5c:	20013680 	.word	0x20013680
 800fc60:	2001362c 	.word	0x2001362c

0800fc64 <xTaskPriorityInherit>:
	{
 800fc64:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800fc66:	4604      	mov	r4, r0
	{
 800fc68:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800fc6a:	b1c8      	cbz	r0, 800fca0 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800fc6c:	4d1d      	ldr	r5, [pc, #116]	; (800fce4 <xTaskPriorityInherit+0x80>)
 800fc6e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800fc70:	682a      	ldr	r2, [r5, #0]
 800fc72:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fc74:	4293      	cmp	r3, r2
 800fc76:	d215      	bcs.n	800fca4 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fc78:	6982      	ldr	r2, [r0, #24]
 800fc7a:	2a00      	cmp	r2, #0
 800fc7c:	db04      	blt.n	800fc88 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fc7e:	682a      	ldr	r2, [r5, #0]
 800fc80:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800fc82:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800fc86:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800fc88:	4e17      	ldr	r6, [pc, #92]	; (800fce8 <xTaskPriorityInherit+0x84>)
 800fc8a:	6962      	ldr	r2, [r4, #20]
 800fc8c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fc90:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800fc94:	429a      	cmp	r2, r3
 800fc96:	d00e      	beq.n	800fcb6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fc98:	682b      	ldr	r3, [r5, #0]
 800fc9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fc9c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800fc9e:	2001      	movs	r0, #1
	}
 800fca0:	b002      	add	sp, #8
 800fca2:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800fca4:	682b      	ldr	r3, [r5, #0]
 800fca6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800fca8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fcaa:	4298      	cmp	r0, r3
 800fcac:	bf2c      	ite	cs
 800fcae:	2000      	movcs	r0, #0
 800fcb0:	2001      	movcc	r0, #1
	}
 800fcb2:	b002      	add	sp, #8
 800fcb4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fcb6:	1d21      	adds	r1, r4, #4
 800fcb8:	4608      	mov	r0, r1
 800fcba:	9101      	str	r1, [sp, #4]
 800fcbc:	f7fe f82a 	bl	800dd14 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcc0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcc2:	4b0a      	ldr	r3, [pc, #40]	; (800fcec <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcc4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcc6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800fcc8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800fcca:	4290      	cmp	r0, r2
 800fccc:	bf88      	it	hi
 800fcce:	6018      	strhi	r0, [r3, #0]
 800fcd0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fcd4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800fcd8:	9901      	ldr	r1, [sp, #4]
 800fcda:	f7fd fff3 	bl	800dcc4 <vListInsertEnd>
				xReturn = pdTRUE;
 800fcde:	2001      	movs	r0, #1
 800fce0:	e7de      	b.n	800fca0 <xTaskPriorityInherit+0x3c>
 800fce2:	bf00      	nop
 800fce4:	200131b8 	.word	0x200131b8
 800fce8:	200131c4 	.word	0x200131c4
 800fcec:	20013634 	.word	0x20013634

0800fcf0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800fcf0:	b318      	cbz	r0, 800fd3a <xTaskPriorityDisinherit+0x4a>
	{
 800fcf2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800fcf4:	4b1e      	ldr	r3, [pc, #120]	; (800fd70 <xTaskPriorityDisinherit+0x80>)
 800fcf6:	681c      	ldr	r4, [r3, #0]
 800fcf8:	4284      	cmp	r4, r0
	{
 800fcfa:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800fcfc:	d008      	beq.n	800fd10 <xTaskPriorityDisinherit+0x20>
 800fcfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd02:	f383 8811 	msr	BASEPRI, r3
 800fd06:	f3bf 8f6f 	isb	sy
 800fd0a:	f3bf 8f4f 	dsb	sy
 800fd0e:	e7fe      	b.n	800fd0e <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800fd10:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800fd12:	b14b      	cbz	r3, 800fd28 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd14:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fd16:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800fd18:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd1a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800fd1c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800fd1e:	d000      	beq.n	800fd22 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800fd20:	b16b      	cbz	r3, 800fd3e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800fd22:	2000      	movs	r0, #0
	}
 800fd24:	b002      	add	sp, #8
 800fd26:	bd10      	pop	{r4, pc}
 800fd28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fd2c:	f383 8811 	msr	BASEPRI, r3
 800fd30:	f3bf 8f6f 	isb	sy
 800fd34:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fd38:	e7fe      	b.n	800fd38 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800fd3a:	2000      	movs	r0, #0
	}
 800fd3c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fd3e:	1d21      	adds	r1, r4, #4
 800fd40:	4608      	mov	r0, r1
 800fd42:	9101      	str	r1, [sp, #4]
 800fd44:	f7fd ffe6 	bl	800dd14 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd48:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800fd4a:	4a0a      	ldr	r2, [pc, #40]	; (800fd74 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800fd4c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fd4e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800fd52:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800fd54:	6810      	ldr	r0, [r2, #0]
 800fd56:	9901      	ldr	r1, [sp, #4]
 800fd58:	4283      	cmp	r3, r0
 800fd5a:	4807      	ldr	r0, [pc, #28]	; (800fd78 <xTaskPriorityDisinherit+0x88>)
 800fd5c:	bf88      	it	hi
 800fd5e:	6013      	strhi	r3, [r2, #0]
 800fd60:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800fd64:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800fd68:	f7fd ffac 	bl	800dcc4 <vListInsertEnd>
					xReturn = pdTRUE;
 800fd6c:	2001      	movs	r0, #1
		return xReturn;
 800fd6e:	e7d9      	b.n	800fd24 <xTaskPriorityDisinherit+0x34>
 800fd70:	200131b8 	.word	0x200131b8
 800fd74:	20013634 	.word	0x20013634
 800fd78:	200131c4 	.word	0x200131c4

0800fd7c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800fd7c:	2800      	cmp	r0, #0
 800fd7e:	d041      	beq.n	800fe04 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800fd80:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800fd82:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800fd84:	b083      	sub	sp, #12
 800fd86:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800fd88:	b153      	cbz	r3, 800fda0 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800fd8a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800fd8c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800fd8e:	4281      	cmp	r1, r0
 800fd90:	bf38      	it	cc
 800fd92:	4601      	movcc	r1, r0
 800fd94:	428a      	cmp	r2, r1
 800fd96:	d001      	beq.n	800fd9c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800fd98:	2b01      	cmp	r3, #1
 800fd9a:	d00a      	beq.n	800fdb2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800fd9c:	b003      	add	sp, #12
 800fd9e:	bd30      	pop	{r4, r5, pc}
 800fda0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fda4:	f383 8811 	msr	BASEPRI, r3
 800fda8:	f3bf 8f6f 	isb	sy
 800fdac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800fdb0:	e7fe      	b.n	800fdb0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800fdb2:	4b19      	ldr	r3, [pc, #100]	; (800fe18 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800fdb4:	681b      	ldr	r3, [r3, #0]
 800fdb6:	42a3      	cmp	r3, r4
 800fdb8:	d025      	beq.n	800fe06 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fdba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800fdbc:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800fdbe:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdc0:	bfa8      	it	ge
 800fdc2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fdc6:	4d15      	ldr	r5, [pc, #84]	; (800fe1c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800fdc8:	bfa8      	it	ge
 800fdca:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800fdcc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800fdd0:	6961      	ldr	r1, [r4, #20]
 800fdd2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800fdd6:	4299      	cmp	r1, r3
 800fdd8:	d1e0      	bne.n	800fd9c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800fdda:	1d21      	adds	r1, r4, #4
 800fddc:	4608      	mov	r0, r1
 800fdde:	9101      	str	r1, [sp, #4]
 800fde0:	f7fd ff98 	bl	800dd14 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800fde4:	4b0e      	ldr	r3, [pc, #56]	; (800fe20 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800fde6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800fde8:	681a      	ldr	r2, [r3, #0]
 800fdea:	9901      	ldr	r1, [sp, #4]
 800fdec:	4290      	cmp	r0, r2
 800fdee:	bf88      	it	hi
 800fdf0:	6018      	strhi	r0, [r3, #0]
 800fdf2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800fdf6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800fdfa:	b003      	add	sp, #12
 800fdfc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800fe00:	f7fd bf60 	b.w	800dcc4 <vListInsertEnd>
 800fe04:	4770      	bx	lr
 800fe06:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe0a:	f383 8811 	msr	BASEPRI, r3
 800fe0e:	f3bf 8f6f 	isb	sy
 800fe12:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800fe16:	e7fe      	b.n	800fe16 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800fe18:	200131b8 	.word	0x200131b8
 800fe1c:	200131c4 	.word	0x200131c4
 800fe20:	20013634 	.word	0x20013634

0800fe24 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800fe24:	4b04      	ldr	r3, [pc, #16]	; (800fe38 <pvTaskIncrementMutexHeldCount+0x14>)
 800fe26:	681a      	ldr	r2, [r3, #0]
 800fe28:	b11a      	cbz	r2, 800fe32 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800fe2a:	6819      	ldr	r1, [r3, #0]
 800fe2c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800fe2e:	3201      	adds	r2, #1
 800fe30:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800fe32:	6818      	ldr	r0, [r3, #0]
	}
 800fe34:	4770      	bx	lr
 800fe36:	bf00      	nop
 800fe38:	200131b8 	.word	0x200131b8

0800fe3c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800fe3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe40:	4e22      	ldr	r6, [pc, #136]	; (800fecc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800fe42:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800fed4 <prvSwitchTimerLists+0x98>
{
 800fe46:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800fe48:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe4c:	e00d      	b.n	800fe6a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe4e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800fe50:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fe52:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800fe54:	1d25      	adds	r5, r4, #4
 800fe56:	4628      	mov	r0, r5
 800fe58:	f7fd ff5c 	bl	800dd14 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800fe5c:	6a23      	ldr	r3, [r4, #32]
 800fe5e:	4620      	mov	r0, r4
 800fe60:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800fe62:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800fe66:	075b      	lsls	r3, r3, #29
 800fe68:	d40a      	bmi.n	800fe80 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800fe6a:	6833      	ldr	r3, [r6, #0]
 800fe6c:	681a      	ldr	r2, [r3, #0]
 800fe6e:	2a00      	cmp	r2, #0
 800fe70:	d1ed      	bne.n	800fe4e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800fe72:	4a17      	ldr	r2, [pc, #92]	; (800fed0 <prvSwitchTimerLists+0x94>)
 800fe74:	6811      	ldr	r1, [r2, #0]
 800fe76:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800fe78:	6013      	str	r3, [r2, #0]
}
 800fe7a:	b005      	add	sp, #20
 800fe7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800fe80:	69a3      	ldr	r3, [r4, #24]
 800fe82:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800fe84:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe86:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800fe88:	d205      	bcs.n	800fe96 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe8a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800fe8c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800fe8e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800fe90:	f7fd ff28 	bl	800dce4 <vListInsert>
 800fe94:	e7e9      	b.n	800fe6a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800fe96:	f8d9 3000 	ldr.w	r3, [r9]
 800fe9a:	b16b      	cbz	r3, 800feb8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800fe9c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800fea0:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800fea2:	f7ff fecf 	bl	800fc44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800fea6:	2300      	movs	r3, #0
 800fea8:	f8d9 0000 	ldr.w	r0, [r9]
 800feac:	461a      	mov	r2, r3
 800feae:	4669      	mov	r1, sp
 800feb0:	f7fe fa9c 	bl	800e3ec <xQueueGenericSend>
				configASSERT( xResult );
 800feb4:	2800      	cmp	r0, #0
 800feb6:	d1d8      	bne.n	800fe6a <prvSwitchTimerLists+0x2e>
 800feb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800febc:	f383 8811 	msr	BASEPRI, r3
 800fec0:	f3bf 8f6f 	isb	sy
 800fec4:	f3bf 8f4f 	dsb	sy
 800fec8:	e7fe      	b.n	800fec8 <prvSwitchTimerLists+0x8c>
 800feca:	bf00      	nop
 800fecc:	200136b4 	.word	0x200136b4
 800fed0:	200136b8 	.word	0x200136b8
 800fed4:	200137d8 	.word	0x200137d8

0800fed8 <prvTimerTask>:
{
 800fed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fedc:	4e9b      	ldr	r6, [pc, #620]	; (801014c <prvTimerTask+0x274>)
 800fede:	4d9c      	ldr	r5, [pc, #624]	; (8010150 <prvTimerTask+0x278>)
 800fee0:	4c9c      	ldr	r4, [pc, #624]	; (8010154 <prvTimerTask+0x27c>)
 800fee2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800fee4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800fee8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800feec:	6833      	ldr	r3, [r6, #0]
 800feee:	681f      	ldr	r7, [r3, #0]
 800fef0:	2f00      	cmp	r7, #0
 800fef2:	f000 80a8 	beq.w	8010046 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800fef6:	68db      	ldr	r3, [r3, #12]
 800fef8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800fefa:	f7ff fcf9 	bl	800f8f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800fefe:	f7ff fd0f 	bl	800f920 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ff02:	682a      	ldr	r2, [r5, #0]
 800ff04:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800ff06:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ff08:	f0c0 80ae 	bcc.w	8010068 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff0c:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800ff0e:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ff10:	f240 80b4 	bls.w	801007c <prvTimerTask+0x1a4>
 800ff14:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ff16:	6820      	ldr	r0, [r4, #0]
 800ff18:	eba7 010a 	sub.w	r1, r7, sl
 800ff1c:	f7ff f89a 	bl	800f054 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800ff20:	f7ff fcee 	bl	800f900 <xTaskResumeAll>
 800ff24:	b928      	cbnz	r0, 800ff32 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800ff26:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800ff2a:	f3bf 8f4f 	dsb	sy
 800ff2e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ff32:	6820      	ldr	r0, [r4, #0]
 800ff34:	2200      	movs	r2, #0
 800ff36:	a902      	add	r1, sp, #8
 800ff38:	f7fe fc94 	bl	800e864 <xQueueReceive>
 800ff3c:	2800      	cmp	r0, #0
 800ff3e:	d0d5      	beq.n	800feec <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ff40:	9b02      	ldr	r3, [sp, #8]
 800ff42:	2b00      	cmp	r3, #0
 800ff44:	db76      	blt.n	8010034 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ff46:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ff48:	697b      	ldr	r3, [r7, #20]
 800ff4a:	b113      	cbz	r3, 800ff52 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ff4c:	1d38      	adds	r0, r7, #4
 800ff4e:	f7fd fee1 	bl	800dd14 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800ff52:	f7ff fce5 	bl	800f920 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ff56:	682b      	ldr	r3, [r5, #0]
 800ff58:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800ff5a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800ff5c:	f0c0 808b 	bcc.w	8010076 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800ff60:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800ff62:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800ff66:	2b09      	cmp	r3, #9
 800ff68:	d8e3      	bhi.n	800ff32 <prvTimerTask+0x5a>
 800ff6a:	e8df f003 	tbb	[pc, r3]
 800ff6e:	0505      	.short	0x0505
 800ff70:	5a3d5305 	.word	0x5a3d5305
 800ff74:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ff78:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ff7c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ff7e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ff80:	f043 0301 	orr.w	r3, r3, #1
 800ff84:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ff88:	9b03      	ldr	r3, [sp, #12]
 800ff8a:	1899      	adds	r1, r3, r2
 800ff8c:	bf2c      	ite	cs
 800ff8e:	2001      	movcs	r0, #1
 800ff90:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800ff92:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800ff94:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800ff96:	f200 808c 	bhi.w	80100b2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ff9a:	ebaa 0303 	sub.w	r3, sl, r3
 800ff9e:	429a      	cmp	r2, r3
 800ffa0:	d832      	bhi.n	8010008 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ffa2:	6a3b      	ldr	r3, [r7, #32]
 800ffa4:	4638      	mov	r0, r7
 800ffa6:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ffa8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ffac:	075b      	lsls	r3, r3, #29
 800ffae:	d5c0      	bpl.n	800ff32 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800ffb0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ffb2:	9903      	ldr	r1, [sp, #12]
 800ffb4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800ffb6:	b172      	cbz	r2, 800ffd6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ffb8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ffba:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800ffbe:	2300      	movs	r3, #0
 800ffc0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ffc2:	f7ff fe3f 	bl	800fc44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ffc6:	2300      	movs	r3, #0
 800ffc8:	6820      	ldr	r0, [r4, #0]
 800ffca:	461a      	mov	r2, r3
 800ffcc:	a906      	add	r1, sp, #24
 800ffce:	f7fe fa0d 	bl	800e3ec <xQueueGenericSend>
							configASSERT( xResult );
 800ffd2:	2800      	cmp	r0, #0
 800ffd4:	d1ad      	bne.n	800ff32 <prvTimerTask+0x5a>
 800ffd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ffda:	f383 8811 	msr	BASEPRI, r3
 800ffde:	f3bf 8f6f 	isb	sy
 800ffe2:	f3bf 8f4f 	dsb	sy
 800ffe6:	e7fe      	b.n	800ffe6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ffe8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ffec:	f043 0301 	orr.w	r3, r3, #1
 800fff0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800fff4:	9b03      	ldr	r3, [sp, #12]
 800fff6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800fff8:	2b00      	cmp	r3, #0
 800fffa:	f000 809d 	beq.w	8010138 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800fffe:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 8010000:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8010002:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8010004:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 8010006:	d85e      	bhi.n	80100c6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8010008:	4b53      	ldr	r3, [pc, #332]	; (8010158 <prvTimerTask+0x280>)
 801000a:	1d39      	adds	r1, r7, #4
 801000c:	6818      	ldr	r0, [r3, #0]
 801000e:	f7fd fe69 	bl	800dce4 <vListInsert>
	return xProcessTimerNow;
 8010012:	e78e      	b.n	800ff32 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8010014:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010018:	f023 0301 	bic.w	r3, r3, #1
 801001c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 8010020:	e787      	b.n	800ff32 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8010022:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8010026:	079a      	lsls	r2, r3, #30
 8010028:	d552      	bpl.n	80100d0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 801002a:	f023 0301 	bic.w	r3, r3, #1
 801002e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 8010032:	e77e      	b.n	800ff32 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8010034:	9b03      	ldr	r3, [sp, #12]
 8010036:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801003a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 801003c:	9b02      	ldr	r3, [sp, #8]
 801003e:	2b00      	cmp	r3, #0
 8010040:	f6ff af77 	blt.w	800ff32 <prvTimerTask+0x5a>
 8010044:	e77f      	b.n	800ff46 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 8010046:	f7ff fc53 	bl	800f8f0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 801004a:	f7ff fc69 	bl	800f920 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 801004e:	682a      	ldr	r2, [r5, #0]
 8010050:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 8010052:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 8010054:	d808      	bhi.n	8010068 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8010056:	4b40      	ldr	r3, [pc, #256]	; (8010158 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 8010058:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 801005c:	681a      	ldr	r2, [r3, #0]
 801005e:	6812      	ldr	r2, [r2, #0]
 8010060:	fab2 f282 	clz	r2, r2
 8010064:	0952      	lsrs	r2, r2, #5
 8010066:	e756      	b.n	800ff16 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 8010068:	f7ff fee8 	bl	800fe3c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 801006c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 8010070:	f7ff fc46 	bl	800f900 <xTaskResumeAll>
 8010074:	e75d      	b.n	800ff32 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 8010076:	f7ff fee1 	bl	800fe3c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 801007a:	e771      	b.n	800ff60 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 801007c:	f7ff fc40 	bl	800f900 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8010080:	6832      	ldr	r2, [r6, #0]
 8010082:	68d2      	ldr	r2, [r2, #12]
 8010084:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8010088:	f10b 0104 	add.w	r1, fp, #4
 801008c:	4608      	mov	r0, r1
 801008e:	9101      	str	r1, [sp, #4]
 8010090:	f7fd fe40 	bl	800dd14 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8010094:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 8010098:	9901      	ldr	r1, [sp, #4]
 801009a:	f010 0f04 	tst.w	r0, #4
 801009e:	d11b      	bne.n	80100d8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 80100a0:	f020 0001 	bic.w	r0, r0, #1
 80100a4:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 80100a8:	f8db 3020 	ldr.w	r3, [fp, #32]
 80100ac:	4658      	mov	r0, fp
 80100ae:	4798      	blx	r3
}
 80100b0:	e73f      	b.n	800ff32 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 80100b2:	4553      	cmp	r3, sl
 80100b4:	d902      	bls.n	80100bc <prvTimerTask+0x1e4>
 80100b6:	2800      	cmp	r0, #0
 80100b8:	f43f af73 	beq.w	800ffa2 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100bc:	6830      	ldr	r0, [r6, #0]
 80100be:	1d39      	adds	r1, r7, #4
 80100c0:	f7fd fe10 	bl	800dce4 <vListInsert>
	return xProcessTimerNow;
 80100c4:	e735      	b.n	800ff32 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100c6:	6830      	ldr	r0, [r6, #0]
 80100c8:	1d39      	adds	r1, r7, #4
 80100ca:	f7fd fe0b 	bl	800dce4 <vListInsert>
 80100ce:	e730      	b.n	800ff32 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 80100d0:	4638      	mov	r0, r7
 80100d2:	f7fd fd83 	bl	800dbdc <vPortFree>
 80100d6:	e72c      	b.n	800ff32 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80100d8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 80100dc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 80100e0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 80100e2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 80100e4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 80100e8:	d903      	bls.n	80100f2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 80100ea:	6830      	ldr	r0, [r6, #0]
 80100ec:	f7fd fdfa 	bl	800dce4 <vListInsert>
	return xProcessTimerNow;
 80100f0:	e7da      	b.n	80100a8 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80100f2:	ebaa 0307 	sub.w	r3, sl, r7
 80100f6:	429a      	cmp	r2, r3
 80100f8:	d819      	bhi.n	801012e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 80100fa:	6823      	ldr	r3, [r4, #0]
 80100fc:	b173      	cbz	r3, 801011c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 80100fe:	2300      	movs	r3, #0
 8010100:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8010102:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8010104:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8010108:	f7ff fd9c 	bl	800fc44 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 801010c:	2300      	movs	r3, #0
 801010e:	6820      	ldr	r0, [r4, #0]
 8010110:	461a      	mov	r2, r3
 8010112:	a906      	add	r1, sp, #24
 8010114:	f7fe f96a 	bl	800e3ec <xQueueGenericSend>
			configASSERT( xResult );
 8010118:	2800      	cmp	r0, #0
 801011a:	d1c5      	bne.n	80100a8 <prvTimerTask+0x1d0>
 801011c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010120:	f383 8811 	msr	BASEPRI, r3
 8010124:	f3bf 8f6f 	isb	sy
 8010128:	f3bf 8f4f 	dsb	sy
 801012c:	e7fe      	b.n	801012c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 801012e:	4b0a      	ldr	r3, [pc, #40]	; (8010158 <prvTimerTask+0x280>)
 8010130:	6818      	ldr	r0, [r3, #0]
 8010132:	f7fd fdd7 	bl	800dce4 <vListInsert>
	return xProcessTimerNow;
 8010136:	e7b7      	b.n	80100a8 <prvTimerTask+0x1d0>
 8010138:	f04f 0350 	mov.w	r3, #80	; 0x50
 801013c:	f383 8811 	msr	BASEPRI, r3
 8010140:	f3bf 8f6f 	isb	sy
 8010144:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8010148:	e7fe      	b.n	8010148 <prvTimerTask+0x270>
 801014a:	bf00      	nop
 801014c:	200136b4 	.word	0x200136b4
 8010150:	20013784 	.word	0x20013784
 8010154:	200137d8 	.word	0x200137d8
 8010158:	200136b8 	.word	0x200136b8

0801015c <xTimerCreateTimerTask>:
{
 801015c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 801015e:	4c23      	ldr	r4, [pc, #140]	; (80101ec <xTimerCreateTimerTask+0x90>)
{
 8010160:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 8010162:	f7fd fe4f 	bl	800de04 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8010166:	6825      	ldr	r5, [r4, #0]
 8010168:	b335      	cbz	r5, 80101b8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 801016a:	f7fd fe6d 	bl	800de48 <vPortExitCritical>
	if( xTimerQueue != NULL )
 801016e:	6823      	ldr	r3, [r4, #0]
 8010170:	b1cb      	cbz	r3, 80101a6 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8010172:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8010174:	aa07      	add	r2, sp, #28
 8010176:	a906      	add	r1, sp, #24
 8010178:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 801017a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 801017e:	f7fd fc61 	bl	800da44 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8010182:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 8010186:	2302      	movs	r3, #2
 8010188:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801018c:	9300      	str	r3, [sp, #0]
 801018e:	9a07      	ldr	r2, [sp, #28]
 8010190:	4917      	ldr	r1, [pc, #92]	; (80101f0 <xTimerCreateTimerTask+0x94>)
 8010192:	4818      	ldr	r0, [pc, #96]	; (80101f4 <xTimerCreateTimerTask+0x98>)
 8010194:	4623      	mov	r3, r4
 8010196:	f7ff fa6d 	bl	800f674 <xTaskCreateStatic>
 801019a:	4b17      	ldr	r3, [pc, #92]	; (80101f8 <xTimerCreateTimerTask+0x9c>)
 801019c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 801019e:	b110      	cbz	r0, 80101a6 <xTimerCreateTimerTask+0x4a>
}
 80101a0:	2001      	movs	r0, #1
 80101a2:	b009      	add	sp, #36	; 0x24
 80101a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80101a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101aa:	f383 8811 	msr	BASEPRI, r3
 80101ae:	f3bf 8f6f 	isb	sy
 80101b2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80101b6:	e7fe      	b.n	80101b6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 80101b8:	4f10      	ldr	r7, [pc, #64]	; (80101fc <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 80101ba:	4e11      	ldr	r6, [pc, #68]	; (8010200 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 80101bc:	4638      	mov	r0, r7
 80101be:	f7fd fd71 	bl	800dca4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80101c2:	4630      	mov	r0, r6
 80101c4:	f7fd fd6e 	bl	800dca4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80101c8:	4a0e      	ldr	r2, [pc, #56]	; (8010204 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101ca:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 80101cc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80101ce:	4a0e      	ldr	r2, [pc, #56]	; (8010208 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101d0:	4b0e      	ldr	r3, [pc, #56]	; (801020c <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 80101d2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80101d4:	2110      	movs	r1, #16
 80101d6:	4a0e      	ldr	r2, [pc, #56]	; (8010210 <xTimerCreateTimerTask+0xb4>)
 80101d8:	200a      	movs	r0, #10
 80101da:	f7fd ffb1 	bl	800e140 <xQueueGenericCreateStatic>
 80101de:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 80101e0:	2800      	cmp	r0, #0
 80101e2:	d0c2      	beq.n	801016a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 80101e4:	490b      	ldr	r1, [pc, #44]	; (8010214 <xTimerCreateTimerTask+0xb8>)
 80101e6:	f7fe ff0d 	bl	800f004 <vQueueAddToRegistry>
 80101ea:	e7be      	b.n	801016a <xTimerCreateTimerTask+0xe>
 80101ec:	200137d8 	.word	0x200137d8
 80101f0:	0802f044 	.word	0x0802f044
 80101f4:	0800fed9 	.word	0x0800fed9
 80101f8:	200137dc 	.word	0x200137dc
 80101fc:	2001375c 	.word	0x2001375c
 8010200:	20013770 	.word	0x20013770
 8010204:	200136b4 	.word	0x200136b4
 8010208:	200136b8 	.word	0x200136b8
 801020c:	20013788 	.word	0x20013788
 8010210:	200136bc 	.word	0x200136bc
 8010214:	0802f03c 	.word	0x0802f03c

08010218 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010218:	8880      	ldrh	r0, [r0, #4]
 801021a:	4770      	bx	lr

0801021c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 801021c:	b570      	push	{r4, r5, r6, lr}
 801021e:	6803      	ldr	r3, [r0, #0]
 8010220:	4605      	mov	r5, r0
 8010222:	460c      	mov	r4, r1
 8010224:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010226:	2100      	movs	r1, #0
 8010228:	4798      	blx	r3
 801022a:	682b      	ldr	r3, [r5, #0]
 801022c:	4606      	mov	r6, r0
 801022e:	6a1b      	ldr	r3, [r3, #32]
 8010230:	4628      	mov	r0, r5
 8010232:	4798      	blx	r3
 8010234:	1ba4      	subs	r4, r4, r6
 8010236:	b2a4      	uxth	r4, r4
 8010238:	fbb4 f0f0 	udiv	r0, r4, r0
 801023c:	bd70      	pop	{r4, r5, r6, pc}

0801023e <_ZN8touchgfx17AbstractPartition5clearEv>:
 801023e:	2300      	movs	r3, #0
 8010240:	8083      	strh	r3, [r0, #4]
 8010242:	4770      	bx	lr

08010244 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010244:	b510      	push	{r4, lr}
 8010246:	6803      	ldr	r3, [r0, #0]
 8010248:	8881      	ldrh	r1, [r0, #4]
 801024a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801024c:	4604      	mov	r4, r0
 801024e:	4798      	blx	r3
 8010250:	88a3      	ldrh	r3, [r4, #4]
 8010252:	3301      	adds	r3, #1
 8010254:	80a3      	strh	r3, [r4, #4]
 8010256:	bd10      	pop	{r4, pc}

08010258 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010258:	6803      	ldr	r3, [r0, #0]
 801025a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801025c:	4718      	bx	r3

0801025e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801025e:	4770      	bx	lr

08010260 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8010260:	4a02      	ldr	r2, [pc, #8]	; (801026c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8010262:	6002      	str	r2, [r0, #0]
 8010264:	2200      	movs	r2, #0
 8010266:	8082      	strh	r2, [r0, #4]
 8010268:	4770      	bx	lr
 801026a:	bf00      	nop
 801026c:	0802f054 	.word	0x0802f054

08010270 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 8010270:	b510      	push	{r4, lr}
 8010272:	6803      	ldr	r3, [r0, #0]
 8010274:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8010278:	4604      	mov	r4, r0
 801027a:	4798      	blx	r3
 801027c:	b110      	cbz	r0, 8010284 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 801027e:	4620      	mov	r0, r4
 8010280:	f7f2 f980 	bl	8002584 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8010284:	bd10      	pop	{r4, pc}

08010286 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8010286:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 801028a:	4770      	bx	lr

0801028c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 801028c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 8010290:	4770      	bx	lr

08010292 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8010292:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 8010296:	4770      	bx	lr

08010298 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8010298:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 801029c:	4770      	bx	lr

0801029e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 801029e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80102a0:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 80102a4:	461e      	mov	r6, r3
 80102a6:	6803      	ldr	r3, [r0, #0]
 80102a8:	460f      	mov	r7, r1
 80102aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80102ae:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 80102b2:	4604      	mov	r4, r0
 80102b4:	4615      	mov	r5, r2
 80102b6:	4798      	blx	r3
 80102b8:	b93e      	cbnz	r6, 80102ca <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 80102ba:	1bed      	subs	r5, r5, r7
 80102bc:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 80102c0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80102c4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80102c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80102ca:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 80102ce:	e7f7      	b.n	80102c0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

080102d0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 80102d0:	b510      	push	{r4, lr}
 80102d2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80102d6:	600c      	str	r4, [r1, #0]
 80102d8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80102dc:	6011      	str	r1, [r2, #0]
 80102de:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 80102e2:	801a      	strh	r2, [r3, #0]
 80102e4:	9b02      	ldr	r3, [sp, #8]
 80102e6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 80102ea:	801a      	strh	r2, [r3, #0]
 80102ec:	bd10      	pop	{r4, pc}

080102ee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 80102ee:	b510      	push	{r4, lr}
 80102f0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 80102f4:	600c      	str	r4, [r1, #0]
 80102f6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 80102fa:	6011      	str	r1, [r2, #0]
 80102fc:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 8010300:	801a      	strh	r2, [r3, #0]
 8010302:	bd10      	pop	{r4, pc}

08010304 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8010304:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 8010308:	600b      	str	r3, [r1, #0]
 801030a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 801030e:	6013      	str	r3, [r2, #0]
 8010310:	4770      	bx	lr

08010312 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8010312:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 8010316:	4770      	bx	lr

08010318 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8010318:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 801031c:	4770      	bx	lr

0801031e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 801031e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 8010322:	4770      	bx	lr

08010324 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8010324:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 8010328:	4770      	bx	lr

0801032a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 801032a:	4770      	bx	lr

0801032c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 801032c:	b510      	push	{r4, lr}
 801032e:	21b4      	movs	r1, #180	; 0xb4
 8010330:	4604      	mov	r4, r0
 8010332:	f01a fb02 	bl	802a93a <_ZdlPvj>
 8010336:	4620      	mov	r0, r4
 8010338:	bd10      	pop	{r4, pc}

0801033a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 801033a:	b570      	push	{r4, r5, r6, lr}
 801033c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 8010340:	428d      	cmp	r5, r1
 8010342:	bfb8      	it	lt
 8010344:	460d      	movlt	r5, r1
 8010346:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 801034a:	428d      	cmp	r5, r1
 801034c:	4604      	mov	r4, r0
 801034e:	bfa8      	it	ge
 8010350:	460d      	movge	r5, r1
 8010352:	4616      	mov	r6, r2
 8010354:	b99a      	cbnz	r2, 801037e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8010356:	6803      	ldr	r3, [r0, #0]
 8010358:	4629      	mov	r1, r5
 801035a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801035e:	4798      	blx	r3
 8010360:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010364:	b368      	cbz	r0, 80103c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8010366:	6803      	ldr	r3, [r0, #0]
 8010368:	68db      	ldr	r3, [r3, #12]
 801036a:	4798      	blx	r3
 801036c:	b348      	cbz	r0, 80103c2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 801036e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 8010372:	6803      	ldr	r3, [r0, #0]
 8010374:	4621      	mov	r1, r4
 8010376:	689b      	ldr	r3, [r3, #8]
 8010378:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801037c:	4718      	bx	r3
 801037e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8010382:	2b00      	cmp	r3, #0
 8010384:	dd08      	ble.n	8010398 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8010386:	f006 fa23 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 801038a:	4621      	mov	r1, r4
 801038c:	3004      	adds	r0, #4
 801038e:	f006 fa6c 	bl	801686a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010392:	2300      	movs	r3, #0
 8010394:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 8010398:	6823      	ldr	r3, [r4, #0]
 801039a:	4620      	mov	r0, r4
 801039c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80103a0:	4798      	blx	r3
 80103a2:	2300      	movs	r3, #0
 80103a4:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 80103a8:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 80103ac:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 80103b0:	f006 fa0e 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 80103b4:	4621      	mov	r1, r4
 80103b6:	3004      	adds	r0, #4
 80103b8:	f006 fb00 	bl	80169bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80103bc:	2301      	movs	r3, #1
 80103be:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 80103c2:	bd70      	pop	{r4, r5, r6, pc}

080103c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 80103c4:	b510      	push	{r4, lr}
 80103c6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 80103ca:	4299      	cmp	r1, r3
 80103cc:	bfb8      	it	lt
 80103ce:	4619      	movlt	r1, r3
 80103d0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 80103d4:	4299      	cmp	r1, r3
 80103d6:	bfa8      	it	ge
 80103d8:	4619      	movge	r1, r3
 80103da:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 80103de:	428b      	cmp	r3, r1
 80103e0:	4604      	mov	r4, r0
 80103e2:	d010      	beq.n	8010406 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103e4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 80103e8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 80103ec:	b158      	cbz	r0, 8010406 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103ee:	6803      	ldr	r3, [r0, #0]
 80103f0:	68db      	ldr	r3, [r3, #12]
 80103f2:	4798      	blx	r3
 80103f4:	b138      	cbz	r0, 8010406 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 80103f6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 80103fa:	6803      	ldr	r3, [r0, #0]
 80103fc:	4621      	mov	r1, r4
 80103fe:	689b      	ldr	r3, [r3, #8]
 8010400:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010404:	4718      	bx	r3
 8010406:	bd10      	pop	{r4, pc}

08010408 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8010408:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801040a:	4604      	mov	r4, r0
 801040c:	460d      	mov	r5, r1
 801040e:	b1a9      	cbz	r1, 801043c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8010410:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 8010414:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 8010418:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 801041c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 8010420:	ab01      	add	r3, sp, #4
 8010422:	1a12      	subs	r2, r2, r0
 8010424:	1b89      	subs	r1, r1, r6
 8010426:	1a38      	subs	r0, r7, r0
 8010428:	f007 fc88 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 801042c:	4629      	mov	r1, r5
 801042e:	ab01      	add	r3, sp, #4
 8010430:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 8010434:	4430      	add	r0, r6
 8010436:	f007 fc81 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 801043a:	b285      	uxth	r5, r0
 801043c:	4628      	mov	r0, r5
 801043e:	b003      	add	sp, #12
 8010440:	bdf0      	pop	{r4, r5, r6, r7, pc}

08010442 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8010442:	b570      	push	{r4, r5, r6, lr}
 8010444:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 8010448:	4604      	mov	r4, r0
 801044a:	2b00      	cmp	r3, #0
 801044c:	d035      	beq.n	80104ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 801044e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 8010452:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 8010456:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 801045a:	3001      	adds	r0, #1
 801045c:	1ad2      	subs	r2, r2, r3
 801045e:	b212      	sxth	r2, r2
 8010460:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 8010464:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8010468:	2100      	movs	r1, #0
 801046a:	b280      	uxth	r0, r0
 801046c:	47a8      	blx	r5
 801046e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 8010472:	6823      	ldr	r3, [r4, #0]
 8010474:	4401      	add	r1, r0
 8010476:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 801047a:	4620      	mov	r0, r4
 801047c:	4798      	blx	r3
 801047e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8010482:	429a      	cmp	r2, r3
 8010484:	db19      	blt.n	80104ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8010486:	2500      	movs	r5, #0
 8010488:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 801048c:	f006 f9a0 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010490:	4621      	mov	r1, r4
 8010492:	3004      	adds	r0, #4
 8010494:	f006 f9e9 	bl	801686a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010498:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 801049c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80104a0:	b158      	cbz	r0, 80104ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104a2:	6803      	ldr	r3, [r0, #0]
 80104a4:	68db      	ldr	r3, [r3, #12]
 80104a6:	4798      	blx	r3
 80104a8:	b138      	cbz	r0, 80104ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 80104aa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 80104ae:	6803      	ldr	r3, [r0, #0]
 80104b0:	4621      	mov	r1, r4
 80104b2:	689b      	ldr	r3, [r3, #8]
 80104b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80104b8:	4718      	bx	r3
 80104ba:	bd70      	pop	{r4, r5, r6, pc}

080104bc <_ZN8touchgfx8DrawableC1Ev>:
 80104bc:	4a0a      	ldr	r2, [pc, #40]	; (80104e8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 80104be:	6002      	str	r2, [r0, #0]
 80104c0:	2200      	movs	r2, #0
 80104c2:	8082      	strh	r2, [r0, #4]
 80104c4:	80c2      	strh	r2, [r0, #6]
 80104c6:	8102      	strh	r2, [r0, #8]
 80104c8:	8142      	strh	r2, [r0, #10]
 80104ca:	8182      	strh	r2, [r0, #12]
 80104cc:	81c2      	strh	r2, [r0, #14]
 80104ce:	8202      	strh	r2, [r0, #16]
 80104d0:	8242      	strh	r2, [r0, #18]
 80104d2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80104d6:	61c2      	str	r2, [r0, #28]
 80104d8:	8402      	strh	r2, [r0, #32]
 80104da:	8442      	strh	r2, [r0, #34]	; 0x22
 80104dc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80104e0:	2201      	movs	r2, #1
 80104e2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 80104e6:	4770      	bx	lr
 80104e8:	0802f9d4 	.word	0x0802f9d4

080104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 80104ec:	b570      	push	{r4, r5, r6, lr}
 80104ee:	6803      	ldr	r3, [r0, #0]
 80104f0:	4604      	mov	r4, r0
 80104f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80104f4:	4615      	mov	r5, r2
 80104f6:	4798      	blx	r3
 80104f8:	6823      	ldr	r3, [r4, #0]
 80104fa:	4629      	mov	r1, r5
 80104fc:	4620      	mov	r0, r4
 80104fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010500:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010504:	4718      	bx	r3

08010506 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8010506:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801050a:	4604      	mov	r4, r0
 801050c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8010510:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 8010514:	460e      	mov	r6, r1
 8010516:	4615      	mov	r5, r2
 8010518:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 801051c:	4619      	mov	r1, r3
 801051e:	463a      	mov	r2, r7
 8010520:	3058      	adds	r0, #88	; 0x58
 8010522:	4698      	mov	r8, r3
 8010524:	f7ff ffe2 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010528:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801052c:	4446      	add	r6, r8
 801052e:	42b3      	cmp	r3, r6
 8010530:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010534:	bfb8      	it	lt
 8010536:	8126      	strhlt	r6, [r4, #8]
 8010538:	443d      	add	r5, r7
 801053a:	42ab      	cmp	r3, r5
 801053c:	bfb8      	it	lt
 801053e:	8165      	strhlt	r5, [r4, #10]
 8010540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010544 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8010544:	b510      	push	{r4, lr}
 8010546:	4604      	mov	r4, r0
 8010548:	302c      	adds	r0, #44	; 0x2c
 801054a:	f003 fc42 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801054e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010552:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010556:	4620      	mov	r0, r4
 8010558:	f7ff ffc8 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801055c:	bd10      	pop	{r4, pc}
	...

08010560 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8010560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010562:	4604      	mov	r4, r0
 8010564:	4626      	mov	r6, r4
 8010566:	2500      	movs	r5, #0
 8010568:	f7ff ffa8 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 801056c:	4b23      	ldr	r3, [pc, #140]	; (80105fc <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 801056e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010570:	f846 3b2c 	str.w	r3, [r6], #44
 8010574:	2226      	movs	r2, #38	; 0x26
 8010576:	4629      	mov	r1, r5
 8010578:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801057c:	4630      	mov	r0, r6
 801057e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010582:	f01b f9f2 	bl	802b96a <memset>
 8010586:	4630      	mov	r0, r6
 8010588:	f7ff ff98 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 801058c:	a902      	add	r1, sp, #8
 801058e:	4b1c      	ldr	r3, [pc, #112]	; (8010600 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8010590:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010592:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8010596:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 801059a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 801059e:	4630      	mov	r0, r6
 80105a0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 80105a4:	f003 fc15 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80105a8:	4638      	mov	r0, r7
 80105aa:	f7ff ff87 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 80105ae:	4b15      	ldr	r3, [pc, #84]	; (8010604 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 80105b0:	65a3      	str	r3, [r4, #88]	; 0x58
 80105b2:	2364      	movs	r3, #100	; 0x64
 80105b4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 80105b8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80105bc:	4b12      	ldr	r3, [pc, #72]	; (8010608 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 80105be:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 80105c2:	4629      	mov	r1, r5
 80105c4:	4630      	mov	r0, r6
 80105c6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 80105ca:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 80105ce:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 80105d2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 80105d6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 80105da:	f7f1 ff2f 	bl	800243c <_ZN8touchgfx8Drawable4setXEs>
 80105de:	4629      	mov	r1, r5
 80105e0:	4630      	mov	r0, r6
 80105e2:	f7f1 ff2d 	bl	8002440 <_ZN8touchgfx8Drawable4setYEs>
 80105e6:	4631      	mov	r1, r6
 80105e8:	4620      	mov	r0, r4
 80105ea:	f000 f819 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80105ee:	4620      	mov	r0, r4
 80105f0:	4639      	mov	r1, r7
 80105f2:	f000 f815 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80105f6:	4620      	mov	r0, r4
 80105f8:	b003      	add	sp, #12
 80105fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105fc:	0802f088 	.word	0x0802f088
 8010600:	0802f890 	.word	0x0802f890
 8010604:	0802f15c 	.word	0x0802f15c
 8010608:	08018517 	.word	0x08018517

0801060c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801060c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801060e:	2000      	movs	r0, #0
 8010610:	b12b      	cbz	r3, 801061e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010612:	b920      	cbnz	r0, 801061e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010614:	1a5a      	subs	r2, r3, r1
 8010616:	4250      	negs	r0, r2
 8010618:	4150      	adcs	r0, r2
 801061a:	699b      	ldr	r3, [r3, #24]
 801061c:	e7f8      	b.n	8010610 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801061e:	4770      	bx	lr

08010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8010620:	2300      	movs	r3, #0
 8010622:	6148      	str	r0, [r1, #20]
 8010624:	618b      	str	r3, [r1, #24]
 8010626:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8010628:	b913      	cbnz	r3, 8010630 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801062a:	6281      	str	r1, [r0, #40]	; 0x28
 801062c:	4770      	bx	lr
 801062e:	4613      	mov	r3, r2
 8010630:	699a      	ldr	r2, [r3, #24]
 8010632:	2a00      	cmp	r2, #0
 8010634:	d1fb      	bne.n	801062e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 8010636:	6199      	str	r1, [r3, #24]
 8010638:	4770      	bx	lr

0801063a <_ZN8touchgfx9Container9removeAllEv>:
 801063a:	2200      	movs	r2, #0
 801063c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 801063e:	b123      	cbz	r3, 801064a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010640:	6999      	ldr	r1, [r3, #24]
 8010642:	6281      	str	r1, [r0, #40]	; 0x28
 8010644:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010648:	e7f8      	b.n	801063c <_ZN8touchgfx9Container9removeAllEv+0x2>
 801064a:	4770      	bx	lr

0801064c <_ZN8touchgfx9Container6unlinkEv>:
 801064c:	2300      	movs	r3, #0
 801064e:	6283      	str	r3, [r0, #40]	; 0x28
 8010650:	4770      	bx	lr

08010652 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010652:	2200      	movs	r2, #0
 8010654:	8002      	strh	r2, [r0, #0]
 8010656:	8042      	strh	r2, [r0, #2]
 8010658:	8082      	strh	r2, [r0, #4]
 801065a:	80c2      	strh	r2, [r0, #6]
 801065c:	4770      	bx	lr

0801065e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801065e:	b570      	push	{r4, r5, r6, lr}
 8010660:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010662:	460d      	mov	r5, r1
 8010664:	4616      	mov	r6, r2
 8010666:	b13c      	cbz	r4, 8010678 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010668:	6823      	ldr	r3, [r4, #0]
 801066a:	4620      	mov	r0, r4
 801066c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801066e:	4632      	mov	r2, r6
 8010670:	4629      	mov	r1, r5
 8010672:	4798      	blx	r3
 8010674:	69a4      	ldr	r4, [r4, #24]
 8010676:	e7f6      	b.n	8010666 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010678:	bd70      	pop	{r4, r5, r6, pc}

0801067a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801067a:	b538      	push	{r3, r4, r5, lr}
 801067c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801067e:	460d      	mov	r5, r1
 8010680:	b134      	cbz	r4, 8010690 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010682:	682b      	ldr	r3, [r5, #0]
 8010684:	4621      	mov	r1, r4
 8010686:	689b      	ldr	r3, [r3, #8]
 8010688:	4628      	mov	r0, r5
 801068a:	4798      	blx	r3
 801068c:	69a4      	ldr	r4, [r4, #24]
 801068e:	e7f7      	b.n	8010680 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010690:	bd38      	pop	{r3, r4, r5, pc}

08010692 <_ZN8touchgfx9ContainerD1Ev>:
 8010692:	4770      	bx	lr

08010694 <_ZN8touchgfx9ContainerD0Ev>:
 8010694:	b510      	push	{r4, lr}
 8010696:	212c      	movs	r1, #44	; 0x2c
 8010698:	4604      	mov	r4, r0
 801069a:	f01a f94e 	bl	802a93a <_ZdlPvj>
 801069e:	4620      	mov	r0, r4
 80106a0:	bd10      	pop	{r4, pc}

080106a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80106a2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106a4:	b19b      	cbz	r3, 80106ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106a6:	428b      	cmp	r3, r1
 80106a8:	d109      	bne.n	80106be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80106aa:	699a      	ldr	r2, [r3, #24]
 80106ac:	2100      	movs	r1, #0
 80106ae:	6159      	str	r1, [r3, #20]
 80106b0:	6282      	str	r2, [r0, #40]	; 0x28
 80106b2:	b902      	cbnz	r2, 80106b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80106b4:	4770      	bx	lr
 80106b6:	6199      	str	r1, [r3, #24]
 80106b8:	4770      	bx	lr
 80106ba:	4613      	mov	r3, r2
 80106bc:	b13a      	cbz	r2, 80106ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80106be:	699a      	ldr	r2, [r3, #24]
 80106c0:	428a      	cmp	r2, r1
 80106c2:	d1fa      	bne.n	80106ba <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80106c4:	698a      	ldr	r2, [r1, #24]
 80106c6:	619a      	str	r2, [r3, #24]
 80106c8:	2300      	movs	r3, #0
 80106ca:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80106ce:	4770      	bx	lr

080106d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80106d0:	b410      	push	{r4}
 80106d2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80106d4:	4604      	mov	r4, r0
 80106d6:	b92b      	cbnz	r3, 80106e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80106d8:	6803      	ldr	r3, [r0, #0]
 80106da:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106de:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80106e0:	4611      	mov	r1, r2
 80106e2:	4718      	bx	r3
 80106e4:	b941      	cbnz	r1, 80106f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80106e6:	6193      	str	r3, [r2, #24]
 80106e8:	6282      	str	r2, [r0, #40]	; 0x28
 80106ea:	6154      	str	r4, [r2, #20]
 80106ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106f0:	4770      	bx	lr
 80106f2:	4603      	mov	r3, r0
 80106f4:	2800      	cmp	r0, #0
 80106f6:	d0f9      	beq.n	80106ec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80106f8:	4299      	cmp	r1, r3
 80106fa:	6998      	ldr	r0, [r3, #24]
 80106fc:	d1f9      	bne.n	80106f2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80106fe:	6190      	str	r0, [r2, #24]
 8010700:	618a      	str	r2, [r1, #24]
 8010702:	e7f2      	b.n	80106ea <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010704 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010708:	461f      	mov	r7, r3
 801070a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 801070e:	460d      	mov	r5, r1
 8010710:	4616      	mov	r6, r2
 8010712:	b103      	cbz	r3, 8010716 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010714:	6038      	str	r0, [r7, #0]
 8010716:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010718:	b314      	cbz	r4, 8010760 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801071a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801071e:	b1eb      	cbz	r3, 801075c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010720:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010724:	428d      	cmp	r5, r1
 8010726:	db19      	blt.n	801075c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010728:	8923      	ldrh	r3, [r4, #8]
 801072a:	b289      	uxth	r1, r1
 801072c:	440b      	add	r3, r1
 801072e:	b21b      	sxth	r3, r3
 8010730:	429d      	cmp	r5, r3
 8010732:	da13      	bge.n	801075c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010734:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8010738:	4296      	cmp	r6, r2
 801073a:	db0f      	blt.n	801075c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801073c:	8963      	ldrh	r3, [r4, #10]
 801073e:	b292      	uxth	r2, r2
 8010740:	4413      	add	r3, r2
 8010742:	b21b      	sxth	r3, r3
 8010744:	429e      	cmp	r6, r3
 8010746:	da09      	bge.n	801075c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010748:	6823      	ldr	r3, [r4, #0]
 801074a:	1ab2      	subs	r2, r6, r2
 801074c:	1a69      	subs	r1, r5, r1
 801074e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8010752:	b212      	sxth	r2, r2
 8010754:	463b      	mov	r3, r7
 8010756:	b209      	sxth	r1, r1
 8010758:	4620      	mov	r0, r4
 801075a:	47c0      	blx	r8
 801075c:	69a4      	ldr	r4, [r4, #24]
 801075e:	e7db      	b.n	8010718 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010760:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010764 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010768:	4c6e      	ldr	r4, [pc, #440]	; (8010924 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801076a:	b0a1      	sub	sp, #132	; 0x84
 801076c:	6824      	ldr	r4, [r4, #0]
 801076e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8010770:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8010774:	9303      	str	r3, [sp, #12]
 8010776:	2400      	movs	r4, #0
 8010778:	802c      	strh	r4, [r5, #0]
 801077a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801077c:	802c      	strh	r4, [r5, #0]
 801077e:	601c      	str	r4, [r3, #0]
 8010780:	4606      	mov	r6, r0
 8010782:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010786:	f7ff ffbd 	bl	8010704 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801078a:	f1b9 0f03 	cmp.w	r9, #3
 801078e:	f340 80c2 	ble.w	8010916 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010792:	4631      	mov	r1, r6
 8010794:	a80c      	add	r0, sp, #48	; 0x30
 8010796:	f007 f99f 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801079a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801079e:	9306      	str	r3, [sp, #24]
 80107a0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80107a4:	9307      	str	r3, [sp, #28]
 80107a6:	9b03      	ldr	r3, [sp, #12]
 80107a8:	f8d3 a000 	ldr.w	sl, [r3]
 80107ac:	f1ba 0f00 	cmp.w	sl, #0
 80107b0:	f000 80b4 	beq.w	801091c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 80107b4:	4651      	mov	r1, sl
 80107b6:	a810      	add	r0, sp, #64	; 0x40
 80107b8:	f007 f98e 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80107bc:	9b01      	ldr	r3, [sp, #4]
 80107be:	9a06      	ldr	r2, [sp, #24]
 80107c0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 80107c4:	189d      	adds	r5, r3, r2
 80107c6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 80107ca:	9a07      	ldr	r2, [sp, #28]
 80107cc:	2002      	movs	r0, #2
 80107ce:	fb91 f1f0 	sdiv	r1, r1, r0
 80107d2:	4419      	add	r1, r3
 80107d4:	1a6d      	subs	r5, r5, r1
 80107d6:	9b02      	ldr	r3, [sp, #8]
 80107d8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80107dc:	4413      	add	r3, r2
 80107de:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 80107e2:	fb92 f2f0 	sdiv	r2, r2, r0
 80107e6:	440a      	add	r2, r1
 80107e8:	1a9b      	subs	r3, r3, r2
 80107ea:	435b      	muls	r3, r3
 80107ec:	fb05 3505 	mla	r5, r5, r5, r3
 80107f0:	4f4d      	ldr	r7, [pc, #308]	; (8010928 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80107f2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107f4:	ac10      	add	r4, sp, #64	; 0x40
 80107f6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107f8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107fa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107fc:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010800:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010804:	f1b9 0f0c 	cmp.w	r9, #12
 8010808:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 801080c:	f04f 0303 	mov.w	r3, #3
 8010810:	bfc8      	it	gt
 8010812:	4698      	movgt	r8, r3
 8010814:	f8cd 9000 	str.w	r9, [sp]
 8010818:	f04f 0400 	mov.w	r4, #0
 801081c:	bfdc      	itt	le
 801081e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010822:	fb92 f8f3 	sdivle	r8, r2, r3
 8010826:	1c63      	adds	r3, r4, #1
 8010828:	aa10      	add	r2, sp, #64	; 0x40
 801082a:	f004 0401 	and.w	r4, r4, #1
 801082e:	9308      	str	r3, [sp, #32]
 8010830:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010834:	9b00      	ldr	r3, [sp, #0]
 8010836:	fb93 f3f8 	sdiv	r3, r3, r8
 801083a:	b29b      	uxth	r3, r3
 801083c:	3404      	adds	r4, #4
 801083e:	f04f 0b00 	mov.w	fp, #0
 8010842:	9304      	str	r3, [sp, #16]
 8010844:	9a04      	ldr	r2, [sp, #16]
 8010846:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801084a:	fb13 f302 	smulbb	r3, r3, r2
 801084e:	9a01      	ldr	r2, [sp, #4]
 8010850:	b29b      	uxth	r3, r3
 8010852:	1899      	adds	r1, r3, r2
 8010854:	9305      	str	r3, [sp, #20]
 8010856:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801085a:	b209      	sxth	r1, r1
 801085c:	4299      	cmp	r1, r3
 801085e:	db4d      	blt.n	80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010860:	8932      	ldrh	r2, [r6, #8]
 8010862:	4413      	add	r3, r2
 8010864:	b21b      	sxth	r3, r3
 8010866:	4299      	cmp	r1, r3
 8010868:	da48      	bge.n	80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801086a:	9b04      	ldr	r3, [sp, #16]
 801086c:	6827      	ldr	r7, [r4, #0]
 801086e:	fb17 f703 	smulbb	r7, r7, r3
 8010872:	9b02      	ldr	r3, [sp, #8]
 8010874:	b2bf      	uxth	r7, r7
 8010876:	18fa      	adds	r2, r7, r3
 8010878:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801087c:	b212      	sxth	r2, r2
 801087e:	429a      	cmp	r2, r3
 8010880:	db3c      	blt.n	80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010882:	8970      	ldrh	r0, [r6, #10]
 8010884:	4403      	add	r3, r0
 8010886:	b21b      	sxth	r3, r3
 8010888:	429a      	cmp	r2, r3
 801088a:	da37      	bge.n	80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801088c:	2300      	movs	r3, #0
 801088e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010890:	4630      	mov	r0, r6
 8010892:	ab0b      	add	r3, sp, #44	; 0x2c
 8010894:	f7ff ff36 	bl	8010704 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010898:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801089a:	b37a      	cbz	r2, 80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801089c:	4552      	cmp	r2, sl
 801089e:	d02d      	beq.n	80108fc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80108a0:	4611      	mov	r1, r2
 80108a2:	a80e      	add	r0, sp, #56	; 0x38
 80108a4:	9209      	str	r2, [sp, #36]	; 0x24
 80108a6:	f007 f917 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80108aa:	9a06      	ldr	r2, [sp, #24]
 80108ac:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 80108b0:	9b01      	ldr	r3, [sp, #4]
 80108b2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 80108b6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 80108ba:	4413      	add	r3, r2
 80108bc:	f04f 0e02 	mov.w	lr, #2
 80108c0:	fb91 f1fe 	sdiv	r1, r1, lr
 80108c4:	4401      	add	r1, r0
 80108c6:	1a58      	subs	r0, r3, r1
 80108c8:	9a07      	ldr	r2, [sp, #28]
 80108ca:	9b02      	ldr	r3, [sp, #8]
 80108cc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 80108d0:	fb9c fcfe 	sdiv	ip, ip, lr
 80108d4:	4413      	add	r3, r2
 80108d6:	448c      	add	ip, r1
 80108d8:	eba3 030c 	sub.w	r3, r3, ip
 80108dc:	435b      	muls	r3, r3
 80108de:	fb00 3300 	mla	r3, r0, r0, r3
 80108e2:	42ab      	cmp	r3, r5
 80108e4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80108e6:	d208      	bcs.n	80108fa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80108e8:	9803      	ldr	r0, [sp, #12]
 80108ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80108ec:	6001      	str	r1, [r0, #0]
 80108ee:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80108f0:	9805      	ldr	r0, [sp, #20]
 80108f2:	8008      	strh	r0, [r1, #0]
 80108f4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80108f6:	461d      	mov	r5, r3
 80108f8:	800f      	strh	r7, [r1, #0]
 80108fa:	4692      	mov	sl, r2
 80108fc:	f10b 0b01 	add.w	fp, fp, #1
 8010900:	f1bb 0f04 	cmp.w	fp, #4
 8010904:	f104 0408 	add.w	r4, r4, #8
 8010908:	d19c      	bne.n	8010844 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801090a:	9b00      	ldr	r3, [sp, #0]
 801090c:	9c08      	ldr	r4, [sp, #32]
 801090e:	444b      	add	r3, r9
 8010910:	4544      	cmp	r4, r8
 8010912:	9300      	str	r3, [sp, #0]
 8010914:	d187      	bne.n	8010826 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010916:	b021      	add	sp, #132	; 0x84
 8010918:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801091c:	f04f 35ff 	mov.w	r5, #4294967295
 8010920:	e766      	b.n	80107f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010922:	bf00      	nop
 8010924:	200137ec 	.word	0x200137ec
 8010928:	0802c678 	.word	0x0802c678

0801092c <_ZN8touchgfx4RectaNERKS0_>:
 801092c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010930:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010934:	888c      	ldrh	r4, [r1, #4]
 8010936:	f9b0 9000 	ldrsh.w	r9, [r0]
 801093a:	443c      	add	r4, r7
 801093c:	b2a4      	uxth	r4, r4
 801093e:	fa0f f884 	sxth.w	r8, r4
 8010942:	45c1      	cmp	r9, r8
 8010944:	da2f      	bge.n	80109a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010946:	8882      	ldrh	r2, [r0, #4]
 8010948:	444a      	add	r2, r9
 801094a:	b292      	uxth	r2, r2
 801094c:	fa0f fe82 	sxth.w	lr, r2
 8010950:	4577      	cmp	r7, lr
 8010952:	da28      	bge.n	80109a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010954:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010958:	88cb      	ldrh	r3, [r1, #6]
 801095a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801095e:	442b      	add	r3, r5
 8010960:	b21b      	sxth	r3, r3
 8010962:	429e      	cmp	r6, r3
 8010964:	da1f      	bge.n	80109a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010966:	88c3      	ldrh	r3, [r0, #6]
 8010968:	4433      	add	r3, r6
 801096a:	b29b      	uxth	r3, r3
 801096c:	fa0f fc83 	sxth.w	ip, r3
 8010970:	4565      	cmp	r5, ip
 8010972:	da18      	bge.n	80109a6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010974:	454f      	cmp	r7, r9
 8010976:	bfb8      	it	lt
 8010978:	464f      	movlt	r7, r9
 801097a:	42b5      	cmp	r5, r6
 801097c:	bfb8      	it	lt
 801097e:	4635      	movlt	r5, r6
 8010980:	45f0      	cmp	r8, lr
 8010982:	bfd8      	it	le
 8010984:	4622      	movle	r2, r4
 8010986:	1bd2      	subs	r2, r2, r7
 8010988:	8082      	strh	r2, [r0, #4]
 801098a:	884a      	ldrh	r2, [r1, #2]
 801098c:	88c9      	ldrh	r1, [r1, #6]
 801098e:	8007      	strh	r7, [r0, #0]
 8010990:	440a      	add	r2, r1
 8010992:	b292      	uxth	r2, r2
 8010994:	b211      	sxth	r1, r2
 8010996:	458c      	cmp	ip, r1
 8010998:	bfa8      	it	ge
 801099a:	4613      	movge	r3, r2
 801099c:	1b5b      	subs	r3, r3, r5
 801099e:	80c3      	strh	r3, [r0, #6]
 80109a0:	8045      	strh	r5, [r0, #2]
 80109a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80109a6:	2300      	movs	r3, #0
 80109a8:	8003      	strh	r3, [r0, #0]
 80109aa:	8043      	strh	r3, [r0, #2]
 80109ac:	8083      	strh	r3, [r0, #4]
 80109ae:	80c3      	strh	r3, [r0, #6]
 80109b0:	e7f7      	b.n	80109a2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080109b2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80109b2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80109b6:	2b00      	cmp	r3, #0
 80109b8:	dd06      	ble.n	80109c8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80109ba:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80109be:	2800      	cmp	r0, #0
 80109c0:	bfcc      	ite	gt
 80109c2:	2000      	movgt	r0, #0
 80109c4:	2001      	movle	r0, #1
 80109c6:	4770      	bx	lr
 80109c8:	2001      	movs	r0, #1
 80109ca:	4770      	bx	lr

080109cc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80109cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80109d0:	2300      	movs	r3, #0
 80109d2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80109d4:	8003      	strh	r3, [r0, #0]
 80109d6:	4604      	mov	r4, r0
 80109d8:	8043      	strh	r3, [r0, #2]
 80109da:	8083      	strh	r3, [r0, #4]
 80109dc:	80c3      	strh	r3, [r0, #6]
 80109de:	2d00      	cmp	r5, #0
 80109e0:	d040      	beq.n	8010a64 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80109e2:	1d28      	adds	r0, r5, #4
 80109e4:	f7ff ffe5 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109e8:	b988      	cbnz	r0, 8010a0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80109ea:	4620      	mov	r0, r4
 80109ec:	f7ff ffe1 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109f0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80109f4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80109f8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80109fc:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010a00:	b138      	cbz	r0, 8010a12 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010a02:	8022      	strh	r2, [r4, #0]
 8010a04:	8063      	strh	r3, [r4, #2]
 8010a06:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010a0a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010a0e:	69ad      	ldr	r5, [r5, #24]
 8010a10:	e7e5      	b.n	80109de <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010a12:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010a16:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010a1a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010a1e:	4290      	cmp	r0, r2
 8010a20:	4607      	mov	r7, r0
 8010a22:	bfa8      	it	ge
 8010a24:	4617      	movge	r7, r2
 8010a26:	4472      	add	r2, lr
 8010a28:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010a2c:	8027      	strh	r7, [r4, #0]
 8010a2e:	4299      	cmp	r1, r3
 8010a30:	460e      	mov	r6, r1
 8010a32:	4440      	add	r0, r8
 8010a34:	bfa8      	it	ge
 8010a36:	461e      	movge	r6, r3
 8010a38:	4471      	add	r1, lr
 8010a3a:	4463      	add	r3, ip
 8010a3c:	b200      	sxth	r0, r0
 8010a3e:	b212      	sxth	r2, r2
 8010a40:	b209      	sxth	r1, r1
 8010a42:	b21b      	sxth	r3, r3
 8010a44:	4290      	cmp	r0, r2
 8010a46:	bfac      	ite	ge
 8010a48:	ebc7 0200 	rsbge	r2, r7, r0
 8010a4c:	ebc7 0202 	rsblt	r2, r7, r2
 8010a50:	4299      	cmp	r1, r3
 8010a52:	bfac      	ite	ge
 8010a54:	ebc6 0301 	rsbge	r3, r6, r1
 8010a58:	ebc6 0303 	rsblt	r3, r6, r3
 8010a5c:	8066      	strh	r6, [r4, #2]
 8010a5e:	80a2      	strh	r2, [r4, #4]
 8010a60:	80e3      	strh	r3, [r4, #6]
 8010a62:	e7d4      	b.n	8010a0e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a64:	4620      	mov	r0, r4
 8010a66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010a6a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010a6e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010a72:	b383      	cbz	r3, 8010ad6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a74:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010a76:	b374      	cbz	r4, 8010ad6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a78:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010a7c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010a80:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010a84:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010a88:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010a8c:	b303      	cbz	r3, 8010ad0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a8e:	4668      	mov	r0, sp
 8010a90:	1d21      	adds	r1, r4, #4
 8010a92:	f8ad 5000 	strh.w	r5, [sp]
 8010a96:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010a9a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a9e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010aa2:	f7ff ff43 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8010aa6:	4668      	mov	r0, sp
 8010aa8:	f7ff ff83 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010aac:	b980      	cbnz	r0, 8010ad0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010aae:	f8bd 3000 	ldrh.w	r3, [sp]
 8010ab2:	88a2      	ldrh	r2, [r4, #4]
 8010ab4:	1a9b      	subs	r3, r3, r2
 8010ab6:	f8ad 3000 	strh.w	r3, [sp]
 8010aba:	88e2      	ldrh	r2, [r4, #6]
 8010abc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010ac0:	1a9b      	subs	r3, r3, r2
 8010ac2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ac6:	6823      	ldr	r3, [r4, #0]
 8010ac8:	4669      	mov	r1, sp
 8010aca:	689b      	ldr	r3, [r3, #8]
 8010acc:	4620      	mov	r0, r4
 8010ace:	4798      	blx	r3
 8010ad0:	69a4      	ldr	r4, [r4, #24]
 8010ad2:	2c00      	cmp	r4, #0
 8010ad4:	d1d8      	bne.n	8010a88 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010ad6:	b002      	add	sp, #8
 8010ad8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010adc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010adc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010ade:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8010ae2:	460d      	mov	r5, r1
 8010ae4:	4616      	mov	r6, r2
 8010ae6:	b323      	cbz	r3, 8010b32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010ae8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8010aea:	b314      	cbz	r4, 8010b32 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010aec:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8010af0:	b1eb      	cbz	r3, 8010b2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010af2:	6828      	ldr	r0, [r5, #0]
 8010af4:	6869      	ldr	r1, [r5, #4]
 8010af6:	466b      	mov	r3, sp
 8010af8:	c303      	stmia	r3!, {r0, r1}
 8010afa:	4668      	mov	r0, sp
 8010afc:	1d21      	adds	r1, r4, #4
 8010afe:	f7ff ff15 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8010b02:	4668      	mov	r0, sp
 8010b04:	f7ff ff55 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b08:	b988      	cbnz	r0, 8010b2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010b0a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b0e:	88a2      	ldrh	r2, [r4, #4]
 8010b10:	1a9b      	subs	r3, r3, r2
 8010b12:	f8ad 3000 	strh.w	r3, [sp]
 8010b16:	88e2      	ldrh	r2, [r4, #6]
 8010b18:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b1c:	1a9b      	subs	r3, r3, r2
 8010b1e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010b22:	6823      	ldr	r3, [r4, #0]
 8010b24:	4632      	mov	r2, r6
 8010b26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8010b28:	4669      	mov	r1, sp
 8010b2a:	4620      	mov	r0, r4
 8010b2c:	4798      	blx	r3
 8010b2e:	69a4      	ldr	r4, [r4, #24]
 8010b30:	e7db      	b.n	8010aea <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010b32:	b002      	add	sp, #8
 8010b34:	bd70      	pop	{r4, r5, r6, pc}

08010b36 <_ZN8touchgfx14SwipeContainer14setSwipeCutoffEt>:
 8010b36:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8010b38:	4770      	bx	lr
	...

08010b3c <_ZN8touchgfx14SwipeContainerD1Ev>:
 8010b3c:	4b05      	ldr	r3, [pc, #20]	; (8010b54 <_ZN8touchgfx14SwipeContainerD1Ev+0x18>)
 8010b3e:	b510      	push	{r4, lr}
 8010b40:	6003      	str	r3, [r0, #0]
 8010b42:	4604      	mov	r4, r0
 8010b44:	f005 fe44 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010b48:	4621      	mov	r1, r4
 8010b4a:	3004      	adds	r0, #4
 8010b4c:	f005 fe8d 	bl	801686a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8010b50:	4620      	mov	r0, r4
 8010b52:	bd10      	pop	{r4, pc}
 8010b54:	0802f1ec 	.word	0x0802f1ec

08010b58 <_ZN8touchgfx14SwipeContainerD0Ev>:
 8010b58:	b510      	push	{r4, lr}
 8010b5a:	4604      	mov	r4, r0
 8010b5c:	f7ff ffee 	bl	8010b3c <_ZN8touchgfx14SwipeContainerD1Ev>
 8010b60:	4620      	mov	r0, r4
 8010b62:	21f4      	movs	r1, #244	; 0xf4
 8010b64:	f019 fee9 	bl	802a93a <_ZdlPvj>
 8010b68:	4620      	mov	r0, r4
 8010b6a:	bd10      	pop	{r4, pc}

08010b6c <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE>:
 8010b6c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010b70:	2b04      	cmp	r3, #4
 8010b72:	d117      	bne.n	8010ba4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010b74:	790b      	ldrb	r3, [r1, #4]
 8010b76:	2b01      	cmp	r3, #1
 8010b78:	d114      	bne.n	8010ba4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010b7a:	f9b0 3030 	ldrsh.w	r3, [r0, #48]	; 0x30
 8010b7e:	8f82      	ldrh	r2, [r0, #60]	; 0x3c
 8010b80:	8643      	strh	r3, [r0, #50]	; 0x32
 8010b82:	2b00      	cmp	r3, #0
 8010b84:	8682      	strh	r2, [r0, #52]	; 0x34
 8010b86:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010b8a:	da0e      	bge.n	8010baa <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3e>
 8010b8c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010b90:	3a01      	subs	r2, #1
 8010b92:	4291      	cmp	r1, r2
 8010b94:	d007      	beq.n	8010ba6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010b96:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010b98:	4252      	negs	r2, r2
 8010b9a:	4293      	cmp	r3, r2
 8010b9c:	dc03      	bgt.n	8010ba6 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x3a>
 8010b9e:	2302      	movs	r3, #2
 8010ba0:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010ba4:	4770      	bx	lr
 8010ba6:	2300      	movs	r3, #0
 8010ba8:	e7fa      	b.n	8010ba0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010baa:	d0fb      	beq.n	8010ba4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x38>
 8010bac:	b111      	cbz	r1, 8010bb4 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x48>
 8010bae:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 8010bb0:	4293      	cmp	r3, r2
 8010bb2:	da01      	bge.n	8010bb8 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x4c>
 8010bb4:	2301      	movs	r3, #1
 8010bb6:	e7f3      	b.n	8010ba0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>
 8010bb8:	2303      	movs	r3, #3
 8010bba:	e7f1      	b.n	8010ba0 <_ZN8touchgfx14SwipeContainer16handleClickEventERKNS_10ClickEventE+0x34>

08010bbc <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE>:
 8010bbc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010bc0:	2b04      	cmp	r3, #4
 8010bc2:	d113      	bne.n	8010bec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010bc4:	790b      	ldrb	r3, [r1, #4]
 8010bc6:	b98b      	cbnz	r3, 8010bec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010bc8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010bca:	8643      	strh	r3, [r0, #50]	; 0x32
 8010bcc:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8010bce:	8683      	strh	r3, [r0, #52]	; 0x34
 8010bd0:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8010bd4:	f890 20f1 	ldrb.w	r2, [r0, #241]	; 0xf1
 8010bd8:	2b00      	cmp	r3, #0
 8010bda:	da08      	bge.n	8010bee <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x32>
 8010bdc:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010be0:	3b01      	subs	r3, #1
 8010be2:	429a      	cmp	r2, r3
 8010be4:	da02      	bge.n	8010bec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010be6:	2302      	movs	r3, #2
 8010be8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010bec:	4770      	bx	lr
 8010bee:	d0fd      	beq.n	8010bec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010bf0:	2a00      	cmp	r2, #0
 8010bf2:	d0fb      	beq.n	8010bec <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x30>
 8010bf4:	2303      	movs	r3, #3
 8010bf6:	e7f7      	b.n	8010be8 <_ZN8touchgfx14SwipeContainer18handleGestureEventERKNS_12GestureEventE+0x2c>

08010bf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 8010bf8:	b538      	push	{r3, r4, r5, lr}
 8010bfa:	2226      	movs	r2, #38	; 0x26
 8010bfc:	4604      	mov	r4, r0
 8010bfe:	460d      	mov	r5, r1
 8010c00:	2100      	movs	r1, #0
 8010c02:	f01a feb2 	bl	802b96a <memset>
 8010c06:	4620      	mov	r0, r4
 8010c08:	f7ff fc58 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 8010c0c:	4b06      	ldr	r3, [pc, #24]	; (8010c28 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8010c0e:	6023      	str	r3, [r4, #0]
 8010c10:	882b      	ldrh	r3, [r5, #0]
 8010c12:	84e3      	strh	r3, [r4, #38]	; 0x26
 8010c14:	23ff      	movs	r3, #255	; 0xff
 8010c16:	4620      	mov	r0, r4
 8010c18:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8010c1c:	4629      	mov	r1, r5
 8010c1e:	f003 f8d8 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010c22:	4620      	mov	r0, r4
 8010c24:	bd38      	pop	{r3, r4, r5, pc}
 8010c26:	bf00      	nop
 8010c28:	0802f890 	.word	0x0802f890

08010c2c <_ZN8touchgfx14SwipeContainer23setEndSwipeElasticWidthEt>:
 8010c2c:	86c1      	strh	r1, [r0, #54]	; 0x36
 8010c2e:	4770      	bx	lr

08010c30 <_ZN8touchgfx14SwipeContainer18setPageIndicatorXYEss>:
 8010c30:	b508      	push	{r3, lr}
 8010c32:	3068      	adds	r0, #104	; 0x68
 8010c34:	f7f1 fe84 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8010c38:	bd08      	pop	{r3, pc}

08010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>:
 8010c3a:	b508      	push	{r3, lr}
 8010c3c:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 8010c3e:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010c42:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010c46:	fb03 2111 	mls	r1, r3, r1, r2
 8010c4a:	b209      	sxth	r1, r1
 8010c4c:	2200      	movs	r2, #0
 8010c4e:	3038      	adds	r0, #56	; 0x38
 8010c50:	f7f1 fc01 	bl	8002456 <_ZN8touchgfx8Drawable6moveToEss>
 8010c54:	bd08      	pop	{r3, pc}

08010c56 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE>:
 8010c56:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010c5a:	2b04      	cmp	r3, #4
 8010c5c:	d119      	bne.n	8010c92 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x3c>
 8010c5e:	88ca      	ldrh	r2, [r1, #6]
 8010c60:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8010c62:	1a9b      	subs	r3, r3, r2
 8010c64:	894a      	ldrh	r2, [r1, #10]
 8010c66:	f890 10f1 	ldrb.w	r1, [r0, #241]	; 0xf1
 8010c6a:	4413      	add	r3, r2
 8010c6c:	b21b      	sxth	r3, r3
 8010c6e:	8603      	strh	r3, [r0, #48]	; 0x30
 8010c70:	b921      	cbnz	r1, 8010c7c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010c72:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010c74:	4293      	cmp	r3, r2
 8010c76:	dd01      	ble.n	8010c7c <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x26>
 8010c78:	8602      	strh	r2, [r0, #48]	; 0x30
 8010c7a:	e008      	b.n	8010c8e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010c7c:	f890 20f0 	ldrb.w	r2, [r0, #240]	; 0xf0
 8010c80:	3a01      	subs	r2, #1
 8010c82:	4291      	cmp	r1, r2
 8010c84:	d103      	bne.n	8010c8e <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x38>
 8010c86:	8ec2      	ldrh	r2, [r0, #54]	; 0x36
 8010c88:	4252      	negs	r2, r2
 8010c8a:	4293      	cmp	r3, r2
 8010c8c:	dbf4      	blt.n	8010c78 <_ZN8touchgfx14SwipeContainer15handleDragEventERKNS_9DragEventE+0x22>
 8010c8e:	f7ff bfd4 	b.w	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010c92:	4770      	bx	lr

08010c94 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>:
 8010c94:	b538      	push	{r3, r4, r5, lr}
 8010c96:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010c9a:	2d0e      	cmp	r5, #14
 8010c9c:	4604      	mov	r4, r0
 8010c9e:	d813      	bhi.n	8010cc8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x34>
 8010ca0:	8e42      	ldrh	r2, [r0, #50]	; 0x32
 8010ca2:	4252      	negs	r2, r2
 8010ca4:	230e      	movs	r3, #14
 8010ca6:	b212      	sxth	r2, r2
 8010ca8:	2100      	movs	r1, #0
 8010caa:	4628      	mov	r0, r5
 8010cac:	f007 fbc2 	bl	8018434 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010cb0:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010cb2:	4418      	add	r0, r3
 8010cb4:	8620      	strh	r0, [r4, #48]	; 0x30
 8010cb6:	4620      	mov	r0, r4
 8010cb8:	f7ff ffbf 	bl	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010cbc:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010cc0:	3301      	adds	r3, #1
 8010cc2:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010cc6:	bd38      	pop	{r3, r4, r5, pc}
 8010cc8:	2304      	movs	r3, #4
 8010cca:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010cce:	2300      	movs	r3, #0
 8010cd0:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010cd4:	8603      	strh	r3, [r0, #48]	; 0x30
 8010cd6:	e7ef      	b.n	8010cb8 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv+0x24>

08010cd8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>:
 8010cd8:	b538      	push	{r3, r4, r5, lr}
 8010cda:	f890 502d 	ldrb.w	r5, [r0, #45]	; 0x2d
 8010cde:	2d0e      	cmp	r5, #14
 8010ce0:	4604      	mov	r4, r0
 8010ce2:	d812      	bhi.n	8010d0a <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x32>
 8010ce4:	230e      	movs	r3, #14
 8010ce6:	f9b0 2032 	ldrsh.w	r2, [r0, #50]	; 0x32
 8010cea:	2100      	movs	r1, #0
 8010cec:	4628      	mov	r0, r5
 8010cee:	f007 fba1 	bl	8018434 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>
 8010cf2:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010cf4:	1a18      	subs	r0, r3, r0
 8010cf6:	8620      	strh	r0, [r4, #48]	; 0x30
 8010cf8:	4620      	mov	r0, r4
 8010cfa:	f7ff ff9e 	bl	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010cfe:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010d02:	3301      	adds	r3, #1
 8010d04:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010d08:	bd38      	pop	{r3, r4, r5, pc}
 8010d0a:	2304      	movs	r3, #4
 8010d0c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8010d10:	2300      	movs	r3, #0
 8010d12:	f880 302d 	strb.w	r3, [r0, #45]	; 0x2d
 8010d16:	8603      	strh	r3, [r0, #48]	; 0x30
 8010d18:	e7ef      	b.n	8010cfa <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv+0x22>
	...

08010d1c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>:
 8010d1c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8010d20:	4604      	mov	r4, r0
 8010d22:	4626      	mov	r6, r4
 8010d24:	af02      	add	r7, sp, #8
 8010d26:	f7ff fbc9 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 8010d2a:	2500      	movs	r5, #0
 8010d2c:	4b18      	ldr	r3, [pc, #96]	; (8010d90 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x74>)
 8010d2e:	62a5      	str	r5, [r4, #40]	; 0x28
 8010d30:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8010d34:	f846 3b2c 	str.w	r3, [r6], #44
 8010d38:	f827 9d04 	strh.w	r9, [r7, #-4]!
 8010d3c:	4630      	mov	r0, r6
 8010d3e:	4639      	mov	r1, r7
 8010d40:	f7ff ff5a 	bl	8010bf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010d44:	f104 085c 	add.w	r8, r4, #92	; 0x5c
 8010d48:	4b12      	ldr	r3, [pc, #72]	; (8010d94 <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev+0x78>)
 8010d4a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010d4c:	4639      	mov	r1, r7
 8010d4e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8010d52:	f8a4 5058 	strh.w	r5, [r4, #88]	; 0x58
 8010d56:	4640      	mov	r0, r8
 8010d58:	f8ad 9004 	strh.w	r9, [sp, #4]
 8010d5c:	f7ff ff4c 	bl	8010bf8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8010d60:	462a      	mov	r2, r5
 8010d62:	4629      	mov	r1, r5
 8010d64:	4630      	mov	r0, r6
 8010d66:	f8a4 5088 	strh.w	r5, [r4, #136]	; 0x88
 8010d6a:	f7f1 fde9 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8010d6e:	462a      	mov	r2, r5
 8010d70:	4629      	mov	r1, r5
 8010d72:	4640      	mov	r0, r8
 8010d74:	f7f1 fde4 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8010d78:	4631      	mov	r1, r6
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	f7ff fc50 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010d80:	4620      	mov	r0, r4
 8010d82:	4641      	mov	r1, r8
 8010d84:	f7ff fc4c 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010d88:	4620      	mov	r0, r4
 8010d8a:	b003      	add	sp, #12
 8010d8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d90:	0802d100 	.word	0x0802d100
 8010d94:	0802f6ac 	.word	0x0802f6ac

08010d98 <_ZN8touchgfx14SwipeContainerC1Ev>:
 8010d98:	b570      	push	{r4, r5, r6, lr}
 8010d9a:	4604      	mov	r4, r0
 8010d9c:	f7ff fb8e 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 8010da0:	4b1a      	ldr	r3, [pc, #104]	; (8010e0c <_ZN8touchgfx14SwipeContainerC1Ev+0x74>)
 8010da2:	6023      	str	r3, [r4, #0]
 8010da4:	2304      	movs	r3, #4
 8010da6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010daa:	2350      	movs	r3, #80	; 0x50
 8010dac:	2500      	movs	r5, #0
 8010dae:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8010db0:	f104 0638 	add.w	r6, r4, #56	; 0x38
 8010db4:	231e      	movs	r3, #30
 8010db6:	62a5      	str	r5, [r4, #40]	; 0x28
 8010db8:	f884 502d 	strb.w	r5, [r4, #45]	; 0x2d
 8010dbc:	8625      	strh	r5, [r4, #48]	; 0x30
 8010dbe:	8665      	strh	r5, [r4, #50]	; 0x32
 8010dc0:	86a5      	strh	r5, [r4, #52]	; 0x34
 8010dc2:	86e3      	strh	r3, [r4, #54]	; 0x36
 8010dc4:	4630      	mov	r0, r6
 8010dc6:	f7ff fb79 	bl	80104bc <_ZN8touchgfx8DrawableC1Ev>
 8010dca:	4b11      	ldr	r3, [pc, #68]	; (8010e10 <_ZN8touchgfx14SwipeContainerC1Ev+0x78>)
 8010dcc:	6625      	str	r5, [r4, #96]	; 0x60
 8010dce:	63a3      	str	r3, [r4, #56]	; 0x38
 8010dd0:	f8a4 5066 	strh.w	r5, [r4, #102]	; 0x66
 8010dd4:	2302      	movs	r3, #2
 8010dd6:	f104 0568 	add.w	r5, r4, #104	; 0x68
 8010dda:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8010dde:	4628      	mov	r0, r5
 8010de0:	f7ff ff9c 	bl	8010d1c <_ZN8touchgfx14SwipeContainer13PageIndicatorC1Ev>
 8010de4:	f005 fcf4 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8010de8:	4621      	mov	r1, r4
 8010dea:	3004      	adds	r0, #4
 8010dec:	f005 fde6 	bl	80169bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8010df0:	2301      	movs	r3, #1
 8010df2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8010df6:	4631      	mov	r1, r6
 8010df8:	4620      	mov	r0, r4
 8010dfa:	f7ff fc11 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010dfe:	4620      	mov	r0, r4
 8010e00:	4629      	mov	r1, r5
 8010e02:	f7ff fc0d 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8010e06:	4620      	mov	r0, r4
 8010e08:	bd70      	pop	{r4, r5, r6, pc}
 8010e0a:	bf00      	nop
 8010e0c:	0802f1ec 	.word	0x0802f1ec
 8010e10:	0802f2b0 	.word	0x0802f2b0

08010e14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>:
 8010e14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010e16:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 8010e1a:	428b      	cmp	r3, r1
 8010e1c:	4604      	mov	r4, r0
 8010e1e:	460d      	mov	r5, r1
 8010e20:	d915      	bls.n	8010e4e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010e22:	f890 3089 	ldrb.w	r3, [r0, #137]	; 0x89
 8010e26:	428b      	cmp	r3, r1
 8010e28:	d011      	beq.n	8010e4e <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh+0x3a>
 8010e2a:	f884 1089 	strb.w	r1, [r4, #137]	; 0x89
 8010e2e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010e32:	a802      	add	r0, sp, #8
 8010e34:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010e38:	f009 f91a 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e3c:	fb15 f100 	smulbb	r1, r5, r0
 8010e40:	f9b4 2062 	ldrsh.w	r2, [r4, #98]	; 0x62
 8010e44:	b209      	sxth	r1, r1
 8010e46:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8010e4a:	f7f1 fb04 	bl	8002456 <_ZN8touchgfx8Drawable6moveToEss>
 8010e4e:	b003      	add	sp, #12
 8010e50:	bd30      	pop	{r4, r5, pc}

08010e52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>:
 8010e52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010e54:	4604      	mov	r4, r0
 8010e56:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8010e5a:	f884 1088 	strb.w	r1, [r4, #136]	; 0x88
 8010e5e:	f8b0 3052 	ldrh.w	r3, [r0, #82]	; 0x52
 8010e62:	4293      	cmp	r3, r2
 8010e64:	460d      	mov	r5, r1
 8010e66:	d01e      	beq.n	8010ea6 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh+0x54>
 8010e68:	a802      	add	r0, sp, #8
 8010e6a:	f820 3d04 	strh.w	r3, [r0, #-4]!
 8010e6e:	f009 f8ff 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010e72:	6823      	ldr	r3, [r4, #0]
 8010e74:	fb15 f000 	smulbb	r0, r5, r0
 8010e78:	86a0      	strh	r0, [r4, #52]	; 0x34
 8010e7a:	695b      	ldr	r3, [r3, #20]
 8010e7c:	4620      	mov	r0, r4
 8010e7e:	4798      	blx	r3
 8010e80:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 8010e84:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 8010e88:	4620      	mov	r0, r4
 8010e8a:	f7ff fb2f 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8010e8e:	f894 1089 	ldrb.w	r1, [r4, #137]	; 0x89
 8010e92:	42a9      	cmp	r1, r5
 8010e94:	4620      	mov	r0, r4
 8010e96:	bf28      	it	cs
 8010e98:	4629      	movcs	r1, r5
 8010e9a:	f7ff ffbb 	bl	8010e14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010e9e:	6823      	ldr	r3, [r4, #0]
 8010ea0:	4620      	mov	r0, r4
 8010ea2:	695b      	ldr	r3, [r3, #20]
 8010ea4:	4798      	blx	r3
 8010ea6:	b003      	add	sp, #12
 8010ea8:	bd30      	pop	{r4, r5, pc}

08010eaa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>:
 8010eaa:	b538      	push	{r3, r4, r5, lr}
 8010eac:	4604      	mov	r4, r0
 8010eae:	460d      	mov	r5, r1
 8010eb0:	305c      	adds	r0, #92	; 0x5c
 8010eb2:	4611      	mov	r1, r2
 8010eb4:	f002 ff8d 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8010eb8:	4629      	mov	r1, r5
 8010eba:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8010ebe:	f002 fa53 	bl	8013368 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
 8010ec2:	f894 1088 	ldrb.w	r1, [r4, #136]	; 0x88
 8010ec6:	b121      	cbz	r1, 8010ed2 <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_+0x28>
 8010ec8:	4620      	mov	r0, r4
 8010eca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010ece:	f7ff bfc0 	b.w	8010e52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8010ed2:	bd38      	pop	{r3, r4, r5, pc}

08010ed4 <_ZN8touchgfx14SwipeContainer23setPageIndicatorBitmapsERKNS_6BitmapES3_>:
 8010ed4:	3068      	adds	r0, #104	; 0x68
 8010ed6:	f7ff bfe8 	b.w	8010eaa <_ZN8touchgfx14SwipeContainer13PageIndicator10setBitmapsERKNS_6BitmapES4_>

08010eda <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>:
 8010eda:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010ede:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010ee2:	3101      	adds	r1, #1
 8010ee4:	fb91 f3f2 	sdiv	r3, r1, r2
 8010ee8:	fb02 1113 	mls	r1, r2, r3, r1
 8010eec:	b2c9      	uxtb	r1, r1
 8010eee:	f7ff bf91 	b.w	8010e14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010ef2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>:
 8010ef2:	b510      	push	{r4, lr}
 8010ef4:	4604      	mov	r4, r0
 8010ef6:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010efa:	280a      	cmp	r0, #10
 8010efc:	d813      	bhi.n	8010f26 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x34>
 8010efe:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010f00:	8922      	ldrh	r2, [r4, #8]
 8010f02:	441a      	add	r2, r3
 8010f04:	b212      	sxth	r2, r2
 8010f06:	230a      	movs	r3, #10
 8010f08:	2100      	movs	r1, #0
 8010f0a:	f007 fad1 	bl	80184b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010f0e:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010f10:	1a18      	subs	r0, r3, r0
 8010f12:	8620      	strh	r0, [r4, #48]	; 0x30
 8010f14:	4620      	mov	r0, r4
 8010f16:	f7ff fe90 	bl	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010f1a:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010f1e:	3301      	adds	r3, #1
 8010f20:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010f24:	bd10      	pop	{r4, pc}
 8010f26:	2304      	movs	r3, #4
 8010f28:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010f2c:	2300      	movs	r3, #0
 8010f2e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010f32:	8623      	strh	r3, [r4, #48]	; 0x30
 8010f34:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010f38:	f7ff ffcf 	bl	8010eda <_ZN8touchgfx14SwipeContainer13PageIndicator7goRightEv>
 8010f3c:	e7ea      	b.n	8010f14 <_ZN8touchgfx14SwipeContainer11animateLeftEv+0x22>

08010f3e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>:
 8010f3e:	f890 2088 	ldrb.w	r2, [r0, #136]	; 0x88
 8010f42:	f890 1089 	ldrb.w	r1, [r0, #137]	; 0x89
 8010f46:	4411      	add	r1, r2
 8010f48:	3901      	subs	r1, #1
 8010f4a:	fb91 f3f2 	sdiv	r3, r1, r2
 8010f4e:	fb02 1113 	mls	r1, r2, r3, r1
 8010f52:	b2c9      	uxtb	r1, r1
 8010f54:	f7ff bf5e 	b.w	8010e14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>

08010f58 <_ZN8touchgfx14SwipeContainer12animateRightEv>:
 8010f58:	b510      	push	{r4, lr}
 8010f5a:	4604      	mov	r4, r0
 8010f5c:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 8010f60:	280a      	cmp	r0, #10
 8010f62:	d813      	bhi.n	8010f8c <_ZN8touchgfx14SwipeContainer12animateRightEv+0x34>
 8010f64:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010f66:	8922      	ldrh	r2, [r4, #8]
 8010f68:	1ad2      	subs	r2, r2, r3
 8010f6a:	b212      	sxth	r2, r2
 8010f6c:	230a      	movs	r3, #10
 8010f6e:	2100      	movs	r1, #0
 8010f70:	f007 fa9e 	bl	80184b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
 8010f74:	8e63      	ldrh	r3, [r4, #50]	; 0x32
 8010f76:	4418      	add	r0, r3
 8010f78:	8620      	strh	r0, [r4, #48]	; 0x30
 8010f7a:	4620      	mov	r0, r4
 8010f7c:	f7ff fe5d 	bl	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010f80:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 8010f84:	3301      	adds	r3, #1
 8010f86:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010f8a:	bd10      	pop	{r4, pc}
 8010f8c:	2304      	movs	r3, #4
 8010f8e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8010f92:	2300      	movs	r3, #0
 8010f94:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 8010f98:	8623      	strh	r3, [r4, #48]	; 0x30
 8010f9a:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010f9e:	f7ff ffce 	bl	8010f3e <_ZN8touchgfx14SwipeContainer13PageIndicator6goLeftEv>
 8010fa2:	e7ea      	b.n	8010f7a <_ZN8touchgfx14SwipeContainer12animateRightEv+0x22>

08010fa4 <_ZN8touchgfx14SwipeContainer15handleTickEventEv>:
 8010fa4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8010fa8:	b90b      	cbnz	r3, 8010fae <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0xa>
 8010faa:	f7ff be73 	b.w	8010c94 <_ZN8touchgfx14SwipeContainer25animateSwipeCancelledLeftEv>
 8010fae:	2b01      	cmp	r3, #1
 8010fb0:	d101      	bne.n	8010fb6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x12>
 8010fb2:	f7ff be91 	b.w	8010cd8 <_ZN8touchgfx14SwipeContainer26animateSwipeCancelledRightEv>
 8010fb6:	2b02      	cmp	r3, #2
 8010fb8:	d101      	bne.n	8010fbe <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x1a>
 8010fba:	f7ff bf9a 	b.w	8010ef2 <_ZN8touchgfx14SwipeContainer11animateLeftEv>
 8010fbe:	2b03      	cmp	r3, #3
 8010fc0:	d101      	bne.n	8010fc6 <_ZN8touchgfx14SwipeContainer15handleTickEventEv+0x22>
 8010fc2:	f7ff bfc9 	b.w	8010f58 <_ZN8touchgfx14SwipeContainer12animateRightEv>
 8010fc6:	4770      	bx	lr

08010fc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>:
 8010fc8:	b510      	push	{r4, lr}
 8010fca:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8010fce:	428b      	cmp	r3, r1
 8010fd0:	4604      	mov	r4, r0
 8010fd2:	d907      	bls.n	8010fe4 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh+0x1c>
 8010fd4:	3068      	adds	r0, #104	; 0x68
 8010fd6:	f7ff ff1d 	bl	8010e14 <_ZN8touchgfx14SwipeContainer13PageIndicator14setCurrentPageEh>
 8010fda:	4620      	mov	r0, r4
 8010fdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fe0:	f7ff be2b 	b.w	8010c3a <_ZN8touchgfx14SwipeContainer11adjustPagesEv>
 8010fe4:	bd10      	pop	{r4, pc}

08010fe6 <_ZN8touchgfx14SwipeContainer3addERNS_8DrawableE>:
 8010fe6:	b538      	push	{r3, r4, r5, lr}
 8010fe8:	4604      	mov	r4, r0
 8010fea:	3038      	adds	r0, #56	; 0x38
 8010fec:	460d      	mov	r5, r1
 8010fee:	f000 f963 	bl	80112b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>
 8010ff2:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 8010ff6:	3101      	adds	r1, #1
 8010ff8:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8010ffc:	b2c9      	uxtb	r1, r1
 8010ffe:	f7ff ff28 	bl	8010e52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011002:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011006:	4620      	mov	r0, r4
 8011008:	f7ff ffde 	bl	8010fc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801100c:	f9b5 200a 	ldrsh.w	r2, [r5, #10]
 8011010:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8011014:	4620      	mov	r0, r4
 8011016:	f7ff fa69 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801101a:	bd38      	pop	{r3, r4, r5, pc}

0801101c <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE>:
 801101c:	b538      	push	{r3, r4, r5, lr}
 801101e:	f890 30f0 	ldrb.w	r3, [r0, #240]	; 0xf0
 8011022:	4604      	mov	r4, r0
 8011024:	b1e3      	cbz	r3, 8011060 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 8011026:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8011028:	b1d3      	cbz	r3, 8011060 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x44>
 801102a:	428b      	cmp	r3, r1
 801102c:	d125      	bne.n	801107a <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x5e>
 801102e:	4619      	mov	r1, r3
 8011030:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8011034:	f000 f9c0 	bl	80113b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>
 8011038:	f894 10f0 	ldrb.w	r1, [r4, #240]	; 0xf0
 801103c:	3901      	subs	r1, #1
 801103e:	b2c9      	uxtb	r1, r1
 8011040:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011044:	f7ff ff05 	bl	8010e52 <_ZN8touchgfx14SwipeContainer13PageIndicator16setNumberOfPagesEh>
 8011048:	f894 50f0 	ldrb.w	r5, [r4, #240]	; 0xf0
 801104c:	b94d      	cbnz	r5, 8011062 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0x46>
 801104e:	6823      	ldr	r3, [r4, #0]
 8011050:	4620      	mov	r0, r4
 8011052:	695b      	ldr	r3, [r3, #20]
 8011054:	4798      	blx	r3
 8011056:	462a      	mov	r2, r5
 8011058:	4629      	mov	r1, r5
 801105a:	4620      	mov	r0, r4
 801105c:	f7ff fa46 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011060:	bd38      	pop	{r3, r4, r5, pc}
 8011062:	f894 10f1 	ldrb.w	r1, [r4, #241]	; 0xf1
 8011066:	3d01      	subs	r5, #1
 8011068:	42a9      	cmp	r1, r5
 801106a:	bfa8      	it	ge
 801106c:	4629      	movge	r1, r5
 801106e:	4620      	mov	r0, r4
 8011070:	b2c9      	uxtb	r1, r1
 8011072:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011076:	f7ff bfa7 	b.w	8010fc8 <_ZN8touchgfx14SwipeContainer15setSelectedPageEh>
 801107a:	699b      	ldr	r3, [r3, #24]
 801107c:	e7d4      	b.n	8011028 <_ZN8touchgfx14SwipeContainer6removeERNS_8DrawableE+0xc>

0801107e <_ZNK8touchgfx10ListLayout12getDirectionEv>:
 801107e:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011082:	4770      	bx	lr

08011084 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE>:
 8011084:	b538      	push	{r3, r4, r5, lr}
 8011086:	7882      	ldrb	r2, [r0, #2]
 8011088:	6843      	ldr	r3, [r0, #4]
 801108a:	4604      	mov	r4, r0
 801108c:	460d      	mov	r5, r1
 801108e:	b98a      	cbnz	r2, 80110b4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x30>
 8011090:	4299      	cmp	r1, r3
 8011092:	d101      	bne.n	8011098 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 8011094:	2301      	movs	r3, #1
 8011096:	7083      	strb	r3, [r0, #2]
 8011098:	6863      	ldr	r3, [r4, #4]
 801109a:	42ab      	cmp	r3, r5
 801109c:	d009      	beq.n	80110b2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 801109e:	7a23      	ldrb	r3, [r4, #8]
 80110a0:	2b01      	cmp	r3, #1
 80110a2:	d11b      	bne.n	80110dc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x58>
 80110a4:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 80110a8:	f9b4 2000 	ldrsh.w	r2, [r4]
 80110ac:	429a      	cmp	r2, r3
 80110ae:	bfb8      	it	lt
 80110b0:	8023      	strhlt	r3, [r4, #0]
 80110b2:	bd38      	pop	{r3, r4, r5, pc}
 80110b4:	7a02      	ldrb	r2, [r0, #8]
 80110b6:	2a01      	cmp	r2, #1
 80110b8:	d108      	bne.n	80110cc <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x48>
 80110ba:	895b      	ldrh	r3, [r3, #10]
 80110bc:	88c9      	ldrh	r1, [r1, #6]
 80110be:	1ac9      	subs	r1, r1, r3
 80110c0:	682b      	ldr	r3, [r5, #0]
 80110c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80110c4:	b209      	sxth	r1, r1
 80110c6:	4628      	mov	r0, r5
 80110c8:	4798      	blx	r3
 80110ca:	e7e5      	b.n	8011098 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80110cc:	2a02      	cmp	r2, #2
 80110ce:	d1e3      	bne.n	8011098 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x14>
 80110d0:	891b      	ldrh	r3, [r3, #8]
 80110d2:	8889      	ldrh	r1, [r1, #4]
 80110d4:	1ac9      	subs	r1, r1, r3
 80110d6:	682b      	ldr	r3, [r5, #0]
 80110d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80110da:	e7f3      	b.n	80110c4 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x40>
 80110dc:	2b02      	cmp	r3, #2
 80110de:	d1e8      	bne.n	80110b2 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x2e>
 80110e0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80110e4:	e7e0      	b.n	80110a8 <_ZN8touchgfx14AdjustElements12handleRemoveERNS_8DrawableE+0x24>

080110e6 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED1Ev>:
 80110e6:	4770      	bx	lr

080110e8 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED1Ev>:
 80110e8:	4770      	bx	lr

080110ea <_ZN8touchgfx10ListLayoutD1Ev>:
 80110ea:	4770      	bx	lr

080110ec <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7executeES3_>:
 80110ec:	b430      	push	{r4, r5}
 80110ee:	68c5      	ldr	r5, [r0, #12]
 80110f0:	6844      	ldr	r4, [r0, #4]
 80110f2:	106a      	asrs	r2, r5, #1
 80110f4:	4603      	mov	r3, r0
 80110f6:	07ed      	lsls	r5, r5, #31
 80110f8:	eb04 0002 	add.w	r0, r4, r2
 80110fc:	689b      	ldr	r3, [r3, #8]
 80110fe:	bf48      	it	mi
 8011100:	58a2      	ldrmi	r2, [r4, r2]
 8011102:	bc30      	pop	{r4, r5}
 8011104:	bf48      	it	mi
 8011106:	58d3      	ldrmi	r3, [r2, r3]
 8011108:	4718      	bx	r3

0801110a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv>:
 801110a:	6843      	ldr	r3, [r0, #4]
 801110c:	b12b      	cbz	r3, 801111a <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x10>
 801110e:	6883      	ldr	r3, [r0, #8]
 8011110:	b92b      	cbnz	r3, 801111e <_ZNK8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvE7isValidEv+0x14>
 8011112:	68c0      	ldr	r0, [r0, #12]
 8011114:	f000 0001 	and.w	r0, r0, #1
 8011118:	4770      	bx	lr
 801111a:	4618      	mov	r0, r3
 801111c:	4770      	bx	lr
 801111e:	2001      	movs	r0, #1
 8011120:	4770      	bx	lr

08011122 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7executeES3_>:
 8011122:	b430      	push	{r4, r5}
 8011124:	68c5      	ldr	r5, [r0, #12]
 8011126:	6844      	ldr	r4, [r0, #4]
 8011128:	106a      	asrs	r2, r5, #1
 801112a:	4603      	mov	r3, r0
 801112c:	07ed      	lsls	r5, r5, #31
 801112e:	eb04 0002 	add.w	r0, r4, r2
 8011132:	689b      	ldr	r3, [r3, #8]
 8011134:	bf48      	it	mi
 8011136:	58a2      	ldrmi	r2, [r4, r2]
 8011138:	bc30      	pop	{r4, r5}
 801113a:	bf48      	it	mi
 801113c:	58d3      	ldrmi	r3, [r2, r3]
 801113e:	4718      	bx	r3

08011140 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv>:
 8011140:	6843      	ldr	r3, [r0, #4]
 8011142:	b12b      	cbz	r3, 8011150 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x10>
 8011144:	6883      	ldr	r3, [r0, #8]
 8011146:	b92b      	cbnz	r3, 8011154 <_ZNK8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvE7isValidEv+0x14>
 8011148:	68c0      	ldr	r0, [r0, #12]
 801114a:	f000 0001 	and.w	r0, r0, #1
 801114e:	4770      	bx	lr
 8011150:	4618      	mov	r0, r3
 8011152:	4770      	bx	lr
 8011154:	2001      	movs	r0, #1
 8011156:	4770      	bx	lr

08011158 <_ZN8touchgfx10ListLayoutD0Ev>:
 8011158:	b510      	push	{r4, lr}
 801115a:	2130      	movs	r1, #48	; 0x30
 801115c:	4604      	mov	r4, r0
 801115e:	f019 fbec 	bl	802a93a <_ZdlPvj>
 8011162:	4620      	mov	r0, r4
 8011164:	bd10      	pop	{r4, pc}

08011166 <_ZN8touchgfx8CallbackINS_10ListLayoutERNS_8DrawableEvvED0Ev>:
 8011166:	b510      	push	{r4, lr}
 8011168:	2110      	movs	r1, #16
 801116a:	4604      	mov	r4, r0
 801116c:	f019 fbe5 	bl	802a93a <_ZdlPvj>
 8011170:	4620      	mov	r0, r4
 8011172:	bd10      	pop	{r4, pc}

08011174 <_ZN8touchgfx8CallbackINS_14AdjustElementsERNS_8DrawableEvvED0Ev>:
 8011174:	b510      	push	{r4, lr}
 8011176:	2110      	movs	r1, #16
 8011178:	4604      	mov	r4, r0
 801117a:	f019 fbde 	bl	802a93a <_ZdlPvj>
 801117e:	4620      	mov	r0, r4
 8011180:	bd10      	pop	{r4, pc}

08011182 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE>:
 8011182:	4603      	mov	r3, r0
 8011184:	4608      	mov	r0, r1
 8011186:	789a      	ldrb	r2, [r3, #2]
 8011188:	b992      	cbnz	r2, 80111b0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x2e>
 801118a:	685a      	ldr	r2, [r3, #4]
 801118c:	428a      	cmp	r2, r1
 801118e:	d102      	bne.n	8011196 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x14>
 8011190:	2201      	movs	r2, #1
 8011192:	709a      	strb	r2, [r3, #2]
 8011194:	4770      	bx	lr
 8011196:	7a1a      	ldrb	r2, [r3, #8]
 8011198:	2a01      	cmp	r2, #1
 801119a:	d104      	bne.n	80111a6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x24>
 801119c:	88ca      	ldrh	r2, [r1, #6]
 801119e:	8949      	ldrh	r1, [r1, #10]
 80111a0:	440a      	add	r2, r1
 80111a2:	801a      	strh	r2, [r3, #0]
 80111a4:	4770      	bx	lr
 80111a6:	2a02      	cmp	r2, #2
 80111a8:	d116      	bne.n	80111d8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80111aa:	888a      	ldrh	r2, [r1, #4]
 80111ac:	8909      	ldrh	r1, [r1, #8]
 80111ae:	e7f7      	b.n	80111a0 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x1e>
 80111b0:	7a1a      	ldrb	r2, [r3, #8]
 80111b2:	2a01      	cmp	r2, #1
 80111b4:	d107      	bne.n	80111c6 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x44>
 80111b6:	685b      	ldr	r3, [r3, #4]
 80111b8:	8959      	ldrh	r1, [r3, #10]
 80111ba:	88c3      	ldrh	r3, [r0, #6]
 80111bc:	4419      	add	r1, r3
 80111be:	6803      	ldr	r3, [r0, #0]
 80111c0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80111c2:	b209      	sxth	r1, r1
 80111c4:	4718      	bx	r3
 80111c6:	2a02      	cmp	r2, #2
 80111c8:	d106      	bne.n	80111d8 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x56>
 80111ca:	685b      	ldr	r3, [r3, #4]
 80111cc:	8919      	ldrh	r1, [r3, #8]
 80111ce:	8883      	ldrh	r3, [r0, #4]
 80111d0:	4419      	add	r1, r3
 80111d2:	6803      	ldr	r3, [r0, #0]
 80111d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80111d6:	e7f4      	b.n	80111c2 <_ZN8touchgfx14AdjustElements12handleInsertERNS_8DrawableE+0x40>
 80111d8:	4770      	bx	lr

080111da <_ZN8touchgfx10ListLayout9removeAllEv>:
 80111da:	2200      	movs	r2, #0
 80111dc:	b510      	push	{r4, lr}
 80111de:	4611      	mov	r1, r2
 80111e0:	4604      	mov	r4, r0
 80111e2:	85c2      	strh	r2, [r0, #46]	; 0x2e
 80111e4:	f7ff f982 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80111e8:	4620      	mov	r0, r4
 80111ea:	f7ff fa26 	bl	801063a <_ZN8touchgfx9Container9removeAllEv>
 80111ee:	6960      	ldr	r0, [r4, #20]
 80111f0:	b120      	cbz	r0, 80111fc <_ZN8touchgfx10ListLayout9removeAllEv+0x22>
 80111f2:	6803      	ldr	r3, [r0, #0]
 80111f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80111fa:	4718      	bx	r3
 80111fc:	bd10      	pop	{r4, pc}
	...

08011200 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE>:
 8011200:	b530      	push	{r4, r5, lr}
 8011202:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011206:	428b      	cmp	r3, r1
 8011208:	b085      	sub	sp, #20
 801120a:	4604      	mov	r4, r0
 801120c:	d017      	beq.n	801123e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 801120e:	2500      	movs	r5, #0
 8011210:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 8011214:	85c5      	strh	r5, [r0, #46]	; 0x2e
 8011216:	462a      	mov	r2, r5
 8011218:	4629      	mov	r1, r5
 801121a:	f7ff f967 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801121e:	4b09      	ldr	r3, [pc, #36]	; (8011244 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x44>)
 8011220:	e9cd 3400 	strd	r3, r4, [sp]
 8011224:	4b08      	ldr	r3, [pc, #32]	; (8011248 <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x48>)
 8011226:	e9cd 3502 	strd	r3, r5, [sp, #8]
 801122a:	6823      	ldr	r3, [r4, #0]
 801122c:	4620      	mov	r0, r4
 801122e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011230:	4669      	mov	r1, sp
 8011232:	4798      	blx	r3
 8011234:	6960      	ldr	r0, [r4, #20]
 8011236:	b110      	cbz	r0, 801123e <_ZN8touchgfx10ListLayout12setDirectionENS_9DirectionE+0x3e>
 8011238:	6803      	ldr	r3, [r0, #0]
 801123a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801123c:	4798      	blx	r3
 801123e:	b005      	add	sp, #20
 8011240:	bd30      	pop	{r4, r5, pc}
 8011242:	bf00      	nop
 8011244:	0802f280 	.word	0x0802f280
 8011248:	080112b1 	.word	0x080112b1

0801124c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>:
 801124c:	b538      	push	{r3, r4, r5, lr}
 801124e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011252:	2b01      	cmp	r3, #1
 8011254:	460d      	mov	r5, r1
 8011256:	4604      	mov	r4, r0
 8011258:	4611      	mov	r1, r2
 801125a:	d002      	beq.n	8011262 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x16>
 801125c:	2b02      	cmp	r3, #2
 801125e:	d015      	beq.n	801128c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x40>
 8011260:	bd38      	pop	{r3, r4, r5, pc}
 8011262:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
 8011266:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 801126a:	429a      	cmp	r2, r3
 801126c:	bfb8      	it	lt
 801126e:	8103      	strhlt	r3, [r0, #8]
 8011270:	896a      	ldrh	r2, [r5, #10]
 8011272:	8943      	ldrh	r3, [r0, #10]
 8011274:	4413      	add	r3, r2
 8011276:	8143      	strh	r3, [r0, #10]
 8011278:	460a      	mov	r2, r1
 801127a:	4628      	mov	r0, r5
 801127c:	2100      	movs	r1, #0
 801127e:	f7f1 fb5f 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8011282:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011284:	896a      	ldrh	r2, [r5, #10]
 8011286:	4413      	add	r3, r2
 8011288:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801128a:	e7e9      	b.n	8011260 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x14>
 801128c:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011290:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011294:	429a      	cmp	r2, r3
 8011296:	bfb8      	it	lt
 8011298:	8143      	strhlt	r3, [r0, #10]
 801129a:	892a      	ldrh	r2, [r5, #8]
 801129c:	8903      	ldrh	r3, [r0, #8]
 801129e:	4413      	add	r3, r2
 80112a0:	8103      	strh	r3, [r0, #8]
 80112a2:	2200      	movs	r2, #0
 80112a4:	4628      	mov	r0, r5
 80112a6:	f7f1 fb4b 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80112aa:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80112ac:	892a      	ldrh	r2, [r5, #8]
 80112ae:	e7ea      	b.n	8011286 <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs+0x3a>

080112b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>:
 80112b0:	f9b0 202e 	ldrsh.w	r2, [r0, #46]	; 0x2e
 80112b4:	f7ff bfca 	b.w	801124c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>

080112b8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE>:
 80112b8:	b570      	push	{r4, r5, r6, lr}
 80112ba:	4604      	mov	r4, r0
 80112bc:	460d      	mov	r5, r1
 80112be:	f7ff fff7 	bl	80112b0 <_ZN8touchgfx10ListLayout18internalAddElementERNS_8DrawableE>
 80112c2:	4620      	mov	r0, r4
 80112c4:	4629      	mov	r1, r5
 80112c6:	f7ff f9ab 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80112ca:	6960      	ldr	r0, [r4, #20]
 80112cc:	b120      	cbz	r0, 80112d8 <_ZN8touchgfx10ListLayout3addERNS_8DrawableE+0x20>
 80112ce:	6803      	ldr	r3, [r0, #0]
 80112d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80112d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80112d6:	4718      	bx	r3
 80112d8:	bd70      	pop	{r4, r5, r6, pc}
	...

080112dc <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_>:
 80112dc:	b530      	push	{r4, r5, lr}
 80112de:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80112e0:	b089      	sub	sp, #36	; 0x24
 80112e2:	4604      	mov	r4, r0
 80112e4:	4615      	mov	r5, r2
 80112e6:	b92b      	cbnz	r3, 80112f4 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x18>
 80112e8:	6803      	ldr	r3, [r0, #0]
 80112ea:	4611      	mov	r1, r2
 80112ec:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80112ee:	4798      	blx	r3
 80112f0:	b009      	add	sp, #36	; 0x24
 80112f2:	bd30      	pop	{r4, r5, pc}
 80112f4:	f7ff f9ec 	bl	80106d0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>
 80112f8:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 80112fc:	f88d 200c 	strb.w	r2, [sp, #12]
 8011300:	4a0f      	ldr	r2, [pc, #60]	; (8011340 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x64>)
 8011302:	9204      	str	r2, [sp, #16]
 8011304:	aa01      	add	r2, sp, #4
 8011306:	9205      	str	r2, [sp, #20]
 8011308:	4a0e      	ldr	r2, [pc, #56]	; (8011344 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x68>)
 801130a:	9502      	str	r5, [sp, #8]
 801130c:	2300      	movs	r3, #0
 801130e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8011312:	f8ad 3004 	strh.w	r3, [sp, #4]
 8011316:	f88d 3006 	strb.w	r3, [sp, #6]
 801131a:	6823      	ldr	r3, [r4, #0]
 801131c:	a904      	add	r1, sp, #16
 801131e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011320:	4620      	mov	r0, r4
 8011322:	4798      	blx	r3
 8011324:	4620      	mov	r0, r4
 8011326:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801132a:	4629      	mov	r1, r5
 801132c:	f7ff ff8e 	bl	801124c <_ZN8touchgfx10ListLayout20internalAddElementAtERNS_8DrawableEs>
 8011330:	6960      	ldr	r0, [r4, #20]
 8011332:	2800      	cmp	r0, #0
 8011334:	d0dc      	beq.n	80112f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 8011336:	6803      	ldr	r3, [r0, #0]
 8011338:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801133a:	4798      	blx	r3
 801133c:	e7d8      	b.n	80112f0 <_ZN8touchgfx10ListLayout6insertEPNS_8DrawableERS1_+0x14>
 801133e:	bf00      	nop
 8011340:	0802f298 	.word	0x0802f298
 8011344:	08011183 	.word	0x08011183

08011348 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>:
 8011348:	b538      	push	{r3, r4, r5, lr}
 801134a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801134e:	2b01      	cmp	r3, #1
 8011350:	4604      	mov	r4, r0
 8011352:	460d      	mov	r5, r1
 8011354:	d002      	beq.n	801135c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x14>
 8011356:	2b02      	cmp	r3, #2
 8011358:	d018      	beq.n	801138c <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x44>
 801135a:	bd38      	pop	{r3, r4, r5, pc}
 801135c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011360:	4293      	cmp	r3, r2
 8011362:	bfc8      	it	gt
 8011364:	8102      	strhgt	r2, [r0, #8]
 8011366:	894a      	ldrh	r2, [r1, #10]
 8011368:	8943      	ldrh	r3, [r0, #10]
 801136a:	1a9b      	subs	r3, r3, r2
 801136c:	8143      	strh	r3, [r0, #10]
 801136e:	680b      	ldr	r3, [r1, #0]
 8011370:	4628      	mov	r0, r5
 8011372:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011374:	2100      	movs	r1, #0
 8011376:	4798      	blx	r3
 8011378:	682b      	ldr	r3, [r5, #0]
 801137a:	2100      	movs	r1, #0
 801137c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801137e:	4628      	mov	r0, r5
 8011380:	4798      	blx	r3
 8011382:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8011384:	896a      	ldrh	r2, [r5, #10]
 8011386:	1a9b      	subs	r3, r3, r2
 8011388:	85e3      	strh	r3, [r4, #46]	; 0x2e
 801138a:	e7e6      	b.n	801135a <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x12>
 801138c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011390:	4293      	cmp	r3, r2
 8011392:	bfc8      	it	gt
 8011394:	8142      	strhgt	r2, [r0, #10]
 8011396:	890a      	ldrh	r2, [r1, #8]
 8011398:	8903      	ldrh	r3, [r0, #8]
 801139a:	1a9b      	subs	r3, r3, r2
 801139c:	8103      	strh	r3, [r0, #8]
 801139e:	680b      	ldr	r3, [r1, #0]
 80113a0:	4628      	mov	r0, r5
 80113a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80113a4:	2100      	movs	r1, #0
 80113a6:	4798      	blx	r3
 80113a8:	682b      	ldr	r3, [r5, #0]
 80113aa:	2100      	movs	r1, #0
 80113ac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80113ae:	4628      	mov	r0, r5
 80113b0:	4798      	blx	r3
 80113b2:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 80113b4:	892a      	ldrh	r2, [r5, #8]
 80113b6:	e7e6      	b.n	8011386 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs+0x3e>

080113b8 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE>:
 80113b8:	b530      	push	{r4, r5, lr}
 80113ba:	b089      	sub	sp, #36	; 0x24
 80113bc:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 80113c0:	f88d 200c 	strb.w	r2, [sp, #12]
 80113c4:	4a13      	ldr	r2, [pc, #76]	; (8011414 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x5c>)
 80113c6:	9204      	str	r2, [sp, #16]
 80113c8:	aa01      	add	r2, sp, #4
 80113ca:	9205      	str	r2, [sp, #20]
 80113cc:	4a12      	ldr	r2, [pc, #72]	; (8011418 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x60>)
 80113ce:	9102      	str	r1, [sp, #8]
 80113d0:	2300      	movs	r3, #0
 80113d2:	f8ad 3004 	strh.w	r3, [sp, #4]
 80113d6:	f88d 3006 	strb.w	r3, [sp, #6]
 80113da:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80113de:	6803      	ldr	r3, [r0, #0]
 80113e0:	460d      	mov	r5, r1
 80113e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80113e4:	a904      	add	r1, sp, #16
 80113e6:	4604      	mov	r4, r0
 80113e8:	4798      	blx	r3
 80113ea:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80113ee:	b14b      	cbz	r3, 8011404 <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x4c>
 80113f0:	4629      	mov	r1, r5
 80113f2:	4620      	mov	r0, r4
 80113f4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80113f8:	f7ff ffa6 	bl	8011348 <_ZN8touchgfx10ListLayout21internalRemoveElementERNS_8DrawableEs>
 80113fc:	4629      	mov	r1, r5
 80113fe:	4620      	mov	r0, r4
 8011400:	f7ff f94f 	bl	80106a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011404:	6960      	ldr	r0, [r4, #20]
 8011406:	b110      	cbz	r0, 801140e <_ZN8touchgfx10ListLayout6removeERNS_8DrawableE+0x56>
 8011408:	6803      	ldr	r3, [r0, #0]
 801140a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801140c:	4798      	blx	r3
 801140e:	b009      	add	sp, #36	; 0x24
 8011410:	bd30      	pop	{r4, r5, pc}
 8011412:	bf00      	nop
 8011414:	0802f298 	.word	0x0802f298
 8011418:	08011085 	.word	0x08011085

0801141c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801141c:	b513      	push	{r0, r1, r4, lr}
 801141e:	6803      	ldr	r3, [r0, #0]
 8011420:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 8011424:	2300      	movs	r3, #0
 8011426:	e9cd 3300 	strd	r3, r3, [sp]
 801142a:	466b      	mov	r3, sp
 801142c:	47a0      	blx	r4
 801142e:	b002      	add	sp, #8
 8011430:	bd10      	pop	{r4, pc}

08011432 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8011432:	2301      	movs	r3, #1
 8011434:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011438:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 801143c:	4770      	bx	lr

0801143e <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801143e:	2301      	movs	r3, #1
 8011440:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8011444:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 8011448:	4770      	bx	lr

0801144a <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801144a:	6843      	ldr	r3, [r0, #4]
 801144c:	2201      	movs	r2, #1
 801144e:	725a      	strb	r2, [r3, #9]
 8011450:	6840      	ldr	r0, [r0, #4]
 8011452:	6803      	ldr	r3, [r0, #0]
 8011454:	691b      	ldr	r3, [r3, #16]
 8011456:	4718      	bx	r3

08011458 <_ZN8touchgfx3HAL8flushDMAEv>:
 8011458:	6840      	ldr	r0, [r0, #4]
 801145a:	6803      	ldr	r3, [r0, #0]
 801145c:	689b      	ldr	r3, [r3, #8]
 801145e:	4718      	bx	r3

08011460 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011460:	b530      	push	{r4, r5, lr}
 8011462:	b08b      	sub	sp, #44	; 0x2c
 8011464:	6804      	ldr	r4, [r0, #0]
 8011466:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801146a:	9509      	str	r5, [sp, #36]	; 0x24
 801146c:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8011470:	9508      	str	r5, [sp, #32]
 8011472:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8011476:	9507      	str	r5, [sp, #28]
 8011478:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 801147c:	9506      	str	r5, [sp, #24]
 801147e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8011482:	9505      	str	r5, [sp, #20]
 8011484:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8011488:	9504      	str	r5, [sp, #16]
 801148a:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 801148e:	9503      	str	r5, [sp, #12]
 8011490:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8011494:	9502      	str	r5, [sp, #8]
 8011496:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 801149a:	e9cd 3500 	strd	r3, r5, [sp]
 801149e:	4613      	mov	r3, r2
 80114a0:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 80114a2:	2200      	movs	r2, #0
 80114a4:	47a0      	blx	r4
 80114a6:	b00b      	add	sp, #44	; 0x2c
 80114a8:	bd30      	pop	{r4, r5, pc}
	...

080114ac <_ZN8touchgfx3HAL10beginFrameEv>:
 80114ac:	4b04      	ldr	r3, [pc, #16]	; (80114c0 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80114ae:	781b      	ldrb	r3, [r3, #0]
 80114b0:	b123      	cbz	r3, 80114bc <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80114b2:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 80114b6:	f080 0001 	eor.w	r0, r0, #1
 80114ba:	4770      	bx	lr
 80114bc:	2001      	movs	r0, #1
 80114be:	4770      	bx	lr
 80114c0:	200137ea 	.word	0x200137ea

080114c4 <_ZN8touchgfx3HAL8endFrameEv>:
 80114c4:	b510      	push	{r4, lr}
 80114c6:	4604      	mov	r4, r0
 80114c8:	6840      	ldr	r0, [r0, #4]
 80114ca:	6803      	ldr	r3, [r0, #0]
 80114cc:	689b      	ldr	r3, [r3, #8]
 80114ce:	4798      	blx	r3
 80114d0:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 80114d4:	b113      	cbz	r3, 80114dc <_ZN8touchgfx3HAL8endFrameEv+0x18>
 80114d6:	2301      	movs	r3, #1
 80114d8:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80114dc:	bd10      	pop	{r4, pc}

080114de <_ZN8touchgfx3HAL10initializeEv>:
 80114de:	b510      	push	{r4, lr}
 80114e0:	4604      	mov	r4, r0
 80114e2:	f7f0 fd95 	bl	8002010 <_ZN8touchgfx10OSWrappers10initializeEv>
 80114e6:	f7f0 fca1 	bl	8001e2c <_ZN8touchgfx4GPIO4initEv>
 80114ea:	6860      	ldr	r0, [r4, #4]
 80114ec:	6803      	ldr	r3, [r0, #0]
 80114ee:	68db      	ldr	r3, [r3, #12]
 80114f0:	4798      	blx	r3
 80114f2:	68e0      	ldr	r0, [r4, #12]
 80114f4:	6803      	ldr	r3, [r0, #0]
 80114f6:	689b      	ldr	r3, [r3, #8]
 80114f8:	4798      	blx	r3
 80114fa:	6823      	ldr	r3, [r4, #0]
 80114fc:	4620      	mov	r0, r4
 80114fe:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011500:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011504:	4718      	bx	r3
	...

08011508 <_ZN8touchgfx3HAL4tickEv>:
 8011508:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801150a:	6803      	ldr	r3, [r0, #0]
 801150c:	4d5b      	ldr	r5, [pc, #364]	; (801167c <_ZN8touchgfx3HAL4tickEv+0x174>)
 801150e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8011512:	4604      	mov	r4, r0
 8011514:	4798      	blx	r3
 8011516:	2800      	cmp	r0, #0
 8011518:	f000 8095 	beq.w	8011646 <_ZN8touchgfx3HAL4tickEv+0x13e>
 801151c:	2001      	movs	r0, #1
 801151e:	f7f0 fc37 	bl	8001d90 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011522:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 8011526:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801152a:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 801152e:	2600      	movs	r6, #0
 8011530:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 8011534:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8011538:	b133      	cbz	r3, 8011548 <_ZN8touchgfx3HAL4tickEv+0x40>
 801153a:	6823      	ldr	r3, [r4, #0]
 801153c:	4620      	mov	r0, r4
 801153e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8011542:	4798      	blx	r3
 8011544:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 8011548:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 801154c:	6862      	ldr	r2, [r4, #4]
 801154e:	f083 0301 	eor.w	r3, r3, #1
 8011552:	7253      	strb	r3, [r2, #9]
 8011554:	2601      	movs	r6, #1
 8011556:	702e      	strb	r6, [r5, #0]
 8011558:	f005 f93a 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 801155c:	6803      	ldr	r3, [r0, #0]
 801155e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011560:	4798      	blx	r3
 8011562:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011566:	b90b      	cbnz	r3, 801156c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011568:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 801156c:	f005 f930 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8011570:	6803      	ldr	r3, [r0, #0]
 8011572:	695b      	ldr	r3, [r3, #20]
 8011574:	4798      	blx	r3
 8011576:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 8011578:	6803      	ldr	r3, [r0, #0]
 801157a:	691b      	ldr	r3, [r3, #16]
 801157c:	4798      	blx	r3
 801157e:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 8011582:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 8011586:	3b01      	subs	r3, #1
 8011588:	b2db      	uxtb	r3, r3
 801158a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 801158e:	b10a      	cbz	r2, 8011594 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011590:	2b00      	cmp	r3, #0
 8011592:	d1eb      	bne.n	801156c <_ZN8touchgfx3HAL4tickEv+0x64>
 8011594:	4a3a      	ldr	r2, [pc, #232]	; (8011680 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011596:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 801159a:	7813      	ldrb	r3, [r2, #0]
 801159c:	3301      	adds	r3, #1
 801159e:	b25b      	sxtb	r3, r3
 80115a0:	4299      	cmp	r1, r3
 80115a2:	7013      	strb	r3, [r2, #0]
 80115a4:	dc10      	bgt.n	80115c8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80115a6:	68e0      	ldr	r0, [r4, #12]
 80115a8:	2300      	movs	r3, #0
 80115aa:	7013      	strb	r3, [r2, #0]
 80115ac:	6803      	ldr	r3, [r0, #0]
 80115ae:	aa03      	add	r2, sp, #12
 80115b0:	68db      	ldr	r3, [r3, #12]
 80115b2:	a902      	add	r1, sp, #8
 80115b4:	4798      	blx	r3
 80115b6:	6823      	ldr	r3, [r4, #0]
 80115b8:	2800      	cmp	r0, #0
 80115ba:	d050      	beq.n	801165e <_ZN8touchgfx3HAL4tickEv+0x156>
 80115bc:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80115c0:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 80115c4:	4620      	mov	r0, r4
 80115c6:	4798      	blx	r3
 80115c8:	6960      	ldr	r0, [r4, #20]
 80115ca:	2300      	movs	r3, #0
 80115cc:	f88d 3007 	strb.w	r3, [sp, #7]
 80115d0:	b158      	cbz	r0, 80115ea <_ZN8touchgfx3HAL4tickEv+0xe2>
 80115d2:	6803      	ldr	r3, [r0, #0]
 80115d4:	f10d 0107 	add.w	r1, sp, #7
 80115d8:	68db      	ldr	r3, [r3, #12]
 80115da:	4798      	blx	r3
 80115dc:	b128      	cbz	r0, 80115ea <_ZN8touchgfx3HAL4tickEv+0xe2>
 80115de:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 80115e0:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80115e4:	6803      	ldr	r3, [r0, #0]
 80115e6:	68db      	ldr	r3, [r3, #12]
 80115e8:	4798      	blx	r3
 80115ea:	f104 001c 	add.w	r0, r4, #28
 80115ee:	f016 f8c3 	bl	8027778 <_ZN8touchgfx8Gestures4tickEv>
 80115f2:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 80115f6:	b30b      	cbz	r3, 801163c <_ZN8touchgfx3HAL4tickEv+0x134>
 80115f8:	6920      	ldr	r0, [r4, #16]
 80115fa:	6803      	ldr	r3, [r0, #0]
 80115fc:	691b      	ldr	r3, [r3, #16]
 80115fe:	4798      	blx	r3
 8011600:	6f63      	ldr	r3, [r4, #116]	; 0x74
 8011602:	4606      	mov	r6, r0
 8011604:	b903      	cbnz	r3, 8011608 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011606:	6760      	str	r0, [r4, #116]	; 0x74
 8011608:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801160a:	4a1e      	ldr	r2, [pc, #120]	; (8011684 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 801160c:	1af3      	subs	r3, r6, r3
 801160e:	4293      	cmp	r3, r2
 8011610:	d914      	bls.n	801163c <_ZN8touchgfx3HAL4tickEv+0x134>
 8011612:	6920      	ldr	r0, [r4, #16]
 8011614:	6803      	ldr	r3, [r0, #0]
 8011616:	699b      	ldr	r3, [r3, #24]
 8011618:	4798      	blx	r3
 801161a:	6f63      	ldr	r3, [r4, #116]	; 0x74
 801161c:	2264      	movs	r2, #100	; 0x64
 801161e:	1af3      	subs	r3, r6, r3
 8011620:	fbb3 f3f2 	udiv	r3, r3, r2
 8011624:	fbb0 f0f3 	udiv	r0, r0, r3
 8011628:	2800      	cmp	r0, #0
 801162a:	dc1d      	bgt.n	8011668 <_ZN8touchgfx3HAL4tickEv+0x160>
 801162c:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 8011630:	6920      	ldr	r0, [r4, #16]
 8011632:	6803      	ldr	r3, [r0, #0]
 8011634:	2100      	movs	r1, #0
 8011636:	69db      	ldr	r3, [r3, #28]
 8011638:	4798      	blx	r3
 801163a:	6766      	str	r6, [r4, #116]	; 0x74
 801163c:	f005 f8c8 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8011640:	6803      	ldr	r3, [r0, #0]
 8011642:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011644:	4798      	blx	r3
 8011646:	6823      	ldr	r3, [r4, #0]
 8011648:	4620      	mov	r0, r4
 801164a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 801164e:	4798      	blx	r3
 8011650:	2001      	movs	r0, #1
 8011652:	f7f0 fbb5 	bl	8001dc0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011656:	2300      	movs	r3, #0
 8011658:	702b      	strb	r3, [r5, #0]
 801165a:	b004      	add	sp, #16
 801165c:	bd70      	pop	{r4, r5, r6, pc}
 801165e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8011662:	4620      	mov	r0, r4
 8011664:	4798      	blx	r3
 8011666:	e7af      	b.n	80115c8 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011668:	2863      	cmp	r0, #99	; 0x63
 801166a:	bfcb      	itete	gt
 801166c:	2300      	movgt	r3, #0
 801166e:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8011672:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 8011676:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 801167a:	e7d9      	b.n	8011630 <_ZN8touchgfx3HAL4tickEv+0x128>
 801167c:	200137f0 	.word	0x200137f0
 8011680:	200137f1 	.word	0x200137f1
 8011684:	05f5e100 	.word	0x05f5e100

08011688 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011688:	b510      	push	{r4, lr}
 801168a:	4604      	mov	r4, r0
 801168c:	f7f0 fcf0 	bl	8002070 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011690:	6863      	ldr	r3, [r4, #4]
 8011692:	2200      	movs	r2, #0
 8011694:	729a      	strb	r2, [r3, #10]
 8011696:	bd10      	pop	{r4, pc}

08011698 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011698:	65c1      	str	r1, [r0, #92]	; 0x5c
 801169a:	301c      	adds	r0, #28
 801169c:	f016 b86a 	b.w	8027774 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080116a0 <_ZN8touchgfx3HAL5touchEll>:
 80116a0:	b530      	push	{r4, r5, lr}
 80116a2:	b087      	sub	sp, #28
 80116a4:	4604      	mov	r4, r0
 80116a6:	a804      	add	r0, sp, #16
 80116a8:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80116ac:	f004 fe5c 	bl	8016368 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80116b0:	9b04      	ldr	r3, [sp, #16]
 80116b2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80116b6:	a906      	add	r1, sp, #24
 80116b8:	9b05      	ldr	r3, [sp, #20]
 80116ba:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 80116be:	a803      	add	r0, sp, #12
 80116c0:	f004 fea4 	bl	801640c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 80116c4:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 80116c8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80116cc:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 80116d0:	f104 001c 	add.w	r0, r4, #28
 80116d4:	b189      	cbz	r1, 80116fa <_ZN8touchgfx3HAL5touchEll+0x5a>
 80116d6:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 80116da:	9300      	str	r3, [sp, #0]
 80116dc:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 80116e0:	4613      	mov	r3, r2
 80116e2:	462a      	mov	r2, r5
 80116e4:	f016 f856 	bl	8027794 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80116e8:	b128      	cbz	r0, 80116f6 <_ZN8touchgfx3HAL5touchEll+0x56>
 80116ea:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80116ee:	6623      	str	r3, [r4, #96]	; 0x60
 80116f0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80116f4:	6663      	str	r3, [r4, #100]	; 0x64
 80116f6:	b007      	add	sp, #28
 80116f8:	bd30      	pop	{r4, r5, pc}
 80116fa:	f016 f88b 	bl	8027814 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80116fe:	2301      	movs	r3, #1
 8011700:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8011704:	e7f1      	b.n	80116ea <_ZN8touchgfx3HAL5touchEll+0x4a>

08011706 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011706:	b510      	push	{r4, lr}
 8011708:	2b00      	cmp	r3, #0
 801170a:	d046      	beq.n	801179a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801170c:	ea81 0002 	eor.w	r0, r1, r2
 8011710:	07c4      	lsls	r4, r0, #31
 8011712:	d508      	bpl.n	8011726 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011714:	440b      	add	r3, r1
 8011716:	3a01      	subs	r2, #1
 8011718:	428b      	cmp	r3, r1
 801171a:	d93e      	bls.n	801179a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 801171c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011720:	f801 0b01 	strb.w	r0, [r1], #1
 8011724:	e7f8      	b.n	8011718 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011726:	07d0      	lsls	r0, r2, #31
 8011728:	bf42      	ittt	mi
 801172a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 801172e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011732:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011736:	2b01      	cmp	r3, #1
 8011738:	d911      	bls.n	801175e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801173a:	ea81 0402 	eor.w	r4, r1, r2
 801173e:	07a4      	lsls	r4, r4, #30
 8011740:	4610      	mov	r0, r2
 8011742:	d022      	beq.n	801178a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011744:	f023 0401 	bic.w	r4, r3, #1
 8011748:	440c      	add	r4, r1
 801174a:	428c      	cmp	r4, r1
 801174c:	4602      	mov	r2, r0
 801174e:	d904      	bls.n	801175a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011750:	8812      	ldrh	r2, [r2, #0]
 8011752:	f821 2b02 	strh.w	r2, [r1], #2
 8011756:	3002      	adds	r0, #2
 8011758:	e7f7      	b.n	801174a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 801175a:	f003 0301 	and.w	r3, r3, #1
 801175e:	f023 0003 	bic.w	r0, r3, #3
 8011762:	4408      	add	r0, r1
 8011764:	4288      	cmp	r0, r1
 8011766:	4614      	mov	r4, r2
 8011768:	d904      	bls.n	8011774 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801176a:	6824      	ldr	r4, [r4, #0]
 801176c:	f841 4b04 	str.w	r4, [r1], #4
 8011770:	3204      	adds	r2, #4
 8011772:	e7f7      	b.n	8011764 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011774:	f003 0303 	and.w	r3, r3, #3
 8011778:	440b      	add	r3, r1
 801177a:	3a01      	subs	r2, #1
 801177c:	428b      	cmp	r3, r1
 801177e:	d90c      	bls.n	801179a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011780:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011784:	f801 0b01 	strb.w	r0, [r1], #1
 8011788:	e7f8      	b.n	801177c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801178a:	0790      	lsls	r0, r2, #30
 801178c:	d0e7      	beq.n	801175e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801178e:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011792:	f821 0b02 	strh.w	r0, [r1], #2
 8011796:	3b02      	subs	r3, #2
 8011798:	e7e1      	b.n	801175e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801179a:	2001      	movs	r0, #1
 801179c:	bd10      	pop	{r4, pc}

0801179e <_ZN8touchgfx3HAL7noTouchEv>:
 801179e:	b510      	push	{r4, lr}
 80117a0:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 80117a4:	4604      	mov	r4, r0
 80117a6:	b153      	cbz	r3, 80117be <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80117a8:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 80117ac:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 80117b0:	2101      	movs	r1, #1
 80117b2:	301c      	adds	r0, #28
 80117b4:	f016 f82e 	bl	8027814 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80117b8:	2300      	movs	r3, #0
 80117ba:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 80117be:	bd10      	pop	{r4, pc}

080117c0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 80117c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80117c4:	b085      	sub	sp, #20
 80117c6:	ad04      	add	r5, sp, #16
 80117c8:	4604      	mov	r4, r0
 80117ca:	2000      	movs	r0, #0
 80117cc:	f845 0d04 	str.w	r0, [r5, #-4]!
 80117d0:	69a0      	ldr	r0, [r4, #24]
 80117d2:	6806      	ldr	r6, [r0, #0]
 80117d4:	9501      	str	r5, [sp, #4]
 80117d6:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 80117da:	9500      	str	r5, [sp, #0]
 80117dc:	6835      	ldr	r5, [r6, #0]
 80117de:	4699      	mov	r9, r3
 80117e0:	460f      	mov	r7, r1
 80117e2:	4690      	mov	r8, r2
 80117e4:	47a8      	blx	r5
 80117e6:	4d10      	ldr	r5, [pc, #64]	; (8011828 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80117e8:	4606      	mov	r6, r0
 80117ea:	f8a5 9000 	strh.w	r9, [r5]
 80117ee:	f7f3 f82d 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 80117f2:	6803      	ldr	r3, [r0, #0]
 80117f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80117f6:	4798      	blx	r3
 80117f8:	b128      	cbz	r0, 8011806 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80117fa:	2801      	cmp	r0, #1
 80117fc:	d00b      	beq.n	8011816 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80117fe:	4630      	mov	r0, r6
 8011800:	b005      	add	sp, #20
 8011802:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011806:	882b      	ldrh	r3, [r5, #0]
 8011808:	fb08 7203 	mla	r2, r8, r3, r7
 801180c:	9b03      	ldr	r3, [sp, #12]
 801180e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011812:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011814:	e7f3      	b.n	80117fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011816:	882a      	ldrh	r2, [r5, #0]
 8011818:	9b03      	ldr	r3, [sp, #12]
 801181a:	fb08 7202 	mla	r2, r8, r2, r7
 801181e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011822:	1a9a      	subs	r2, r3, r2
 8011824:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011826:	e7ea      	b.n	80117fe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011828:	200137e6 	.word	0x200137e6

0801182c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 801182c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801182e:	b08b      	sub	sp, #44	; 0x2c
 8011830:	4617      	mov	r7, r2
 8011832:	4604      	mov	r4, r0
 8011834:	460e      	mov	r6, r1
 8011836:	461d      	mov	r5, r3
 8011838:	f7f3 f808 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 801183c:	6803      	ldr	r3, [r0, #0]
 801183e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011840:	4798      	blx	r3
 8011842:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8011846:	9007      	str	r0, [sp, #28]
 8011848:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801184c:	4b0d      	ldr	r3, [pc, #52]	; (8011884 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801184e:	6822      	ldr	r2, [r4, #0]
 8011850:	881b      	ldrh	r3, [r3, #0]
 8011852:	9306      	str	r3, [sp, #24]
 8011854:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011858:	9305      	str	r3, [sp, #20]
 801185a:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 801185e:	9304      	str	r3, [sp, #16]
 8011860:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011864:	9303      	str	r3, [sp, #12]
 8011866:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801186a:	9302      	str	r3, [sp, #8]
 801186c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011870:	e9cd 5300 	strd	r5, r3, [sp]
 8011874:	4631      	mov	r1, r6
 8011876:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8011878:	463b      	mov	r3, r7
 801187a:	2200      	movs	r2, #0
 801187c:	4620      	mov	r0, r4
 801187e:	47a8      	blx	r5
 8011880:	b00b      	add	sp, #44	; 0x2c
 8011882:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011884:	200137e6 	.word	0x200137e6

08011888 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011888:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801188c:	4698      	mov	r8, r3
 801188e:	6803      	ldr	r3, [r0, #0]
 8011890:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8011892:	4b15      	ldr	r3, [pc, #84]	; (80118e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011894:	b08b      	sub	sp, #44	; 0x2c
 8011896:	4617      	mov	r7, r2
 8011898:	f8b3 9000 	ldrh.w	r9, [r3]
 801189c:	460e      	mov	r6, r1
 801189e:	4604      	mov	r4, r0
 80118a0:	f7f2 ffd4 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 80118a4:	6803      	ldr	r3, [r0, #0]
 80118a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80118a8:	4798      	blx	r3
 80118aa:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80118ae:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80118b2:	2302      	movs	r3, #2
 80118b4:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80118b8:	2301      	movs	r3, #1
 80118ba:	9305      	str	r3, [sp, #20]
 80118bc:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80118c0:	9304      	str	r3, [sp, #16]
 80118c2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80118c6:	9303      	str	r3, [sp, #12]
 80118c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80118cc:	9302      	str	r3, [sp, #8]
 80118ce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80118d2:	2200      	movs	r2, #0
 80118d4:	e9cd 8300 	strd	r8, r3, [sp]
 80118d8:	4631      	mov	r1, r6
 80118da:	463b      	mov	r3, r7
 80118dc:	4620      	mov	r0, r4
 80118de:	47a8      	blx	r5
 80118e0:	b00b      	add	sp, #44	; 0x2c
 80118e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80118e6:	bf00      	nop
 80118e8:	200137e6 	.word	0x200137e6

080118ec <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80118ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80118f0:	4698      	mov	r8, r3
 80118f2:	6803      	ldr	r3, [r0, #0]
 80118f4:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80118f6:	4b11      	ldr	r3, [pc, #68]	; (801193c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 80118f8:	b087      	sub	sp, #28
 80118fa:	f8b3 9000 	ldrh.w	r9, [r3]
 80118fe:	460e      	mov	r6, r1
 8011900:	4617      	mov	r7, r2
 8011902:	4604      	mov	r4, r0
 8011904:	f7f2 ffa2 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011908:	6803      	ldr	r3, [r0, #0]
 801190a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801190c:	4798      	blx	r3
 801190e:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8011912:	f8cd 900c 	str.w	r9, [sp, #12]
 8011916:	e9cd 0304 	strd	r0, r3, [sp, #16]
 801191a:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 801191e:	9302      	str	r3, [sp, #8]
 8011920:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8011924:	9301      	str	r3, [sp, #4]
 8011926:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801192a:	9300      	str	r3, [sp, #0]
 801192c:	463a      	mov	r2, r7
 801192e:	4643      	mov	r3, r8
 8011930:	4631      	mov	r1, r6
 8011932:	4620      	mov	r0, r4
 8011934:	47a8      	blx	r5
 8011936:	b007      	add	sp, #28
 8011938:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801193c:	200137e6 	.word	0x200137e6

08011940 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011944:	4604      	mov	r4, r0
 8011946:	b08f      	sub	sp, #60	; 0x3c
 8011948:	4610      	mov	r0, r2
 801194a:	460d      	mov	r5, r1
 801194c:	4691      	mov	r9, r2
 801194e:	461e      	mov	r6, r3
 8011950:	f008 fafa 	bl	8019f48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011954:	2800      	cmp	r0, #0
 8011956:	f000 809d 	beq.w	8011a94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801195a:	6823      	ldr	r3, [r4, #0]
 801195c:	f8df b198 	ldr.w	fp, [pc, #408]	; 8011af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011960:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011962:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011afc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011966:	4f61      	ldr	r7, [pc, #388]	; (8011aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011968:	4620      	mov	r0, r4
 801196a:	4798      	blx	r3
 801196c:	6823      	ldr	r3, [r4, #0]
 801196e:	4620      	mov	r0, r4
 8011970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011972:	4798      	blx	r3
 8011974:	f8bb 3000 	ldrh.w	r3, [fp]
 8011978:	9301      	str	r3, [sp, #4]
 801197a:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 801197e:	f8ba 3000 	ldrh.w	r3, [sl]
 8011982:	9302      	str	r3, [sp, #8]
 8011984:	883b      	ldrh	r3, [r7, #0]
 8011986:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801198a:	9303      	str	r3, [sp, #12]
 801198c:	4b58      	ldr	r3, [pc, #352]	; (8011af0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 801198e:	9305      	str	r3, [sp, #20]
 8011990:	881a      	ldrh	r2, [r3, #0]
 8011992:	9204      	str	r2, [sp, #16]
 8011994:	4640      	mov	r0, r8
 8011996:	f008 fb6b 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801199a:	8038      	strh	r0, [r7, #0]
 801199c:	4640      	mov	r0, r8
 801199e:	f008 fb9b 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80119a2:	9b05      	ldr	r3, [sp, #20]
 80119a4:	b280      	uxth	r0, r0
 80119a6:	8018      	strh	r0, [r3, #0]
 80119a8:	4b52      	ldr	r3, [pc, #328]	; (8011af4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80119aa:	781b      	ldrb	r3, [r3, #0]
 80119ac:	2b00      	cmp	r3, #0
 80119ae:	d174      	bne.n	8011a9a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80119b0:	883b      	ldrh	r3, [r7, #0]
 80119b2:	f8ab 3000 	strh.w	r3, [fp]
 80119b6:	f8aa 0000 	strh.w	r0, [sl]
 80119ba:	4648      	mov	r0, r9
 80119bc:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80119c0:	f008 fac2 	bl	8019f48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80119c4:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80119c8:	2200      	movs	r2, #0
 80119ca:	4611      	mov	r1, r2
 80119cc:	4628      	mov	r0, r5
 80119ce:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80119d2:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80119d6:	f7f0 ffb3 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80119da:	2301      	movs	r3, #1
 80119dc:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80119e0:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80119e4:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80119e8:	2b00      	cmp	r3, #0
 80119ea:	dd5c      	ble.n	8011aa6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80119ec:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80119f0:	2b00      	cmp	r3, #0
 80119f2:	dd58      	ble.n	8011aa6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80119f4:	462a      	mov	r2, r5
 80119f6:	ab0a      	add	r3, sp, #40	; 0x28
 80119f8:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80119fc:	6851      	ldr	r1, [r2, #4]
 80119fe:	c303      	stmia	r3!, {r0, r1}
 8011a00:	4631      	mov	r1, r6
 8011a02:	a80a      	add	r0, sp, #40	; 0x28
 8011a04:	f7fe ff92 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8011a08:	4b38      	ldr	r3, [pc, #224]	; (8011aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011a0a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011a0e:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011a12:	2100      	movs	r1, #0
 8011a14:	aa0a      	add	r2, sp, #40	; 0x28
 8011a16:	4b36      	ldr	r3, [pc, #216]	; (8011af0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011a18:	910c      	str	r1, [sp, #48]	; 0x30
 8011a1a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011a1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a22:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011a26:	ab08      	add	r3, sp, #32
 8011a28:	e883 0003 	stmia.w	r3, {r0, r1}
 8011a2c:	4618      	mov	r0, r3
 8011a2e:	a90c      	add	r1, sp, #48	; 0x30
 8011a30:	f7fe ff7c 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8011a34:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8011a36:	2b00      	cmp	r3, #0
 8011a38:	d13c      	bne.n	8011ab4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011a3a:	2000      	movs	r0, #0
 8011a3c:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8011a40:	2600      	movs	r6, #0
 8011a42:	682a      	ldr	r2, [r5, #0]
 8011a44:	696b      	ldr	r3, [r5, #20]
 8011a46:	616e      	str	r6, [r5, #20]
 8011a48:	9305      	str	r3, [sp, #20]
 8011a4a:	6892      	ldr	r2, [r2, #8]
 8011a4c:	a908      	add	r1, sp, #32
 8011a4e:	4628      	mov	r0, r5
 8011a50:	4790      	blx	r2
 8011a52:	9b05      	ldr	r3, [sp, #20]
 8011a54:	616b      	str	r3, [r5, #20]
 8011a56:	4652      	mov	r2, sl
 8011a58:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8011a5c:	4649      	mov	r1, r9
 8011a5e:	4628      	mov	r0, r5
 8011a60:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8011a64:	f7f0 ff6c 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8011a68:	4b23      	ldr	r3, [pc, #140]	; (8011af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011a6a:	9a01      	ldr	r2, [sp, #4]
 8011a6c:	801a      	strh	r2, [r3, #0]
 8011a6e:	4b23      	ldr	r3, [pc, #140]	; (8011afc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011a70:	9a02      	ldr	r2, [sp, #8]
 8011a72:	801a      	strh	r2, [r3, #0]
 8011a74:	4b1d      	ldr	r3, [pc, #116]	; (8011aec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011a76:	9a03      	ldr	r2, [sp, #12]
 8011a78:	801a      	strh	r2, [r3, #0]
 8011a7a:	4b1d      	ldr	r3, [pc, #116]	; (8011af0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011a7c:	9a04      	ldr	r2, [sp, #16]
 8011a7e:	801a      	strh	r2, [r3, #0]
 8011a80:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8011a84:	6823      	ldr	r3, [r4, #0]
 8011a86:	4620      	mov	r0, r4
 8011a88:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011a8a:	4798      	blx	r3
 8011a8c:	6823      	ldr	r3, [r4, #0]
 8011a8e:	4620      	mov	r0, r4
 8011a90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a92:	4798      	blx	r3
 8011a94:	b00f      	add	sp, #60	; 0x3c
 8011a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a9a:	883b      	ldrh	r3, [r7, #0]
 8011a9c:	f8ab 0000 	strh.w	r0, [fp]
 8011aa0:	f8aa 3000 	strh.w	r3, [sl]
 8011aa4:	e789      	b.n	80119ba <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011aa6:	462a      	mov	r2, r5
 8011aa8:	ab0a      	add	r3, sp, #40	; 0x28
 8011aaa:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011aae:	6851      	ldr	r1, [r2, #4]
 8011ab0:	c303      	stmia	r3!, {r0, r1}
 8011ab2:	e7a9      	b.n	8011a08 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011ab4:	a807      	add	r0, sp, #28
 8011ab6:	f008 fc4b 	bl	801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011aba:	4606      	mov	r6, r0
 8011abc:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8011abe:	6803      	ldr	r3, [r0, #0]
 8011ac0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ac2:	4798      	blx	r3
 8011ac4:	4286      	cmp	r6, r0
 8011ac6:	d1b8      	bne.n	8011a3a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011ac8:	f7f2 fec0 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011acc:	6803      	ldr	r3, [r0, #0]
 8011ace:	4606      	mov	r6, r0
 8011ad0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011ad2:	9305      	str	r3, [sp, #20]
 8011ad4:	a807      	add	r0, sp, #28
 8011ad6:	f008 fc3b 	bl	801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011ada:	9b05      	ldr	r3, [sp, #20]
 8011adc:	4601      	mov	r1, r0
 8011ade:	4630      	mov	r0, r6
 8011ae0:	4798      	blx	r3
 8011ae2:	f080 0001 	eor.w	r0, r0, #1
 8011ae6:	b2c0      	uxtb	r0, r0
 8011ae8:	e7a8      	b.n	8011a3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011aea:	bf00      	nop
 8011aec:	200137e0 	.word	0x200137e0
 8011af0:	200137e2 	.word	0x200137e2
 8011af4:	200137e4 	.word	0x200137e4
 8011af8:	200137e6 	.word	0x200137e6
 8011afc:	200137e8 	.word	0x200137e8

08011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011b00:	b510      	push	{r4, lr}
 8011b02:	4b07      	ldr	r3, [pc, #28]	; (8011b20 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011b04:	781b      	ldrb	r3, [r3, #0]
 8011b06:	4604      	mov	r4, r0
 8011b08:	b13b      	cbz	r3, 8011b1a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011b0a:	6803      	ldr	r3, [r0, #0]
 8011b0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011b0e:	4798      	blx	r3
 8011b10:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8011b12:	4283      	cmp	r3, r0
 8011b14:	d101      	bne.n	8011b1a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011b16:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8011b18:	bd10      	pop	{r4, pc}
 8011b1a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011b1c:	e7fc      	b.n	8011b18 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011b1e:	bf00      	nop
 8011b20:	200137ea 	.word	0x200137ea

08011b24 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011b24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b28:	b08a      	sub	sp, #40	; 0x28
 8011b2a:	461d      	mov	r5, r3
 8011b2c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8011b30:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011b34:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011b38:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011b3c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011b40:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011b44:	2400      	movs	r4, #0
 8011b46:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011b4a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8011b4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011b52:	4690      	mov	r8, r2
 8011b54:	4607      	mov	r7, r0
 8011b56:	9404      	str	r4, [sp, #16]
 8011b58:	f88d 4020 	strb.w	r4, [sp, #32]
 8011b5c:	f7ff ffd0 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011b60:	fb06 8505 	mla	r5, r6, r5, r8
 8011b64:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011b68:	6878      	ldr	r0, [r7, #4]
 8011b6a:	9505      	str	r5, [sp, #20]
 8011b6c:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011b70:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011b74:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8011b78:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011b7c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011b80:	6803      	ldr	r3, [r0, #0]
 8011b82:	a901      	add	r1, sp, #4
 8011b84:	685b      	ldr	r3, [r3, #4]
 8011b86:	4798      	blx	r3
 8011b88:	b00a      	add	sp, #40	; 0x28
 8011b8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011b8e <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011b8e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011b92:	b08b      	sub	sp, #44	; 0x2c
 8011b94:	2400      	movs	r4, #0
 8011b96:	461d      	mov	r5, r3
 8011b98:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8011b9c:	4688      	mov	r8, r1
 8011b9e:	4691      	mov	r9, r2
 8011ba0:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8011ba4:	9404      	str	r4, [sp, #16]
 8011ba6:	4607      	mov	r7, r0
 8011ba8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011bac:	f7ff ffa8 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011bb0:	fb06 9505 	mla	r5, r6, r5, r9
 8011bb4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011bb8:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011bbc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011bc0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011bc4:	6878      	ldr	r0, [r7, #4]
 8011bc6:	9505      	str	r5, [sp, #20]
 8011bc8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011bcc:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011bd0:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011bd4:	f8cd 8010 	str.w	r8, [sp, #16]
 8011bd8:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011bdc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011be0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8011be4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8011be8:	6803      	ldr	r3, [r0, #0]
 8011bea:	a901      	add	r1, sp, #4
 8011bec:	685b      	ldr	r3, [r3, #4]
 8011bee:	4798      	blx	r3
 8011bf0:	b00b      	add	sp, #44	; 0x2c
 8011bf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08011bf8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8011bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bfc:	b08a      	sub	sp, #40	; 0x28
 8011bfe:	4698      	mov	r8, r3
 8011c00:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8011c04:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8011c08:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8011c0c:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8011c10:	2300      	movs	r3, #0
 8011c12:	2d0b      	cmp	r5, #11
 8011c14:	4606      	mov	r6, r0
 8011c16:	9304      	str	r3, [sp, #16]
 8011c18:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8011c1c:	d138      	bne.n	8011c90 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011c1e:	2380      	movs	r3, #128	; 0x80
 8011c20:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011c24:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011c28:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011c2c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011c30:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011c34:	f88d 0020 	strb.w	r0, [sp, #32]
 8011c38:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8011c3c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011c40:	4630      	mov	r0, r6
 8011c42:	9203      	str	r2, [sp, #12]
 8011c44:	f7ff ff5c 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011c48:	2c0b      	cmp	r4, #11
 8011c4a:	bf98      	it	ls
 8011c4c:	4b1b      	ldrls	r3, [pc, #108]	; (8011cbc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011c4e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8011c52:	bf98      	it	ls
 8011c54:	5d19      	ldrbls	r1, [r3, r4]
 8011c56:	f8ad 701e 	strh.w	r7, [sp, #30]
 8011c5a:	bf88      	it	hi
 8011c5c:	2100      	movhi	r1, #0
 8011c5e:	fb02 8307 	mla	r3, r2, r7, r8
 8011c62:	10c9      	asrs	r1, r1, #3
 8011c64:	fb01 0003 	mla	r0, r1, r3, r0
 8011c68:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8011c6c:	9005      	str	r0, [sp, #20]
 8011c6e:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011c72:	6870      	ldr	r0, [r6, #4]
 8011c74:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8011c78:	2300      	movs	r3, #0
 8011c7a:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8011c7e:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011c82:	6803      	ldr	r3, [r0, #0]
 8011c84:	a901      	add	r1, sp, #4
 8011c86:	685b      	ldr	r3, [r3, #4]
 8011c88:	4798      	blx	r3
 8011c8a:	b00a      	add	sp, #40	; 0x28
 8011c8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011c90:	2d02      	cmp	r5, #2
 8011c92:	d109      	bne.n	8011ca8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011c94:	28ff      	cmp	r0, #255	; 0xff
 8011c96:	d105      	bne.n	8011ca4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8011c98:	f1bc 0f00 	cmp.w	ip, #0
 8011c9c:	bf14      	ite	ne
 8011c9e:	2340      	movne	r3, #64	; 0x40
 8011ca0:	2320      	moveq	r3, #32
 8011ca2:	e7bd      	b.n	8011c20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011ca4:	2340      	movs	r3, #64	; 0x40
 8011ca6:	e7bb      	b.n	8011c20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011ca8:	28ff      	cmp	r0, #255	; 0xff
 8011caa:	d105      	bne.n	8011cb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011cac:	f1bc 0f00 	cmp.w	ip, #0
 8011cb0:	bf14      	ite	ne
 8011cb2:	2304      	movne	r3, #4
 8011cb4:	2301      	moveq	r3, #1
 8011cb6:	e7b3      	b.n	8011c20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011cb8:	2304      	movs	r3, #4
 8011cba:	e7b1      	b.n	8011c20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011cbc:	0802f340 	.word	0x0802f340

08011cc0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011cc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cc4:	b08b      	sub	sp, #44	; 0x2c
 8011cc6:	461d      	mov	r5, r3
 8011cc8:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011ccc:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8011cd0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8011cd4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011cd8:	bf14      	ite	ne
 8011cda:	2308      	movne	r3, #8
 8011cdc:	2302      	moveq	r3, #2
 8011cde:	2400      	movs	r4, #0
 8011ce0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011ce4:	4688      	mov	r8, r1
 8011ce6:	4693      	mov	fp, r2
 8011ce8:	9404      	str	r4, [sp, #16]
 8011cea:	4607      	mov	r7, r0
 8011cec:	f7ff ff08 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011cf0:	2e0b      	cmp	r6, #11
 8011cf2:	bf98      	it	ls
 8011cf4:	4b15      	ldrls	r3, [pc, #84]	; (8011d4c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8011cf6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011cfa:	bf98      	it	ls
 8011cfc:	5d9c      	ldrbls	r4, [r3, r6]
 8011cfe:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8011d02:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d06:	fb05 b50a 	mla	r5, r5, sl, fp
 8011d0a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011d0e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011d12:	10e4      	asrs	r4, r4, #3
 8011d14:	fb04 0405 	mla	r4, r4, r5, r0
 8011d18:	2300      	movs	r3, #0
 8011d1a:	6878      	ldr	r0, [r7, #4]
 8011d1c:	9405      	str	r4, [sp, #20]
 8011d1e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011d22:	f8ad a01e 	strh.w	sl, [sp, #30]
 8011d26:	f8cd 8010 	str.w	r8, [sp, #16]
 8011d2a:	f88d 9020 	strb.w	r9, [sp, #32]
 8011d2e:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8011d32:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8011d36:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8011d3a:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8011d3e:	6803      	ldr	r3, [r0, #0]
 8011d40:	a901      	add	r1, sp, #4
 8011d42:	685b      	ldr	r3, [r3, #4]
 8011d44:	4798      	blx	r3
 8011d46:	b00b      	add	sp, #44	; 0x2c
 8011d48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d4c:	0802f340 	.word	0x0802f340

08011d50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011d54:	461e      	mov	r6, r3
 8011d56:	4b0a      	ldr	r3, [pc, #40]	; (8011d80 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8011d58:	460f      	mov	r7, r1
 8011d5a:	881d      	ldrh	r5, [r3, #0]
 8011d5c:	4690      	mov	r8, r2
 8011d5e:	f7f2 fd75 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011d62:	6803      	ldr	r3, [r0, #0]
 8011d64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011d66:	4798      	blx	r3
 8011d68:	280b      	cmp	r0, #11
 8011d6a:	bf9a      	itte	ls
 8011d6c:	4b05      	ldrls	r3, [pc, #20]	; (8011d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011d6e:	5c1c      	ldrbls	r4, [r3, r0]
 8011d70:	2400      	movhi	r4, #0
 8011d72:	fb08 7005 	mla	r0, r8, r5, r7
 8011d76:	10e4      	asrs	r4, r4, #3
 8011d78:	fb04 6000 	mla	r0, r4, r0, r6
 8011d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d80:	200137e6 	.word	0x200137e6
 8011d84:	0802f340 	.word	0x0802f340

08011d88 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8011d88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d8a:	b08b      	sub	sp, #44	; 0x2c
 8011d8c:	461f      	mov	r7, r3
 8011d8e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8011d92:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011d96:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8011d9a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d9e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8011da2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011da6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8011daa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011dae:	2500      	movs	r5, #0
 8011db0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8011db4:	f88d 3020 	strb.w	r3, [sp, #32]
 8011db8:	4604      	mov	r4, r0
 8011dba:	4616      	mov	r6, r2
 8011dbc:	9504      	str	r5, [sp, #16]
 8011dbe:	f7ff fe9f 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011dc2:	463a      	mov	r2, r7
 8011dc4:	4631      	mov	r1, r6
 8011dc6:	4603      	mov	r3, r0
 8011dc8:	4620      	mov	r0, r4
 8011dca:	f7ff ffc1 	bl	8011d50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011dce:	4b0e      	ldr	r3, [pc, #56]	; (8011e08 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011dd0:	9005      	str	r0, [sp, #20]
 8011dd2:	881b      	ldrh	r3, [r3, #0]
 8011dd4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011dd8:	f7f2 fd38 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011ddc:	6803      	ldr	r3, [r0, #0]
 8011dde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011de0:	4798      	blx	r3
 8011de2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8011de4:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8011de8:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011dec:	9304      	str	r3, [sp, #16]
 8011dee:	6860      	ldr	r0, [r4, #4]
 8011df0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8011df4:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8011df8:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8011dfc:	6803      	ldr	r3, [r0, #0]
 8011dfe:	a901      	add	r1, sp, #4
 8011e00:	685b      	ldr	r3, [r3, #4]
 8011e02:	4798      	blx	r3
 8011e04:	b00b      	add	sp, #44	; 0x2c
 8011e06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e08:	200137e6 	.word	0x200137e6

08011e0c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8011e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e0e:	b08d      	sub	sp, #52	; 0x34
 8011e10:	466b      	mov	r3, sp
 8011e12:	e883 0006 	stmia.w	r3, {r1, r2}
 8011e16:	2300      	movs	r3, #0
 8011e18:	9306      	str	r3, [sp, #24]
 8011e1a:	6803      	ldr	r3, [r0, #0]
 8011e1c:	f8bd 6000 	ldrh.w	r6, [sp]
 8011e20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011e22:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8011e26:	2501      	movs	r5, #1
 8011e28:	9503      	str	r5, [sp, #12]
 8011e2a:	4604      	mov	r4, r0
 8011e2c:	4798      	blx	r3
 8011e2e:	463a      	mov	r2, r7
 8011e30:	4631      	mov	r1, r6
 8011e32:	4603      	mov	r3, r0
 8011e34:	4620      	mov	r0, r4
 8011e36:	f7ff ff8b 	bl	8011d50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011e3a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011e3c:	9307      	str	r3, [sp, #28]
 8011e3e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011e42:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011e46:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011e4a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011e4e:	4b0f      	ldr	r3, [pc, #60]	; (8011e8c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011e50:	9004      	str	r0, [sp, #16]
 8011e52:	881b      	ldrh	r3, [r3, #0]
 8011e54:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011e58:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011e5c:	f7f2 fcf6 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011e60:	6803      	ldr	r3, [r0, #0]
 8011e62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e64:	4798      	blx	r3
 8011e66:	23ff      	movs	r3, #255	; 0xff
 8011e68:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011e6c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011e70:	6860      	ldr	r0, [r4, #4]
 8011e72:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011e76:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011e7a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011e7e:	6803      	ldr	r3, [r0, #0]
 8011e80:	a903      	add	r1, sp, #12
 8011e82:	685b      	ldr	r3, [r3, #4]
 8011e84:	4798      	blx	r3
 8011e86:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011e88:	b00d      	add	sp, #52	; 0x34
 8011e8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011e8c:	200137e6 	.word	0x200137e6

08011e90 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011e90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e94:	b08c      	sub	sp, #48	; 0x30
 8011e96:	461e      	mov	r6, r3
 8011e98:	466d      	mov	r5, sp
 8011e9a:	2300      	movs	r3, #0
 8011e9c:	e885 0006 	stmia.w	r5, {r1, r2}
 8011ea0:	9306      	str	r3, [sp, #24]
 8011ea2:	6803      	ldr	r3, [r0, #0]
 8011ea4:	f8bd 7000 	ldrh.w	r7, [sp]
 8011ea8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011eaa:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011eae:	2501      	movs	r5, #1
 8011eb0:	9503      	str	r5, [sp, #12]
 8011eb2:	4604      	mov	r4, r0
 8011eb4:	4798      	blx	r3
 8011eb6:	4642      	mov	r2, r8
 8011eb8:	4639      	mov	r1, r7
 8011eba:	4603      	mov	r3, r0
 8011ebc:	4620      	mov	r0, r4
 8011ebe:	f7ff ff47 	bl	8011d50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011ec2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011ec6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011eca:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011ece:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011ed2:	4b11      	ldr	r3, [pc, #68]	; (8011f18 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011ed4:	9004      	str	r0, [sp, #16]
 8011ed6:	881b      	ldrh	r3, [r3, #0]
 8011ed8:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8011edc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011ede:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8011ee2:	9607      	str	r6, [sp, #28]
 8011ee4:	f7f2 fcb2 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8011ee8:	6803      	ldr	r3, [r0, #0]
 8011eea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011eec:	4798      	blx	r3
 8011eee:	23ff      	movs	r3, #255	; 0xff
 8011ef0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8011ef4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8011ef8:	6860      	ldr	r0, [r4, #4]
 8011efa:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8011efe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8011f02:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8011f06:	6803      	ldr	r3, [r0, #0]
 8011f08:	a903      	add	r1, sp, #12
 8011f0a:	685b      	ldr	r3, [r3, #4]
 8011f0c:	4798      	blx	r3
 8011f0e:	4630      	mov	r0, r6
 8011f10:	b00c      	add	sp, #48	; 0x30
 8011f12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011f16:	bf00      	nop
 8011f18:	200137e6 	.word	0x200137e6

08011f1c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011f1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f1e:	b085      	sub	sp, #20
 8011f20:	ac02      	add	r4, sp, #8
 8011f22:	e884 0006 	stmia.w	r4, {r1, r2}
 8011f26:	4605      	mov	r5, r0
 8011f28:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011f2c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011f30:	f7ff fde6 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011f34:	463a      	mov	r2, r7
 8011f36:	4603      	mov	r3, r0
 8011f38:	4631      	mov	r1, r6
 8011f3a:	4628      	mov	r0, r5
 8011f3c:	f7ff ff08 	bl	8011d50 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011f40:	4a05      	ldr	r2, [pc, #20]	; (8011f58 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011f42:	682b      	ldr	r3, [r5, #0]
 8011f44:	8812      	ldrh	r2, [r2, #0]
 8011f46:	9200      	str	r2, [sp, #0]
 8011f48:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8011f4a:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011f4e:	4603      	mov	r3, r0
 8011f50:	4628      	mov	r0, r5
 8011f52:	47b0      	blx	r6
 8011f54:	b005      	add	sp, #20
 8011f56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f58:	200137e6 	.word	0x200137e6

08011f5c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011f5c:	b570      	push	{r4, r5, r6, lr}
 8011f5e:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 8011f62:	4604      	mov	r4, r0
 8011f64:	b19b      	cbz	r3, 8011f8e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8011f66:	2002      	movs	r0, #2
 8011f68:	f7ef ff42 	bl	8001df0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011f6c:	2300      	movs	r3, #0
 8011f6e:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 8011f72:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 8011f76:	6823      	ldr	r3, [r4, #0]
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8011f7e:	f7ff fdbf 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011f82:	462b      	mov	r3, r5
 8011f84:	4601      	mov	r1, r0
 8011f86:	4620      	mov	r0, r4
 8011f88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f8c:	4718      	bx	r3
 8011f8e:	bd70      	pop	{r4, r5, r6, pc}

08011f90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011f90:	b538      	push	{r3, r4, r5, lr}
 8011f92:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 8011f96:	428b      	cmp	r3, r1
 8011f98:	4604      	mov	r4, r0
 8011f9a:	460d      	mov	r5, r1
 8011f9c:	d006      	beq.n	8011fac <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011f9e:	6803      	ldr	r3, [r0, #0]
 8011fa0:	b929      	cbnz	r1, 8011fae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011fa2:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011fa6:	4798      	blx	r3
 8011fa8:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8011fac:	bd38      	pop	{r3, r4, r5, pc}
 8011fae:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8011fb2:	e7f8      	b.n	8011fa6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011fb4 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011fb4:	b510      	push	{r4, lr}
 8011fb6:	4b0d      	ldr	r3, [pc, #52]	; (8011fec <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8011fb8:	781b      	ldrb	r3, [r3, #0]
 8011fba:	4604      	mov	r4, r0
 8011fbc:	b95b      	cbnz	r3, 8011fd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011fbe:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8011fc2:	2b02      	cmp	r3, #2
 8011fc4:	d007      	beq.n	8011fd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011fc6:	6840      	ldr	r0, [r0, #4]
 8011fc8:	f000 f92c 	bl	8012224 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011fcc:	b118      	cbz	r0, 8011fd6 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011fce:	6862      	ldr	r2, [r4, #4]
 8011fd0:	7a53      	ldrb	r3, [r2, #9]
 8011fd2:	2b00      	cmp	r3, #0
 8011fd4:	d0fc      	beq.n	8011fd0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 8011fd6:	f7f0 f843 	bl	8002060 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011fda:	4620      	mov	r0, r4
 8011fdc:	2100      	movs	r1, #0
 8011fde:	f7ff ffd7 	bl	8011f90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011fe2:	4620      	mov	r0, r4
 8011fe4:	f7ff fd8c 	bl	8011b00 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011fe8:	bd10      	pop	{r4, pc}
 8011fea:	bf00      	nop
 8011fec:	200137ea 	.word	0x200137ea

08011ff0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8011ff0:	b570      	push	{r4, r5, r6, lr}
 8011ff2:	4604      	mov	r4, r0
 8011ff4:	6803      	ldr	r3, [r0, #0]
 8011ff6:	b919      	cbnz	r1, 8012000 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8011ff8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011ffa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011ffe:	4718      	bx	r3
 8012000:	2200      	movs	r2, #0
 8012002:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 8012006:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 801200a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801200c:	4798      	blx	r3
 801200e:	6863      	ldr	r3, [r4, #4]
 8012010:	2101      	movs	r1, #1
 8012012:	4605      	mov	r5, r0
 8012014:	7299      	strb	r1, [r3, #10]
 8012016:	4620      	mov	r0, r4
 8012018:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 801201c:	f7ff ffb8 	bl	8011f90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012020:	4628      	mov	r0, r5
 8012022:	bd70      	pop	{r4, r5, r6, pc}

08012024 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8012024:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8012028:	1a13      	subs	r3, r2, r0
 801202a:	4258      	negs	r0, r3
 801202c:	4158      	adcs	r0, r3
 801202e:	4770      	bx	lr

08012030 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8012030:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8012034:	1a9b      	subs	r3, r3, r2
 8012036:	2b00      	cmp	r3, #0
 8012038:	bfdc      	itt	le
 801203a:	6882      	ldrle	r2, [r0, #8]
 801203c:	189b      	addle	r3, r3, r2
 801203e:	2b01      	cmp	r3, #1
 8012040:	bfcc      	ite	gt
 8012042:	2000      	movgt	r0, #0
 8012044:	2001      	movle	r0, #1
 8012046:	4770      	bx	lr

08012048 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8012048:	6902      	ldr	r2, [r0, #16]
 801204a:	6843      	ldr	r3, [r0, #4]
 801204c:	2024      	movs	r0, #36	; 0x24
 801204e:	fb00 3002 	mla	r0, r0, r2, r3
 8012052:	4770      	bx	lr

08012054 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012054:	6803      	ldr	r3, [r0, #0]
 8012056:	691b      	ldr	r3, [r3, #16]
 8012058:	4718      	bx	r3

0801205a <_ZN8touchgfx13DMA_Interface7executeEv>:
 801205a:	b570      	push	{r4, r5, r6, lr}
 801205c:	2301      	movs	r3, #1
 801205e:	7203      	strb	r3, [r0, #8]
 8012060:	4604      	mov	r4, r0
 8012062:	6840      	ldr	r0, [r0, #4]
 8012064:	6803      	ldr	r3, [r0, #0]
 8012066:	699b      	ldr	r3, [r3, #24]
 8012068:	4798      	blx	r3
 801206a:	6803      	ldr	r3, [r0, #0]
 801206c:	2b40      	cmp	r3, #64	; 0x40
 801206e:	4605      	mov	r5, r0
 8012070:	d00c      	beq.n	801208c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012072:	d810      	bhi.n	8012096 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012074:	2b04      	cmp	r3, #4
 8012076:	d01d      	beq.n	80120b4 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012078:	d804      	bhi.n	8012084 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801207a:	2b01      	cmp	r3, #1
 801207c:	d006      	beq.n	801208c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801207e:	2b02      	cmp	r3, #2
 8012080:	d02c      	beq.n	80120dc <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012082:	bd70      	pop	{r4, r5, r6, pc}
 8012084:	2b08      	cmp	r3, #8
 8012086:	d01d      	beq.n	80120c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012088:	2b20      	cmp	r3, #32
 801208a:	d1fa      	bne.n	8012082 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801208c:	6823      	ldr	r3, [r4, #0]
 801208e:	4620      	mov	r0, r4
 8012090:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012092:	4798      	blx	r3
 8012094:	e013      	b.n	80120be <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012096:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801209a:	d0f7      	beq.n	801208c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801209c:	d804      	bhi.n	80120a8 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801209e:	2b80      	cmp	r3, #128	; 0x80
 80120a0:	d0f4      	beq.n	801208c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80120a2:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80120a6:	e7f0      	b.n	801208a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80120a8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80120ac:	d0ee      	beq.n	801208c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80120ae:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80120b2:	e7e5      	b.n	8012080 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80120b4:	6823      	ldr	r3, [r4, #0]
 80120b6:	7f01      	ldrb	r1, [r0, #28]
 80120b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120ba:	4620      	mov	r0, r4
 80120bc:	4798      	blx	r3
 80120be:	6823      	ldr	r3, [r4, #0]
 80120c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80120c2:	e006      	b.n	80120d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80120c4:	6823      	ldr	r3, [r4, #0]
 80120c6:	7f01      	ldrb	r1, [r0, #28]
 80120c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80120ca:	4620      	mov	r0, r4
 80120cc:	4798      	blx	r3
 80120ce:	6823      	ldr	r3, [r4, #0]
 80120d0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80120d2:	4629      	mov	r1, r5
 80120d4:	4620      	mov	r0, r4
 80120d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120da:	4718      	bx	r3
 80120dc:	6823      	ldr	r3, [r4, #0]
 80120de:	4620      	mov	r0, r4
 80120e0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80120e2:	4798      	blx	r3
 80120e4:	e7f3      	b.n	80120ce <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080120e6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80120e6:	4770      	bx	lr

080120e8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80120e8:	4770      	bx	lr

080120ea <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80120ea:	4770      	bx	lr

080120ec <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80120ec:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80120f0:	1ad2      	subs	r2, r2, r3
 80120f2:	2a00      	cmp	r2, #0
 80120f4:	b510      	push	{r4, lr}
 80120f6:	bfdc      	itt	le
 80120f8:	6884      	ldrle	r4, [r0, #8]
 80120fa:	1912      	addle	r2, r2, r4
 80120fc:	2a01      	cmp	r2, #1
 80120fe:	dd16      	ble.n	801212e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8012100:	6842      	ldr	r2, [r0, #4]
 8012102:	2424      	movs	r4, #36	; 0x24
 8012104:	fb04 2303 	mla	r3, r4, r3, r2
 8012108:	f101 0220 	add.w	r2, r1, #32
 801210c:	f851 4b04 	ldr.w	r4, [r1], #4
 8012110:	f843 4b04 	str.w	r4, [r3], #4
 8012114:	4291      	cmp	r1, r2
 8012116:	d1f9      	bne.n	801210c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8012118:	780a      	ldrb	r2, [r1, #0]
 801211a:	701a      	strb	r2, [r3, #0]
 801211c:	68c3      	ldr	r3, [r0, #12]
 801211e:	6882      	ldr	r2, [r0, #8]
 8012120:	f3bf 8f5b 	dmb	ish
 8012124:	3301      	adds	r3, #1
 8012126:	429a      	cmp	r2, r3
 8012128:	bfd8      	it	le
 801212a:	1a9b      	suble	r3, r3, r2
 801212c:	60c3      	str	r3, [r0, #12]
 801212e:	bd10      	pop	{r4, pc}

08012130 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8012130:	6903      	ldr	r3, [r0, #16]
 8012132:	6882      	ldr	r2, [r0, #8]
 8012134:	f3bf 8f5b 	dmb	ish
 8012138:	3301      	adds	r3, #1
 801213a:	429a      	cmp	r2, r3
 801213c:	bfd8      	it	le
 801213e:	1a9b      	suble	r3, r3, r2
 8012140:	6103      	str	r3, [r0, #16]
 8012142:	4770      	bx	lr

08012144 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8012144:	b570      	push	{r4, r5, r6, lr}
 8012146:	4604      	mov	r4, r0
 8012148:	460e      	mov	r6, r1
 801214a:	6860      	ldr	r0, [r4, #4]
 801214c:	6803      	ldr	r3, [r0, #0]
 801214e:	685b      	ldr	r3, [r3, #4]
 8012150:	4798      	blx	r3
 8012152:	2800      	cmp	r0, #0
 8012154:	d1f9      	bne.n	801214a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012156:	4d0d      	ldr	r5, [pc, #52]	; (801218c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012158:	6828      	ldr	r0, [r5, #0]
 801215a:	6803      	ldr	r3, [r0, #0]
 801215c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801215e:	4798      	blx	r3
 8012160:	f7ef ff8c 	bl	800207c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012164:	6828      	ldr	r0, [r5, #0]
 8012166:	2101      	movs	r1, #1
 8012168:	f7ff ff12 	bl	8011f90 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801216c:	6860      	ldr	r0, [r4, #4]
 801216e:	6803      	ldr	r3, [r0, #0]
 8012170:	4631      	mov	r1, r6
 8012172:	689b      	ldr	r3, [r3, #8]
 8012174:	4798      	blx	r3
 8012176:	6823      	ldr	r3, [r4, #0]
 8012178:	4620      	mov	r0, r4
 801217a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801217c:	4798      	blx	r3
 801217e:	6828      	ldr	r0, [r5, #0]
 8012180:	6803      	ldr	r3, [r0, #0]
 8012182:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012186:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8012188:	4718      	bx	r3
 801218a:	bf00      	nop
 801218c:	200137ec 	.word	0x200137ec

08012190 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8012190:	b508      	push	{r3, lr}
 8012192:	f7ef ff65 	bl	8002060 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012196:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801219a:	f7ef bf69 	b.w	8002070 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801219e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 801219e:	b510      	push	{r4, lr}
 80121a0:	2114      	movs	r1, #20
 80121a2:	4604      	mov	r4, r0
 80121a4:	f018 fbc9 	bl	802a93a <_ZdlPvj>
 80121a8:	4620      	mov	r0, r4
 80121aa:	bd10      	pop	{r4, pc}

080121ac <_ZN8touchgfx13DMA_Interface5startEv>:
 80121ac:	b510      	push	{r4, lr}
 80121ae:	4604      	mov	r4, r0
 80121b0:	6840      	ldr	r0, [r0, #4]
 80121b2:	6803      	ldr	r3, [r0, #0]
 80121b4:	681b      	ldr	r3, [r3, #0]
 80121b6:	4798      	blx	r3
 80121b8:	b948      	cbnz	r0, 80121ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80121ba:	7a63      	ldrb	r3, [r4, #9]
 80121bc:	b13b      	cbz	r3, 80121ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80121be:	7a23      	ldrb	r3, [r4, #8]
 80121c0:	b92b      	cbnz	r3, 80121ce <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80121c2:	6823      	ldr	r3, [r4, #0]
 80121c4:	4620      	mov	r0, r4
 80121c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80121c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121cc:	4718      	bx	r3
 80121ce:	bd10      	pop	{r4, pc}

080121d0 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80121d0:	b570      	push	{r4, r5, r6, lr}
 80121d2:	4604      	mov	r4, r0
 80121d4:	6840      	ldr	r0, [r0, #4]
 80121d6:	6803      	ldr	r3, [r0, #0]
 80121d8:	681b      	ldr	r3, [r3, #0]
 80121da:	4798      	blx	r3
 80121dc:	4605      	mov	r5, r0
 80121de:	b930      	cbnz	r0, 80121ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80121e0:	7a23      	ldrb	r3, [r4, #8]
 80121e2:	b123      	cbz	r3, 80121ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80121e4:	6860      	ldr	r0, [r4, #4]
 80121e6:	6803      	ldr	r3, [r0, #0]
 80121e8:	695b      	ldr	r3, [r3, #20]
 80121ea:	4798      	blx	r3
 80121ec:	7225      	strb	r5, [r4, #8]
 80121ee:	6860      	ldr	r0, [r4, #4]
 80121f0:	6803      	ldr	r3, [r0, #0]
 80121f2:	681b      	ldr	r3, [r3, #0]
 80121f4:	4798      	blx	r3
 80121f6:	b928      	cbnz	r0, 8012204 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80121f8:	6823      	ldr	r3, [r4, #0]
 80121fa:	4620      	mov	r0, r4
 80121fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80121fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012202:	4718      	bx	r3
 8012204:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012208:	f7ef bf40 	b.w	800208c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0801220c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801220c:	b510      	push	{r4, lr}
 801220e:	4c04      	ldr	r4, [pc, #16]	; (8012220 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8012210:	6082      	str	r2, [r0, #8]
 8012212:	2200      	movs	r2, #0
 8012214:	e9c0 4100 	strd	r4, r1, [r0]
 8012218:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801221c:	bd10      	pop	{r4, pc}
 801221e:	bf00      	nop
 8012220:	0802f354 	.word	0x0802f354

08012224 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8012224:	6840      	ldr	r0, [r0, #4]
 8012226:	6803      	ldr	r3, [r0, #0]
 8012228:	681b      	ldr	r3, [r3, #0]
 801222a:	4718      	bx	r3

0801222c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801222c:	4b06      	ldr	r3, [pc, #24]	; (8012248 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 801222e:	60c1      	str	r1, [r0, #12]
 8012230:	094a      	lsrs	r2, r1, #5
 8012232:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8012236:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801223a:	4313      	orrs	r3, r2
 801223c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8012240:	4319      	orrs	r1, r3
 8012242:	8201      	strh	r1, [r0, #16]
 8012244:	4770      	bx	lr
 8012246:	bf00      	nop
 8012248:	fffff800 	.word	0xfffff800

0801224c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 801224c:	f1a0 0008 	sub.w	r0, r0, #8
 8012250:	e7ec      	b.n	801222c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8012252:	bf00      	nop

08012254 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8012254:	b508      	push	{r3, lr}
 8012256:	4b05      	ldr	r3, [pc, #20]	; (801226c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8012258:	6818      	ldr	r0, [r3, #0]
 801225a:	6803      	ldr	r3, [r0, #0]
 801225c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8012260:	4798      	blx	r3
 8012262:	1e43      	subs	r3, r0, #1
 8012264:	4258      	negs	r0, r3
 8012266:	4158      	adcs	r0, r3
 8012268:	bd08      	pop	{r3, pc}
 801226a:	bf00      	nop
 801226c:	200137ec 	.word	0x200137ec

08012270 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8012270:	4770      	bx	lr

08012272 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8012272:	3808      	subs	r0, #8
 8012274:	4770      	bx	lr

08012276 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8012276:	b430      	push	{r4, r5}
 8012278:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801227c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8012280:	8a02      	ldrh	r2, [r0, #16]
 8012282:	9202      	str	r2, [sp, #8]
 8012284:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012288:	68c2      	ldr	r2, [r0, #12]
 801228a:	4629      	mov	r1, r5
 801228c:	4620      	mov	r0, r4
 801228e:	bc30      	pop	{r4, r5}
 8012290:	f7f0 b9c0 	b.w	8002614 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08012294 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8012294:	f7f0 b9bc 	b.w	8002610 <_ZN8touchgfx5paint8tearDownEv>

08012298 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8012298:	b510      	push	{r4, lr}
 801229a:	2114      	movs	r1, #20
 801229c:	4604      	mov	r4, r0
 801229e:	f018 fb4c 	bl	802a93a <_ZdlPvj>
 80122a2:	4620      	mov	r0, r4
 80122a4:	bd10      	pop	{r4, pc}

080122a6 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 80122a6:	f1a0 0008 	sub.w	r0, r0, #8
 80122aa:	e7f5      	b.n	8012298 <_ZN8touchgfx13PainterRGB565D0Ev>

080122ac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 80122ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80122ae:	6803      	ldr	r3, [r0, #0]
 80122b0:	460d      	mov	r5, r1
 80122b2:	4604      	mov	r4, r0
 80122b4:	4601      	mov	r1, r0
 80122b6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80122b8:	a802      	add	r0, sp, #8
 80122ba:	4798      	blx	r3
 80122bc:	6828      	ldr	r0, [r5, #0]
 80122be:	6869      	ldr	r1, [r5, #4]
 80122c0:	466b      	mov	r3, sp
 80122c2:	c303      	stmia	r3!, {r0, r1}
 80122c4:	4668      	mov	r0, sp
 80122c6:	4619      	mov	r1, r3
 80122c8:	f7fe fb30 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 80122cc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80122ce:	b188      	cbz	r0, 80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80122d0:	6803      	ldr	r3, [r0, #0]
 80122d2:	1d21      	adds	r1, r4, #4
 80122d4:	68db      	ldr	r3, [r3, #12]
 80122d6:	4798      	blx	r3
 80122d8:	b160      	cbz	r0, 80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80122da:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80122de:	2b00      	cmp	r3, #0
 80122e0:	dd08      	ble.n	80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80122e2:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80122e6:	2d00      	cmp	r5, #0
 80122e8:	dd04      	ble.n	80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80122ea:	4a2b      	ldr	r2, [pc, #172]	; (8012398 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80122ec:	7812      	ldrb	r2, [r2, #0]
 80122ee:	b11a      	cbz	r2, 80122f8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80122f0:	2a01      	cmp	r2, #1
 80122f2:	d029      	beq.n	8012348 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80122f4:	b004      	add	sp, #16
 80122f6:	bd70      	pop	{r4, r5, r6, pc}
 80122f8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80122fc:	441d      	add	r5, r3
 80122fe:	b2ad      	uxth	r5, r5
 8012300:	b22e      	sxth	r6, r5
 8012302:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8012306:	42b3      	cmp	r3, r6
 8012308:	daf4      	bge.n	80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801230a:	6823      	ldr	r3, [r4, #0]
 801230c:	4669      	mov	r1, sp
 801230e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012310:	4620      	mov	r0, r4
 8012312:	4798      	blx	r3
 8012314:	b940      	cbnz	r0, 8012328 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8012316:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801231a:	2b01      	cmp	r3, #1
 801231c:	d004      	beq.n	8012328 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 801231e:	3301      	adds	r3, #1
 8012320:	105b      	asrs	r3, r3, #1
 8012322:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012326:	e7f0      	b.n	801230a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8012328:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801232c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012330:	4413      	add	r3, r2
 8012332:	b29b      	uxth	r3, r3
 8012334:	441a      	add	r2, r3
 8012336:	b212      	sxth	r2, r2
 8012338:	4296      	cmp	r6, r2
 801233a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801233e:	dae0      	bge.n	8012302 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012340:	1aeb      	subs	r3, r5, r3
 8012342:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012346:	e7dc      	b.n	8012302 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8012348:	f8bd 5000 	ldrh.w	r5, [sp]
 801234c:	441d      	add	r5, r3
 801234e:	b2ad      	uxth	r5, r5
 8012350:	b22e      	sxth	r6, r5
 8012352:	f9bd 3000 	ldrsh.w	r3, [sp]
 8012356:	42b3      	cmp	r3, r6
 8012358:	dacc      	bge.n	80122f4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801235a:	6823      	ldr	r3, [r4, #0]
 801235c:	4669      	mov	r1, sp
 801235e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012360:	4620      	mov	r0, r4
 8012362:	4798      	blx	r3
 8012364:	b940      	cbnz	r0, 8012378 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8012366:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801236a:	2b01      	cmp	r3, #1
 801236c:	d004      	beq.n	8012378 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801236e:	3301      	adds	r3, #1
 8012370:	105b      	asrs	r3, r3, #1
 8012372:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012376:	e7f0      	b.n	801235a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8012378:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 801237c:	f8bd 3000 	ldrh.w	r3, [sp]
 8012380:	4413      	add	r3, r2
 8012382:	b29b      	uxth	r3, r3
 8012384:	441a      	add	r2, r3
 8012386:	b212      	sxth	r2, r2
 8012388:	4296      	cmp	r6, r2
 801238a:	f8ad 3000 	strh.w	r3, [sp]
 801238e:	dae0      	bge.n	8012352 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012390:	1aeb      	subs	r3, r5, r3
 8012392:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012396:	e7dc      	b.n	8012352 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8012398:	200137e4 	.word	0x200137e4

0801239c <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 801239c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801239e:	6803      	ldr	r3, [r0, #0]
 80123a0:	4604      	mov	r4, r0
 80123a2:	4601      	mov	r1, r0
 80123a4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80123a6:	4668      	mov	r0, sp
 80123a8:	4798      	blx	r3
 80123aa:	2100      	movs	r1, #0
 80123ac:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80123b0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80123b4:	9102      	str	r1, [sp, #8]
 80123b6:	4668      	mov	r0, sp
 80123b8:	a902      	add	r1, sp, #8
 80123ba:	f8ad 200c 	strh.w	r2, [sp, #12]
 80123be:	f8ad 300e 	strh.w	r3, [sp, #14]
 80123c2:	f7fe fab3 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 80123c6:	6823      	ldr	r3, [r4, #0]
 80123c8:	4669      	mov	r1, sp
 80123ca:	691b      	ldr	r3, [r3, #16]
 80123cc:	4620      	mov	r0, r4
 80123ce:	4798      	blx	r3
 80123d0:	b004      	add	sp, #16
 80123d2:	bd10      	pop	{r4, pc}

080123d4 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80123d4:	2101      	movs	r1, #1
 80123d6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80123da:	490b      	ldr	r1, [pc, #44]	; (8012408 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80123dc:	6001      	str	r1, [r0, #0]
 80123de:	2200      	movs	r2, #0
 80123e0:	21ff      	movs	r1, #255	; 0xff
 80123e2:	8082      	strh	r2, [r0, #4]
 80123e4:	80c2      	strh	r2, [r0, #6]
 80123e6:	8102      	strh	r2, [r0, #8]
 80123e8:	8142      	strh	r2, [r0, #10]
 80123ea:	8182      	strh	r2, [r0, #12]
 80123ec:	81c2      	strh	r2, [r0, #14]
 80123ee:	8202      	strh	r2, [r0, #16]
 80123f0:	8242      	strh	r2, [r0, #18]
 80123f2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80123f6:	61c2      	str	r2, [r0, #28]
 80123f8:	8402      	strh	r2, [r0, #32]
 80123fa:	8442      	strh	r2, [r0, #34]	; 0x22
 80123fc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8012400:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8012404:	6282      	str	r2, [r0, #40]	; 0x28
 8012406:	4770      	bx	lr
 8012408:	0802f3b0 	.word	0x0802f3b0

0801240c <_ZNK8touchgfx4Line14getMinimalRectEv>:
 801240c:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8012410:	4602      	mov	r2, r0
 8012412:	cb03      	ldmia	r3!, {r0, r1}
 8012414:	6010      	str	r0, [r2, #0]
 8012416:	6051      	str	r1, [r2, #4]
 8012418:	4610      	mov	r0, r2
 801241a:	4770      	bx	lr

0801241c <_ZN8touchgfx4LineD1Ev>:
 801241c:	4770      	bx	lr

0801241e <_ZN8touchgfx4LineD0Ev>:
 801241e:	b510      	push	{r4, lr}
 8012420:	2170      	movs	r1, #112	; 0x70
 8012422:	4604      	mov	r4, r0
 8012424:	f018 fa89 	bl	802a93a <_ZdlPvj>
 8012428:	4620      	mov	r0, r4
 801242a:	bd10      	pop	{r4, pc}

0801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 801242c:	b507      	push	{r0, r1, r2, lr}
 801242e:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8012432:	ab01      	add	r3, sp, #4
 8012434:	6809      	ldr	r1, [r1, #0]
 8012436:	6800      	ldr	r0, [r0, #0]
 8012438:	f005 fc80 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 801243c:	b003      	add	sp, #12
 801243e:	f85d fb04 	ldr.w	pc, [sp], #4

08012442 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8012442:	6800      	ldr	r0, [r0, #0]
 8012444:	2800      	cmp	r0, #0
 8012446:	bfb9      	ittee	lt
 8012448:	2320      	movlt	r3, #32
 801244a:	fb90 f0f3 	sdivlt	r0, r0, r3
 801244e:	301f      	addge	r0, #31
 8012450:	1140      	asrge	r0, r0, #5
 8012452:	4770      	bx	lr

08012454 <_ZNK8touchgfx4Line17invalidateContentEv>:
 8012454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012458:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 801245c:	b089      	sub	sp, #36	; 0x24
 801245e:	4604      	mov	r4, r0
 8012460:	b353      	cbz	r3, 80124b8 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8012462:	6803      	ldr	r3, [r0, #0]
 8012464:	4601      	mov	r1, r0
 8012466:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8012468:	a802      	add	r0, sp, #8
 801246a:	4798      	blx	r3
 801246c:	2220      	movs	r2, #32
 801246e:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8012472:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012474:	fb9a f0f2 	sdiv	r0, sl, r2
 8012478:	fb91 f5f2 	sdiv	r5, r1, r2
 801247c:	1b40      	subs	r0, r0, r5
 801247e:	2800      	cmp	r0, #0
 8012480:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8012482:	fb93 f6f2 	sdiv	r6, r3, r2
 8012486:	bfb8      	it	lt
 8012488:	4240      	neglt	r0, r0
 801248a:	0076      	lsls	r6, r6, #1
 801248c:	4286      	cmp	r6, r0
 801248e:	f8d4 b000 	ldr.w	fp, [r4]
 8012492:	dc0c      	bgt.n	80124ae <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8012494:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8012496:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 801249a:	fb95 f0f2 	sdiv	r0, r5, r2
 801249e:	fb98 f7f2 	sdiv	r7, r8, r2
 80124a2:	1bc0      	subs	r0, r0, r7
 80124a4:	2800      	cmp	r0, #0
 80124a6:	bfb8      	it	lt
 80124a8:	4240      	neglt	r0, r0
 80124aa:	4286      	cmp	r6, r0
 80124ac:	dd07      	ble.n	80124be <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 80124ae:	f8db 3010 	ldr.w	r3, [fp, #16]
 80124b2:	a902      	add	r1, sp, #8
 80124b4:	4620      	mov	r0, r4
 80124b6:	4798      	blx	r3
 80124b8:	b009      	add	sp, #36	; 0x24
 80124ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124be:	3301      	adds	r3, #1
 80124c0:	2002      	movs	r0, #2
 80124c2:	f10d 0920 	add.w	r9, sp, #32
 80124c6:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 80124ca:	4103      	asrs	r3, r0
 80124cc:	f849 3d08 	str.w	r3, [r9, #-8]!
 80124d0:	eb01 060a 	add.w	r6, r1, sl
 80124d4:	eb08 0705 	add.w	r7, r8, r5
 80124d8:	fb96 f6f0 	sdiv	r6, r6, r0
 80124dc:	fb97 f7f0 	sdiv	r7, r7, r0
 80124e0:	4648      	mov	r0, r9
 80124e2:	9101      	str	r1, [sp, #4]
 80124e4:	b236      	sxth	r6, r6
 80124e6:	b23f      	sxth	r7, r7
 80124e8:	fb96 f6f2 	sdiv	r6, r6, r2
 80124ec:	fb97 f7f2 	sdiv	r7, r7, r2
 80124f0:	f7ff ffa7 	bl	8012442 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80124f4:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80124f8:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 80124fc:	9901      	ldr	r1, [sp, #4]
 80124fe:	4293      	cmp	r3, r2
 8012500:	fa1f fe87 	uxth.w	lr, r7
 8012504:	fa1f fc86 	uxth.w	ip, r6
 8012508:	eba1 0a0a 	sub.w	sl, r1, sl
 801250c:	b280      	uxth	r0, r0
 801250e:	da54      	bge.n	80125ba <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8012510:	ebac 0100 	sub.w	r1, ip, r0
 8012514:	b289      	uxth	r1, r1
 8012516:	4460      	add	r0, ip
 8012518:	f1ba 0f00 	cmp.w	sl, #0
 801251c:	b20e      	sxth	r6, r1
 801251e:	b280      	uxth	r0, r0
 8012520:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8012524:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8012528:	da29      	bge.n	801257e <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 801252a:	eba8 0505 	sub.w	r5, r8, r5
 801252e:	2d00      	cmp	r5, #0
 8012530:	da2a      	bge.n	8012588 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012532:	fa1f f88a 	uxth.w	r8, sl
 8012536:	eba0 0008 	sub.w	r0, r0, r8
 801253a:	fa1f f58c 	uxth.w	r5, ip
 801253e:	4443      	add	r3, r8
 8012540:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012544:	1a59      	subs	r1, r3, r1
 8012546:	ebae 0005 	sub.w	r0, lr, r5
 801254a:	f8ad a010 	strh.w	sl, [sp, #16]
 801254e:	f8ad c012 	strh.w	ip, [sp, #18]
 8012552:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012556:	f8ad 6018 	strh.w	r6, [sp, #24]
 801255a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801255e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012562:	442a      	add	r2, r5
 8012564:	eba2 0e0e 	sub.w	lr, r2, lr
 8012568:	f8ad e01e 	strh.w	lr, [sp, #30]
 801256c:	f8db 3010 	ldr.w	r3, [fp, #16]
 8012570:	a904      	add	r1, sp, #16
 8012572:	4620      	mov	r0, r4
 8012574:	4798      	blx	r3
 8012576:	6823      	ldr	r3, [r4, #0]
 8012578:	4649      	mov	r1, r9
 801257a:	691b      	ldr	r3, [r3, #16]
 801257c:	e79a      	b.n	80124b4 <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 801257e:	d003      	beq.n	8012588 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8012580:	eba8 0505 	sub.w	r5, r8, r5
 8012584:	2d00      	cmp	r5, #0
 8012586:	dcd4      	bgt.n	8012532 <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8012588:	fa1f f88a 	uxth.w	r8, sl
 801258c:	4443      	add	r3, r8
 801258e:	fa1f f58c 	uxth.w	r5, ip
 8012592:	1a59      	subs	r1, r3, r1
 8012594:	eba0 0008 	sub.w	r0, r0, r8
 8012598:	ebae 0305 	sub.w	r3, lr, r5
 801259c:	f8ad 6010 	strh.w	r6, [sp, #16]
 80125a0:	f8ad c012 	strh.w	ip, [sp, #18]
 80125a4:	f8ad 1014 	strh.w	r1, [sp, #20]
 80125a8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80125ac:	f8ad a018 	strh.w	sl, [sp, #24]
 80125b0:	f8ad 701a 	strh.w	r7, [sp, #26]
 80125b4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80125b8:	e7d3      	b.n	8012562 <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 80125ba:	ebae 0100 	sub.w	r1, lr, r0
 80125be:	b289      	uxth	r1, r1
 80125c0:	4470      	add	r0, lr
 80125c2:	f1ba 0f00 	cmp.w	sl, #0
 80125c6:	b20f      	sxth	r7, r1
 80125c8:	b280      	uxth	r0, r0
 80125ca:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 80125ce:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 80125d2:	da20      	bge.n	8012616 <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 80125d4:	eba8 0505 	sub.w	r5, r8, r5
 80125d8:	2d00      	cmp	r5, #0
 80125da:	da21      	bge.n	8012620 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 80125dc:	fa1f f88e 	uxth.w	r8, lr
 80125e0:	fa1f f58a 	uxth.w	r5, sl
 80125e4:	4443      	add	r3, r8
 80125e6:	442a      	add	r2, r5
 80125e8:	f8ad e010 	strh.w	lr, [sp, #16]
 80125ec:	1b40      	subs	r0, r0, r5
 80125ee:	ebac 0e08 	sub.w	lr, ip, r8
 80125f2:	1a51      	subs	r1, r2, r1
 80125f4:	eba3 0c0c 	sub.w	ip, r3, ip
 80125f8:	f8ad a012 	strh.w	sl, [sp, #18]
 80125fc:	f8ad e014 	strh.w	lr, [sp, #20]
 8012600:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012604:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012608:	f8ad 701a 	strh.w	r7, [sp, #26]
 801260c:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012610:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012614:	e7aa      	b.n	801256c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8012616:	d003      	beq.n	8012620 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8012618:	eba8 0505 	sub.w	r5, r8, r5
 801261c:	2d00      	cmp	r5, #0
 801261e:	dcdd      	bgt.n	80125dc <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8012620:	fa1f f58e 	uxth.w	r5, lr
 8012624:	fa1f f88a 	uxth.w	r8, sl
 8012628:	4442      	add	r2, r8
 801262a:	442b      	add	r3, r5
 801262c:	f8ad 7012 	strh.w	r7, [sp, #18]
 8012630:	1a51      	subs	r1, r2, r1
 8012632:	ebac 0705 	sub.w	r7, ip, r5
 8012636:	eba0 0008 	sub.w	r0, r0, r8
 801263a:	eba3 0c0c 	sub.w	ip, r3, ip
 801263e:	f8ad e010 	strh.w	lr, [sp, #16]
 8012642:	f8ad 7014 	strh.w	r7, [sp, #20]
 8012646:	f8ad 1016 	strh.w	r1, [sp, #22]
 801264a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801264e:	f8ad a01a 	strh.w	sl, [sp, #26]
 8012652:	f8ad c01c 	strh.w	ip, [sp, #28]
 8012656:	f8ad 001e 	strh.w	r0, [sp, #30]
 801265a:	e787      	b.n	801256c <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

0801265c <_ZN8touchgfx7CWRUtil4sineEi>:
 801265c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8012660:	fb90 f2f3 	sdiv	r2, r0, r3
 8012664:	fb02 0013 	mls	r0, r2, r3, r0
 8012668:	2800      	cmp	r0, #0
 801266a:	bfb8      	it	lt
 801266c:	18c0      	addlt	r0, r0, r3
 801266e:	285a      	cmp	r0, #90	; 0x5a
 8012670:	4b09      	ldr	r3, [pc, #36]	; (8012698 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8012672:	dc02      	bgt.n	801267a <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8012674:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012678:	4770      	bx	lr
 801267a:	28b4      	cmp	r0, #180	; 0xb4
 801267c:	dc02      	bgt.n	8012684 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 801267e:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8012682:	e7f7      	b.n	8012674 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8012684:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8012688:	bfd4      	ite	le
 801268a:	38b4      	suble	r0, #180	; 0xb4
 801268c:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8012690:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012694:	4240      	negs	r0, r0
 8012696:	4770      	bx	lr
 8012698:	0802f47c 	.word	0x0802f47c

0801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 801269c:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 80126a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80126a2:	fb90 f2f3 	sdiv	r2, r0, r3
 80126a6:	fb02 0013 	mls	r0, r2, r3, r0
 80126aa:	2800      	cmp	r0, #0
 80126ac:	bfb8      	it	lt
 80126ae:	18c0      	addlt	r0, r0, r3
 80126b0:	1144      	asrs	r4, r0, #5
 80126b2:	f000 061f 	and.w	r6, r0, #31
 80126b6:	4620      	mov	r0, r4
 80126b8:	f7ff ffd0 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 80126bc:	4605      	mov	r5, r0
 80126be:	b90e      	cbnz	r6, 80126c4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 80126c0:	b002      	add	sp, #8
 80126c2:	bd70      	pop	{r4, r5, r6, pc}
 80126c4:	1c60      	adds	r0, r4, #1
 80126c6:	f7ff ffc9 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 80126ca:	ab01      	add	r3, sp, #4
 80126cc:	2220      	movs	r2, #32
 80126ce:	4631      	mov	r1, r6
 80126d0:	1b40      	subs	r0, r0, r5
 80126d2:	f005 fb33 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 80126d6:	4428      	add	r0, r5
 80126d8:	e7f2      	b.n	80126c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

080126da <_ZN8touchgfx7CWRUtil5isqrtEm>:
 80126da:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 80126de:	bf2c      	ite	cs
 80126e0:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 80126e4:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 80126e8:	2300      	movs	r3, #0
 80126ea:	1899      	adds	r1, r3, r2
 80126ec:	4288      	cmp	r0, r1
 80126ee:	bf24      	itt	cs
 80126f0:	1853      	addcs	r3, r2, r1
 80126f2:	1a40      	subcs	r0, r0, r1
 80126f4:	0892      	lsrs	r2, r2, #2
 80126f6:	ea4f 0353 	mov.w	r3, r3, lsr #1
 80126fa:	d1f6      	bne.n	80126ea <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 80126fc:	4618      	mov	r0, r3
 80126fe:	4770      	bx	lr

08012700 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8012700:	b510      	push	{r4, lr}
 8012702:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8012706:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801270a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801270e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8012712:	13a4      	asrs	r4, r4, #14
 8012714:	139b      	asrs	r3, r3, #14
 8012716:	429c      	cmp	r4, r3
 8012718:	bfb8      	it	lt
 801271a:	461c      	movlt	r4, r3
 801271c:	2c01      	cmp	r4, #1
 801271e:	dd07      	ble.n	8012730 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8012720:	fb91 f1f4 	sdiv	r1, r1, r4
 8012724:	fb90 f0f4 	sdiv	r0, r0, r4
 8012728:	f7ff ffea 	bl	8012700 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801272c:	4360      	muls	r0, r4
 801272e:	bd10      	pop	{r4, pc}
 8012730:	4340      	muls	r0, r0
 8012732:	fb01 0001 	mla	r0, r1, r1, r0
 8012736:	f7ff ffd0 	bl	80126da <_ZN8touchgfx7CWRUtil5isqrtEm>
 801273a:	e7f8      	b.n	801272e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801273c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 801273c:	2800      	cmp	r0, #0
 801273e:	b508      	push	{r3, lr}
 8012740:	da05      	bge.n	801274e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8012742:	4240      	negs	r0, r0
 8012744:	f7ff fffa 	bl	801273c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012748:	4240      	negs	r0, r0
 801274a:	b240      	sxtb	r0, r0
 801274c:	bd08      	pop	{r3, pc}
 801274e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8012752:	dc11      	bgt.n	8012778 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8012754:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8012758:	dd09      	ble.n	801276e <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 801275a:	4340      	muls	r0, r0
 801275c:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8012760:	f7ff ffbb 	bl	80126da <_ZN8touchgfx7CWRUtil5isqrtEm>
 8012764:	f7ff ffea 	bl	801273c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8012768:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 801276c:	e7ed      	b.n	801274a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 801276e:	3003      	adds	r0, #3
 8012770:	10c0      	asrs	r0, r0, #3
 8012772:	4b02      	ldr	r3, [pc, #8]	; (801277c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8012774:	5618      	ldrsb	r0, [r3, r0]
 8012776:	e7e9      	b.n	801274c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8012778:	2000      	movs	r0, #0
 801277a:	e7e7      	b.n	801274c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 801277c:	0802f420 	.word	0x0802f420

08012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8012780:	4281      	cmp	r1, r0
 8012782:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012784:	460c      	mov	r4, r1
 8012786:	4615      	mov	r5, r2
 8012788:	dd07      	ble.n	801279a <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 801278a:	4601      	mov	r1, r0
 801278c:	4620      	mov	r0, r4
 801278e:	f7ff fff7 	bl	8012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012792:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8012796:	b003      	add	sp, #12
 8012798:	bd30      	pop	{r4, r5, pc}
 801279a:	f7ff ffb1 	bl	8012700 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801279e:	6028      	str	r0, [r5, #0]
 80127a0:	2800      	cmp	r0, #0
 80127a2:	d0f8      	beq.n	8012796 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 80127a4:	4602      	mov	r2, r0
 80127a6:	ab01      	add	r3, sp, #4
 80127a8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80127ac:	4620      	mov	r0, r4
 80127ae:	f005 fac5 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 80127b2:	f7ff ffc3 	bl	801273c <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 80127b6:	e7ee      	b.n	8012796 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

080127b8 <_ZN8touchgfx4LineC1Ev>:
 80127b8:	b510      	push	{r4, lr}
 80127ba:	4604      	mov	r4, r0
 80127bc:	f7ff fe0a 	bl	80123d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 80127c0:	4b0c      	ldr	r3, [pc, #48]	; (80127f4 <_ZN8touchgfx4LineC1Ev+0x3c>)
 80127c2:	6023      	str	r3, [r4, #0]
 80127c4:	2220      	movs	r2, #32
 80127c6:	2300      	movs	r3, #0
 80127c8:	63e2      	str	r2, [r4, #60]	; 0x3c
 80127ca:	2212      	movs	r2, #18
 80127cc:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80127d0:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 80127d4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80127d8:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 80127dc:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 80127e0:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 80127e4:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 80127e8:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 80127ec:	66e2      	str	r2, [r4, #108]	; 0x6c
 80127ee:	60a3      	str	r3, [r4, #8]
 80127f0:	4620      	mov	r0, r4
 80127f2:	bd10      	pop	{r4, pc}
 80127f4:	0802f53c 	.word	0x0802f53c

080127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 80127f8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80127fc:	6b47      	ldr	r7, [r0, #52]	; 0x34
 80127fe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012800:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012802:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8012804:	1aff      	subs	r7, r7, r3
 8012806:	4604      	mov	r4, r0
 8012808:	eba5 0502 	sub.w	r5, r5, r2
 801280c:	d142      	bne.n	8012894 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801280e:	b955      	cbnz	r5, 8012826 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8012810:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8012814:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8012818:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 801281c:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8012820:	b002      	add	sp, #8
 8012822:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012826:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 801282a:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801282e:	4629      	mov	r1, r5
 8012830:	4642      	mov	r2, r8
 8012832:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012834:	f005 faa1 	bl	8017d7a <_ZN8touchgfx6muldivElll>
 8012838:	2502      	movs	r5, #2
 801283a:	4642      	mov	r2, r8
 801283c:	fb90 f6f5 	sdiv	r6, r0, r5
 8012840:	4639      	mov	r1, r7
 8012842:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8012844:	f005 fa99 	bl	8017d7a <_ZN8touchgfx6muldivElll>
 8012848:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 801284c:	fb90 f5f5 	sdiv	r5, r0, r5
 8012850:	f1b9 0f00 	cmp.w	r9, #0
 8012854:	d067      	beq.n	8012926 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8012856:	f1b9 0f02 	cmp.w	r9, #2
 801285a:	d878      	bhi.n	801294e <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 801285c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801285e:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8012860:	1b93      	subs	r3, r2, r6
 8012862:	1b5b      	subs	r3, r3, r5
 8012864:	6463      	str	r3, [r4, #68]	; 0x44
 8012866:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012868:	18e9      	adds	r1, r5, r3
 801286a:	1b89      	subs	r1, r1, r6
 801286c:	6561      	str	r1, [r4, #84]	; 0x54
 801286e:	1b81      	subs	r1, r0, r6
 8012870:	4429      	add	r1, r5
 8012872:	64a1      	str	r1, [r4, #72]	; 0x48
 8012874:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8012876:	4430      	add	r0, r6
 8012878:	186f      	adds	r7, r5, r1
 801287a:	4432      	add	r2, r6
 801287c:	1b49      	subs	r1, r1, r5
 801287e:	4437      	add	r7, r6
 8012880:	4428      	add	r0, r5
 8012882:	4431      	add	r1, r6
 8012884:	1b52      	subs	r2, r2, r5
 8012886:	1b5b      	subs	r3, r3, r5
 8012888:	65a7      	str	r7, [r4, #88]	; 0x58
 801288a:	64e0      	str	r0, [r4, #76]	; 0x4c
 801288c:	65e1      	str	r1, [r4, #92]	; 0x5c
 801288e:	6522      	str	r2, [r4, #80]	; 0x50
 8012890:	1b9b      	subs	r3, r3, r6
 8012892:	e05b      	b.n	801294c <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8012894:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8012898:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 801289c:	2d00      	cmp	r5, #0
 801289e:	d0c6      	beq.n	801282e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80128a0:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80128a4:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80128a8:	fb93 f2f8 	sdiv	r2, r3, r8
 80128ac:	fb08 3312 	mls	r3, r8, r2, r3
 80128b0:	b353      	cbz	r3, 8012908 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80128b2:	fb98 f2f3 	sdiv	r2, r8, r3
 80128b6:	fb03 8812 	mls	r8, r3, r2, r8
 80128ba:	f1b8 0f00 	cmp.w	r8, #0
 80128be:	d1f3      	bne.n	80128a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80128c0:	2b01      	cmp	r3, #1
 80128c2:	bf1c      	itt	ne
 80128c4:	fb95 f5f3 	sdivne	r5, r5, r3
 80128c8:	fb97 f7f3 	sdivne	r7, r7, r3
 80128cc:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80128d0:	f24b 5104 	movw	r1, #46340	; 0xb504
 80128d4:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80128d8:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80128dc:	428b      	cmp	r3, r1
 80128de:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80128e2:	4608      	mov	r0, r1
 80128e4:	dd01      	ble.n	80128ea <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80128e6:	428a      	cmp	r2, r1
 80128e8:	dc10      	bgt.n	801290c <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80128ea:	fb90 f3f3 	sdiv	r3, r0, r3
 80128ee:	fb90 f2f2 	sdiv	r2, r0, r2
 80128f2:	4293      	cmp	r3, r2
 80128f4:	bfa8      	it	ge
 80128f6:	4613      	movge	r3, r2
 80128f8:	435f      	muls	r7, r3
 80128fa:	435d      	muls	r5, r3
 80128fc:	4629      	mov	r1, r5
 80128fe:	4638      	mov	r0, r7
 8012900:	f7ff fefe 	bl	8012700 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8012904:	4680      	mov	r8, r0
 8012906:	e792      	b.n	801282e <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8012908:	4643      	mov	r3, r8
 801290a:	e7d9      	b.n	80128c0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 801290c:	fb93 f3f1 	sdiv	r3, r3, r1
 8012910:	fb92 f2f1 	sdiv	r2, r2, r1
 8012914:	4293      	cmp	r3, r2
 8012916:	bfcc      	ite	gt
 8012918:	3301      	addgt	r3, #1
 801291a:	1c53      	addle	r3, r2, #1
 801291c:	fb97 f7f3 	sdiv	r7, r7, r3
 8012920:	fb95 f5f3 	sdiv	r5, r5, r3
 8012924:	e7ea      	b.n	80128fc <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8012926:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012928:	6b60      	ldr	r0, [r4, #52]	; 0x34
 801292a:	1b93      	subs	r3, r2, r6
 801292c:	6463      	str	r3, [r4, #68]	; 0x44
 801292e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8012930:	18e9      	adds	r1, r5, r3
 8012932:	6561      	str	r1, [r4, #84]	; 0x54
 8012934:	1b81      	subs	r1, r0, r6
 8012936:	64a1      	str	r1, [r4, #72]	; 0x48
 8012938:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801293a:	4430      	add	r0, r6
 801293c:	186f      	adds	r7, r5, r1
 801293e:	4432      	add	r2, r6
 8012940:	1b49      	subs	r1, r1, r5
 8012942:	65a7      	str	r7, [r4, #88]	; 0x58
 8012944:	64e0      	str	r0, [r4, #76]	; 0x4c
 8012946:	65e1      	str	r1, [r4, #92]	; 0x5c
 8012948:	6522      	str	r2, [r4, #80]	; 0x50
 801294a:	1b5b      	subs	r3, r3, r5
 801294c:	6623      	str	r3, [r4, #96]	; 0x60
 801294e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8012950:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012952:	9200      	str	r2, [sp, #0]
 8012954:	9301      	str	r3, [sp, #4]
 8012956:	f104 0148 	add.w	r1, r4, #72	; 0x48
 801295a:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 801295e:	680f      	ldr	r7, [r1, #0]
 8012960:	9800      	ldr	r0, [sp, #0]
 8012962:	42ba      	cmp	r2, r7
 8012964:	bfa8      	it	ge
 8012966:	463a      	movge	r2, r7
 8012968:	4287      	cmp	r7, r0
 801296a:	bfc8      	it	gt
 801296c:	9700      	strgt	r7, [sp, #0]
 801296e:	690f      	ldr	r7, [r1, #16]
 8012970:	9801      	ldr	r0, [sp, #4]
 8012972:	42bb      	cmp	r3, r7
 8012974:	bfa8      	it	ge
 8012976:	463b      	movge	r3, r7
 8012978:	3104      	adds	r1, #4
 801297a:	4287      	cmp	r7, r0
 801297c:	bfc8      	it	gt
 801297e:	9701      	strgt	r7, [sp, #4]
 8012980:	458c      	cmp	ip, r1
 8012982:	d1ec      	bne.n	801295e <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8012984:	4668      	mov	r0, sp
 8012986:	2720      	movs	r7, #32
 8012988:	fb92 f8f7 	sdiv	r8, r2, r7
 801298c:	fb93 f7f7 	sdiv	r7, r3, r7
 8012990:	f7ff fd57 	bl	8012442 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8012994:	4682      	mov	sl, r0
 8012996:	a801      	add	r0, sp, #4
 8012998:	f7ff fd53 	bl	8012442 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801299c:	ebaa 0208 	sub.w	r2, sl, r8
 80129a0:	1bc0      	subs	r0, r0, r7
 80129a2:	f1b9 0f01 	cmp.w	r9, #1
 80129a6:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80129aa:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80129ae:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80129b2:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80129b6:	f47f af33 	bne.w	8012820 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80129ba:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80129bc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80129be:	1b83      	subs	r3, r0, r6
 80129c0:	6463      	str	r3, [r4, #68]	; 0x44
 80129c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80129c4:	18ea      	adds	r2, r5, r3
 80129c6:	6562      	str	r2, [r4, #84]	; 0x54
 80129c8:	1b8a      	subs	r2, r1, r6
 80129ca:	64a2      	str	r2, [r4, #72]	; 0x48
 80129cc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80129ce:	4431      	add	r1, r6
 80129d0:	18af      	adds	r7, r5, r2
 80129d2:	4406      	add	r6, r0
 80129d4:	1b52      	subs	r2, r2, r5
 80129d6:	1b5d      	subs	r5, r3, r5
 80129d8:	65a7      	str	r7, [r4, #88]	; 0x58
 80129da:	64e1      	str	r1, [r4, #76]	; 0x4c
 80129dc:	65e2      	str	r2, [r4, #92]	; 0x5c
 80129de:	6526      	str	r6, [r4, #80]	; 0x50
 80129e0:	6625      	str	r5, [r4, #96]	; 0x60
 80129e2:	e71d      	b.n	8012820 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080129e4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80129e4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80129e6:	428b      	cmp	r3, r1
 80129e8:	d102      	bne.n	80129f0 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80129ea:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80129ec:	4293      	cmp	r3, r2
 80129ee:	d003      	beq.n	80129f8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80129f0:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80129f4:	f7ff bf00 	b.w	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 80129f8:	4770      	bx	lr

080129fa <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 80129fa:	6b43      	ldr	r3, [r0, #52]	; 0x34
 80129fc:	428b      	cmp	r3, r1
 80129fe:	d102      	bne.n	8012a06 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8012a00:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012a02:	4293      	cmp	r3, r2
 8012a04:	d003      	beq.n	8012a0e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8012a06:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8012a0a:	f7ff bef5 	b.w	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8012a0e:	4770      	bx	lr

08012a10 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8012a10:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8012a14:	f7ff bef0 	b.w	80127f8 <_ZN8touchgfx4Line17updateCachedShapeEv>

08012a18 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8012a18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012a1c:	b0a0      	sub	sp, #128	; 0x80
 8012a1e:	4604      	mov	r4, r0
 8012a20:	460a      	mov	r2, r1
 8012a22:	4601      	mov	r1, r0
 8012a24:	a804      	add	r0, sp, #16
 8012a26:	f015 f845 	bl	8027ab4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8012a2a:	2300      	movs	r3, #0
 8012a2c:	9301      	str	r3, [sp, #4]
 8012a2e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8012a32:	2b01      	cmp	r3, #1
 8012a34:	d17c      	bne.n	8012b30 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8012a36:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8012a38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8012a3a:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8012a3c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012a3e:	1ac0      	subs	r0, r0, r3
 8012a40:	eba1 0102 	sub.w	r1, r1, r2
 8012a44:	d437      	bmi.n	8012ab6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8012a46:	2900      	cmp	r1, #0
 8012a48:	aa01      	add	r2, sp, #4
 8012a4a:	db2e      	blt.n	8012aaa <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8012a4c:	f7ff fe98 	bl	8012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012a50:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8012a54:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012a56:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012a58:	a804      	add	r0, sp, #16
 8012a5a:	f015 f9ab 	bl	8027db4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012a5e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012a60:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012a62:	a804      	add	r0, sp, #16
 8012a64:	f015 f9f3 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012a68:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012a6a:	2db3      	cmp	r5, #179	; 0xb3
 8012a6c:	dc33      	bgt.n	8012ad6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8012a6e:	eba6 0805 	sub.w	r8, r6, r5
 8012a72:	4640      	mov	r0, r8
 8012a74:	f7ff fdf2 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 8012a78:	a902      	add	r1, sp, #8
 8012a7a:	9002      	str	r0, [sp, #8]
 8012a7c:	a801      	add	r0, sp, #4
 8012a7e:	f7ff fcd5 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012a82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8012a84:	1847      	adds	r7, r0, r1
 8012a86:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012a8a:	f7ff fde7 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 8012a8e:	a903      	add	r1, sp, #12
 8012a90:	9003      	str	r0, [sp, #12]
 8012a92:	a801      	add	r0, sp, #4
 8012a94:	f7ff fcca 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012a98:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8012a9a:	4639      	mov	r1, r7
 8012a9c:	1a12      	subs	r2, r2, r0
 8012a9e:	a804      	add	r0, sp, #16
 8012aa0:	f015 f9d5 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012aa4:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012aa6:	441d      	add	r5, r3
 8012aa8:	e7df      	b.n	8012a6a <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8012aaa:	4249      	negs	r1, r1
 8012aac:	f7ff fe68 	bl	8012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012ab0:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8012ab4:	e7ce      	b.n	8012a54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012ab6:	2900      	cmp	r1, #0
 8012ab8:	f1c0 0000 	rsb	r0, r0, #0
 8012abc:	aa01      	add	r2, sp, #4
 8012abe:	db04      	blt.n	8012aca <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 8012ac0:	f7ff fe5e 	bl	8012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012ac4:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8012ac8:	e7c4      	b.n	8012a54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012aca:	4249      	negs	r1, r1
 8012acc:	f7ff fe58 	bl	8012780 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8012ad0:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8012ad4:	e7be      	b.n	8012a54 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8012ad6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012ad8:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012ada:	a804      	add	r0, sp, #16
 8012adc:	f015 f9b7 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012ae0:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012ae2:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012ae4:	a804      	add	r0, sp, #16
 8012ae6:	f015 f9b2 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012aea:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8012aec:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 8012af0:	2d00      	cmp	r5, #0
 8012af2:	dd31      	ble.n	8012b58 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8012af4:	eb05 0806 	add.w	r8, r5, r6
 8012af8:	4640      	mov	r0, r8
 8012afa:	f7ff fdaf 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 8012afe:	a902      	add	r1, sp, #8
 8012b00:	9002      	str	r0, [sp, #8]
 8012b02:	a801      	add	r0, sp, #4
 8012b04:	f7ff fc92 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012b08:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8012b0a:	1847      	adds	r7, r0, r1
 8012b0c:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8012b10:	f7ff fda4 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 8012b14:	a903      	add	r1, sp, #12
 8012b16:	9003      	str	r0, [sp, #12]
 8012b18:	a801      	add	r0, sp, #4
 8012b1a:	f7ff fc87 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8012b1e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8012b20:	4639      	mov	r1, r7
 8012b22:	1a12      	subs	r2, r2, r0
 8012b24:	a804      	add	r0, sp, #16
 8012b26:	f015 f992 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b2a:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8012b2c:	1aed      	subs	r5, r5, r3
 8012b2e:	e7df      	b.n	8012af0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8012b30:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8012b32:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8012b34:	a804      	add	r0, sp, #16
 8012b36:	f015 f93d 	bl	8027db4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8012b3a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8012b3c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8012b3e:	a804      	add	r0, sp, #16
 8012b40:	f015 f985 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b44:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8012b46:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8012b48:	a804      	add	r0, sp, #16
 8012b4a:	f015 f980 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b4e:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8012b50:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8012b52:	a804      	add	r0, sp, #16
 8012b54:	f015 f97b 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8012b58:	21ff      	movs	r1, #255	; 0xff
 8012b5a:	a804      	add	r0, sp, #16
 8012b5c:	f015 f866 	bl	8027c2c <_ZN8touchgfx6Canvas6renderEh>
 8012b60:	4b04      	ldr	r3, [pc, #16]	; (8012b74 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 8012b62:	9304      	str	r3, [sp, #16]
 8012b64:	4604      	mov	r4, r0
 8012b66:	a80c      	add	r0, sp, #48	; 0x30
 8012b68:	f001 fa98 	bl	801409c <_ZN8touchgfx7OutlineD1Ev>
 8012b6c:	4620      	mov	r0, r4
 8012b6e:	b020      	add	sp, #128	; 0x80
 8012b70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012b74:	0802fde8 	.word	0x0802fde8

08012b78 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8012b78:	2000      	movs	r0, #0
 8012b7a:	4770      	bx	lr

08012b7c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8012b7c:	4b07      	ldr	r3, [pc, #28]	; (8012b9c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8012b7e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012b80:	881b      	ldrh	r3, [r3, #0]
 8012b82:	4293      	cmp	r3, r2
 8012b84:	bf81      	itttt	hi
 8012b86:	4b06      	ldrhi	r3, [pc, #24]	; (8012ba0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8012b88:	681b      	ldrhi	r3, [r3, #0]
 8012b8a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8012b8e:	7858      	ldrbhi	r0, [r3, #1]
 8012b90:	bf8c      	ite	hi
 8012b92:	f000 0003 	andhi.w	r0, r0, #3
 8012b96:	2000      	movls	r0, #0
 8012b98:	4770      	bx	lr
 8012b9a:	bf00      	nop
 8012b9c:	20013848 	.word	0x20013848
 8012ba0:	20013844 	.word	0x20013844

08012ba4 <_ZN8touchgfx8TextAreaD1Ev>:
 8012ba4:	4770      	bx	lr
	...

08012ba8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8012ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bac:	4b10      	ldr	r3, [pc, #64]	; (8012bf0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8012bae:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012bb0:	881b      	ldrh	r3, [r3, #0]
 8012bb2:	428b      	cmp	r3, r1
 8012bb4:	4604      	mov	r4, r0
 8012bb6:	d918      	bls.n	8012bea <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8012bb8:	6803      	ldr	r3, [r0, #0]
 8012bba:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 8012bbc:	4b0d      	ldr	r3, [pc, #52]	; (8012bf4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8012bbe:	6818      	ldr	r0, [r3, #0]
 8012bc0:	f7f5 fec2 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8012bc4:	6823      	ldr	r3, [r4, #0]
 8012bc6:	4606      	mov	r6, r0
 8012bc8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012bca:	4620      	mov	r0, r4
 8012bcc:	4798      	blx	r3
 8012bce:	6823      	ldr	r3, [r4, #0]
 8012bd0:	4607      	mov	r7, r0
 8012bd2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012bd6:	4620      	mov	r0, r4
 8012bd8:	4798      	blx	r3
 8012bda:	463a      	mov	r2, r7
 8012bdc:	4603      	mov	r3, r0
 8012bde:	4631      	mov	r1, r6
 8012be0:	4620      	mov	r0, r4
 8012be2:	46ac      	mov	ip, r5
 8012be4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012be8:	4760      	bx	ip
 8012bea:	2000      	movs	r0, #0
 8012bec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012bf0:	20013848 	.word	0x20013848
 8012bf4:	20013850 	.word	0x20013850

08012bf8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8012bf8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8012bfc:	4b17      	ldr	r3, [pc, #92]	; (8012c5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8012bfe:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8012c00:	881b      	ldrh	r3, [r3, #0]
 8012c02:	428b      	cmp	r3, r1
 8012c04:	4604      	mov	r4, r0
 8012c06:	d926      	bls.n	8012c56 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8012c08:	4b15      	ldr	r3, [pc, #84]	; (8012c60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8012c0a:	681b      	ldr	r3, [r3, #0]
 8012c0c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8012c10:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8012c14:	4b13      	ldr	r3, [pc, #76]	; (8012c64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8012c16:	7855      	ldrb	r5, [r2, #1]
 8012c18:	681b      	ldr	r3, [r3, #0]
 8012c1a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8012c1e:	6833      	ldr	r3, [r6, #0]
 8012c20:	69df      	ldr	r7, [r3, #28]
 8012c22:	4b11      	ldr	r3, [pc, #68]	; (8012c68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8012c24:	6818      	ldr	r0, [r3, #0]
 8012c26:	f7f5 fe8f 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8012c2a:	6823      	ldr	r3, [r4, #0]
 8012c2c:	4680      	mov	r8, r0
 8012c2e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012c30:	4620      	mov	r0, r4
 8012c32:	4798      	blx	r3
 8012c34:	6823      	ldr	r3, [r4, #0]
 8012c36:	4681      	mov	r9, r0
 8012c38:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012c3c:	4620      	mov	r0, r4
 8012c3e:	4798      	blx	r3
 8012c40:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8012c44:	9000      	str	r0, [sp, #0]
 8012c46:	464b      	mov	r3, r9
 8012c48:	4642      	mov	r2, r8
 8012c4a:	4629      	mov	r1, r5
 8012c4c:	4630      	mov	r0, r6
 8012c4e:	47b8      	blx	r7
 8012c50:	b003      	add	sp, #12
 8012c52:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012c56:	2000      	movs	r0, #0
 8012c58:	e7fa      	b.n	8012c50 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8012c5a:	bf00      	nop
 8012c5c:	20013848 	.word	0x20013848
 8012c60:	20013844 	.word	0x20013844
 8012c64:	2001384c 	.word	0x2001384c
 8012c68:	20013850 	.word	0x20013850

08012c6c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8012c6c:	b40e      	push	{r1, r2, r3}
 8012c6e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012c72:	4b2f      	ldr	r3, [pc, #188]	; (8012d30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8012c74:	881a      	ldrh	r2, [r3, #0]
 8012c76:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8012c78:	429a      	cmp	r2, r3
 8012c7a:	b09d      	sub	sp, #116	; 0x74
 8012c7c:	4604      	mov	r4, r0
 8012c7e:	d954      	bls.n	8012d2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8012c80:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8012d34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8012c84:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8012d38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8012c88:	aa26      	add	r2, sp, #152	; 0x98
 8012c8a:	9202      	str	r2, [sp, #8]
 8012c8c:	f8d9 2000 	ldr.w	r2, [r9]
 8012c90:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012c94:	f8d8 3000 	ldr.w	r3, [r8]
 8012c98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012c9c:	682b      	ldr	r3, [r5, #0]
 8012c9e:	4628      	mov	r0, r5
 8012ca0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012ca2:	4798      	blx	r3
 8012ca4:	b207      	sxth	r7, r0
 8012ca6:	4606      	mov	r6, r0
 8012ca8:	a803      	add	r0, sp, #12
 8012caa:	f005 fc61 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8012cae:	682b      	ldr	r3, [r5, #0]
 8012cb0:	4628      	mov	r0, r5
 8012cb2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012cb4:	4798      	blx	r3
 8012cb6:	682b      	ldr	r3, [r5, #0]
 8012cb8:	4682      	mov	sl, r0
 8012cba:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012cbc:	4628      	mov	r0, r5
 8012cbe:	4798      	blx	r3
 8012cc0:	4653      	mov	r3, sl
 8012cc2:	9000      	str	r0, [sp, #0]
 8012cc4:	9a02      	ldr	r2, [sp, #8]
 8012cc6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8012cc8:	a803      	add	r0, sp, #12
 8012cca:	f005 fcac 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012cce:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012cd0:	f8d9 3000 	ldr.w	r3, [r9]
 8012cd4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8012cd8:	8925      	ldrh	r5, [r4, #8]
 8012cda:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8012cde:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8012ce2:	eba5 050c 	sub.w	r5, r5, ip
 8012ce6:	784a      	ldrb	r2, [r1, #1]
 8012ce8:	f8d8 3000 	ldr.w	r3, [r8]
 8012cec:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8012cf0:	b22d      	sxth	r5, r5
 8012cf2:	9500      	str	r5, [sp, #0]
 8012cf4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8012cf8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012cfc:	a803      	add	r0, sp, #12
 8012cfe:	f003 f8b9 	bl	8015e74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8012d02:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8012d06:	18b9      	adds	r1, r7, r2
 8012d08:	2900      	cmp	r1, #0
 8012d0a:	b203      	sxth	r3, r0
 8012d0c:	dd0b      	ble.n	8012d26 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8012d0e:	3b01      	subs	r3, #1
 8012d10:	fb13 f302 	smulbb	r3, r3, r2
 8012d14:	fb16 3300 	smlabb	r3, r6, r0, r3
 8012d18:	b21f      	sxth	r7, r3
 8012d1a:	4638      	mov	r0, r7
 8012d1c:	b01d      	add	sp, #116	; 0x74
 8012d1e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012d22:	b003      	add	sp, #12
 8012d24:	4770      	bx	lr
 8012d26:	2b00      	cmp	r3, #0
 8012d28:	dcf7      	bgt.n	8012d1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012d2a:	2700      	movs	r7, #0
 8012d2c:	e7f5      	b.n	8012d1a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8012d2e:	bf00      	nop
 8012d30:	20013848 	.word	0x20013848
 8012d34:	20013844 	.word	0x20013844
 8012d38:	2001384c 	.word	0x2001384c

08012d3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8012d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d40:	4bbc      	ldr	r3, [pc, #752]	; (8013034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8012d42:	460c      	mov	r4, r1
 8012d44:	881b      	ldrh	r3, [r3, #0]
 8012d46:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8012d48:	428b      	cmp	r3, r1
 8012d4a:	b0a9      	sub	sp, #164	; 0xa4
 8012d4c:	4680      	mov	r8, r0
 8012d4e:	d809      	bhi.n	8012d64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8012d50:	2300      	movs	r3, #0
 8012d52:	f04f 32ff 	mov.w	r2, #4294967295
 8012d56:	e9c0 3200 	strd	r3, r2, [r0]
 8012d5a:	6083      	str	r3, [r0, #8]
 8012d5c:	4640      	mov	r0, r8
 8012d5e:	b029      	add	sp, #164	; 0xa4
 8012d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d64:	4eb4      	ldr	r6, [pc, #720]	; (8013038 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8012d66:	6833      	ldr	r3, [r6, #0]
 8012d68:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8012d6c:	4bb3      	ldr	r3, [pc, #716]	; (801303c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8012d6e:	681b      	ldr	r3, [r3, #0]
 8012d70:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8012d74:	4bb2      	ldr	r3, [pc, #712]	; (8013040 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012d76:	6818      	ldr	r0, [r3, #0]
 8012d78:	f7f5 fde6 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8012d7c:	682b      	ldr	r3, [r5, #0]
 8012d7e:	4681      	mov	r9, r0
 8012d80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012d82:	4628      	mov	r0, r5
 8012d84:	4798      	blx	r3
 8012d86:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8012d88:	b203      	sxth	r3, r0
 8012d8a:	4407      	add	r7, r0
 8012d8c:	9304      	str	r3, [sp, #16]
 8012d8e:	b2bb      	uxth	r3, r7
 8012d90:	9303      	str	r3, [sp, #12]
 8012d92:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012d96:	4682      	mov	sl, r0
 8012d98:	a80f      	add	r0, sp, #60	; 0x3c
 8012d9a:	2b00      	cmp	r3, #0
 8012d9c:	f040 80a6 	bne.w	8012eec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8012da0:	f005 fbe6 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8012da4:	682b      	ldr	r3, [r5, #0]
 8012da6:	4628      	mov	r0, r5
 8012da8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012daa:	4798      	blx	r3
 8012dac:	682b      	ldr	r3, [r5, #0]
 8012dae:	4606      	mov	r6, r0
 8012db0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012db2:	4628      	mov	r0, r5
 8012db4:	4798      	blx	r3
 8012db6:	6823      	ldr	r3, [r4, #0]
 8012db8:	4607      	mov	r7, r0
 8012dba:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012dbc:	4620      	mov	r0, r4
 8012dbe:	4798      	blx	r3
 8012dc0:	6823      	ldr	r3, [r4, #0]
 8012dc2:	4683      	mov	fp, r0
 8012dc4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012dc8:	4620      	mov	r0, r4
 8012dca:	4798      	blx	r3
 8012dcc:	463b      	mov	r3, r7
 8012dce:	e9cd b000 	strd	fp, r0, [sp]
 8012dd2:	4649      	mov	r1, r9
 8012dd4:	4632      	mov	r2, r6
 8012dd6:	a80f      	add	r0, sp, #60	; 0x3c
 8012dd8:	f005 fc3a 	bl	8018650 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012ddc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012de0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8013038 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8012de4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012de8:	f04f 0600 	mov.w	r6, #0
 8012dec:	bf0c      	ite	eq
 8012dee:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8012df2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8012df6:	4637      	mov	r7, r6
 8012df8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8012dfa:	f8db 3000 	ldr.w	r3, [fp]
 8012dfe:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012e02:	4629      	mov	r1, r5
 8012e04:	785b      	ldrb	r3, [r3, #1]
 8012e06:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8012e0a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012e0e:	a80f      	add	r0, sp, #60	; 0x3c
 8012e10:	f002 fd4b 	bl	80158aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8012e14:	9b03      	ldr	r3, [sp, #12]
 8012e16:	4286      	cmp	r6, r0
 8012e18:	bfb8      	it	lt
 8012e1a:	4606      	movlt	r6, r0
 8012e1c:	3701      	adds	r7, #1
 8012e1e:	eba9 0903 	sub.w	r9, r9, r3
 8012e22:	a80f      	add	r0, sp, #60	; 0x3c
 8012e24:	b236      	sxth	r6, r6
 8012e26:	b2bf      	uxth	r7, r7
 8012e28:	fa0f f989 	sxth.w	r9, r9
 8012e2c:	f005 fbc7 	bl	80185be <_ZN8touchgfx12TextProvider11endOfStringEv>
 8012e30:	b918      	cbnz	r0, 8012e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8012e32:	7a2b      	ldrb	r3, [r5, #8]
 8012e34:	444b      	add	r3, r9
 8012e36:	2b00      	cmp	r3, #0
 8012e38:	dcde      	bgt.n	8012df8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8012e3a:	9b03      	ldr	r3, [sp, #12]
 8012e3c:	9a04      	ldr	r2, [sp, #16]
 8012e3e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8012e42:	fb13 f707 	smulbb	r7, r3, r7
 8012e46:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012e48:	1aff      	subs	r7, r7, r3
 8012e4a:	b2bf      	uxth	r7, r7
 8012e4c:	b23b      	sxth	r3, r7
 8012e4e:	429a      	cmp	r2, r3
 8012e50:	bfa8      	it	ge
 8012e52:	4657      	movge	r7, sl
 8012e54:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012e58:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012e5c:	6823      	ldr	r3, [r4, #0]
 8012e5e:	bf08      	it	eq
 8012e60:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8012e64:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8012e66:	bf18      	it	ne
 8012e68:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8012e6c:	4620      	mov	r0, r4
 8012e6e:	4798      	blx	r3
 8012e70:	444f      	add	r7, r9
 8012e72:	fa1f f987 	uxth.w	r9, r7
 8012e76:	2801      	cmp	r0, #1
 8012e78:	fa0f f789 	sxth.w	r7, r9
 8012e7c:	b2b3      	uxth	r3, r6
 8012e7e:	f000 80e1 	beq.w	8013044 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8012e82:	2802      	cmp	r0, #2
 8012e84:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8012e88:	f000 80e2 	beq.w	8013050 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8012e8c:	7aea      	ldrb	r2, [r5, #11]
 8012e8e:	7b2d      	ldrb	r5, [r5, #12]
 8012e90:	b236      	sxth	r6, r6
 8012e92:	1ab6      	subs	r6, r6, r2
 8012e94:	442a      	add	r2, r5
 8012e96:	4413      	add	r3, r2
 8012e98:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8012e9c:	fa1f fa86 	uxth.w	sl, r6
 8012ea0:	b29b      	uxth	r3, r3
 8012ea2:	2a02      	cmp	r2, #2
 8012ea4:	fa0f fb8a 	sxth.w	fp, sl
 8012ea8:	b21e      	sxth	r6, r3
 8012eaa:	f000 80d5 	beq.w	8013058 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8012eae:	2a03      	cmp	r2, #3
 8012eb0:	f000 80dd 	beq.w	801306e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8012eb4:	2a01      	cmp	r2, #1
 8012eb6:	f040 80e5 	bne.w	8013084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8012eba:	8925      	ldrh	r5, [r4, #8]
 8012ebc:	4633      	mov	r3, r6
 8012ebe:	eba5 0909 	sub.w	r9, r5, r9
 8012ec2:	463e      	mov	r6, r7
 8012ec4:	465d      	mov	r5, fp
 8012ec6:	461f      	mov	r7, r3
 8012ec8:	fa0f fb89 	sxth.w	fp, r9
 8012ecc:	4b5c      	ldr	r3, [pc, #368]	; (8013040 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8012ece:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012ed0:	6818      	ldr	r0, [r3, #0]
 8012ed2:	f7f5 fd39 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8012ed6:	f8a8 b000 	strh.w	fp, [r8]
 8012eda:	f8a8 5002 	strh.w	r5, [r8, #2]
 8012ede:	f8a8 6004 	strh.w	r6, [r8, #4]
 8012ee2:	f8a8 7006 	strh.w	r7, [r8, #6]
 8012ee6:	f8c8 0008 	str.w	r0, [r8, #8]
 8012eea:	e737      	b.n	8012d5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8012eec:	f005 fb40 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8012ef0:	682b      	ldr	r3, [r5, #0]
 8012ef2:	4628      	mov	r0, r5
 8012ef4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012ef6:	4798      	blx	r3
 8012ef8:	682b      	ldr	r3, [r5, #0]
 8012efa:	4607      	mov	r7, r0
 8012efc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012efe:	4628      	mov	r0, r5
 8012f00:	4798      	blx	r3
 8012f02:	6823      	ldr	r3, [r4, #0]
 8012f04:	4683      	mov	fp, r0
 8012f06:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012f08:	4620      	mov	r0, r4
 8012f0a:	4798      	blx	r3
 8012f0c:	6822      	ldr	r2, [r4, #0]
 8012f0e:	9005      	str	r0, [sp, #20]
 8012f10:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8012f14:	4620      	mov	r0, r4
 8012f16:	4790      	blx	r2
 8012f18:	9b05      	ldr	r3, [sp, #20]
 8012f1a:	9001      	str	r0, [sp, #4]
 8012f1c:	463a      	mov	r2, r7
 8012f1e:	4649      	mov	r1, r9
 8012f20:	9300      	str	r3, [sp, #0]
 8012f22:	a80f      	add	r0, sp, #60	; 0x3c
 8012f24:	465b      	mov	r3, fp
 8012f26:	f005 fb93 	bl	8018650 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8012f2a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012f2e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8012f32:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012f34:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8012f38:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012f3c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012f40:	bf0a      	itet	eq
 8012f42:	464a      	moveq	r2, r9
 8012f44:	461a      	movne	r2, r3
 8012f46:	4699      	moveq	r9, r3
 8012f48:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8012f4c:	1ad2      	subs	r2, r2, r3
 8012f4e:	6833      	ldr	r3, [r6, #0]
 8012f50:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8012f54:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012f58:	af0f      	add	r7, sp, #60	; 0x3c
 8012f5a:	7859      	ldrb	r1, [r3, #1]
 8012f5c:	9707      	str	r7, [sp, #28]
 8012f5e:	2300      	movs	r3, #0
 8012f60:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012f64:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012f68:	f88d 1020 	strb.w	r1, [sp, #32]
 8012f6c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8012f70:	9509      	str	r5, [sp, #36]	; 0x24
 8012f72:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012f76:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8012f7a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8012f7e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012f82:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8012f86:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8012f8a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8012f8e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8012f92:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012f96:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8012f9a:	b350      	cbz	r0, 8012ff2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012f9c:	682b      	ldr	r3, [r5, #0]
 8012f9e:	4628      	mov	r0, r5
 8012fa0:	695b      	ldr	r3, [r3, #20]
 8012fa2:	4798      	blx	r3
 8012fa4:	4607      	mov	r7, r0
 8012fa6:	b320      	cbz	r0, 8012ff2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012fa8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012faa:	6803      	ldr	r3, [r0, #0]
 8012fac:	4639      	mov	r1, r7
 8012fae:	68db      	ldr	r3, [r3, #12]
 8012fb0:	4798      	blx	r3
 8012fb2:	4606      	mov	r6, r0
 8012fb4:	b1e8      	cbz	r0, 8012ff2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012fb6:	7b43      	ldrb	r3, [r0, #13]
 8012fb8:	7a82      	ldrb	r2, [r0, #10]
 8012fba:	005b      	lsls	r3, r3, #1
 8012fbc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012fc0:	4313      	orrs	r3, r2
 8012fc2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8012fc6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8012fca:	2b06      	cmp	r3, #6
 8012fcc:	d111      	bne.n	8012ff2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012fce:	9809      	ldr	r0, [sp, #36]	; 0x24
 8012fd0:	6803      	ldr	r3, [r0, #0]
 8012fd2:	4632      	mov	r2, r6
 8012fd4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012fd6:	4639      	mov	r1, r7
 8012fd8:	4798      	blx	r3
 8012fda:	7b73      	ldrb	r3, [r6, #13]
 8012fdc:	005b      	lsls	r3, r3, #1
 8012fde:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012fe2:	7ab3      	ldrb	r3, [r6, #10]
 8012fe4:	4313      	orrs	r3, r2
 8012fe6:	4418      	add	r0, r3
 8012fe8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8012fec:	4418      	add	r0, r3
 8012fee:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8012ff2:	2600      	movs	r6, #0
 8012ff4:	4637      	mov	r7, r6
 8012ff6:	a806      	add	r0, sp, #24
 8012ff8:	f002 fe38 	bl	8015c6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8012ffc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8013000:	9b03      	ldr	r3, [sp, #12]
 8013002:	4286      	cmp	r6, r0
 8013004:	eba9 0903 	sub.w	r9, r9, r3
 8013008:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 801300c:	bfb8      	it	lt
 801300e:	4606      	movlt	r6, r0
 8013010:	3701      	adds	r7, #1
 8013012:	b236      	sxth	r6, r6
 8013014:	b2bf      	uxth	r7, r7
 8013016:	fa0f f989 	sxth.w	r9, r9
 801301a:	2b00      	cmp	r3, #0
 801301c:	f43f af0d 	beq.w	8012e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013020:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8013024:	2b00      	cmp	r3, #0
 8013026:	f47f af08 	bne.w	8012e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801302a:	7a2b      	ldrb	r3, [r5, #8]
 801302c:	444b      	add	r3, r9
 801302e:	2b00      	cmp	r3, #0
 8013030:	dce1      	bgt.n	8012ff6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8013032:	e702      	b.n	8012e3a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8013034:	20013848 	.word	0x20013848
 8013038:	20013844 	.word	0x20013844
 801303c:	2001384c 	.word	0x2001384c
 8013040:	20013850 	.word	0x20013850
 8013044:	ebaa 0606 	sub.w	r6, sl, r6
 8013048:	2002      	movs	r0, #2
 801304a:	fb96 f6f0 	sdiv	r6, r6, r0
 801304e:	e71d      	b.n	8012e8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013050:	441e      	add	r6, r3
 8013052:	ebaa 0606 	sub.w	r6, sl, r6
 8013056:	e719      	b.n	8012e8c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8013058:	8925      	ldrh	r5, [r4, #8]
 801305a:	1aed      	subs	r5, r5, r3
 801305c:	eba5 050a 	sub.w	r5, r5, sl
 8013060:	fa0f fb85 	sxth.w	fp, r5
 8013064:	8965      	ldrh	r5, [r4, #10]
 8013066:	eba5 0509 	sub.w	r5, r5, r9
 801306a:	b22d      	sxth	r5, r5
 801306c:	e72e      	b.n	8012ecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801306e:	8965      	ldrh	r5, [r4, #10]
 8013070:	1aed      	subs	r5, r5, r3
 8013072:	eba5 050a 	sub.w	r5, r5, sl
 8013076:	4633      	mov	r3, r6
 8013078:	b22d      	sxth	r5, r5
 801307a:	463e      	mov	r6, r7
 801307c:	f04f 0b00 	mov.w	fp, #0
 8013080:	461f      	mov	r7, r3
 8013082:	e723      	b.n	8012ecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8013084:	2500      	movs	r5, #0
 8013086:	e721      	b.n	8012ecc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08013088 <_ZN8touchgfx8TextAreaD0Ev>:
 8013088:	b510      	push	{r4, lr}
 801308a:	2148      	movs	r1, #72	; 0x48
 801308c:	4604      	mov	r4, r0
 801308e:	f017 fc54 	bl	802a93a <_ZdlPvj>
 8013092:	4620      	mov	r0, r4
 8013094:	bd10      	pop	{r4, pc}
	...

08013098 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8013098:	b513      	push	{r0, r1, r4, lr}
 801309a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801309e:	4604      	mov	r4, r0
 80130a0:	b1fb      	cbz	r3, 80130e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80130a2:	4b16      	ldr	r3, [pc, #88]	; (80130fc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80130a4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80130a6:	881b      	ldrh	r3, [r3, #0]
 80130a8:	428b      	cmp	r3, r1
 80130aa:	d91a      	bls.n	80130e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80130ac:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80130b0:	2b00      	cmp	r3, #0
 80130b2:	dd16      	ble.n	80130e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80130b4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80130b8:	2b00      	cmp	r3, #0
 80130ba:	dd12      	ble.n	80130e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80130bc:	4b10      	ldr	r3, [pc, #64]	; (8013100 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80130be:	6818      	ldr	r0, [r3, #0]
 80130c0:	f7f5 fc42 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 80130c4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80130c8:	6822      	ldr	r2, [r4, #0]
 80130ca:	2b00      	cmp	r3, #0
 80130cc:	db06      	blt.n	80130dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80130ce:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80130d2:	2b00      	cmp	r3, #0
 80130d4:	db02      	blt.n	80130dc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80130d6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80130d8:	4298      	cmp	r0, r3
 80130da:	d004      	beq.n	80130e6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80130dc:	6953      	ldr	r3, [r2, #20]
 80130de:	4620      	mov	r0, r4
 80130e0:	4798      	blx	r3
 80130e2:	b002      	add	sp, #8
 80130e4:	bd10      	pop	{r4, pc}
 80130e6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80130ea:	c903      	ldmia	r1, {r0, r1}
 80130ec:	466b      	mov	r3, sp
 80130ee:	e883 0003 	stmia.w	r3, {r0, r1}
 80130f2:	6912      	ldr	r2, [r2, #16]
 80130f4:	4619      	mov	r1, r3
 80130f6:	4620      	mov	r0, r4
 80130f8:	4790      	blx	r2
 80130fa:	e7f2      	b.n	80130e2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80130fc:	20013848 	.word	0x20013848
 8013100:	20013850 	.word	0x20013850

08013104 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8013104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013108:	4b44      	ldr	r3, [pc, #272]	; (801321c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801310a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801310c:	881b      	ldrh	r3, [r3, #0]
 801310e:	4293      	cmp	r3, r2
 8013110:	b08e      	sub	sp, #56	; 0x38
 8013112:	4604      	mov	r4, r0
 8013114:	d97e      	bls.n	8013214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013116:	6808      	ldr	r0, [r1, #0]
 8013118:	4d41      	ldr	r5, [pc, #260]	; (8013220 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801311a:	6849      	ldr	r1, [r1, #4]
 801311c:	ab05      	add	r3, sp, #20
 801311e:	c303      	stmia	r3!, {r0, r1}
 8013120:	4611      	mov	r1, r2
 8013122:	6828      	ldr	r0, [r5, #0]
 8013124:	f7f5 fc10 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8013128:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801312c:	2b00      	cmp	r3, #0
 801312e:	db11      	blt.n	8013154 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013130:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8013134:	2b00      	cmp	r3, #0
 8013136:	db0d      	blt.n	8013154 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8013138:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801313a:	4298      	cmp	r0, r3
 801313c:	d10a      	bne.n	8013154 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801313e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8013142:	e892 0003 	ldmia.w	r2, {r0, r1}
 8013146:	ab09      	add	r3, sp, #36	; 0x24
 8013148:	e883 0003 	stmia.w	r3, {r0, r1}
 801314c:	4619      	mov	r1, r3
 801314e:	a805      	add	r0, sp, #20
 8013150:	f7fd fbec 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8013154:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013158:	2b00      	cmp	r3, #0
 801315a:	dd5b      	ble.n	8013214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801315c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013160:	2b00      	cmp	r3, #0
 8013162:	dd57      	ble.n	8013214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8013164:	4f2f      	ldr	r7, [pc, #188]	; (8013224 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8013166:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013168:	683b      	ldr	r3, [r7, #0]
 801316a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801316e:	4b2e      	ldr	r3, [pc, #184]	; (8013228 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8013170:	681b      	ldr	r3, [r3, #0]
 8013172:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013176:	2e00      	cmp	r6, #0
 8013178:	d04c      	beq.n	8013214 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801317a:	6823      	ldr	r3, [r4, #0]
 801317c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8013180:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013182:	4620      	mov	r0, r4
 8013184:	4798      	blx	r3
 8013186:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8013188:	683b      	ldr	r3, [r7, #0]
 801318a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801318e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8013192:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8013196:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8013198:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801319c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80131a0:	785b      	ldrb	r3, [r3, #1]
 80131a2:	9609      	str	r6, [sp, #36]	; 0x24
 80131a4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80131a8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80131ac:	4b1f      	ldr	r3, [pc, #124]	; (801322c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80131ae:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80131b2:	681b      	ldr	r3, [r3, #0]
 80131b4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80131b8:	910b      	str	r1, [sp, #44]	; 0x2c
 80131ba:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80131be:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80131c2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80131c6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80131ca:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80131ce:	b10a      	cbz	r2, 80131d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80131d0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80131d2:	b906      	cbnz	r6, 80131d6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80131d4:	689e      	ldr	r6, [r3, #8]
 80131d6:	af07      	add	r7, sp, #28
 80131d8:	4621      	mov	r1, r4
 80131da:	4638      	mov	r0, r7
 80131dc:	f004 fc7c 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80131e0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80131e2:	6828      	ldr	r0, [r5, #0]
 80131e4:	f7f5 fbb0 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 80131e8:	6823      	ldr	r3, [r4, #0]
 80131ea:	4605      	mov	r5, r0
 80131ec:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80131ee:	4620      	mov	r0, r4
 80131f0:	4798      	blx	r3
 80131f2:	6823      	ldr	r3, [r4, #0]
 80131f4:	4680      	mov	r8, r0
 80131f6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80131fa:	4620      	mov	r0, r4
 80131fc:	4798      	blx	r3
 80131fe:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8013202:	ab09      	add	r3, sp, #36	; 0x24
 8013204:	9300      	str	r3, [sp, #0]
 8013206:	9501      	str	r5, [sp, #4]
 8013208:	ab05      	add	r3, sp, #20
 801320a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801320e:	4630      	mov	r0, r6
 8013210:	f7f5 fb4c 	bl	80088ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013214:	b00e      	add	sp, #56	; 0x38
 8013216:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801321a:	bf00      	nop
 801321c:	20013848 	.word	0x20013848
 8013220:	20013850 	.word	0x20013850
 8013224:	20013844 	.word	0x20013844
 8013228:	2001384c 	.word	0x2001384c
 801322c:	200137ec 	.word	0x200137ec

08013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8013230:	b538      	push	{r3, r4, r5, lr}
 8013232:	4b0e      	ldr	r3, [pc, #56]	; (801326c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8013234:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013236:	881b      	ldrh	r3, [r3, #0]
 8013238:	429a      	cmp	r2, r3
 801323a:	4604      	mov	r4, r0
 801323c:	d214      	bcs.n	8013268 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801323e:	6803      	ldr	r3, [r0, #0]
 8013240:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013242:	4798      	blx	r3
 8013244:	6823      	ldr	r3, [r4, #0]
 8013246:	4605      	mov	r5, r0
 8013248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801324a:	4620      	mov	r0, r4
 801324c:	4798      	blx	r3
 801324e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013252:	b22d      	sxth	r5, r5
 8013254:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8013258:	4601      	mov	r1, r0
 801325a:	bf06      	itte	eq
 801325c:	4602      	moveq	r2, r0
 801325e:	4629      	moveq	r1, r5
 8013260:	462a      	movne	r2, r5
 8013262:	4620      	mov	r0, r4
 8013264:	f7fd f942 	bl	80104ec <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8013268:	bd38      	pop	{r3, r4, r5, pc}
 801326a:	bf00      	nop
 801326c:	20013848 	.word	0x20013848

08013270 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8013270:	b530      	push	{r4, r5, lr}
 8013272:	888b      	ldrh	r3, [r1, #4]
 8013274:	8583      	strh	r3, [r0, #44]	; 0x2c
 8013276:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801327a:	b085      	sub	sp, #20
 801327c:	4604      	mov	r4, r0
 801327e:	b923      	cbnz	r3, 801328a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013280:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013284:	b90b      	cbnz	r3, 801328a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8013286:	f7ff ffd3 	bl	8013230 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801328a:	6823      	ldr	r3, [r4, #0]
 801328c:	466d      	mov	r5, sp
 801328e:	4621      	mov	r1, r4
 8013290:	4628      	mov	r0, r5
 8013292:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8013296:	4798      	blx	r3
 8013298:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801329c:	343c      	adds	r4, #60	; 0x3c
 801329e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80132a2:	b005      	add	sp, #20
 80132a4:	bd30      	pop	{r4, r5, pc}

080132a6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80132a6:	2300      	movs	r3, #0
 80132a8:	8083      	strh	r3, [r0, #4]
 80132aa:	80c3      	strh	r3, [r0, #6]
 80132ac:	8003      	strh	r3, [r0, #0]
 80132ae:	8043      	strh	r3, [r0, #2]
 80132b0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 80132b4:	2bff      	cmp	r3, #255	; 0xff
 80132b6:	bf01      	itttt	eq
 80132b8:	890b      	ldrheq	r3, [r1, #8]
 80132ba:	8083      	strheq	r3, [r0, #4]
 80132bc:	894b      	ldrheq	r3, [r1, #10]
 80132be:	80c3      	strheq	r3, [r0, #6]
 80132c0:	4770      	bx	lr
	...

080132c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80132c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80132c6:	4604      	mov	r4, r0
 80132c8:	6808      	ldr	r0, [r1, #0]
 80132ca:	6849      	ldr	r1, [r1, #4]
 80132cc:	466b      	mov	r3, sp
 80132ce:	c303      	stmia	r3!, {r0, r1}
 80132d0:	6823      	ldr	r3, [r4, #0]
 80132d2:	4669      	mov	r1, sp
 80132d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80132d6:	4620      	mov	r0, r4
 80132d8:	4798      	blx	r3
 80132da:	4b08      	ldr	r3, [pc, #32]	; (80132fc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80132dc:	681b      	ldr	r3, [r3, #0]
 80132de:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80132e2:	b10a      	cbz	r2, 80132e8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80132e4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80132e6:	b900      	cbnz	r0, 80132ea <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80132e8:	6898      	ldr	r0, [r3, #8]
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80132ee:	6a1d      	ldr	r5, [r3, #32]
 80132f0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80132f4:	4669      	mov	r1, sp
 80132f6:	47a8      	blx	r5
 80132f8:	b003      	add	sp, #12
 80132fa:	bd30      	pop	{r4, r5, pc}
 80132fc:	200137ec 	.word	0x200137ec

08013300 <_ZN8touchgfx3BoxD1Ev>:
 8013300:	4770      	bx	lr

08013302 <_ZN8touchgfx3BoxD0Ev>:
 8013302:	b510      	push	{r4, lr}
 8013304:	212c      	movs	r1, #44	; 0x2c
 8013306:	4604      	mov	r4, r0
 8013308:	f017 fb17 	bl	802a93a <_ZdlPvj>
 801330c:	4620      	mov	r0, r4
 801330e:	bd10      	pop	{r4, pc}

08013310 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013310:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8013314:	b12a      	cbz	r2, 8013322 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013316:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801331a:	b112      	cbz	r2, 8013322 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801331c:	6803      	ldr	r3, [r0, #0]
 801331e:	695b      	ldr	r3, [r3, #20]
 8013320:	4718      	bx	r3
 8013322:	4770      	bx	lr

08013324 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8013324:	b570      	push	{r4, r5, r6, lr}
 8013326:	6803      	ldr	r3, [r0, #0]
 8013328:	4604      	mov	r4, r0
 801332a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801332c:	4615      	mov	r5, r2
 801332e:	4798      	blx	r3
 8013330:	6823      	ldr	r3, [r4, #0]
 8013332:	4629      	mov	r1, r5
 8013334:	4620      	mov	r0, r4
 8013336:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8013338:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801333c:	4718      	bx	r3

0801333e <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801333e:	b570      	push	{r4, r5, r6, lr}
 8013340:	6803      	ldr	r3, [r0, #0]
 8013342:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8013344:	4604      	mov	r4, r0
 8013346:	460e      	mov	r6, r1
 8013348:	4615      	mov	r5, r2
 801334a:	4798      	blx	r3
 801334c:	8030      	strh	r0, [r6, #0]
 801334e:	6823      	ldr	r3, [r4, #0]
 8013350:	4620      	mov	r0, r4
 8013352:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8013354:	4798      	blx	r3
 8013356:	8028      	strh	r0, [r5, #0]
 8013358:	bd70      	pop	{r4, r5, r6, pc}

0801335a <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 801335a:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	; 0x2a
 801335e:	4770      	bx	lr

08013360 <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 8013360:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	; 0x2c
 8013364:	4770      	bx	lr

08013366 <_ZN8touchgfx10TiledImageD1Ev>:
 8013366:	4770      	bx	lr

08013368 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8013368:	b510      	push	{r4, lr}
 801336a:	4604      	mov	r4, r0
 801336c:	f000 fd31 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8013370:	6823      	ldr	r3, [r4, #0]
 8013372:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 8013376:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	; 0x2a
 801337a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801337c:	4620      	mov	r0, r4
 801337e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013382:	4718      	bx	r3

08013384 <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 8013384:	b538      	push	{r3, r4, r5, lr}
 8013386:	f100 0526 	add.w	r5, r0, #38	; 0x26
 801338a:	4604      	mov	r4, r0
 801338c:	8541      	strh	r1, [r0, #42]	; 0x2a
 801338e:	4628      	mov	r0, r5
 8013390:	f006 fe6e 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013394:	b188      	cbz	r0, 80133ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8013396:	4628      	mov	r0, r5
 8013398:	f006 fe6a 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801339c:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	; 0x2a
 80133a0:	fb92 f3f0 	sdiv	r3, r2, r0
 80133a4:	fb03 2010 	mls	r0, r3, r0, r2
 80133a8:	2800      	cmp	r0, #0
 80133aa:	8560      	strh	r0, [r4, #42]	; 0x2a
 80133ac:	da05      	bge.n	80133ba <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 80133ae:	4628      	mov	r0, r5
 80133b0:	f006 fe5e 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80133b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80133b6:	4418      	add	r0, r3
 80133b8:	8560      	strh	r0, [r4, #42]	; 0x2a
 80133ba:	bd38      	pop	{r3, r4, r5, pc}

080133bc <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 80133bc:	b538      	push	{r3, r4, r5, lr}
 80133be:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80133c2:	4604      	mov	r4, r0
 80133c4:	8581      	strh	r1, [r0, #44]	; 0x2c
 80133c6:	4628      	mov	r0, r5
 80133c8:	f006 fe86 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133cc:	b188      	cbz	r0, 80133f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80133ce:	4628      	mov	r0, r5
 80133d0:	f006 fe82 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133d4:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	; 0x2c
 80133d8:	fb92 f3f0 	sdiv	r3, r2, r0
 80133dc:	fb03 2010 	mls	r0, r3, r0, r2
 80133e0:	2800      	cmp	r0, #0
 80133e2:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80133e4:	da05      	bge.n	80133f2 <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80133e6:	4628      	mov	r0, r5
 80133e8:	f006 fe76 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80133ec:	8da3      	ldrh	r3, [r4, #44]	; 0x2c
 80133ee:	4418      	add	r0, r3
 80133f0:	85a0      	strh	r0, [r4, #44]	; 0x2c
 80133f2:	bd38      	pop	{r3, r4, r5, pc}

080133f4 <_ZN8touchgfx10TiledImageD0Ev>:
 80133f4:	b510      	push	{r4, lr}
 80133f6:	2130      	movs	r1, #48	; 0x30
 80133f8:	4604      	mov	r4, r0
 80133fa:	f017 fa9e 	bl	802a93a <_ZdlPvj>
 80133fe:	4620      	mov	r0, r4
 8013400:	bd10      	pop	{r4, pc}
	...

08013404 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 8013404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013408:	f100 0b26 	add.w	fp, r0, #38	; 0x26
 801340c:	b093      	sub	sp, #76	; 0x4c
 801340e:	4607      	mov	r7, r0
 8013410:	4658      	mov	r0, fp
 8013412:	460e      	mov	r6, r1
 8013414:	f006 fe2c 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013418:	4681      	mov	r9, r0
 801341a:	4658      	mov	r0, fp
 801341c:	f006 fe5c 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013420:	4605      	mov	r5, r0
 8013422:	f1b9 0f00 	cmp.w	r9, #0
 8013426:	f000 80c4 	beq.w	80135b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 801342a:	2800      	cmp	r0, #0
 801342c:	f000 80c1 	beq.w	80135b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8013430:	2300      	movs	r3, #0
 8013432:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
 8013436:	683b      	ldr	r3, [r7, #0]
 8013438:	a90e      	add	r1, sp, #56	; 0x38
 801343a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801343c:	4638      	mov	r0, r7
 801343e:	4798      	blx	r3
 8013440:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	; 0x2a
 8013444:	f9b6 3000 	ldrsh.w	r3, [r6]
 8013448:	88b1      	ldrh	r1, [r6, #4]
 801344a:	fa1f f889 	uxth.w	r8, r9
 801344e:	189c      	adds	r4, r3, r2
 8013450:	440b      	add	r3, r1
 8013452:	fa02 f383 	sxtah	r3, r2, r3
 8013456:	fb94 f4f9 	sdiv	r4, r4, r9
 801345a:	fb14 f408 	smulbb	r4, r4, r8
 801345e:	1aa4      	subs	r4, r4, r2
 8013460:	3b01      	subs	r3, #1
 8013462:	b2aa      	uxth	r2, r5
 8013464:	fb93 f3f9 	sdiv	r3, r3, r9
 8013468:	fb13 f308 	smulbb	r3, r3, r8
 801346c:	b21b      	sxth	r3, r3
 801346e:	9205      	str	r2, [sp, #20]
 8013470:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	; 0x2c
 8013474:	9805      	ldr	r0, [sp, #20]
 8013476:	930b      	str	r3, [sp, #44]	; 0x2c
 8013478:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801347c:	185a      	adds	r2, r3, r1
 801347e:	fb92 f2f5 	sdiv	r2, r2, r5
 8013482:	fb12 f200 	smulbb	r2, r2, r0
 8013486:	1a52      	subs	r2, r2, r1
 8013488:	b212      	sxth	r2, r2
 801348a:	920c      	str	r2, [sp, #48]	; 0x30
 801348c:	88f2      	ldrh	r2, [r6, #6]
 801348e:	4413      	add	r3, r2
 8013490:	fa01 f383 	sxtah	r3, r1, r3
 8013494:	3b01      	subs	r3, #1
 8013496:	fb93 f3f5 	sdiv	r3, r3, r5
 801349a:	fb13 f300 	smulbb	r3, r3, r0
 801349e:	b2a4      	uxth	r4, r4
 80134a0:	b21b      	sxth	r3, r3
 80134a2:	930d      	str	r3, [sp, #52]	; 0x34
 80134a4:	eb08 0504 	add.w	r5, r8, r4
 80134a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80134aa:	b223      	sxth	r3, r4
 80134ac:	4293      	cmp	r3, r2
 80134ae:	b2ad      	uxth	r5, r5
 80134b0:	9306      	str	r3, [sp, #24]
 80134b2:	dc7e      	bgt.n	80135b2 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80134b4:	b22b      	sxth	r3, r5
 80134b6:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80134ba:	930a      	str	r3, [sp, #40]	; 0x28
 80134bc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80134be:	4599      	cmp	r9, r3
 80134c0:	dd03      	ble.n	80134ca <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 80134c2:	4444      	add	r4, r8
 80134c4:	b2a4      	uxth	r4, r4
 80134c6:	4445      	add	r5, r8
 80134c8:	e7ee      	b.n	80134a8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 80134ca:	f9b6 c000 	ldrsh.w	ip, [r6]
 80134ce:	88b2      	ldrh	r2, [r6, #4]
 80134d0:	9806      	ldr	r0, [sp, #24]
 80134d2:	9905      	ldr	r1, [sp, #20]
 80134d4:	4462      	add	r2, ip
 80134d6:	b292      	uxth	r2, r2
 80134d8:	b213      	sxth	r3, r2
 80134da:	9308      	str	r3, [sp, #32]
 80134dc:	fa1f f389 	uxth.w	r3, r9
 80134e0:	4419      	add	r1, r3
 80134e2:	9307      	str	r3, [sp, #28]
 80134e4:	4603      	mov	r3, r0
 80134e6:	9808      	ldr	r0, [sp, #32]
 80134e8:	b289      	uxth	r1, r1
 80134ea:	4283      	cmp	r3, r0
 80134ec:	fa0f fa81 	sxth.w	sl, r1
 80134f0:	da5b      	bge.n	80135aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80134f2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80134f4:	4584      	cmp	ip, r0
 80134f6:	da58      	bge.n	80135aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80134f8:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80134fc:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 8013500:	4486      	add	lr, r0
 8013502:	fa1f fe8e 	uxth.w	lr, lr
 8013506:	fa0f f38e 	sxth.w	r3, lr
 801350a:	4599      	cmp	r9, r3
 801350c:	9309      	str	r3, [sp, #36]	; 0x24
 801350e:	da4c      	bge.n	80135aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013510:	4550      	cmp	r0, sl
 8013512:	da4a      	bge.n	80135aa <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 8013514:	9b06      	ldr	r3, [sp, #24]
 8013516:	459c      	cmp	ip, r3
 8013518:	bfb8      	it	lt
 801351a:	469c      	movlt	ip, r3
 801351c:	9b08      	ldr	r3, [sp, #32]
 801351e:	f8ad c040 	strh.w	ip, [sp, #64]	; 0x40
 8013522:	4548      	cmp	r0, r9
 8013524:	bfb8      	it	lt
 8013526:	4648      	movlt	r0, r9
 8013528:	4699      	mov	r9, r3
 801352a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801352c:	f8ad 0042 	strh.w	r0, [sp, #66]	; 0x42
 8013530:	4599      	cmp	r9, r3
 8013532:	bfc8      	it	gt
 8013534:	462a      	movgt	r2, r5
 8013536:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013538:	4553      	cmp	r3, sl
 801353a:	bfd8      	it	le
 801353c:	4671      	movle	r1, lr
 801353e:	eba2 020c 	sub.w	r2, r2, ip
 8013542:	1a09      	subs	r1, r1, r0
 8013544:	f8ad 2044 	strh.w	r2, [sp, #68]	; 0x44
 8013548:	f8ad 1046 	strh.w	r1, [sp, #70]	; 0x46
 801354c:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8013550:	9b07      	ldr	r3, [sp, #28]
 8013552:	1b12      	subs	r2, r2, r4
 8013554:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8013558:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801355c:	1ad2      	subs	r2, r2, r3
 801355e:	4b16      	ldr	r3, [pc, #88]	; (80135b8 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 8013560:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8013564:	681a      	ldr	r2, [r3, #0]
 8013566:	f892 1058 	ldrb.w	r1, [r2, #88]	; 0x58
 801356a:	b109      	cbz	r1, 8013570 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 801356c:	6cd0      	ldr	r0, [r2, #76]	; 0x4c
 801356e:	b900      	cbnz	r0, 8013572 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 8013570:	6890      	ldr	r0, [r2, #8]
 8013572:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8013576:	9b07      	ldr	r3, [sp, #28]
 8013578:	6801      	ldr	r1, [r0, #0]
 801357a:	f04f 0c01 	mov.w	ip, #1
 801357e:	f8cd c008 	str.w	ip, [sp, #8]
 8013582:	f897 c028 	ldrb.w	ip, [r7, #40]	; 0x28
 8013586:	f8cd c004 	str.w	ip, [sp, #4]
 801358a:	4413      	add	r3, r2
 801358c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8013590:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
 8013594:	f8cd c000 	str.w	ip, [sp]
 8013598:	4422      	add	r2, r4
 801359a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801359e:	b21b      	sxth	r3, r3
 80135a0:	b212      	sxth	r2, r2
 80135a2:	4659      	mov	r1, fp
 80135a4:	47c8      	blx	r9
 80135a6:	46d1      	mov	r9, sl
 80135a8:	e788      	b.n	80134bc <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 80135aa:	2300      	movs	r3, #0
 80135ac:	e9cd 3310 	strd	r3, r3, [sp, #64]	; 0x40
 80135b0:	e7cc      	b.n	801354c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 80135b2:	b013      	add	sp, #76	; 0x4c
 80135b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135b8:	200137ec 	.word	0x200137ec

080135bc <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 80135bc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135c0:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80135c4:	2bff      	cmp	r3, #255	; 0xff
 80135c6:	4606      	mov	r6, r0
 80135c8:	4689      	mov	r9, r1
 80135ca:	d008      	beq.n	80135de <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 80135cc:	2300      	movs	r3, #0
 80135ce:	8003      	strh	r3, [r0, #0]
 80135d0:	8043      	strh	r3, [r0, #2]
 80135d2:	8083      	strh	r3, [r0, #4]
 80135d4:	4630      	mov	r0, r6
 80135d6:	80f3      	strh	r3, [r6, #6]
 80135d8:	b003      	add	sp, #12
 80135da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135de:	f101 0b26 	add.w	fp, r1, #38	; 0x26
 80135e2:	4659      	mov	r1, fp
 80135e4:	4668      	mov	r0, sp
 80135e6:	f006 fdab 	bl	801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80135ea:	4658      	mov	r0, fp
 80135ec:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80135f0:	f9bd 7000 	ldrsh.w	r7, [sp]
 80135f4:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80135f8:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80135fc:	f006 fd38 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013600:	4284      	cmp	r4, r0
 8013602:	d10d      	bne.n	8013620 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 8013604:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 8013608:	4658      	mov	r0, fp
 801360a:	f006 fd65 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801360e:	4580      	cmp	r8, r0
 8013610:	d129      	bne.n	8013666 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xaa>
 8013612:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 8013616:	8037      	strh	r7, [r6, #0]
 8013618:	f8a6 a002 	strh.w	sl, [r6, #2]
 801361c:	80b5      	strh	r5, [r6, #4]
 801361e:	e7d9      	b.n	80135d4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 8013620:	f8b9 502a 	ldrh.w	r5, [r9, #42]	; 0x2a
 8013624:	4658      	mov	r0, fp
 8013626:	f006 fd23 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801362a:	1b7f      	subs	r7, r7, r5
 801362c:	b2bd      	uxth	r5, r7
 801362e:	b22f      	sxth	r7, r5
 8013630:	4428      	add	r0, r5
 8013632:	2f00      	cmp	r7, #0
 8013634:	b2a3      	uxth	r3, r4
 8013636:	b280      	uxth	r0, r0
 8013638:	bfb8      	it	lt
 801363a:	18ed      	addlt	r5, r5, r3
 801363c:	4403      	add	r3, r0
 801363e:	b29b      	uxth	r3, r3
 8013640:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 8013644:	bfb8      	it	lt
 8013646:	b22d      	sxthlt	r5, r5
 8013648:	b219      	sxth	r1, r3
 801364a:	bfae      	itee	ge
 801364c:	4625      	movge	r5, r4
 801364e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8013652:	2700      	movlt	r7, #0
 8013654:	4291      	cmp	r1, r2
 8013656:	bfc4      	itt	gt
 8013658:	1a9c      	subgt	r4, r3, r2
 801365a:	b224      	sxthgt	r4, r4
 801365c:	42ac      	cmp	r4, r5
 801365e:	bfc4      	itt	gt
 8013660:	b207      	sxthgt	r7, r0
 8013662:	4625      	movgt	r5, r4
 8013664:	e7d0      	b.n	8013608 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8013666:	f8b9 402c 	ldrh.w	r4, [r9, #44]	; 0x2c
 801366a:	4658      	mov	r0, fp
 801366c:	f006 fd34 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013670:	ebaa 0404 	sub.w	r4, sl, r4
 8013674:	b2a4      	uxth	r4, r4
 8013676:	fa0f fa84 	sxth.w	sl, r4
 801367a:	4420      	add	r0, r4
 801367c:	f1ba 0f00 	cmp.w	sl, #0
 8013680:	fa1f f288 	uxth.w	r2, r8
 8013684:	b280      	uxth	r0, r0
 8013686:	bfb8      	it	lt
 8013688:	18a3      	addlt	r3, r4, r2
 801368a:	4402      	add	r2, r0
 801368c:	b292      	uxth	r2, r2
 801368e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8013692:	bfb8      	it	lt
 8013694:	b21b      	sxthlt	r3, r3
 8013696:	b214      	sxth	r4, r2
 8013698:	bfae      	itee	ge
 801369a:	4643      	movge	r3, r8
 801369c:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80136a0:	f04f 0a00 	movlt.w	sl, #0
 80136a4:	428c      	cmp	r4, r1
 80136a6:	bfc4      	itt	gt
 80136a8:	eba2 0801 	subgt.w	r8, r2, r1
 80136ac:	fa0f f888 	sxthgt.w	r8, r8
 80136b0:	4598      	cmp	r8, r3
 80136b2:	bfc4      	itt	gt
 80136b4:	fa0f fa80 	sxthgt.w	sl, r0
 80136b8:	4643      	movgt	r3, r8
 80136ba:	e7ac      	b.n	8013616 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

080136bc <_ZNK8touchgfx5Image17invalidateContentEv>:
 80136bc:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 80136c0:	b12a      	cbz	r2, 80136ce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80136c2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80136c6:	b112      	cbz	r2, 80136ce <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80136c8:	6803      	ldr	r3, [r0, #0]
 80136ca:	695b      	ldr	r3, [r3, #20]
 80136cc:	4718      	bx	r3
 80136ce:	4770      	bx	lr

080136d0 <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 80136d0:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 80136d4:	600b      	str	r3, [r1, #0]
 80136d6:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 80136da:	6013      	str	r3, [r2, #0]
 80136dc:	4770      	bx	lr

080136de <_ZN8touchgfx5Gauge8setWidthEs>:
 80136de:	8101      	strh	r1, [r0, #8]
 80136e0:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 80136e4:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 80136e8:	4770      	bx	lr

080136ea <_ZN8touchgfx5Gauge9setHeightEs>:
 80136ea:	8141      	strh	r1, [r0, #10]
 80136ec:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 80136f0:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 80136f4:	4770      	bx	lr

080136f6 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 80136f6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 80136fa:	4770      	bx	lr

080136fc <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 80136fc:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8013700:	4770      	bx	lr

08013702 <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8013702:	4770      	bx	lr

08013704 <_ZN8touchgfx5GaugeD1Ev>:
 8013704:	4770      	bx	lr

08013706 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8013706:	b538      	push	{r3, r4, r5, lr}
 8013708:	4604      	mov	r4, r0
 801370a:	460d      	mov	r5, r1
 801370c:	f7fc fe07 	bl	801031e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8013710:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8013714:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8013718:	bd38      	pop	{r3, r4, r5, pc}

0801371a <_ZN8touchgfx5GaugeD0Ev>:
 801371a:	b510      	push	{r4, lr}
 801371c:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8013720:	4604      	mov	r4, r0
 8013722:	f017 f90a 	bl	802a93a <_ZdlPvj>
 8013726:	4620      	mov	r0, r4
 8013728:	bd10      	pop	{r4, pc}

0801372a <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 801372a:	b510      	push	{r4, lr}
 801372c:	6803      	ldr	r3, [r0, #0]
 801372e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013732:	4604      	mov	r4, r0
 8013734:	4798      	blx	r3
 8013736:	b170      	cbz	r0, 8013756 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013738:	6823      	ldr	r3, [r4, #0]
 801373a:	4620      	mov	r0, r4
 801373c:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8013740:	4798      	blx	r3
 8013742:	b140      	cbz	r0, 8013756 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8013744:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8013748:	b12b      	cbz	r3, 8013756 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 801374a:	6823      	ldr	r3, [r4, #0]
 801374c:	4620      	mov	r0, r4
 801374e:	695b      	ldr	r3, [r3, #20]
 8013750:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013754:	4718      	bx	r3
 8013756:	bd10      	pop	{r4, pc}

08013758 <_ZN8touchgfx5GaugeC1Ev>:
 8013758:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801375a:	4604      	mov	r4, r0
 801375c:	4626      	mov	r6, r4
 801375e:	f7fc feff 	bl	8010560 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8013762:	4b18      	ldr	r3, [pc, #96]	; (80137c4 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8013764:	f846 3bb4 	str.w	r3, [r6], #180
 8013768:	a902      	add	r1, sp, #8
 801376a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801376e:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8013772:	4630      	mov	r0, r6
 8013774:	f015 f9a4 	bl	8028ac0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8013778:	2500      	movs	r5, #0
 801377a:	2301      	movs	r3, #1
 801377c:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8013780:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8013784:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8013788:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 801378c:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8013790:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8013794:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8013798:	4638      	mov	r0, r7
 801379a:	f014 fbd5 	bl	8027f48 <_ZN8touchgfx6CircleC1Ev>
 801379e:	f104 0158 	add.w	r1, r4, #88	; 0x58
 80137a2:	4620      	mov	r0, r4
 80137a4:	f7fc ff7d 	bl	80106a2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 80137a8:	4639      	mov	r1, r7
 80137aa:	4620      	mov	r0, r4
 80137ac:	f7fc ff38 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80137b0:	4620      	mov	r0, r4
 80137b2:	4631      	mov	r1, r6
 80137b4:	f7fc ff34 	bl	8010620 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80137b8:	4620      	mov	r0, r4
 80137ba:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 80137be:	b003      	add	sp, #12
 80137c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80137c2:	bf00      	nop
 80137c4:	0802f730 	.word	0x0802f730

080137c8 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80137c8:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 80137cc:	4770      	bx	lr

080137ce <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 80137ce:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 80137d2:	4770      	bx	lr

080137d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 80137d4:	b538      	push	{r3, r4, r5, lr}
 80137d6:	8902      	ldrh	r2, [r0, #8]
 80137d8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80137dc:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 80137e0:	4604      	mov	r4, r0
 80137e2:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 80137e6:	2200      	movs	r2, #0
 80137e8:	4611      	mov	r1, r2
 80137ea:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 80137ee:	4628      	mov	r0, r5
 80137f0:	f7ef f8a6 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 80137f4:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 80137f8:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 80137fc:	1a9b      	subs	r3, r3, r2
 80137fe:	ee07 3a90 	vmov	s15, r3
 8013802:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8013806:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 801380a:	1a9b      	subs	r3, r3, r2
 801380c:	ee07 3a10 	vmov	s14, r3
 8013810:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013814:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013818:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 801381c:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8013820:	4628      	mov	r0, r5
 8013822:	f015 f999 	bl	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013826:	4b16      	ldr	r3, [pc, #88]	; (8013880 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8013828:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 801382c:	4628      	mov	r0, r5
 801382e:	f015 f993 	bl	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013832:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8013836:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 801383a:	ee07 3a90 	vmov	s15, r3
 801383e:	ee07 2a10 	vmov	s14, r2
 8013842:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013846:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801384a:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 801384e:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8013852:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8013856:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 801385a:	4628      	mov	r0, r5
 801385c:	f015 f97c 	bl	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013860:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8013864:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8013868:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 801386c:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8013870:	4628      	mov	r0, r5
 8013872:	f015 f971 	bl	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8013876:	2301      	movs	r3, #1
 8013878:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 801387c:	bd38      	pop	{r3, r4, r5, pc}
 801387e:	bf00      	nop
 8013880:	43960000 	.word	0x43960000

08013884 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8013884:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013886:	4604      	mov	r4, r0
 8013888:	a802      	add	r0, sp, #8
 801388a:	4616      	mov	r6, r2
 801388c:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8013890:	461d      	mov	r5, r3
 8013892:	4601      	mov	r1, r0
 8013894:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8013898:	f015 fab4 	bl	8028e04 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 801389c:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 80138a0:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 80138a4:	4620      	mov	r0, r4
 80138a6:	f7ff ff95 	bl	80137d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80138aa:	b002      	add	sp, #8
 80138ac:	bd70      	pop	{r4, r5, r6, pc}

080138ae <_ZN8touchgfx5Gauge9setCenterEii>:
 80138ae:	b570      	push	{r4, r5, r6, lr}
 80138b0:	4606      	mov	r6, r0
 80138b2:	460d      	mov	r5, r1
 80138b4:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 80138b8:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 80138bc:	4614      	mov	r4, r2
 80138be:	f7ff ff89 	bl	80137d4 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 80138c2:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 80138c6:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 80138ca:	1aa4      	subs	r4, r4, r2
 80138cc:	1a6d      	subs	r5, r5, r1
 80138ce:	0164      	lsls	r4, r4, #5
 80138d0:	016d      	lsls	r5, r5, #5
 80138d2:	3410      	adds	r4, #16
 80138d4:	3510      	adds	r5, #16
 80138d6:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 80138da:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 80138de:	bd70      	pop	{r4, r5, r6, pc}

080138e0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 80138e0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80138e2:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80138e4:	0149      	lsls	r1, r1, #5
 80138e6:	4299      	cmp	r1, r3
 80138e8:	4604      	mov	r4, r0
 80138ea:	9101      	str	r1, [sp, #4]
 80138ec:	d00b      	beq.n	8013906 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 80138ee:	4601      	mov	r1, r0
 80138f0:	aa01      	add	r2, sp, #4
 80138f2:	a802      	add	r0, sp, #8
 80138f4:	f014 fd26 	bl	8028344 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 80138f8:	9b01      	ldr	r3, [sp, #4]
 80138fa:	63e3      	str	r3, [r4, #60]	; 0x3c
 80138fc:	6823      	ldr	r3, [r4, #0]
 80138fe:	a902      	add	r1, sp, #8
 8013900:	691b      	ldr	r3, [r3, #16]
 8013902:	4620      	mov	r0, r4
 8013904:	4798      	blx	r3
 8013906:	b004      	add	sp, #16
 8013908:	bd10      	pop	{r4, pc}
	...

0801390c <_ZN8touchgfx5Gauge8setValueEi>:
 801390c:	b570      	push	{r4, r5, r6, lr}
 801390e:	4604      	mov	r4, r0
 8013910:	f7fc fd58 	bl	80103c4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8013914:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8013918:	429a      	cmp	r2, r3
 801391a:	bfac      	ite	ge
 801391c:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8013920:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8013924:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8013928:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 801392c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013930:	1ac9      	subs	r1, r1, r3
 8013932:	2900      	cmp	r1, #0
 8013934:	bfb8      	it	lt
 8013936:	4249      	neglt	r1, r1
 8013938:	b289      	uxth	r1, r1
 801393a:	4620      	mov	r0, r4
 801393c:	f7fc fd64 	bl	8010408 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8013940:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8013944:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8013948:	eddf 6a19 	vldr	s13, [pc, #100]	; 80139b0 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 801394c:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80139b4 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8013950:	429a      	cmp	r2, r3
 8013952:	4605      	mov	r5, r0
 8013954:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8013958:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 801395c:	da15      	bge.n	801398a <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 801395e:	1b5b      	subs	r3, r3, r5
 8013960:	ee07 3a90 	vmov	s15, r3
 8013964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013968:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 801396c:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8013970:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8013974:	ee21 1a07 	vmul.f32	s2, s2, s14
 8013978:	f015 f85d 	bl	8028a36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 801397c:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8013980:	1b49      	subs	r1, r1, r5
 8013982:	4630      	mov	r0, r6
 8013984:	f7ff ffac 	bl	80138e0 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8013988:	bd70      	pop	{r4, r5, r6, pc}
 801398a:	442b      	add	r3, r5
 801398c:	ee07 3a90 	vmov	s15, r3
 8013990:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013994:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8013998:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 801399c:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 80139a0:	ee21 1a07 	vmul.f32	s2, s2, s14
 80139a4:	f015 f847 	bl	8028a36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 80139a8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 80139ac:	4429      	add	r1, r5
 80139ae:	e7e8      	b.n	8013982 <_ZN8touchgfx5Gauge8setValueEi+0x76>
 80139b0:	43340000 	.word	0x43340000
 80139b4:	40490fdb 	.word	0x40490fdb

080139b8 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 80139b8:	b510      	push	{r4, lr}
 80139ba:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 80139be:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 80139c2:	0149      	lsls	r1, r1, #5
 80139c4:	0152      	lsls	r2, r2, #5
 80139c6:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 80139ca:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 80139ce:	4604      	mov	r4, r0
 80139d0:	f7fc fca2 	bl	8010318 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 80139d4:	4601      	mov	r1, r0
 80139d6:	4620      	mov	r0, r4
 80139d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80139dc:	f7ff bf96 	b.w	801390c <_ZN8touchgfx5Gauge8setValueEi>

080139e0 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80139e0:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 80139e4:	4770      	bx	lr

080139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80139e6:	b570      	push	{r4, r5, r6, lr}
 80139e8:	880b      	ldrh	r3, [r1, #0]
 80139ea:	85c3      	strh	r3, [r0, #46]	; 0x2e
 80139ec:	4605      	mov	r5, r0
 80139ee:	8813      	ldrh	r3, [r2, #0]
 80139f0:	f825 3f30 	strh.w	r3, [r5, #48]!
 80139f4:	4604      	mov	r4, r0
 80139f6:	4628      	mov	r0, r5
 80139f8:	f006 fb3a 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80139fc:	4606      	mov	r6, r0
 80139fe:	4628      	mov	r0, r5
 8013a00:	f006 fb6a 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a04:	6823      	ldr	r3, [r4, #0]
 8013a06:	4605      	mov	r5, r0
 8013a08:	4631      	mov	r1, r6
 8013a0a:	4620      	mov	r0, r4
 8013a0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013a0e:	4798      	blx	r3
 8013a10:	6823      	ldr	r3, [r4, #0]
 8013a12:	4629      	mov	r1, r5
 8013a14:	4620      	mov	r0, r4
 8013a16:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013a18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013a1c:	4718      	bx	r3

08013a1e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8013a1e:	b510      	push	{r4, lr}
 8013a20:	4604      	mov	r4, r0
 8013a22:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8013a24:	b150      	cbz	r0, 8013a3c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013a26:	6803      	ldr	r3, [r0, #0]
 8013a28:	68db      	ldr	r3, [r3, #12]
 8013a2a:	4798      	blx	r3
 8013a2c:	b130      	cbz	r0, 8013a3c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8013a2e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8013a30:	6803      	ldr	r3, [r0, #0]
 8013a32:	4621      	mov	r1, r4
 8013a34:	689b      	ldr	r3, [r3, #8]
 8013a36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a3a:	4718      	bx	r3
 8013a3c:	bd10      	pop	{r4, pc}

08013a3e <_ZNK8touchgfx6Button12getSolidRectEv>:
 8013a3e:	b510      	push	{r4, lr}
 8013a40:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8013a44:	2bff      	cmp	r3, #255	; 0xff
 8013a46:	4604      	mov	r4, r0
 8013a48:	d006      	beq.n	8013a58 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8013a4a:	2300      	movs	r3, #0
 8013a4c:	8003      	strh	r3, [r0, #0]
 8013a4e:	8043      	strh	r3, [r0, #2]
 8013a50:	8083      	strh	r3, [r0, #4]
 8013a52:	80c3      	strh	r3, [r0, #6]
 8013a54:	4620      	mov	r0, r4
 8013a56:	bd10      	pop	{r4, pc}
 8013a58:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8013a5c:	b11b      	cbz	r3, 8013a66 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8013a5e:	3130      	adds	r1, #48	; 0x30
 8013a60:	f006 fb6e 	bl	801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013a64:	e7f6      	b.n	8013a54 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8013a66:	312e      	adds	r1, #46	; 0x2e
 8013a68:	e7fa      	b.n	8013a60 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08013a6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8013a6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a70:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8013a74:	b08a      	sub	sp, #40	; 0x28
 8013a76:	4604      	mov	r4, r0
 8013a78:	4688      	mov	r8, r1
 8013a7a:	2b00      	cmp	r3, #0
 8013a7c:	d066      	beq.n	8013b4c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8013a7e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8013a80:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013a84:	a805      	add	r0, sp, #20
 8013a86:	f006 faf3 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013a8a:	4607      	mov	r7, r0
 8013a8c:	a805      	add	r0, sp, #20
 8013a8e:	f006 fb23 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013a92:	f9b8 6000 	ldrsh.w	r6, [r8]
 8013a96:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8013a9a:	4432      	add	r2, r6
 8013a9c:	b292      	uxth	r2, r2
 8013a9e:	2300      	movs	r3, #0
 8013aa0:	fa0f fc82 	sxth.w	ip, r2
 8013aa4:	459c      	cmp	ip, r3
 8013aa6:	9306      	str	r3, [sp, #24]
 8013aa8:	dd52      	ble.n	8013b50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013aaa:	42b7      	cmp	r7, r6
 8013aac:	dd50      	ble.n	8013b50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013aae:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8013ab2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8013ab6:	442b      	add	r3, r5
 8013ab8:	b29b      	uxth	r3, r3
 8013aba:	b219      	sxth	r1, r3
 8013abc:	2900      	cmp	r1, #0
 8013abe:	dd47      	ble.n	8013b50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013ac0:	42a8      	cmp	r0, r5
 8013ac2:	dd45      	ble.n	8013b50 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8013ac4:	4567      	cmp	r7, ip
 8013ac6:	bfb8      	it	lt
 8013ac8:	b2ba      	uxthlt	r2, r7
 8013aca:	4288      	cmp	r0, r1
 8013acc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8013ad0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8013ad4:	bfb8      	it	lt
 8013ad6:	b283      	uxthlt	r3, r0
 8013ad8:	1b92      	subs	r2, r2, r6
 8013ada:	1b5b      	subs	r3, r3, r5
 8013adc:	f8ad 201c 	strh.w	r2, [sp, #28]
 8013ae0:	f8ad 301e 	strh.w	r3, [sp, #30]
 8013ae4:	f8ad 6018 	strh.w	r6, [sp, #24]
 8013ae8:	f8ad 501a 	strh.w	r5, [sp, #26]
 8013aec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013af0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013af4:	429a      	cmp	r2, r3
 8013af6:	d026      	beq.n	8013b46 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013af8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013afc:	2b00      	cmp	r3, #0
 8013afe:	dd22      	ble.n	8013b46 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013b00:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013b04:	2b00      	cmp	r3, #0
 8013b06:	dd1e      	ble.n	8013b46 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8013b08:	2300      	movs	r3, #0
 8013b0a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8013b0e:	6823      	ldr	r3, [r4, #0]
 8013b10:	a908      	add	r1, sp, #32
 8013b12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013b14:	4620      	mov	r0, r4
 8013b16:	4798      	blx	r3
 8013b18:	4b0f      	ldr	r3, [pc, #60]	; (8013b58 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8013b1a:	681b      	ldr	r3, [r3, #0]
 8013b1c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013b20:	b10a      	cbz	r2, 8013b26 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8013b22:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013b24:	b900      	cbnz	r0, 8013b28 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8013b26:	6898      	ldr	r0, [r3, #8]
 8013b28:	6801      	ldr	r1, [r0, #0]
 8013b2a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013b2e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013b32:	2501      	movs	r5, #1
 8013b34:	9502      	str	r5, [sp, #8]
 8013b36:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013b3a:	9401      	str	r4, [sp, #4]
 8013b3c:	ac06      	add	r4, sp, #24
 8013b3e:	9400      	str	r4, [sp, #0]
 8013b40:	688c      	ldr	r4, [r1, #8]
 8013b42:	a905      	add	r1, sp, #20
 8013b44:	47a0      	blx	r4
 8013b46:	b00a      	add	sp, #40	; 0x28
 8013b48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b4c:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8013b4e:	e797      	b.n	8013a80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8013b50:	2300      	movs	r3, #0
 8013b52:	9307      	str	r3, [sp, #28]
 8013b54:	e7ca      	b.n	8013aec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8013b56:	bf00      	nop
 8013b58:	200137ec 	.word	0x200137ec

08013b5c <_ZNK8touchgfx6Button17invalidateContentEv>:
 8013b5c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8013b60:	b12a      	cbz	r2, 8013b6e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b62:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8013b66:	b112      	cbz	r2, 8013b6e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8013b68:	6803      	ldr	r3, [r0, #0]
 8013b6a:	695b      	ldr	r3, [r3, #20]
 8013b6c:	4718      	bx	r3
 8013b6e:	4770      	bx	lr

08013b70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8013b70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b74:	4b2f      	ldr	r3, [pc, #188]	; (8013c34 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8013b76:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8013b78:	881b      	ldrh	r3, [r3, #0]
 8013b7a:	4293      	cmp	r3, r2
 8013b7c:	b08d      	sub	sp, #52	; 0x34
 8013b7e:	4604      	mov	r4, r0
 8013b80:	460f      	mov	r7, r1
 8013b82:	d954      	bls.n	8013c2e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013b84:	4b2c      	ldr	r3, [pc, #176]	; (8013c38 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8013b86:	6819      	ldr	r1, [r3, #0]
 8013b88:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8013b8c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8013b90:	4a2a      	ldr	r2, [pc, #168]	; (8013c3c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8013b92:	6812      	ldr	r2, [r2, #0]
 8013b94:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8013b98:	2900      	cmp	r1, #0
 8013b9a:	d048      	beq.n	8013c2e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8013b9c:	785a      	ldrb	r2, [r3, #1]
 8013b9e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8013ba2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013ba6:	4b26      	ldr	r3, [pc, #152]	; (8013c40 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8013ba8:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8013bac:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8013bb0:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8013bb4:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8013bb6:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8013bba:	9107      	str	r1, [sp, #28]
 8013bbc:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8013bc0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8013bc4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8013bc8:	681a      	ldr	r2, [r3, #0]
 8013bca:	f88d 8020 	strb.w	r8, [sp, #32]
 8013bce:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8013bd2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8013bd6:	9609      	str	r6, [sp, #36]	; 0x24
 8013bd8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8013bdc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8013be0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8013be4:	b10b      	cbz	r3, 8013bea <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8013be6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8013be8:	b905      	cbnz	r5, 8013bec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8013bea:	6895      	ldr	r5, [r2, #8]
 8013bec:	ae05      	add	r6, sp, #20
 8013bee:	4621      	mov	r1, r4
 8013bf0:	4630      	mov	r0, r6
 8013bf2:	f003 ff71 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013bf6:	4b13      	ldr	r3, [pc, #76]	; (8013c44 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8013bf8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8013bfa:	6818      	ldr	r0, [r3, #0]
 8013bfc:	f7f4 fea4 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8013c00:	6823      	ldr	r3, [r4, #0]
 8013c02:	4680      	mov	r8, r0
 8013c04:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8013c06:	4620      	mov	r0, r4
 8013c08:	4798      	blx	r3
 8013c0a:	6823      	ldr	r3, [r4, #0]
 8013c0c:	4681      	mov	r9, r0
 8013c0e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8013c12:	4620      	mov	r0, r4
 8013c14:	4798      	blx	r3
 8013c16:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8013c1a:	ab07      	add	r3, sp, #28
 8013c1c:	9300      	str	r3, [sp, #0]
 8013c1e:	f8cd 8004 	str.w	r8, [sp, #4]
 8013c22:	463b      	mov	r3, r7
 8013c24:	e896 0006 	ldmia.w	r6, {r1, r2}
 8013c28:	4628      	mov	r0, r5
 8013c2a:	f7f4 fe3f 	bl	80088ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013c2e:	b00d      	add	sp, #52	; 0x34
 8013c30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c34:	20013848 	.word	0x20013848
 8013c38:	20013844 	.word	0x20013844
 8013c3c:	2001384c 	.word	0x2001384c
 8013c40:	200137ec 	.word	0x200137ec
 8013c44:	20013850 	.word	0x20013850

08013c48 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 8013c48:	4770      	bx	lr

08013c4a <_ZN8touchgfx14ButtonWithIconD1Ev>:
 8013c4a:	4770      	bx	lr

08013c4c <_ZN8touchgfx14ButtonWithIconD0Ev>:
 8013c4c:	b510      	push	{r4, lr}
 8013c4e:	213c      	movs	r1, #60	; 0x3c
 8013c50:	4604      	mov	r4, r0
 8013c52:	f016 fe72 	bl	802a93a <_ZdlPvj>
 8013c56:	4620      	mov	r0, r4
 8013c58:	bd10      	pop	{r4, pc}

08013c5a <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8013c5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c5e:	461c      	mov	r4, r3
 8013c60:	4606      	mov	r6, r0
 8013c62:	9f06      	ldr	r7, [sp, #24]
 8013c64:	f7ff febf 	bl	80139e6 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8013c68:	8823      	ldrh	r3, [r4, #0]
 8013c6a:	86b3      	strh	r3, [r6, #52]	; 0x34
 8013c6c:	883b      	ldrh	r3, [r7, #0]
 8013c6e:	86f3      	strh	r3, [r6, #54]	; 0x36
 8013c70:	4638      	mov	r0, r7
 8013c72:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 8013c76:	f006 f9fb 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013c7a:	f04f 0802 	mov.w	r8, #2
 8013c7e:	fb95 f5f8 	sdiv	r5, r5, r8
 8013c82:	b2ad      	uxth	r5, r5
 8013c84:	fb90 f0f8 	sdiv	r0, r0, r8
 8013c88:	1a2d      	subs	r5, r5, r0
 8013c8a:	8735      	strh	r5, [r6, #56]	; 0x38
 8013c8c:	4638      	mov	r0, r7
 8013c8e:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8013c92:	fb94 f4f8 	sdiv	r4, r4, r8
 8013c96:	f006 fa1f 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013c9a:	b2a4      	uxth	r4, r4
 8013c9c:	fb90 f0f8 	sdiv	r0, r0, r8
 8013ca0:	1a24      	subs	r4, r4, r0
 8013ca2:	8774      	strh	r4, [r6, #58]	; 0x3a
 8013ca4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013ca8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8013ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013cac:	4604      	mov	r4, r0
 8013cae:	b08c      	sub	sp, #48	; 0x30
 8013cb0:	460d      	mov	r5, r1
 8013cb2:	f7ff fedb 	bl	8013a6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013cb6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013cba:	2b00      	cmp	r3, #0
 8013cbc:	d05d      	beq.n	8013d7a <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8013cbe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013cc0:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013cc4:	a805      	add	r0, sp, #20
 8013cc6:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8013cca:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 8013cce:	f006 f9cf 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013cd2:	4606      	mov	r6, r0
 8013cd4:	a805      	add	r0, sp, #20
 8013cd6:	f006 f9ff 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013cda:	6869      	ldr	r1, [r5, #4]
 8013cdc:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013ce0:	6828      	ldr	r0, [r5, #0]
 8013ce2:	f8ad 8018 	strh.w	r8, [sp, #24]
 8013ce6:	ab08      	add	r3, sp, #32
 8013ce8:	ad08      	add	r5, sp, #32
 8013cea:	c303      	stmia	r3!, {r0, r1}
 8013cec:	a906      	add	r1, sp, #24
 8013cee:	4628      	mov	r0, r5
 8013cf0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8013cf4:	f8ad 601c 	strh.w	r6, [sp, #28]
 8013cf8:	f7fc fe18 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8013cfc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8013d00:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8013d04:	429a      	cmp	r2, r3
 8013d06:	d035      	beq.n	8013d74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013d08:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8013d0c:	2b00      	cmp	r3, #0
 8013d0e:	dd31      	ble.n	8013d74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013d10:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8013d14:	2b00      	cmp	r3, #0
 8013d16:	dd2d      	ble.n	8013d74 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8013d18:	2300      	movs	r3, #0
 8013d1a:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 8013d1e:	6823      	ldr	r3, [r4, #0]
 8013d20:	a90a      	add	r1, sp, #40	; 0x28
 8013d22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013d24:	4620      	mov	r0, r4
 8013d26:	4798      	blx	r3
 8013d28:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8013d2c:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8013d2e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8013d32:	1a9b      	subs	r3, r3, r2
 8013d34:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013d38:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8013d3a:	1ac9      	subs	r1, r1, r3
 8013d3c:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 8013d40:	490f      	ldr	r1, [pc, #60]	; (8013d80 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 8013d42:	6809      	ldr	r1, [r1, #0]
 8013d44:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 8013d48:	b108      	cbz	r0, 8013d4e <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8013d4a:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 8013d4c:	b900      	cbnz	r0, 8013d50 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8013d4e:	6888      	ldr	r0, [r1, #8]
 8013d50:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 8013d54:	440b      	add	r3, r1
 8013d56:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8013d5a:	2601      	movs	r6, #1
 8013d5c:	440a      	add	r2, r1
 8013d5e:	6801      	ldr	r1, [r0, #0]
 8013d60:	9602      	str	r6, [sp, #8]
 8013d62:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8013d66:	e9cd 5400 	strd	r5, r4, [sp]
 8013d6a:	b21b      	sxth	r3, r3
 8013d6c:	688c      	ldr	r4, [r1, #8]
 8013d6e:	b212      	sxth	r2, r2
 8013d70:	a905      	add	r1, sp, #20
 8013d72:	47a0      	blx	r4
 8013d74:	b00c      	add	sp, #48	; 0x30
 8013d76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013d7a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8013d7c:	e7a0      	b.n	8013cc0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8013d7e:	bf00      	nop
 8013d80:	200137ec 	.word	0x200137ec

08013d84 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 8013d84:	b510      	push	{r4, lr}
 8013d86:	2101      	movs	r1, #1
 8013d88:	2200      	movs	r2, #0
 8013d8a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8013d8e:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8013d92:	4c0e      	ldr	r4, [pc, #56]	; (8013dcc <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 8013d94:	8082      	strh	r2, [r0, #4]
 8013d96:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013d9a:	80c2      	strh	r2, [r0, #6]
 8013d9c:	8102      	strh	r2, [r0, #8]
 8013d9e:	8142      	strh	r2, [r0, #10]
 8013da0:	8182      	strh	r2, [r0, #12]
 8013da2:	81c2      	strh	r2, [r0, #14]
 8013da4:	8202      	strh	r2, [r0, #16]
 8013da6:	8242      	strh	r2, [r0, #18]
 8013da8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013dac:	61c2      	str	r2, [r0, #28]
 8013dae:	8402      	strh	r2, [r0, #32]
 8013db0:	8442      	strh	r2, [r0, #34]	; 0x22
 8013db2:	6282      	str	r2, [r0, #40]	; 0x28
 8013db4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8013db8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8013dba:	8601      	strh	r1, [r0, #48]	; 0x30
 8013dbc:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8013dc0:	6004      	str	r4, [r0, #0]
 8013dc2:	8681      	strh	r1, [r0, #52]	; 0x34
 8013dc4:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013dc6:	8702      	strh	r2, [r0, #56]	; 0x38
 8013dc8:	8742      	strh	r2, [r0, #58]	; 0x3a
 8013dca:	bd10      	pop	{r4, pc}
 8013dcc:	0802f818 	.word	0x0802f818

08013dd0 <_ZN8touchgfx5ImageD1Ev>:
 8013dd0:	4770      	bx	lr

08013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8013dd2:	b570      	push	{r4, r5, r6, lr}
 8013dd4:	880b      	ldrh	r3, [r1, #0]
 8013dd6:	84c3      	strh	r3, [r0, #38]	; 0x26
 8013dd8:	4604      	mov	r4, r0
 8013dda:	4608      	mov	r0, r1
 8013ddc:	460d      	mov	r5, r1
 8013dde:	f006 f947 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013de2:	4606      	mov	r6, r0
 8013de4:	4628      	mov	r0, r5
 8013de6:	f006 f977 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013dea:	6823      	ldr	r3, [r4, #0]
 8013dec:	4605      	mov	r5, r0
 8013dee:	4631      	mov	r1, r6
 8013df0:	4620      	mov	r0, r4
 8013df2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013df4:	4798      	blx	r3
 8013df6:	6823      	ldr	r3, [r4, #0]
 8013df8:	4629      	mov	r1, r5
 8013dfa:	4620      	mov	r0, r4
 8013dfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013dfe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013e02:	4718      	bx	r3

08013e04 <_ZN8touchgfx5ImageD0Ev>:
 8013e04:	b510      	push	{r4, lr}
 8013e06:	212c      	movs	r1, #44	; 0x2c
 8013e08:	4604      	mov	r4, r0
 8013e0a:	f016 fd96 	bl	802a93a <_ZdlPvj>
 8013e0e:	4620      	mov	r0, r4
 8013e10:	bd10      	pop	{r4, pc}

08013e12 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8013e12:	b510      	push	{r4, lr}
 8013e14:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8013e18:	2bff      	cmp	r3, #255	; 0xff
 8013e1a:	4604      	mov	r4, r0
 8013e1c:	d006      	beq.n	8013e2c <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8013e1e:	2300      	movs	r3, #0
 8013e20:	8003      	strh	r3, [r0, #0]
 8013e22:	8043      	strh	r3, [r0, #2]
 8013e24:	8083      	strh	r3, [r0, #4]
 8013e26:	80c3      	strh	r3, [r0, #6]
 8013e28:	4620      	mov	r0, r4
 8013e2a:	bd10      	pop	{r4, pc}
 8013e2c:	3126      	adds	r1, #38	; 0x26
 8013e2e:	f006 f987 	bl	801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8013e32:	e7f9      	b.n	8013e28 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08013e34 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8013e34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e38:	4604      	mov	r4, r0
 8013e3a:	b088      	sub	sp, #32
 8013e3c:	f854 3b26 	ldr.w	r3, [r4], #38
 8013e40:	2500      	movs	r5, #0
 8013e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013e44:	460f      	mov	r7, r1
 8013e46:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8013e4a:	a904      	add	r1, sp, #16
 8013e4c:	4606      	mov	r6, r0
 8013e4e:	4798      	blx	r3
 8013e50:	4620      	mov	r0, r4
 8013e52:	f006 f90d 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8013e56:	4680      	mov	r8, r0
 8013e58:	4620      	mov	r0, r4
 8013e5a:	f006 f93d 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8013e5e:	9506      	str	r5, [sp, #24]
 8013e60:	ad06      	add	r5, sp, #24
 8013e62:	f8ad 001e 	strh.w	r0, [sp, #30]
 8013e66:	4639      	mov	r1, r7
 8013e68:	4628      	mov	r0, r5
 8013e6a:	f8ad 801c 	strh.w	r8, [sp, #28]
 8013e6e:	f7fc fd5d 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8013e72:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013e76:	2b00      	cmp	r3, #0
 8013e78:	dd19      	ble.n	8013eae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013e7a:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8013e7e:	2b00      	cmp	r3, #0
 8013e80:	dd15      	ble.n	8013eae <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8013e82:	4b0c      	ldr	r3, [pc, #48]	; (8013eb4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8013e84:	681b      	ldr	r3, [r3, #0]
 8013e86:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013e8a:	b10a      	cbz	r2, 8013e90 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8013e8c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013e8e:	b900      	cbnz	r0, 8013e92 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8013e90:	6898      	ldr	r0, [r3, #8]
 8013e92:	6801      	ldr	r1, [r0, #0]
 8013e94:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8013e98:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8013e9c:	2701      	movs	r7, #1
 8013e9e:	9702      	str	r7, [sp, #8]
 8013ea0:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8013ea4:	e9cd 5600 	strd	r5, r6, [sp]
 8013ea8:	688d      	ldr	r5, [r1, #8]
 8013eaa:	4621      	mov	r1, r4
 8013eac:	47a8      	blx	r5
 8013eae:	b008      	add	sp, #32
 8013eb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013eb4:	200137ec 	.word	0x200137ec

08013eb8 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8013eb8:	4770      	bx	lr

08013eba <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8013eba:	b510      	push	{r4, lr}
 8013ebc:	2148      	movs	r1, #72	; 0x48
 8013ebe:	4604      	mov	r4, r0
 8013ec0:	f016 fd3b 	bl	802a93a <_ZdlPvj>
 8013ec4:	4620      	mov	r0, r4
 8013ec6:	bd10      	pop	{r4, pc}

08013ec8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8013ec8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ecc:	b08d      	sub	sp, #52	; 0x34
 8013ece:	4604      	mov	r4, r0
 8013ed0:	460f      	mov	r7, r1
 8013ed2:	f7ff fdcb 	bl	8013a6c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8013ed6:	4a55      	ldr	r2, [pc, #340]	; (801402c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8013ed8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013eda:	8812      	ldrh	r2, [r2, #0]
 8013edc:	429a      	cmp	r2, r3
 8013ede:	f240 8082 	bls.w	8013fe6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013ee2:	4d53      	ldr	r5, [pc, #332]	; (8014030 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8013ee4:	682a      	ldr	r2, [r5, #0]
 8013ee6:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8013eea:	4b52      	ldr	r3, [pc, #328]	; (8014034 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8013eec:	681b      	ldr	r3, [r3, #0]
 8013eee:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8013ef2:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8013ef6:	2200      	movs	r2, #0
 8013ef8:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8013efc:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8013f00:	2a03      	cmp	r2, #3
 8013f02:	d811      	bhi.n	8013f28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8013f04:	e8df f002 	tbb	[pc, r2]
 8013f08:	89727902 	.word	0x89727902
 8013f0c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013f10:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013f14:	1ad2      	subs	r2, r2, r3
 8013f16:	2002      	movs	r0, #2
 8013f18:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013f1c:	fb92 f2f0 	sdiv	r2, r2, r0
 8013f20:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013f24:	f8ad 200e 	strh.w	r2, [sp, #14]
 8013f28:	f10d 080c 	add.w	r8, sp, #12
 8013f2c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8013f30:	f10d 0914 	add.w	r9, sp, #20
 8013f34:	e889 0003 	stmia.w	r9, {r0, r1}
 8013f38:	4639      	mov	r1, r7
 8013f3a:	4648      	mov	r0, r9
 8013f3c:	f7fc fcf6 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8013f40:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013f44:	2b00      	cmp	r3, #0
 8013f46:	dd4e      	ble.n	8013fe6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013f48:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8013f4c:	2b00      	cmp	r3, #0
 8013f4e:	dd4a      	ble.n	8013fe6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8013f50:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8013f54:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8013f58:	1a9b      	subs	r3, r3, r2
 8013f5a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013f5e:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8013f62:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8013f66:	1a9b      	subs	r3, r3, r2
 8013f68:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013f6c:	6823      	ldr	r3, [r4, #0]
 8013f6e:	4641      	mov	r1, r8
 8013f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013f72:	4620      	mov	r0, r4
 8013f74:	4798      	blx	r3
 8013f76:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8013f7a:	2b00      	cmp	r3, #0
 8013f7c:	d053      	beq.n	8014026 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8013f7e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013f80:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8013f82:	682b      	ldr	r3, [r5, #0]
 8013f84:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8013f88:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8013f8c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8013f90:	785b      	ldrb	r3, [r3, #1]
 8013f92:	9209      	str	r2, [sp, #36]	; 0x24
 8013f94:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8013f98:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013f9c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8013fa0:	2300      	movs	r3, #0
 8013fa2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013fa6:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8013faa:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8013fae:	4b22      	ldr	r3, [pc, #136]	; (8014038 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8013fb0:	9607      	str	r6, [sp, #28]
 8013fb2:	681b      	ldr	r3, [r3, #0]
 8013fb4:	f88d 5020 	strb.w	r5, [sp, #32]
 8013fb8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8013fbc:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8013fc0:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8013fc4:	b10a      	cbz	r2, 8013fca <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8013fc6:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8013fc8:	b904      	cbnz	r4, 8013fcc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8013fca:	689c      	ldr	r4, [r3, #8]
 8013fcc:	4b1b      	ldr	r3, [pc, #108]	; (801403c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8013fce:	6818      	ldr	r0, [r3, #0]
 8013fd0:	f7f4 fcba 	bl	8008948 <_ZNK8touchgfx5Texts7getTextEt>
 8013fd4:	ab07      	add	r3, sp, #28
 8013fd6:	9001      	str	r0, [sp, #4]
 8013fd8:	9300      	str	r3, [sp, #0]
 8013fda:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013fde:	464b      	mov	r3, r9
 8013fe0:	4620      	mov	r0, r4
 8013fe2:	f7f4 fc63 	bl	80088ac <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8013fe6:	b00d      	add	sp, #52	; 0x34
 8013fe8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013fec:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8013ff0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8013ff4:	1ad2      	subs	r2, r2, r3
 8013ff6:	3201      	adds	r2, #1
 8013ff8:	e78d      	b.n	8013f16 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8013ffa:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013ffe:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014002:	1ad2      	subs	r2, r2, r3
 8014004:	3201      	adds	r2, #1
 8014006:	2002      	movs	r0, #2
 8014008:	f8ad 3010 	strh.w	r3, [sp, #16]
 801400c:	fb92 f2f0 	sdiv	r2, r2, r0
 8014010:	f8ad 1012 	strh.w	r1, [sp, #18]
 8014014:	f8ad 200c 	strh.w	r2, [sp, #12]
 8014018:	e786      	b.n	8013f28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801401a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801401e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8014022:	1ad2      	subs	r2, r2, r3
 8014024:	e7ef      	b.n	8014006 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8014026:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8014028:	e7aa      	b.n	8013f80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801402a:	bf00      	nop
 801402c:	20013848 	.word	0x20013848
 8014030:	20013844 	.word	0x20013844
 8014034:	2001384c 	.word	0x2001384c
 8014038:	200137ec 	.word	0x200137ec
 801403c:	20013850 	.word	0x20013850

08014040 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8014040:	b510      	push	{r4, lr}
 8014042:	2101      	movs	r1, #1
 8014044:	4c13      	ldr	r4, [pc, #76]	; (8014094 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8014046:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801404a:	2200      	movs	r2, #0
 801404c:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8014050:	6004      	str	r4, [r0, #0]
 8014052:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8014056:	4c10      	ldr	r4, [pc, #64]	; (8014098 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8014058:	8082      	strh	r2, [r0, #4]
 801405a:	80c2      	strh	r2, [r0, #6]
 801405c:	8102      	strh	r2, [r0, #8]
 801405e:	8142      	strh	r2, [r0, #10]
 8014060:	8182      	strh	r2, [r0, #12]
 8014062:	81c2      	strh	r2, [r0, #14]
 8014064:	8202      	strh	r2, [r0, #16]
 8014066:	8242      	strh	r2, [r0, #18]
 8014068:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801406c:	61c2      	str	r2, [r0, #28]
 801406e:	8402      	strh	r2, [r0, #32]
 8014070:	8442      	strh	r2, [r0, #34]	; 0x22
 8014072:	6282      	str	r2, [r0, #40]	; 0x28
 8014074:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8014078:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801407a:	8601      	strh	r1, [r0, #48]	; 0x30
 801407c:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8014080:	6344      	str	r4, [r0, #52]	; 0x34
 8014082:	8701      	strh	r1, [r0, #56]	; 0x38
 8014084:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8014088:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801408c:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8014090:	bd10      	pop	{r4, pc}
 8014092:	bf00      	nop
 8014094:	0802f8fc 	.word	0x0802f8fc
 8014098:	0802d0f0 	.word	0x0802d0f0

0801409c <_ZN8touchgfx7OutlineD1Ev>:
 801409c:	4770      	bx	lr

0801409e <_ZN8touchgfx7OutlineD0Ev>:
 801409e:	b510      	push	{r4, lr}
 80140a0:	2130      	movs	r1, #48	; 0x30
 80140a2:	4604      	mov	r4, r0
 80140a4:	f016 fc49 	bl	802a93a <_ZdlPvj>
 80140a8:	4620      	mov	r0, r4
 80140aa:	bd10      	pop	{r4, pc}

080140ac <_ZN8touchgfx7Outline5resetEv>:
 80140ac:	b510      	push	{r4, lr}
 80140ae:	4604      	mov	r4, r0
 80140b0:	f000 fe96 	bl	8014de0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80140b4:	60e0      	str	r0, [r4, #12]
 80140b6:	f000 fe99 	bl	8014dec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80140ba:	68e3      	ldr	r3, [r4, #12]
 80140bc:	6123      	str	r3, [r4, #16]
 80140be:	08c0      	lsrs	r0, r0, #3
 80140c0:	2200      	movs	r2, #0
 80140c2:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80140c6:	3801      	subs	r0, #1
 80140c8:	6060      	str	r0, [r4, #4]
 80140ca:	60a2      	str	r2, [r4, #8]
 80140cc:	8019      	strh	r1, [r3, #0]
 80140ce:	8059      	strh	r1, [r3, #2]
 80140d0:	809a      	strh	r2, [r3, #4]
 80140d2:	80da      	strh	r2, [r3, #6]
 80140d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80140d6:	f023 0301 	bic.w	r3, r3, #1
 80140da:	f043 0302 	orr.w	r3, r3, #2
 80140de:	6263      	str	r3, [r4, #36]	; 0x24
 80140e0:	bd10      	pop	{r4, pc}
	...

080140e4 <_ZN8touchgfx7OutlineC1Ev>:
 80140e4:	b510      	push	{r4, lr}
 80140e6:	4b0a      	ldr	r3, [pc, #40]	; (8014110 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80140e8:	6003      	str	r3, [r0, #0]
 80140ea:	2300      	movs	r3, #0
 80140ec:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80140f0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80140f4:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80140f8:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80140fc:	6243      	str	r3, [r0, #36]	; 0x24
 80140fe:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8014102:	4604      	mov	r4, r0
 8014104:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8014108:	f7ff ffd0 	bl	80140ac <_ZN8touchgfx7Outline5resetEv>
 801410c:	4620      	mov	r0, r4
 801410e:	bd10      	pop	{r4, pc}
 8014110:	0802f970 	.word	0x0802f970

08014114 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8014114:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014118:	b093      	sub	sp, #76	; 0x4c
 801411a:	1156      	asrs	r6, r2, #5
 801411c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801411e:	9305      	str	r3, [sp, #20]
 8014120:	f004 051f 	and.w	r5, r4, #31
 8014124:	1153      	asrs	r3, r2, #5
 8014126:	9504      	str	r5, [sp, #16]
 8014128:	1165      	asrs	r5, r4, #5
 801412a:	9303      	str	r3, [sp, #12]
 801412c:	42ae      	cmp	r6, r5
 801412e:	ea4f 1364 	mov.w	r3, r4, asr #5
 8014132:	9306      	str	r3, [sp, #24]
 8014134:	f002 031f 	and.w	r3, r2, #31
 8014138:	f040 80f8 	bne.w	801432c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801413c:	9c04      	ldr	r4, [sp, #16]
 801413e:	9a05      	ldr	r2, [sp, #20]
 8014140:	42a3      	cmp	r3, r4
 8014142:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014146:	6902      	ldr	r2, [r0, #16]
 8014148:	d125      	bne.n	8014196 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801414a:	f9b2 3000 	ldrsh.w	r3, [r2]
 801414e:	459e      	cmp	lr, r3
 8014150:	d103      	bne.n	801415a <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 8014152:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014156:	429e      	cmp	r6, r3
 8014158:	d035      	beq.n	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801415a:	88d1      	ldrh	r1, [r2, #6]
 801415c:	8893      	ldrh	r3, [r2, #4]
 801415e:	430b      	orrs	r3, r1
 8014160:	d010      	beq.n	8014184 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014162:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014166:	2b00      	cmp	r3, #0
 8014168:	db0c      	blt.n	8014184 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801416a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801416c:	428b      	cmp	r3, r1
 801416e:	da09      	bge.n	8014184 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8014170:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014174:	428b      	cmp	r3, r1
 8014176:	bf38      	it	cc
 8014178:	3208      	addcc	r2, #8
 801417a:	f103 0301 	add.w	r3, r3, #1
 801417e:	bf38      	it	cc
 8014180:	6102      	strcc	r2, [r0, #16]
 8014182:	6083      	str	r3, [r0, #8]
 8014184:	6903      	ldr	r3, [r0, #16]
 8014186:	9a03      	ldr	r2, [sp, #12]
 8014188:	f8a3 e000 	strh.w	lr, [r3]
 801418c:	805a      	strh	r2, [r3, #2]
 801418e:	2200      	movs	r2, #0
 8014190:	809a      	strh	r2, [r3, #4]
 8014192:	80da      	strh	r2, [r3, #6]
 8014194:	e017      	b.n	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014196:	9c05      	ldr	r4, [sp, #20]
 8014198:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801419c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80141a0:	f004 041f 	and.w	r4, r4, #31
 80141a4:	114e      	asrs	r6, r1, #5
 80141a6:	9402      	str	r4, [sp, #8]
 80141a8:	9c04      	ldr	r4, [sp, #16]
 80141aa:	4576      	cmp	r6, lr
 80141ac:	f001 0c1f 	and.w	ip, r1, #31
 80141b0:	eba4 0403 	sub.w	r4, r4, r3
 80141b4:	d10a      	bne.n	80141cc <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80141b6:	9b02      	ldr	r3, [sp, #8]
 80141b8:	449c      	add	ip, r3
 80141ba:	44a0      	add	r8, r4
 80141bc:	fb04 a40c 	mla	r4, r4, ip, sl
 80141c0:	f8a2 8004 	strh.w	r8, [r2, #4]
 80141c4:	80d4      	strh	r4, [r2, #6]
 80141c6:	b013      	add	sp, #76	; 0x4c
 80141c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141cc:	9d05      	ldr	r5, [sp, #20]
 80141ce:	1a69      	subs	r1, r5, r1
 80141d0:	bf5b      	ittet	pl
 80141d2:	f1cc 0520 	rsbpl	r5, ip, #32
 80141d6:	436c      	mulpl	r4, r5
 80141d8:	2500      	movmi	r5, #0
 80141da:	2520      	movpl	r5, #32
 80141dc:	bf44      	itt	mi
 80141de:	fb04 f40c 	mulmi.w	r4, r4, ip
 80141e2:	4249      	negmi	r1, r1
 80141e4:	9501      	str	r5, [sp, #4]
 80141e6:	9f01      	ldr	r7, [sp, #4]
 80141e8:	fb94 f5f1 	sdiv	r5, r4, r1
 80141ec:	fb01 4415 	mls	r4, r1, r5, r4
 80141f0:	bf54      	ite	pl
 80141f2:	f04f 0901 	movpl.w	r9, #1
 80141f6:	f04f 39ff 	movmi.w	r9, #4294967295
 80141fa:	2c00      	cmp	r4, #0
 80141fc:	bfb8      	it	lt
 80141fe:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014202:	44bc      	add	ip, r7
 8014204:	44a8      	add	r8, r5
 8014206:	fb05 ac0c 	mla	ip, r5, ip, sl
 801420a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801420e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014212:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014216:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801421a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801421e:	bfb8      	it	lt
 8014220:	1864      	addlt	r4, r4, r1
 8014222:	ea58 0202 	orrs.w	r2, r8, r2
 8014226:	444e      	add	r6, r9
 8014228:	d011      	beq.n	801424e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801422a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801422e:	f1b8 0f00 	cmp.w	r8, #0
 8014232:	db0c      	blt.n	801424e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8014234:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8014236:	4590      	cmp	r8, r2
 8014238:	da09      	bge.n	801424e <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801423a:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801423e:	4590      	cmp	r8, r2
 8014240:	bf3c      	itt	cc
 8014242:	f10c 0208 	addcc.w	r2, ip, #8
 8014246:	6102      	strcc	r2, [r0, #16]
 8014248:	f108 0201 	add.w	r2, r8, #1
 801424c:	6082      	str	r2, [r0, #8]
 801424e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014252:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014256:	f8ac 6000 	strh.w	r6, [ip]
 801425a:	2700      	movs	r7, #0
 801425c:	45b6      	cmp	lr, r6
 801425e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014262:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014266:	f8ac 7006 	strh.w	r7, [ip, #6]
 801426a:	442b      	add	r3, r5
 801426c:	d04d      	beq.n	801430a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801426e:	9f04      	ldr	r7, [sp, #16]
 8014270:	1aff      	subs	r7, r7, r3
 8014272:	443d      	add	r5, r7
 8014274:	016d      	lsls	r5, r5, #5
 8014276:	fb95 f8f1 	sdiv	r8, r5, r1
 801427a:	fb01 5518 	mls	r5, r1, r8, r5
 801427e:	2d00      	cmp	r5, #0
 8014280:	bfb8      	it	lt
 8014282:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014286:	f108 0701 	add.w	r7, r8, #1
 801428a:	bfb8      	it	lt
 801428c:	186d      	addlt	r5, r5, r1
 801428e:	1a64      	subs	r4, r4, r1
 8014290:	9703      	str	r7, [sp, #12]
 8014292:	f04f 0a00 	mov.w	sl, #0
 8014296:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801429a:	1964      	adds	r4, r4, r5
 801429c:	bf58      	it	pl
 801429e:	9f03      	ldrpl	r7, [sp, #12]
 80142a0:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80142a4:	bf48      	it	mi
 80142a6:	4647      	movmi	r7, r8
 80142a8:	44bb      	add	fp, r7
 80142aa:	f8ac b004 	strh.w	fp, [ip, #4]
 80142ae:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80142b2:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80142b6:	f8ac b006 	strh.w	fp, [ip, #6]
 80142ba:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80142be:	443b      	add	r3, r7
 80142c0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80142c4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80142c8:	bf58      	it	pl
 80142ca:	1a64      	subpl	r4, r4, r1
 80142cc:	ea5b 0707 	orrs.w	r7, fp, r7
 80142d0:	444e      	add	r6, r9
 80142d2:	d011      	beq.n	80142f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80142d4:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80142d8:	f1bb 0f00 	cmp.w	fp, #0
 80142dc:	db0c      	blt.n	80142f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80142de:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80142e0:	45bb      	cmp	fp, r7
 80142e2:	da09      	bge.n	80142f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80142e4:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80142e8:	45bb      	cmp	fp, r7
 80142ea:	bf3c      	itt	cc
 80142ec:	f10c 0708 	addcc.w	r7, ip, #8
 80142f0:	6107      	strcc	r7, [r0, #16]
 80142f2:	f10b 0701 	add.w	r7, fp, #1
 80142f6:	6087      	str	r7, [r0, #8]
 80142f8:	6907      	ldr	r7, [r0, #16]
 80142fa:	45b6      	cmp	lr, r6
 80142fc:	803e      	strh	r6, [r7, #0]
 80142fe:	807a      	strh	r2, [r7, #2]
 8014300:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014304:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014308:	d1c5      	bne.n	8014296 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801430a:	9a04      	ldr	r2, [sp, #16]
 801430c:	1ad3      	subs	r3, r2, r3
 801430e:	6902      	ldr	r2, [r0, #16]
 8014310:	8891      	ldrh	r1, [r2, #4]
 8014312:	88d6      	ldrh	r6, [r2, #6]
 8014314:	4419      	add	r1, r3
 8014316:	8091      	strh	r1, [r2, #4]
 8014318:	9902      	ldr	r1, [sp, #8]
 801431a:	f101 0c20 	add.w	ip, r1, #32
 801431e:	9901      	ldr	r1, [sp, #4]
 8014320:	ebac 0c01 	sub.w	ip, ip, r1
 8014324:	fb03 630c 	mla	r3, r3, ip, r6
 8014328:	80d3      	strh	r3, [r2, #6]
 801432a:	e74c      	b.n	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801432c:	9d05      	ldr	r5, [sp, #20]
 801432e:	1aa2      	subs	r2, r4, r2
 8014330:	eba5 0501 	sub.w	r5, r5, r1
 8014334:	9508      	str	r5, [sp, #32]
 8014336:	9202      	str	r2, [sp, #8]
 8014338:	f140 8128 	bpl.w	801458c <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801433c:	9a03      	ldr	r2, [sp, #12]
 801433e:	2a00      	cmp	r2, #0
 8014340:	f6ff af41 	blt.w	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014344:	9a02      	ldr	r2, [sp, #8]
 8014346:	4252      	negs	r2, r2
 8014348:	9202      	str	r2, [sp, #8]
 801434a:	9a06      	ldr	r2, [sp, #24]
 801434c:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014350:	f04f 34ff 	mov.w	r4, #4294967295
 8014354:	9206      	str	r2, [sp, #24]
 8014356:	462a      	mov	r2, r5
 8014358:	940b      	str	r4, [sp, #44]	; 0x2c
 801435a:	435a      	muls	r2, r3
 801435c:	2400      	movs	r4, #0
 801435e:	9d02      	ldr	r5, [sp, #8]
 8014360:	9401      	str	r4, [sp, #4]
 8014362:	9c02      	ldr	r4, [sp, #8]
 8014364:	fb92 f4f4 	sdiv	r4, r2, r4
 8014368:	fb05 2214 	mls	r2, r5, r4, r2
 801436c:	2a00      	cmp	r2, #0
 801436e:	9207      	str	r2, [sp, #28]
 8014370:	bfbc      	itt	lt
 8014372:	1952      	addlt	r2, r2, r5
 8014374:	9207      	strlt	r2, [sp, #28]
 8014376:	9a01      	ldr	r2, [sp, #4]
 8014378:	6905      	ldr	r5, [r0, #16]
 801437a:	bfb8      	it	lt
 801437c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014380:	eb04 0901 	add.w	r9, r4, r1
 8014384:	429a      	cmp	r2, r3
 8014386:	ea4f 1669 	mov.w	r6, r9, asr #5
 801438a:	f040 8112 	bne.w	80145b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801438e:	f9b5 3000 	ldrsh.w	r3, [r5]
 8014392:	429e      	cmp	r6, r3
 8014394:	d104      	bne.n	80143a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8014396:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801439a:	9a03      	ldr	r2, [sp, #12]
 801439c:	429a      	cmp	r2, r3
 801439e:	d01b      	beq.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80143a0:	88ea      	ldrh	r2, [r5, #6]
 80143a2:	88ab      	ldrh	r3, [r5, #4]
 80143a4:	4313      	orrs	r3, r2
 80143a6:	d010      	beq.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80143a8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80143ac:	2a00      	cmp	r2, #0
 80143ae:	db0c      	blt.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80143b0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80143b2:	429a      	cmp	r2, r3
 80143b4:	da09      	bge.n	80143ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80143b6:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80143ba:	429a      	cmp	r2, r3
 80143bc:	bf38      	it	cc
 80143be:	3508      	addcc	r5, #8
 80143c0:	f102 0201 	add.w	r2, r2, #1
 80143c4:	bf38      	it	cc
 80143c6:	6105      	strcc	r5, [r0, #16]
 80143c8:	6082      	str	r2, [r0, #8]
 80143ca:	6903      	ldr	r3, [r0, #16]
 80143cc:	9a03      	ldr	r2, [sp, #12]
 80143ce:	805a      	strh	r2, [r3, #2]
 80143d0:	2200      	movs	r2, #0
 80143d2:	801e      	strh	r6, [r3, #0]
 80143d4:	809a      	strh	r2, [r3, #4]
 80143d6:	80da      	strh	r2, [r3, #6]
 80143d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80143da:	9a03      	ldr	r2, [sp, #12]
 80143dc:	6901      	ldr	r1, [r0, #16]
 80143de:	441a      	add	r2, r3
 80143e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80143e4:	42b3      	cmp	r3, r6
 80143e6:	d103      	bne.n	80143f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 80143e8:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80143ec:	429a      	cmp	r2, r3
 80143ee:	d01a      	beq.n	8014426 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 80143f0:	88cc      	ldrh	r4, [r1, #6]
 80143f2:	888b      	ldrh	r3, [r1, #4]
 80143f4:	4323      	orrs	r3, r4
 80143f6:	d010      	beq.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 80143f8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80143fc:	2c00      	cmp	r4, #0
 80143fe:	db0c      	blt.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014400:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014402:	429c      	cmp	r4, r3
 8014404:	da09      	bge.n	801441a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8014406:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801440a:	429c      	cmp	r4, r3
 801440c:	bf38      	it	cc
 801440e:	3108      	addcc	r1, #8
 8014410:	f104 0401 	add.w	r4, r4, #1
 8014414:	bf38      	it	cc
 8014416:	6101      	strcc	r1, [r0, #16]
 8014418:	6084      	str	r4, [r0, #8]
 801441a:	6903      	ldr	r3, [r0, #16]
 801441c:	2100      	movs	r1, #0
 801441e:	801e      	strh	r6, [r3, #0]
 8014420:	805a      	strh	r2, [r3, #2]
 8014422:	8099      	strh	r1, [r3, #4]
 8014424:	80d9      	strh	r1, [r3, #6]
 8014426:	9b06      	ldr	r3, [sp, #24]
 8014428:	4293      	cmp	r3, r2
 801442a:	f000 8082 	beq.w	8014532 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801442e:	9b08      	ldr	r3, [sp, #32]
 8014430:	9c02      	ldr	r4, [sp, #8]
 8014432:	9902      	ldr	r1, [sp, #8]
 8014434:	015b      	lsls	r3, r3, #5
 8014436:	fb93 f1f1 	sdiv	r1, r3, r1
 801443a:	fb04 3311 	mls	r3, r4, r1, r3
 801443e:	2b00      	cmp	r3, #0
 8014440:	9103      	str	r1, [sp, #12]
 8014442:	9308      	str	r3, [sp, #32]
 8014444:	da04      	bge.n	8014450 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8014446:	1e4b      	subs	r3, r1, #1
 8014448:	9303      	str	r3, [sp, #12]
 801444a:	9b08      	ldr	r3, [sp, #32]
 801444c:	4423      	add	r3, r4
 801444e:	9308      	str	r3, [sp, #32]
 8014450:	9b07      	ldr	r3, [sp, #28]
 8014452:	9902      	ldr	r1, [sp, #8]
 8014454:	1a5b      	subs	r3, r3, r1
 8014456:	9307      	str	r3, [sp, #28]
 8014458:	9b01      	ldr	r3, [sp, #4]
 801445a:	f1c3 0320 	rsb	r3, r3, #32
 801445e:	930e      	str	r3, [sp, #56]	; 0x38
 8014460:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014462:	9b01      	ldr	r3, [sp, #4]
 8014464:	1a5b      	subs	r3, r3, r1
 8014466:	464f      	mov	r7, r9
 8014468:	930a      	str	r3, [sp, #40]	; 0x28
 801446a:	2600      	movs	r6, #0
 801446c:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8014470:	185b      	adds	r3, r3, r1
 8014472:	bf58      	it	pl
 8014474:	9902      	ldrpl	r1, [sp, #8]
 8014476:	9307      	str	r3, [sp, #28]
 8014478:	bf5d      	ittte	pl
 801447a:	1a5b      	subpl	r3, r3, r1
 801447c:	9307      	strpl	r3, [sp, #28]
 801447e:	9b03      	ldrpl	r3, [sp, #12]
 8014480:	9903      	ldrmi	r1, [sp, #12]
 8014482:	bf58      	it	pl
 8014484:	1c59      	addpl	r1, r3, #1
 8014486:	4489      	add	r9, r1
 8014488:	2a00      	cmp	r2, #0
 801448a:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801448e:	db2e      	blt.n	80144ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014490:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014492:	4293      	cmp	r3, r2
 8014494:	dd2b      	ble.n	80144ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8014496:	9c01      	ldr	r4, [sp, #4]
 8014498:	6905      	ldr	r5, [r0, #16]
 801449a:	46a0      	mov	r8, r4
 801449c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801449e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80144a2:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80144a6:	45a0      	cmp	r8, r4
 80144a8:	f040 814f 	bne.w	801474a <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80144ac:	f9b5 1000 	ldrsh.w	r1, [r5]
 80144b0:	4551      	cmp	r1, sl
 80144b2:	d103      	bne.n	80144bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80144b4:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80144b8:	4291      	cmp	r1, r2
 80144ba:	d018      	beq.n	80144ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80144bc:	ea5c 010e 	orrs.w	r1, ip, lr
 80144c0:	d00f      	beq.n	80144e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80144c2:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80144c6:	2900      	cmp	r1, #0
 80144c8:	db0b      	blt.n	80144e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80144ca:	428b      	cmp	r3, r1
 80144cc:	dd09      	ble.n	80144e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80144ce:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80144d2:	4299      	cmp	r1, r3
 80144d4:	bf38      	it	cc
 80144d6:	3508      	addcc	r5, #8
 80144d8:	f101 0101 	add.w	r1, r1, #1
 80144dc:	bf38      	it	cc
 80144de:	6105      	strcc	r5, [r0, #16]
 80144e0:	6081      	str	r1, [r0, #8]
 80144e2:	6903      	ldr	r3, [r0, #16]
 80144e4:	f8a3 a000 	strh.w	sl, [r3]
 80144e8:	805a      	strh	r2, [r3, #2]
 80144ea:	809e      	strh	r6, [r3, #4]
 80144ec:	80de      	strh	r6, [r3, #6]
 80144ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80144f0:	6901      	ldr	r1, [r0, #16]
 80144f2:	441a      	add	r2, r3
 80144f4:	88cc      	ldrh	r4, [r1, #6]
 80144f6:	888b      	ldrh	r3, [r1, #4]
 80144f8:	4323      	orrs	r3, r4
 80144fa:	d010      	beq.n	801451e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 80144fc:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8014500:	2c00      	cmp	r4, #0
 8014502:	db0c      	blt.n	801451e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8014504:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014506:	429c      	cmp	r4, r3
 8014508:	da09      	bge.n	801451e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801450a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801450e:	429c      	cmp	r4, r3
 8014510:	bf38      	it	cc
 8014512:	3108      	addcc	r1, #8
 8014514:	f104 0401 	add.w	r4, r4, #1
 8014518:	bf38      	it	cc
 801451a:	6101      	strcc	r1, [r0, #16]
 801451c:	6084      	str	r4, [r0, #8]
 801451e:	6903      	ldr	r3, [r0, #16]
 8014520:	f8a3 a000 	strh.w	sl, [r3]
 8014524:	805a      	strh	r2, [r3, #2]
 8014526:	809e      	strh	r6, [r3, #4]
 8014528:	80de      	strh	r6, [r3, #6]
 801452a:	9b06      	ldr	r3, [sp, #24]
 801452c:	4293      	cmp	r3, r2
 801452e:	464f      	mov	r7, r9
 8014530:	d19c      	bne.n	801446c <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8014532:	9b01      	ldr	r3, [sp, #4]
 8014534:	6907      	ldr	r7, [r0, #16]
 8014536:	f1c3 0620 	rsb	r6, r3, #32
 801453a:	9b05      	ldr	r3, [sp, #20]
 801453c:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014540:	9b04      	ldr	r3, [sp, #16]
 8014542:	429e      	cmp	r6, r3
 8014544:	f040 81cc 	bne.w	80148e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8014548:	f9b7 3000 	ldrsh.w	r3, [r7]
 801454c:	459e      	cmp	lr, r3
 801454e:	d104      	bne.n	801455a <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8014550:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014554:	429a      	cmp	r2, r3
 8014556:	f43f ae36 	beq.w	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801455a:	88f9      	ldrh	r1, [r7, #6]
 801455c:	88bb      	ldrh	r3, [r7, #4]
 801455e:	430b      	orrs	r3, r1
 8014560:	d010      	beq.n	8014584 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014562:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014566:	2b00      	cmp	r3, #0
 8014568:	db0c      	blt.n	8014584 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801456a:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801456c:	428b      	cmp	r3, r1
 801456e:	da09      	bge.n	8014584 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8014570:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014574:	428b      	cmp	r3, r1
 8014576:	bf38      	it	cc
 8014578:	3708      	addcc	r7, #8
 801457a:	f103 0301 	add.w	r3, r3, #1
 801457e:	bf38      	it	cc
 8014580:	6107      	strcc	r7, [r0, #16]
 8014582:	6083      	str	r3, [r0, #8]
 8014584:	6903      	ldr	r3, [r0, #16]
 8014586:	f8a3 e000 	strh.w	lr, [r3]
 801458a:	e5ff      	b.n	801418c <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801458c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801458e:	9c03      	ldr	r4, [sp, #12]
 8014590:	42a2      	cmp	r2, r4
 8014592:	f6ff ae18 	blt.w	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014596:	9c06      	ldr	r4, [sp, #24]
 8014598:	42a2      	cmp	r2, r4
 801459a:	bfb8      	it	lt
 801459c:	3201      	addlt	r2, #1
 801459e:	9c08      	ldr	r4, [sp, #32]
 80145a0:	bfb8      	it	lt
 80145a2:	9206      	strlt	r2, [sp, #24]
 80145a4:	f1c3 0220 	rsb	r2, r3, #32
 80145a8:	4362      	muls	r2, r4
 80145aa:	2401      	movs	r4, #1
 80145ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80145ae:	2420      	movs	r4, #32
 80145b0:	e6d5      	b.n	801435e <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80145b2:	f009 021f 	and.w	r2, r9, #31
 80145b6:	ea4f 1861 	mov.w	r8, r1, asr #5
 80145ba:	920c      	str	r2, [sp, #48]	; 0x30
 80145bc:	9a01      	ldr	r2, [sp, #4]
 80145be:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80145c2:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80145c6:	45b0      	cmp	r8, r6
 80145c8:	f001 011f 	and.w	r1, r1, #31
 80145cc:	eba2 0203 	sub.w	r2, r2, r3
 80145d0:	d108      	bne.n	80145e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80145d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80145d4:	4419      	add	r1, r3
 80145d6:	4496      	add	lr, r2
 80145d8:	fb02 a101 	mla	r1, r2, r1, sl
 80145dc:	f8a5 e004 	strh.w	lr, [r5, #4]
 80145e0:	80e9      	strh	r1, [r5, #6]
 80145e2:	e6f9      	b.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80145e4:	2c00      	cmp	r4, #0
 80145e6:	f2c0 80a9 	blt.w	801473c <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 80145ea:	2701      	movs	r7, #1
 80145ec:	f1c1 0c20 	rsb	ip, r1, #32
 80145f0:	970a      	str	r7, [sp, #40]	; 0x28
 80145f2:	fb02 f20c 	mul.w	r2, r2, ip
 80145f6:	2720      	movs	r7, #32
 80145f8:	9709      	str	r7, [sp, #36]	; 0x24
 80145fa:	fb92 fcf4 	sdiv	ip, r2, r4
 80145fe:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014600:	fb04 221c 	mls	r2, r4, ip, r2
 8014604:	2a00      	cmp	r2, #0
 8014606:	bfb8      	it	lt
 8014608:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801460c:	4439      	add	r1, r7
 801460e:	fb0c a101 	mla	r1, ip, r1, sl
 8014612:	80e9      	strh	r1, [r5, #6]
 8014614:	44e6      	add	lr, ip
 8014616:	990a      	ldr	r1, [sp, #40]	; 0x28
 8014618:	f8a5 e004 	strh.w	lr, [r5, #4]
 801461c:	eb08 0501 	add.w	r5, r8, r1
 8014620:	6901      	ldr	r1, [r0, #16]
 8014622:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014626:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801462a:	bfb8      	it	lt
 801462c:	1912      	addlt	r2, r2, r4
 801462e:	ea58 070e 	orrs.w	r7, r8, lr
 8014632:	d010      	beq.n	8014656 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014634:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014638:	f1be 0f00 	cmp.w	lr, #0
 801463c:	db0b      	blt.n	8014656 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801463e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014640:	45be      	cmp	lr, r7
 8014642:	da08      	bge.n	8014656 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8014644:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014648:	45be      	cmp	lr, r7
 801464a:	bf3c      	itt	cc
 801464c:	3108      	addcc	r1, #8
 801464e:	6101      	strcc	r1, [r0, #16]
 8014650:	f10e 0101 	add.w	r1, lr, #1
 8014654:	6081      	str	r1, [r0, #8]
 8014656:	6901      	ldr	r1, [r0, #16]
 8014658:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801465c:	800d      	strh	r5, [r1, #0]
 801465e:	f04f 0e00 	mov.w	lr, #0
 8014662:	42ae      	cmp	r6, r5
 8014664:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014668:	f8a1 e004 	strh.w	lr, [r1, #4]
 801466c:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014670:	4463      	add	r3, ip
 8014672:	d054      	beq.n	801471e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8014674:	9901      	ldr	r1, [sp, #4]
 8014676:	1ac9      	subs	r1, r1, r3
 8014678:	4461      	add	r1, ip
 801467a:	0149      	lsls	r1, r1, #5
 801467c:	fb91 fef4 	sdiv	lr, r1, r4
 8014680:	fb04 111e 	mls	r1, r4, lr, r1
 8014684:	2900      	cmp	r1, #0
 8014686:	bfb8      	it	lt
 8014688:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801468c:	f10e 0701 	add.w	r7, lr, #1
 8014690:	bfb8      	it	lt
 8014692:	1909      	addlt	r1, r1, r4
 8014694:	1b12      	subs	r2, r2, r4
 8014696:	970d      	str	r7, [sp, #52]	; 0x34
 8014698:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801469c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801469e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 80146a2:	1852      	adds	r2, r2, r1
 80146a4:	bf54      	ite	pl
 80146a6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 80146aa:	46f4      	movmi	ip, lr
 80146ac:	44e3      	add	fp, ip
 80146ae:	f8aa b004 	strh.w	fp, [sl, #4]
 80146b2:	f8ba b006 	ldrh.w	fp, [sl, #6]
 80146b6:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 80146ba:	f8aa b006 	strh.w	fp, [sl, #6]
 80146be:	4463      	add	r3, ip
 80146c0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80146c4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80146c8:	f8bc a004 	ldrh.w	sl, [ip, #4]
 80146cc:	bf58      	it	pl
 80146ce:	1b12      	subpl	r2, r2, r4
 80146d0:	443d      	add	r5, r7
 80146d2:	ea5b 070a 	orrs.w	r7, fp, sl
 80146d6:	d014      	beq.n	8014702 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80146d8:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 80146dc:	f1ba 0f00 	cmp.w	sl, #0
 80146e0:	db0f      	blt.n	8014702 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80146e2:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80146e4:	45ba      	cmp	sl, r7
 80146e6:	da0c      	bge.n	8014702 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 80146e8:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 80146ec:	45ba      	cmp	sl, r7
 80146ee:	bf38      	it	cc
 80146f0:	f10c 0c08 	addcc.w	ip, ip, #8
 80146f4:	f10a 0a01 	add.w	sl, sl, #1
 80146f8:	bf38      	it	cc
 80146fa:	f8c0 c010 	strcc.w	ip, [r0, #16]
 80146fe:	f8c0 a008 	str.w	sl, [r0, #8]
 8014702:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014706:	f04f 0700 	mov.w	r7, #0
 801470a:	42ae      	cmp	r6, r5
 801470c:	f8ac 5000 	strh.w	r5, [ip]
 8014710:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014714:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014718:	f8ac 7006 	strh.w	r7, [ip, #6]
 801471c:	d1bc      	bne.n	8014698 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801471e:	6904      	ldr	r4, [r0, #16]
 8014720:	9a01      	ldr	r2, [sp, #4]
 8014722:	990c      	ldr	r1, [sp, #48]	; 0x30
 8014724:	1ad3      	subs	r3, r2, r3
 8014726:	88a2      	ldrh	r2, [r4, #4]
 8014728:	441a      	add	r2, r3
 801472a:	80a2      	strh	r2, [r4, #4]
 801472c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801472e:	3120      	adds	r1, #32
 8014730:	1a89      	subs	r1, r1, r2
 8014732:	88e2      	ldrh	r2, [r4, #6]
 8014734:	fb03 2301 	mla	r3, r3, r1, r2
 8014738:	80e3      	strh	r3, [r4, #6]
 801473a:	e64d      	b.n	80143d8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801473c:	f04f 37ff 	mov.w	r7, #4294967295
 8014740:	970a      	str	r7, [sp, #40]	; 0x28
 8014742:	434a      	muls	r2, r1
 8014744:	4264      	negs	r4, r4
 8014746:	2700      	movs	r7, #0
 8014748:	e756      	b.n	80145f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801474a:	ea4f 1867 	mov.w	r8, r7, asr #5
 801474e:	f009 031f 	and.w	r3, r9, #31
 8014752:	45d0      	cmp	r8, sl
 8014754:	f007 071f 	and.w	r7, r7, #31
 8014758:	930f      	str	r3, [sp, #60]	; 0x3c
 801475a:	fa1f fc8c 	uxth.w	ip, ip
 801475e:	fa1f fe8e 	uxth.w	lr, lr
 8014762:	d10a      	bne.n	801477a <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8014764:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014766:	449c      	add	ip, r3
 8014768:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801476a:	f8a5 c004 	strh.w	ip, [r5, #4]
 801476e:	441f      	add	r7, r3
 8014770:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014772:	fb03 e707 	mla	r7, r3, r7, lr
 8014776:	80ef      	strh	r7, [r5, #6]
 8014778:	e6b9      	b.n	80144ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801477a:	2900      	cmp	r1, #0
 801477c:	f2c0 80a8 	blt.w	80148d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8014780:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8014782:	f1c7 0320 	rsb	r3, r7, #32
 8014786:	4363      	muls	r3, r4
 8014788:	2401      	movs	r4, #1
 801478a:	940d      	str	r4, [sp, #52]	; 0x34
 801478c:	2420      	movs	r4, #32
 801478e:	940c      	str	r4, [sp, #48]	; 0x30
 8014790:	fb93 f4f1 	sdiv	r4, r3, r1
 8014794:	fb01 3b14 	mls	fp, r1, r4, r3
 8014798:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801479a:	f1bb 0f00 	cmp.w	fp, #0
 801479e:	bfb8      	it	lt
 80147a0:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80147a4:	441f      	add	r7, r3
 80147a6:	fb04 e707 	mla	r7, r4, r7, lr
 80147aa:	44a4      	add	ip, r4
 80147ac:	f8a5 c004 	strh.w	ip, [r5, #4]
 80147b0:	80ef      	strh	r7, [r5, #6]
 80147b2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147b8:	f8bc e006 	ldrh.w	lr, [ip, #6]
 80147bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80147c0:	bfb8      	it	lt
 80147c2:	448b      	addlt	fp, r1
 80147c4:	eb08 0503 	add.w	r5, r8, r3
 80147c8:	ea5e 0307 	orrs.w	r3, lr, r7
 80147cc:	d011      	beq.n	80147f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80147ce:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 80147d2:	f1be 0f00 	cmp.w	lr, #0
 80147d6:	db0c      	blt.n	80147f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80147d8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80147da:	45be      	cmp	lr, r7
 80147dc:	da09      	bge.n	80147f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 80147de:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 80147e2:	45be      	cmp	lr, r7
 80147e4:	bf3c      	itt	cc
 80147e6:	f10c 0708 	addcc.w	r7, ip, #8
 80147ea:	6107      	strcc	r7, [r0, #16]
 80147ec:	f10e 0701 	add.w	r7, lr, #1
 80147f0:	6087      	str	r7, [r0, #8]
 80147f2:	6907      	ldr	r7, [r0, #16]
 80147f4:	b213      	sxth	r3, r2
 80147f6:	9310      	str	r3, [sp, #64]	; 0x40
 80147f8:	807b      	strh	r3, [r7, #2]
 80147fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80147fc:	803d      	strh	r5, [r7, #0]
 80147fe:	4555      	cmp	r5, sl
 8014800:	80be      	strh	r6, [r7, #4]
 8014802:	80fe      	strh	r6, [r7, #6]
 8014804:	eb04 0c03 	add.w	ip, r4, r3
 8014808:	d051      	beq.n	80148ae <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801480a:	9b01      	ldr	r3, [sp, #4]
 801480c:	eba3 070c 	sub.w	r7, r3, ip
 8014810:	443c      	add	r4, r7
 8014812:	0164      	lsls	r4, r4, #5
 8014814:	fb94 f8f1 	sdiv	r8, r4, r1
 8014818:	fb01 4418 	mls	r4, r1, r8, r4
 801481c:	2c00      	cmp	r4, #0
 801481e:	bfb8      	it	lt
 8014820:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014824:	ebab 0301 	sub.w	r3, fp, r1
 8014828:	f108 0701 	add.w	r7, r8, #1
 801482c:	bfb8      	it	lt
 801482e:	1864      	addlt	r4, r4, r1
 8014830:	9309      	str	r3, [sp, #36]	; 0x24
 8014832:	9711      	str	r7, [sp, #68]	; 0x44
 8014834:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014836:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801483a:	191b      	adds	r3, r3, r4
 801483c:	bf58      	it	pl
 801483e:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8014840:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014844:	9309      	str	r3, [sp, #36]	; 0x24
 8014846:	bf48      	it	mi
 8014848:	4647      	movmi	r7, r8
 801484a:	44bb      	add	fp, r7
 801484c:	f8ae b004 	strh.w	fp, [lr, #4]
 8014850:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014854:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014858:	f8ae b006 	strh.w	fp, [lr, #6]
 801485c:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014860:	44bc      	add	ip, r7
 8014862:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8014864:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014868:	443d      	add	r5, r7
 801486a:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801486e:	bf5c      	itt	pl
 8014870:	1a5b      	subpl	r3, r3, r1
 8014872:	9309      	strpl	r3, [sp, #36]	; 0x24
 8014874:	ea5b 0307 	orrs.w	r3, fp, r7
 8014878:	d011      	beq.n	801489e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801487a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801487e:	f1bb 0f00 	cmp.w	fp, #0
 8014882:	db0c      	blt.n	801489e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8014884:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014886:	45bb      	cmp	fp, r7
 8014888:	da09      	bge.n	801489e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801488a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801488e:	45bb      	cmp	fp, r7
 8014890:	bf3c      	itt	cc
 8014892:	f10e 0708 	addcc.w	r7, lr, #8
 8014896:	6107      	strcc	r7, [r0, #16]
 8014898:	f10b 0701 	add.w	r7, fp, #1
 801489c:	6087      	str	r7, [r0, #8]
 801489e:	6907      	ldr	r7, [r0, #16]
 80148a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148a2:	803d      	strh	r5, [r7, #0]
 80148a4:	4555      	cmp	r5, sl
 80148a6:	807b      	strh	r3, [r7, #2]
 80148a8:	80be      	strh	r6, [r7, #4]
 80148aa:	80fe      	strh	r6, [r7, #6]
 80148ac:	d1c2      	bne.n	8014834 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 80148ae:	9b01      	ldr	r3, [sp, #4]
 80148b0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80148b2:	eba3 0c0c 	sub.w	ip, r3, ip
 80148b6:	6903      	ldr	r3, [r0, #16]
 80148b8:	8899      	ldrh	r1, [r3, #4]
 80148ba:	4461      	add	r1, ip
 80148bc:	8099      	strh	r1, [r3, #4]
 80148be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80148c0:	3720      	adds	r7, #32
 80148c2:	1a7f      	subs	r7, r7, r1
 80148c4:	88d9      	ldrh	r1, [r3, #6]
 80148c6:	fb0c 1c07 	mla	ip, ip, r7, r1
 80148ca:	f8a3 c006 	strh.w	ip, [r3, #6]
 80148ce:	e60e      	b.n	80144ee <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80148d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80148d2:	f04f 34ff 	mov.w	r4, #4294967295
 80148d6:	940d      	str	r4, [sp, #52]	; 0x34
 80148d8:	437b      	muls	r3, r7
 80148da:	4249      	negs	r1, r1
 80148dc:	2400      	movs	r4, #0
 80148de:	e756      	b.n	801478e <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 80148e0:	9905      	ldr	r1, [sp, #20]
 80148e2:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 80148e6:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 80148ea:	f001 011f 	and.w	r1, r1, #31
 80148ee:	ea4f 1b69 	mov.w	fp, r9, asr #5
 80148f2:	9102      	str	r1, [sp, #8]
 80148f4:	9904      	ldr	r1, [sp, #16]
 80148f6:	45f3      	cmp	fp, lr
 80148f8:	f009 0c1f 	and.w	ip, r9, #31
 80148fc:	eba1 0406 	sub.w	r4, r1, r6
 8014900:	d108      	bne.n	8014914 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8014902:	9b02      	ldr	r3, [sp, #8]
 8014904:	449c      	add	ip, r3
 8014906:	44a0      	add	r8, r4
 8014908:	fb04 a40c 	mla	r4, r4, ip, sl
 801490c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014910:	80fc      	strh	r4, [r7, #6]
 8014912:	e458      	b.n	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8014914:	9905      	ldr	r1, [sp, #20]
 8014916:	ebb1 0109 	subs.w	r1, r1, r9
 801491a:	bf5b      	ittet	pl
 801491c:	f1cc 0520 	rsbpl	r5, ip, #32
 8014920:	436c      	mulpl	r4, r5
 8014922:	2500      	movmi	r5, #0
 8014924:	2520      	movpl	r5, #32
 8014926:	bf44      	itt	mi
 8014928:	fb04 f40c 	mulmi.w	r4, r4, ip
 801492c:	4249      	negmi	r1, r1
 801492e:	9501      	str	r5, [sp, #4]
 8014930:	9b01      	ldr	r3, [sp, #4]
 8014932:	fb94 f5f1 	sdiv	r5, r4, r1
 8014936:	fb01 4415 	mls	r4, r1, r5, r4
 801493a:	bf54      	ite	pl
 801493c:	f04f 0901 	movpl.w	r9, #1
 8014940:	f04f 39ff 	movmi.w	r9, #4294967295
 8014944:	2c00      	cmp	r4, #0
 8014946:	bfb8      	it	lt
 8014948:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801494c:	449c      	add	ip, r3
 801494e:	44a8      	add	r8, r5
 8014950:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014954:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014958:	f8a7 c006 	strh.w	ip, [r7, #6]
 801495c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014960:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014964:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014968:	bfb8      	it	lt
 801496a:	1864      	addlt	r4, r4, r1
 801496c:	ea58 0707 	orrs.w	r7, r8, r7
 8014970:	eb0b 0309 	add.w	r3, fp, r9
 8014974:	d011      	beq.n	801499a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014976:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801497a:	f1b8 0f00 	cmp.w	r8, #0
 801497e:	db0c      	blt.n	801499a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014980:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014982:	45b8      	cmp	r8, r7
 8014984:	da09      	bge.n	801499a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8014986:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801498a:	45b8      	cmp	r8, r7
 801498c:	bf3c      	itt	cc
 801498e:	f10c 0708 	addcc.w	r7, ip, #8
 8014992:	6107      	strcc	r7, [r0, #16]
 8014994:	f108 0701 	add.w	r7, r8, #1
 8014998:	6087      	str	r7, [r0, #8]
 801499a:	6907      	ldr	r7, [r0, #16]
 801499c:	f04f 0c00 	mov.w	ip, #0
 80149a0:	b212      	sxth	r2, r2
 80149a2:	459e      	cmp	lr, r3
 80149a4:	803b      	strh	r3, [r7, #0]
 80149a6:	807a      	strh	r2, [r7, #2]
 80149a8:	f8a7 c004 	strh.w	ip, [r7, #4]
 80149ac:	f8a7 c006 	strh.w	ip, [r7, #6]
 80149b0:	442e      	add	r6, r5
 80149b2:	d04d      	beq.n	8014a50 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 80149b4:	9f04      	ldr	r7, [sp, #16]
 80149b6:	1bbf      	subs	r7, r7, r6
 80149b8:	443d      	add	r5, r7
 80149ba:	016d      	lsls	r5, r5, #5
 80149bc:	fb95 f8f1 	sdiv	r8, r5, r1
 80149c0:	fb01 5518 	mls	r5, r1, r8, r5
 80149c4:	4565      	cmp	r5, ip
 80149c6:	bfb8      	it	lt
 80149c8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80149cc:	f108 0701 	add.w	r7, r8, #1
 80149d0:	bfb8      	it	lt
 80149d2:	186d      	addlt	r5, r5, r1
 80149d4:	1a64      	subs	r4, r4, r1
 80149d6:	9703      	str	r7, [sp, #12]
 80149d8:	f04f 0a00 	mov.w	sl, #0
 80149dc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80149e0:	1964      	adds	r4, r4, r5
 80149e2:	bf58      	it	pl
 80149e4:	9f03      	ldrpl	r7, [sp, #12]
 80149e6:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80149ea:	bf48      	it	mi
 80149ec:	4647      	movmi	r7, r8
 80149ee:	44bb      	add	fp, r7
 80149f0:	f8ac b004 	strh.w	fp, [ip, #4]
 80149f4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80149f8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80149fc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014a00:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014a04:	443e      	add	r6, r7
 8014a06:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014a0a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014a0e:	bf58      	it	pl
 8014a10:	1a64      	subpl	r4, r4, r1
 8014a12:	ea5b 0707 	orrs.w	r7, fp, r7
 8014a16:	444b      	add	r3, r9
 8014a18:	d011      	beq.n	8014a3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014a1a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014a1e:	f1bb 0f00 	cmp.w	fp, #0
 8014a22:	db0c      	blt.n	8014a3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014a24:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8014a26:	45bb      	cmp	fp, r7
 8014a28:	da09      	bge.n	8014a3e <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8014a2a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014a2e:	45bb      	cmp	fp, r7
 8014a30:	bf3c      	itt	cc
 8014a32:	f10c 0708 	addcc.w	r7, ip, #8
 8014a36:	6107      	strcc	r7, [r0, #16]
 8014a38:	f10b 0701 	add.w	r7, fp, #1
 8014a3c:	6087      	str	r7, [r0, #8]
 8014a3e:	6907      	ldr	r7, [r0, #16]
 8014a40:	459e      	cmp	lr, r3
 8014a42:	803b      	strh	r3, [r7, #0]
 8014a44:	807a      	strh	r2, [r7, #2]
 8014a46:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014a4a:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014a4e:	d1c5      	bne.n	80149dc <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8014a50:	9b04      	ldr	r3, [sp, #16]
 8014a52:	1b9e      	subs	r6, r3, r6
 8014a54:	6903      	ldr	r3, [r0, #16]
 8014a56:	889a      	ldrh	r2, [r3, #4]
 8014a58:	4432      	add	r2, r6
 8014a5a:	809a      	strh	r2, [r3, #4]
 8014a5c:	9a02      	ldr	r2, [sp, #8]
 8014a5e:	f102 0c20 	add.w	ip, r2, #32
 8014a62:	9a01      	ldr	r2, [sp, #4]
 8014a64:	ebac 0c02 	sub.w	ip, ip, r2
 8014a68:	88da      	ldrh	r2, [r3, #6]
 8014a6a:	fb06 260c 	mla	r6, r6, ip, r2
 8014a6e:	80de      	strh	r6, [r3, #6]
 8014a70:	f7ff bba9 	b.w	80141c6 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08014a74 <_ZN8touchgfx7Outline6lineToEii>:
 8014a74:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014a76:	079b      	lsls	r3, r3, #30
 8014a78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014a7a:	460e      	mov	r6, r1
 8014a7c:	4615      	mov	r5, r2
 8014a7e:	d511      	bpl.n	8014aa4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014a80:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014a84:	ea86 0701 	eor.w	r7, r6, r1
 8014a88:	ea85 0302 	eor.w	r3, r5, r2
 8014a8c:	433b      	orrs	r3, r7
 8014a8e:	d009      	beq.n	8014aa4 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014a90:	4633      	mov	r3, r6
 8014a92:	9500      	str	r5, [sp, #0]
 8014a94:	f7ff fb3e 	bl	8014114 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014a98:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014a9a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014a9e:	f043 0301 	orr.w	r3, r3, #1
 8014aa2:	6243      	str	r3, [r0, #36]	; 0x24
 8014aa4:	b003      	add	sp, #12
 8014aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014aa8 <_ZN8touchgfx7Outline6moveToEii>:
 8014aa8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014aaa:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014aac:	4615      	mov	r5, r2
 8014aae:	079a      	lsls	r2, r3, #30
 8014ab0:	4604      	mov	r4, r0
 8014ab2:	460e      	mov	r6, r1
 8014ab4:	d401      	bmi.n	8014aba <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014ab6:	f7ff faf9 	bl	80140ac <_ZN8touchgfx7Outline5resetEv>
 8014aba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014abc:	07db      	lsls	r3, r3, #31
 8014abe:	d504      	bpl.n	8014aca <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014ac0:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014ac4:	4620      	mov	r0, r4
 8014ac6:	f7ff ffd5 	bl	8014a74 <_ZN8touchgfx7Outline6lineToEii>
 8014aca:	6923      	ldr	r3, [r4, #16]
 8014acc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ad0:	1170      	asrs	r0, r6, #5
 8014ad2:	4290      	cmp	r0, r2
 8014ad4:	ea4f 1165 	mov.w	r1, r5, asr #5
 8014ad8:	d103      	bne.n	8014ae2 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8014ada:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014ade:	4291      	cmp	r1, r2
 8014ae0:	d01a      	beq.n	8014b18 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8014ae2:	88df      	ldrh	r7, [r3, #6]
 8014ae4:	889a      	ldrh	r2, [r3, #4]
 8014ae6:	433a      	orrs	r2, r7
 8014ae8:	d010      	beq.n	8014b0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014aea:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014aee:	2a00      	cmp	r2, #0
 8014af0:	db0c      	blt.n	8014b0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014af2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8014af4:	42ba      	cmp	r2, r7
 8014af6:	da09      	bge.n	8014b0c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8014af8:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014afc:	42ba      	cmp	r2, r7
 8014afe:	bf38      	it	cc
 8014b00:	3308      	addcc	r3, #8
 8014b02:	f102 0201 	add.w	r2, r2, #1
 8014b06:	bf38      	it	cc
 8014b08:	6123      	strcc	r3, [r4, #16]
 8014b0a:	60a2      	str	r2, [r4, #8]
 8014b0c:	6923      	ldr	r3, [r4, #16]
 8014b0e:	2200      	movs	r2, #0
 8014b10:	8018      	strh	r0, [r3, #0]
 8014b12:	8059      	strh	r1, [r3, #2]
 8014b14:	809a      	strh	r2, [r3, #4]
 8014b16:	80da      	strh	r2, [r3, #6]
 8014b18:	6166      	str	r6, [r4, #20]
 8014b1a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014b1e:	6225      	str	r5, [r4, #32]
 8014b20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014b22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014b22:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014b26:	b0d0      	sub	sp, #320	; 0x140
 8014b28:	466c      	mov	r4, sp
 8014b2a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014b2e:	4627      	mov	r7, r4
 8014b30:	1a0d      	subs	r5, r1, r0
 8014b32:	2d48      	cmp	r5, #72	; 0x48
 8014b34:	f100 0308 	add.w	r3, r0, #8
 8014b38:	f340 80d5 	ble.w	8014ce6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014b3c:	112d      	asrs	r5, r5, #4
 8014b3e:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8014b42:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014b46:	6816      	ldr	r6, [r2, #0]
 8014b48:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8014b4c:	6006      	str	r6, [r0, #0]
 8014b4e:	6856      	ldr	r6, [r2, #4]
 8014b50:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014b54:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014b58:	6046      	str	r6, [r0, #4]
 8014b5a:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014b5e:	f8a2 8002 	strh.w	r8, [r2, #2]
 8014b62:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014b66:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014b6a:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014b6e:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8014b72:	4565      	cmp	r5, ip
 8014b74:	f1a1 0208 	sub.w	r2, r1, #8
 8014b78:	db06      	blt.n	8014b88 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8014b7a:	d119      	bne.n	8014bb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014b7c:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8014b80:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8014b84:	42ae      	cmp	r6, r5
 8014b86:	dd13      	ble.n	8014bb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8014b88:	460e      	mov	r6, r1
 8014b8a:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8014b8e:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014b92:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8014b96:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8014b9a:	601d      	str	r5, [r3, #0]
 8014b9c:	6875      	ldr	r5, [r6, #4]
 8014b9e:	605d      	str	r5, [r3, #4]
 8014ba0:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014ba4:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014ba8:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014bac:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014bb0:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8014bb4:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8014bb8:	42ae      	cmp	r6, r5
 8014bba:	db06      	blt.n	8014bca <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8014bbc:	d116      	bne.n	8014bec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014bbe:	f9b0 c000 	ldrsh.w	ip, [r0]
 8014bc2:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8014bc6:	45ac      	cmp	ip, r5
 8014bc8:	da10      	bge.n	8014bec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8014bca:	681d      	ldr	r5, [r3, #0]
 8014bcc:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014bd0:	6005      	str	r5, [r0, #0]
 8014bd2:	685d      	ldr	r5, [r3, #4]
 8014bd4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8014bd8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8014bdc:	f8a0 8008 	strh.w	r8, [r0, #8]
 8014be0:	6045      	str	r5, [r0, #4]
 8014be2:	8146      	strh	r6, [r0, #10]
 8014be4:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8014be8:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8014bec:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8014bf0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014bf4:	4565      	cmp	r5, ip
 8014bf6:	db06      	blt.n	8014c06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8014bf8:	d119      	bne.n	8014c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014bfa:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8014bfe:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014c02:	42ae      	cmp	r6, r5
 8014c04:	da13      	bge.n	8014c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014c06:	460e      	mov	r6, r1
 8014c08:	f9b0 9000 	ldrsh.w	r9, [r0]
 8014c0c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8014c10:	6005      	str	r5, [r0, #0]
 8014c12:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8014c16:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8014c1a:	6875      	ldr	r5, [r6, #4]
 8014c1c:	6045      	str	r5, [r0, #4]
 8014c1e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8014c22:	f821 cc06 	strh.w	ip, [r1, #-6]
 8014c26:	f821 8c04 	strh.w	r8, [r1, #-4]
 8014c2a:	f821 ec02 	strh.w	lr, [r1, #-2]
 8014c2e:	3308      	adds	r3, #8
 8014c30:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8014c34:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8014c38:	45e6      	cmp	lr, ip
 8014c3a:	dbf8      	blt.n	8014c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014c3c:	d105      	bne.n	8014c4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014c3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8014c42:	f9b0 5000 	ldrsh.w	r5, [r0]
 8014c46:	42ae      	cmp	r6, r5
 8014c48:	dbf1      	blt.n	8014c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014c4a:	4615      	mov	r5, r2
 8014c4c:	3a08      	subs	r2, #8
 8014c4e:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8014c52:	45b4      	cmp	ip, r6
 8014c54:	dbf9      	blt.n	8014c4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014c56:	d105      	bne.n	8014c64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8014c58:	f9b0 8000 	ldrsh.w	r8, [r0]
 8014c5c:	f9b2 6000 	ldrsh.w	r6, [r2]
 8014c60:	45b0      	cmp	r8, r6
 8014c62:	dbf2      	blt.n	8014c4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8014c64:	4293      	cmp	r3, r2
 8014c66:	f1a5 0608 	sub.w	r6, r5, #8
 8014c6a:	d816      	bhi.n	8014c9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8014c6c:	f8d6 c000 	ldr.w	ip, [r6]
 8014c70:	f9b3 a000 	ldrsh.w	sl, [r3]
 8014c74:	f8c3 c000 	str.w	ip, [r3]
 8014c78:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8014c7c:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8014c80:	f8d6 c004 	ldr.w	ip, [r6, #4]
 8014c84:	f8c3 c004 	str.w	ip, [r3, #4]
 8014c88:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014c8c:	f825 ec06 	strh.w	lr, [r5, #-6]
 8014c90:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014c94:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014c98:	e7c9      	b.n	8014c2e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8014c9a:	f8d6 e000 	ldr.w	lr, [r6]
 8014c9e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8014ca2:	f8c0 e000 	str.w	lr, [r0]
 8014ca6:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8014caa:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8014cae:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8014cb2:	f8c0 e004 	str.w	lr, [r0, #4]
 8014cb6:	f825 ac08 	strh.w	sl, [r5, #-8]
 8014cba:	f825 cc06 	strh.w	ip, [r5, #-6]
 8014cbe:	f825 9c04 	strh.w	r9, [r5, #-4]
 8014cc2:	f825 8c02 	strh.w	r8, [r5, #-2]
 8014cc6:	1acd      	subs	r5, r1, r3
 8014cc8:	1a16      	subs	r6, r2, r0
 8014cca:	10ed      	asrs	r5, r5, #3
 8014ccc:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8014cd0:	bfb5      	itete	lt
 8014cd2:	e9c4 0200 	strdlt	r0, r2, [r4]
 8014cd6:	e9c4 3100 	strdge	r3, r1, [r4]
 8014cda:	460a      	movlt	r2, r1
 8014cdc:	4603      	movge	r3, r0
 8014cde:	3408      	adds	r4, #8
 8014ce0:	4618      	mov	r0, r3
 8014ce2:	4611      	mov	r1, r2
 8014ce4:	e724      	b.n	8014b30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014ce6:	4299      	cmp	r1, r3
 8014ce8:	d928      	bls.n	8014d3c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8014cea:	f1a3 0210 	sub.w	r2, r3, #16
 8014cee:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8014cf2:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8014cf6:	45ac      	cmp	ip, r5
 8014cf8:	db06      	blt.n	8014d08 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8014cfa:	d11d      	bne.n	8014d38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014cfc:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8014d00:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8014d04:	42ae      	cmp	r6, r5
 8014d06:	da17      	bge.n	8014d38 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8014d08:	4615      	mov	r5, r2
 8014d0a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8014d0e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8014d12:	6116      	str	r6, [r2, #16]
 8014d14:	686e      	ldr	r6, [r5, #4]
 8014d16:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8014d1a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8014d1e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8014d22:	42a8      	cmp	r0, r5
 8014d24:	6156      	str	r6, [r2, #20]
 8014d26:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8014d2a:	f8a2 800c 	strh.w	r8, [r2, #12]
 8014d2e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 8014d32:	f1a2 0208 	sub.w	r2, r2, #8
 8014d36:	d1da      	bne.n	8014cee <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8014d38:	3308      	adds	r3, #8
 8014d3a:	e7d4      	b.n	8014ce6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8014d3c:	42bc      	cmp	r4, r7
 8014d3e:	d903      	bls.n	8014d48 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8014d40:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8014d44:	3c08      	subs	r4, #8
 8014d46:	e6f3      	b.n	8014b30 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8014d48:	b050      	add	sp, #320	; 0x140
 8014d4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08014d4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8014d4e:	b510      	push	{r4, lr}
 8014d50:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014d52:	07da      	lsls	r2, r3, #31
 8014d54:	4604      	mov	r4, r0
 8014d56:	d507      	bpl.n	8014d68 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8014d58:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8014d5c:	f7ff fe8a 	bl	8014a74 <_ZN8touchgfx7Outline6lineToEii>
 8014d60:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8014d62:	f023 0301 	bic.w	r3, r3, #1
 8014d66:	6243      	str	r3, [r0, #36]	; 0x24
 8014d68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014d6a:	079b      	lsls	r3, r3, #30
 8014d6c:	d521      	bpl.n	8014db2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8014d6e:	6923      	ldr	r3, [r4, #16]
 8014d70:	88d9      	ldrh	r1, [r3, #6]
 8014d72:	889a      	ldrh	r2, [r3, #4]
 8014d74:	430a      	orrs	r2, r1
 8014d76:	d010      	beq.n	8014d9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014d78:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014d7c:	2a00      	cmp	r2, #0
 8014d7e:	db0c      	blt.n	8014d9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014d80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8014d82:	428a      	cmp	r2, r1
 8014d84:	da09      	bge.n	8014d9a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8014d86:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8014d8a:	4291      	cmp	r1, r2
 8014d8c:	bf88      	it	hi
 8014d8e:	3308      	addhi	r3, #8
 8014d90:	f102 0201 	add.w	r2, r2, #1
 8014d94:	bf88      	it	hi
 8014d96:	6123      	strhi	r3, [r4, #16]
 8014d98:	60a2      	str	r2, [r4, #8]
 8014d9a:	68a1      	ldr	r1, [r4, #8]
 8014d9c:	b129      	cbz	r1, 8014daa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014d9e:	6863      	ldr	r3, [r4, #4]
 8014da0:	4299      	cmp	r1, r3
 8014da2:	d802      	bhi.n	8014daa <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8014da4:	68e0      	ldr	r0, [r4, #12]
 8014da6:	f7ff febc 	bl	8014b22 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8014daa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014dac:	f023 0302 	bic.w	r3, r3, #2
 8014db0:	6263      	str	r3, [r4, #36]	; 0x24
 8014db2:	68e0      	ldr	r0, [r4, #12]
 8014db4:	bd10      	pop	{r4, pc}
	...

08014db8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8014db8:	4b02      	ldr	r3, [pc, #8]	; (8014dc4 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8014dba:	6018      	str	r0, [r3, #0]
 8014dbc:	4b02      	ldr	r3, [pc, #8]	; (8014dc8 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8014dbe:	6019      	str	r1, [r3, #0]
 8014dc0:	4770      	bx	lr
 8014dc2:	bf00      	nop
 8014dc4:	200137f4 	.word	0x200137f4
 8014dc8:	200137f8 	.word	0x200137f8

08014dcc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8014dcc:	4a02      	ldr	r2, [pc, #8]	; (8014dd8 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8014dce:	2300      	movs	r3, #0
 8014dd0:	6013      	str	r3, [r2, #0]
 8014dd2:	4a02      	ldr	r2, [pc, #8]	; (8014ddc <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8014dd4:	6013      	str	r3, [r2, #0]
 8014dd6:	4770      	bx	lr
 8014dd8:	200137f4 	.word	0x200137f4
 8014ddc:	200137f8 	.word	0x200137f8

08014de0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8014de0:	4b01      	ldr	r3, [pc, #4]	; (8014de8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8014de2:	6818      	ldr	r0, [r3, #0]
 8014de4:	4770      	bx	lr
 8014de6:	bf00      	nop
 8014de8:	200137f4 	.word	0x200137f4

08014dec <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8014dec:	4b01      	ldr	r3, [pc, #4]	; (8014df4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8014dee:	6818      	ldr	r0, [r3, #0]
 8014df0:	4770      	bx	lr
 8014df2:	bf00      	nop
 8014df4:	200137f8 	.word	0x200137f8

08014df8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8014df8:	b510      	push	{r4, lr}
 8014dfa:	6803      	ldr	r3, [r0, #0]
 8014dfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014dfe:	460c      	mov	r4, r1
 8014e00:	4798      	blx	r3
 8014e02:	1b03      	subs	r3, r0, r4
 8014e04:	4258      	negs	r0, r3
 8014e06:	4158      	adcs	r0, r3
 8014e08:	bd10      	pop	{r4, pc}
	...

08014e0c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8014e0c:	4b01      	ldr	r3, [pc, #4]	; (8014e14 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8014e0e:	6019      	str	r1, [r3, #0]
 8014e10:	4770      	bx	lr
 8014e12:	bf00      	nop
 8014e14:	200137fc 	.word	0x200137fc

08014e18 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8014e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e1c:	4696      	mov	lr, r2
 8014e1e:	4605      	mov	r5, r0
 8014e20:	4614      	mov	r4, r2
 8014e22:	460e      	mov	r6, r1
 8014e24:	461f      	mov	r7, r3
 8014e26:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e2a:	b097      	sub	sp, #92	; 0x5c
 8014e2c:	f10d 0c1c 	add.w	ip, sp, #28
 8014e30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e34:	f8de 3000 	ldr.w	r3, [lr]
 8014e38:	f8cc 3000 	str.w	r3, [ip]
 8014e3c:	f104 0e14 	add.w	lr, r4, #20
 8014e40:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e44:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014e48:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e4c:	f8de 3000 	ldr.w	r3, [lr]
 8014e50:	f8cc 3000 	str.w	r3, [ip]
 8014e54:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014e58:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e5c:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014e60:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014e64:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8014e68:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8014e6c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8014e70:	f8de 3000 	ldr.w	r3, [lr]
 8014e74:	f8cc 3000 	str.w	r3, [ip]
 8014e78:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014e7a:	682b      	ldr	r3, [r5, #0]
 8014e7c:	9201      	str	r2, [sp, #4]
 8014e7e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014e82:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014e84:	9200      	str	r2, [sp, #0]
 8014e86:	f8cd 8008 	str.w	r8, [sp, #8]
 8014e8a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8014e8e:	aa07      	add	r2, sp, #28
 8014e90:	463b      	mov	r3, r7
 8014e92:	4631      	mov	r1, r6
 8014e94:	4628      	mov	r0, r5
 8014e96:	47d8      	blx	fp
 8014e98:	46a6      	mov	lr, r4
 8014e9a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014e9e:	f10d 0c1c 	add.w	ip, sp, #28
 8014ea2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ea6:	f8de 3000 	ldr.w	r3, [lr]
 8014eaa:	f8cc 3000 	str.w	r3, [ip]
 8014eae:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8014eb2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8014eb6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8014eba:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ebe:	343c      	adds	r4, #60	; 0x3c
 8014ec0:	f8de 3000 	ldr.w	r3, [lr]
 8014ec4:	f8cc 3000 	str.w	r3, [ip]
 8014ec8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014eca:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8014ece:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8014ed2:	6823      	ldr	r3, [r4, #0]
 8014ed4:	f8cc 3000 	str.w	r3, [ip]
 8014ed8:	682b      	ldr	r3, [r5, #0]
 8014eda:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8014ede:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8014ee0:	9201      	str	r2, [sp, #4]
 8014ee2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8014ee4:	9200      	str	r2, [sp, #0]
 8014ee6:	f8cd 8008 	str.w	r8, [sp, #8]
 8014eea:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8014eec:	aa07      	add	r2, sp, #28
 8014eee:	463b      	mov	r3, r7
 8014ef0:	4631      	mov	r1, r6
 8014ef2:	4628      	mov	r0, r5
 8014ef4:	47a0      	blx	r4
 8014ef6:	b017      	add	sp, #92	; 0x5c
 8014ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014efc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8014efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f00:	b08d      	sub	sp, #52	; 0x34
 8014f02:	4688      	mov	r8, r1
 8014f04:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014f06:	f8d3 c000 	ldr.w	ip, [r3]
 8014f0a:	680f      	ldr	r7, [r1, #0]
 8014f0c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8014f10:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8014f14:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8014f18:	edd3 6a07 	vldr	s13, [r3, #28]
 8014f1c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8014f1e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8014f22:	f9b1 9000 	ldrsh.w	r9, [r1]
 8014f26:	f9ba 1000 	ldrsh.w	r1, [sl]
 8014f2a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8014f2e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8014f32:	eba7 070c 	sub.w	r7, r7, ip
 8014f36:	42bc      	cmp	r4, r7
 8014f38:	bfa8      	it	ge
 8014f3a:	463c      	movge	r4, r7
 8014f3c:	ee07 4a90 	vmov	s15, r4
 8014f40:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8014f44:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8014f48:	ee25 4a04 	vmul.f32	s8, s10, s8
 8014f4c:	ee65 4a24 	vmul.f32	s9, s10, s9
 8014f50:	ee25 5a27 	vmul.f32	s10, s10, s15
 8014f54:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014f58:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014f5c:	eb09 0e0c 	add.w	lr, r9, ip
 8014f60:	4571      	cmp	r1, lr
 8014f62:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8014f66:	ee32 1a05 	vadd.f32	s2, s4, s10
 8014f6a:	ee36 0a84 	vadd.f32	s0, s13, s8
 8014f6e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014f72:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014f76:	f340 808d 	ble.w	8015094 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8014f7a:	eba1 060e 	sub.w	r6, r1, lr
 8014f7e:	fb96 f5f4 	sdiv	r5, r6, r4
 8014f82:	ee07 5a10 	vmov	s14, r5
 8014f86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014f8a:	2d00      	cmp	r5, #0
 8014f8c:	fb04 6615 	mls	r6, r4, r5, r6
 8014f90:	eea7 0a04 	vfma.f32	s0, s14, s8
 8014f94:	eee7 0a24 	vfma.f32	s1, s14, s9
 8014f98:	eea7 1a05 	vfma.f32	s2, s14, s10
 8014f9c:	dd13      	ble.n	8014fc6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8014f9e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8014fa2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8014fa6:	eef5 6a40 	vcmp.f32	s13, #0.0
 8014faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014fae:	bf18      	it	ne
 8014fb0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8014fb4:	ee31 2a45 	vsub.f32	s4, s2, s10
 8014fb8:	bf08      	it	eq
 8014fba:	eeb0 7a67 	vmoveq.f32	s14, s15
 8014fbe:	ee61 1a87 	vmul.f32	s3, s3, s14
 8014fc2:	ee22 2a07 	vmul.f32	s4, s4, s14
 8014fc6:	fb05 f204 	mul.w	r2, r5, r4
 8014fca:	1abf      	subs	r7, r7, r2
 8014fcc:	4494      	add	ip, r2
 8014fce:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8014fd2:	4411      	add	r1, r2
 8014fd4:	eb09 020c 	add.w	r2, r9, ip
 8014fd8:	443a      	add	r2, r7
 8014fda:	b209      	sxth	r1, r1
 8014fdc:	428a      	cmp	r2, r1
 8014fde:	bfc4      	itt	gt
 8014fe0:	eba1 0209 	subgt.w	r2, r1, r9
 8014fe4:	eba2 070c 	subgt.w	r7, r2, ip
 8014fe8:	2f00      	cmp	r7, #0
 8014fea:	dd50      	ble.n	801508e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8014fec:	fb97 f1f4 	sdiv	r1, r7, r4
 8014ff0:	fb04 7211 	mls	r2, r4, r1, r7
 8014ff4:	b90a      	cbnz	r2, 8014ffa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8014ff6:	3901      	subs	r1, #1
 8014ff8:	4622      	mov	r2, r4
 8014ffa:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8014ffe:	6840      	ldr	r0, [r0, #4]
 8015000:	900b      	str	r0, [sp, #44]	; 0x2c
 8015002:	f8d0 a000 	ldr.w	sl, [r0]
 8015006:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8015008:	9008      	str	r0, [sp, #32]
 801500a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801500e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8015010:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8015014:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8015018:	695b      	ldr	r3, [r3, #20]
 801501a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801501c:	445b      	add	r3, fp
 801501e:	eef0 6a42 	vmov.f32	s13, s4
 8015022:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015026:	ee21 3a23 	vmul.f32	s6, s2, s7
 801502a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801502e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015032:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015036:	9307      	str	r3, [sp, #28]
 8015038:	ee17 7a90 	vmov	r7, s15
 801503c:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015040:	eeb0 7a61 	vmov.f32	s14, s3
 8015044:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8015048:	ee16 3a90 	vmov	r3, s13
 801504c:	fb97 f7f4 	sdiv	r7, r7, r4
 8015050:	ee17 ca90 	vmov	ip, s15
 8015054:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8015058:	fb9c fcf4 	sdiv	ip, ip, r4
 801505c:	fb0c 3306 	mla	r3, ip, r6, r3
 8015060:	9302      	str	r3, [sp, #8]
 8015062:	ee17 3a10 	vmov	r3, s14
 8015066:	44b6      	add	lr, r6
 8015068:	fb04 e505 	mla	r5, r4, r5, lr
 801506c:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015070:	fb07 3706 	mla	r7, r7, r6, r3
 8015074:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8015078:	e9cd 4700 	strd	r4, r7, [sp]
 801507c:	2900      	cmp	r1, #0
 801507e:	bfcc      	ite	gt
 8015080:	46a1      	movgt	r9, r4
 8015082:	4691      	movle	r9, r2
 8015084:	eba9 0306 	sub.w	r3, r9, r6
 8015088:	f8da 4008 	ldr.w	r4, [sl, #8]
 801508c:	47a0      	blx	r4
 801508e:	b00d      	add	sp, #52	; 0x34
 8015090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015094:	2500      	movs	r5, #0
 8015096:	462e      	mov	r6, r5
 8015098:	e799      	b.n	8014fce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801509c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801509c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150a0:	b0db      	sub	sp, #364	; 0x16c
 80150a2:	461d      	mov	r5, r3
 80150a4:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80150a8:	930a      	str	r3, [sp, #40]	; 0x28
 80150aa:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80150ae:	930b      	str	r3, [sp, #44]	; 0x2c
 80150b0:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80150b4:	9310      	str	r3, [sp, #64]	; 0x40
 80150b6:	6803      	ldr	r3, [r0, #0]
 80150b8:	910f      	str	r1, [sp, #60]	; 0x3c
 80150ba:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80150bc:	9009      	str	r0, [sp, #36]	; 0x24
 80150be:	4614      	mov	r4, r2
 80150c0:	4629      	mov	r1, r5
 80150c2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80150c6:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80150ca:	47b8      	blx	r7
 80150cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80150ce:	6058      	str	r0, [r3, #4]
 80150d0:	2800      	cmp	r0, #0
 80150d2:	f000 83a1 	beq.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80150d6:	682b      	ldr	r3, [r5, #0]
 80150d8:	9314      	str	r3, [sp, #80]	; 0x50
 80150da:	686b      	ldr	r3, [r5, #4]
 80150dc:	9315      	str	r3, [sp, #84]	; 0x54
 80150de:	4bc4      	ldr	r3, [pc, #784]	; (80153f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80150e0:	ed94 7a02 	vldr	s14, [r4, #8]
 80150e4:	7819      	ldrb	r1, [r3, #0]
 80150e6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80150ea:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80150ee:	2900      	cmp	r1, #0
 80150f0:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80150f4:	bf16      	itet	ne
 80150f6:	4619      	movne	r1, r3
 80150f8:	4611      	moveq	r1, r2
 80150fa:	4613      	movne	r3, r2
 80150fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015100:	9116      	str	r1, [sp, #88]	; 0x58
 8015102:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8015106:	f240 8387 	bls.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801510a:	ed94 7a07 	vldr	s14, [r4, #28]
 801510e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015116:	f240 837f 	bls.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801511a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801511e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8015122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015126:	f240 8377 	bls.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801512a:	6822      	ldr	r2, [r4, #0]
 801512c:	4bb1      	ldr	r3, [pc, #708]	; (80153f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801512e:	429a      	cmp	r2, r3
 8015130:	f2c0 8372 	blt.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015134:	49b0      	ldr	r1, [pc, #704]	; (80153f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8015136:	6963      	ldr	r3, [r4, #20]
 8015138:	428a      	cmp	r2, r1
 801513a:	f300 836d 	bgt.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801513e:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015142:	48ae      	ldr	r0, [pc, #696]	; (80153fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015144:	33ff      	adds	r3, #255	; 0xff
 8015146:	4283      	cmp	r3, r0
 8015148:	f200 8366 	bhi.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801514c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801514e:	4dac      	ldr	r5, [pc, #688]	; (8015400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015150:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8015154:	33ff      	adds	r3, #255	; 0xff
 8015156:	42ab      	cmp	r3, r5
 8015158:	f200 835e 	bhi.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801515c:	6862      	ldr	r2, [r4, #4]
 801515e:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8015162:	33ff      	adds	r3, #255	; 0xff
 8015164:	4283      	cmp	r3, r0
 8015166:	f200 8357 	bhi.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801516a:	69a1      	ldr	r1, [r4, #24]
 801516c:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8015170:	33ff      	adds	r3, #255	; 0xff
 8015172:	4283      	cmp	r3, r0
 8015174:	f200 8350 	bhi.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015178:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801517a:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801517e:	30ff      	adds	r0, #255	; 0xff
 8015180:	42a8      	cmp	r0, r5
 8015182:	f200 8349 	bhi.w	8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015186:	428a      	cmp	r2, r1
 8015188:	f280 8110 	bge.w	80153ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801518c:	429a      	cmp	r2, r3
 801518e:	f300 8119 	bgt.w	80153c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015192:	4299      	cmp	r1, r3
 8015194:	f280 811d 	bge.w	80153d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8015198:	2502      	movs	r5, #2
 801519a:	2701      	movs	r7, #1
 801519c:	46a9      	mov	r9, r5
 801519e:	46b8      	mov	r8, r7
 80151a0:	f04f 0a00 	mov.w	sl, #0
 80151a4:	4621      	mov	r1, r4
 80151a6:	a849      	add	r0, sp, #292	; 0x124
 80151a8:	f003 ff2a 	bl	8019000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80151ac:	4622      	mov	r2, r4
 80151ae:	4653      	mov	r3, sl
 80151b0:	a949      	add	r1, sp, #292	; 0x124
 80151b2:	f8cd 9000 	str.w	r9, [sp]
 80151b6:	a819      	add	r0, sp, #100	; 0x64
 80151b8:	f004 f852 	bl	8019260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80151bc:	4622      	mov	r2, r4
 80151be:	4653      	mov	r3, sl
 80151c0:	a949      	add	r1, sp, #292	; 0x124
 80151c2:	f8cd 8000 	str.w	r8, [sp]
 80151c6:	a829      	add	r0, sp, #164	; 0xa4
 80151c8:	f004 f84a 	bl	8019260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80151cc:	4643      	mov	r3, r8
 80151ce:	4622      	mov	r2, r4
 80151d0:	a949      	add	r1, sp, #292	; 0x124
 80151d2:	f8cd 9000 	str.w	r9, [sp]
 80151d6:	a839      	add	r0, sp, #228	; 0xe4
 80151d8:	f004 f842 	bl	8019260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80151dc:	42af      	cmp	r7, r5
 80151de:	bfb5      	itete	lt
 80151e0:	2300      	movlt	r3, #0
 80151e2:	2301      	movge	r3, #1
 80151e4:	930e      	strlt	r3, [sp, #56]	; 0x38
 80151e6:	930e      	strge	r3, [sp, #56]	; 0x38
 80151e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80151ea:	e893 0003 	ldmia.w	r3, {r0, r1}
 80151ee:	af12      	add	r7, sp, #72	; 0x48
 80151f0:	bfb9      	ittee	lt
 80151f2:	ad29      	addlt	r5, sp, #164	; 0xa4
 80151f4:	ac19      	addlt	r4, sp, #100	; 0x64
 80151f6:	ad19      	addge	r5, sp, #100	; 0x64
 80151f8:	ac29      	addge	r4, sp, #164	; 0xa4
 80151fa:	e887 0003 	stmia.w	r7, {r0, r1}
 80151fe:	b928      	cbnz	r0, 801520c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8015200:	4b80      	ldr	r3, [pc, #512]	; (8015404 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8015202:	6818      	ldr	r0, [r3, #0]
 8015204:	6803      	ldr	r3, [r0, #0]
 8015206:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015208:	4798      	blx	r3
 801520a:	6038      	str	r0, [r7, #0]
 801520c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801520e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015212:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015216:	930c      	str	r3, [sp, #48]	; 0x30
 8015218:	990c      	ldr	r1, [sp, #48]	; 0x30
 801521a:	6963      	ldr	r3, [r4, #20]
 801521c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801521e:	440b      	add	r3, r1
 8015220:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015224:	4408      	add	r0, r1
 8015226:	b200      	sxth	r0, r0
 8015228:	4283      	cmp	r3, r0
 801522a:	900d      	str	r0, [sp, #52]	; 0x34
 801522c:	f280 80dd 	bge.w	80153ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8015230:	428b      	cmp	r3, r1
 8015232:	da08      	bge.n	8015246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015234:	2a00      	cmp	r2, #0
 8015236:	dd06      	ble.n	8015246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8015238:	1acb      	subs	r3, r1, r3
 801523a:	429a      	cmp	r2, r3
 801523c:	f2c0 80e4 	blt.w	8015408 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015240:	2b00      	cmp	r3, #0
 8015242:	f300 80e2 	bgt.w	801540a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8015246:	6967      	ldr	r7, [r4, #20]
 8015248:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801524a:	443b      	add	r3, r7
 801524c:	461f      	mov	r7, r3
 801524e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015250:	1bdf      	subs	r7, r3, r7
 8015252:	4297      	cmp	r7, r2
 8015254:	bfa8      	it	ge
 8015256:	4617      	movge	r7, r2
 8015258:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801525c:	2f00      	cmp	r7, #0
 801525e:	f340 8166 	ble.w	801552e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015262:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015264:	6829      	ldr	r1, [r5, #0]
 8015266:	f9b3 2000 	ldrsh.w	r2, [r3]
 801526a:	f9bb 3000 	ldrsh.w	r3, [fp]
 801526e:	6820      	ldr	r0, [r4, #0]
 8015270:	4411      	add	r1, r2
 8015272:	4299      	cmp	r1, r3
 8015274:	dd1a      	ble.n	80152ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015276:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801527a:	440b      	add	r3, r1
 801527c:	4402      	add	r2, r0
 801527e:	b21b      	sxth	r3, r3
 8015280:	429a      	cmp	r2, r3
 8015282:	dc13      	bgt.n	80152ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015284:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015286:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015288:	681b      	ldr	r3, [r3, #0]
 801528a:	9206      	str	r2, [sp, #24]
 801528c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801528e:	9205      	str	r2, [sp, #20]
 8015290:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015292:	9500      	str	r5, [sp, #0]
 8015294:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015298:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801529a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801529c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80152a0:	a912      	add	r1, sp, #72	; 0x48
 80152a2:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80152a6:	aa49      	add	r2, sp, #292	; 0x124
 80152a8:	4623      	mov	r3, r4
 80152aa:	47c8      	blx	r9
 80152ac:	e9d4 2300 	ldrd	r2, r3, [r4]
 80152b0:	441a      	add	r2, r3
 80152b2:	6963      	ldr	r3, [r4, #20]
 80152b4:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80152b8:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80152bc:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80152c0:	68a1      	ldr	r1, [r4, #8]
 80152c2:	ed94 6a08 	vldr	s12, [r4, #32]
 80152c6:	6022      	str	r2, [r4, #0]
 80152c8:	3301      	adds	r3, #1
 80152ca:	6163      	str	r3, [r4, #20]
 80152cc:	69a3      	ldr	r3, [r4, #24]
 80152ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80152d2:	3b01      	subs	r3, #1
 80152d4:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80152d8:	61a3      	str	r3, [r4, #24]
 80152da:	6923      	ldr	r3, [r4, #16]
 80152dc:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80152e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80152e4:	edd4 6a07 	vldr	s13, [r4, #28]
 80152e8:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80152ec:	440b      	add	r3, r1
 80152ee:	68e1      	ldr	r1, [r4, #12]
 80152f0:	6123      	str	r3, [r4, #16]
 80152f2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80152f6:	428b      	cmp	r3, r1
 80152f8:	edc4 6a07 	vstr	s13, [r4, #28]
 80152fc:	db15      	blt.n	801532a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80152fe:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015302:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015306:	3201      	adds	r2, #1
 8015308:	edc4 6a07 	vstr	s13, [r4, #28]
 801530c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8015310:	6022      	str	r2, [r4, #0]
 8015312:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015316:	1a5b      	subs	r3, r3, r1
 8015318:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801531c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8015320:	6123      	str	r3, [r4, #16]
 8015322:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015326:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801532a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801532e:	441a      	add	r2, r3
 8015330:	696b      	ldr	r3, [r5, #20]
 8015332:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015336:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801533a:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801533e:	68a9      	ldr	r1, [r5, #8]
 8015340:	ed95 6a08 	vldr	s12, [r5, #32]
 8015344:	602a      	str	r2, [r5, #0]
 8015346:	3301      	adds	r3, #1
 8015348:	616b      	str	r3, [r5, #20]
 801534a:	69ab      	ldr	r3, [r5, #24]
 801534c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015350:	3b01      	subs	r3, #1
 8015352:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015356:	61ab      	str	r3, [r5, #24]
 8015358:	692b      	ldr	r3, [r5, #16]
 801535a:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801535e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015362:	edd5 6a07 	vldr	s13, [r5, #28]
 8015366:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801536a:	440b      	add	r3, r1
 801536c:	68e9      	ldr	r1, [r5, #12]
 801536e:	612b      	str	r3, [r5, #16]
 8015370:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015374:	428b      	cmp	r3, r1
 8015376:	edc5 6a07 	vstr	s13, [r5, #28]
 801537a:	db15      	blt.n	80153a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801537c:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8015380:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015384:	3201      	adds	r2, #1
 8015386:	edc5 6a07 	vstr	s13, [r5, #28]
 801538a:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801538e:	602a      	str	r2, [r5, #0]
 8015390:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015394:	1a5b      	subs	r3, r3, r1
 8015396:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801539a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801539e:	612b      	str	r3, [r5, #16]
 80153a0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80153a4:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80153a8:	3f01      	subs	r7, #1
 80153aa:	e757      	b.n	801525c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80153ac:	4299      	cmp	r1, r3
 80153ae:	dc13      	bgt.n	80153d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80153b0:	429a      	cmp	r2, r3
 80153b2:	da14      	bge.n	80153de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80153b4:	2502      	movs	r5, #2
 80153b6:	2703      	movs	r7, #3
 80153b8:	46a9      	mov	r9, r5
 80153ba:	f04f 0800 	mov.w	r8, #0
 80153be:	f04f 0a01 	mov.w	sl, #1
 80153c2:	e6ef      	b.n	80151a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80153c4:	2501      	movs	r5, #1
 80153c6:	2700      	movs	r7, #0
 80153c8:	46a9      	mov	r9, r5
 80153ca:	46b8      	mov	r8, r7
 80153cc:	f04f 0a02 	mov.w	sl, #2
 80153d0:	e6e8      	b.n	80151a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80153d2:	2501      	movs	r5, #1
 80153d4:	2702      	movs	r7, #2
 80153d6:	e6e1      	b.n	801519c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 80153d8:	2500      	movs	r5, #0
 80153da:	2701      	movs	r7, #1
 80153dc:	e7f4      	b.n	80153c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80153de:	2702      	movs	r7, #2
 80153e0:	2503      	movs	r5, #3
 80153e2:	f04f 0900 	mov.w	r9, #0
 80153e6:	46b8      	mov	r8, r7
 80153e8:	e7e9      	b.n	80153be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80153ea:	4613      	mov	r3, r2
 80153ec:	e728      	b.n	8015240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80153ee:	bf00      	nop
 80153f0:	200137e4 	.word	0x200137e4
 80153f4:	fffd8f01 	.word	0xfffd8f01
 80153f8:	00027100 	.word	0x00027100
 80153fc:	0004e1ff 	.word	0x0004e1ff
 8015400:	0004e1fe 	.word	0x0004e1fe
 8015404:	200137ec 	.word	0x200137ec
 8015408:	4613      	mov	r3, r2
 801540a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801540c:	9111      	str	r1, [sp, #68]	; 0x44
 801540e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8015412:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8015416:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8015418:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801541c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8015420:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8015424:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8015428:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801542c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8015430:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8015434:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8015438:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801543c:	469e      	mov	lr, r3
 801543e:	469c      	mov	ip, r3
 8015440:	f04f 0900 	mov.w	r9, #0
 8015444:	f1bc 0f00 	cmp.w	ip, #0
 8015448:	d147      	bne.n	80154da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801544a:	eb03 0c07 	add.w	ip, r3, r7
 801544e:	1ad7      	subs	r7, r2, r3
 8015450:	f1b9 0f00 	cmp.w	r9, #0
 8015454:	d009      	beq.n	801546a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8015456:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801545a:	9029      	str	r0, [sp, #164]	; 0xa4
 801545c:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8015460:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8015464:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8015468:	912d      	str	r1, [sp, #180]	; 0xb4
 801546a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801546c:	9111      	str	r1, [sp, #68]	; 0x44
 801546e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8015472:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015476:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801547a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801547e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8015482:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015486:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801548a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801548e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8015492:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015496:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801549a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801549e:	f04f 0800 	mov.w	r8, #0
 80154a2:	f1be 0f00 	cmp.w	lr, #0
 80154a6:	d031      	beq.n	801550c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80154a8:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80154aa:	4431      	add	r1, r6
 80154ac:	4549      	cmp	r1, r9
 80154ae:	4450      	add	r0, sl
 80154b0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80154b4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80154b8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80154bc:	db08      	blt.n	80154d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80154be:	ee77 7a85 	vadd.f32	s15, s15, s10
 80154c2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80154c6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80154ca:	3001      	adds	r0, #1
 80154cc:	eba1 0109 	sub.w	r1, r1, r9
 80154d0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80154d4:	f04f 0801 	mov.w	r8, #1
 80154d8:	e7e3      	b.n	80154a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 80154da:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80154dc:	4431      	add	r1, r6
 80154de:	4541      	cmp	r1, r8
 80154e0:	4450      	add	r0, sl
 80154e2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80154e6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80154ea:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80154ee:	db08      	blt.n	8015502 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80154f0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80154f4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80154f8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80154fc:	3001      	adds	r0, #1
 80154fe:	eba1 0108 	sub.w	r1, r1, r8
 8015502:	f10c 3cff 	add.w	ip, ip, #4294967295
 8015506:	f04f 0901 	mov.w	r9, #1
 801550a:	e79b      	b.n	8015444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801550c:	449c      	add	ip, r3
 801550e:	1aff      	subs	r7, r7, r3
 8015510:	f1b8 0f00 	cmp.w	r8, #0
 8015514:	d009      	beq.n	801552a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8015516:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801551a:	9019      	str	r0, [sp, #100]	; 0x64
 801551c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8015520:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8015524:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015528:	911d      	str	r1, [sp, #116]	; 0x74
 801552a:	1ad2      	subs	r2, r2, r3
 801552c:	e68b      	b.n	8015246 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801552e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015530:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8015532:	2b00      	cmp	r3, #0
 8015534:	f000 80d1 	beq.w	80156da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8015538:	ad19      	add	r5, sp, #100	; 0x64
 801553a:	ac39      	add	r4, sp, #228	; 0xe4
 801553c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801553e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015542:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015546:	930c      	str	r3, [sp, #48]	; 0x30
 8015548:	990c      	ldr	r1, [sp, #48]	; 0x30
 801554a:	6963      	ldr	r3, [r4, #20]
 801554c:	440b      	add	r3, r1
 801554e:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015552:	4408      	add	r0, r1
 8015554:	b200      	sxth	r0, r0
 8015556:	4283      	cmp	r3, r0
 8015558:	900d      	str	r0, [sp, #52]	; 0x34
 801555a:	f280 80c1 	bge.w	80156e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801555e:	428b      	cmp	r3, r1
 8015560:	da08      	bge.n	8015574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015562:	2a00      	cmp	r2, #0
 8015564:	dd06      	ble.n	8015574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015566:	1acb      	subs	r3, r1, r3
 8015568:	429a      	cmp	r2, r3
 801556a:	f2c0 80bb 	blt.w	80156e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801556e:	2b00      	cmp	r3, #0
 8015570:	f300 80b9 	bgt.w	80156e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015574:	6967      	ldr	r7, [r4, #20]
 8015576:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015578:	443b      	add	r3, r7
 801557a:	461f      	mov	r7, r3
 801557c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801557e:	1bdf      	subs	r7, r3, r7
 8015580:	4297      	cmp	r7, r2
 8015582:	bfa8      	it	ge
 8015584:	4617      	movge	r7, r2
 8015586:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801558a:	2f00      	cmp	r7, #0
 801558c:	f340 813c 	ble.w	8015808 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015590:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8015592:	6829      	ldr	r1, [r5, #0]
 8015594:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015598:	f9bb 3000 	ldrsh.w	r3, [fp]
 801559c:	6820      	ldr	r0, [r4, #0]
 801559e:	4411      	add	r1, r2
 80155a0:	4299      	cmp	r1, r3
 80155a2:	dd1a      	ble.n	80155da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80155a4:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80155a8:	440b      	add	r3, r1
 80155aa:	4402      	add	r2, r0
 80155ac:	b21b      	sxth	r3, r3
 80155ae:	429a      	cmp	r2, r3
 80155b0:	dc13      	bgt.n	80155da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80155b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80155b6:	681b      	ldr	r3, [r3, #0]
 80155b8:	9206      	str	r2, [sp, #24]
 80155ba:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80155bc:	9205      	str	r2, [sp, #20]
 80155be:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80155c0:	9500      	str	r5, [sp, #0]
 80155c2:	e9cd b203 	strd	fp, r2, [sp, #12]
 80155c6:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80155c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80155ca:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80155ce:	a912      	add	r1, sp, #72	; 0x48
 80155d0:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80155d4:	aa49      	add	r2, sp, #292	; 0x124
 80155d6:	4623      	mov	r3, r4
 80155d8:	47c8      	blx	r9
 80155da:	e9d4 2300 	ldrd	r2, r3, [r4]
 80155de:	441a      	add	r2, r3
 80155e0:	6963      	ldr	r3, [r4, #20]
 80155e2:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80155e6:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80155ea:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80155ee:	68a1      	ldr	r1, [r4, #8]
 80155f0:	ed94 6a08 	vldr	s12, [r4, #32]
 80155f4:	6022      	str	r2, [r4, #0]
 80155f6:	3301      	adds	r3, #1
 80155f8:	6163      	str	r3, [r4, #20]
 80155fa:	69a3      	ldr	r3, [r4, #24]
 80155fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015600:	3b01      	subs	r3, #1
 8015602:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8015606:	61a3      	str	r3, [r4, #24]
 8015608:	6923      	ldr	r3, [r4, #16]
 801560a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801560e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015612:	edd4 6a07 	vldr	s13, [r4, #28]
 8015616:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801561a:	440b      	add	r3, r1
 801561c:	68e1      	ldr	r1, [r4, #12]
 801561e:	6123      	str	r3, [r4, #16]
 8015620:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015624:	428b      	cmp	r3, r1
 8015626:	edc4 6a07 	vstr	s13, [r4, #28]
 801562a:	db15      	blt.n	8015658 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801562c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8015630:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015634:	3201      	adds	r2, #1
 8015636:	edc4 6a07 	vstr	s13, [r4, #28]
 801563a:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801563e:	6022      	str	r2, [r4, #0]
 8015640:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015644:	1a5b      	subs	r3, r3, r1
 8015646:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801564a:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801564e:	6123      	str	r3, [r4, #16]
 8015650:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015654:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8015658:	e9d5 2300 	ldrd	r2, r3, [r5]
 801565c:	441a      	add	r2, r3
 801565e:	696b      	ldr	r3, [r5, #20]
 8015660:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8015664:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8015668:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801566c:	68a9      	ldr	r1, [r5, #8]
 801566e:	ed95 6a08 	vldr	s12, [r5, #32]
 8015672:	602a      	str	r2, [r5, #0]
 8015674:	3301      	adds	r3, #1
 8015676:	616b      	str	r3, [r5, #20]
 8015678:	69ab      	ldr	r3, [r5, #24]
 801567a:	ee37 7a27 	vadd.f32	s14, s14, s15
 801567e:	3b01      	subs	r3, #1
 8015680:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8015684:	61ab      	str	r3, [r5, #24]
 8015686:	692b      	ldr	r3, [r5, #16]
 8015688:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801568c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015690:	edd5 6a07 	vldr	s13, [r5, #28]
 8015694:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8015698:	440b      	add	r3, r1
 801569a:	68e9      	ldr	r1, [r5, #12]
 801569c:	612b      	str	r3, [r5, #16]
 801569e:	ee76 6a86 	vadd.f32	s13, s13, s12
 80156a2:	428b      	cmp	r3, r1
 80156a4:	edc5 6a07 	vstr	s13, [r5, #28]
 80156a8:	db15      	blt.n	80156d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80156aa:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80156ae:	ee76 6a26 	vadd.f32	s13, s12, s13
 80156b2:	3201      	adds	r2, #1
 80156b4:	edc5 6a07 	vstr	s13, [r5, #28]
 80156b8:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80156bc:	602a      	str	r2, [r5, #0]
 80156be:	ee36 7a87 	vadd.f32	s14, s13, s14
 80156c2:	1a5b      	subs	r3, r3, r1
 80156c4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80156c8:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80156cc:	612b      	str	r3, [r5, #16]
 80156ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80156d2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80156d6:	3f01      	subs	r7, #1
 80156d8:	e757      	b.n	801558a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 80156da:	ad39      	add	r5, sp, #228	; 0xe4
 80156dc:	ac19      	add	r4, sp, #100	; 0x64
 80156de:	e72d      	b.n	801553c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 80156e0:	4613      	mov	r3, r2
 80156e2:	e744      	b.n	801556e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 80156e4:	4613      	mov	r3, r2
 80156e6:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 80156ea:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 80156ec:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 80156f0:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 80156f4:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 80156f8:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 80156fc:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8015700:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8015704:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8015708:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801570a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801570e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8015712:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8015716:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801571a:	960e      	str	r6, [sp, #56]	; 0x38
 801571c:	469e      	mov	lr, r3
 801571e:	461f      	mov	r7, r3
 8015720:	f04f 0900 	mov.w	r9, #0
 8015724:	2f00      	cmp	r7, #0
 8015726:	d146      	bne.n	80157b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015728:	449c      	add	ip, r3
 801572a:	1ad7      	subs	r7, r2, r3
 801572c:	f1b9 0f00 	cmp.w	r9, #0
 8015730:	d009      	beq.n	8015746 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015732:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8015736:	9039      	str	r0, [sp, #228]	; 0xe4
 8015738:	913d      	str	r1, [sp, #244]	; 0xf4
 801573a:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801573e:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8015742:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8015746:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8015748:	910e      	str	r1, [sp, #56]	; 0x38
 801574a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801574e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8015752:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8015756:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801575a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801575e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8015762:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8015766:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801576a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801576e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8015772:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8015776:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801577a:	f04f 0800 	mov.w	r8, #0
 801577e:	f1be 0f00 	cmp.w	lr, #0
 8015782:	d030      	beq.n	80157e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015784:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015786:	4431      	add	r1, r6
 8015788:	4549      	cmp	r1, r9
 801578a:	4450      	add	r0, sl
 801578c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015790:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015794:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015798:	db08      	blt.n	80157ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801579a:	ee77 7a85 	vadd.f32	s15, s15, s10
 801579e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80157a2:	ee37 7a06 	vadd.f32	s14, s14, s12
 80157a6:	3001      	adds	r0, #1
 80157a8:	eba1 0109 	sub.w	r1, r1, r9
 80157ac:	f10e 3eff 	add.w	lr, lr, #4294967295
 80157b0:	f04f 0801 	mov.w	r8, #1
 80157b4:	e7e3      	b.n	801577e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80157b6:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80157b8:	4431      	add	r1, r6
 80157ba:	4541      	cmp	r1, r8
 80157bc:	4450      	add	r0, sl
 80157be:	ee37 7a24 	vadd.f32	s14, s14, s9
 80157c2:	ee77 7a84 	vadd.f32	s15, s15, s8
 80157c6:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80157ca:	db08      	blt.n	80157de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80157cc:	ee76 6a85 	vadd.f32	s13, s13, s10
 80157d0:	ee37 7a25 	vadd.f32	s14, s14, s11
 80157d4:	ee77 7a86 	vadd.f32	s15, s15, s12
 80157d8:	3001      	adds	r0, #1
 80157da:	eba1 0108 	sub.w	r1, r1, r8
 80157de:	3f01      	subs	r7, #1
 80157e0:	f04f 0901 	mov.w	r9, #1
 80157e4:	e79e      	b.n	8015724 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80157e6:	449c      	add	ip, r3
 80157e8:	1aff      	subs	r7, r7, r3
 80157ea:	f1b8 0f00 	cmp.w	r8, #0
 80157ee:	d009      	beq.n	8015804 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80157f0:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 80157f4:	9019      	str	r0, [sp, #100]	; 0x64
 80157f6:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 80157fa:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 80157fe:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8015802:	911d      	str	r1, [sp, #116]	; 0x74
 8015804:	1ad2      	subs	r2, r2, r3
 8015806:	e6b5      	b.n	8015574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015808:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801580a:	681b      	ldr	r3, [r3, #0]
 801580c:	b923      	cbnz	r3, 8015818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801580e:	4b04      	ldr	r3, [pc, #16]	; (8015820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015810:	6818      	ldr	r0, [r3, #0]
 8015812:	6803      	ldr	r3, [r0, #0]
 8015814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015816:	4798      	blx	r3
 8015818:	b05b      	add	sp, #364	; 0x16c
 801581a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801581e:	bf00      	nop
 8015820:	200137ec 	.word	0x200137ec

08015824 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8015824:	b570      	push	{r4, r5, r6, lr}
 8015826:	4604      	mov	r4, r0
 8015828:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801582c:	9805      	ldr	r0, [sp, #20]
 801582e:	6061      	str	r1, [r4, #4]
 8015830:	2500      	movs	r5, #0
 8015832:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8015836:	8263      	strh	r3, [r4, #18]
 8015838:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801583c:	8025      	strh	r5, [r4, #0]
 801583e:	7221      	strb	r1, [r4, #8]
 8015840:	7266      	strb	r6, [r4, #9]
 8015842:	60e0      	str	r0, [r4, #12]
 8015844:	8222      	strh	r2, [r4, #16]
 8015846:	82a3      	strh	r3, [r4, #20]
 8015848:	82e5      	strh	r5, [r4, #22]
 801584a:	8325      	strh	r5, [r4, #24]
 801584c:	8365      	strh	r5, [r4, #26]
 801584e:	83a5      	strh	r5, [r4, #28]
 8015850:	83e5      	strh	r5, [r4, #30]
 8015852:	8425      	strh	r5, [r4, #32]
 8015854:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8015858:	b32e      	cbz	r6, 80158a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801585a:	6803      	ldr	r3, [r0, #0]
 801585c:	695b      	ldr	r3, [r3, #20]
 801585e:	4798      	blx	r3
 8015860:	4606      	mov	r6, r0
 8015862:	b300      	cbz	r0, 80158a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015864:	68e0      	ldr	r0, [r4, #12]
 8015866:	6803      	ldr	r3, [r0, #0]
 8015868:	4631      	mov	r1, r6
 801586a:	68db      	ldr	r3, [r3, #12]
 801586c:	4798      	blx	r3
 801586e:	4605      	mov	r5, r0
 8015870:	b1c8      	cbz	r0, 80158a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015872:	7b43      	ldrb	r3, [r0, #13]
 8015874:	7a82      	ldrb	r2, [r0, #10]
 8015876:	005b      	lsls	r3, r3, #1
 8015878:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801587c:	4313      	orrs	r3, r2
 801587e:	8423      	strh	r3, [r4, #32]
 8015880:	7a63      	ldrb	r3, [r4, #9]
 8015882:	2b06      	cmp	r3, #6
 8015884:	d10f      	bne.n	80158a6 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8015886:	68e0      	ldr	r0, [r4, #12]
 8015888:	6803      	ldr	r3, [r0, #0]
 801588a:	462a      	mov	r2, r5
 801588c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801588e:	4631      	mov	r1, r6
 8015890:	4798      	blx	r3
 8015892:	7b6b      	ldrb	r3, [r5, #13]
 8015894:	005b      	lsls	r3, r3, #1
 8015896:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801589a:	7aab      	ldrb	r3, [r5, #10]
 801589c:	4313      	orrs	r3, r2
 801589e:	4418      	add	r0, r3
 80158a0:	8c23      	ldrh	r3, [r4, #32]
 80158a2:	4418      	add	r0, r3
 80158a4:	8420      	strh	r0, [r4, #32]
 80158a6:	4620      	mov	r0, r4
 80158a8:	bd70      	pop	{r4, r5, r6, pc}

080158aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80158aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158ae:	2400      	movs	r4, #0
 80158b0:	b085      	sub	sp, #20
 80158b2:	4681      	mov	r9, r0
 80158b4:	4688      	mov	r8, r1
 80158b6:	4692      	mov	sl, r2
 80158b8:	469b      	mov	fp, r3
 80158ba:	4627      	mov	r7, r4
 80158bc:	4625      	mov	r5, r4
 80158be:	4626      	mov	r6, r4
 80158c0:	4554      	cmp	r4, sl
 80158c2:	da2a      	bge.n	801591a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80158c4:	2300      	movs	r3, #0
 80158c6:	9303      	str	r3, [sp, #12]
 80158c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80158cc:	429d      	cmp	r5, r3
 80158ce:	d004      	beq.n	80158da <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80158d0:	f242 030b 	movw	r3, #8203	; 0x200b
 80158d4:	429d      	cmp	r5, r3
 80158d6:	bf18      	it	ne
 80158d8:	462f      	movne	r7, r5
 80158da:	ab03      	add	r3, sp, #12
 80158dc:	4642      	mov	r2, r8
 80158de:	4659      	mov	r1, fp
 80158e0:	4648      	mov	r0, r9
 80158e2:	f003 f9a3 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80158e6:	4605      	mov	r5, r0
 80158e8:	b1b8      	cbz	r0, 801591a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80158ea:	280a      	cmp	r0, #10
 80158ec:	d015      	beq.n	801591a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80158ee:	9a03      	ldr	r2, [sp, #12]
 80158f0:	b18a      	cbz	r2, 8015916 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80158f2:	7b50      	ldrb	r0, [r2, #13]
 80158f4:	7a93      	ldrb	r3, [r2, #10]
 80158f6:	8895      	ldrh	r5, [r2, #4]
 80158f8:	0040      	lsls	r0, r0, #1
 80158fa:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80158fe:	4303      	orrs	r3, r0
 8015900:	9301      	str	r3, [sp, #4]
 8015902:	f8d8 3000 	ldr.w	r3, [r8]
 8015906:	4639      	mov	r1, r7
 8015908:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801590a:	4640      	mov	r0, r8
 801590c:	4798      	blx	r3
 801590e:	9b01      	ldr	r3, [sp, #4]
 8015910:	4418      	add	r0, r3
 8015912:	4406      	add	r6, r0
 8015914:	b2b6      	uxth	r6, r6
 8015916:	3401      	adds	r4, #1
 8015918:	e7d2      	b.n	80158c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801591a:	4630      	mov	r0, r6
 801591c:	b005      	add	sp, #20
 801591e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015922 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8015922:	2a02      	cmp	r2, #2
 8015924:	b530      	push	{r4, r5, lr}
 8015926:	d011      	beq.n	801594c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8015928:	2a03      	cmp	r2, #3
 801592a:	d01c      	beq.n	8015966 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801592c:	2a01      	cmp	r2, #1
 801592e:	d10c      	bne.n	801594a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015930:	888b      	ldrh	r3, [r1, #4]
 8015932:	8801      	ldrh	r1, [r0, #0]
 8015934:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8015938:	8844      	ldrh	r4, [r0, #2]
 801593a:	8004      	strh	r4, [r0, #0]
 801593c:	1a5b      	subs	r3, r3, r1
 801593e:	1a9b      	subs	r3, r3, r2
 8015940:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015944:	8043      	strh	r3, [r0, #2]
 8015946:	8081      	strh	r1, [r0, #4]
 8015948:	80c2      	strh	r2, [r0, #6]
 801594a:	bd30      	pop	{r4, r5, pc}
 801594c:	88cb      	ldrh	r3, [r1, #6]
 801594e:	8842      	ldrh	r2, [r0, #2]
 8015950:	1a9b      	subs	r3, r3, r2
 8015952:	88c2      	ldrh	r2, [r0, #6]
 8015954:	1a9b      	subs	r3, r3, r2
 8015956:	888a      	ldrh	r2, [r1, #4]
 8015958:	8801      	ldrh	r1, [r0, #0]
 801595a:	8043      	strh	r3, [r0, #2]
 801595c:	1a52      	subs	r2, r2, r1
 801595e:	8881      	ldrh	r1, [r0, #4]
 8015960:	1a52      	subs	r2, r2, r1
 8015962:	8002      	strh	r2, [r0, #0]
 8015964:	e7f1      	b.n	801594a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8015966:	88cb      	ldrh	r3, [r1, #6]
 8015968:	8841      	ldrh	r1, [r0, #2]
 801596a:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801596e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8015972:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8015976:	8045      	strh	r5, [r0, #2]
 8015978:	1a5b      	subs	r3, r3, r1
 801597a:	1a9b      	subs	r3, r3, r2
 801597c:	8003      	strh	r3, [r0, #0]
 801597e:	8082      	strh	r2, [r0, #4]
 8015980:	80c4      	strh	r4, [r0, #6]
 8015982:	e7e2      	b.n	801594a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08015984 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8015984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015988:	b09f      	sub	sp, #124	; 0x7c
 801598a:	9116      	str	r1, [sp, #88]	; 0x58
 801598c:	9317      	str	r3, [sp, #92]	; 0x5c
 801598e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015990:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015992:	8809      	ldrh	r1, [r1, #0]
 8015994:	889b      	ldrh	r3, [r3, #4]
 8015996:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801599a:	9212      	str	r2, [sp, #72]	; 0x48
 801599c:	440b      	add	r3, r1
 801599e:	b21b      	sxth	r3, r3
 80159a0:	9310      	str	r3, [sp, #64]	; 0x40
 80159a2:	f8d8 3000 	ldr.w	r3, [r8]
 80159a6:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80159aa:	7b19      	ldrb	r1, [r3, #12]
 80159ac:	7adb      	ldrb	r3, [r3, #11]
 80159ae:	9011      	str	r0, [sp, #68]	; 0x44
 80159b0:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80159b4:	9114      	str	r1, [sp, #80]	; 0x50
 80159b6:	9315      	str	r3, [sp, #84]	; 0x54
 80159b8:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 80159bc:	2a00      	cmp	r2, #0
 80159be:	d06a      	beq.n	8015a96 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80159c0:	f898 3010 	ldrb.w	r3, [r8, #16]
 80159c4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80159c6:	2b06      	cmp	r3, #6
 80159c8:	bf14      	ite	ne
 80159ca:	2301      	movne	r3, #1
 80159cc:	2302      	moveq	r3, #2
 80159ce:	4413      	add	r3, r2
 80159d0:	f04f 0900 	mov.w	r9, #0
 80159d4:	930f      	str	r3, [sp, #60]	; 0x3c
 80159d6:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80159da:	464c      	mov	r4, r9
 80159dc:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80159e0:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80159e4:	4293      	cmp	r3, r2
 80159e6:	f280 808f 	bge.w	8015b08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80159ea:	2300      	movs	r3, #0
 80159ec:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80159f0:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80159f4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80159f8:	429c      	cmp	r4, r3
 80159fa:	d006      	beq.n	8015a0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80159fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80159fe:	f242 020b 	movw	r2, #8203	; 0x200b
 8015a02:	4294      	cmp	r4, r2
 8015a04:	bf18      	it	ne
 8015a06:	4623      	movne	r3, r4
 8015a08:	930d      	str	r3, [sp, #52]	; 0x34
 8015a0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015a0c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015a0e:	f8d8 2000 	ldr.w	r2, [r8]
 8015a12:	428b      	cmp	r3, r1
 8015a14:	db41      	blt.n	8015a9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8015a16:	6813      	ldr	r3, [r2, #0]
 8015a18:	4610      	mov	r0, r2
 8015a1a:	695b      	ldr	r3, [r3, #20]
 8015a1c:	4798      	blx	r3
 8015a1e:	4604      	mov	r4, r0
 8015a20:	f8d8 0000 	ldr.w	r0, [r8]
 8015a24:	6803      	ldr	r3, [r0, #0]
 8015a26:	aa1d      	add	r2, sp, #116	; 0x74
 8015a28:	689d      	ldr	r5, [r3, #8]
 8015a2a:	4621      	mov	r1, r4
 8015a2c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015a30:	47a8      	blx	r5
 8015a32:	901c      	str	r0, [sp, #112]	; 0x70
 8015a34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015a38:	429c      	cmp	r4, r3
 8015a3a:	f000 80eb 	beq.w	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a3e:	f242 030b 	movw	r3, #8203	; 0x200b
 8015a42:	429c      	cmp	r4, r3
 8015a44:	f000 80e6 	beq.w	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015a48:	2c00      	cmp	r4, #0
 8015a4a:	f000 80f8 	beq.w	8015c3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015a4e:	2c0a      	cmp	r4, #10
 8015a50:	d060      	beq.n	8015b14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015a52:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015a54:	b36a      	cbz	r2, 8015ab2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8015a56:	8894      	ldrh	r4, [r2, #4]
 8015a58:	f1bb 0f00 	cmp.w	fp, #0
 8015a5c:	d03b      	beq.n	8015ad6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8015a5e:	f892 900d 	ldrb.w	r9, [r2, #13]
 8015a62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015a66:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8015a6a:	f892 900a 	ldrb.w	r9, [r2, #10]
 8015a6e:	f1bb 0f01 	cmp.w	fp, #1
 8015a72:	ea49 0903 	orr.w	r9, r9, r3
 8015a76:	d134      	bne.n	8015ae2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8015a78:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015a7a:	eba6 0609 	sub.w	r6, r6, r9
 8015a7e:	2b00      	cmp	r3, #0
 8015a80:	d14f      	bne.n	8015b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015a82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015a84:	eb09 0306 	add.w	r3, r9, r6
 8015a88:	4413      	add	r3, r2
 8015a8a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015a8c:	f9b2 2000 	ldrsh.w	r2, [r2]
 8015a90:	4293      	cmp	r3, r2
 8015a92:	da51      	bge.n	8015b38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015a94:	e038      	b.n	8015b08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8015a96:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015a98:	e79a      	b.n	80159d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8015a9a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8015a9e:	9301      	str	r3, [sp, #4]
 8015aa0:	ab1d      	add	r3, sp, #116	; 0x74
 8015aa2:	9300      	str	r3, [sp, #0]
 8015aa4:	4659      	mov	r1, fp
 8015aa6:	ab1c      	add	r3, sp, #112	; 0x70
 8015aa8:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015aaa:	f003 f908 	bl	8018cbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8015aae:	4604      	mov	r4, r0
 8015ab0:	e7c0      	b.n	8015a34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8015ab2:	f8d8 0000 	ldr.w	r0, [r8]
 8015ab6:	6803      	ldr	r3, [r0, #0]
 8015ab8:	691b      	ldr	r3, [r3, #16]
 8015aba:	4798      	blx	r3
 8015abc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015ac0:	4298      	cmp	r0, r3
 8015ac2:	f000 80a7 	beq.w	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015ac6:	f242 030b 	movw	r3, #8203	; 0x200b
 8015aca:	4298      	cmp	r0, r3
 8015acc:	f000 80a2 	beq.w	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015ad0:	f1bb 0f00 	cmp.w	fp, #0
 8015ad4:	d100      	bne.n	8015ad8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8015ad6:	444e      	add	r6, r9
 8015ad8:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8015ada:	2a00      	cmp	r2, #0
 8015adc:	d1bf      	bne.n	8015a5e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8015ade:	4691      	mov	r9, r2
 8015ae0:	e098      	b.n	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015ae2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015ae4:	2b00      	cmp	r3, #0
 8015ae6:	f000 80ac 	beq.w	8015c42 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8015aea:	f1bb 0f00 	cmp.w	fp, #0
 8015aee:	d118      	bne.n	8015b22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8015af0:	f8d8 0000 	ldr.w	r0, [r8]
 8015af4:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015af6:	6803      	ldr	r3, [r0, #0]
 8015af8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015afa:	4798      	blx	r3
 8015afc:	4406      	add	r6, r0
 8015afe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015b00:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b02:	1af3      	subs	r3, r6, r3
 8015b04:	4293      	cmp	r3, r2
 8015b06:	dd17      	ble.n	8015b38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8015b08:	2c00      	cmp	r4, #0
 8015b0a:	f000 8098 	beq.w	8015c3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015b0e:	2c0a      	cmp	r4, #10
 8015b10:	f040 8086 	bne.w	8015c20 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8015b14:	240a      	movs	r4, #10
 8015b16:	fab4 f084 	clz	r0, r4
 8015b1a:	0940      	lsrs	r0, r0, #5
 8015b1c:	b01f      	add	sp, #124	; 0x7c
 8015b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015b22:	f8d8 0000 	ldr.w	r0, [r8]
 8015b26:	990d      	ldr	r1, [sp, #52]	; 0x34
 8015b28:	6803      	ldr	r3, [r0, #0]
 8015b2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015b2c:	4798      	blx	r3
 8015b2e:	f1bb 0f01 	cmp.w	fp, #1
 8015b32:	eba6 0600 	sub.w	r6, r6, r0
 8015b36:	d0a4      	beq.n	8015a82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8015b38:	981c      	ldr	r0, [sp, #112]	; 0x70
 8015b3a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015b3c:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8015b40:	f9b3 7000 	ldrsh.w	r7, [r3]
 8015b44:	7b43      	ldrb	r3, [r0, #13]
 8015b46:	015b      	lsls	r3, r3, #5
 8015b48:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8015b4c:	7983      	ldrb	r3, [r0, #6]
 8015b4e:	4431      	add	r1, r6
 8015b50:	4313      	orrs	r3, r2
 8015b52:	440b      	add	r3, r1
 8015b54:	42bb      	cmp	r3, r7
 8015b56:	db5d      	blt.n	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015b58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015b5a:	4299      	cmp	r1, r3
 8015b5c:	da5a      	bge.n	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8015b62:	6803      	ldr	r3, [r0, #0]
 8015b64:	42b7      	cmp	r7, r6
 8015b66:	bfc8      	it	gt
 8015b68:	1bbf      	subgt	r7, r7, r6
 8015b6a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015b6c:	bfcc      	ite	gt
 8015b6e:	b2bf      	uxthgt	r7, r7
 8015b70:	2700      	movle	r7, #0
 8015b72:	4798      	blx	r3
 8015b74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8015b76:	7b5a      	ldrb	r2, [r3, #13]
 8015b78:	00d1      	lsls	r1, r2, #3
 8015b7a:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8015b7e:	7a19      	ldrb	r1, [r3, #8]
 8015b80:	4329      	orrs	r1, r5
 8015b82:	0655      	lsls	r5, r2, #25
 8015b84:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015b86:	bf44      	itt	mi
 8015b88:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8015b8c:	b209      	sxthmi	r1, r1
 8015b8e:	1945      	adds	r5, r0, r5
 8015b90:	1a6d      	subs	r5, r5, r1
 8015b92:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015b94:	b2ad      	uxth	r5, r5
 8015b96:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8015b9a:	fa0f fa85 	sxth.w	sl, r5
 8015b9e:	4551      	cmp	r1, sl
 8015ba0:	dd3c      	ble.n	8015c1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8015ba2:	0112      	lsls	r2, r2, #4
 8015ba4:	79d8      	ldrb	r0, [r3, #7]
 8015ba6:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8015baa:	4302      	orrs	r2, r0
 8015bac:	4492      	add	sl, r2
 8015bae:	4551      	cmp	r1, sl
 8015bb0:	dc30      	bgt.n	8015c14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8015bb2:	1b4d      	subs	r5, r1, r5
 8015bb4:	b22d      	sxth	r5, r5
 8015bb6:	468a      	mov	sl, r1
 8015bb8:	9319      	str	r3, [sp, #100]	; 0x64
 8015bba:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015bbc:	f8d8 0000 	ldr.w	r0, [r8]
 8015bc0:	681a      	ldr	r2, [r3, #0]
 8015bc2:	6801      	ldr	r1, [r0, #0]
 8015bc4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8015bc6:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8015bc8:	9313      	str	r3, [sp, #76]	; 0x4c
 8015bca:	9218      	str	r2, [sp, #96]	; 0x60
 8015bcc:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8015bce:	4788      	blx	r1
 8015bd0:	f898 1006 	ldrb.w	r1, [r8, #6]
 8015bd4:	910b      	str	r1, [sp, #44]	; 0x2c
 8015bd6:	f898 100e 	ldrb.w	r1, [r8, #14]
 8015bda:	910a      	str	r1, [sp, #40]	; 0x28
 8015bdc:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8015be0:	9109      	str	r1, [sp, #36]	; 0x24
 8015be2:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8015be6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8015be8:	9305      	str	r3, [sp, #20]
 8015bea:	b2ad      	uxth	r5, r5
 8015bec:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8015bf0:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8015bf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015bf6:	9304      	str	r3, [sp, #16]
 8015bf8:	4437      	add	r7, r6
 8015bfa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8015bfc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015bfe:	9206      	str	r2, [sp, #24]
 8015c00:	b23f      	sxth	r7, r7
 8015c02:	f8cd a004 	str.w	sl, [sp, #4]
 8015c06:	9700      	str	r7, [sp, #0]
 8015c08:	681a      	ldr	r2, [r3, #0]
 8015c0a:	9916      	ldr	r1, [sp, #88]	; 0x58
 8015c0c:	685b      	ldr	r3, [r3, #4]
 8015c0e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c10:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015c12:	47a8      	blx	r5
 8015c14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c16:	3301      	adds	r3, #1
 8015c18:	930e      	str	r3, [sp, #56]	; 0x38
 8015c1a:	e6e1      	b.n	80159e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8015c1c:	2500      	movs	r5, #0
 8015c1e:	e7cb      	b.n	8015bb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8015c20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8015c22:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015c24:	3501      	adds	r5, #1
 8015c26:	429d      	cmp	r5, r3
 8015c28:	f6bf af75 	bge.w	8015b16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015c2c:	4659      	mov	r1, fp
 8015c2e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8015c30:	f7f2 fdf8 	bl	8008824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8015c34:	4604      	mov	r4, r0
 8015c36:	b110      	cbz	r0, 8015c3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8015c38:	280a      	cmp	r0, #10
 8015c3a:	d1f2      	bne.n	8015c22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8015c3c:	e76a      	b.n	8015b14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8015c3e:	2400      	movs	r4, #0
 8015c40:	e769      	b.n	8015b16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8015c42:	f1bb 0f00 	cmp.w	fp, #0
 8015c46:	f43f af5a 	beq.w	8015afe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8015c4a:	e775      	b.n	8015b38 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8015c4c:	b530      	push	{r4, r5, lr}
 8015c4e:	8ac4      	ldrh	r4, [r0, #22]
 8015c50:	8b45      	ldrh	r5, [r0, #26]
 8015c52:	8343      	strh	r3, [r0, #26]
 8015c54:	442c      	add	r4, r5
 8015c56:	1ae4      	subs	r4, r4, r3
 8015c58:	82c4      	strh	r4, [r0, #22]
 8015c5a:	8b83      	ldrh	r3, [r0, #28]
 8015c5c:	8b04      	ldrh	r4, [r0, #24]
 8015c5e:	4422      	add	r2, r4
 8015c60:	440c      	add	r4, r1
 8015c62:	1a59      	subs	r1, r3, r1
 8015c64:	83c2      	strh	r2, [r0, #30]
 8015c66:	8304      	strh	r4, [r0, #24]
 8015c68:	8381      	strh	r1, [r0, #28]
 8015c6a:	bd30      	pop	{r4, r5, pc}

08015c6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8015c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c70:	4604      	mov	r4, r0
 8015c72:	8a47      	ldrh	r7, [r0, #18]
 8015c74:	68c0      	ldr	r0, [r0, #12]
 8015c76:	6803      	ldr	r3, [r0, #0]
 8015c78:	b085      	sub	sp, #20
 8015c7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015c7c:	4798      	blx	r3
 8015c7e:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8015c82:	7a63      	ldrb	r3, [r4, #9]
 8015c84:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8015c88:	42b7      	cmp	r7, r6
 8015c8a:	f103 33ff 	add.w	r3, r3, #4294967295
 8015c8e:	bfac      	ite	ge
 8015c90:	f04f 0900 	movge.w	r9, #0
 8015c94:	f04f 0901 	movlt.w	r9, #1
 8015c98:	2b05      	cmp	r3, #5
 8015c9a:	d804      	bhi.n	8015ca6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8015c9c:	e8df f003 	tbb	[pc, r3]
 8015ca0:	470e0854 	.word	0x470e0854
 8015ca4:	4c4c      	.short	0x4c4c
 8015ca6:	2500      	movs	r5, #0
 8015ca8:	46a9      	mov	r9, r5
 8015caa:	462e      	mov	r6, r5
 8015cac:	462f      	mov	r7, r5
 8015cae:	e00d      	b.n	8015ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015cb0:	42b7      	cmp	r7, r6
 8015cb2:	bfb4      	ite	lt
 8015cb4:	2600      	movlt	r6, #0
 8015cb6:	2601      	movge	r6, #1
 8015cb8:	2500      	movs	r5, #0
 8015cba:	e7f7      	b.n	8015cac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015cbc:	42b7      	cmp	r7, r6
 8015cbe:	464d      	mov	r5, r9
 8015cc0:	f04f 0900 	mov.w	r9, #0
 8015cc4:	bfb4      	ite	lt
 8015cc6:	2600      	movlt	r6, #0
 8015cc8:	2601      	movge	r6, #1
 8015cca:	464f      	mov	r7, r9
 8015ccc:	f04f 0800 	mov.w	r8, #0
 8015cd0:	f8a4 8016 	strh.w	r8, [r4, #22]
 8015cd4:	f8a4 8018 	strh.w	r8, [r4, #24]
 8015cd8:	f8cd 8004 	str.w	r8, [sp, #4]
 8015cdc:	2300      	movs	r3, #0
 8015cde:	9303      	str	r3, [sp, #12]
 8015ce0:	8823      	ldrh	r3, [r4, #0]
 8015ce2:	2b20      	cmp	r3, #32
 8015ce4:	d034      	beq.n	8015d50 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8015ce6:	f242 010b 	movw	r1, #8203	; 0x200b
 8015cea:	1a5a      	subs	r2, r3, r1
 8015cec:	f1d2 0a00 	rsbs	sl, r2, #0
 8015cf0:	eb4a 0a02 	adc.w	sl, sl, r2
 8015cf4:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8015cf8:	4293      	cmp	r3, r2
 8015cfa:	d009      	beq.n	8015d10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015cfc:	428b      	cmp	r3, r1
 8015cfe:	9a01      	ldr	r2, [sp, #4]
 8015d00:	bf18      	it	ne
 8015d02:	461a      	movne	r2, r3
 8015d04:	9201      	str	r2, [sp, #4]
 8015d06:	bf0c      	ite	eq
 8015d08:	f04f 0a01 	moveq.w	sl, #1
 8015d0c:	f04f 0a00 	movne.w	sl, #0
 8015d10:	ab03      	add	r3, sp, #12
 8015d12:	68e2      	ldr	r2, [r4, #12]
 8015d14:	7a21      	ldrb	r1, [r4, #8]
 8015d16:	6860      	ldr	r0, [r4, #4]
 8015d18:	f002 ff88 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015d1c:	8020      	strh	r0, [r4, #0]
 8015d1e:	b9d8      	cbnz	r0, 8015d58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8015d20:	8ba2      	ldrh	r2, [r4, #28]
 8015d22:	2300      	movs	r3, #0
 8015d24:	4611      	mov	r1, r2
 8015d26:	4620      	mov	r0, r4
 8015d28:	f7ff ff90 	bl	8015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015d2c:	e06e      	b.n	8015e0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015d2e:	2500      	movs	r5, #0
 8015d30:	46a9      	mov	r9, r5
 8015d32:	462e      	mov	r6, r5
 8015d34:	2701      	movs	r7, #1
 8015d36:	e7c9      	b.n	8015ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015d38:	42b7      	cmp	r7, r6
 8015d3a:	f04f 0500 	mov.w	r5, #0
 8015d3e:	bfb4      	ite	lt
 8015d40:	2700      	movlt	r7, #0
 8015d42:	2701      	movge	r7, #1
 8015d44:	462e      	mov	r6, r5
 8015d46:	e7c1      	b.n	8015ccc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8015d48:	2500      	movs	r5, #0
 8015d4a:	46a9      	mov	r9, r5
 8015d4c:	2601      	movs	r6, #1
 8015d4e:	e7ad      	b.n	8015cac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8015d50:	9301      	str	r3, [sp, #4]
 8015d52:	f04f 0a01 	mov.w	sl, #1
 8015d56:	e7db      	b.n	8015d10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8015d58:	8b63      	ldrh	r3, [r4, #26]
 8015d5a:	280a      	cmp	r0, #10
 8015d5c:	f103 0301 	add.w	r3, r3, #1
 8015d60:	8363      	strh	r3, [r4, #26]
 8015d62:	d0dd      	beq.n	8015d20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8015d64:	9a03      	ldr	r2, [sp, #12]
 8015d66:	bb62      	cbnz	r2, 8015dc2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8015d68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015d6c:	4298      	cmp	r0, r3
 8015d6e:	d003      	beq.n	8015d78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015d70:	f242 030b 	movw	r3, #8203	; 0x200b
 8015d74:	4298      	cmp	r0, r3
 8015d76:	d1b1      	bne.n	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015d78:	8823      	ldrh	r3, [r4, #0]
 8015d7a:	8ba1      	ldrh	r1, [r4, #28]
 8015d7c:	2b20      	cmp	r3, #32
 8015d7e:	d003      	beq.n	8015d88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8015d80:	f242 000b 	movw	r0, #8203	; 0x200b
 8015d84:	4283      	cmp	r3, r0
 8015d86:	d131      	bne.n	8015dec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8015d88:	f1ba 0f00 	cmp.w	sl, #0
 8015d8c:	bf0a      	itet	eq
 8015d8e:	4688      	moveq	r8, r1
 8015d90:	4650      	movne	r0, sl
 8015d92:	2001      	moveq	r0, #1
 8015d94:	440a      	add	r2, r1
 8015d96:	8b23      	ldrh	r3, [r4, #24]
 8015d98:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8015d9c:	b292      	uxth	r2, r2
 8015d9e:	83a2      	strh	r2, [r4, #28]
 8015da0:	4413      	add	r3, r2
 8015da2:	f1b9 0f00 	cmp.w	r9, #0
 8015da6:	d102      	bne.n	8015dae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8015da8:	2d00      	cmp	r5, #0
 8015daa:	d042      	beq.n	8015e32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8015dac:	b300      	cbz	r0, 8015df0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8015dae:	8c21      	ldrh	r1, [r4, #32]
 8015db0:	4419      	add	r1, r3
 8015db2:	458c      	cmp	ip, r1
 8015db4:	da37      	bge.n	8015e26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015db6:	8ae1      	ldrh	r1, [r4, #22]
 8015db8:	2900      	cmp	r1, #0
 8015dba:	d034      	beq.n	8015e26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8015dbc:	4563      	cmp	r3, ip
 8015dbe:	dd8d      	ble.n	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015dc0:	e01d      	b.n	8015dfe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8015dc2:	8893      	ldrh	r3, [r2, #4]
 8015dc4:	8023      	strh	r3, [r4, #0]
 8015dc6:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8015dca:	9901      	ldr	r1, [sp, #4]
 8015dcc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8015dd0:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8015dd4:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8015dd8:	ea4b 0b00 	orr.w	fp, fp, r0
 8015ddc:	68e0      	ldr	r0, [r4, #12]
 8015dde:	6803      	ldr	r3, [r0, #0]
 8015de0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015de2:	4798      	blx	r3
 8015de4:	eb0b 0200 	add.w	r2, fp, r0
 8015de8:	b292      	uxth	r2, r2
 8015dea:	e7c5      	b.n	8015d78 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8015dec:	2000      	movs	r0, #0
 8015dee:	e7d1      	b.n	8015d94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8015df0:	4563      	cmp	r3, ip
 8015df2:	f77f af73 	ble.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015df6:	8ae3      	ldrh	r3, [r4, #22]
 8015df8:	2b00      	cmp	r3, #0
 8015dfa:	f43f af6f 	beq.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015dfe:	2301      	movs	r3, #1
 8015e00:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8015e04:	8c22      	ldrh	r2, [r4, #32]
 8015e06:	8be3      	ldrh	r3, [r4, #30]
 8015e08:	4413      	add	r3, r2
 8015e0a:	83e3      	strh	r3, [r4, #30]
 8015e0c:	68e0      	ldr	r0, [r4, #12]
 8015e0e:	6803      	ldr	r3, [r0, #0]
 8015e10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015e12:	4798      	blx	r3
 8015e14:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8015e18:	4418      	add	r0, r3
 8015e1a:	8a63      	ldrh	r3, [r4, #18]
 8015e1c:	1a18      	subs	r0, r3, r0
 8015e1e:	8260      	strh	r0, [r4, #18]
 8015e20:	b005      	add	sp, #20
 8015e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015e26:	2300      	movs	r3, #0
 8015e28:	4611      	mov	r1, r2
 8015e2a:	4620      	mov	r0, r4
 8015e2c:	f7ff ff0e 	bl	8015c4c <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8015e30:	e754      	b.n	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e32:	4563      	cmp	r3, ip
 8015e34:	dd14      	ble.n	8015e60 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8015e36:	b117      	cbz	r7, 8015e3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8015e38:	2301      	movs	r3, #1
 8015e3a:	460a      	mov	r2, r1
 8015e3c:	e772      	b.n	8015d24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8015e3e:	2e00      	cmp	r6, #0
 8015e40:	f43f af4c 	beq.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e44:	2800      	cmp	r0, #0
 8015e46:	f47f af49 	bne.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e4a:	f1ba 0f00 	cmp.w	sl, #0
 8015e4e:	d002      	beq.n	8015e56 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8015e50:	2301      	movs	r3, #1
 8015e52:	4642      	mov	r2, r8
 8015e54:	e767      	b.n	8015d26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8015e56:	8ae3      	ldrh	r3, [r4, #22]
 8015e58:	2b00      	cmp	r3, #0
 8015e5a:	f43f af3f 	beq.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e5e:	e7d5      	b.n	8015e0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8015e60:	2800      	cmp	r0, #0
 8015e62:	f47f af3b 	bne.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e66:	f1ba 0f00 	cmp.w	sl, #0
 8015e6a:	f43f af37 	beq.w	8015cdc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8015e6e:	2301      	movs	r3, #1
 8015e70:	4642      	mov	r2, r8
 8015e72:	e7da      	b.n	8015e2a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08015e74 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8015e74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015e76:	4605      	mov	r5, r0
 8015e78:	b08f      	sub	sp, #60	; 0x3c
 8015e7a:	4617      	mov	r7, r2
 8015e7c:	461c      	mov	r4, r3
 8015e7e:	460e      	mov	r6, r1
 8015e80:	b1d1      	cbz	r1, 8015eb8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8015e82:	681b      	ldr	r3, [r3, #0]
 8015e84:	4620      	mov	r0, r4
 8015e86:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015e88:	4798      	blx	r3
 8015e8a:	4240      	negs	r0, r0
 8015e8c:	b200      	sxth	r0, r0
 8015e8e:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8015e92:	9603      	str	r6, [sp, #12]
 8015e94:	9700      	str	r7, [sp, #0]
 8015e96:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8015e9a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8015e9e:	4629      	mov	r1, r5
 8015ea0:	a805      	add	r0, sp, #20
 8015ea2:	f7ff fcbf 	bl	8015824 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015ea6:	2401      	movs	r4, #1
 8015ea8:	a805      	add	r0, sp, #20
 8015eaa:	f7ff fedf 	bl	8015c6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015eae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8015eb2:	b163      	cbz	r3, 8015ece <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8015eb4:	3401      	adds	r4, #1
 8015eb6:	e7f7      	b.n	8015ea8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8015eb8:	f002 ff86 	bl	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015ebc:	2401      	movs	r4, #1
 8015ebe:	280a      	cmp	r0, #10
 8015ec0:	4628      	mov	r0, r5
 8015ec2:	bf08      	it	eq
 8015ec4:	3401      	addeq	r4, #1
 8015ec6:	f002 ff7f 	bl	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015eca:	2800      	cmp	r0, #0
 8015ecc:	d1f7      	bne.n	8015ebe <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8015ece:	b2a0      	uxth	r0, r4
 8015ed0:	b00f      	add	sp, #60	; 0x3c
 8015ed2:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015ed4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8015ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ed8:	b0e3      	sub	sp, #396	; 0x18c
 8015eda:	461c      	mov	r4, r3
 8015edc:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8015ede:	4683      	mov	fp, r0
 8015ee0:	4688      	mov	r8, r1
 8015ee2:	2b00      	cmp	r3, #0
 8015ee4:	f000 8112 	beq.w	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ee8:	6823      	ldr	r3, [r4, #0]
 8015eea:	2b00      	cmp	r3, #0
 8015eec:	f000 810e 	beq.w	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ef0:	7ba3      	ldrb	r3, [r4, #14]
 8015ef2:	2b00      	cmp	r3, #0
 8015ef4:	f000 810a 	beq.w	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8015ef8:	6810      	ldr	r0, [r2, #0]
 8015efa:	6851      	ldr	r1, [r2, #4]
 8015efc:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8015f00:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8015f04:	ad0a      	add	r5, sp, #40	; 0x28
 8015f06:	462b      	mov	r3, r5
 8015f08:	c303      	stmia	r3!, {r0, r1}
 8015f0a:	2100      	movs	r1, #0
 8015f0c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8015f10:	910c      	str	r1, [sp, #48]	; 0x30
 8015f12:	79a2      	ldrb	r2, [r4, #6]
 8015f14:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8015f18:	a90c      	add	r1, sp, #48	; 0x30
 8015f1a:	4628      	mov	r0, r5
 8015f1c:	f7ff fd01 	bl	8015922 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015f20:	a90c      	add	r1, sp, #48	; 0x30
 8015f22:	4608      	mov	r0, r1
 8015f24:	79a2      	ldrb	r2, [r4, #6]
 8015f26:	f7ff fcfc 	bl	8015922 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8015f2a:	a817      	add	r0, sp, #92	; 0x5c
 8015f2c:	f002 fb20 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8015f30:	6820      	ldr	r0, [r4, #0]
 8015f32:	6803      	ldr	r3, [r0, #0]
 8015f34:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f36:	4798      	blx	r3
 8015f38:	4606      	mov	r6, r0
 8015f3a:	6820      	ldr	r0, [r4, #0]
 8015f3c:	6803      	ldr	r3, [r0, #0]
 8015f3e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f40:	4798      	blx	r3
 8015f42:	4633      	mov	r3, r6
 8015f44:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015f46:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015f48:	9000      	str	r0, [sp, #0]
 8015f4a:	a817      	add	r0, sp, #92	; 0x5c
 8015f4c:	f002 fb6b 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f50:	6820      	ldr	r0, [r4, #0]
 8015f52:	f894 a004 	ldrb.w	sl, [r4, #4]
 8015f56:	6803      	ldr	r3, [r0, #0]
 8015f58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015f5a:	4798      	blx	r3
 8015f5c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8015f60:	6823      	ldr	r3, [r4, #0]
 8015f62:	4607      	mov	r7, r0
 8015f64:	4406      	add	r6, r0
 8015f66:	a830      	add	r0, sp, #192	; 0xc0
 8015f68:	f893 9009 	ldrb.w	r9, [r3, #9]
 8015f6c:	f002 fb00 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8015f70:	7c23      	ldrb	r3, [r4, #16]
 8015f72:	b17b      	cbz	r3, 8015f94 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8015f74:	6820      	ldr	r0, [r4, #0]
 8015f76:	6803      	ldr	r3, [r0, #0]
 8015f78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015f7a:	4798      	blx	r3
 8015f7c:	9009      	str	r0, [sp, #36]	; 0x24
 8015f7e:	6820      	ldr	r0, [r4, #0]
 8015f80:	6802      	ldr	r2, [r0, #0]
 8015f82:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8015f84:	4790      	blx	r2
 8015f86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f88:	9000      	str	r0, [sp, #0]
 8015f8a:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8015f8c:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8015f8e:	a830      	add	r0, sp, #192	; 0xc0
 8015f90:	f002 fb49 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f94:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8015f98:	7be2      	ldrb	r2, [r4, #15]
 8015f9a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8015f9e:	1a8a      	subs	r2, r1, r2
 8015fa0:	7c21      	ldrb	r1, [r4, #16]
 8015fa2:	9103      	str	r1, [sp, #12]
 8015fa4:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8015fa8:	9102      	str	r1, [sp, #8]
 8015faa:	6821      	ldr	r1, [r4, #0]
 8015fac:	9101      	str	r1, [sp, #4]
 8015fae:	7961      	ldrb	r1, [r4, #5]
 8015fb0:	9100      	str	r1, [sp, #0]
 8015fb2:	b292      	uxth	r2, r2
 8015fb4:	a930      	add	r1, sp, #192	; 0xc0
 8015fb6:	a80e      	add	r0, sp, #56	; 0x38
 8015fb8:	f7ff fc34 	bl	8015824 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8015fbc:	2e00      	cmp	r6, #0
 8015fbe:	dc5b      	bgt.n	8016078 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8015fc0:	af17      	add	r7, sp, #92	; 0x5c
 8015fc2:	f04f 0900 	mov.w	r9, #0
 8015fc6:	7c23      	ldrb	r3, [r4, #16]
 8015fc8:	2b00      	cmp	r3, #0
 8015fca:	f000 80b1 	beq.w	8016130 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8015fce:	a80e      	add	r0, sp, #56	; 0x38
 8015fd0:	f7ff fe4c 	bl	8015c6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8015fd4:	f1ba 0f00 	cmp.w	sl, #0
 8015fd8:	f000 80a5 	beq.w	8016126 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8015fdc:	7c23      	ldrb	r3, [r4, #16]
 8015fde:	9309      	str	r3, [sp, #36]	; 0x24
 8015fe0:	2264      	movs	r2, #100	; 0x64
 8015fe2:	4639      	mov	r1, r7
 8015fe4:	a849      	add	r0, sp, #292	; 0x124
 8015fe6:	f015 fde6 	bl	802bbb6 <memcpy>
 8015fea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015fec:	2b00      	cmp	r3, #0
 8015fee:	f000 80a7 	beq.w	8016140 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8015ff2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8015ff6:	7922      	ldrb	r2, [r4, #4]
 8015ff8:	2a01      	cmp	r2, #1
 8015ffa:	f040 808a 	bne.w	8016112 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8015ffe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8016002:	1ac0      	subs	r0, r0, r3
 8016004:	2302      	movs	r3, #2
 8016006:	fb90 f0f3 	sdiv	r0, r0, r3
 801600a:	b200      	sxth	r0, r0
 801600c:	7c23      	ldrb	r3, [r4, #16]
 801600e:	2b00      	cmp	r3, #0
 8016010:	f000 808b 	beq.w	801612a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8016014:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8016018:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801601c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016020:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8016024:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8016028:	4410      	add	r0, r2
 801602a:	b200      	sxth	r0, r0
 801602c:	9000      	str	r0, [sp, #0]
 801602e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8016032:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8016036:	4642      	mov	r2, r8
 8016038:	2100      	movs	r1, #0
 801603a:	4658      	mov	r0, fp
 801603c:	f7ff fca2 	bl	8015984 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8016040:	2800      	cmp	r0, #0
 8016042:	d163      	bne.n	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016044:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8016048:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801604c:	b2b2      	uxth	r2, r6
 801604e:	4413      	add	r3, r2
 8016050:	1a8a      	subs	r2, r1, r2
 8016052:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 8016056:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801605a:	b21b      	sxth	r3, r3
 801605c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8016060:	2a00      	cmp	r2, #0
 8016062:	d153      	bne.n	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016064:	6822      	ldr	r2, [r4, #0]
 8016066:	8869      	ldrh	r1, [r5, #2]
 8016068:	7a12      	ldrb	r2, [r2, #8]
 801606a:	1a9b      	subs	r3, r3, r2
 801606c:	88ea      	ldrh	r2, [r5, #6]
 801606e:	440a      	add	r2, r1
 8016070:	b212      	sxth	r2, r2
 8016072:	4293      	cmp	r3, r2
 8016074:	dda7      	ble.n	8015fc6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8016076:	e049      	b.n	801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016078:	7c23      	ldrb	r3, [r4, #16]
 801607a:	444f      	add	r7, r9
 801607c:	b1c3      	cbz	r3, 80160b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801607e:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8016082:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8016086:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801608a:	443b      	add	r3, r7
 801608c:	4293      	cmp	r3, r2
 801608e:	da97      	bge.n	8015fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8016090:	a80e      	add	r0, sp, #56	; 0x38
 8016092:	f7ff fdeb 	bl	8015c6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8016096:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801609a:	3b01      	subs	r3, #1
 801609c:	b29b      	uxth	r3, r3
 801609e:	454b      	cmp	r3, r9
 80160a0:	9309      	str	r3, [sp, #36]	; 0x24
 80160a2:	d021      	beq.n	80160e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80160a4:	7961      	ldrb	r1, [r4, #5]
 80160a6:	a817      	add	r0, sp, #92	; 0x5c
 80160a8:	f7f2 fbbc 	bl	8008824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80160ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80160ae:	e7f4      	b.n	801609a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80160b0:	fa1f f986 	uxth.w	r9, r6
 80160b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80160b8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80160bc:	443b      	add	r3, r7
 80160be:	4293      	cmp	r3, r2
 80160c0:	f6bf af7e 	bge.w	8015fc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80160c4:	a817      	add	r0, sp, #92	; 0x5c
 80160c6:	f002 fe7f 	bl	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80160ca:	b1f8      	cbz	r0, 801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80160cc:	280a      	cmp	r0, #10
 80160ce:	d1f1      	bne.n	80160b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80160d0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80160d4:	444b      	add	r3, r9
 80160d6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80160da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80160de:	eba3 0309 	sub.w	r3, r3, r9
 80160e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80160e6:	e7e5      	b.n	80160b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80160e8:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80160ec:	b2b3      	uxth	r3, r6
 80160ee:	441a      	add	r2, r3
 80160f0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80160f4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80160f8:	1ad3      	subs	r3, r2, r3
 80160fa:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80160fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8016102:	b11b      	cbz	r3, 801610c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8016104:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8016108:	2b00      	cmp	r3, #0
 801610a:	d0ba      	beq.n	8016082 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801610c:	b063      	add	sp, #396	; 0x18c
 801610e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016112:	2a02      	cmp	r2, #2
 8016114:	d105      	bne.n	8016122 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8016116:	7be2      	ldrb	r2, [r4, #15]
 8016118:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801611c:	1a80      	subs	r0, r0, r2
 801611e:	1ac0      	subs	r0, r0, r3
 8016120:	e773      	b.n	801600a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8016122:	2000      	movs	r0, #0
 8016124:	e772      	b.n	801600c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8016126:	7be0      	ldrb	r0, [r4, #15]
 8016128:	e770      	b.n	801600c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801612a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801612e:	e773      	b.n	8016018 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8016130:	f1ba 0f00 	cmp.w	sl, #0
 8016134:	d0f7      	beq.n	8016126 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8016136:	2264      	movs	r2, #100	; 0x64
 8016138:	4639      	mov	r1, r7
 801613a:	a849      	add	r0, sp, #292	; 0x124
 801613c:	f015 fd3b 	bl	802bbb6 <memcpy>
 8016140:	2300      	movs	r3, #0
 8016142:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8016146:	6821      	ldr	r1, [r4, #0]
 8016148:	a849      	add	r0, sp, #292	; 0x124
 801614a:	f7ff fbae 	bl	80158aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801614e:	b203      	sxth	r3, r0
 8016150:	e751      	b.n	8015ff6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08016152 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8016152:	2b03      	cmp	r3, #3
 8016154:	d818      	bhi.n	8016188 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8016156:	e8df f003 	tbb	[pc, r3]
 801615a:	0602      	.short	0x0602
 801615c:	130d      	.short	0x130d
 801615e:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016162:	1850      	adds	r0, r2, r1
 8016164:	4770      	bx	lr
 8016166:	8803      	ldrh	r3, [r0, #0]
 8016168:	8880      	ldrh	r0, [r0, #4]
 801616a:	4418      	add	r0, r3
 801616c:	b200      	sxth	r0, r0
 801616e:	1a80      	subs	r0, r0, r2
 8016170:	3801      	subs	r0, #1
 8016172:	4770      	bx	lr
 8016174:	8803      	ldrh	r3, [r0, #0]
 8016176:	8880      	ldrh	r0, [r0, #4]
 8016178:	4418      	add	r0, r3
 801617a:	b200      	sxth	r0, r0
 801617c:	1a40      	subs	r0, r0, r1
 801617e:	e7f7      	b.n	8016170 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8016180:	f9b0 0000 	ldrsh.w	r0, [r0]
 8016184:	4410      	add	r0, r2
 8016186:	4770      	bx	lr
 8016188:	2000      	movs	r0, #0
 801618a:	4770      	bx	lr

0801618c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801618c:	2b03      	cmp	r3, #3
 801618e:	d817      	bhi.n	80161c0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8016190:	e8df f003 	tbb	[pc, r3]
 8016194:	10090602 	.word	0x10090602
 8016198:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801619c:	1850      	adds	r0, r2, r1
 801619e:	4770      	bx	lr
 80161a0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80161a4:	e7fa      	b.n	801619c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80161a6:	8843      	ldrh	r3, [r0, #2]
 80161a8:	88c0      	ldrh	r0, [r0, #6]
 80161aa:	4418      	add	r0, r3
 80161ac:	b200      	sxth	r0, r0
 80161ae:	1a80      	subs	r0, r0, r2
 80161b0:	3801      	subs	r0, #1
 80161b2:	4770      	bx	lr
 80161b4:	8843      	ldrh	r3, [r0, #2]
 80161b6:	88c0      	ldrh	r0, [r0, #6]
 80161b8:	4418      	add	r0, r3
 80161ba:	b200      	sxth	r0, r0
 80161bc:	1a40      	subs	r0, r0, r1
 80161be:	e7f7      	b.n	80161b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80161c0:	2000      	movs	r0, #0
 80161c2:	4770      	bx	lr

080161c4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80161c4:	4b01      	ldr	r3, [pc, #4]	; (80161cc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80161c6:	2200      	movs	r2, #0
 80161c8:	601a      	str	r2, [r3, #0]
 80161ca:	4770      	bx	lr
 80161cc:	200137fc 	.word	0x200137fc

080161d0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80161d0:	4603      	mov	r3, r0
 80161d2:	b1c8      	cbz	r0, 8016208 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80161d4:	0c02      	lsrs	r2, r0, #16
 80161d6:	0412      	lsls	r2, r2, #16
 80161d8:	b9a2      	cbnz	r2, 8016204 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80161da:	0403      	lsls	r3, r0, #16
 80161dc:	2010      	movs	r0, #16
 80161de:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80161e2:	bf04      	itt	eq
 80161e4:	021b      	lsleq	r3, r3, #8
 80161e6:	3008      	addeq	r0, #8
 80161e8:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80161ec:	bf04      	itt	eq
 80161ee:	011b      	lsleq	r3, r3, #4
 80161f0:	3004      	addeq	r0, #4
 80161f2:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80161f6:	bf04      	itt	eq
 80161f8:	009b      	lsleq	r3, r3, #2
 80161fa:	3002      	addeq	r0, #2
 80161fc:	2b00      	cmp	r3, #0
 80161fe:	db04      	blt.n	801620a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8016200:	3001      	adds	r0, #1
 8016202:	4770      	bx	lr
 8016204:	2000      	movs	r0, #0
 8016206:	e7ea      	b.n	80161de <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8016208:	2020      	movs	r0, #32
 801620a:	4770      	bx	lr

0801620c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801620c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016210:	b087      	sub	sp, #28
 8016212:	460d      	mov	r5, r1
 8016214:	4616      	mov	r6, r2
 8016216:	4698      	mov	r8, r3
 8016218:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801621c:	4601      	mov	r1, r0
 801621e:	b120      	cbz	r0, 801622a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016220:	b11a      	cbz	r2, 801622a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016222:	2d1f      	cmp	r5, #31
 8016224:	d801      	bhi.n	801622a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8016226:	2b1f      	cmp	r3, #31
 8016228:	d904      	bls.n	8016234 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801622a:	2000      	movs	r0, #0
 801622c:	6038      	str	r0, [r7, #0]
 801622e:	b007      	add	sp, #28
 8016230:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016234:	b97d      	cbnz	r5, 8016256 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8016236:	b143      	cbz	r3, 801624a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8016238:	4602      	mov	r2, r0
 801623a:	e9cd 4700 	strd	r4, r7, [sp]
 801623e:	462b      	mov	r3, r5
 8016240:	4641      	mov	r1, r8
 8016242:	4630      	mov	r0, r6
 8016244:	f7ff ffe2 	bl	801620c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016248:	e7f1      	b.n	801622e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801624a:	f04f 33ff 	mov.w	r3, #4294967295
 801624e:	603b      	str	r3, [r7, #0]
 8016250:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016254:	e7eb      	b.n	801622e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8016256:	fa32 fa05 	lsrs.w	sl, r2, r5
 801625a:	d106      	bne.n	801626a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 801625c:	4346      	muls	r6, r0
 801625e:	fbb6 f0f4 	udiv	r0, r6, r4
 8016262:	fb04 6610 	mls	r6, r4, r0, r6
 8016266:	603e      	str	r6, [r7, #0]
 8016268:	e7e1      	b.n	801622e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801626a:	2201      	movs	r2, #1
 801626c:	40aa      	lsls	r2, r5
 801626e:	3a01      	subs	r2, #1
 8016270:	4016      	ands	r6, r2
 8016272:	fa00 fb05 	lsl.w	fp, r0, r5
 8016276:	4630      	mov	r0, r6
 8016278:	fbbb f9f4 	udiv	r9, fp, r4
 801627c:	fb0a f309 	mul.w	r3, sl, r9
 8016280:	9303      	str	r3, [sp, #12]
 8016282:	f7ff ffa5 	bl	80161d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016286:	462b      	mov	r3, r5
 8016288:	460a      	mov	r2, r1
 801628a:	e9cd 4700 	strd	r4, r7, [sp]
 801628e:	4601      	mov	r1, r0
 8016290:	4630      	mov	r0, r6
 8016292:	f7ff ffbb 	bl	801620c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016296:	fb04 b919 	mls	r9, r4, r9, fp
 801629a:	4606      	mov	r6, r0
 801629c:	4648      	mov	r0, r9
 801629e:	eb05 0108 	add.w	r1, r5, r8
 80162a2:	f7ff ff95 	bl	80161d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80162a6:	ab05      	add	r3, sp, #20
 80162a8:	e9cd 4300 	strd	r4, r3, [sp]
 80162ac:	464a      	mov	r2, r9
 80162ae:	4603      	mov	r3, r0
 80162b0:	4650      	mov	r0, sl
 80162b2:	f7ff ffab 	bl	801620c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80162b6:	6839      	ldr	r1, [r7, #0]
 80162b8:	9a05      	ldr	r2, [sp, #20]
 80162ba:	9b03      	ldr	r3, [sp, #12]
 80162bc:	4411      	add	r1, r2
 80162be:	fbb1 f2f4 	udiv	r2, r1, r4
 80162c2:	18d3      	adds	r3, r2, r3
 80162c4:	441e      	add	r6, r3
 80162c6:	fb04 1412 	mls	r4, r4, r2, r1
 80162ca:	4430      	add	r0, r6
 80162cc:	603c      	str	r4, [r7, #0]
 80162ce:	e7ae      	b.n	801622e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080162d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80162d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80162d4:	b085      	sub	sp, #20
 80162d6:	f1b0 0900 	subs.w	r9, r0, #0
 80162da:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80162dc:	461d      	mov	r5, r3
 80162de:	bfbf      	itttt	lt
 80162e0:	6823      	ldrlt	r3, [r4, #0]
 80162e2:	425b      	neglt	r3, r3
 80162e4:	f1c9 0900 	rsblt	r9, r9, #0
 80162e8:	6023      	strlt	r3, [r4, #0]
 80162ea:	bfb4      	ite	lt
 80162ec:	f04f 36ff 	movlt.w	r6, #4294967295
 80162f0:	2601      	movge	r6, #1
 80162f2:	2a00      	cmp	r2, #0
 80162f4:	4617      	mov	r7, r2
 80162f6:	da04      	bge.n	8016302 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80162f8:	6823      	ldr	r3, [r4, #0]
 80162fa:	425b      	negs	r3, r3
 80162fc:	4257      	negs	r7, r2
 80162fe:	4276      	negs	r6, r6
 8016300:	6023      	str	r3, [r4, #0]
 8016302:	2d00      	cmp	r5, #0
 8016304:	4638      	mov	r0, r7
 8016306:	bfba      	itte	lt
 8016308:	426d      	neglt	r5, r5
 801630a:	f04f 38ff 	movlt.w	r8, #4294967295
 801630e:	f04f 0801 	movge.w	r8, #1
 8016312:	f7ff ff5d 	bl	80161d0 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8016316:	ab03      	add	r3, sp, #12
 8016318:	e9cd 5300 	strd	r5, r3, [sp]
 801631c:	463a      	mov	r2, r7
 801631e:	4603      	mov	r3, r0
 8016320:	4648      	mov	r0, r9
 8016322:	f7ff ff73 	bl	801620c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8016326:	6823      	ldr	r3, [r4, #0]
 8016328:	9a03      	ldr	r2, [sp, #12]
 801632a:	4546      	cmp	r6, r8
 801632c:	441a      	add	r2, r3
 801632e:	fb92 f3f5 	sdiv	r3, r2, r5
 8016332:	4418      	add	r0, r3
 8016334:	bf18      	it	ne
 8016336:	4240      	negne	r0, r0
 8016338:	fb05 2313 	mls	r3, r5, r3, r2
 801633c:	1c72      	adds	r2, r6, #1
 801633e:	6023      	str	r3, [r4, #0]
 8016340:	d105      	bne.n	801634e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8016342:	2b00      	cmp	r3, #0
 8016344:	f1c3 0200 	rsb	r2, r3, #0
 8016348:	db0b      	blt.n	8016362 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801634a:	6022      	str	r2, [r4, #0]
 801634c:	e006      	b.n	801635c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801634e:	2e01      	cmp	r6, #1
 8016350:	d104      	bne.n	801635c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016352:	2b00      	cmp	r3, #0
 8016354:	da02      	bge.n	801635c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8016356:	442b      	add	r3, r5
 8016358:	3801      	subs	r0, #1
 801635a:	6023      	str	r3, [r4, #0]
 801635c:	b005      	add	sp, #20
 801635e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016362:	3801      	subs	r0, #1
 8016364:	1b52      	subs	r2, r2, r5
 8016366:	e7f0      	b.n	801634a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08016368 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8016368:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801636c:	4c1c      	ldr	r4, [pc, #112]	; (80163e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801636e:	6807      	ldr	r7, [r0, #0]
 8016370:	69a3      	ldr	r3, [r4, #24]
 8016372:	4605      	mov	r5, r0
 8016374:	b92b      	cbnz	r3, 8016382 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8016376:	6840      	ldr	r0, [r0, #4]
 8016378:	e9c5 7000 	strd	r7, r0, [r5]
 801637c:	b004      	add	sp, #16
 801637e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016382:	68a2      	ldr	r2, [r4, #8]
 8016384:	6820      	ldr	r0, [r4, #0]
 8016386:	ae04      	add	r6, sp, #16
 8016388:	f04f 0802 	mov.w	r8, #2
 801638c:	fb93 f1f8 	sdiv	r1, r3, r8
 8016390:	440a      	add	r2, r1
 8016392:	f846 2d04 	str.w	r2, [r6, #-4]!
 8016396:	69e1      	ldr	r1, [r4, #28]
 8016398:	9600      	str	r6, [sp, #0]
 801639a:	463a      	mov	r2, r7
 801639c:	f7ff ff98 	bl	80162d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80163a0:	69a3      	ldr	r3, [r4, #24]
 80163a2:	686a      	ldr	r2, [r5, #4]
 80163a4:	6a21      	ldr	r1, [r4, #32]
 80163a6:	9600      	str	r6, [sp, #0]
 80163a8:	4607      	mov	r7, r0
 80163aa:	6860      	ldr	r0, [r4, #4]
 80163ac:	f7ff ff90 	bl	80162d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80163b0:	6962      	ldr	r2, [r4, #20]
 80163b2:	69a3      	ldr	r3, [r4, #24]
 80163b4:	fb93 f8f8 	sdiv	r8, r3, r8
 80163b8:	4442      	add	r2, r8
 80163ba:	9203      	str	r2, [sp, #12]
 80163bc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80163be:	682a      	ldr	r2, [r5, #0]
 80163c0:	9600      	str	r6, [sp, #0]
 80163c2:	4407      	add	r7, r0
 80163c4:	68e0      	ldr	r0, [r4, #12]
 80163c6:	f7ff ff83 	bl	80162d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80163ca:	9600      	str	r6, [sp, #0]
 80163cc:	4680      	mov	r8, r0
 80163ce:	69a3      	ldr	r3, [r4, #24]
 80163d0:	686a      	ldr	r2, [r5, #4]
 80163d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80163d4:	6920      	ldr	r0, [r4, #16]
 80163d6:	f7ff ff7b 	bl	80162d0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80163da:	4440      	add	r0, r8
 80163dc:	e7cc      	b.n	8016378 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 80163de:	bf00      	nop
 80163e0:	20013800 	.word	0x20013800

080163e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 80163e4:	4b07      	ldr	r3, [pc, #28]	; (8016404 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 80163e6:	781b      	ldrb	r3, [r3, #0]
 80163e8:	2b01      	cmp	r3, #1
 80163ea:	d109      	bne.n	8016400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 80163ec:	f9b1 3000 	ldrsh.w	r3, [r1]
 80163f0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80163f4:	8003      	strh	r3, [r0, #0]
 80163f6:	4b04      	ldr	r3, [pc, #16]	; (8016408 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 80163f8:	881b      	ldrh	r3, [r3, #0]
 80163fa:	3b01      	subs	r3, #1
 80163fc:	1a9b      	subs	r3, r3, r2
 80163fe:	800b      	strh	r3, [r1, #0]
 8016400:	4770      	bx	lr
 8016402:	bf00      	nop
 8016404:	200137e4 	.word	0x200137e4
 8016408:	200137e0 	.word	0x200137e0

0801640c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801640c:	b510      	push	{r4, lr}
 801640e:	4b07      	ldr	r3, [pc, #28]	; (801642c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8016410:	781b      	ldrb	r3, [r3, #0]
 8016412:	2b01      	cmp	r3, #1
 8016414:	d108      	bne.n	8016428 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8016416:	4b06      	ldr	r3, [pc, #24]	; (8016430 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8016418:	880c      	ldrh	r4, [r1, #0]
 801641a:	881b      	ldrh	r3, [r3, #0]
 801641c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8016420:	3b01      	subs	r3, #1
 8016422:	1b1b      	subs	r3, r3, r4
 8016424:	8003      	strh	r3, [r0, #0]
 8016426:	800a      	strh	r2, [r1, #0]
 8016428:	bd10      	pop	{r4, pc}
 801642a:	bf00      	nop
 801642c:	200137e4 	.word	0x200137e4
 8016430:	200137e0 	.word	0x200137e0

08016434 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8016434:	b510      	push	{r4, lr}
 8016436:	4b0a      	ldr	r3, [pc, #40]	; (8016460 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8016438:	781b      	ldrb	r3, [r3, #0]
 801643a:	2b01      	cmp	r3, #1
 801643c:	d10e      	bne.n	801645c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801643e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8016442:	8843      	ldrh	r3, [r0, #2]
 8016444:	f9b0 4000 	ldrsh.w	r4, [r0]
 8016448:	8044      	strh	r4, [r0, #2]
 801644a:	18ca      	adds	r2, r1, r3
 801644c:	4b05      	ldr	r3, [pc, #20]	; (8016464 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801644e:	881b      	ldrh	r3, [r3, #0]
 8016450:	1a9b      	subs	r3, r3, r2
 8016452:	8003      	strh	r3, [r0, #0]
 8016454:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016458:	80c3      	strh	r3, [r0, #6]
 801645a:	8081      	strh	r1, [r0, #4]
 801645c:	bd10      	pop	{r4, pc}
 801645e:	bf00      	nop
 8016460:	200137e4 	.word	0x200137e4
 8016464:	200137e0 	.word	0x200137e0

08016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016468:	4b08      	ldr	r3, [pc, #32]	; (801648c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801646a:	781b      	ldrb	r3, [r3, #0]
 801646c:	2b01      	cmp	r3, #1
 801646e:	d10c      	bne.n	801648a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016470:	8803      	ldrh	r3, [r0, #0]
 8016472:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8016476:	8842      	ldrh	r2, [r0, #2]
 8016478:	8002      	strh	r2, [r0, #0]
 801647a:	185a      	adds	r2, r3, r1
 801647c:	4b04      	ldr	r3, [pc, #16]	; (8016490 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801647e:	881b      	ldrh	r3, [r3, #0]
 8016480:	1a9b      	subs	r3, r3, r2
 8016482:	8043      	strh	r3, [r0, #2]
 8016484:	88c3      	ldrh	r3, [r0, #6]
 8016486:	8083      	strh	r3, [r0, #4]
 8016488:	80c1      	strh	r1, [r0, #6]
 801648a:	4770      	bx	lr
 801648c:	200137e4 	.word	0x200137e4
 8016490:	200137e0 	.word	0x200137e0

08016494 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8016494:	b510      	push	{r4, lr}
 8016496:	4b07      	ldr	r3, [pc, #28]	; (80164b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8016498:	781b      	ldrb	r3, [r3, #0]
 801649a:	2b01      	cmp	r3, #1
 801649c:	d108      	bne.n	80164b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801649e:	f9b1 3000 	ldrsh.w	r3, [r1]
 80164a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80164a6:	8003      	strh	r3, [r0, #0]
 80164a8:	8893      	ldrh	r3, [r2, #4]
 80164aa:	3b01      	subs	r3, #1
 80164ac:	1b1b      	subs	r3, r3, r4
 80164ae:	800b      	strh	r3, [r1, #0]
 80164b0:	bd10      	pop	{r4, pc}
 80164b2:	bf00      	nop
 80164b4:	200137e4 	.word	0x200137e4

080164b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80164b8:	4b0b      	ldr	r3, [pc, #44]	; (80164e8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80164ba:	781b      	ldrb	r3, [r3, #0]
 80164bc:	2b01      	cmp	r3, #1
 80164be:	d111      	bne.n	80164e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80164c0:	680b      	ldr	r3, [r1, #0]
 80164c2:	ed90 7a00 	vldr	s14, [r0]
 80164c6:	6003      	str	r3, [r0, #0]
 80164c8:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80164cc:	eddf 6a07 	vldr	s13, [pc, #28]	; 80164ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80164d0:	ee07 3a90 	vmov	s15, r3
 80164d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80164d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80164dc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80164e0:	edc1 7a00 	vstr	s15, [r1]
 80164e4:	4770      	bx	lr
 80164e6:	bf00      	nop
 80164e8:	200137e4 	.word	0x200137e4
 80164ec:	38d1b717 	.word	0x38d1b717

080164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 80164f0:	b510      	push	{r4, lr}
 80164f2:	4b0a      	ldr	r3, [pc, #40]	; (801651c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 80164f4:	781b      	ldrb	r3, [r3, #0]
 80164f6:	2b01      	cmp	r3, #1
 80164f8:	460a      	mov	r2, r1
 80164fa:	d10d      	bne.n	8016518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 80164fc:	8881      	ldrh	r1, [r0, #4]
 80164fe:	8803      	ldrh	r3, [r0, #0]
 8016500:	440b      	add	r3, r1
 8016502:	4601      	mov	r1, r0
 8016504:	3b01      	subs	r3, #1
 8016506:	f821 3b02 	strh.w	r3, [r1], #2
 801650a:	f7ff ffc3 	bl	8016494 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801650e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016512:	88c2      	ldrh	r2, [r0, #6]
 8016514:	8082      	strh	r2, [r0, #4]
 8016516:	80c3      	strh	r3, [r0, #6]
 8016518:	bd10      	pop	{r4, pc}
 801651a:	bf00      	nop
 801651c:	200137e4 	.word	0x200137e4

08016520 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016520:	4b06      	ldr	r3, [pc, #24]	; (801653c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016522:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016526:	4b06      	ldr	r3, [pc, #24]	; (8016540 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8016528:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801652c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016530:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8016534:	2100      	movs	r1, #0
 8016536:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801653a:	4770      	bx	lr
 801653c:	200137e0 	.word	0x200137e0
 8016540:	200137e2 	.word	0x200137e2

08016544 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8016544:	4b03      	ldr	r3, [pc, #12]	; (8016554 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8016546:	6818      	ldr	r0, [r3, #0]
 8016548:	b110      	cbz	r0, 8016550 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801654a:	6803      	ldr	r3, [r0, #0]
 801654c:	699b      	ldr	r3, [r3, #24]
 801654e:	4718      	bx	r3
 8016550:	4770      	bx	lr
 8016552:	bf00      	nop
 8016554:	20013830 	.word	0x20013830

08016558 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8016558:	4770      	bx	lr
	...

0801655c <_ZN8touchgfx11Application4drawEv>:
 801655c:	b507      	push	{r0, r1, r2, lr}
 801655e:	4b09      	ldr	r3, [pc, #36]	; (8016584 <_ZN8touchgfx11Application4drawEv+0x28>)
 8016560:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016564:	4b08      	ldr	r3, [pc, #32]	; (8016588 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8016566:	f8ad 2004 	strh.w	r2, [sp, #4]
 801656a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801656e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016572:	6803      	ldr	r3, [r0, #0]
 8016574:	2100      	movs	r1, #0
 8016576:	9100      	str	r1, [sp, #0]
 8016578:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801657a:	4669      	mov	r1, sp
 801657c:	4798      	blx	r3
 801657e:	b003      	add	sp, #12
 8016580:	f85d fb04 	ldr.w	pc, [sp], #4
 8016584:	200137e0 	.word	0x200137e0
 8016588:	200137e2 	.word	0x200137e2

0801658c <_ZN8touchgfx11Application10invalidateEv>:
 801658c:	4b09      	ldr	r3, [pc, #36]	; (80165b4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801658e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016592:	4b09      	ldr	r3, [pc, #36]	; (80165b8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8016594:	b082      	sub	sp, #8
 8016596:	f9b3 3000 	ldrsh.w	r3, [r3]
 801659a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801659e:	2100      	movs	r1, #0
 80165a0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80165a4:	9100      	str	r1, [sp, #0]
 80165a6:	6803      	ldr	r3, [r0, #0]
 80165a8:	aa02      	add	r2, sp, #8
 80165aa:	e912 0006 	ldmdb	r2, {r1, r2}
 80165ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80165b0:	b002      	add	sp, #8
 80165b2:	4718      	bx	r3
 80165b4:	200137e0 	.word	0x200137e0
 80165b8:	200137e2 	.word	0x200137e2

080165bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80165bc:	4b03      	ldr	r3, [pc, #12]	; (80165cc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80165be:	6818      	ldr	r0, [r3, #0]
 80165c0:	b110      	cbz	r0, 80165c8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80165c2:	6803      	ldr	r3, [r0, #0]
 80165c4:	69db      	ldr	r3, [r3, #28]
 80165c6:	4718      	bx	r3
 80165c8:	4770      	bx	lr
 80165ca:	bf00      	nop
 80165cc:	20013830 	.word	0x20013830

080165d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80165d0:	4b03      	ldr	r3, [pc, #12]	; (80165e0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80165d2:	6818      	ldr	r0, [r3, #0]
 80165d4:	b110      	cbz	r0, 80165dc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80165d6:	6803      	ldr	r3, [r0, #0]
 80165d8:	6a1b      	ldr	r3, [r3, #32]
 80165da:	4718      	bx	r3
 80165dc:	4770      	bx	lr
 80165de:	bf00      	nop
 80165e0:	20013830 	.word	0x20013830

080165e4 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80165e4:	2300      	movs	r3, #0
 80165e6:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80165ea:	4770      	bx	lr

080165ec <_ZN8touchgfx11Application14handleKeyEventEh>:
 80165ec:	4b03      	ldr	r3, [pc, #12]	; (80165fc <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80165ee:	6818      	ldr	r0, [r3, #0]
 80165f0:	b110      	cbz	r0, 80165f8 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80165f2:	6803      	ldr	r3, [r0, #0]
 80165f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80165f6:	4718      	bx	r3
 80165f8:	4770      	bx	lr
 80165fa:	bf00      	nop
 80165fc:	20013830 	.word	0x20013830

08016600 <_ZN8touchgfx11ApplicationD1Ev>:
 8016600:	4770      	bx	lr

08016602 <_ZN8touchgfx11ApplicationD0Ev>:
 8016602:	b510      	push	{r4, lr}
 8016604:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8016608:	4604      	mov	r4, r0
 801660a:	f014 f996 	bl	802a93a <_ZdlPvj>
 801660e:	4620      	mov	r0, r4
 8016610:	bd10      	pop	{r4, pc}

08016612 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016612:	b510      	push	{r4, lr}
 8016614:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016618:	888a      	ldrh	r2, [r1, #4]
 801661a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801661e:	4422      	add	r2, r4
 8016620:	b212      	sxth	r2, r2
 8016622:	4293      	cmp	r3, r2
 8016624:	da15      	bge.n	8016652 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016626:	8882      	ldrh	r2, [r0, #4]
 8016628:	4413      	add	r3, r2
 801662a:	b21b      	sxth	r3, r3
 801662c:	429c      	cmp	r4, r3
 801662e:	da10      	bge.n	8016652 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016630:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016634:	88c9      	ldrh	r1, [r1, #6]
 8016636:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801663a:	4419      	add	r1, r3
 801663c:	b209      	sxth	r1, r1
 801663e:	428a      	cmp	r2, r1
 8016640:	da07      	bge.n	8016652 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016642:	88c0      	ldrh	r0, [r0, #6]
 8016644:	4410      	add	r0, r2
 8016646:	b200      	sxth	r0, r0
 8016648:	4283      	cmp	r3, r0
 801664a:	bfac      	ite	ge
 801664c:	2000      	movge	r0, #0
 801664e:	2001      	movlt	r0, #1
 8016650:	bd10      	pop	{r4, pc}
 8016652:	2000      	movs	r0, #0
 8016654:	e7fc      	b.n	8016650 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08016656 <_ZN8touchgfx4Rect10restrictToEss>:
 8016656:	f9b0 3000 	ldrsh.w	r3, [r0]
 801665a:	2b00      	cmp	r3, #0
 801665c:	b510      	push	{r4, lr}
 801665e:	da04      	bge.n	801666a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8016660:	8884      	ldrh	r4, [r0, #4]
 8016662:	4423      	add	r3, r4
 8016664:	8083      	strh	r3, [r0, #4]
 8016666:	2300      	movs	r3, #0
 8016668:	8003      	strh	r3, [r0, #0]
 801666a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801666e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016672:	1b09      	subs	r1, r1, r4
 8016674:	428b      	cmp	r3, r1
 8016676:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801667a:	bfc8      	it	gt
 801667c:	8081      	strhgt	r1, [r0, #4]
 801667e:	2b00      	cmp	r3, #0
 8016680:	da04      	bge.n	801668c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8016682:	88c1      	ldrh	r1, [r0, #6]
 8016684:	440b      	add	r3, r1
 8016686:	80c3      	strh	r3, [r0, #6]
 8016688:	2300      	movs	r3, #0
 801668a:	8043      	strh	r3, [r0, #2]
 801668c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8016690:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8016694:	1a52      	subs	r2, r2, r1
 8016696:	4293      	cmp	r3, r2
 8016698:	bfc8      	it	gt
 801669a:	80c2      	strhgt	r2, [r0, #6]
 801669c:	bd10      	pop	{r4, pc}
	...

080166a0 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80166a0:	b510      	push	{r4, lr}
 80166a2:	4b10      	ldr	r3, [pc, #64]	; (80166e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80166a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80166a8:	4b0f      	ldr	r3, [pc, #60]	; (80166e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80166aa:	460c      	mov	r4, r1
 80166ac:	4620      	mov	r0, r4
 80166ae:	f9b3 1000 	ldrsh.w	r1, [r3]
 80166b2:	f7ff ffd0 	bl	8016656 <_ZN8touchgfx4Rect10restrictToEss>
 80166b6:	4b0d      	ldr	r3, [pc, #52]	; (80166ec <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80166b8:	6818      	ldr	r0, [r3, #0]
 80166ba:	b190      	cbz	r0, 80166e2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80166bc:	6803      	ldr	r3, [r0, #0]
 80166be:	4621      	mov	r1, r4
 80166c0:	689b      	ldr	r3, [r3, #8]
 80166c2:	4798      	blx	r3
 80166c4:	4b0a      	ldr	r3, [pc, #40]	; (80166f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80166c6:	6818      	ldr	r0, [r3, #0]
 80166c8:	b118      	cbz	r0, 80166d2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80166ca:	6803      	ldr	r3, [r0, #0]
 80166cc:	4621      	mov	r1, r4
 80166ce:	689b      	ldr	r3, [r3, #8]
 80166d0:	4798      	blx	r3
 80166d2:	4b08      	ldr	r3, [pc, #32]	; (80166f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80166d4:	6818      	ldr	r0, [r3, #0]
 80166d6:	6803      	ldr	r3, [r0, #0]
 80166d8:	4621      	mov	r1, r4
 80166da:	69db      	ldr	r3, [r3, #28]
 80166dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80166e0:	4718      	bx	r3
 80166e2:	bd10      	pop	{r4, pc}
 80166e4:	200137e2 	.word	0x200137e2
 80166e8:	200137e0 	.word	0x200137e0
 80166ec:	20013830 	.word	0x20013830
 80166f0:	2001382c 	.word	0x2001382c
 80166f4:	200137ec 	.word	0x200137ec

080166f8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 80166f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80166fa:	4606      	mov	r6, r0
 80166fc:	4608      	mov	r0, r1
 80166fe:	460f      	mov	r7, r1
 8016700:	f7fa f957 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016704:	b9e8      	cbnz	r0, 8016742 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016706:	f9b7 5000 	ldrsh.w	r5, [r7]
 801670a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801670e:	42a5      	cmp	r5, r4
 8016710:	db17      	blt.n	8016742 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016712:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016716:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801671a:	429a      	cmp	r2, r3
 801671c:	db11      	blt.n	8016742 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801671e:	88b9      	ldrh	r1, [r7, #4]
 8016720:	440d      	add	r5, r1
 8016722:	88b1      	ldrh	r1, [r6, #4]
 8016724:	440c      	add	r4, r1
 8016726:	b22d      	sxth	r5, r5
 8016728:	b224      	sxth	r4, r4
 801672a:	42a5      	cmp	r5, r4
 801672c:	dc09      	bgt.n	8016742 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801672e:	88f8      	ldrh	r0, [r7, #6]
 8016730:	4410      	add	r0, r2
 8016732:	88f2      	ldrh	r2, [r6, #6]
 8016734:	4413      	add	r3, r2
 8016736:	b200      	sxth	r0, r0
 8016738:	b21b      	sxth	r3, r3
 801673a:	4298      	cmp	r0, r3
 801673c:	bfcc      	ite	gt
 801673e:	2000      	movgt	r0, #0
 8016740:	2001      	movle	r0, #1
 8016742:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016744 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016744:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016746:	4604      	mov	r4, r0
 8016748:	4608      	mov	r0, r1
 801674a:	460d      	mov	r5, r1
 801674c:	f7fa f931 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016750:	b978      	cbnz	r0, 8016772 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8016752:	4620      	mov	r0, r4
 8016754:	f7fa f92d 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016758:	f9b5 6000 	ldrsh.w	r6, [r5]
 801675c:	b150      	cbz	r0, 8016774 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 801675e:	8026      	strh	r6, [r4, #0]
 8016760:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8016764:	8063      	strh	r3, [r4, #2]
 8016766:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801676a:	80a3      	strh	r3, [r4, #4]
 801676c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8016770:	80e3      	strh	r3, [r4, #6]
 8016772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016774:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016778:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801677c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8016780:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8016784:	88ed      	ldrh	r5, [r5, #6]
 8016786:	42b1      	cmp	r1, r6
 8016788:	460f      	mov	r7, r1
 801678a:	bfa8      	it	ge
 801678c:	4637      	movge	r7, r6
 801678e:	4293      	cmp	r3, r2
 8016790:	4618      	mov	r0, r3
 8016792:	4466      	add	r6, ip
 8016794:	bfa8      	it	ge
 8016796:	4610      	movge	r0, r2
 8016798:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801679c:	8027      	strh	r7, [r4, #0]
 801679e:	442a      	add	r2, r5
 80167a0:	88e5      	ldrh	r5, [r4, #6]
 80167a2:	8060      	strh	r0, [r4, #2]
 80167a4:	4461      	add	r1, ip
 80167a6:	442b      	add	r3, r5
 80167a8:	b236      	sxth	r6, r6
 80167aa:	b209      	sxth	r1, r1
 80167ac:	b212      	sxth	r2, r2
 80167ae:	b21b      	sxth	r3, r3
 80167b0:	428e      	cmp	r6, r1
 80167b2:	bfac      	ite	ge
 80167b4:	ebc7 0106 	rsbge	r1, r7, r6
 80167b8:	ebc7 0101 	rsblt	r1, r7, r1
 80167bc:	429a      	cmp	r2, r3
 80167be:	bfac      	ite	ge
 80167c0:	ebc0 0202 	rsbge	r2, r0, r2
 80167c4:	ebc0 0203 	rsblt	r2, r0, r3
 80167c8:	80a1      	strh	r1, [r4, #4]
 80167ca:	80e2      	strh	r2, [r4, #6]
 80167cc:	e7d1      	b.n	8016772 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080167d0 <_ZN8touchgfx11Application11getInstanceEv>:
 80167d0:	4b01      	ldr	r3, [pc, #4]	; (80167d8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80167d2:	6818      	ldr	r0, [r3, #0]
 80167d4:	4770      	bx	lr
 80167d6:	bf00      	nop
 80167d8:	20013840 	.word	0x20013840

080167dc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 80167dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167de:	4b10      	ldr	r3, [pc, #64]	; (8016820 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 80167e0:	781b      	ldrb	r3, [r3, #0]
 80167e2:	4605      	mov	r5, r0
 80167e4:	b1d3      	cbz	r3, 801681c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 80167e6:	4b0f      	ldr	r3, [pc, #60]	; (8016824 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 80167e8:	4f0f      	ldr	r7, [pc, #60]	; (8016828 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 80167ea:	881c      	ldrh	r4, [r3, #0]
 80167ec:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 80167f0:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 80167f4:	42a3      	cmp	r3, r4
 80167f6:	d90e      	bls.n	8016816 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 80167f8:	683b      	ldr	r3, [r7, #0]
 80167fa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80167fe:	b10a      	cbz	r2, 8016804 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8016800:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8016802:	b900      	cbnz	r0, 8016806 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016804:	6898      	ldr	r0, [r3, #8]
 8016806:	6803      	ldr	r3, [r0, #0]
 8016808:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 801680c:	69db      	ldr	r3, [r3, #28]
 801680e:	3401      	adds	r4, #1
 8016810:	4798      	blx	r3
 8016812:	b2a4      	uxth	r4, r4
 8016814:	e7ec      	b.n	80167f0 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016816:	2300      	movs	r3, #0
 8016818:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 801681c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801681e:	bf00      	nop
 8016820:	200137ea 	.word	0x200137ea
 8016824:	20000088 	.word	0x20000088
 8016828:	200137ec 	.word	0x200137ec

0801682c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801682c:	b510      	push	{r4, lr}
 801682e:	2300      	movs	r3, #0
 8016830:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8016834:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016838:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801683c:	4604      	mov	r4, r0
 801683e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016842:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8016846:	429a      	cmp	r2, r3
 8016848:	d90e      	bls.n	8016868 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801684a:	18e2      	adds	r2, r4, r3
 801684c:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8016850:	b122      	cbz	r2, 801685c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8016852:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8016856:	6803      	ldr	r3, [r0, #0]
 8016858:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801685a:	4798      	blx	r3
 801685c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8016860:	3301      	adds	r3, #1
 8016862:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016866:	e7ea      	b.n	801683e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8016868:	bd10      	pop	{r4, pc}

0801686a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801686a:	b530      	push	{r4, r5, lr}
 801686c:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8016870:	2200      	movs	r2, #0
 8016872:	b293      	uxth	r3, r2
 8016874:	429d      	cmp	r5, r3
 8016876:	d90e      	bls.n	8016896 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016878:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 801687c:	428b      	cmp	r3, r1
 801687e:	d10b      	bne.n	8016898 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016880:	1884      	adds	r4, r0, r2
 8016882:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8016886:	b13b      	cbz	r3, 8016898 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8016888:	3b01      	subs	r3, #1
 801688a:	b2db      	uxtb	r3, r3
 801688c:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8016890:	b90b      	cbnz	r3, 8016896 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8016892:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8016896:	bd30      	pop	{r4, r5, pc}
 8016898:	3201      	adds	r2, #1
 801689a:	e7ea      	b.n	8016872 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

0801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801689c:	2300      	movs	r3, #0
 801689e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80168a2:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80168a6:	30a4      	adds	r0, #164	; 0xa4
 80168a8:	f802 3b01 	strb.w	r3, [r2], #1
 80168ac:	4282      	cmp	r2, r0
 80168ae:	d1fb      	bne.n	80168a8 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80168b0:	4770      	bx	lr
	...

080168b4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80168b4:	b570      	push	{r4, r5, r6, lr}
 80168b6:	4c0b      	ldr	r4, [pc, #44]	; (80168e4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80168b8:	4605      	mov	r5, r0
 80168ba:	6820      	ldr	r0, [r4, #0]
 80168bc:	460e      	mov	r6, r1
 80168be:	b110      	cbz	r0, 80168c6 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80168c0:	6803      	ldr	r3, [r0, #0]
 80168c2:	695b      	ldr	r3, [r3, #20]
 80168c4:	4798      	blx	r3
 80168c6:	1d28      	adds	r0, r5, #4
 80168c8:	f7ff ffe8 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80168cc:	6026      	str	r6, [r4, #0]
 80168ce:	6833      	ldr	r3, [r6, #0]
 80168d0:	4630      	mov	r0, r6
 80168d2:	68db      	ldr	r3, [r3, #12]
 80168d4:	4798      	blx	r3
 80168d6:	682b      	ldr	r3, [r5, #0]
 80168d8:	4628      	mov	r0, r5
 80168da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80168dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80168e0:	4718      	bx	r3
 80168e2:	bf00      	nop
 80168e4:	20013830 	.word	0x20013830

080168e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80168e8:	2300      	movs	r3, #0
 80168ea:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 80168ee:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 80168f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168f4:	461a      	mov	r2, r3
 80168f6:	461c      	mov	r4, r3
 80168f8:	461d      	mov	r5, r3
 80168fa:	459c      	cmp	ip, r3
 80168fc:	dd1a      	ble.n	8016934 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80168fe:	18c6      	adds	r6, r0, r3
 8016900:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8016904:	b16e      	cbz	r6, 8016922 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016906:	429a      	cmp	r2, r3
 8016908:	d008      	beq.n	801691c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801690a:	fa1f fe82 	uxth.w	lr, r2
 801690e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8016912:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016916:	1887      	adds	r7, r0, r2
 8016918:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 801691c:	3201      	adds	r2, #1
 801691e:	3301      	adds	r3, #1
 8016920:	e7eb      	b.n	80168fa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8016922:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8016926:	4299      	cmp	r1, r3
 8016928:	bfa8      	it	ge
 801692a:	3501      	addge	r5, #1
 801692c:	429e      	cmp	r6, r3
 801692e:	bfc8      	it	gt
 8016930:	3401      	addgt	r4, #1
 8016932:	e7f4      	b.n	801691e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016934:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8016938:	1b49      	subs	r1, r1, r5
 801693a:	1b1b      	subs	r3, r3, r4
 801693c:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8016940:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8016944:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8016948:	4293      	cmp	r3, r2
 801694a:	dd03      	ble.n	8016954 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 801694c:	3b01      	subs	r3, #1
 801694e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8016952:	e7f7      	b.n	8016944 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8016954:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08016958 <_ZN8touchgfx11Application15handleTickEventEv>:
 8016958:	b570      	push	{r4, r5, r6, lr}
 801695a:	4d16      	ldr	r5, [pc, #88]	; (80169b4 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 801695c:	4604      	mov	r4, r0
 801695e:	6828      	ldr	r0, [r5, #0]
 8016960:	b140      	cbz	r0, 8016974 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016962:	7a03      	ldrb	r3, [r0, #8]
 8016964:	b933      	cbnz	r3, 8016974 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8016966:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801696a:	6803      	ldr	r3, [r0, #0]
 801696c:	689b      	ldr	r3, [r3, #8]
 801696e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016972:	4718      	bx	r3
 8016974:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8016978:	4e0f      	ldr	r6, [pc, #60]	; (80169b8 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801697a:	b973      	cbnz	r3, 801699a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801697c:	b168      	cbz	r0, 801699a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801697e:	7a03      	ldrb	r3, [r0, #8]
 8016980:	b15b      	cbz	r3, 801699a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8016982:	6830      	ldr	r0, [r6, #0]
 8016984:	b110      	cbz	r0, 801698c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8016986:	6803      	ldr	r3, [r0, #0]
 8016988:	691b      	ldr	r3, [r3, #16]
 801698a:	4798      	blx	r3
 801698c:	6828      	ldr	r0, [r5, #0]
 801698e:	6803      	ldr	r3, [r0, #0]
 8016990:	68db      	ldr	r3, [r3, #12]
 8016992:	4798      	blx	r3
 8016994:	2301      	movs	r3, #1
 8016996:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801699a:	3404      	adds	r4, #4
 801699c:	4620      	mov	r0, r4
 801699e:	f7ff ff45 	bl	801682c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80169a2:	4620      	mov	r0, r4
 80169a4:	f7ff ffa0 	bl	80168e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80169a8:	6830      	ldr	r0, [r6, #0]
 80169aa:	b110      	cbz	r0, 80169b2 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80169ac:	6803      	ldr	r3, [r0, #0]
 80169ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80169b0:	e7dd      	b.n	801696e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80169b2:	bd70      	pop	{r4, r5, r6, pc}
 80169b4:	20013834 	.word	0x20013834
 80169b8:	20013830 	.word	0x20013830

080169bc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 80169bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80169be:	2300      	movs	r3, #0
 80169c0:	4604      	mov	r4, r0
 80169c2:	460d      	mov	r5, r1
 80169c4:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 80169c8:	4618      	mov	r0, r3
 80169ca:	b29a      	uxth	r2, r3
 80169cc:	4291      	cmp	r1, r2
 80169ce:	d911      	bls.n	80169f4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 80169d0:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 80169d4:	18e6      	adds	r6, r4, r3
 80169d6:	42af      	cmp	r7, r5
 80169d8:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80169dc:	d105      	bne.n	80169ea <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80169de:	2aff      	cmp	r2, #255	; 0xff
 80169e0:	d002      	beq.n	80169e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80169e2:	3201      	adds	r2, #1
 80169e4:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80169e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80169ea:	2a00      	cmp	r2, #0
 80169ec:	bf08      	it	eq
 80169ee:	2001      	moveq	r0, #1
 80169f0:	3301      	adds	r3, #1
 80169f2:	e7ea      	b.n	80169ca <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80169f4:	b120      	cbz	r0, 8016a00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80169f6:	2920      	cmp	r1, #32
 80169f8:	d102      	bne.n	8016a00 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80169fa:	4620      	mov	r0, r4
 80169fc:	f7ff ff74 	bl	80168e8 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8016a00:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8016a04:	2b1f      	cmp	r3, #31
 8016a06:	d8ef      	bhi.n	80169e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016a08:	18e2      	adds	r2, r4, r3
 8016a0a:	2101      	movs	r1, #1
 8016a0c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8016a10:	185a      	adds	r2, r3, r1
 8016a12:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8016a16:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016a1a:	e7e5      	b.n	80169e8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08016a1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8016a1c:	4603      	mov	r3, r0
 8016a1e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8016a22:	2200      	movs	r2, #0
 8016a24:	801a      	strh	r2, [r3, #0]
 8016a26:	805a      	strh	r2, [r3, #2]
 8016a28:	809a      	strh	r2, [r3, #4]
 8016a2a:	80da      	strh	r2, [r3, #6]
 8016a2c:	3308      	adds	r3, #8
 8016a2e:	428b      	cmp	r3, r1
 8016a30:	d1f8      	bne.n	8016a24 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016a32:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8016a36:	4770      	bx	lr

08016a38 <_ZN8touchgfx11ApplicationC1Ev>:
 8016a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a3a:	4606      	mov	r6, r0
 8016a3c:	4b1c      	ldr	r3, [pc, #112]	; (8016ab0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016a3e:	f846 3b04 	str.w	r3, [r6], #4
 8016a42:	4604      	mov	r4, r0
 8016a44:	2500      	movs	r5, #0
 8016a46:	22a8      	movs	r2, #168	; 0xa8
 8016a48:	2100      	movs	r1, #0
 8016a4a:	4630      	mov	r0, r6
 8016a4c:	f014 ff8d 	bl	802b96a <memset>
 8016a50:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8016a54:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8016a58:	f7ff ffe0 	bl	8016a1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016a5c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8016a60:	f7ff ffdc 	bl	8016a1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016a64:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8016a68:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8016a6c:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8016a70:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8016a74:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8016a78:	490e      	ldr	r1, [pc, #56]	; (8016ab4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8016a7a:	480f      	ldr	r0, [pc, #60]	; (8016ab8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8016a7c:	4f0f      	ldr	r7, [pc, #60]	; (8016abc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8016a7e:	f010 fe27 	bl	80276d0 <CRC_Lock>
 8016a82:	4b0f      	ldr	r3, [pc, #60]	; (8016ac0 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8016a84:	b158      	cbz	r0, 8016a9e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8016a86:	801d      	strh	r5, [r3, #0]
 8016a88:	4a0e      	ldr	r2, [pc, #56]	; (8016ac4 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8016a8a:	2300      	movs	r3, #0
 8016a8c:	6013      	str	r3, [r2, #0]
 8016a8e:	4a0e      	ldr	r2, [pc, #56]	; (8016ac8 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8016a90:	603b      	str	r3, [r7, #0]
 8016a92:	4630      	mov	r0, r6
 8016a94:	6013      	str	r3, [r2, #0]
 8016a96:	f7ff ff01 	bl	801689c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016a9a:	4620      	mov	r0, r4
 8016a9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016a9e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8016aa2:	2002      	movs	r0, #2
 8016aa4:	801a      	strh	r2, [r3, #0]
 8016aa6:	6038      	str	r0, [r7, #0]
 8016aa8:	f001 fb4a 	bl	8018140 <_ZN8touchgfx6Screen4drawEv>
 8016aac:	e7ec      	b.n	8016a88 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016aae:	bf00      	nop
 8016ab0:	0802f980 	.word	0x0802f980
 8016ab4:	b5e8b5cd 	.word	0xb5e8b5cd
 8016ab8:	f407a5c2 	.word	0xf407a5c2
 8016abc:	20013830 	.word	0x20013830
 8016ac0:	20000088 	.word	0x20000088
 8016ac4:	20013840 	.word	0x20013840
 8016ac8:	20013834 	.word	0x20013834

08016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016acc:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8016ad0:	3b01      	subs	r3, #1
 8016ad2:	b29b      	uxth	r3, r3
 8016ad4:	428b      	cmp	r3, r1
 8016ad6:	b510      	push	{r4, lr}
 8016ad8:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8016adc:	d908      	bls.n	8016af0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016ade:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016ae2:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8016ae6:	681a      	ldr	r2, [r3, #0]
 8016ae8:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016aec:	685a      	ldr	r2, [r3, #4]
 8016aee:	6062      	str	r2, [r4, #4]
 8016af0:	bd10      	pop	{r4, pc}
	...

08016af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016af8:	4b8f      	ldr	r3, [pc, #572]	; (8016d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016afa:	b08f      	sub	sp, #60	; 0x3c
 8016afc:	ac0a      	add	r4, sp, #40	; 0x28
 8016afe:	e884 0006 	stmia.w	r4, {r1, r2}
 8016b02:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016b06:	4b8d      	ldr	r3, [pc, #564]	; (8016d3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016b08:	4683      	mov	fp, r0
 8016b0a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016b0e:	4620      	mov	r0, r4
 8016b10:	f7ff fda1 	bl	8016656 <_ZN8touchgfx4Rect10restrictToEss>
 8016b14:	4620      	mov	r0, r4
 8016b16:	f7f9 ff4c 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016b1a:	2800      	cmp	r0, #0
 8016b1c:	d16a      	bne.n	8016bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016b1e:	9403      	str	r4, [sp, #12]
 8016b20:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8016b24:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8016b28:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016b2c:	35a4      	adds	r5, #164	; 0xa4
 8016b2e:	9301      	str	r3, [sp, #4]
 8016b30:	b15c      	cbz	r4, 8016b4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016b32:	4629      	mov	r1, r5
 8016b34:	9803      	ldr	r0, [sp, #12]
 8016b36:	f7ff fddf 	bl	80166f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016b3a:	3c01      	subs	r4, #1
 8016b3c:	b118      	cbz	r0, 8016b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8016b3e:	b2a1      	uxth	r1, r4
 8016b40:	9801      	ldr	r0, [sp, #4]
 8016b42:	f7ff ffc3 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016b46:	3d08      	subs	r5, #8
 8016b48:	e7f2      	b.n	8016b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8016b4a:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8016b4e:	f8cd a010 	str.w	sl, [sp, #16]
 8016b52:	f10a 33ff 	add.w	r3, sl, #4294967295
 8016b56:	9302      	str	r3, [sp, #8]
 8016b58:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8016b5c:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8016b60:	9306      	str	r3, [sp, #24]
 8016b62:	445c      	add	r4, fp
 8016b64:	2500      	movs	r5, #0
 8016b66:	4626      	mov	r6, r4
 8016b68:	f8cd a014 	str.w	sl, [sp, #20]
 8016b6c:	462f      	mov	r7, r5
 8016b6e:	9b05      	ldr	r3, [sp, #20]
 8016b70:	2b00      	cmp	r3, #0
 8016b72:	d073      	beq.n	8016c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8016b74:	9903      	ldr	r1, [sp, #12]
 8016b76:	4630      	mov	r0, r6
 8016b78:	f7ff fd4b 	bl	8016612 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016b7c:	b350      	cbz	r0, 8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016b7e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8016b82:	f9b6 c000 	ldrsh.w	ip, [r6]
 8016b86:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8016b8a:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8016b8e:	45e6      	cmp	lr, ip
 8016b90:	db33      	blt.n	8016bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016b92:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016b96:	88b3      	ldrh	r3, [r6, #4]
 8016b98:	4472      	add	r2, lr
 8016b9a:	4463      	add	r3, ip
 8016b9c:	b212      	sxth	r2, r2
 8016b9e:	b21b      	sxth	r3, r3
 8016ba0:	429a      	cmp	r2, r3
 8016ba2:	dc2a      	bgt.n	8016bfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8016ba4:	88f3      	ldrh	r3, [r6, #6]
 8016ba6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8016baa:	fa1f f289 	uxth.w	r2, r9
 8016bae:	4413      	add	r3, r2
 8016bb0:	b29b      	uxth	r3, r3
 8016bb2:	45c8      	cmp	r8, r9
 8016bb4:	fa1f fc88 	uxth.w	ip, r8
 8016bb8:	fa0f fe83 	sxth.w	lr, r3
 8016bbc:	db0f      	blt.n	8016bde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016bbe:	eba3 030c 	sub.w	r3, r3, ip
 8016bc2:	1ac9      	subs	r1, r1, r3
 8016bc4:	b209      	sxth	r1, r1
 8016bc6:	2900      	cmp	r1, #0
 8016bc8:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016bcc:	dd12      	ble.n	8016bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016bce:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8016bd2:	4605      	mov	r5, r0
 8016bd4:	9b05      	ldr	r3, [sp, #20]
 8016bd6:	3b01      	subs	r3, #1
 8016bd8:	9305      	str	r3, [sp, #20]
 8016bda:	3e08      	subs	r6, #8
 8016bdc:	e7c7      	b.n	8016b6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016bde:	4461      	add	r1, ip
 8016be0:	b209      	sxth	r1, r1
 8016be2:	4571      	cmp	r1, lr
 8016be4:	dc38      	bgt.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016be6:	eba2 020c 	sub.w	r2, r2, ip
 8016bea:	b212      	sxth	r2, r2
 8016bec:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8016bf0:	2a00      	cmp	r2, #0
 8016bf2:	dcee      	bgt.n	8016bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016bf4:	b00f      	add	sp, #60	; 0x3c
 8016bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bfa:	45c8      	cmp	r8, r9
 8016bfc:	db2c      	blt.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016bfe:	88f3      	ldrh	r3, [r6, #6]
 8016c00:	4499      	add	r9, r3
 8016c02:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8016c06:	4498      	add	r8, r3
 8016c08:	fa0f f989 	sxth.w	r9, r9
 8016c0c:	fa0f f888 	sxth.w	r8, r8
 8016c10:	45c1      	cmp	r9, r8
 8016c12:	db21      	blt.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016c14:	88b3      	ldrh	r3, [r6, #4]
 8016c16:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8016c1a:	fa1f f28c 	uxth.w	r2, ip
 8016c1e:	4413      	add	r3, r2
 8016c20:	b29b      	uxth	r3, r3
 8016c22:	45e6      	cmp	lr, ip
 8016c24:	fa1f f88e 	uxth.w	r8, lr
 8016c28:	fa0f f983 	sxth.w	r9, r3
 8016c2c:	db0a      	blt.n	8016c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016c2e:	eba3 0308 	sub.w	r3, r3, r8
 8016c32:	1ac9      	subs	r1, r1, r3
 8016c34:	b209      	sxth	r1, r1
 8016c36:	2900      	cmp	r1, #0
 8016c38:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8016c3c:	ddda      	ble.n	8016bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016c3e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016c42:	e7c6      	b.n	8016bd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016c44:	4441      	add	r1, r8
 8016c46:	b209      	sxth	r1, r1
 8016c48:	4549      	cmp	r1, r9
 8016c4a:	dc05      	bgt.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016c4c:	eba2 0208 	sub.w	r2, r2, r8
 8016c50:	b212      	sxth	r2, r2
 8016c52:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8016c56:	e7cb      	b.n	8016bf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8016c58:	4607      	mov	r7, r0
 8016c5a:	e7bb      	b.n	8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8016c5c:	2d00      	cmp	r5, #0
 8016c5e:	d181      	bne.n	8016b64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8016c60:	2f00      	cmp	r7, #0
 8016c62:	f000 81dd 	beq.w	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016c66:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8016c6a:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8016c6e:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8016c72:	b2b3      	uxth	r3, r6
 8016c74:	9305      	str	r3, [sp, #20]
 8016c76:	9a05      	ldr	r2, [sp, #20]
 8016c78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016c7c:	4413      	add	r3, r2
 8016c7e:	b2ba      	uxth	r2, r7
 8016c80:	4492      	add	sl, r2
 8016c82:	b29b      	uxth	r3, r3
 8016c84:	fa1f fa8a 	uxth.w	sl, sl
 8016c88:	fa0f f883 	sxth.w	r8, r3
 8016c8c:	fa0f f98a 	sxth.w	r9, sl
 8016c90:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8016c94:	9b04      	ldr	r3, [sp, #16]
 8016c96:	2b00      	cmp	r3, #0
 8016c98:	d052      	beq.n	8016d40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8016c9a:	9903      	ldr	r1, [sp, #12]
 8016c9c:	4620      	mov	r0, r4
 8016c9e:	f7ff fcb8 	bl	8016612 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016ca2:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8016ca6:	b1c0      	cbz	r0, 8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016ca8:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016cac:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016cb0:	4576      	cmp	r6, lr
 8016cb2:	dc22      	bgt.n	8016cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016cb4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8016cb8:	44f4      	add	ip, lr
 8016cba:	fa0f fc8c 	sxth.w	ip, ip
 8016cbe:	45e0      	cmp	r8, ip
 8016cc0:	db1b      	blt.n	8016cfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016cc2:	428f      	cmp	r7, r1
 8016cc4:	fa1f fc81 	uxth.w	ip, r1
 8016cc8:	88e1      	ldrh	r1, [r4, #6]
 8016cca:	dc0d      	bgt.n	8016ce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016ccc:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016cd0:	eba1 010c 	sub.w	r1, r1, ip
 8016cd4:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016cd8:	80e1      	strh	r1, [r4, #6]
 8016cda:	4628      	mov	r0, r5
 8016cdc:	9904      	ldr	r1, [sp, #16]
 8016cde:	3901      	subs	r1, #1
 8016ce0:	9104      	str	r1, [sp, #16]
 8016ce2:	3c08      	subs	r4, #8
 8016ce4:	4605      	mov	r5, r0
 8016ce6:	e7d3      	b.n	8016c90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8016ce8:	4461      	add	r1, ip
 8016cea:	b209      	sxth	r1, r1
 8016cec:	4549      	cmp	r1, r9
 8016cee:	dcf5      	bgt.n	8016cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016cf0:	eba2 0c0c 	sub.w	ip, r2, ip
 8016cf4:	f8a4 c006 	strh.w	ip, [r4, #6]
 8016cf8:	e7ef      	b.n	8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016cfa:	428f      	cmp	r7, r1
 8016cfc:	dcee      	bgt.n	8016cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016cfe:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016d02:	4461      	add	r1, ip
 8016d04:	b209      	sxth	r1, r1
 8016d06:	4589      	cmp	r9, r1
 8016d08:	dbe8      	blt.n	8016cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016d0a:	4576      	cmp	r6, lr
 8016d0c:	fa1f fc8e 	uxth.w	ip, lr
 8016d10:	88a1      	ldrh	r1, [r4, #4]
 8016d12:	dc07      	bgt.n	8016d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016d14:	eba3 0c0c 	sub.w	ip, r3, ip
 8016d18:	eba1 010c 	sub.w	r1, r1, ip
 8016d1c:	f8a4 8000 	strh.w	r8, [r4]
 8016d20:	80a1      	strh	r1, [r4, #4]
 8016d22:	e7da      	b.n	8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016d24:	4461      	add	r1, ip
 8016d26:	b209      	sxth	r1, r1
 8016d28:	4588      	cmp	r8, r1
 8016d2a:	dbd7      	blt.n	8016cdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016d2c:	9905      	ldr	r1, [sp, #20]
 8016d2e:	eba1 0c0c 	sub.w	ip, r1, ip
 8016d32:	f8a4 c004 	strh.w	ip, [r4, #4]
 8016d36:	e7d0      	b.n	8016cda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016d38:	200137e2 	.word	0x200137e2
 8016d3c:	200137e0 	.word	0x200137e0
 8016d40:	2d00      	cmp	r5, #0
 8016d42:	f000 816d 	beq.w	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016d46:	9b06      	ldr	r3, [sp, #24]
 8016d48:	445b      	add	r3, fp
 8016d4a:	461c      	mov	r4, r3
 8016d4c:	9b02      	ldr	r3, [sp, #8]
 8016d4e:	3301      	adds	r3, #1
 8016d50:	f000 8166 	beq.w	8017020 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8016d54:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8016d58:	4629      	mov	r1, r5
 8016d5a:	9803      	ldr	r0, [sp, #12]
 8016d5c:	f7ff fccc 	bl	80166f8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8016d60:	b120      	cbz	r0, 8016d6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8016d62:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016d66:	9801      	ldr	r0, [sp, #4]
 8016d68:	f7ff feb0 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d6c:	9903      	ldr	r1, [sp, #12]
 8016d6e:	4628      	mov	r0, r5
 8016d70:	f7ff fc4f 	bl	8016612 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016d74:	2800      	cmp	r0, #0
 8016d76:	f000 809c 	beq.w	8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016d7a:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8016d7e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8016d82:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8016d86:	9309      	str	r3, [sp, #36]	; 0x24
 8016d88:	fa1f f189 	uxth.w	r1, r9
 8016d8c:	eb01 0c03 	add.w	ip, r1, r3
 8016d90:	fa1f fa8c 	uxth.w	sl, ip
 8016d94:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8016d98:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8016d9c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8016da0:	b283      	uxth	r3, r0
 8016da2:	eb03 050c 	add.w	r5, r3, ip
 8016da6:	b2ad      	uxth	r5, r5
 8016da8:	9505      	str	r5, [sp, #20]
 8016daa:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016dae:	9504      	str	r5, [sp, #16]
 8016db0:	4548      	cmp	r0, r9
 8016db2:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8016db6:	f340 8099 	ble.w	8016eec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8016dba:	1a5b      	subs	r3, r3, r1
 8016dbc:	b29b      	uxth	r3, r3
 8016dbe:	4596      	cmp	lr, r2
 8016dc0:	fa0f f08a 	sxth.w	r0, sl
 8016dc4:	b21e      	sxth	r6, r3
 8016dc6:	dd2e      	ble.n	8016e26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8016dc8:	9f02      	ldr	r7, [sp, #8]
 8016dca:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8016dce:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8016dd2:	9f04      	ldr	r7, [sp, #16]
 8016dd4:	1a3f      	subs	r7, r7, r0
 8016dd6:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8016dda:	fa1f fe8e 	uxth.w	lr, lr
 8016dde:	b292      	uxth	r2, r2
 8016de0:	ebae 0102 	sub.w	r1, lr, r2
 8016de4:	44a6      	add	lr, r4
 8016de6:	4402      	add	r2, r0
 8016de8:	b289      	uxth	r1, r1
 8016dea:	fa0f fe8e 	sxth.w	lr, lr
 8016dee:	b212      	sxth	r2, r2
 8016df0:	b20d      	sxth	r5, r1
 8016df2:	ebae 0202 	sub.w	r2, lr, r2
 8016df6:	436f      	muls	r7, r5
 8016df8:	4372      	muls	r2, r6
 8016dfa:	4297      	cmp	r7, r2
 8016dfc:	db09      	blt.n	8016e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016dfe:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8016e02:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8016e06:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8016e0a:	449c      	add	ip, r3
 8016e0c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016e10:	e686      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e12:	4421      	add	r1, r4
 8016e14:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8016e18:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8016e1c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016e20:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016e24:	e67c      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e26:	9f04      	ldr	r7, [sp, #16]
 8016e28:	42b8      	cmp	r0, r7
 8016e2a:	da27      	bge.n	8016e7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016e2c:	9902      	ldr	r1, [sp, #8]
 8016e2e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8016e32:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8016e36:	eb05 010e 	add.w	r1, r5, lr
 8016e3a:	fa1f f881 	uxth.w	r8, r1
 8016e3e:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8016e42:	4411      	add	r1, r2
 8016e44:	eba1 0108 	sub.w	r1, r1, r8
 8016e48:	b289      	uxth	r1, r1
 8016e4a:	fa0f f988 	sxth.w	r9, r8
 8016e4e:	eba2 020e 	sub.w	r2, r2, lr
 8016e52:	fa0f f881 	sxth.w	r8, r1
 8016e56:	1a3f      	subs	r7, r7, r0
 8016e58:	4372      	muls	r2, r6
 8016e5a:	fb08 f707 	mul.w	r7, r8, r7
 8016e5e:	42ba      	cmp	r2, r7
 8016e60:	dc06      	bgt.n	8016e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8016e62:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8016e66:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8016e6a:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8016e6e:	e7ca      	b.n	8016e06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8016e70:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8016e74:	4429      	add	r1, r5
 8016e76:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8016e7a:	e651      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016e7c:	9805      	ldr	r0, [sp, #20]
 8016e7e:	ebaa 0000 	sub.w	r0, sl, r0
 8016e82:	b280      	uxth	r0, r0
 8016e84:	2d06      	cmp	r5, #6
 8016e86:	fa0f fe80 	sxth.w	lr, r0
 8016e8a:	d817      	bhi.n	8016ebc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8016e8c:	9b04      	ldr	r3, [sp, #16]
 8016e8e:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8016e92:	1c6b      	adds	r3, r5, #1
 8016e94:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8016e98:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8016e9c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016ea0:	9b01      	ldr	r3, [sp, #4]
 8016ea2:	9801      	ldr	r0, [sp, #4]
 8016ea4:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016ea8:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016eac:	805a      	strh	r2, [r3, #2]
 8016eae:	809e      	strh	r6, [r3, #4]
 8016eb0:	80d9      	strh	r1, [r3, #6]
 8016eb2:	9b02      	ldr	r3, [sp, #8]
 8016eb4:	3b01      	subs	r3, #1
 8016eb6:	9302      	str	r3, [sp, #8]
 8016eb8:	3c08      	subs	r4, #8
 8016eba:	e747      	b.n	8016d4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016ebc:	9a02      	ldr	r2, [sp, #8]
 8016ebe:	45b6      	cmp	lr, r6
 8016ec0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016ec4:	db0d      	blt.n	8016ee2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016ec6:	449c      	add	ip, r3
 8016ec8:	fa1f fc8c 	uxth.w	ip, ip
 8016ecc:	445a      	add	r2, fp
 8016ece:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8016ed2:	448c      	add	ip, r1
 8016ed4:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8016ed8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8016edc:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8016ee0:	e61e      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ee2:	445a      	add	r2, fp
 8016ee4:	4484      	add	ip, r0
 8016ee6:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8016eea:	e78f      	b.n	8016e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016eec:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8016ef0:	fa1f f18e 	uxth.w	r1, lr
 8016ef4:	eb01 0806 	add.w	r8, r1, r6
 8016ef8:	b293      	uxth	r3, r2
 8016efa:	fa1f f888 	uxth.w	r8, r8
 8016efe:	9306      	str	r3, [sp, #24]
 8016f00:	fa0f f388 	sxth.w	r3, r8
 8016f04:	9307      	str	r3, [sp, #28]
 8016f06:	9f06      	ldr	r7, [sp, #24]
 8016f08:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8016f0c:	443b      	add	r3, r7
 8016f0e:	b29b      	uxth	r3, r3
 8016f10:	4596      	cmp	lr, r2
 8016f12:	9308      	str	r3, [sp, #32]
 8016f14:	da24      	bge.n	8016f60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016f16:	9905      	ldr	r1, [sp, #20]
 8016f18:	eba3 0308 	sub.w	r3, r3, r8
 8016f1c:	ebaa 0401 	sub.w	r4, sl, r1
 8016f20:	b2a4      	uxth	r4, r4
 8016f22:	b29b      	uxth	r3, r3
 8016f24:	b225      	sxth	r5, r4
 8016f26:	b219      	sxth	r1, r3
 8016f28:	eba2 020e 	sub.w	r2, r2, lr
 8016f2c:	eba9 0000 	sub.w	r0, r9, r0
 8016f30:	436a      	muls	r2, r5
 8016f32:	4348      	muls	r0, r1
 8016f34:	4282      	cmp	r2, r0
 8016f36:	9a02      	ldr	r2, [sp, #8]
 8016f38:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016f3c:	445a      	add	r2, fp
 8016f3e:	dc06      	bgt.n	8016f4e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016f40:	9b07      	ldr	r3, [sp, #28]
 8016f42:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8016f46:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8016f4a:	44a4      	add	ip, r4
 8016f4c:	e75e      	b.n	8016e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016f4e:	9904      	ldr	r1, [sp, #16]
 8016f50:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8016f54:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8016f58:	4433      	add	r3, r6
 8016f5a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8016f5e:	e5df      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016f60:	9f06      	ldr	r7, [sp, #24]
 8016f62:	9b04      	ldr	r3, [sp, #16]
 8016f64:	1bc9      	subs	r1, r1, r7
 8016f66:	fa0f f78a 	sxth.w	r7, sl
 8016f6a:	b289      	uxth	r1, r1
 8016f6c:	429f      	cmp	r7, r3
 8016f6e:	fa0f fe81 	sxth.w	lr, r1
 8016f72:	dd23      	ble.n	8016fbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016f74:	9a05      	ldr	r2, [sp, #20]
 8016f76:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016f7a:	9d07      	ldr	r5, [sp, #28]
 8016f7c:	ebaa 0202 	sub.w	r2, sl, r2
 8016f80:	b292      	uxth	r2, r2
 8016f82:	eba5 0a03 	sub.w	sl, r5, r3
 8016f86:	b214      	sxth	r4, r2
 8016f88:	eba9 0000 	sub.w	r0, r9, r0
 8016f8c:	9b02      	ldr	r3, [sp, #8]
 8016f8e:	fb0e f000 	mul.w	r0, lr, r0
 8016f92:	fb04 fa0a 	mul.w	sl, r4, sl
 8016f96:	00db      	lsls	r3, r3, #3
 8016f98:	4550      	cmp	r0, sl
 8016f9a:	445b      	add	r3, fp
 8016f9c:	db03      	blt.n	8016fa6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016f9e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8016fa2:	4494      	add	ip, r2
 8016fa4:	e732      	b.n	8016e0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016fa6:	9a04      	ldr	r2, [sp, #16]
 8016fa8:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8016fac:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8016fb0:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8016fb4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8016fb8:	4431      	add	r1, r6
 8016fba:	e75c      	b.n	8016e76 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016fbc:	9b08      	ldr	r3, [sp, #32]
 8016fbe:	eba3 0308 	sub.w	r3, r3, r8
 8016fc2:	b29b      	uxth	r3, r3
 8016fc4:	2d06      	cmp	r5, #6
 8016fc6:	b218      	sxth	r0, r3
 8016fc8:	d813      	bhi.n	8016ff2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016fca:	9b07      	ldr	r3, [sp, #28]
 8016fcc:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8016fd0:	1c6b      	adds	r3, r5, #1
 8016fd2:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8016fd6:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8016fda:	9b01      	ldr	r3, [sp, #4]
 8016fdc:	9901      	ldr	r1, [sp, #4]
 8016fde:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016fe2:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016fe6:	805a      	strh	r2, [r3, #2]
 8016fe8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016fea:	809a      	strh	r2, [r3, #4]
 8016fec:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016ff0:	e75f      	b.n	8016eb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016ff2:	9c02      	ldr	r4, [sp, #8]
 8016ff4:	4570      	cmp	r0, lr
 8016ff6:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016ffa:	db0d      	blt.n	8017018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016ffc:	4431      	add	r1, r6
 8016ffe:	9b06      	ldr	r3, [sp, #24]
 8017000:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017004:	b289      	uxth	r1, r1
 8017006:	445c      	add	r4, fp
 8017008:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801700c:	4419      	add	r1, r3
 801700e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8017012:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8017016:	e583      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8017018:	445c      	add	r4, fp
 801701a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801701e:	e79b      	b.n	8016f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8017020:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8017024:	1e65      	subs	r5, r4, #1
 8017026:	b2ad      	uxth	r5, r5
 8017028:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801702c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8017030:	42b5      	cmp	r5, r6
 8017032:	d044      	beq.n	80170be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8017034:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017038:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 801703c:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017040:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 8017044:	4282      	cmp	r2, r0
 8017046:	d11f      	bne.n	8017088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017048:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 801704c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017050:	459c      	cmp	ip, r3
 8017052:	d119      	bne.n	8017088 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8017054:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8017058:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801705c:	19d8      	adds	r0, r3, r7
 801705e:	b200      	sxth	r0, r0
 8017060:	4288      	cmp	r0, r1
 8017062:	d109      	bne.n	8017078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8017064:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8017068:	4413      	add	r3, r2
 801706a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801706e:	4629      	mov	r1, r5
 8017070:	9801      	ldr	r0, [sp, #4]
 8017072:	f7ff fd2b 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017076:	e003      	b.n	8017080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017078:	4411      	add	r1, r2
 801707a:	b209      	sxth	r1, r1
 801707c:	42b9      	cmp	r1, r7
 801707e:	d0f3      	beq.n	8017068 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8017080:	3d01      	subs	r5, #1
 8017082:	b2ad      	uxth	r5, r5
 8017084:	3c08      	subs	r4, #8
 8017086:	e7d3      	b.n	8017030 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8017088:	42b9      	cmp	r1, r7
 801708a:	d1f9      	bne.n	8017080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801708c:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8017090:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017094:	4299      	cmp	r1, r3
 8017096:	d1f3      	bne.n	8017080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8017098:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801709c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80170a0:	181f      	adds	r7, r3, r0
 80170a2:	b23f      	sxth	r7, r7
 80170a4:	42ba      	cmp	r2, r7
 80170a6:	d105      	bne.n	80170b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80170a8:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80170ac:	440b      	add	r3, r1
 80170ae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80170b2:	e7dc      	b.n	801706e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80170b4:	440a      	add	r2, r1
 80170b6:	b212      	sxth	r2, r2
 80170b8:	4290      	cmp	r0, r2
 80170ba:	d1e1      	bne.n	8017080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80170bc:	e7f6      	b.n	80170ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80170be:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80170c2:	2e07      	cmp	r6, #7
 80170c4:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80170c8:	d812      	bhi.n	80170f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80170ca:	1c75      	adds	r5, r6, #1
 80170cc:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80170d0:	9d01      	ldr	r5, [sp, #4]
 80170d2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80170d6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80170da:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80170de:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80170e2:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80170e6:	442c      	add	r4, r5
 80170e8:	8061      	strh	r1, [r4, #2]
 80170ea:	80a2      	strh	r2, [r4, #4]
 80170ec:	80e3      	strh	r3, [r4, #6]
 80170ee:	e581      	b.n	8016bf4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80170f0:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80170f4:	3e01      	subs	r6, #1
 80170f6:	445c      	add	r4, fp
 80170f8:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80170fc:	f04f 37ff 	mov.w	r7, #4294967295
 8017100:	2500      	movs	r5, #0
 8017102:	9305      	str	r3, [sp, #20]
 8017104:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8017108:	9302      	str	r3, [sp, #8]
 801710a:	1e72      	subs	r2, r6, #1
 801710c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8017110:	9304      	str	r3, [sp, #16]
 8017112:	4691      	mov	r9, r2
 8017114:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8017118:	f1b9 3fff 	cmp.w	r9, #4294967295
 801711c:	bf14      	ite	ne
 801711e:	9905      	ldrne	r1, [sp, #20]
 8017120:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8017124:	6818      	ldr	r0, [r3, #0]
 8017126:	9207      	str	r2, [sp, #28]
 8017128:	bf18      	it	ne
 801712a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801712e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8017132:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8017136:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801713a:	9306      	str	r3, [sp, #24]
 801713c:	fb18 f801 	smulbb	r8, r8, r1
 8017140:	6859      	ldr	r1, [r3, #4]
 8017142:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8017146:	4671      	mov	r1, lr
 8017148:	a80c      	add	r0, sp, #48	; 0x30
 801714a:	f7ff fafb 	bl	8016744 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801714e:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8017152:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8017156:	9b04      	ldr	r3, [sp, #16]
 8017158:	9a02      	ldr	r2, [sp, #8]
 801715a:	fb10 f001 	smulbb	r0, r0, r1
 801715e:	fb02 8803 	mla	r8, r2, r3, r8
 8017162:	eba0 0108 	sub.w	r1, r0, r8
 8017166:	f04f 0c08 	mov.w	ip, #8
 801716a:	fb90 f0fc 	sdiv	r0, r0, ip
 801716e:	4288      	cmp	r0, r1
 8017170:	dc20      	bgt.n	80171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8017172:	4551      	cmp	r1, sl
 8017174:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8017178:	da03      	bge.n	8017182 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 801717a:	b1d9      	cbz	r1, 80171b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801717c:	468a      	mov	sl, r1
 801717e:	464f      	mov	r7, r9
 8017180:	4635      	mov	r5, r6
 8017182:	f109 39ff 	add.w	r9, r9, #4294967295
 8017186:	f119 0f02 	cmn.w	r9, #2
 801718a:	d1c5      	bne.n	8017118 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 801718c:	4616      	mov	r6, r2
 801718e:	3201      	adds	r2, #1
 8017190:	f1a4 0408 	sub.w	r4, r4, #8
 8017194:	d1b6      	bne.n	8017104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8017196:	9b01      	ldr	r3, [sp, #4]
 8017198:	b2ac      	uxth	r4, r5
 801719a:	00ed      	lsls	r5, r5, #3
 801719c:	1958      	adds	r0, r3, r5
 801719e:	1c7b      	adds	r3, r7, #1
 80171a0:	d10b      	bne.n	80171ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80171a2:	4601      	mov	r1, r0
 80171a4:	9803      	ldr	r0, [sp, #12]
 80171a6:	f7ff facd 	bl	8016744 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80171aa:	4621      	mov	r1, r4
 80171ac:	9801      	ldr	r0, [sp, #4]
 80171ae:	f7ff fc8d 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80171b2:	e4b5      	b.n	8016b20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80171b4:	464f      	mov	r7, r9
 80171b6:	4635      	mov	r5, r6
 80171b8:	e7ed      	b.n	8017196 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80171ba:	9b01      	ldr	r3, [sp, #4]
 80171bc:	00ff      	lsls	r7, r7, #3
 80171be:	19d9      	adds	r1, r3, r7
 80171c0:	f7ff fac0 	bl	8016744 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80171c4:	9b03      	ldr	r3, [sp, #12]
 80171c6:	cb03      	ldmia	r3!, {r0, r1}
 80171c8:	445f      	add	r7, fp
 80171ca:	445d      	add	r5, fp
 80171cc:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80171d0:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80171d4:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80171d8:	9b03      	ldr	r3, [sp, #12]
 80171da:	6869      	ldr	r1, [r5, #4]
 80171dc:	c303      	stmia	r3!, {r0, r1}
 80171de:	e7e4      	b.n	80171aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080171e0 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80171e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80171e4:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80171e8:	b09b      	sub	sp, #108	; 0x6c
 80171ea:	4604      	mov	r4, r0
 80171ec:	4630      	mov	r0, r6
 80171ee:	f7f9 fbe0 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80171f2:	4605      	mov	r5, r0
 80171f4:	b948      	cbnz	r0, 801720a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80171f6:	6823      	ldr	r3, [r4, #0]
 80171f8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80171fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80171fe:	4620      	mov	r0, r4
 8017200:	4798      	blx	r3
 8017202:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8017206:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801720a:	4bc6      	ldr	r3, [pc, #792]	; (8017524 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801720c:	681b      	ldr	r3, [r3, #0]
 801720e:	2b00      	cmp	r3, #0
 8017210:	d03f      	beq.n	8017292 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017212:	4dc5      	ldr	r5, [pc, #788]	; (8017528 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8017214:	4628      	mov	r0, r5
 8017216:	f7f9 fbcc 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801721a:	4606      	mov	r6, r0
 801721c:	2800      	cmp	r0, #0
 801721e:	d138      	bne.n	8017292 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8017220:	4628      	mov	r0, r5
 8017222:	f7ff f907 	bl	8016434 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017226:	6823      	ldr	r3, [r4, #0]
 8017228:	6829      	ldr	r1, [r5, #0]
 801722a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801722c:	686a      	ldr	r2, [r5, #4]
 801722e:	4620      	mov	r0, r4
 8017230:	4798      	blx	r3
 8017232:	802e      	strh	r6, [r5, #0]
 8017234:	806e      	strh	r6, [r5, #2]
 8017236:	80ae      	strh	r6, [r5, #4]
 8017238:	80ee      	strh	r6, [r5, #6]
 801723a:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 801723e:	4dbb      	ldr	r5, [pc, #748]	; (801752c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8017240:	4640      	mov	r0, r8
 8017242:	f7ff fbeb 	bl	8016a1c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8017246:	882e      	ldrh	r6, [r5, #0]
 8017248:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801724c:	4633      	mov	r3, r6
 801724e:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8017252:	42bb      	cmp	r3, r7
 8017254:	d224      	bcs.n	80172a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8017256:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801725a:	2907      	cmp	r1, #7
 801725c:	d816      	bhi.n	801728c <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801725e:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8017262:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8017266:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 801726a:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801726e:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8017272:	1c4a      	adds	r2, r1, #1
 8017274:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8017278:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 801727c:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8017280:	f8a2 a002 	strh.w	sl, [r2, #2]
 8017284:	f8a2 e004 	strh.w	lr, [r2, #4]
 8017288:	f8a2 c006 	strh.w	ip, [r2, #6]
 801728c:	3301      	adds	r3, #1
 801728e:	b29b      	uxth	r3, r3
 8017290:	e7df      	b.n	8017252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8017292:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017296:	2b00      	cmp	r3, #0
 8017298:	d1cf      	bne.n	801723a <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801729a:	b01b      	add	sp, #108	; 0x6c
 801729c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80172a0:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80172a4:	42b3      	cmp	r3, r6
 80172a6:	d90c      	bls.n	80172c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80172a8:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80172ac:	6822      	ldr	r2, [r4, #0]
 80172ae:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80172b2:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80172b4:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80172b8:	4620      	mov	r0, r4
 80172ba:	3601      	adds	r6, #1
 80172bc:	47b8      	blx	r7
 80172be:	b2b6      	uxth	r6, r6
 80172c0:	e7ee      	b.n	80172a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80172c2:	4a9b      	ldr	r2, [pc, #620]	; (8017530 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80172c4:	6813      	ldr	r3, [r2, #0]
 80172c6:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80172ca:	2b01      	cmp	r3, #1
 80172cc:	4691      	mov	r9, r2
 80172ce:	f040 80e2 	bne.w	8017496 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80172d2:	8829      	ldrh	r1, [r5, #0]
 80172d4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80172d8:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80172dc:	33ae      	adds	r3, #174	; 0xae
 80172de:	2600      	movs	r6, #0
 80172e0:	428f      	cmp	r7, r1
 80172e2:	f103 0308 	add.w	r3, r3, #8
 80172e6:	dd0a      	ble.n	80172fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80172e8:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80172ec:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80172f0:	4402      	add	r2, r0
 80172f2:	b212      	sxth	r2, r2
 80172f4:	4296      	cmp	r6, r2
 80172f6:	bfb8      	it	lt
 80172f8:	4616      	movlt	r6, r2
 80172fa:	3101      	adds	r1, #1
 80172fc:	e7f0      	b.n	80172e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80172fe:	4b8d      	ldr	r3, [pc, #564]	; (8017534 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8017300:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8017530 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8017304:	881b      	ldrh	r3, [r3, #0]
 8017306:	2b0f      	cmp	r3, #15
 8017308:	bf88      	it	hi
 801730a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801730e:	f04f 0300 	mov.w	r3, #0
 8017312:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8017316:	bf98      	it	ls
 8017318:	f04f 0b01 	movls.w	fp, #1
 801731c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8017320:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8017324:	4b82      	ldr	r3, [pc, #520]	; (8017530 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8017326:	4438      	add	r0, r7
 8017328:	b207      	sxth	r7, r0
 801732a:	6818      	ldr	r0, [r3, #0]
 801732c:	42b7      	cmp	r7, r6
 801732e:	6803      	ldr	r3, [r0, #0]
 8017330:	f280 8083 	bge.w	801743a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017334:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8017338:	4798      	blx	r3
 801733a:	eb07 030b 	add.w	r3, r7, fp
 801733e:	4298      	cmp	r0, r3
 8017340:	da07      	bge.n	8017352 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017342:	42b0      	cmp	r0, r6
 8017344:	da05      	bge.n	8017352 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8017346:	4287      	cmp	r7, r0
 8017348:	dd6c      	ble.n	8017424 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801734a:	2f00      	cmp	r7, #0
 801734c:	dd6a      	ble.n	8017424 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801734e:	4630      	mov	r0, r6
 8017350:	e004      	b.n	801735c <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8017352:	4287      	cmp	r7, r0
 8017354:	dcfb      	bgt.n	801734e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8017356:	42b0      	cmp	r0, r6
 8017358:	bfa8      	it	ge
 801735a:	4630      	movge	r0, r6
 801735c:	4b76      	ldr	r3, [pc, #472]	; (8017538 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801735e:	f8ad 7016 	strh.w	r7, [sp, #22]
 8017362:	1bc0      	subs	r0, r0, r7
 8017364:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017368:	882f      	ldrh	r7, [r5, #0]
 801736a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801736e:	2200      	movs	r2, #0
 8017370:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017374:	f8ad 001a 	strh.w	r0, [sp, #26]
 8017378:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801737c:	42bb      	cmp	r3, r7
 801737e:	d9cd      	bls.n	801731c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017380:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8017384:	ab07      	add	r3, sp, #28
 8017386:	f852 0fac 	ldr.w	r0, [r2, #172]!
 801738a:	6851      	ldr	r1, [r2, #4]
 801738c:	c303      	stmia	r3!, {r0, r1}
 801738e:	a905      	add	r1, sp, #20
 8017390:	a807      	add	r0, sp, #28
 8017392:	f7ff f93e 	bl	8016612 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017396:	2800      	cmp	r0, #0
 8017398:	d04c      	beq.n	8017434 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801739a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801739e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80173a2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80173a6:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80173aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80173ae:	9302      	str	r3, [sp, #8]
 80173b0:	4686      	mov	lr, r0
 80173b2:	4290      	cmp	r0, r2
 80173b4:	4450      	add	r0, sl
 80173b6:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80173ba:	bfb8      	it	lt
 80173bc:	4696      	movlt	lr, r2
 80173be:	4452      	add	r2, sl
 80173c0:	4299      	cmp	r1, r3
 80173c2:	b280      	uxth	r0, r0
 80173c4:	b292      	uxth	r2, r2
 80173c6:	468c      	mov	ip, r1
 80173c8:	fa0f fa82 	sxth.w	sl, r2
 80173cc:	bfb8      	it	lt
 80173ce:	469c      	movlt	ip, r3
 80173d0:	b203      	sxth	r3, r0
 80173d2:	4553      	cmp	r3, sl
 80173d4:	bfb8      	it	lt
 80173d6:	4602      	movlt	r2, r0
 80173d8:	eba2 020e 	sub.w	r2, r2, lr
 80173dc:	f8ad 2020 	strh.w	r2, [sp, #32]
 80173e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80173e4:	9b02      	ldr	r3, [sp, #8]
 80173e6:	f8ad e01c 	strh.w	lr, [sp, #28]
 80173ea:	4411      	add	r1, r2
 80173ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80173f0:	f8ad c01e 	strh.w	ip, [sp, #30]
 80173f4:	4413      	add	r3, r2
 80173f6:	b289      	uxth	r1, r1
 80173f8:	b29b      	uxth	r3, r3
 80173fa:	b208      	sxth	r0, r1
 80173fc:	b21a      	sxth	r2, r3
 80173fe:	4290      	cmp	r0, r2
 8017400:	bfb8      	it	lt
 8017402:	460b      	movlt	r3, r1
 8017404:	eba3 030c 	sub.w	r3, r3, ip
 8017408:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801740c:	a807      	add	r0, sp, #28
 801740e:	f7f9 fad0 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017412:	b920      	cbnz	r0, 801741e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8017414:	6823      	ldr	r3, [r4, #0]
 8017416:	a907      	add	r1, sp, #28
 8017418:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801741a:	4620      	mov	r0, r4
 801741c:	4798      	blx	r3
 801741e:	3701      	adds	r7, #1
 8017420:	b2bf      	uxth	r7, r7
 8017422:	e7a9      	b.n	8017378 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8017424:	f8d9 0000 	ldr.w	r0, [r9]
 8017428:	6803      	ldr	r3, [r0, #0]
 801742a:	2101      	movs	r1, #1
 801742c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8017430:	4798      	blx	r3
 8017432:	e773      	b.n	801731c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8017434:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8017438:	e7e8      	b.n	801740c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801743a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801743c:	4798      	blx	r3
 801743e:	4b3f      	ldr	r3, [pc, #252]	; (801753c <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8017440:	781b      	ldrb	r3, [r3, #0]
 8017442:	2b00      	cmp	r3, #0
 8017444:	f43f af29 	beq.w	801729a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8017448:	2300      	movs	r3, #0
 801744a:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801744e:	882b      	ldrh	r3, [r5, #0]
 8017450:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8017454:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8017458:	42ab      	cmp	r3, r5
 801745a:	f4bf af1e 	bcs.w	801729a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 801745e:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8017462:	2907      	cmp	r1, #7
 8017464:	d814      	bhi.n	8017490 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8017466:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 801746a:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 801746e:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8017472:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8017476:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 801747a:	1c4a      	adds	r2, r1, #1
 801747c:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8017480:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8017484:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8017488:	f8a2 c002 	strh.w	ip, [r2, #2]
 801748c:	8097      	strh	r7, [r2, #4]
 801748e:	80d6      	strh	r6, [r2, #6]
 8017490:	3301      	adds	r3, #1
 8017492:	b29b      	uxth	r3, r3
 8017494:	e7e0      	b.n	8017458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8017496:	2b02      	cmp	r3, #2
 8017498:	f040 8133 	bne.w	8017702 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801749c:	4b28      	ldr	r3, [pc, #160]	; (8017540 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801749e:	781b      	ldrb	r3, [r3, #0]
 80174a0:	2b01      	cmp	r3, #1
 80174a2:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80174a6:	f000 8098 	beq.w	80175da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80174aa:	882a      	ldrh	r2, [r5, #0]
 80174ac:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80174b0:	3201      	adds	r2, #1
 80174b2:	b292      	uxth	r2, r2
 80174b4:	2900      	cmp	r1, #0
 80174b6:	d0c2      	beq.n	801743e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80174b8:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80174bc:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80174c0:	441e      	add	r6, r3
 80174c2:	b236      	sxth	r6, r6
 80174c4:	4694      	mov	ip, r2
 80174c6:	f04f 0900 	mov.w	r9, #0
 80174ca:	fa1f f38c 	uxth.w	r3, ip
 80174ce:	4299      	cmp	r1, r3
 80174d0:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80174d4:	f240 80bf 	bls.w	8017656 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 80174d8:	4427      	add	r7, r4
 80174da:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80174de:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80174e2:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 80174e6:	4283      	cmp	r3, r0
 80174e8:	f340 80a1 	ble.w	801762e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 80174ec:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 80174f0:	4406      	add	r6, r0
 80174f2:	b236      	sxth	r6, r6
 80174f4:	429e      	cmp	r6, r3
 80174f6:	bfa8      	it	ge
 80174f8:	461e      	movge	r6, r3
 80174fa:	46e1      	mov	r9, ip
 80174fc:	f10c 0c01 	add.w	ip, ip, #1
 8017500:	e7e3      	b.n	80174ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8017502:	d10a      	bne.n	801751a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8017504:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8017508:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801750c:	4562      	cmp	r2, ip
 801750e:	bfb8      	it	lt
 8017510:	4662      	movlt	r2, ip
 8017512:	4288      	cmp	r0, r1
 8017514:	bfb8      	it	lt
 8017516:	461f      	movlt	r7, r3
 8017518:	e087      	b.n	801762a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801751a:	428a      	cmp	r2, r1
 801751c:	bfb8      	it	lt
 801751e:	460a      	movlt	r2, r1
 8017520:	e083      	b.n	801762a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8017522:	bf00      	nop
 8017524:	2001382c 	.word	0x2001382c
 8017528:	20013838 	.word	0x20013838
 801752c:	20000088 	.word	0x20000088
 8017530:	200137ec 	.word	0x200137ec
 8017534:	200137e2 	.word	0x200137e2
 8017538:	200137e0 	.word	0x200137e0
 801753c:	200137ea 	.word	0x200137ea
 8017540:	200137e4 	.word	0x200137e4
 8017544:	19a1      	adds	r1, r4, r6
 8017546:	ab07      	add	r3, sp, #28
 8017548:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801754c:	6849      	ldr	r1, [r1, #4]
 801754e:	c303      	stmia	r3!, {r0, r1}
 8017550:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8017554:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017558:	2b13      	cmp	r3, #19
 801755a:	bfd8      	it	le
 801755c:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8017560:	f8ad 201c 	strh.w	r2, [sp, #28]
 8017564:	440b      	add	r3, r1
 8017566:	1a9b      	subs	r3, r3, r2
 8017568:	a807      	add	r0, sp, #28
 801756a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801756e:	f7fe ff7b 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017572:	a807      	add	r0, sp, #28
 8017574:	f7f9 fa1d 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017578:	bb78      	cbnz	r0, 80175da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801757a:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801757e:	f8d9 0000 	ldr.w	r0, [r9]
 8017582:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8017586:	f8d0 e000 	ldr.w	lr, [r0]
 801758a:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801758e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8017592:	f1bc 0f14 	cmp.w	ip, #20
 8017596:	bfa8      	it	ge
 8017598:	f04f 0c14 	movge.w	ip, #20
 801759c:	fa1f fc8c 	uxth.w	ip, ip
 80175a0:	f8cd c000 	str.w	ip, [sp]
 80175a4:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80175a8:	47d8      	blx	fp
 80175aa:	4683      	mov	fp, r0
 80175ac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80175b0:	a807      	add	r0, sp, #28
 80175b2:	f7fe ff3f 	bl	8016434 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80175b6:	6823      	ldr	r3, [r4, #0]
 80175b8:	4426      	add	r6, r4
 80175ba:	4620      	mov	r0, r4
 80175bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80175be:	a907      	add	r1, sp, #28
 80175c0:	4798      	blx	r3
 80175c2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80175c6:	eba0 000b 	sub.w	r0, r0, fp
 80175ca:	b200      	sxth	r0, r0
 80175cc:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80175d0:	b918      	cbnz	r0, 80175da <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80175d2:	b2b9      	uxth	r1, r7
 80175d4:	4650      	mov	r0, sl
 80175d6:	f7ff fa79 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80175da:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80175de:	f1bb 0f00 	cmp.w	fp, #0
 80175e2:	f43f af2c 	beq.w	801743e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80175e6:	882b      	ldrh	r3, [r5, #0]
 80175e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80175ec:	3301      	adds	r3, #1
 80175ee:	b29b      	uxth	r3, r3
 80175f0:	2700      	movs	r7, #0
 80175f2:	b299      	uxth	r1, r3
 80175f4:	458b      	cmp	fp, r1
 80175f6:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 80175fa:	d9a3      	bls.n	8017544 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 80175fc:	4426      	add	r6, r4
 80175fe:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017602:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8017606:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 801760a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 801760e:	4408      	add	r0, r1
 8017610:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8017614:	4461      	add	r1, ip
 8017616:	b200      	sxth	r0, r0
 8017618:	b209      	sxth	r1, r1
 801761a:	4288      	cmp	r0, r1
 801761c:	f6bf af71 	bge.w	8017502 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8017620:	4584      	cmp	ip, r0
 8017622:	4662      	mov	r2, ip
 8017624:	461f      	mov	r7, r3
 8017626:	bfb8      	it	lt
 8017628:	4602      	movlt	r2, r0
 801762a:	3301      	adds	r3, #1
 801762c:	e7e1      	b.n	80175f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 801762e:	d10e      	bne.n	801764e <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8017630:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8017634:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8017638:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 801763c:	4473      	add	r3, lr
 801763e:	b21b      	sxth	r3, r3
 8017640:	429e      	cmp	r6, r3
 8017642:	bfa8      	it	ge
 8017644:	461e      	movge	r6, r3
 8017646:	4287      	cmp	r7, r0
 8017648:	bfb8      	it	lt
 801764a:	46e1      	movlt	r9, ip
 801764c:	e756      	b.n	80174fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 801764e:	4286      	cmp	r6, r0
 8017650:	bfa8      	it	ge
 8017652:	4606      	movge	r6, r0
 8017654:	e752      	b.n	80174fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8017656:	eb0a 0007 	add.w	r0, sl, r7
 801765a:	4427      	add	r7, r4
 801765c:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8017660:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8017664:	f1bb 0f13 	cmp.w	fp, #19
 8017668:	bfde      	ittt	le
 801766a:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 801766e:	445e      	addle	r6, fp
 8017670:	b236      	sxthle	r6, r6
 8017672:	f7f9 f99e 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017676:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 801767a:	2800      	cmp	r0, #0
 801767c:	f47f af1a 	bne.w	80174b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8017680:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8017684:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8017688:	482a      	ldr	r0, [pc, #168]	; (8017734 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 801768a:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 801768e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8017692:	6800      	ldr	r0, [r0, #0]
 8017694:	f8ad 101c 	strh.w	r1, [sp, #28]
 8017698:	1ab6      	subs	r6, r6, r2
 801769a:	2e14      	cmp	r6, #20
 801769c:	f8ad 201e 	strh.w	r2, [sp, #30]
 80176a0:	f8ad 3020 	strh.w	r3, [sp, #32]
 80176a4:	bfa8      	it	ge
 80176a6:	2614      	movge	r6, #20
 80176a8:	f8d0 c000 	ldr.w	ip, [r0]
 80176ac:	b2b6      	uxth	r6, r6
 80176ae:	fa1f fb8b 	uxth.w	fp, fp
 80176b2:	455e      	cmp	r6, fp
 80176b4:	bf94      	ite	ls
 80176b6:	9600      	strls	r6, [sp, #0]
 80176b8:	f8cd b000 	strhi.w	fp, [sp]
 80176bc:	b292      	uxth	r2, r2
 80176be:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 80176c2:	b29b      	uxth	r3, r3
 80176c4:	b289      	uxth	r1, r1
 80176c6:	47b0      	blx	r6
 80176c8:	6823      	ldr	r3, [r4, #0]
 80176ca:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80176ce:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80176d0:	a907      	add	r1, sp, #28
 80176d2:	4620      	mov	r0, r4
 80176d4:	4798      	blx	r3
 80176d6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80176da:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80176de:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80176e2:	1a5b      	subs	r3, r3, r1
 80176e4:	440a      	add	r2, r1
 80176e6:	b21b      	sxth	r3, r3
 80176e8:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80176ec:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80176f0:	2b00      	cmp	r3, #0
 80176f2:	f47f aeda 	bne.w	80174aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 80176f6:	fa1f f189 	uxth.w	r1, r9
 80176fa:	4650      	mov	r0, sl
 80176fc:	f7ff f9e6 	bl	8016acc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017700:	e6d3      	b.n	80174aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8017702:	882e      	ldrh	r6, [r5, #0]
 8017704:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8017708:	42b3      	cmp	r3, r6
 801770a:	f67f ae98 	bls.w	801743e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801770e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017712:	ab07      	add	r3, sp, #28
 8017714:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017718:	6851      	ldr	r1, [r2, #4]
 801771a:	c303      	stmia	r3!, {r0, r1}
 801771c:	a807      	add	r0, sp, #28
 801771e:	f7f9 f948 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017722:	b920      	cbnz	r0, 801772e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8017724:	6823      	ldr	r3, [r4, #0]
 8017726:	a907      	add	r1, sp, #28
 8017728:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801772a:	4620      	mov	r0, r4
 801772c:	4798      	blx	r3
 801772e:	3601      	adds	r6, #1
 8017730:	b2b6      	uxth	r6, r6
 8017732:	e7e7      	b.n	8017704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8017734:	200137ec 	.word	0x200137ec

08017738 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017738:	4b03      	ldr	r3, [pc, #12]	; (8017748 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801773a:	2200      	movs	r2, #0
 801773c:	801a      	strh	r2, [r3, #0]
 801773e:	805a      	strh	r2, [r3, #2]
 8017740:	809a      	strh	r2, [r3, #4]
 8017742:	80da      	strh	r2, [r3, #6]
 8017744:	4770      	bx	lr
 8017746:	bf00      	nop
 8017748:	20013838 	.word	0x20013838

0801774c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801774c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017750:	4606      	mov	r6, r0
 8017752:	b09d      	sub	sp, #116	; 0x74
 8017754:	a803      	add	r0, sp, #12
 8017756:	4614      	mov	r4, r2
 8017758:	468a      	mov	sl, r1
 801775a:	461d      	mov	r5, r3
 801775c:	f000 ff08 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8017760:	6833      	ldr	r3, [r6, #0]
 8017762:	4630      	mov	r0, r6
 8017764:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017766:	4798      	blx	r3
 8017768:	6833      	ldr	r3, [r6, #0]
 801776a:	4607      	mov	r7, r0
 801776c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801776e:	4630      	mov	r0, r6
 8017770:	4798      	blx	r3
 8017772:	462a      	mov	r2, r5
 8017774:	9000      	str	r0, [sp, #0]
 8017776:	4621      	mov	r1, r4
 8017778:	463b      	mov	r3, r7
 801777a:	a803      	add	r0, sp, #12
 801777c:	f000 ff53 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017780:	2500      	movs	r5, #0
 8017782:	462c      	mov	r4, r5
 8017784:	46a9      	mov	r9, r5
 8017786:	46a8      	mov	r8, r5
 8017788:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801778c:	2300      	movs	r3, #0
 801778e:	9302      	str	r3, [sp, #8]
 8017790:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8017794:	429c      	cmp	r4, r3
 8017796:	d002      	beq.n	801779e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8017798:	455c      	cmp	r4, fp
 801779a:	bf18      	it	ne
 801779c:	4625      	movne	r5, r4
 801779e:	ab02      	add	r3, sp, #8
 80177a0:	4632      	mov	r2, r6
 80177a2:	4651      	mov	r1, sl
 80177a4:	a803      	add	r0, sp, #12
 80177a6:	f001 fa41 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80177aa:	4604      	mov	r4, r0
 80177ac:	b108      	cbz	r0, 80177b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80177ae:	280a      	cmp	r0, #10
 80177b0:	d10a      	bne.n	80177c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 80177b2:	45c1      	cmp	r9, r8
 80177b4:	bf38      	it	cc
 80177b6:	46c1      	movcc	r9, r8
 80177b8:	f04f 0800 	mov.w	r8, #0
 80177bc:	2c00      	cmp	r4, #0
 80177be:	d1e5      	bne.n	801778c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80177c0:	4648      	mov	r0, r9
 80177c2:	b01d      	add	sp, #116	; 0x74
 80177c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80177c8:	9a02      	ldr	r2, [sp, #8]
 80177ca:	2a00      	cmp	r2, #0
 80177cc:	d0de      	beq.n	801778c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80177ce:	7b57      	ldrb	r7, [r2, #13]
 80177d0:	6833      	ldr	r3, [r6, #0]
 80177d2:	8894      	ldrh	r4, [r2, #4]
 80177d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80177d6:	007f      	lsls	r7, r7, #1
 80177d8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80177dc:	7a97      	ldrb	r7, [r2, #10]
 80177de:	4629      	mov	r1, r5
 80177e0:	4307      	orrs	r7, r0
 80177e2:	4630      	mov	r0, r6
 80177e4:	4798      	blx	r3
 80177e6:	4438      	add	r0, r7
 80177e8:	4480      	add	r8, r0
 80177ea:	fa1f f888 	uxth.w	r8, r8
 80177ee:	e7e5      	b.n	80177bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080177f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80177f0:	b508      	push	{r3, lr}
 80177f2:	6803      	ldr	r3, [r0, #0]
 80177f4:	68db      	ldr	r3, [r3, #12]
 80177f6:	4798      	blx	r3
 80177f8:	b128      	cbz	r0, 8017806 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80177fa:	7b43      	ldrb	r3, [r0, #13]
 80177fc:	7a80      	ldrb	r0, [r0, #10]
 80177fe:	005b      	lsls	r3, r3, #1
 8017800:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017804:	4318      	orrs	r0, r3
 8017806:	bd08      	pop	{r3, pc}

08017808 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017808:	b40e      	push	{r1, r2, r3}
 801780a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801780c:	b09e      	sub	sp, #120	; 0x78
 801780e:	ab23      	add	r3, sp, #140	; 0x8c
 8017810:	4605      	mov	r5, r0
 8017812:	f853 4b04 	ldr.w	r4, [r3], #4
 8017816:	9303      	str	r3, [sp, #12]
 8017818:	a805      	add	r0, sp, #20
 801781a:	f000 fea9 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 801781e:	682b      	ldr	r3, [r5, #0]
 8017820:	4628      	mov	r0, r5
 8017822:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8017824:	4798      	blx	r3
 8017826:	682b      	ldr	r3, [r5, #0]
 8017828:	4606      	mov	r6, r0
 801782a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801782c:	4628      	mov	r0, r5
 801782e:	4798      	blx	r3
 8017830:	4633      	mov	r3, r6
 8017832:	ae1e      	add	r6, sp, #120	; 0x78
 8017834:	4621      	mov	r1, r4
 8017836:	9000      	str	r0, [sp, #0]
 8017838:	9a03      	ldr	r2, [sp, #12]
 801783a:	2400      	movs	r4, #0
 801783c:	a805      	add	r0, sp, #20
 801783e:	f000 fef2 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017842:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017846:	462a      	mov	r2, r5
 8017848:	4633      	mov	r3, r6
 801784a:	4621      	mov	r1, r4
 801784c:	a805      	add	r0, sp, #20
 801784e:	f001 f9ed 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017852:	b1f0      	cbz	r0, 8017892 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8017854:	280a      	cmp	r0, #10
 8017856:	d018      	beq.n	801788a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8017858:	9f04      	ldr	r7, [sp, #16]
 801785a:	b1b7      	cbz	r7, 801788a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801785c:	7b78      	ldrb	r0, [r7, #13]
 801785e:	7a3b      	ldrb	r3, [r7, #8]
 8017860:	88ea      	ldrh	r2, [r5, #6]
 8017862:	00c1      	lsls	r1, r0, #3
 8017864:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017868:	4319      	orrs	r1, r3
 801786a:	0643      	lsls	r3, r0, #25
 801786c:	bf44      	itt	mi
 801786e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8017872:	b219      	sxthmi	r1, r3
 8017874:	0100      	lsls	r0, r0, #4
 8017876:	79fb      	ldrb	r3, [r7, #7]
 8017878:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801787c:	4303      	orrs	r3, r0
 801787e:	4413      	add	r3, r2
 8017880:	1a5b      	subs	r3, r3, r1
 8017882:	b21b      	sxth	r3, r3
 8017884:	429c      	cmp	r4, r3
 8017886:	bfb8      	it	lt
 8017888:	461c      	movlt	r4, r3
 801788a:	4633      	mov	r3, r6
 801788c:	462a      	mov	r2, r5
 801788e:	2100      	movs	r1, #0
 8017890:	e7dc      	b.n	801784c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8017892:	b2a0      	uxth	r0, r4
 8017894:	b01e      	add	sp, #120	; 0x78
 8017896:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801789a:	b003      	add	sp, #12
 801789c:	4770      	bx	lr

0801789e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801789e:	7a43      	ldrb	r3, [r0, #9]
 80178a0:	8880      	ldrh	r0, [r0, #4]
 80178a2:	4418      	add	r0, r3
 80178a4:	b280      	uxth	r0, r0
 80178a6:	4770      	bx	lr

080178a8 <_ZNK8touchgfx4Font13getFontHeightEv>:
 80178a8:	6803      	ldr	r3, [r0, #0]
 80178aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80178ac:	4718      	bx	r3

080178ae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 80178ae:	b40e      	push	{r1, r2, r3}
 80178b0:	b570      	push	{r4, r5, r6, lr}
 80178b2:	b09d      	sub	sp, #116	; 0x74
 80178b4:	ab21      	add	r3, sp, #132	; 0x84
 80178b6:	4604      	mov	r4, r0
 80178b8:	f853 5b04 	ldr.w	r5, [r3], #4
 80178bc:	9302      	str	r3, [sp, #8]
 80178be:	a803      	add	r0, sp, #12
 80178c0:	f000 fe56 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 80178c4:	6823      	ldr	r3, [r4, #0]
 80178c6:	4620      	mov	r0, r4
 80178c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80178ca:	4798      	blx	r3
 80178cc:	6823      	ldr	r3, [r4, #0]
 80178ce:	4606      	mov	r6, r0
 80178d0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80178d2:	4620      	mov	r0, r4
 80178d4:	4798      	blx	r3
 80178d6:	4633      	mov	r3, r6
 80178d8:	9000      	str	r0, [sp, #0]
 80178da:	9a02      	ldr	r2, [sp, #8]
 80178dc:	4629      	mov	r1, r5
 80178de:	a803      	add	r0, sp, #12
 80178e0:	f000 fea1 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80178e4:	a803      	add	r0, sp, #12
 80178e6:	f001 fa6f 	bl	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80178ea:	2401      	movs	r4, #1
 80178ec:	b2a3      	uxth	r3, r4
 80178ee:	b140      	cbz	r0, 8017902 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80178f0:	280a      	cmp	r0, #10
 80178f2:	bf08      	it	eq
 80178f4:	3301      	addeq	r3, #1
 80178f6:	a803      	add	r0, sp, #12
 80178f8:	bf08      	it	eq
 80178fa:	b21c      	sxtheq	r4, r3
 80178fc:	f001 fa64 	bl	8018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017900:	e7f4      	b.n	80178ec <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017902:	4618      	mov	r0, r3
 8017904:	b01d      	add	sp, #116	; 0x74
 8017906:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801790a:	b003      	add	sp, #12
 801790c:	4770      	bx	lr

0801790e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801790e:	b40e      	push	{r1, r2, r3}
 8017910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017912:	b09e      	sub	sp, #120	; 0x78
 8017914:	ab23      	add	r3, sp, #140	; 0x8c
 8017916:	4604      	mov	r4, r0
 8017918:	f853 5b04 	ldr.w	r5, [r3], #4
 801791c:	9303      	str	r3, [sp, #12]
 801791e:	a805      	add	r0, sp, #20
 8017920:	f000 fe26 	bl	8018570 <_ZN8touchgfx12TextProviderC1Ev>
 8017924:	6823      	ldr	r3, [r4, #0]
 8017926:	4620      	mov	r0, r4
 8017928:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801792a:	4798      	blx	r3
 801792c:	6823      	ldr	r3, [r4, #0]
 801792e:	4606      	mov	r6, r0
 8017930:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8017932:	4620      	mov	r0, r4
 8017934:	4798      	blx	r3
 8017936:	4633      	mov	r3, r6
 8017938:	4629      	mov	r1, r5
 801793a:	9000      	str	r0, [sp, #0]
 801793c:	9a03      	ldr	r2, [sp, #12]
 801793e:	a805      	add	r0, sp, #20
 8017940:	ad1e      	add	r5, sp, #120	; 0x78
 8017942:	f000 fe70 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017946:	2100      	movs	r1, #0
 8017948:	f845 1d68 	str.w	r1, [r5, #-104]!
 801794c:	4622      	mov	r2, r4
 801794e:	462b      	mov	r3, r5
 8017950:	a805      	add	r0, sp, #20
 8017952:	f001 f96b 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017956:	f647 76ff 	movw	r6, #32767	; 0x7fff
 801795a:	b1d8      	cbz	r0, 8017994 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 801795c:	280a      	cmp	r0, #10
 801795e:	d012      	beq.n	8017986 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017960:	9804      	ldr	r0, [sp, #16]
 8017962:	b180      	cbz	r0, 8017986 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8017964:	7b47      	ldrb	r7, [r0, #13]
 8017966:	88e2      	ldrh	r2, [r4, #6]
 8017968:	00fb      	lsls	r3, r7, #3
 801796a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801796e:	7a03      	ldrb	r3, [r0, #8]
 8017970:	430b      	orrs	r3, r1
 8017972:	0679      	lsls	r1, r7, #25
 8017974:	bf44      	itt	mi
 8017976:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801797a:	b21b      	sxthmi	r3, r3
 801797c:	1ad3      	subs	r3, r2, r3
 801797e:	b21b      	sxth	r3, r3
 8017980:	429e      	cmp	r6, r3
 8017982:	bfa8      	it	ge
 8017984:	461e      	movge	r6, r3
 8017986:	462b      	mov	r3, r5
 8017988:	4622      	mov	r2, r4
 801798a:	2100      	movs	r1, #0
 801798c:	a805      	add	r0, sp, #20
 801798e:	f001 f94d 	bl	8018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8017992:	e7e2      	b.n	801795a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8017994:	4630      	mov	r0, r6
 8017996:	b01e      	add	sp, #120	; 0x78
 8017998:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801799c:	b003      	add	sp, #12
 801799e:	4770      	bx	lr

080179a0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80179a0:	b513      	push	{r0, r1, r4, lr}
 80179a2:	6803      	ldr	r3, [r0, #0]
 80179a4:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80179a8:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80179ac:	f8ad 1004 	strh.w	r1, [sp, #4]
 80179b0:	2400      	movs	r4, #0
 80179b2:	9400      	str	r4, [sp, #0]
 80179b4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80179b8:	691b      	ldr	r3, [r3, #16]
 80179ba:	4669      	mov	r1, sp
 80179bc:	4798      	blx	r3
 80179be:	b002      	add	sp, #8
 80179c0:	bd10      	pop	{r4, pc}

080179c2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80179c2:	b538      	push	{r3, r4, r5, lr}
 80179c4:	680b      	ldr	r3, [r1, #0]
 80179c6:	460c      	mov	r4, r1
 80179c8:	68db      	ldr	r3, [r3, #12]
 80179ca:	4605      	mov	r5, r0
 80179cc:	4798      	blx	r3
 80179ce:	6823      	ldr	r3, [r4, #0]
 80179d0:	4620      	mov	r0, r4
 80179d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179d4:	4629      	mov	r1, r5
 80179d6:	4798      	blx	r3
 80179d8:	4628      	mov	r0, r5
 80179da:	bd38      	pop	{r3, r4, r5, pc}

080179dc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80179dc:	b410      	push	{r4}
 80179de:	880a      	ldrh	r2, [r1, #0]
 80179e0:	8884      	ldrh	r4, [r0, #4]
 80179e2:	4422      	add	r2, r4
 80179e4:	800a      	strh	r2, [r1, #0]
 80179e6:	88c4      	ldrh	r4, [r0, #6]
 80179e8:	884a      	ldrh	r2, [r1, #2]
 80179ea:	4422      	add	r2, r4
 80179ec:	804a      	strh	r2, [r1, #2]
 80179ee:	6940      	ldr	r0, [r0, #20]
 80179f0:	b120      	cbz	r0, 80179fc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80179f2:	6803      	ldr	r3, [r0, #0]
 80179f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80179f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179fa:	4718      	bx	r3
 80179fc:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017a00:	4770      	bx	lr

08017a02 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017a02:	b570      	push	{r4, r5, r6, lr}
 8017a04:	8882      	ldrh	r2, [r0, #4]
 8017a06:	880b      	ldrh	r3, [r1, #0]
 8017a08:	4413      	add	r3, r2
 8017a0a:	800b      	strh	r3, [r1, #0]
 8017a0c:	88c2      	ldrh	r2, [r0, #6]
 8017a0e:	884b      	ldrh	r3, [r1, #2]
 8017a10:	460c      	mov	r4, r1
 8017a12:	4413      	add	r3, r2
 8017a14:	804b      	strh	r3, [r1, #2]
 8017a16:	4605      	mov	r5, r0
 8017a18:	1d01      	adds	r1, r0, #4
 8017a1a:	4620      	mov	r0, r4
 8017a1c:	f7f8 ff86 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8017a20:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017a24:	2b00      	cmp	r3, #0
 8017a26:	dd0b      	ble.n	8017a40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017a28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017a2c:	2b00      	cmp	r3, #0
 8017a2e:	dd07      	ble.n	8017a40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017a30:	6968      	ldr	r0, [r5, #20]
 8017a32:	b128      	cbz	r0, 8017a40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017a34:	6803      	ldr	r3, [r0, #0]
 8017a36:	4621      	mov	r1, r4
 8017a38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017a3e:	4718      	bx	r3
 8017a40:	bd70      	pop	{r4, r5, r6, pc}
	...

08017a44 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017a44:	b570      	push	{r4, r5, r6, lr}
 8017a46:	8882      	ldrh	r2, [r0, #4]
 8017a48:	880b      	ldrh	r3, [r1, #0]
 8017a4a:	4413      	add	r3, r2
 8017a4c:	800b      	strh	r3, [r1, #0]
 8017a4e:	88c2      	ldrh	r2, [r0, #6]
 8017a50:	884b      	ldrh	r3, [r1, #2]
 8017a52:	460c      	mov	r4, r1
 8017a54:	4413      	add	r3, r2
 8017a56:	804b      	strh	r3, [r1, #2]
 8017a58:	4605      	mov	r5, r0
 8017a5a:	1d01      	adds	r1, r0, #4
 8017a5c:	4620      	mov	r0, r4
 8017a5e:	f7f8 ff65 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8017a62:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017a66:	2b00      	cmp	r3, #0
 8017a68:	dd19      	ble.n	8017a9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017a6a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8017a6e:	2b00      	cmp	r3, #0
 8017a70:	dd15      	ble.n	8017a9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017a72:	6968      	ldr	r0, [r5, #20]
 8017a74:	b128      	cbz	r0, 8017a82 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8017a76:	6803      	ldr	r3, [r0, #0]
 8017a78:	4621      	mov	r1, r4
 8017a7a:	691b      	ldr	r3, [r3, #16]
 8017a7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017a80:	4718      	bx	r3
 8017a82:	4b07      	ldr	r3, [pc, #28]	; (8017aa0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8017a84:	681b      	ldr	r3, [r3, #0]
 8017a86:	3304      	adds	r3, #4
 8017a88:	429d      	cmp	r5, r3
 8017a8a:	d108      	bne.n	8017a9e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8017a8c:	f7fe fea0 	bl	80167d0 <_ZN8touchgfx11Application11getInstanceEv>
 8017a90:	6803      	ldr	r3, [r0, #0]
 8017a92:	6821      	ldr	r1, [r4, #0]
 8017a94:	6862      	ldr	r2, [r4, #4]
 8017a96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8017a98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017a9c:	4718      	bx	r3
 8017a9e:	bd70      	pop	{r4, r5, r6, pc}
 8017aa0:	20013830 	.word	0x20013830

08017aa4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8017aa4:	b570      	push	{r4, r5, r6, lr}
 8017aa6:	4604      	mov	r4, r0
 8017aa8:	4616      	mov	r6, r2
 8017aaa:	460d      	mov	r5, r1
 8017aac:	b901      	cbnz	r1, 8017ab0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8017aae:	b192      	cbz	r2, 8017ad6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017ab0:	6823      	ldr	r3, [r4, #0]
 8017ab2:	4620      	mov	r0, r4
 8017ab4:	699b      	ldr	r3, [r3, #24]
 8017ab6:	4798      	blx	r3
 8017ab8:	88e2      	ldrh	r2, [r4, #6]
 8017aba:	88a1      	ldrh	r1, [r4, #4]
 8017abc:	4432      	add	r2, r6
 8017abe:	4429      	add	r1, r5
 8017ac0:	4620      	mov	r0, r4
 8017ac2:	b212      	sxth	r2, r2
 8017ac4:	b209      	sxth	r1, r1
 8017ac6:	f7ea ff3b 	bl	8002940 <_ZN8touchgfx8Drawable5setXYEss>
 8017aca:	6823      	ldr	r3, [r4, #0]
 8017acc:	4620      	mov	r0, r4
 8017ace:	699b      	ldr	r3, [r3, #24]
 8017ad0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017ad4:	4718      	bx	r3
 8017ad6:	bd70      	pop	{r4, r5, r6, pc}

08017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017ad8:	b510      	push	{r4, lr}
 8017ada:	4604      	mov	r4, r0
 8017adc:	4608      	mov	r0, r1
 8017ade:	2300      	movs	r3, #0
 8017ae0:	8023      	strh	r3, [r4, #0]
 8017ae2:	8063      	strh	r3, [r4, #2]
 8017ae4:	6803      	ldr	r3, [r0, #0]
 8017ae6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017aea:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017aee:	80a1      	strh	r1, [r4, #4]
 8017af0:	80e2      	strh	r2, [r4, #6]
 8017af2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017af4:	4621      	mov	r1, r4
 8017af6:	4798      	blx	r3
 8017af8:	4620      	mov	r0, r4
 8017afa:	bd10      	pop	{r4, pc}

08017afc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8017afc:	b530      	push	{r4, r5, lr}
 8017afe:	8083      	strh	r3, [r0, #4]
 8017b00:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017b04:	80c3      	strh	r3, [r0, #6]
 8017b06:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8017b0a:	7203      	strb	r3, [r0, #8]
 8017b0c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017b10:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017b14:	7243      	strb	r3, [r0, #9]
 8017b16:	7a83      	ldrb	r3, [r0, #10]
 8017b18:	6141      	str	r1, [r0, #20]
 8017b1a:	f365 0306 	bfi	r3, r5, #0, #7
 8017b1e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017b22:	8302      	strh	r2, [r0, #24]
 8017b24:	f365 13c7 	bfi	r3, r5, #7, #1
 8017b28:	7283      	strb	r3, [r0, #10]
 8017b2a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8017b2e:	72c3      	strb	r3, [r0, #11]
 8017b30:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8017b34:	7303      	strb	r3, [r0, #12]
 8017b36:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8017b3a:	81c3      	strh	r3, [r0, #14]
 8017b3c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8017b40:	8203      	strh	r3, [r0, #16]
 8017b42:	4b01      	ldr	r3, [pc, #4]	; (8017b48 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017b44:	6003      	str	r3, [r0, #0]
 8017b46:	bd30      	pop	{r4, r5, pc}
 8017b48:	0802fa3c 	.word	0x0802fa3c

08017b4c <_ZNK8touchgfx9ConstFont4findEt>:
 8017b4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b4e:	6944      	ldr	r4, [r0, #20]
 8017b50:	b3bc      	cbz	r4, 8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b52:	88a3      	ldrh	r3, [r4, #4]
 8017b54:	8b02      	ldrh	r2, [r0, #24]
 8017b56:	1acb      	subs	r3, r1, r3
 8017b58:	f102 32ff 	add.w	r2, r2, #4294967295
 8017b5c:	d431      	bmi.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b5e:	4293      	cmp	r3, r2
 8017b60:	dd0c      	ble.n	8017b7c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8017b62:	230e      	movs	r3, #14
 8017b64:	fb03 4302 	mla	r3, r3, r2, r4
 8017b68:	889b      	ldrh	r3, [r3, #4]
 8017b6a:	1a5b      	subs	r3, r3, r1
 8017b6c:	1ad3      	subs	r3, r2, r3
 8017b6e:	429a      	cmp	r2, r3
 8017b70:	db27      	blt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b72:	2b00      	cmp	r3, #0
 8017b74:	bfbc      	itt	lt
 8017b76:	2302      	movlt	r3, #2
 8017b78:	fb92 f3f3 	sdivlt	r3, r2, r3
 8017b7c:	2500      	movs	r5, #0
 8017b7e:	260e      	movs	r6, #14
 8017b80:	4295      	cmp	r5, r2
 8017b82:	dc1e      	bgt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b84:	fb06 4003 	mla	r0, r6, r3, r4
 8017b88:	8887      	ldrh	r7, [r0, #4]
 8017b8a:	42b9      	cmp	r1, r7
 8017b8c:	d01a      	beq.n	8017bc4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8017b8e:	d20d      	bcs.n	8017bac <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8017b90:	1e5a      	subs	r2, r3, #1
 8017b92:	4295      	cmp	r5, r2
 8017b94:	dc15      	bgt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017b96:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8017b9a:	1a5b      	subs	r3, r3, r1
 8017b9c:	1ad3      	subs	r3, r2, r3
 8017b9e:	429a      	cmp	r2, r3
 8017ba0:	db0f      	blt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017ba2:	429d      	cmp	r5, r3
 8017ba4:	ddec      	ble.n	8017b80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017ba6:	1953      	adds	r3, r2, r5
 8017ba8:	105b      	asrs	r3, r3, #1
 8017baa:	e7e9      	b.n	8017b80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017bac:	1c5d      	adds	r5, r3, #1
 8017bae:	42aa      	cmp	r2, r5
 8017bb0:	db07      	blt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017bb2:	8a43      	ldrh	r3, [r0, #18]
 8017bb4:	1acb      	subs	r3, r1, r3
 8017bb6:	442b      	add	r3, r5
 8017bb8:	429d      	cmp	r5, r3
 8017bba:	dc02      	bgt.n	8017bc2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017bbc:	429a      	cmp	r2, r3
 8017bbe:	dadf      	bge.n	8017b80 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017bc0:	e7f1      	b.n	8017ba6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017bc2:	2000      	movs	r0, #0
 8017bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017bc6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017bc6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017bc8:	4604      	mov	r4, r0
 8017bca:	4617      	mov	r7, r2
 8017bcc:	461e      	mov	r6, r3
 8017bce:	b911      	cbnz	r1, 8017bd6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017bd0:	2500      	movs	r5, #0
 8017bd2:	4628      	mov	r0, r5
 8017bd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017bd6:	290a      	cmp	r1, #10
 8017bd8:	d0fa      	beq.n	8017bd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bda:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8017bde:	4291      	cmp	r1, r2
 8017be0:	d0f6      	beq.n	8017bd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017be2:	f242 020b 	movw	r2, #8203	; 0x200b
 8017be6:	4291      	cmp	r1, r2
 8017be8:	d0f2      	beq.n	8017bd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017bea:	f7ff ffaf 	bl	8017b4c <_ZNK8touchgfx9ConstFont4findEt>
 8017bee:	4605      	mov	r5, r0
 8017bf0:	b950      	cbnz	r0, 8017c08 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017bf2:	6823      	ldr	r3, [r4, #0]
 8017bf4:	4620      	mov	r0, r4
 8017bf6:	691b      	ldr	r3, [r3, #16]
 8017bf8:	4798      	blx	r3
 8017bfa:	4601      	mov	r1, r0
 8017bfc:	4620      	mov	r0, r4
 8017bfe:	f7ff ffa5 	bl	8017b4c <_ZNK8touchgfx9ConstFont4findEt>
 8017c02:	4605      	mov	r5, r0
 8017c04:	2800      	cmp	r0, #0
 8017c06:	d0e3      	beq.n	8017bd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017c08:	6823      	ldr	r3, [r4, #0]
 8017c0a:	4629      	mov	r1, r5
 8017c0c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8017c0e:	4620      	mov	r0, r4
 8017c10:	4798      	blx	r3
 8017c12:	6038      	str	r0, [r7, #0]
 8017c14:	6823      	ldr	r3, [r4, #0]
 8017c16:	4620      	mov	r0, r4
 8017c18:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8017c1a:	4798      	blx	r3
 8017c1c:	7030      	strb	r0, [r6, #0]
 8017c1e:	e7d8      	b.n	8017bd2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017c20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8017c20:	b538      	push	{r3, r4, r5, lr}
 8017c22:	4605      	mov	r5, r0
 8017c24:	f002 fb94 	bl	801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017c28:	4604      	mov	r4, r0
 8017c2a:	4628      	mov	r0, r5
 8017c2c:	f002 fad4 	bl	801a1d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017c30:	2800      	cmp	r0, #0
 8017c32:	bf14      	ite	ne
 8017c34:	2002      	movne	r0, #2
 8017c36:	2000      	moveq	r0, #0
 8017c38:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017c3c:	b280      	uxth	r0, r0
 8017c3e:	bd38      	pop	{r3, r4, r5, pc}

08017c40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8017c40:	b538      	push	{r3, r4, r5, lr}
 8017c42:	4605      	mov	r5, r0
 8017c44:	f002 fb84 	bl	801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8017c48:	4604      	mov	r4, r0
 8017c4a:	4628      	mov	r0, r5
 8017c4c:	f002 fac4 	bl	801a1d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8017c50:	2800      	cmp	r0, #0
 8017c52:	bf14      	ite	ne
 8017c54:	2002      	movne	r0, #2
 8017c56:	2000      	moveq	r0, #0
 8017c58:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8017c5c:	f040 0001 	orr.w	r0, r0, #1
 8017c60:	b280      	uxth	r0, r0
 8017c62:	bd38      	pop	{r3, r4, r5, pc}

08017c64 <_ZN8touchgfx4clzuEm>:
 8017c64:	4603      	mov	r3, r0
 8017c66:	b1c8      	cbz	r0, 8017c9c <_ZN8touchgfx4clzuEm+0x38>
 8017c68:	0c02      	lsrs	r2, r0, #16
 8017c6a:	0412      	lsls	r2, r2, #16
 8017c6c:	b9a2      	cbnz	r2, 8017c98 <_ZN8touchgfx4clzuEm+0x34>
 8017c6e:	0403      	lsls	r3, r0, #16
 8017c70:	2010      	movs	r0, #16
 8017c72:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8017c76:	bf04      	itt	eq
 8017c78:	021b      	lsleq	r3, r3, #8
 8017c7a:	3008      	addeq	r0, #8
 8017c7c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8017c80:	bf04      	itt	eq
 8017c82:	011b      	lsleq	r3, r3, #4
 8017c84:	3004      	addeq	r0, #4
 8017c86:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8017c8a:	bf04      	itt	eq
 8017c8c:	009b      	lsleq	r3, r3, #2
 8017c8e:	3002      	addeq	r0, #2
 8017c90:	2b00      	cmp	r3, #0
 8017c92:	db04      	blt.n	8017c9e <_ZN8touchgfx4clzuEm+0x3a>
 8017c94:	3001      	adds	r0, #1
 8017c96:	4770      	bx	lr
 8017c98:	2000      	movs	r0, #0
 8017c9a:	e7ea      	b.n	8017c72 <_ZN8touchgfx4clzuEm+0xe>
 8017c9c:	2020      	movs	r0, #32
 8017c9e:	4770      	bx	lr

08017ca0 <_ZN8touchgfx7muldivuEmmmRm>:
 8017ca0:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8017ca4:	460f      	mov	r7, r1
 8017ca6:	4615      	mov	r5, r2
 8017ca8:	461e      	mov	r6, r3
 8017caa:	4601      	mov	r1, r0
 8017cac:	b100      	cbz	r0, 8017cb0 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8017cae:	b927      	cbnz	r7, 8017cba <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8017cb0:	2000      	movs	r0, #0
 8017cb2:	6030      	str	r0, [r6, #0]
 8017cb4:	b002      	add	sp, #8
 8017cb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017cba:	f7ff ffd3 	bl	8017c64 <_ZN8touchgfx4clzuEm>
 8017cbe:	b980      	cbnz	r0, 8017ce2 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8017cc0:	4638      	mov	r0, r7
 8017cc2:	f7ff ffcf 	bl	8017c64 <_ZN8touchgfx4clzuEm>
 8017cc6:	2800      	cmp	r0, #0
 8017cc8:	dd05      	ble.n	8017cd6 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 8017cca:	4633      	mov	r3, r6
 8017ccc:	462a      	mov	r2, r5
 8017cce:	4638      	mov	r0, r7
 8017cd0:	f7ff ffe6 	bl	8017ca0 <_ZN8touchgfx7muldivuEmmmRm>
 8017cd4:	e7ee      	b.n	8017cb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017cd6:	f04f 33ff 	mov.w	r3, #4294967295
 8017cda:	6033      	str	r3, [r6, #0]
 8017cdc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8017ce0:	e7e8      	b.n	8017cb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017ce2:	fa37 f800 	lsrs.w	r8, r7, r0
 8017ce6:	fb07 f301 	mul.w	r3, r7, r1
 8017cea:	d105      	bne.n	8017cf8 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8017cec:	fbb3 f0f5 	udiv	r0, r3, r5
 8017cf0:	fb05 3510 	mls	r5, r5, r0, r3
 8017cf4:	6035      	str	r5, [r6, #0]
 8017cf6:	e7dd      	b.n	8017cb4 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017cf8:	2301      	movs	r3, #1
 8017cfa:	fa01 fa00 	lsl.w	sl, r1, r0
 8017cfe:	fa03 f000 	lsl.w	r0, r3, r0
 8017d02:	3801      	subs	r0, #1
 8017d04:	462a      	mov	r2, r5
 8017d06:	4633      	mov	r3, r6
 8017d08:	4038      	ands	r0, r7
 8017d0a:	f7ff ffc9 	bl	8017ca0 <_ZN8touchgfx7muldivuEmmmRm>
 8017d0e:	fbba f9f5 	udiv	r9, sl, r5
 8017d12:	462a      	mov	r2, r5
 8017d14:	4607      	mov	r7, r0
 8017d16:	ab01      	add	r3, sp, #4
 8017d18:	fb05 a119 	mls	r1, r5, r9, sl
 8017d1c:	4640      	mov	r0, r8
 8017d1e:	f7ff ffbf 	bl	8017ca0 <_ZN8touchgfx7muldivuEmmmRm>
 8017d22:	9b01      	ldr	r3, [sp, #4]
 8017d24:	6832      	ldr	r2, [r6, #0]
 8017d26:	fb08 f409 	mul.w	r4, r8, r9
 8017d2a:	441a      	add	r2, r3
 8017d2c:	fbb2 f3f5 	udiv	r3, r2, r5
 8017d30:	441c      	add	r4, r3
 8017d32:	443c      	add	r4, r7
 8017d34:	4420      	add	r0, r4
 8017d36:	fb05 2513 	mls	r5, r5, r3, r2
 8017d3a:	e7db      	b.n	8017cf4 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017d3c <_ZN8touchgfx6muldivElllRl>:
 8017d3c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017d3e:	2800      	cmp	r0, #0
 8017d40:	bfba      	itte	lt
 8017d42:	4240      	neglt	r0, r0
 8017d44:	f04f 34ff 	movlt.w	r4, #4294967295
 8017d48:	2401      	movge	r4, #1
 8017d4a:	2900      	cmp	r1, #0
 8017d4c:	bfbc      	itt	lt
 8017d4e:	4249      	neglt	r1, r1
 8017d50:	4264      	neglt	r4, r4
 8017d52:	2a00      	cmp	r2, #0
 8017d54:	bfb6      	itet	lt
 8017d56:	4265      	neglt	r5, r4
 8017d58:	4625      	movge	r5, r4
 8017d5a:	4252      	neglt	r2, r2
 8017d5c:	4288      	cmp	r0, r1
 8017d5e:	461e      	mov	r6, r3
 8017d60:	bfc2      	ittt	gt
 8017d62:	4603      	movgt	r3, r0
 8017d64:	4608      	movgt	r0, r1
 8017d66:	4619      	movgt	r1, r3
 8017d68:	ab01      	add	r3, sp, #4
 8017d6a:	f7ff ff99 	bl	8017ca0 <_ZN8touchgfx7muldivuEmmmRm>
 8017d6e:	9b01      	ldr	r3, [sp, #4]
 8017d70:	4368      	muls	r0, r5
 8017d72:	435c      	muls	r4, r3
 8017d74:	6034      	str	r4, [r6, #0]
 8017d76:	b002      	add	sp, #8
 8017d78:	bd70      	pop	{r4, r5, r6, pc}

08017d7a <_ZN8touchgfx6muldivElll>:
 8017d7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8017d7c:	4606      	mov	r6, r0
 8017d7e:	ab01      	add	r3, sp, #4
 8017d80:	460d      	mov	r5, r1
 8017d82:	4614      	mov	r4, r2
 8017d84:	f7ff ffda 	bl	8017d3c <_ZN8touchgfx6muldivElllRl>
 8017d88:	2e00      	cmp	r6, #0
 8017d8a:	db20      	blt.n	8017dce <_ZN8touchgfx6muldivElll+0x54>
 8017d8c:	bf14      	ite	ne
 8017d8e:	2301      	movne	r3, #1
 8017d90:	2300      	moveq	r3, #0
 8017d92:	2d00      	cmp	r5, #0
 8017d94:	db1e      	blt.n	8017dd4 <_ZN8touchgfx6muldivElll+0x5a>
 8017d96:	bf14      	ite	ne
 8017d98:	2201      	movne	r2, #1
 8017d9a:	2200      	moveq	r2, #0
 8017d9c:	2c00      	cmp	r4, #0
 8017d9e:	fb03 f202 	mul.w	r2, r3, r2
 8017da2:	db1a      	blt.n	8017dda <_ZN8touchgfx6muldivElll+0x60>
 8017da4:	bf14      	ite	ne
 8017da6:	2301      	movne	r3, #1
 8017da8:	2300      	moveq	r3, #0
 8017daa:	4353      	muls	r3, r2
 8017dac:	2b01      	cmp	r3, #1
 8017dae:	d117      	bne.n	8017de0 <_ZN8touchgfx6muldivElll+0x66>
 8017db0:	9b01      	ldr	r3, [sp, #4]
 8017db2:	2c00      	cmp	r4, #0
 8017db4:	bfb8      	it	lt
 8017db6:	4264      	neglt	r4, r4
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	f104 0401 	add.w	r4, r4, #1
 8017dbe:	bfb8      	it	lt
 8017dc0:	425b      	neglt	r3, r3
 8017dc2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017dc6:	db00      	blt.n	8017dca <_ZN8touchgfx6muldivElll+0x50>
 8017dc8:	3001      	adds	r0, #1
 8017dca:	b002      	add	sp, #8
 8017dcc:	bd70      	pop	{r4, r5, r6, pc}
 8017dce:	f04f 33ff 	mov.w	r3, #4294967295
 8017dd2:	e7de      	b.n	8017d92 <_ZN8touchgfx6muldivElll+0x18>
 8017dd4:	f04f 32ff 	mov.w	r2, #4294967295
 8017dd8:	e7e0      	b.n	8017d9c <_ZN8touchgfx6muldivElll+0x22>
 8017dda:	f04f 33ff 	mov.w	r3, #4294967295
 8017dde:	e7e4      	b.n	8017daa <_ZN8touchgfx6muldivElll+0x30>
 8017de0:	3301      	adds	r3, #1
 8017de2:	d1f2      	bne.n	8017dca <_ZN8touchgfx6muldivElll+0x50>
 8017de4:	9b01      	ldr	r3, [sp, #4]
 8017de6:	2c00      	cmp	r4, #0
 8017de8:	bfb8      	it	lt
 8017dea:	4264      	neglt	r4, r4
 8017dec:	2b00      	cmp	r3, #0
 8017dee:	bfb8      	it	lt
 8017df0:	425b      	neglt	r3, r3
 8017df2:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8017df6:	bfc8      	it	gt
 8017df8:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8017dfc:	e7e5      	b.n	8017dca <_ZN8touchgfx6muldivElll+0x50>

08017dfe <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017dfe:	2000      	movs	r0, #0
 8017e00:	4770      	bx	lr

08017e02 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8017e02:	2001      	movs	r0, #1
 8017e04:	4770      	bx	lr

08017e06 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8017e06:	2002      	movs	r0, #2
 8017e08:	4770      	bx	lr

08017e0a <_ZN8touchgfx6ScreenD1Ev>:
 8017e0a:	4770      	bx	lr

08017e0c <_ZN8touchgfx12GestureEventD1Ev>:
 8017e0c:	4770      	bx	lr

08017e0e <_ZN8touchgfx9DragEventD1Ev>:
 8017e0e:	4770      	bx	lr

08017e10 <_ZN8touchgfx10ClickEventD1Ev>:
 8017e10:	4770      	bx	lr

08017e12 <_ZN8touchgfx10ClickEventD0Ev>:
 8017e12:	b510      	push	{r4, lr}
 8017e14:	210c      	movs	r1, #12
 8017e16:	4604      	mov	r4, r0
 8017e18:	f012 fd8f 	bl	802a93a <_ZdlPvj>
 8017e1c:	4620      	mov	r0, r4
 8017e1e:	bd10      	pop	{r4, pc}

08017e20 <_ZN8touchgfx9DragEventD0Ev>:
 8017e20:	b510      	push	{r4, lr}
 8017e22:	2110      	movs	r1, #16
 8017e24:	4604      	mov	r4, r0
 8017e26:	f012 fd88 	bl	802a93a <_ZdlPvj>
 8017e2a:	4620      	mov	r0, r4
 8017e2c:	bd10      	pop	{r4, pc}

08017e2e <_ZN8touchgfx12GestureEventD0Ev>:
 8017e2e:	b510      	push	{r4, lr}
 8017e30:	210c      	movs	r1, #12
 8017e32:	4604      	mov	r4, r0
 8017e34:	f012 fd81 	bl	802a93a <_ZdlPvj>
 8017e38:	4620      	mov	r0, r4
 8017e3a:	bd10      	pop	{r4, pc}

08017e3c <_ZN8touchgfx6ScreenD0Ev>:
 8017e3c:	b510      	push	{r4, lr}
 8017e3e:	213c      	movs	r1, #60	; 0x3c
 8017e40:	4604      	mov	r4, r0
 8017e42:	f012 fd7a 	bl	802a93a <_ZdlPvj>
 8017e46:	4620      	mov	r0, r4
 8017e48:	bd10      	pop	{r4, pc}
	...

08017e4c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8017e4c:	b530      	push	{r4, r5, lr}
 8017e4e:	460d      	mov	r5, r1
 8017e50:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017e52:	b087      	sub	sp, #28
 8017e54:	4604      	mov	r4, r0
 8017e56:	b301      	cbz	r1, 8017e9a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8017e58:	a801      	add	r0, sp, #4
 8017e5a:	f7ff fe3d 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e5e:	892a      	ldrh	r2, [r5, #8]
 8017e60:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8017e64:	7928      	ldrb	r0, [r5, #4]
 8017e66:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8017e6a:	f88d 0010 	strb.w	r0, [sp, #16]
 8017e6e:	1ad2      	subs	r2, r2, r3
 8017e70:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8017e72:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017e74:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017e78:	441a      	add	r2, r3
 8017e7a:	896b      	ldrh	r3, [r5, #10]
 8017e7c:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8017e80:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017e84:	1b5b      	subs	r3, r3, r5
 8017e86:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8017e88:	442b      	add	r3, r5
 8017e8a:	4d05      	ldr	r5, [pc, #20]	; (8017ea0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8017e8c:	9503      	str	r5, [sp, #12]
 8017e8e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017e92:	6803      	ldr	r3, [r0, #0]
 8017e94:	a903      	add	r1, sp, #12
 8017e96:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8017e98:	4798      	blx	r3
 8017e9a:	b007      	add	sp, #28
 8017e9c:	bd30      	pop	{r4, r5, pc}
 8017e9e:	bf00      	nop
 8017ea0:	0802fac4 	.word	0x0802fac4

08017ea4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8017ea4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017ea8:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8017eaa:	b08a      	sub	sp, #40	; 0x28
 8017eac:	4604      	mov	r4, r0
 8017eae:	460d      	mov	r5, r1
 8017eb0:	b113      	cbz	r3, 8017eb8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8017eb2:	790b      	ldrb	r3, [r1, #4]
 8017eb4:	2b00      	cmp	r3, #0
 8017eb6:	d044      	beq.n	8017f42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017eb8:	f104 0804 	add.w	r8, r4, #4
 8017ebc:	4641      	mov	r1, r8
 8017ebe:	a803      	add	r0, sp, #12
 8017ec0:	f7ff fe0a 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017ec4:	792b      	ldrb	r3, [r5, #4]
 8017ec6:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017eca:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017ece:	b983      	cbnz	r3, 8017ef2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017ed0:	892a      	ldrh	r2, [r5, #8]
 8017ed2:	88e9      	ldrh	r1, [r5, #6]
 8017ed4:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8017ed8:	1b92      	subs	r2, r2, r6
 8017eda:	1bc9      	subs	r1, r1, r7
 8017edc:	9301      	str	r3, [sp, #4]
 8017ede:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8017ee2:	9300      	str	r3, [sp, #0]
 8017ee4:	b212      	sxth	r2, r2
 8017ee6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8017eea:	b209      	sxth	r1, r1
 8017eec:	4640      	mov	r0, r8
 8017eee:	f7f8 fc39 	bl	8010764 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8017ef2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8017ef4:	b329      	cbz	r1, 8017f42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017ef6:	a805      	add	r0, sp, #20
 8017ef8:	f7ff fdee 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017efc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017f00:	792b      	ldrb	r3, [r5, #4]
 8017f02:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8017f04:	f88d 3020 	strb.w	r3, [sp, #32]
 8017f08:	1abf      	subs	r7, r7, r2
 8017f0a:	88ea      	ldrh	r2, [r5, #6]
 8017f0c:	4417      	add	r7, r2
 8017f0e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8017f10:	4417      	add	r7, r2
 8017f12:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017f16:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8017f1a:	1ab6      	subs	r6, r6, r2
 8017f1c:	892a      	ldrh	r2, [r5, #8]
 8017f1e:	4416      	add	r6, r2
 8017f20:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017f22:	4416      	add	r6, r2
 8017f24:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8017f28:	4a07      	ldr	r2, [pc, #28]	; (8017f48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8017f2a:	9207      	str	r2, [sp, #28]
 8017f2c:	2600      	movs	r6, #0
 8017f2e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8017f32:	6803      	ldr	r3, [r0, #0]
 8017f34:	a907      	add	r1, sp, #28
 8017f36:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017f38:	4798      	blx	r3
 8017f3a:	792b      	ldrb	r3, [r5, #4]
 8017f3c:	b10b      	cbz	r3, 8017f42 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017f3e:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8017f42:	b00a      	add	sp, #40	; 0x28
 8017f44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017f48:	0802fa9c 	.word	0x0802fa9c

08017f4c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8017f4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017f50:	460c      	mov	r4, r1
 8017f52:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8017f54:	b088      	sub	sp, #32
 8017f56:	4605      	mov	r5, r0
 8017f58:	2900      	cmp	r1, #0
 8017f5a:	d06d      	beq.n	8018038 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8017f5c:	4668      	mov	r0, sp
 8017f5e:	f7ff fdbb 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017f62:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8017f64:	88e3      	ldrh	r3, [r4, #6]
 8017f66:	f9bd 8000 	ldrsh.w	r8, [sp]
 8017f6a:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8017f6e:	440b      	add	r3, r1
 8017f70:	b21b      	sxth	r3, r3
 8017f72:	4543      	cmp	r3, r8
 8017f74:	db31      	blt.n	8017fda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f76:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8017f7a:	44c4      	add	ip, r8
 8017f7c:	fa0f fc8c 	sxth.w	ip, ip
 8017f80:	4563      	cmp	r3, ip
 8017f82:	da2a      	bge.n	8017fda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f84:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8017f86:	8926      	ldrh	r6, [r4, #8]
 8017f88:	4416      	add	r6, r2
 8017f8a:	b236      	sxth	r6, r6
 8017f8c:	42be      	cmp	r6, r7
 8017f8e:	db24      	blt.n	8017fda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f90:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017f94:	4438      	add	r0, r7
 8017f96:	b200      	sxth	r0, r0
 8017f98:	4286      	cmp	r6, r0
 8017f9a:	da1e      	bge.n	8017fda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017f9c:	8963      	ldrh	r3, [r4, #10]
 8017f9e:	4419      	add	r1, r3
 8017fa0:	b209      	sxth	r1, r1
 8017fa2:	4541      	cmp	r1, r8
 8017fa4:	db08      	blt.n	8017fb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017fa6:	4561      	cmp	r1, ip
 8017fa8:	da06      	bge.n	8017fb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017faa:	89a3      	ldrh	r3, [r4, #12]
 8017fac:	441a      	add	r2, r3
 8017fae:	b212      	sxth	r2, r2
 8017fb0:	42ba      	cmp	r2, r7
 8017fb2:	db01      	blt.n	8017fb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017fb4:	4282      	cmp	r2, r0
 8017fb6:	db10      	blt.n	8017fda <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017fb8:	4b21      	ldr	r3, [pc, #132]	; (8018040 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017fba:	9304      	str	r3, [sp, #16]
 8017fbc:	2302      	movs	r3, #2
 8017fbe:	f88d 3014 	strb.w	r3, [sp, #20]
 8017fc2:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8017fc4:	2300      	movs	r3, #0
 8017fc6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017fca:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017fce:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017fd2:	6803      	ldr	r3, [r0, #0]
 8017fd4:	a904      	add	r1, sp, #16
 8017fd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8017fd8:	4798      	blx	r3
 8017fda:	1d29      	adds	r1, r5, #4
 8017fdc:	a802      	add	r0, sp, #8
 8017fde:	f7ff fd7b 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017fe2:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017fe6:	88e0      	ldrh	r0, [r4, #6]
 8017fe8:	7921      	ldrb	r1, [r4, #4]
 8017fea:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8017fee:	8922      	ldrh	r2, [r4, #8]
 8017ff0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8017ff2:	f88d 1014 	strb.w	r1, [sp, #20]
 8017ff6:	eba3 0808 	sub.w	r8, r3, r8
 8017ffa:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017ffe:	1bdf      	subs	r7, r3, r7
 8018000:	b2bb      	uxth	r3, r7
 8018002:	fa1f f888 	uxth.w	r8, r8
 8018006:	8967      	ldrh	r7, [r4, #10]
 8018008:	89a4      	ldrh	r4, [r4, #12]
 801800a:	4440      	add	r0, r8
 801800c:	4460      	add	r0, ip
 801800e:	441a      	add	r2, r3
 8018010:	44b8      	add	r8, r7
 8018012:	4423      	add	r3, r4
 8018014:	f8ad 0016 	strh.w	r0, [sp, #22]
 8018018:	4433      	add	r3, r6
 801801a:	4432      	add	r2, r6
 801801c:	44e0      	add	r8, ip
 801801e:	4c09      	ldr	r4, [pc, #36]	; (8018044 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8018020:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8018022:	9404      	str	r4, [sp, #16]
 8018024:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018028:	f8ad 801a 	strh.w	r8, [sp, #26]
 801802c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018030:	6803      	ldr	r3, [r0, #0]
 8018032:	a904      	add	r1, sp, #16
 8018034:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8018036:	4798      	blx	r3
 8018038:	b008      	add	sp, #32
 801803a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801803e:	bf00      	nop
 8018040:	0802fa9c 	.word	0x0802fa9c
 8018044:	0802fab0 	.word	0x0802fab0

08018048 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8018048:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801804a:	4604      	mov	r4, r0
 801804c:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8018050:	3201      	adds	r2, #1
 8018052:	d112      	bne.n	801807a <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8018054:	6803      	ldr	r3, [r0, #0]
 8018056:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801805a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801805e:	f8ad 1004 	strh.w	r1, [sp, #4]
 8018062:	2500      	movs	r5, #0
 8018064:	9500      	str	r5, [sp, #0]
 8018066:	466d      	mov	r5, sp
 8018068:	4629      	mov	r1, r5
 801806a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801806e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018070:	4798      	blx	r3
 8018072:	e895 0003 	ldmia.w	r5, {r0, r1}
 8018076:	e884 0003 	stmia.w	r4, {r0, r1}
 801807a:	4620      	mov	r0, r4
 801807c:	b003      	add	sp, #12
 801807e:	bd30      	pop	{r4, r5, pc}

08018080 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8018080:	b513      	push	{r0, r1, r4, lr}
 8018082:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8018086:	3301      	adds	r3, #1
 8018088:	4604      	mov	r4, r0
 801808a:	d109      	bne.n	80180a0 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801808c:	4601      	mov	r1, r0
 801808e:	4668      	mov	r0, sp
 8018090:	f7ff fd22 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018094:	f8bd 3000 	ldrh.w	r3, [sp]
 8018098:	8423      	strh	r3, [r4, #32]
 801809a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801809e:	8463      	strh	r3, [r4, #34]	; 0x22
 80180a0:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80180a4:	b002      	add	sp, #8
 80180a6:	bd10      	pop	{r4, pc}

080180a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80180a8:	b513      	push	{r0, r1, r4, lr}
 80180aa:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80180ae:	3301      	adds	r3, #1
 80180b0:	4604      	mov	r4, r0
 80180b2:	d109      	bne.n	80180c8 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80180b4:	4601      	mov	r1, r0
 80180b6:	4668      	mov	r0, sp
 80180b8:	f7ff fd0e 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80180bc:	f8bd 3000 	ldrh.w	r3, [sp]
 80180c0:	8423      	strh	r3, [r4, #32]
 80180c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80180c6:	8463      	strh	r3, [r4, #34]	; 0x22
 80180c8:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80180cc:	b002      	add	sp, #8
 80180ce:	bd10      	pop	{r4, pc}

080180d0 <_ZN8touchgfx6ScreenC1Ev>:
 80180d0:	b570      	push	{r4, r5, r6, lr}
 80180d2:	4605      	mov	r5, r0
 80180d4:	4b16      	ldr	r3, [pc, #88]	; (8018130 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80180d6:	f845 3b04 	str.w	r3, [r5], #4
 80180da:	2300      	movs	r3, #0
 80180dc:	8103      	strh	r3, [r0, #8]
 80180de:	8143      	strh	r3, [r0, #10]
 80180e0:	8183      	strh	r3, [r0, #12]
 80180e2:	81c3      	strh	r3, [r0, #14]
 80180e4:	8203      	strh	r3, [r0, #16]
 80180e6:	8243      	strh	r3, [r0, #18]
 80180e8:	8283      	strh	r3, [r0, #20]
 80180ea:	82c3      	strh	r3, [r0, #22]
 80180ec:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80180f0:	6203      	str	r3, [r0, #32]
 80180f2:	8483      	strh	r3, [r0, #36]	; 0x24
 80180f4:	84c3      	strh	r3, [r0, #38]	; 0x26
 80180f6:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80180fa:	4a0e      	ldr	r2, [pc, #56]	; (8018134 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80180fc:	6343      	str	r3, [r0, #52]	; 0x34
 80180fe:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8018102:	4b0d      	ldr	r3, [pc, #52]	; (8018138 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8018104:	6042      	str	r2, [r0, #4]
 8018106:	f9b3 6000 	ldrsh.w	r6, [r3]
 801810a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801810c:	4a0b      	ldr	r2, [pc, #44]	; (801813c <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801810e:	4604      	mov	r4, r0
 8018110:	2101      	movs	r1, #1
 8018112:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8018116:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801811a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801811e:	4628      	mov	r0, r5
 8018120:	4798      	blx	r3
 8018122:	6863      	ldr	r3, [r4, #4]
 8018124:	4628      	mov	r0, r5
 8018126:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8018128:	4631      	mov	r1, r6
 801812a:	4798      	blx	r3
 801812c:	4620      	mov	r0, r4
 801812e:	bd70      	pop	{r4, r5, r6, pc}
 8018130:	0802fad8 	.word	0x0802fad8
 8018134:	0802f15c 	.word	0x0802f15c
 8018138:	200137e2 	.word	0x200137e2
 801813c:	200137e0 	.word	0x200137e0

08018140 <_ZN8touchgfx6Screen4drawEv>:
 8018140:	b507      	push	{r0, r1, r2, lr}
 8018142:	4b09      	ldr	r3, [pc, #36]	; (8018168 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8018144:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018148:	4b08      	ldr	r3, [pc, #32]	; (801816c <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801814a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801814e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018152:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018156:	6803      	ldr	r3, [r0, #0]
 8018158:	2100      	movs	r1, #0
 801815a:	9100      	str	r1, [sp, #0]
 801815c:	689b      	ldr	r3, [r3, #8]
 801815e:	4669      	mov	r1, sp
 8018160:	4798      	blx	r3
 8018162:	b003      	add	sp, #12
 8018164:	f85d fb04 	ldr.w	pc, [sp], #4
 8018168:	200137e0 	.word	0x200137e0
 801816c:	200137e2 	.word	0x200137e2

08018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8018170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018174:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8018178:	2b00      	cmp	r3, #0
 801817a:	b089      	sub	sp, #36	; 0x24
 801817c:	4680      	mov	r8, r0
 801817e:	460c      	mov	r4, r1
 8018180:	4615      	mov	r5, r2
 8018182:	dd0e      	ble.n	80181a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018184:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8018188:	2b00      	cmp	r3, #0
 801818a:	dd0a      	ble.n	80181a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801818c:	4628      	mov	r0, r5
 801818e:	f7ff ff5b 	bl	8018048 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018192:	4621      	mov	r1, r4
 8018194:	f7fe fa3d 	bl	8016612 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8018198:	69eb      	ldr	r3, [r5, #28]
 801819a:	b928      	cbnz	r0, 80181a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801819c:	461d      	mov	r5, r3
 801819e:	2b00      	cmp	r3, #0
 80181a0:	d1f4      	bne.n	801818c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80181a2:	b009      	add	sp, #36	; 0x24
 80181a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181a8:	ae04      	add	r6, sp, #16
 80181aa:	2b00      	cmp	r3, #0
 80181ac:	f000 80b5 	beq.w	801831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80181b0:	682b      	ldr	r3, [r5, #0]
 80181b2:	4629      	mov	r1, r5
 80181b4:	68db      	ldr	r3, [r3, #12]
 80181b6:	a802      	add	r0, sp, #8
 80181b8:	4798      	blx	r3
 80181ba:	4628      	mov	r0, r5
 80181bc:	f7ff ff60 	bl	8018080 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80181c0:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80181c4:	4407      	add	r7, r0
 80181c6:	4628      	mov	r0, r5
 80181c8:	f7ff ff6e 	bl	80180a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80181cc:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80181d0:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80181d4:	f8ad 2014 	strh.w	r2, [sp, #20]
 80181d8:	4418      	add	r0, r3
 80181da:	4621      	mov	r1, r4
 80181dc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80181e0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80181e4:	b23f      	sxth	r7, r7
 80181e6:	4630      	mov	r0, r6
 80181e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80181ec:	f8ad 7010 	strh.w	r7, [sp, #16]
 80181f0:	f7f8 fb9c 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 80181f4:	4628      	mov	r0, r5
 80181f6:	f7ff ff27 	bl	8018048 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80181fa:	4602      	mov	r2, r0
 80181fc:	e896 0003 	ldmia.w	r6, {r0, r1}
 8018200:	ab06      	add	r3, sp, #24
 8018202:	e883 0003 	stmia.w	r3, {r0, r1}
 8018206:	4611      	mov	r1, r2
 8018208:	4618      	mov	r0, r3
 801820a:	f7f8 fb8f 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 801820e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018212:	f9b4 1000 	ldrsh.w	r1, [r4]
 8018216:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801821a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801821e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8018222:	4299      	cmp	r1, r3
 8018224:	d10b      	bne.n	801823e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018226:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801822a:	4552      	cmp	r2, sl
 801822c:	d107      	bne.n	801823e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801822e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8018232:	455a      	cmp	r2, fp
 8018234:	d103      	bne.n	801823e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8018236:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801823a:	454a      	cmp	r2, r9
 801823c:	d06d      	beq.n	801831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801823e:	f1bb 0f00 	cmp.w	fp, #0
 8018242:	dd65      	ble.n	8018310 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8018244:	f1b9 0f00 	cmp.w	r9, #0
 8018248:	dd62      	ble.n	8018310 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801824a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801824e:	fa1f f08a 	uxth.w	r0, sl
 8018252:	4552      	cmp	r2, sl
 8018254:	9000      	str	r0, [sp, #0]
 8018256:	da12      	bge.n	801827e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8018258:	9301      	str	r3, [sp, #4]
 801825a:	9b00      	ldr	r3, [sp, #0]
 801825c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018260:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018264:	1a9a      	subs	r2, r3, r2
 8018266:	f8ad 1010 	strh.w	r1, [sp, #16]
 801826a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801826e:	f8ad 2016 	strh.w	r2, [sp, #22]
 8018272:	69ea      	ldr	r2, [r5, #28]
 8018274:	4631      	mov	r1, r6
 8018276:	4640      	mov	r0, r8
 8018278:	f7ff ff7a 	bl	8018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801827c:	9b01      	ldr	r3, [sp, #4]
 801827e:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018282:	429a      	cmp	r2, r3
 8018284:	b29f      	uxth	r7, r3
 8018286:	da0d      	bge.n	80182a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8018288:	f8ad 2010 	strh.w	r2, [sp, #16]
 801828c:	1aba      	subs	r2, r7, r2
 801828e:	f8ad a012 	strh.w	sl, [sp, #18]
 8018292:	f8ad 2014 	strh.w	r2, [sp, #20]
 8018296:	f8ad 9016 	strh.w	r9, [sp, #22]
 801829a:	69ea      	ldr	r2, [r5, #28]
 801829c:	4631      	mov	r1, r6
 801829e:	4640      	mov	r0, r8
 80182a0:	f7ff ff66 	bl	8018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80182a4:	8822      	ldrh	r2, [r4, #0]
 80182a6:	88a3      	ldrh	r3, [r4, #4]
 80182a8:	445f      	add	r7, fp
 80182aa:	4413      	add	r3, r2
 80182ac:	b29b      	uxth	r3, r3
 80182ae:	b2bf      	uxth	r7, r7
 80182b0:	b23a      	sxth	r2, r7
 80182b2:	b219      	sxth	r1, r3
 80182b4:	4291      	cmp	r1, r2
 80182b6:	dd0d      	ble.n	80182d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80182b8:	1bdb      	subs	r3, r3, r7
 80182ba:	f8ad 2010 	strh.w	r2, [sp, #16]
 80182be:	f8ad a012 	strh.w	sl, [sp, #18]
 80182c2:	f8ad 3014 	strh.w	r3, [sp, #20]
 80182c6:	f8ad 9016 	strh.w	r9, [sp, #22]
 80182ca:	69ea      	ldr	r2, [r5, #28]
 80182cc:	4631      	mov	r1, r6
 80182ce:	4640      	mov	r0, r8
 80182d0:	f7ff ff4e 	bl	8018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80182d4:	88e2      	ldrh	r2, [r4, #6]
 80182d6:	8863      	ldrh	r3, [r4, #2]
 80182d8:	4413      	add	r3, r2
 80182da:	9a00      	ldr	r2, [sp, #0]
 80182dc:	444a      	add	r2, r9
 80182de:	b29b      	uxth	r3, r3
 80182e0:	fa1f f982 	uxth.w	r9, r2
 80182e4:	fa0f f289 	sxth.w	r2, r9
 80182e8:	b219      	sxth	r1, r3
 80182ea:	428a      	cmp	r2, r1
 80182ec:	da15      	bge.n	801831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80182ee:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80182f2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80182f6:	f8ad 1014 	strh.w	r1, [sp, #20]
 80182fa:	eba3 0309 	sub.w	r3, r3, r9
 80182fe:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018302:	f8ad 2012 	strh.w	r2, [sp, #18]
 8018306:	f8ad 3016 	strh.w	r3, [sp, #22]
 801830a:	69ea      	ldr	r2, [r5, #28]
 801830c:	4631      	mov	r1, r6
 801830e:	e001      	b.n	8018314 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8018310:	69ea      	ldr	r2, [r5, #28]
 8018312:	4621      	mov	r1, r4
 8018314:	4640      	mov	r0, r8
 8018316:	f7ff ff2b 	bl	8018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801831a:	4628      	mov	r0, r5
 801831c:	f7ff fe94 	bl	8018048 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8018320:	6861      	ldr	r1, [r4, #4]
 8018322:	4602      	mov	r2, r0
 8018324:	6820      	ldr	r0, [r4, #0]
 8018326:	4633      	mov	r3, r6
 8018328:	c303      	stmia	r3!, {r0, r1}
 801832a:	4611      	mov	r1, r2
 801832c:	4630      	mov	r0, r6
 801832e:	f7f8 fafd 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 8018332:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8018336:	2b00      	cmp	r3, #0
 8018338:	f77f af33 	ble.w	80181a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801833c:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8018340:	2b00      	cmp	r3, #0
 8018342:	f77f af2e 	ble.w	80181a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8018346:	4628      	mov	r0, r5
 8018348:	f7ff fe9a 	bl	8018080 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801834c:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8018350:	1a18      	subs	r0, r3, r0
 8018352:	f8ad 0010 	strh.w	r0, [sp, #16]
 8018356:	4628      	mov	r0, r5
 8018358:	f7ff fea6 	bl	80180a8 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801835c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018360:	1a18      	subs	r0, r3, r0
 8018362:	f8ad 0012 	strh.w	r0, [sp, #18]
 8018366:	682b      	ldr	r3, [r5, #0]
 8018368:	4631      	mov	r1, r6
 801836a:	689b      	ldr	r3, [r3, #8]
 801836c:	4628      	mov	r0, r5
 801836e:	4798      	blx	r3
 8018370:	e717      	b.n	80181a2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08018372 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8018372:	b570      	push	{r4, r5, r6, lr}
 8018374:	460c      	mov	r4, r1
 8018376:	b086      	sub	sp, #24
 8018378:	1d06      	adds	r6, r0, #4
 801837a:	2300      	movs	r3, #0
 801837c:	4631      	mov	r1, r6
 801837e:	4605      	mov	r5, r0
 8018380:	a802      	add	r0, sp, #8
 8018382:	9301      	str	r3, [sp, #4]
 8018384:	f7ff fba8 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018388:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801838c:	8822      	ldrh	r2, [r4, #0]
 801838e:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8018392:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018396:	f8ad 0014 	strh.w	r0, [sp, #20]
 801839a:	1ad2      	subs	r2, r2, r3
 801839c:	8863      	ldrh	r3, [r4, #2]
 801839e:	f8ad 2010 	strh.w	r2, [sp, #16]
 80183a2:	1a5b      	subs	r3, r3, r1
 80183a4:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80183a8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80183ac:	aa01      	add	r2, sp, #4
 80183ae:	a904      	add	r1, sp, #16
 80183b0:	4630      	mov	r0, r6
 80183b2:	f8ad 3012 	strh.w	r3, [sp, #18]
 80183b6:	f7f8 fb91 	bl	8010adc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80183ba:	9a01      	ldr	r2, [sp, #4]
 80183bc:	b11a      	cbz	r2, 80183c6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80183be:	4621      	mov	r1, r4
 80183c0:	4628      	mov	r0, r5
 80183c2:	f7ff fed5 	bl	8018170 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80183c6:	b006      	add	sp, #24
 80183c8:	bd70      	pop	{r4, r5, r6, pc}

080183ca <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80183ca:	b530      	push	{r4, r5, lr}
 80183cc:	4602      	mov	r2, r0
 80183ce:	4604      	mov	r4, r0
 80183d0:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80183d4:	b085      	sub	sp, #20
 80183d6:	460d      	mov	r5, r1
 80183d8:	6851      	ldr	r1, [r2, #4]
 80183da:	466b      	mov	r3, sp
 80183dc:	c303      	stmia	r3!, {r0, r1}
 80183de:	4629      	mov	r1, r5
 80183e0:	4668      	mov	r0, sp
 80183e2:	f7f8 faa3 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 80183e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80183ea:	b12b      	cbz	r3, 80183f8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80183ec:	4669      	mov	r1, sp
 80183ee:	4620      	mov	r0, r4
 80183f0:	f7ff ffbf 	bl	8018372 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80183f4:	b005      	add	sp, #20
 80183f6:	bd30      	pop	{r4, r5, pc}
 80183f8:	3404      	adds	r4, #4
 80183fa:	4621      	mov	r1, r4
 80183fc:	a802      	add	r0, sp, #8
 80183fe:	f7ff fb6b 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8018402:	f8bd 3000 	ldrh.w	r3, [sp]
 8018406:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801840a:	1a9b      	subs	r3, r3, r2
 801840c:	f8ad 3000 	strh.w	r3, [sp]
 8018410:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018414:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018418:	4669      	mov	r1, sp
 801841a:	1a9b      	subs	r3, r3, r2
 801841c:	4620      	mov	r0, r4
 801841e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018422:	f7f8 fb22 	bl	8010a6a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8018426:	e7e5      	b.n	80183f4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08018428 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8018428:	680a      	ldr	r2, [r1, #0]
 801842a:	460b      	mov	r3, r1
 801842c:	6992      	ldr	r2, [r2, #24]
 801842e:	1d01      	adds	r1, r0, #4
 8018430:	4618      	mov	r0, r3
 8018432:	4710      	bx	r2

08018434 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst>:
 8018434:	4298      	cmp	r0, r3
 8018436:	d200      	bcs.n	801843a <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x6>
 8018438:	b913      	cbnz	r3, 8018440 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0xc>
 801843a:	440a      	add	r2, r1
 801843c:	b210      	sxth	r0, r2
 801843e:	4770      	bx	lr
 8018440:	ee07 0a90 	vmov	s15, r0
 8018444:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8018448:	ee07 3a90 	vmov	s15, r3
 801844c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018450:	eddf 4a15 	vldr	s9, [pc, #84]	; 80184a8 <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x74>
 8018454:	eddf 5a15 	vldr	s11, [pc, #84]	; 80184ac <_ZN8touchgfx15EasingEquations11backEaseOutEtsst+0x78>
 8018458:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801845c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018460:	ee37 7a66 	vsub.f32	s14, s14, s13
 8018464:	ee07 2a90 	vmov	s15, r2
 8018468:	eee7 5a24 	vfma.f32	s11, s14, s9
 801846c:	ee27 5a07 	vmul.f32	s10, s14, s14
 8018470:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8018474:	eee5 6a25 	vfma.f32	s13, s10, s11
 8018478:	ee07 1a90 	vmov	s15, r1
 801847c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018480:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018484:	eee6 7a26 	vfma.f32	s15, s12, s13
 8018488:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801848c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018490:	bfcc      	ite	gt
 8018492:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018496:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801849a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801849e:	ee17 3a90 	vmov	r3, s15
 80184a2:	b218      	sxth	r0, r3
 80184a4:	4770      	bx	lr
 80184a6:	bf00      	nop
 80184a8:	402ce6b0 	.word	0x402ce6b0
 80184ac:	3fd9cd60 	.word	0x3fd9cd60

080184b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80184b0:	4298      	cmp	r0, r3
 80184b2:	d200      	bcs.n	80184b6 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80184b4:	b913      	cbnz	r3, 80184bc <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80184b6:	440a      	add	r2, r1
 80184b8:	b210      	sxth	r0, r2
 80184ba:	4770      	bx	lr
 80184bc:	ee07 0a90 	vmov	s15, r0
 80184c0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80184c4:	ee07 3a90 	vmov	s15, r3
 80184c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80184cc:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80184d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80184d4:	ee37 7a66 	vsub.f32	s14, s14, s13
 80184d8:	ee07 2a90 	vmov	s15, r2
 80184dc:	ee67 5a07 	vmul.f32	s11, s14, s14
 80184e0:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80184e4:	eee5 6a87 	vfma.f32	s13, s11, s14
 80184e8:	ee07 1a90 	vmov	s15, r1
 80184ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80184f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80184f4:	eee6 7a26 	vfma.f32	s15, s12, s13
 80184f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80184fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018500:	bfcc      	ite	gt
 8018502:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018506:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 801850a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801850e:	ee17 3a90 	vmov	r3, s15
 8018512:	b218      	sxth	r0, r3
 8018514:	4770      	bx	lr

08018516 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8018516:	4298      	cmp	r0, r3
 8018518:	d200      	bcs.n	801851c <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801851a:	b913      	cbnz	r3, 8018522 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 801851c:	440a      	add	r2, r1
 801851e:	b210      	sxth	r0, r2
 8018520:	4770      	bx	lr
 8018522:	ee07 2a90 	vmov	s15, r2
 8018526:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801852a:	ee07 0a90 	vmov	s15, r0
 801852e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8018532:	ee67 7a27 	vmul.f32	s15, s14, s15
 8018536:	ee07 3a10 	vmov	s14, r3
 801853a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801853e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018542:	ee07 1a90 	vmov	s15, r1
 8018546:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801854a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801854e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8018552:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801855a:	bfcc      	ite	gt
 801855c:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8018560:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8018564:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018568:	ee17 3a90 	vmov	r3, s15
 801856c:	b218      	sxth	r0, r3
 801856e:	4770      	bx	lr

08018570 <_ZN8touchgfx12TextProviderC1Ev>:
 8018570:	b538      	push	{r3, r4, r5, lr}
 8018572:	2500      	movs	r5, #0
 8018574:	2302      	movs	r3, #2
 8018576:	4604      	mov	r4, r0
 8018578:	e9c0 5500 	strd	r5, r5, [r0]
 801857c:	7403      	strb	r3, [r0, #16]
 801857e:	6145      	str	r5, [r0, #20]
 8018580:	7605      	strb	r5, [r0, #24]
 8018582:	83c5      	strh	r5, [r0, #30]
 8018584:	8405      	strh	r5, [r0, #32]
 8018586:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018588:	8705      	strh	r5, [r0, #56]	; 0x38
 801858a:	87c5      	strh	r5, [r0, #62]	; 0x3e
 801858c:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8018590:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8018594:	220e      	movs	r2, #14
 8018596:	4629      	mov	r1, r5
 8018598:	304c      	adds	r0, #76	; 0x4c
 801859a:	f013 f9e6 	bl	802b96a <memset>
 801859e:	2301      	movs	r3, #1
 80185a0:	4620      	mov	r0, r4
 80185a2:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80185a6:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80185aa:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80185ae:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80185b2:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80185b6:	f7f0 f977 	bl	80088a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80185ba:	4620      	mov	r0, r4
 80185bc:	bd38      	pop	{r3, r4, r5, pc}

080185be <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80185be:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80185c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185c4:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80185c6:	fab0 f080 	clz	r0, r0
 80185ca:	0940      	lsrs	r0, r0, #5
 80185cc:	4770      	bx	lr

080185ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80185ce:	b530      	push	{r4, r5, lr}
 80185d0:	2500      	movs	r5, #0
 80185d2:	2401      	movs	r4, #1
 80185d4:	6843      	ldr	r3, [r0, #4]
 80185d6:	b913      	cbnz	r3, 80185de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80185d8:	6803      	ldr	r3, [r0, #0]
 80185da:	b313      	cbz	r3, 8018622 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80185dc:	6043      	str	r3, [r0, #4]
 80185de:	7e03      	ldrb	r3, [r0, #24]
 80185e0:	b143      	cbz	r3, 80185f4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80185e2:	6943      	ldr	r3, [r0, #20]
 80185e4:	b12b      	cbz	r3, 80185f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80185e6:	881a      	ldrh	r2, [r3, #0]
 80185e8:	b11a      	cbz	r2, 80185f2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80185ea:	1c9a      	adds	r2, r3, #2
 80185ec:	6142      	str	r2, [r0, #20]
 80185ee:	8818      	ldrh	r0, [r3, #0]
 80185f0:	bd30      	pop	{r4, r5, pc}
 80185f2:	7605      	strb	r5, [r0, #24]
 80185f4:	6843      	ldr	r3, [r0, #4]
 80185f6:	8819      	ldrh	r1, [r3, #0]
 80185f8:	b199      	cbz	r1, 8018622 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80185fa:	1c9a      	adds	r2, r3, #2
 80185fc:	2902      	cmp	r1, #2
 80185fe:	6042      	str	r2, [r0, #4]
 8018600:	d1f5      	bne.n	80185ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8018602:	7c03      	ldrb	r3, [r0, #16]
 8018604:	2b01      	cmp	r3, #1
 8018606:	d8e5      	bhi.n	80185d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018608:	1c5a      	adds	r2, r3, #1
 801860a:	3302      	adds	r3, #2
 801860c:	7402      	strb	r2, [r0, #16]
 801860e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8018612:	6143      	str	r3, [r0, #20]
 8018614:	2b00      	cmp	r3, #0
 8018616:	d0dd      	beq.n	80185d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018618:	881b      	ldrh	r3, [r3, #0]
 801861a:	2b00      	cmp	r3, #0
 801861c:	d0da      	beq.n	80185d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801861e:	7604      	strb	r4, [r0, #24]
 8018620:	e7d8      	b.n	80185d4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8018622:	2000      	movs	r0, #0
 8018624:	e7e4      	b.n	80185f0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8018626:	b430      	push	{r4, r5}
 8018628:	6001      	str	r1, [r0, #0]
 801862a:	2100      	movs	r1, #0
 801862c:	6041      	str	r1, [r0, #4]
 801862e:	6815      	ldr	r5, [r2, #0]
 8018630:	6085      	str	r5, [r0, #8]
 8018632:	6852      	ldr	r2, [r2, #4]
 8018634:	6443      	str	r3, [r0, #68]	; 0x44
 8018636:	9b02      	ldr	r3, [sp, #8]
 8018638:	60c2      	str	r2, [r0, #12]
 801863a:	7401      	strb	r1, [r0, #16]
 801863c:	6141      	str	r1, [r0, #20]
 801863e:	7601      	strb	r1, [r0, #24]
 8018640:	8701      	strh	r1, [r0, #56]	; 0x38
 8018642:	8401      	strh	r1, [r0, #32]
 8018644:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8018648:	6483      	str	r3, [r0, #72]	; 0x48
 801864a:	bc30      	pop	{r4, r5}
 801864c:	f7f0 b92c 	b.w	80088a8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08018650 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8018650:	b408      	push	{r3}
 8018652:	b510      	push	{r4, lr}
 8018654:	b085      	sub	sp, #20
 8018656:	ac07      	add	r4, sp, #28
 8018658:	f854 3b04 	ldr.w	r3, [r4], #4
 801865c:	9300      	str	r3, [sp, #0]
 801865e:	4613      	mov	r3, r2
 8018660:	4622      	mov	r2, r4
 8018662:	9403      	str	r4, [sp, #12]
 8018664:	f7ff ffdf 	bl	8018626 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8018668:	b005      	add	sp, #20
 801866a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801866e:	b001      	add	sp, #4
 8018670:	4770      	bx	lr

08018672 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8018672:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018674:	4605      	mov	r5, r0
 8018676:	4608      	mov	r0, r1
 8018678:	b1e9      	cbz	r1, 80186b6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 801867a:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801867e:	460b      	mov	r3, r1
 8018680:	f101 0708 	add.w	r7, r1, #8
 8018684:	4622      	mov	r2, r4
 8018686:	6818      	ldr	r0, [r3, #0]
 8018688:	6859      	ldr	r1, [r3, #4]
 801868a:	4626      	mov	r6, r4
 801868c:	c603      	stmia	r6!, {r0, r1}
 801868e:	3308      	adds	r3, #8
 8018690:	42bb      	cmp	r3, r7
 8018692:	4634      	mov	r4, r6
 8018694:	d1f7      	bne.n	8018686 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018696:	6818      	ldr	r0, [r3, #0]
 8018698:	6030      	str	r0, [r6, #0]
 801869a:	889b      	ldrh	r3, [r3, #4]
 801869c:	80b3      	strh	r3, [r6, #4]
 801869e:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80186a2:	015b      	lsls	r3, r3, #5
 80186a4:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80186a8:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80186ac:	430b      	orrs	r3, r1
 80186ae:	425b      	negs	r3, r3
 80186b0:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80186b4:	4610      	mov	r0, r2
 80186b6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080186b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80186b8:	b538      	push	{r3, r4, r5, lr}
 80186ba:	460c      	mov	r4, r1
 80186bc:	6811      	ldr	r1, [r2, #0]
 80186be:	4610      	mov	r0, r2
 80186c0:	68cd      	ldr	r5, [r1, #12]
 80186c2:	4619      	mov	r1, r3
 80186c4:	47a8      	blx	r5
 80186c6:	2800      	cmp	r0, #0
 80186c8:	bf08      	it	eq
 80186ca:	4620      	moveq	r0, r4
 80186cc:	bd38      	pop	{r3, r4, r5, pc}
	...

080186d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80186d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80186d2:	4604      	mov	r4, r0
 80186d4:	4615      	mov	r5, r2
 80186d6:	4608      	mov	r0, r1
 80186d8:	b93a      	cbnz	r2, 80186ea <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80186da:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80186de:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80186e2:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80186e6:	4628      	mov	r0, r5
 80186e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80186ea:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80186ee:	8893      	ldrh	r3, [r2, #4]
 80186f0:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80186f4:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80186f8:	79ee      	ldrb	r6, [r5, #7]
 80186fa:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80186fe:	4316      	orrs	r6, r2
 8018700:	19da      	adds	r2, r3, r7
 8018702:	b291      	uxth	r1, r2
 8018704:	291d      	cmp	r1, #29
 8018706:	b2b7      	uxth	r7, r6
 8018708:	d87a      	bhi.n	8018800 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801870a:	2201      	movs	r2, #1
 801870c:	408a      	lsls	r2, r1
 801870e:	4975      	ldr	r1, [pc, #468]	; (80188e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8018710:	420a      	tst	r2, r1
 8018712:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8018716:	d12d      	bne.n	8018774 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8018718:	f412 7f60 	tst.w	r2, #896	; 0x380
 801871c:	d070      	beq.n	8018800 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801871e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8018722:	462b      	mov	r3, r5
 8018724:	f105 0e08 	add.w	lr, r5, #8
 8018728:	4615      	mov	r5, r2
 801872a:	6818      	ldr	r0, [r3, #0]
 801872c:	6859      	ldr	r1, [r3, #4]
 801872e:	4694      	mov	ip, r2
 8018730:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8018734:	3308      	adds	r3, #8
 8018736:	4573      	cmp	r3, lr
 8018738:	4662      	mov	r2, ip
 801873a:	d1f6      	bne.n	801872a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 801873c:	6818      	ldr	r0, [r3, #0]
 801873e:	f8cc 0000 	str.w	r0, [ip]
 8018742:	889b      	ldrh	r3, [r3, #4]
 8018744:	f8ac 3004 	strh.w	r3, [ip, #4]
 8018748:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 801874c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8018750:	b2b3      	uxth	r3, r6
 8018752:	1aca      	subs	r2, r1, r3
 8018754:	b292      	uxth	r2, r2
 8018756:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 801875a:	10d2      	asrs	r2, r2, #3
 801875c:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8018760:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8018764:	4302      	orrs	r2, r0
 8018766:	1bcf      	subs	r7, r1, r7
 8018768:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 801876c:	1afb      	subs	r3, r7, r3
 801876e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018772:	e7b8      	b.n	80186e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018774:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018776:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801877a:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 801877c:	f640 6333 	movw	r3, #3635	; 0xe33
 8018780:	4299      	cmp	r1, r3
 8018782:	d110      	bne.n	80187a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8018784:	6803      	ldr	r3, [r0, #0]
 8018786:	68db      	ldr	r3, [r3, #12]
 8018788:	4798      	blx	r3
 801878a:	7b41      	ldrb	r1, [r0, #13]
 801878c:	00cb      	lsls	r3, r1, #3
 801878e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018792:	7a03      	ldrb	r3, [r0, #8]
 8018794:	0648      	lsls	r0, r1, #25
 8018796:	ea43 0302 	orr.w	r3, r3, r2
 801879a:	bf44      	itt	mi
 801879c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80187a0:	b21b      	sxthmi	r3, r3
 80187a2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80187a6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80187aa:	443b      	add	r3, r7
 80187ac:	4433      	add	r3, r6
 80187ae:	b29b      	uxth	r3, r3
 80187b0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80187b4:	462a      	mov	r2, r5
 80187b6:	f105 0c08 	add.w	ip, r5, #8
 80187ba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80187be:	4635      	mov	r5, r6
 80187c0:	6810      	ldr	r0, [r2, #0]
 80187c2:	6851      	ldr	r1, [r2, #4]
 80187c4:	4637      	mov	r7, r6
 80187c6:	c703      	stmia	r7!, {r0, r1}
 80187c8:	3208      	adds	r2, #8
 80187ca:	4562      	cmp	r2, ip
 80187cc:	463e      	mov	r6, r7
 80187ce:	d1f7      	bne.n	80187c0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80187d0:	6810      	ldr	r0, [r2, #0]
 80187d2:	6038      	str	r0, [r7, #0]
 80187d4:	8892      	ldrh	r2, [r2, #4]
 80187d6:	80ba      	strh	r2, [r7, #4]
 80187d8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80187dc:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80187e0:	10db      	asrs	r3, r3, #3
 80187e2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80187e6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80187ea:	4313      	orrs	r3, r2
 80187ec:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80187f0:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80187f4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80187f8:	1a9b      	subs	r3, r3, r2
 80187fa:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80187fe:	e772      	b.n	80186e6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8018800:	f023 0204 	bic.w	r2, r3, #4
 8018804:	f640 611b 	movw	r1, #3611	; 0xe1b
 8018808:	428a      	cmp	r2, r1
 801880a:	d003      	beq.n	8018814 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 801880c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8018810:	4293      	cmp	r3, r2
 8018812:	d120      	bne.n	8018856 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8018814:	3b01      	subs	r3, #1
 8018816:	4602      	mov	r2, r0
 8018818:	b29b      	uxth	r3, r3
 801881a:	4629      	mov	r1, r5
 801881c:	4620      	mov	r0, r4
 801881e:	f7ff ff4b 	bl	80186b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018822:	7b41      	ldrb	r1, [r0, #13]
 8018824:	00cb      	lsls	r3, r1, #3
 8018826:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801882a:	7a03      	ldrb	r3, [r0, #8]
 801882c:	0649      	lsls	r1, r1, #25
 801882e:	ea43 0302 	orr.w	r3, r3, r2
 8018832:	bf44      	itt	mi
 8018834:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018838:	b21b      	sxthmi	r3, r3
 801883a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801883e:	7b6b      	ldrb	r3, [r5, #13]
 8018840:	7aaa      	ldrb	r2, [r5, #10]
 8018842:	005b      	lsls	r3, r3, #1
 8018844:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8018848:	4313      	orrs	r3, r2
 801884a:	115a      	asrs	r2, r3, #5
 801884c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8018850:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018854:	e036      	b.n	80188c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8018856:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 801885a:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801885e:	7a2a      	ldrb	r2, [r5, #8]
 8018860:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8018864:	ea42 0201 	orr.w	r2, r2, r1
 8018868:	bf1c      	itt	ne
 801886a:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801886e:	b212      	sxthne	r2, r2
 8018870:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8018874:	f640 6109 	movw	r1, #3593	; 0xe09
 8018878:	f023 0210 	bic.w	r2, r3, #16
 801887c:	428a      	cmp	r2, r1
 801887e:	d003      	beq.n	8018888 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8018880:	f640 6213 	movw	r2, #3603	; 0xe13
 8018884:	4293      	cmp	r3, r2
 8018886:	d12a      	bne.n	80188de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8018888:	7b6e      	ldrb	r6, [r5, #13]
 801888a:	0076      	lsls	r6, r6, #1
 801888c:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8018890:	7aae      	ldrb	r6, [r5, #10]
 8018892:	4316      	orrs	r6, r2
 8018894:	f640 6213 	movw	r2, #3603	; 0xe13
 8018898:	4293      	cmp	r3, r2
 801889a:	bf18      	it	ne
 801889c:	f103 33ff 	addne.w	r3, r3, #4294967295
 80188a0:	4602      	mov	r2, r0
 80188a2:	bf14      	ite	ne
 80188a4:	b29b      	uxthne	r3, r3
 80188a6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80188aa:	4629      	mov	r1, r5
 80188ac:	4620      	mov	r0, r4
 80188ae:	f7ff ff03 	bl	80186b8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80188b2:	7b43      	ldrb	r3, [r0, #13]
 80188b4:	7a82      	ldrb	r2, [r0, #10]
 80188b6:	005b      	lsls	r3, r3, #1
 80188b8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80188bc:	4313      	orrs	r3, r2
 80188be:	1af6      	subs	r6, r6, r3
 80188c0:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80188c4:	7b69      	ldrb	r1, [r5, #13]
 80188c6:	00cb      	lsls	r3, r1, #3
 80188c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80188cc:	7a2b      	ldrb	r3, [r5, #8]
 80188ce:	4313      	orrs	r3, r2
 80188d0:	064a      	lsls	r2, r1, #25
 80188d2:	bf44      	itt	mi
 80188d4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80188d8:	b21b      	sxthmi	r3, r3
 80188da:	1bdb      	subs	r3, r3, r7
 80188dc:	e747      	b.n	801876e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80188de:	2300      	movs	r3, #0
 80188e0:	e7b6      	b.n	8018850 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80188e2:	bf00      	nop
 80188e4:	3fc00079 	.word	0x3fc00079

080188e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80188e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80188ec:	4604      	mov	r4, r0
 80188ee:	b942      	cbnz	r2, 8018902 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80188f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80188f4:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80188f8:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80188fc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8018900:	e047      	b.n	8018992 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018902:	7b51      	ldrb	r1, [r2, #13]
 8018904:	8893      	ldrh	r3, [r2, #4]
 8018906:	010d      	lsls	r5, r1, #4
 8018908:	f405 7080 	and.w	r0, r5, #256	; 0x100
 801890c:	79d5      	ldrb	r5, [r2, #7]
 801890e:	4305      	orrs	r5, r0
 8018910:	2d04      	cmp	r5, #4
 8018912:	bfcc      	ite	gt
 8018914:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8018918:	f04f 0e01 	movle.w	lr, #1
 801891c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8018920:	f200 80ab 	bhi.w	8018a7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8018924:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8018928:	4283      	cmp	r3, r0
 801892a:	d216      	bcs.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801892c:	f240 605b 	movw	r0, #1627	; 0x65b
 8018930:	4283      	cmp	r3, r0
 8018932:	d859      	bhi.n	80189e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8018934:	f240 6057 	movw	r0, #1623	; 0x657
 8018938:	4283      	cmp	r3, r0
 801893a:	d20e      	bcs.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801893c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8018940:	d24a      	bcs.n	80189d8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018942:	f240 604e 	movw	r0, #1614	; 0x64e
 8018946:	4283      	cmp	r3, r0
 8018948:	d207      	bcs.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801894a:	f240 601a 	movw	r0, #1562	; 0x61a
 801894e:	4283      	cmp	r3, r0
 8018950:	d02a      	beq.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018952:	d821      	bhi.n	8018998 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018954:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8018958:	d35b      	bcc.n	8018a12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801895a:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801895e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018962:	f040 80d0 	bne.w	8018b06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018966:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 801896a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801896e:	f040 80ca 	bne.w	8018b06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018972:	00cb      	lsls	r3, r1, #3
 8018974:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018978:	7a13      	ldrb	r3, [r2, #8]
 801897a:	0649      	lsls	r1, r1, #25
 801897c:	ea43 0300 	orr.w	r3, r3, r0
 8018980:	bf44      	itt	mi
 8018982:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018986:	b21b      	sxthmi	r3, r3
 8018988:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801898c:	1b5d      	subs	r5, r3, r5
 801898e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018992:	4610      	mov	r0, r2
 8018994:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018998:	f240 604b 	movw	r0, #1611	; 0x64b
 801899c:	4283      	cmp	r3, r0
 801899e:	d338      	bcc.n	8018a12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80189a0:	f240 604c 	movw	r0, #1612	; 0x64c
 80189a4:	4283      	cmp	r3, r0
 80189a6:	d9d8      	bls.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189a8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80189ac:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80189b0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80189b4:	f040 80f2 	bne.w	8018b9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80189b8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80189bc:	f040 80ee 	bne.w	8018b9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80189c0:	00cb      	lsls	r3, r1, #3
 80189c2:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80189c6:	7a13      	ldrb	r3, [r2, #8]
 80189c8:	064e      	lsls	r6, r1, #25
 80189ca:	ea43 0300 	orr.w	r3, r3, r0
 80189ce:	bf44      	itt	mi
 80189d0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80189d4:	b21b      	sxthmi	r3, r3
 80189d6:	e7d9      	b.n	801898c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80189d8:	f240 6054 	movw	r0, #1620	; 0x654
 80189dc:	4283      	cmp	r3, r0
 80189de:	d8e3      	bhi.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189e0:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80189e4:	d9e0      	bls.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80189e6:	e7b8      	b.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189e8:	f240 6074 	movw	r0, #1652	; 0x674
 80189ec:	4283      	cmp	r3, r0
 80189ee:	d0b4      	beq.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80189f0:	d82d      	bhi.n	8018a4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80189f2:	f240 605e 	movw	r0, #1630	; 0x65e
 80189f6:	4283      	cmp	r3, r0
 80189f8:	d804      	bhi.n	8018a04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80189fa:	f240 605d 	movw	r0, #1629	; 0x65d
 80189fe:	4283      	cmp	r3, r0
 8018a00:	d3d2      	bcc.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a02:	e7aa      	b.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a04:	f240 605f 	movw	r0, #1631	; 0x65f
 8018a08:	4283      	cmp	r3, r0
 8018a0a:	d0cd      	beq.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a0c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8018a10:	d0a3      	beq.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a12:	00cb      	lsls	r3, r1, #3
 8018a14:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8018a18:	7a13      	ldrb	r3, [r2, #8]
 8018a1a:	0649      	lsls	r1, r1, #25
 8018a1c:	ea43 0300 	orr.w	r3, r3, r0
 8018a20:	bf44      	itt	mi
 8018a22:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018a26:	b21b      	sxthmi	r3, r3
 8018a28:	1b5d      	subs	r5, r3, r5
 8018a2a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018a2e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018a32:	7b53      	ldrb	r3, [r2, #13]
 8018a34:	015b      	lsls	r3, r3, #5
 8018a36:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8018a3a:	7993      	ldrb	r3, [r2, #6]
 8018a3c:	430b      	orrs	r3, r1
 8018a3e:	005b      	lsls	r3, r3, #1
 8018a40:	2105      	movs	r1, #5
 8018a42:	fb93 f3f1 	sdiv	r3, r3, r1
 8018a46:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8018a4a:	440b      	add	r3, r1
 8018a4c:	e756      	b.n	80188fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018a4e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8018a52:	4283      	cmp	r3, r0
 8018a54:	d809      	bhi.n	8018a6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8018a56:	f240 60df 	movw	r0, #1759	; 0x6df
 8018a5a:	4283      	cmp	r3, r0
 8018a5c:	f4bf af7d 	bcs.w	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a60:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8018a64:	2b05      	cmp	r3, #5
 8018a66:	d8d4      	bhi.n	8018a12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018a68:	e777      	b.n	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a6a:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8018a6e:	4283      	cmp	r3, r0
 8018a70:	d09a      	beq.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a72:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8018a76:	4283      	cmp	r3, r0
 8018a78:	e7ca      	b.n	8018a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8018a7a:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8018a7e:	d22b      	bcs.n	8018ad8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018a80:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8018a84:	4283      	cmp	r3, r0
 8018a86:	d28f      	bcs.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018a88:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8018a8c:	4283      	cmp	r3, r0
 8018a8e:	d816      	bhi.n	8018abe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018a90:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8018a94:	4283      	cmp	r3, r0
 8018a96:	f4bf af60 	bcs.w	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018a9a:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8018a9e:	4283      	cmp	r3, r0
 8018aa0:	d80a      	bhi.n	8018ab8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018aa2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8018aa6:	4283      	cmp	r3, r0
 8018aa8:	f4bf af57 	bcs.w	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018aac:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8018ab0:	4283      	cmp	r3, r0
 8018ab2:	f43f af79 	beq.w	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ab6:	e7ac      	b.n	8018a12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018ab8:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8018abc:	e7f8      	b.n	8018ab0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018abe:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8018ac2:	4283      	cmp	r3, r0
 8018ac4:	d802      	bhi.n	8018acc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8018ac6:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8018aca:	e798      	b.n	80189fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018acc:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8018ad0:	4283      	cmp	r3, r0
 8018ad2:	f47f af42 	bne.w	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018ad6:	e767      	b.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ad8:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8018adc:	4283      	cmp	r3, r0
 8018ade:	f43f af63 	beq.w	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018ae2:	d802      	bhi.n	8018aea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8018ae4:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8018ae8:	e7f2      	b.n	8018ad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8018aea:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8018aee:	4283      	cmp	r3, r0
 8018af0:	d805      	bhi.n	8018afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8018af2:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8018af6:	4283      	cmp	r3, r0
 8018af8:	f4ff af2f 	bcc.w	801895a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018afc:	e754      	b.n	80189a8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018afe:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8018b02:	4283      	cmp	r3, r0
 8018b04:	e7af      	b.n	8018a66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8018b06:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018b0a:	4617      	mov	r7, r2
 8018b0c:	f102 0808 	add.w	r8, r2, #8
 8018b10:	4666      	mov	r6, ip
 8018b12:	6838      	ldr	r0, [r7, #0]
 8018b14:	6879      	ldr	r1, [r7, #4]
 8018b16:	46e6      	mov	lr, ip
 8018b18:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8018b1c:	3708      	adds	r7, #8
 8018b1e:	4547      	cmp	r7, r8
 8018b20:	46f4      	mov	ip, lr
 8018b22:	d1f6      	bne.n	8018b12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8018b24:	6838      	ldr	r0, [r7, #0]
 8018b26:	f8ce 0000 	str.w	r0, [lr]
 8018b2a:	88b9      	ldrh	r1, [r7, #4]
 8018b2c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8018b30:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018b34:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018b38:	d009      	beq.n	8018b4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8018b3a:	7b51      	ldrb	r1, [r2, #13]
 8018b3c:	7992      	ldrb	r2, [r2, #6]
 8018b3e:	0149      	lsls	r1, r1, #5
 8018b40:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018b44:	4311      	orrs	r1, r2
 8018b46:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018b4a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018b4e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018b52:	b2ad      	uxth	r5, r5
 8018b54:	d00d      	beq.n	8018b72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8018b56:	442b      	add	r3, r5
 8018b58:	b29b      	uxth	r3, r3
 8018b5a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018b5e:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018b62:	10db      	asrs	r3, r3, #3
 8018b64:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018b68:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018b6c:	4313      	orrs	r3, r2
 8018b6e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018b72:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018b76:	00cb      	lsls	r3, r1, #3
 8018b78:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018b7c:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018b80:	064f      	lsls	r7, r1, #25
 8018b82:	ea43 0302 	orr.w	r3, r3, r2
 8018b86:	bf44      	itt	mi
 8018b88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018b8c:	b21b      	sxthmi	r3, r3
 8018b8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8018b92:	1b5b      	subs	r3, r3, r5
 8018b94:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8018b98:	4632      	mov	r2, r6
 8018b9a:	e6fa      	b.n	8018992 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018b9c:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8018ba0:	4617      	mov	r7, r2
 8018ba2:	f102 0908 	add.w	r9, r2, #8
 8018ba6:	4666      	mov	r6, ip
 8018ba8:	6838      	ldr	r0, [r7, #0]
 8018baa:	6879      	ldr	r1, [r7, #4]
 8018bac:	46e0      	mov	r8, ip
 8018bae:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8018bb2:	3708      	adds	r7, #8
 8018bb4:	454f      	cmp	r7, r9
 8018bb6:	46c4      	mov	ip, r8
 8018bb8:	d1f6      	bne.n	8018ba8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8018bba:	6838      	ldr	r0, [r7, #0]
 8018bbc:	f8c8 0000 	str.w	r0, [r8]
 8018bc0:	88b9      	ldrh	r1, [r7, #4]
 8018bc2:	f8a8 1004 	strh.w	r1, [r8, #4]
 8018bc6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8018bca:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8018bce:	d009      	beq.n	8018be4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8018bd0:	7b51      	ldrb	r1, [r2, #13]
 8018bd2:	7992      	ldrb	r2, [r2, #6]
 8018bd4:	0149      	lsls	r1, r1, #5
 8018bd6:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8018bda:	4311      	orrs	r1, r2
 8018bdc:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018be0:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8018be4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8018be8:	d00e      	beq.n	8018c08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8018bea:	eba3 030e 	sub.w	r3, r3, lr
 8018bee:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8018bf2:	b29b      	uxth	r3, r3
 8018bf4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8018bf8:	10db      	asrs	r3, r3, #3
 8018bfa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8018bfe:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8018c02:	4313      	orrs	r3, r2
 8018c04:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8018c08:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8018c0c:	00cb      	lsls	r3, r1, #3
 8018c0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8018c12:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8018c16:	0648      	lsls	r0, r1, #25
 8018c18:	ea43 0302 	orr.w	r3, r3, r2
 8018c1c:	bf44      	itt	mi
 8018c1e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8018c22:	b21b      	sxthmi	r3, r3
 8018c24:	1b5d      	subs	r5, r3, r5
 8018c26:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8018c2a:	e7b5      	b.n	8018b98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08018c2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8018c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018c30:	461e      	mov	r6, r3
 8018c32:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018c34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018c38:	4604      	mov	r4, r0
 8018c3a:	4617      	mov	r7, r2
 8018c3c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018c40:	f7ef fdf0 	bl	8008824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018c44:	4605      	mov	r5, r0
 8018c46:	b918      	cbnz	r0, 8018c50 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018c48:	6030      	str	r0, [r6, #0]
 8018c4a:	4628      	mov	r0, r5
 8018c4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018c50:	683b      	ldr	r3, [r7, #0]
 8018c52:	4601      	mov	r1, r0
 8018c54:	68db      	ldr	r3, [r3, #12]
 8018c56:	4638      	mov	r0, r7
 8018c58:	4798      	blx	r3
 8018c5a:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018c5e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018c62:	4602      	mov	r2, r0
 8018c64:	6030      	str	r0, [r6, #0]
 8018c66:	d213      	bcs.n	8018c90 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018c68:	4643      	mov	r3, r8
 8018c6a:	4639      	mov	r1, r7
 8018c6c:	4620      	mov	r0, r4
 8018c6e:	f7ff fe3b 	bl	80188e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018c72:	6030      	str	r0, [r6, #0]
 8018c74:	6833      	ldr	r3, [r6, #0]
 8018c76:	b143      	cbz	r3, 8018c8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018c78:	7b5a      	ldrb	r2, [r3, #13]
 8018c7a:	7a9b      	ldrb	r3, [r3, #10]
 8018c7c:	0052      	lsls	r2, r2, #1
 8018c7e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018c82:	4313      	orrs	r3, r2
 8018c84:	bf0c      	ite	eq
 8018c86:	2301      	moveq	r3, #1
 8018c88:	2300      	movne	r3, #0
 8018c8a:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018c8e:	e7dc      	b.n	8018c4a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018c90:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018c94:	b29b      	uxth	r3, r3
 8018c96:	2b7f      	cmp	r3, #127	; 0x7f
 8018c98:	d804      	bhi.n	8018ca4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018c9a:	4639      	mov	r1, r7
 8018c9c:	4620      	mov	r0, r4
 8018c9e:	f7ff fd17 	bl	80186d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018ca2:	e7e6      	b.n	8018c72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8018ca4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018ca8:	2b00      	cmp	r3, #0
 8018caa:	d0e3      	beq.n	8018c74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018cac:	f640 1302 	movw	r3, #2306	; 0x902
 8018cb0:	429d      	cmp	r5, r3
 8018cb2:	d1df      	bne.n	8018c74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018cb4:	4601      	mov	r1, r0
 8018cb6:	4620      	mov	r0, r4
 8018cb8:	f7ff fcdb 	bl	8018672 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018cbc:	e7d9      	b.n	8018c72 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018cbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8018cbe:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8018cc2:	461e      	mov	r6, r3
 8018cc4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018cc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018cca:	4604      	mov	r4, r0
 8018ccc:	4617      	mov	r7, r2
 8018cce:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018cd2:	f7ef fda7 	bl	8008824 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8018cd6:	4605      	mov	r5, r0
 8018cd8:	b918      	cbnz	r0, 8018ce2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8018cda:	6030      	str	r0, [r6, #0]
 8018cdc:	4628      	mov	r0, r5
 8018cde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8018ce2:	683b      	ldr	r3, [r7, #0]
 8018ce4:	4601      	mov	r1, r0
 8018ce6:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8018cea:	4638      	mov	r0, r7
 8018cec:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8018cf0:	47c8      	blx	r9
 8018cf2:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8018cf6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8018cfa:	4602      	mov	r2, r0
 8018cfc:	6030      	str	r0, [r6, #0]
 8018cfe:	d213      	bcs.n	8018d28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8018d00:	4643      	mov	r3, r8
 8018d02:	4639      	mov	r1, r7
 8018d04:	4620      	mov	r0, r4
 8018d06:	f7ff fdef 	bl	80188e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8018d0a:	6030      	str	r0, [r6, #0]
 8018d0c:	6833      	ldr	r3, [r6, #0]
 8018d0e:	b143      	cbz	r3, 8018d22 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8018d10:	7b5a      	ldrb	r2, [r3, #13]
 8018d12:	7a9b      	ldrb	r3, [r3, #10]
 8018d14:	0052      	lsls	r2, r2, #1
 8018d16:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8018d1a:	4313      	orrs	r3, r2
 8018d1c:	bf0c      	ite	eq
 8018d1e:	2301      	moveq	r3, #1
 8018d20:	2300      	movne	r3, #0
 8018d22:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8018d26:	e7d9      	b.n	8018cdc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8018d28:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8018d2c:	b29b      	uxth	r3, r3
 8018d2e:	2b7f      	cmp	r3, #127	; 0x7f
 8018d30:	d804      	bhi.n	8018d3c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8018d32:	4639      	mov	r1, r7
 8018d34:	4620      	mov	r0, r4
 8018d36:	f7ff fccb 	bl	80186d0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8018d3a:	e7e6      	b.n	8018d0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8018d3c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8018d40:	2b00      	cmp	r3, #0
 8018d42:	d0e3      	beq.n	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018d44:	f640 1302 	movw	r3, #2306	; 0x902
 8018d48:	429d      	cmp	r5, r3
 8018d4a:	d1df      	bne.n	8018d0c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8018d4c:	4601      	mov	r1, r0
 8018d4e:	4620      	mov	r0, r4
 8018d50:	f7ff fc8f 	bl	8018672 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018d54:	e7d9      	b.n	8018d0a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08018d56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018d56:	b510      	push	{r4, lr}
 8018d58:	4604      	mov	r4, r0
 8018d5a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8018d5e:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018d60:	b1f1      	cbz	r1, 8018da0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018d62:	2b0a      	cmp	r3, #10
 8018d64:	d02f      	beq.n	8018dc6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018d66:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8018d68:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8018d6c:	3901      	subs	r1, #1
 8018d6e:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8018d70:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8018d74:	1c51      	adds	r1, r2, #1
 8018d76:	b289      	uxth	r1, r1
 8018d78:	2901      	cmp	r1, #1
 8018d7a:	bf84      	itt	hi
 8018d7c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8018d80:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8018d82:	f103 0201 	add.w	r2, r3, #1
 8018d86:	8722      	strh	r2, [r4, #56]	; 0x38
 8018d88:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018d8a:	bf98      	it	ls
 8018d8c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8018d8e:	4413      	add	r3, r2
 8018d90:	b29b      	uxth	r3, r3
 8018d92:	2b09      	cmp	r3, #9
 8018d94:	bf88      	it	hi
 8018d96:	3b0a      	subhi	r3, #10
 8018d98:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018d9c:	8458      	strh	r0, [r3, #34]	; 0x22
 8018d9e:	e7dc      	b.n	8018d5a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8018da0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018da2:	2b0a      	cmp	r3, #10
 8018da4:	d00f      	beq.n	8018dc6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8018da6:	4620      	mov	r0, r4
 8018da8:	f7ff fc11 	bl	80185ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8018dac:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8018dae:	1c5a      	adds	r2, r3, #1
 8018db0:	8722      	strh	r2, [r4, #56]	; 0x38
 8018db2:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8018db4:	4413      	add	r3, r2
 8018db6:	b29b      	uxth	r3, r3
 8018db8:	2b09      	cmp	r3, #9
 8018dba:	bf88      	it	hi
 8018dbc:	3b0a      	subhi	r3, #10
 8018dbe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018dc2:	8458      	strh	r0, [r3, #34]	; 0x22
 8018dc4:	e7ec      	b.n	8018da0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8018dc6:	bd10      	pop	{r4, pc}

08018dc8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8018dc8:	b538      	push	{r3, r4, r5, lr}
 8018dca:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8018dcc:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8018dd0:	4604      	mov	r4, r0
 8018dd2:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8018dd4:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8018dd6:	3a01      	subs	r2, #1
 8018dd8:	8702      	strh	r2, [r0, #56]	; 0x38
 8018dda:	1c5a      	adds	r2, r3, #1
 8018ddc:	b292      	uxth	r2, r2
 8018dde:	2a09      	cmp	r2, #9
 8018de0:	bf86      	itte	hi
 8018de2:	3b09      	subhi	r3, #9
 8018de4:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8018de6:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8018de8:	f7ff ffb5 	bl	8018d56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018dec:	8c23      	ldrh	r3, [r4, #32]
 8018dee:	2b01      	cmp	r3, #1
 8018df0:	bf9c      	itt	ls
 8018df2:	3301      	addls	r3, #1
 8018df4:	8423      	strhls	r3, [r4, #32]
 8018df6:	8be3      	ldrh	r3, [r4, #30]
 8018df8:	b90b      	cbnz	r3, 8018dfe <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018dfa:	2302      	movs	r3, #2
 8018dfc:	83e3      	strh	r3, [r4, #30]
 8018dfe:	8be3      	ldrh	r3, [r4, #30]
 8018e00:	3b01      	subs	r3, #1
 8018e02:	b29b      	uxth	r3, r3
 8018e04:	83e3      	strh	r3, [r4, #30]
 8018e06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e0a:	4628      	mov	r0, r5
 8018e0c:	8365      	strh	r5, [r4, #26]
 8018e0e:	bd38      	pop	{r3, r4, r5, pc}

08018e10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8018e10:	428a      	cmp	r2, r1
 8018e12:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018e16:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8018e18:	d931      	bls.n	8018e7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8018e1a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8018e1c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8018e20:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8018e24:	19ee      	adds	r6, r5, r7
 8018e26:	1a54      	subs	r4, r2, r1
 8018e28:	3e01      	subs	r6, #1
 8018e2a:	fa1f fe84 	uxth.w	lr, r4
 8018e2e:	b2b4      	uxth	r4, r6
 8018e30:	eba4 090e 	sub.w	r9, r4, lr
 8018e34:	fa1f f989 	uxth.w	r9, r9
 8018e38:	2c09      	cmp	r4, #9
 8018e3a:	4626      	mov	r6, r4
 8018e3c:	bf88      	it	hi
 8018e3e:	f1a4 060a 	subhi.w	r6, r4, #10
 8018e42:	f1bc 0f00 	cmp.w	ip, #0
 8018e46:	bf08      	it	eq
 8018e48:	f04f 0c02 	moveq.w	ip, #2
 8018e4c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018e50:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018e54:	fa1f fc8c 	uxth.w	ip, ip
 8018e58:	3c01      	subs	r4, #1
 8018e5a:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8018e5e:	b2a4      	uxth	r4, r4
 8018e60:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018e64:	454c      	cmp	r4, r9
 8018e66:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8018e6a:	d1e5      	bne.n	8018e38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8018e6c:	eba5 050e 	sub.w	r5, r5, lr
 8018e70:	eb0e 0408 	add.w	r4, lr, r8
 8018e74:	8705      	strh	r5, [r0, #56]	; 0x38
 8018e76:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8018e7a:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8018e7e:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8018e80:	1a64      	subs	r4, r4, r1
 8018e82:	4439      	add	r1, r7
 8018e84:	b289      	uxth	r1, r1
 8018e86:	2909      	cmp	r1, #9
 8018e88:	bf88      	it	hi
 8018e8a:	390a      	subhi	r1, #10
 8018e8c:	8704      	strh	r4, [r0, #56]	; 0x38
 8018e8e:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018e90:	250a      	movs	r5, #10
 8018e92:	b18a      	cbz	r2, 8018eb8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8018e94:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8018e96:	3a01      	subs	r2, #1
 8018e98:	b292      	uxth	r2, r2
 8018e9a:	3101      	adds	r1, #1
 8018e9c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8018ea0:	8701      	strh	r1, [r0, #56]	; 0x38
 8018ea2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018ea4:	b901      	cbnz	r1, 8018ea8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8018ea6:	86c5      	strh	r5, [r0, #54]	; 0x36
 8018ea8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8018eaa:	3901      	subs	r1, #1
 8018eac:	b289      	uxth	r1, r1
 8018eae:	86c1      	strh	r1, [r0, #54]	; 0x36
 8018eb0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8018eb4:	844c      	strh	r4, [r1, #34]	; 0x22
 8018eb6:	e7ec      	b.n	8018e92 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8018eb8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ebc:	f7ff bf4b 	b.w	8018d56 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08018ec0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8018ec0:	b570      	push	{r4, r5, r6, lr}
 8018ec2:	2500      	movs	r5, #0
 8018ec4:	4295      	cmp	r5, r2
 8018ec6:	d011      	beq.n	8018eec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8018ec8:	8bc4      	ldrh	r4, [r0, #30]
 8018eca:	f831 6b02 	ldrh.w	r6, [r1], #2
 8018ece:	4414      	add	r4, r2
 8018ed0:	3c01      	subs	r4, #1
 8018ed2:	1b64      	subs	r4, r4, r5
 8018ed4:	b2a4      	uxth	r4, r4
 8018ed6:	2c01      	cmp	r4, #1
 8018ed8:	bf88      	it	hi
 8018eda:	3c02      	subhi	r4, #2
 8018edc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018ee0:	8b64      	ldrh	r4, [r4, #26]
 8018ee2:	42b4      	cmp	r4, r6
 8018ee4:	d117      	bne.n	8018f16 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018ee6:	3501      	adds	r5, #1
 8018ee8:	b2ad      	uxth	r5, r5
 8018eea:	e7eb      	b.n	8018ec4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8018eec:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018ef0:	2400      	movs	r4, #0
 8018ef2:	4413      	add	r3, r2
 8018ef4:	b2a2      	uxth	r2, r4
 8018ef6:	429a      	cmp	r2, r3
 8018ef8:	da0f      	bge.n	8018f1a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018efa:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8018efc:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8018f00:	4432      	add	r2, r6
 8018f02:	b292      	uxth	r2, r2
 8018f04:	2a09      	cmp	r2, #9
 8018f06:	bf88      	it	hi
 8018f08:	3a0a      	subhi	r2, #10
 8018f0a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018f0e:	3401      	adds	r4, #1
 8018f10:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8018f12:	42aa      	cmp	r2, r5
 8018f14:	d0ee      	beq.n	8018ef4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018f16:	2000      	movs	r0, #0
 8018f18:	bd70      	pop	{r4, r5, r6, pc}
 8018f1a:	2001      	movs	r0, #1
 8018f1c:	e7fc      	b.n	8018f18 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08018f1e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8018f1e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f22:	4605      	mov	r5, r0
 8018f24:	4616      	mov	r6, r2
 8018f26:	1c8c      	adds	r4, r1, #2
 8018f28:	8809      	ldrh	r1, [r1, #0]
 8018f2a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8018f2e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018f32:	42b3      	cmp	r3, r6
 8018f34:	d124      	bne.n	8018f80 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018f36:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018f3a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8018f3e:	f001 070f 	and.w	r7, r1, #15
 8018f42:	f8cd 8000 	str.w	r8, [sp]
 8018f46:	464b      	mov	r3, r9
 8018f48:	4652      	mov	r2, sl
 8018f4a:	4621      	mov	r1, r4
 8018f4c:	4628      	mov	r0, r5
 8018f4e:	f7ff ffb7 	bl	8018ec0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018f52:	4683      	mov	fp, r0
 8018f54:	b168      	cbz	r0, 8018f72 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018f56:	eb0a 0109 	add.w	r1, sl, r9
 8018f5a:	4441      	add	r1, r8
 8018f5c:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018f60:	463a      	mov	r2, r7
 8018f62:	4649      	mov	r1, r9
 8018f64:	4628      	mov	r0, r5
 8018f66:	f7ff ff53 	bl	8018e10 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018f6a:	4658      	mov	r0, fp
 8018f6c:	b003      	add	sp, #12
 8018f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f72:	eb07 010a 	add.w	r1, r7, sl
 8018f76:	4449      	add	r1, r9
 8018f78:	4441      	add	r1, r8
 8018f7a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8018f7e:	e7d2      	b.n	8018f26 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8018f80:	f04f 0b00 	mov.w	fp, #0
 8018f84:	e7f1      	b.n	8018f6a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08018f86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8018f86:	b570      	push	{r4, r5, r6, lr}
 8018f88:	8810      	ldrh	r0, [r2, #0]
 8018f8a:	4298      	cmp	r0, r3
 8018f8c:	d817      	bhi.n	8018fbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018f8e:	1e48      	subs	r0, r1, #1
 8018f90:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8018f94:	4298      	cmp	r0, r3
 8018f96:	d312      	bcc.n	8018fbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018f98:	2400      	movs	r4, #0
 8018f9a:	428c      	cmp	r4, r1
 8018f9c:	d20f      	bcs.n	8018fbe <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8018f9e:	1860      	adds	r0, r4, r1
 8018fa0:	1040      	asrs	r0, r0, #1
 8018fa2:	0085      	lsls	r5, r0, #2
 8018fa4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8018fa8:	42b3      	cmp	r3, r6
 8018faa:	d902      	bls.n	8018fb2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8018fac:	3001      	adds	r0, #1
 8018fae:	b284      	uxth	r4, r0
 8018fb0:	e7f3      	b.n	8018f9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018fb2:	d201      	bcs.n	8018fb8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8018fb4:	b281      	uxth	r1, r0
 8018fb6:	e7f0      	b.n	8018f9a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8018fb8:	442a      	add	r2, r5
 8018fba:	8850      	ldrh	r0, [r2, #2]
 8018fbc:	bd70      	pop	{r4, r5, r6, pc}
 8018fbe:	2000      	movs	r0, #0
 8018fc0:	e7fc      	b.n	8018fbc <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08018fc2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8018fc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018fc6:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8018fc8:	886f      	ldrh	r7, [r5, #2]
 8018fca:	4604      	mov	r4, r0
 8018fcc:	087f      	lsrs	r7, r7, #1
 8018fce:	260b      	movs	r6, #11
 8018fd0:	3e01      	subs	r6, #1
 8018fd2:	d013      	beq.n	8018ffc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018fd4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8018fd6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8018fda:	462a      	mov	r2, r5
 8018fdc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8018fe0:	4639      	mov	r1, r7
 8018fe2:	4643      	mov	r3, r8
 8018fe4:	4620      	mov	r0, r4
 8018fe6:	f7ff ffce 	bl	8018f86 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018fea:	b138      	cbz	r0, 8018ffc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018fec:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8018ff0:	4642      	mov	r2, r8
 8018ff2:	4620      	mov	r0, r4
 8018ff4:	f7ff ff93 	bl	8018f1e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018ff8:	2800      	cmp	r0, #0
 8018ffa:	d1e9      	bne.n	8018fd0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8018ffc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019000 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8019000:	b570      	push	{r4, r5, r6, lr}
 8019002:	694a      	ldr	r2, [r1, #20]
 8019004:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8019006:	684b      	ldr	r3, [r1, #4]
 8019008:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 801900a:	1b54      	subs	r4, r2, r5
 801900c:	f000 8106 	beq.w	801921c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8019010:	1b9b      	subs	r3, r3, r6
 8019012:	d003      	beq.n	801901c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019014:	4363      	muls	r3, r4
 8019016:	2210      	movs	r2, #16
 8019018:	fb93 f3f2 	sdiv	r3, r3, r2
 801901c:	680c      	ldr	r4, [r1, #0]
 801901e:	698a      	ldr	r2, [r1, #24]
 8019020:	1b65      	subs	r5, r4, r5
 8019022:	f000 80fd 	beq.w	8019220 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8019026:	1b92      	subs	r2, r2, r6
 8019028:	d003      	beq.n	8019032 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801902a:	436a      	muls	r2, r5
 801902c:	2410      	movs	r4, #16
 801902e:	fb92 f2f4 	sdiv	r2, r2, r4
 8019032:	1a9b      	subs	r3, r3, r2
 8019034:	ee07 3a90 	vmov	s15, r3
 8019038:	ed9f 4a88 	vldr	s8, [pc, #544]	; 801925c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 801903c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019040:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019044:	ee67 7a84 	vmul.f32	s15, s15, s8
 8019048:	460a      	mov	r2, r1
 801904a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801904e:	4603      	mov	r3, r0
 8019050:	f100 040c 	add.w	r4, r0, #12
 8019054:	eeb1 6a43 	vneg.f32	s12, s6
 8019058:	edd2 7a02 	vldr	s15, [r2, #8]
 801905c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8019060:	3214      	adds	r2, #20
 8019062:	ece3 6a01 	vstmia	r3!, {s13}
 8019066:	ed52 7a02 	vldr	s15, [r2, #-8]
 801906a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801906e:	429c      	cmp	r4, r3
 8019070:	edc3 7a02 	vstr	s15, [r3, #8]
 8019074:	ed52 7a01 	vldr	s15, [r2, #-4]
 8019078:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801907c:	edc3 7a05 	vstr	s15, [r3, #20]
 8019080:	d1ea      	bne.n	8019058 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8019082:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019084:	698b      	ldr	r3, [r1, #24]
 8019086:	edd0 4a02 	vldr	s9, [r0, #8]
 801908a:	edd0 3a00 	vldr	s7, [r0]
 801908e:	edd0 6a01 	vldr	s13, [r0, #4]
 8019092:	ed90 5a05 	vldr	s10, [r0, #20]
 8019096:	ed90 2a03 	vldr	s4, [r0, #12]
 801909a:	edd0 5a04 	vldr	s11, [r0, #16]
 801909e:	ed90 1a07 	vldr	s2, [r0, #28]
 80190a2:	edd0 2a06 	vldr	s5, [r0, #24]
 80190a6:	1a9b      	subs	r3, r3, r2
 80190a8:	ee07 3a90 	vmov	s15, r3
 80190ac:	684b      	ldr	r3, [r1, #4]
 80190ae:	1a9b      	subs	r3, r3, r2
 80190b0:	ee07 3a10 	vmov	s14, r3
 80190b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80190b8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80190bc:	ee67 7a84 	vmul.f32	s15, s15, s8
 80190c0:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80190c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190c8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80190cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80190d0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80190d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80190d8:	ee32 5a45 	vsub.f32	s10, s4, s10
 80190dc:	ee67 7a83 	vmul.f32	s15, s15, s6
 80190e0:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80190e4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80190e6:	694a      	ldr	r2, [r1, #20]
 80190e8:	1b13      	subs	r3, r2, r4
 80190ea:	ee07 3a10 	vmov	s14, r3
 80190ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80190f2:	680b      	ldr	r3, [r1, #0]
 80190f4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80190f8:	1b1b      	subs	r3, r3, r4
 80190fa:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80190fe:	ee07 3a10 	vmov	s14, r3
 8019102:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019106:	ee27 7a04 	vmul.f32	s14, s14, s8
 801910a:	eee6 4a87 	vfma.f32	s9, s13, s14
 801910e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8019112:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8019116:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019118:	698b      	ldr	r3, [r1, #24]
 801911a:	1a9b      	subs	r3, r3, r2
 801911c:	ee06 3a90 	vmov	s13, r3
 8019120:	684b      	ldr	r3, [r1, #4]
 8019122:	1a9b      	subs	r3, r3, r2
 8019124:	ee07 3a10 	vmov	s14, r3
 8019128:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801912c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019130:	ee66 6a84 	vmul.f32	s13, s13, s8
 8019134:	ee27 7a04 	vmul.f32	s14, s14, s8
 8019138:	ee65 6a66 	vnmul.f32	s13, s10, s13
 801913c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8019140:	ee66 6a83 	vmul.f32	s13, s13, s6
 8019144:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8019148:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801914a:	694a      	ldr	r2, [r1, #20]
 801914c:	1b13      	subs	r3, r2, r4
 801914e:	ee07 3a10 	vmov	s14, r3
 8019152:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019156:	680b      	ldr	r3, [r1, #0]
 8019158:	ee27 7a04 	vmul.f32	s14, s14, s8
 801915c:	1b1b      	subs	r3, r3, r4
 801915e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8019162:	ee07 3a10 	vmov	s14, r3
 8019166:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801916a:	ee27 7a04 	vmul.f32	s14, s14, s8
 801916e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8019172:	edd0 5a08 	vldr	s11, [r0, #32]
 8019176:	ee25 5a06 	vmul.f32	s10, s10, s12
 801917a:	ee31 1a65 	vsub.f32	s2, s2, s11
 801917e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8019182:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019184:	698b      	ldr	r3, [r1, #24]
 8019186:	1a9b      	subs	r3, r3, r2
 8019188:	ee07 3a10 	vmov	s14, r3
 801918c:	684b      	ldr	r3, [r1, #4]
 801918e:	1a9b      	subs	r3, r3, r2
 8019190:	ee01 3a90 	vmov	s3, r3
 8019194:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019198:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801919c:	ee27 7a04 	vmul.f32	s14, s14, s8
 80191a0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80191a4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80191a8:	ee61 1a84 	vmul.f32	s3, s3, s8
 80191ac:	eea1 7a21 	vfma.f32	s14, s2, s3
 80191b0:	ee27 7a03 	vmul.f32	s14, s14, s6
 80191b4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80191b8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80191ba:	694a      	ldr	r2, [r1, #20]
 80191bc:	1b13      	subs	r3, r2, r4
 80191be:	ee03 3a10 	vmov	s6, r3
 80191c2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80191c6:	680b      	ldr	r3, [r1, #0]
 80191c8:	ee23 3a04 	vmul.f32	s6, s6, s8
 80191cc:	1b1b      	subs	r3, r3, r4
 80191ce:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80191d2:	ee03 3a10 	vmov	s6, r3
 80191d6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80191da:	ee23 4a04 	vmul.f32	s8, s6, s8
 80191de:	eee1 5a04 	vfma.f32	s11, s2, s8
 80191e2:	ee25 6a86 	vmul.f32	s12, s11, s12
 80191e6:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80191ea:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80191ee:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80191f2:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80191f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80191fa:	dd13      	ble.n	8019224 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80191fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019200:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8019204:	63c3      	str	r3, [r0, #60]	; 0x3c
 8019206:	eee3 7a87 	vfma.f32	s15, s7, s14
 801920a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801920e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019212:	dd15      	ble.n	8019240 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8019214:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8019218:	6403      	str	r3, [r0, #64]	; 0x40
 801921a:	bd70      	pop	{r4, r5, r6, pc}
 801921c:	4623      	mov	r3, r4
 801921e:	e6fd      	b.n	801901c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8019220:	462a      	mov	r2, r5
 8019222:	e706      	b.n	8019032 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8019224:	d502      	bpl.n	801922c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8019226:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801922a:	e7e9      	b.n	8019200 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 801922c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8019230:	eea3 2a85 	vfma.f32	s4, s7, s10
 8019234:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8019238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801923c:	dade      	bge.n	80191fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801923e:	e7f2      	b.n	8019226 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8019240:	d502      	bpl.n	8019248 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8019242:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8019246:	e7e7      	b.n	8019218 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8019248:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 801924c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8019250:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8019254:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019258:	dadc      	bge.n	8019214 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801925a:	e7f2      	b.n	8019242 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 801925c:	3d800000 	.word	0x3d800000

08019260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8019260:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019264:	2714      	movs	r7, #20
 8019266:	435f      	muls	r7, r3
 8019268:	eb02 0c07 	add.w	ip, r2, r7
 801926c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8019270:	f115 0e0f 	adds.w	lr, r5, #15
 8019274:	f100 80a2 	bmi.w	80193bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8019278:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 801927c:	9c08      	ldr	r4, [sp, #32]
 801927e:	f8c0 e014 	str.w	lr, [r0, #20]
 8019282:	2614      	movs	r6, #20
 8019284:	4366      	muls	r6, r4
 8019286:	eb02 0806 	add.w	r8, r2, r6
 801928a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801928e:	f115 040f 	adds.w	r4, r5, #15
 8019292:	f100 809f 	bmi.w	80193d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8019296:	1124      	asrs	r4, r4, #4
 8019298:	eba4 040e 	sub.w	r4, r4, lr
 801929c:	6184      	str	r4, [r0, #24]
 801929e:	2c00      	cmp	r4, #0
 80192a0:	f000 808a 	beq.w	80193b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80192a4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80192a8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80192ac:	5995      	ldr	r5, [r2, r6]
 80192ae:	eba4 0809 	sub.w	r8, r4, r9
 80192b2:	59d4      	ldr	r4, [r2, r7]
 80192b4:	eba5 0a04 	sub.w	sl, r5, r4
 80192b8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80192bc:	fb0e fe05 	mul.w	lr, lr, r5
 80192c0:	fb0a ee19 	mls	lr, sl, r9, lr
 80192c4:	fb08 e404 	mla	r4, r8, r4, lr
 80192c8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80192cc:	3c01      	subs	r4, #1
 80192ce:	19a4      	adds	r4, r4, r6
 80192d0:	f100 808c 	bmi.w	80193ec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80192d4:	fb94 fef6 	sdiv	lr, r4, r6
 80192d8:	f8c0 e000 	str.w	lr, [r0]
 80192dc:	fb06 441e 	mls	r4, r6, lr, r4
 80192e0:	6104      	str	r4, [r0, #16]
 80192e2:	2d00      	cmp	r5, #0
 80192e4:	f2c0 8095 	blt.w	8019412 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80192e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80192ec:	6044      	str	r4, [r0, #4]
 80192ee:	fb06 5514 	mls	r5, r6, r4, r5
 80192f2:	6085      	str	r5, [r0, #8]
 80192f4:	60c6      	str	r6, [r0, #12]
 80192f6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80192fa:	6945      	ldr	r5, [r0, #20]
 80192fc:	59d2      	ldr	r2, [r2, r7]
 80192fe:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8019434 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8019302:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8019306:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 801930a:	ee07 4a10 	vmov	s14, r4
 801930e:	6804      	ldr	r4, [r0, #0]
 8019310:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8019314:	ee07 2a90 	vmov	s15, r2
 8019318:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801931c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8019320:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019324:	ee27 7a26 	vmul.f32	s14, s14, s13
 8019328:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801932c:	edd3 6a00 	vldr	s13, [r3]
 8019330:	eee6 6a07 	vfma.f32	s13, s12, s14
 8019334:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8019338:	eee6 6a27 	vfma.f32	s13, s12, s15
 801933c:	edc0 6a07 	vstr	s13, [r0, #28]
 8019340:	edd0 6a01 	vldr	s13, [r0, #4]
 8019344:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8019348:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801934c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8019350:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019354:	ed80 6a08 	vstr	s12, [r0, #32]
 8019358:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801935a:	6242      	str	r2, [r0, #36]	; 0x24
 801935c:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8019360:	ed93 6a03 	vldr	s12, [r3, #12]
 8019364:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019368:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801936c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8019370:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8019374:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8019378:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 801937c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8019380:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8019384:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8019386:	6302      	str	r2, [r0, #48]	; 0x30
 8019388:	ed93 6a06 	vldr	s12, [r3, #24]
 801938c:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8019390:	eea5 6a87 	vfma.f32	s12, s11, s14
 8019394:	eeb0 7a46 	vmov.f32	s14, s12
 8019398:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 801939c:	eea6 7a27 	vfma.f32	s14, s12, s15
 80193a0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80193a4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80193a8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80193ac:	eee6 7a87 	vfma.f32	s15, s13, s14
 80193b0:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80193b4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80193b6:	63c3      	str	r3, [r0, #60]	; 0x3c
 80193b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80193bc:	f1c5 0501 	rsb	r5, r5, #1
 80193c0:	f015 050f 	ands.w	r5, r5, #15
 80193c4:	bf18      	it	ne
 80193c6:	2501      	movne	r5, #1
 80193c8:	2410      	movs	r4, #16
 80193ca:	fb9e fef4 	sdiv	lr, lr, r4
 80193ce:	ebae 0e05 	sub.w	lr, lr, r5
 80193d2:	e753      	b.n	801927c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80193d4:	f1c5 0501 	rsb	r5, r5, #1
 80193d8:	f015 050f 	ands.w	r5, r5, #15
 80193dc:	bf18      	it	ne
 80193de:	2501      	movne	r5, #1
 80193e0:	f04f 0910 	mov.w	r9, #16
 80193e4:	fb94 f4f9 	sdiv	r4, r4, r9
 80193e8:	1b64      	subs	r4, r4, r5
 80193ea:	e755      	b.n	8019298 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80193ec:	4264      	negs	r4, r4
 80193ee:	fb94 fef6 	sdiv	lr, r4, r6
 80193f2:	f1ce 0800 	rsb	r8, lr, #0
 80193f6:	fb06 441e 	mls	r4, r6, lr, r4
 80193fa:	f8c0 8000 	str.w	r8, [r0]
 80193fe:	6104      	str	r4, [r0, #16]
 8019400:	2c00      	cmp	r4, #0
 8019402:	f43f af6e 	beq.w	80192e2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8019406:	ea6f 0e0e 	mvn.w	lr, lr
 801940a:	f8c0 e000 	str.w	lr, [r0]
 801940e:	1b34      	subs	r4, r6, r4
 8019410:	e766      	b.n	80192e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8019412:	426d      	negs	r5, r5
 8019414:	fb95 f4f6 	sdiv	r4, r5, r6
 8019418:	f1c4 0e00 	rsb	lr, r4, #0
 801941c:	fb06 5514 	mls	r5, r6, r4, r5
 8019420:	f8c0 e004 	str.w	lr, [r0, #4]
 8019424:	6085      	str	r5, [r0, #8]
 8019426:	2d00      	cmp	r5, #0
 8019428:	f43f af64 	beq.w	80192f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801942c:	43e4      	mvns	r4, r4
 801942e:	6044      	str	r4, [r0, #4]
 8019430:	1b75      	subs	r5, r6, r5
 8019432:	e75e      	b.n	80192f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8019434:	3d800000 	.word	0x3d800000

08019438 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8019438:	4602      	mov	r2, r0
 801943a:	b148      	cbz	r0, 8019450 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 801943c:	2300      	movs	r3, #0
 801943e:	b298      	uxth	r0, r3
 8019440:	3301      	adds	r3, #1
 8019442:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8019446:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801944a:	2900      	cmp	r1, #0
 801944c:	d1f7      	bne.n	801943e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801944e:	4770      	bx	lr
 8019450:	4770      	bx	lr

08019452 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8019452:	b530      	push	{r4, r5, lr}
 8019454:	4604      	mov	r4, r0
 8019456:	b159      	cbz	r1, 8019470 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8019458:	b148      	cbz	r0, 801946e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801945a:	2300      	movs	r3, #0
 801945c:	b298      	uxth	r0, r3
 801945e:	4282      	cmp	r2, r0
 8019460:	d905      	bls.n	801946e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8019462:	5ccd      	ldrb	r5, [r1, r3]
 8019464:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8019468:	3301      	adds	r3, #1
 801946a:	2d00      	cmp	r5, #0
 801946c:	d1f6      	bne.n	801945c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801946e:	bd30      	pop	{r4, r5, pc}
 8019470:	4608      	mov	r0, r1
 8019472:	e7fc      	b.n	801946e <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08019474 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8019474:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019476:	b08b      	sub	sp, #44	; 0x2c
 8019478:	468c      	mov	ip, r1
 801947a:	2100      	movs	r1, #0
 801947c:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8019480:	4604      	mov	r4, r0
 8019482:	261f      	movs	r6, #31
 8019484:	af01      	add	r7, sp, #4
 8019486:	fb94 fef3 	sdiv	lr, r4, r3
 801948a:	fb03 441e 	mls	r4, r3, lr, r4
 801948e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8019492:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8019496:	b2ec      	uxtb	r4, r5
 8019498:	2d09      	cmp	r5, #9
 801949a:	bfd4      	ite	le
 801949c:	3430      	addle	r4, #48	; 0x30
 801949e:	3457      	addgt	r4, #87	; 0x57
 80194a0:	b2e4      	uxtb	r4, r4
 80194a2:	55bc      	strb	r4, [r7, r6]
 80194a4:	4674      	mov	r4, lr
 80194a6:	1e71      	subs	r1, r6, #1
 80194a8:	b974      	cbnz	r4, 80194c8 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 80194aa:	2800      	cmp	r0, #0
 80194ac:	da05      	bge.n	80194ba <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80194ae:	ab0a      	add	r3, sp, #40	; 0x28
 80194b0:	4419      	add	r1, r3
 80194b2:	232d      	movs	r3, #45	; 0x2d
 80194b4:	f801 3c24 	strb.w	r3, [r1, #-36]
 80194b8:	1eb1      	subs	r1, r6, #2
 80194ba:	3101      	adds	r1, #1
 80194bc:	4439      	add	r1, r7
 80194be:	4660      	mov	r0, ip
 80194c0:	f7ff ffc7 	bl	8019452 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80194c4:	b00b      	add	sp, #44	; 0x2c
 80194c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80194c8:	460e      	mov	r6, r1
 80194ca:	e7dc      	b.n	8019486 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080194cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80194cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80194ce:	b08b      	sub	sp, #44	; 0x2c
 80194d0:	468c      	mov	ip, r1
 80194d2:	2100      	movs	r1, #0
 80194d4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80194d8:	ae01      	add	r6, sp, #4
 80194da:	211f      	movs	r1, #31
 80194dc:	fbb0 f7f3 	udiv	r7, r0, r3
 80194e0:	fb03 0517 	mls	r5, r3, r7, r0
 80194e4:	b2ec      	uxtb	r4, r5
 80194e6:	2d09      	cmp	r5, #9
 80194e8:	bfd4      	ite	le
 80194ea:	3430      	addle	r4, #48	; 0x30
 80194ec:	3457      	addgt	r4, #87	; 0x57
 80194ee:	b2e4      	uxtb	r4, r4
 80194f0:	558c      	strb	r4, [r1, r6]
 80194f2:	4638      	mov	r0, r7
 80194f4:	1e4c      	subs	r4, r1, #1
 80194f6:	b92f      	cbnz	r7, 8019504 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80194f8:	4431      	add	r1, r6
 80194fa:	4660      	mov	r0, ip
 80194fc:	f7ff ffa9 	bl	8019452 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8019500:	b00b      	add	sp, #44	; 0x2c
 8019502:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019504:	4621      	mov	r1, r4
 8019506:	e7e9      	b.n	80194dc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08019508 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8019508:	b410      	push	{r4}
 801950a:	b131      	cbz	r1, 801951a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801950c:	1e9c      	subs	r4, r3, #2
 801950e:	2c22      	cmp	r4, #34	; 0x22
 8019510:	d803      	bhi.n	801951a <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8019512:	f85d 4b04 	ldr.w	r4, [sp], #4
 8019516:	f7ff bfad 	b.w	8019474 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801951a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801951e:	4770      	bx	lr

08019520 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8019520:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019524:	4691      	mov	r9, r2
 8019526:	b085      	sub	sp, #20
 8019528:	6802      	ldr	r2, [r0, #0]
 801952a:	9201      	str	r2, [sp, #4]
 801952c:	4688      	mov	r8, r1
 801952e:	4683      	mov	fp, r0
 8019530:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8019534:	9103      	str	r1, [sp, #12]
 8019536:	4610      	mov	r0, r2
 8019538:	461c      	mov	r4, r3
 801953a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801953e:	9302      	str	r3, [sp, #8]
 8019540:	f7ff ff7a 	bl	8019438 <_ZN8touchgfx7Unicode6strlenEPKt>
 8019544:	f1b8 0f00 	cmp.w	r8, #0
 8019548:	bf0c      	ite	eq
 801954a:	4684      	moveq	ip, r0
 801954c:	f100 0c01 	addne.w	ip, r0, #1
 8019550:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8019554:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8019558:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801955a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801955c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8019560:	9903      	ldr	r1, [sp, #12]
 8019562:	fa1f fc8c 	uxth.w	ip, ip
 8019566:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801956a:	d041      	beq.n	80195f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801956c:	d834      	bhi.n	80195d8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801956e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8019572:	d059      	beq.n	8019628 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8019574:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8019578:	d03a      	beq.n	80195f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801957a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801957e:	d034      	beq.n	80195ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8019580:	2400      	movs	r4, #0
 8019582:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8019586:	3a01      	subs	r2, #1
 8019588:	b169      	cbz	r1, 80195a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801958a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801958c:	458c      	cmp	ip, r1
 801958e:	da09      	bge.n	80195a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019590:	eba1 010c 	sub.w	r1, r1, ip
 8019594:	b289      	uxth	r1, r1
 8019596:	b933      	cbnz	r3, 80195a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019598:	2e00      	cmp	r6, #0
 801959a:	d051      	beq.n	8019640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801959c:	2800      	cmp	r0, #0
 801959e:	d04f      	beq.n	8019640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80195a0:	440c      	add	r4, r1
 80195a2:	b2a4      	uxth	r4, r4
 80195a4:	2100      	movs	r1, #0
 80195a6:	682b      	ldr	r3, [r5, #0]
 80195a8:	4293      	cmp	r3, r2
 80195aa:	da07      	bge.n	80195bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80195ac:	f1b8 0f00 	cmp.w	r8, #0
 80195b0:	d004      	beq.n	80195bc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80195b2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80195b6:	682b      	ldr	r3, [r5, #0]
 80195b8:	3301      	adds	r3, #1
 80195ba:	602b      	str	r3, [r5, #0]
 80195bc:	2730      	movs	r7, #48	; 0x30
 80195be:	2c00      	cmp	r4, #0
 80195c0:	d04e      	beq.n	8019660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80195c2:	682e      	ldr	r6, [r5, #0]
 80195c4:	3c01      	subs	r4, #1
 80195c6:	42b2      	cmp	r2, r6
 80195c8:	b2a4      	uxth	r4, r4
 80195ca:	dd49      	ble.n	8019660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80195cc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80195d0:	682b      	ldr	r3, [r5, #0]
 80195d2:	3301      	adds	r3, #1
 80195d4:	602b      	str	r3, [r5, #0]
 80195d6:	e7f2      	b.n	80195be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80195d8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80195dc:	d01d      	beq.n	801961a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80195de:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80195e2:	d002      	beq.n	80195ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80195e4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80195e8:	e7c9      	b.n	801957e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80195ea:	4684      	mov	ip, r0
 80195ec:	f04f 0800 	mov.w	r8, #0
 80195f0:	2c00      	cmp	r4, #0
 80195f2:	d0c6      	beq.n	8019582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80195f4:	b947      	cbnz	r7, 8019608 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80195f6:	2801      	cmp	r0, #1
 80195f8:	d106      	bne.n	8019608 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80195fa:	8814      	ldrh	r4, [r2, #0]
 80195fc:	2c30      	cmp	r4, #48	; 0x30
 80195fe:	bf02      	ittt	eq
 8019600:	3202      	addeq	r2, #2
 8019602:	f8cb 2000 	streq.w	r2, [fp]
 8019606:	4638      	moveq	r0, r7
 8019608:	45bc      	cmp	ip, r7
 801960a:	da14      	bge.n	8019636 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801960c:	b2bf      	uxth	r7, r7
 801960e:	eba7 040c 	sub.w	r4, r7, ip
 8019612:	b2a4      	uxth	r4, r4
 8019614:	46bc      	mov	ip, r7
 8019616:	2600      	movs	r6, #0
 8019618:	e7b3      	b.n	8019582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801961a:	4684      	mov	ip, r0
 801961c:	b16c      	cbz	r4, 801963a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801961e:	42b8      	cmp	r0, r7
 8019620:	dd00      	ble.n	8019624 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8019622:	b2b8      	uxth	r0, r7
 8019624:	2400      	movs	r4, #0
 8019626:	e003      	b.n	8019630 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8019628:	f04f 0c01 	mov.w	ip, #1
 801962c:	2400      	movs	r4, #0
 801962e:	4660      	mov	r0, ip
 8019630:	4626      	mov	r6, r4
 8019632:	46a0      	mov	r8, r4
 8019634:	e7a5      	b.n	8019582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019636:	2400      	movs	r4, #0
 8019638:	e7ed      	b.n	8019616 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801963a:	4626      	mov	r6, r4
 801963c:	46a0      	mov	r8, r4
 801963e:	e7a0      	b.n	8019582 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8019640:	2900      	cmp	r1, #0
 8019642:	d0b0      	beq.n	80195a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8019644:	2720      	movs	r7, #32
 8019646:	682e      	ldr	r6, [r5, #0]
 8019648:	2900      	cmp	r1, #0
 801964a:	d0ac      	beq.n	80195a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801964c:	3901      	subs	r1, #1
 801964e:	4296      	cmp	r6, r2
 8019650:	b289      	uxth	r1, r1
 8019652:	daa7      	bge.n	80195a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8019654:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8019658:	682b      	ldr	r3, [r5, #0]
 801965a:	3301      	adds	r3, #1
 801965c:	602b      	str	r3, [r5, #0]
 801965e:	e7f2      	b.n	8019646 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8019660:	b188      	cbz	r0, 8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8019662:	682b      	ldr	r3, [r5, #0]
 8019664:	3801      	subs	r0, #1
 8019666:	429a      	cmp	r2, r3
 8019668:	b280      	uxth	r0, r0
 801966a:	dd0c      	ble.n	8019686 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801966c:	f8db 3000 	ldr.w	r3, [fp]
 8019670:	1c9c      	adds	r4, r3, #2
 8019672:	f8cb 4000 	str.w	r4, [fp]
 8019676:	881c      	ldrh	r4, [r3, #0]
 8019678:	682b      	ldr	r3, [r5, #0]
 801967a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801967e:	682b      	ldr	r3, [r5, #0]
 8019680:	3301      	adds	r3, #1
 8019682:	602b      	str	r3, [r5, #0]
 8019684:	e7ec      	b.n	8019660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8019686:	2620      	movs	r6, #32
 8019688:	b151      	cbz	r1, 80196a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801968a:	6828      	ldr	r0, [r5, #0]
 801968c:	3901      	subs	r1, #1
 801968e:	4282      	cmp	r2, r0
 8019690:	b289      	uxth	r1, r1
 8019692:	dd05      	ble.n	80196a0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8019694:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8019698:	682b      	ldr	r3, [r5, #0]
 801969a:	3301      	adds	r3, #1
 801969c:	602b      	str	r3, [r5, #0]
 801969e:	e7f3      	b.n	8019688 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80196a0:	b005      	add	sp, #20
 80196a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80196a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80196aa:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80196ae:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80196b2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80196b6:	2400      	movs	r4, #0
 80196b8:	8014      	strh	r4, [r2, #0]
 80196ba:	701c      	strb	r4, [r3, #0]
 80196bc:	f888 4000 	strb.w	r4, [r8]
 80196c0:	f88c 4000 	strb.w	r4, [ip]
 80196c4:	f88e 4000 	strb.w	r4, [lr]
 80196c8:	703c      	strb	r4, [r7, #0]
 80196ca:	6804      	ldr	r4, [r0, #0]
 80196cc:	b1a4      	cbz	r4, 80196f8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80196ce:	8824      	ldrh	r4, [r4, #0]
 80196d0:	f04f 0901 	mov.w	r9, #1
 80196d4:	b314      	cbz	r4, 801971c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80196d6:	2c2b      	cmp	r4, #43	; 0x2b
 80196d8:	d001      	beq.n	80196de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80196da:	2c20      	cmp	r4, #32
 80196dc:	d110      	bne.n	8019700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80196de:	8014      	strh	r4, [r2, #0]
 80196e0:	6804      	ldr	r4, [r0, #0]
 80196e2:	b10c      	cbz	r4, 80196e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80196e4:	3402      	adds	r4, #2
 80196e6:	6004      	str	r4, [r0, #0]
 80196e8:	680c      	ldr	r4, [r1, #0]
 80196ea:	b10c      	cbz	r4, 80196f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80196ec:	3401      	adds	r4, #1
 80196ee:	600c      	str	r4, [r1, #0]
 80196f0:	6804      	ldr	r4, [r0, #0]
 80196f2:	b17c      	cbz	r4, 8019714 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80196f4:	8824      	ldrh	r4, [r4, #0]
 80196f6:	e7ed      	b.n	80196d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80196f8:	680c      	ldr	r4, [r1, #0]
 80196fa:	b17c      	cbz	r4, 801971c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80196fc:	7824      	ldrb	r4, [r4, #0]
 80196fe:	e7e7      	b.n	80196d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8019700:	2c2d      	cmp	r4, #45	; 0x2d
 8019702:	d102      	bne.n	801970a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8019704:	f883 9000 	strb.w	r9, [r3]
 8019708:	e7ea      	b.n	80196e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801970a:	2c23      	cmp	r4, #35	; 0x23
 801970c:	d107      	bne.n	801971e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801970e:	f888 9000 	strb.w	r9, [r8]
 8019712:	e7e5      	b.n	80196e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8019714:	680c      	ldr	r4, [r1, #0]
 8019716:	b10c      	cbz	r4, 801971c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8019718:	7824      	ldrb	r4, [r4, #0]
 801971a:	e7db      	b.n	80196d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801971c:	2400      	movs	r4, #0
 801971e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8019722:	2b09      	cmp	r3, #9
 8019724:	d901      	bls.n	801972a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8019726:	2c2a      	cmp	r4, #42	; 0x2a
 8019728:	d122      	bne.n	8019770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801972a:	2301      	movs	r3, #1
 801972c:	2c30      	cmp	r4, #48	; 0x30
 801972e:	f88e 3000 	strb.w	r3, [lr]
 8019732:	d10d      	bne.n	8019750 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8019734:	f88c 3000 	strb.w	r3, [ip]
 8019738:	6803      	ldr	r3, [r0, #0]
 801973a:	b10b      	cbz	r3, 8019740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801973c:	3302      	adds	r3, #2
 801973e:	6003      	str	r3, [r0, #0]
 8019740:	680b      	ldr	r3, [r1, #0]
 8019742:	b10b      	cbz	r3, 8019748 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8019744:	3301      	adds	r3, #1
 8019746:	600b      	str	r3, [r1, #0]
 8019748:	6803      	ldr	r3, [r0, #0]
 801974a:	2b00      	cmp	r3, #0
 801974c:	d02f      	beq.n	80197ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801974e:	881c      	ldrh	r4, [r3, #0]
 8019750:	2c2a      	cmp	r4, #42	; 0x2a
 8019752:	d135      	bne.n	80197c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8019754:	f04f 33ff 	mov.w	r3, #4294967295
 8019758:	6033      	str	r3, [r6, #0]
 801975a:	6803      	ldr	r3, [r0, #0]
 801975c:	b10b      	cbz	r3, 8019762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801975e:	3302      	adds	r3, #2
 8019760:	6003      	str	r3, [r0, #0]
 8019762:	680b      	ldr	r3, [r1, #0]
 8019764:	b10b      	cbz	r3, 801976a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8019766:	3301      	adds	r3, #1
 8019768:	600b      	str	r3, [r1, #0]
 801976a:	6803      	ldr	r3, [r0, #0]
 801976c:	b31b      	cbz	r3, 80197b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801976e:	881c      	ldrh	r4, [r3, #0]
 8019770:	2c2e      	cmp	r4, #46	; 0x2e
 8019772:	d11a      	bne.n	80197aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8019774:	2301      	movs	r3, #1
 8019776:	703b      	strb	r3, [r7, #0]
 8019778:	6803      	ldr	r3, [r0, #0]
 801977a:	b10b      	cbz	r3, 8019780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801977c:	3302      	adds	r3, #2
 801977e:	6003      	str	r3, [r0, #0]
 8019780:	680b      	ldr	r3, [r1, #0]
 8019782:	b10b      	cbz	r3, 8019788 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8019784:	3301      	adds	r3, #1
 8019786:	600b      	str	r3, [r1, #0]
 8019788:	6803      	ldr	r3, [r0, #0]
 801978a:	2b00      	cmp	r3, #0
 801978c:	d036      	beq.n	80197fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801978e:	881b      	ldrh	r3, [r3, #0]
 8019790:	2b2a      	cmp	r3, #42	; 0x2a
 8019792:	d137      	bne.n	8019804 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019794:	f04f 33ff 	mov.w	r3, #4294967295
 8019798:	602b      	str	r3, [r5, #0]
 801979a:	6803      	ldr	r3, [r0, #0]
 801979c:	b10b      	cbz	r3, 80197a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801979e:	3302      	adds	r3, #2
 80197a0:	6003      	str	r3, [r0, #0]
 80197a2:	680b      	ldr	r3, [r1, #0]
 80197a4:	b10b      	cbz	r3, 80197aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80197a6:	3301      	adds	r3, #1
 80197a8:	600b      	str	r3, [r1, #0]
 80197aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80197ae:	680c      	ldr	r4, [r1, #0]
 80197b0:	b134      	cbz	r4, 80197c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80197b2:	7824      	ldrb	r4, [r4, #0]
 80197b4:	e7cc      	b.n	8019750 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80197b6:	680b      	ldr	r3, [r1, #0]
 80197b8:	2b00      	cmp	r3, #0
 80197ba:	d0f6      	beq.n	80197aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80197bc:	781c      	ldrb	r4, [r3, #0]
 80197be:	e7d7      	b.n	8019770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80197c0:	2300      	movs	r3, #0
 80197c2:	6033      	str	r3, [r6, #0]
 80197c4:	220a      	movs	r2, #10
 80197c6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80197ca:	fa1f f38c 	uxth.w	r3, ip
 80197ce:	2b09      	cmp	r3, #9
 80197d0:	d8ce      	bhi.n	8019770 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80197d2:	6833      	ldr	r3, [r6, #0]
 80197d4:	fb02 c303 	mla	r3, r2, r3, ip
 80197d8:	6033      	str	r3, [r6, #0]
 80197da:	6803      	ldr	r3, [r0, #0]
 80197dc:	b10b      	cbz	r3, 80197e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80197de:	3302      	adds	r3, #2
 80197e0:	6003      	str	r3, [r0, #0]
 80197e2:	680b      	ldr	r3, [r1, #0]
 80197e4:	b10b      	cbz	r3, 80197ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80197e6:	3301      	adds	r3, #1
 80197e8:	600b      	str	r3, [r1, #0]
 80197ea:	6803      	ldr	r3, [r0, #0]
 80197ec:	b10b      	cbz	r3, 80197f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80197ee:	881c      	ldrh	r4, [r3, #0]
 80197f0:	e7e9      	b.n	80197c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80197f2:	680c      	ldr	r4, [r1, #0]
 80197f4:	2c00      	cmp	r4, #0
 80197f6:	d0e6      	beq.n	80197c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80197f8:	7824      	ldrb	r4, [r4, #0]
 80197fa:	e7e4      	b.n	80197c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80197fc:	680b      	ldr	r3, [r1, #0]
 80197fe:	b10b      	cbz	r3, 8019804 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8019800:	781b      	ldrb	r3, [r3, #0]
 8019802:	e7c5      	b.n	8019790 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8019804:	2200      	movs	r2, #0
 8019806:	602a      	str	r2, [r5, #0]
 8019808:	240a      	movs	r4, #10
 801980a:	3b30      	subs	r3, #48	; 0x30
 801980c:	b29e      	uxth	r6, r3
 801980e:	2e09      	cmp	r6, #9
 8019810:	682a      	ldr	r2, [r5, #0]
 8019812:	d813      	bhi.n	801983c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8019814:	fb04 3302 	mla	r3, r4, r2, r3
 8019818:	602b      	str	r3, [r5, #0]
 801981a:	6803      	ldr	r3, [r0, #0]
 801981c:	b10b      	cbz	r3, 8019822 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801981e:	3302      	adds	r3, #2
 8019820:	6003      	str	r3, [r0, #0]
 8019822:	680b      	ldr	r3, [r1, #0]
 8019824:	b10b      	cbz	r3, 801982a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8019826:	3301      	adds	r3, #1
 8019828:	600b      	str	r3, [r1, #0]
 801982a:	6803      	ldr	r3, [r0, #0]
 801982c:	b10b      	cbz	r3, 8019832 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801982e:	881b      	ldrh	r3, [r3, #0]
 8019830:	e7eb      	b.n	801980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019832:	680b      	ldr	r3, [r1, #0]
 8019834:	2b00      	cmp	r3, #0
 8019836:	d0e8      	beq.n	801980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8019838:	781b      	ldrb	r3, [r3, #0]
 801983a:	e7e6      	b.n	801980a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801983c:	2a06      	cmp	r2, #6
 801983e:	bfa8      	it	ge
 8019840:	2206      	movge	r2, #6
 8019842:	602a      	str	r2, [r5, #0]
 8019844:	e7b1      	b.n	80197aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08019846 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8019846:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801984a:	b0a3      	sub	sp, #140	; 0x8c
 801984c:	2600      	movs	r6, #0
 801984e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8019852:	4607      	mov	r7, r0
 8019854:	4688      	mov	r8, r1
 8019856:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801985a:	4631      	mov	r1, r6
 801985c:	2242      	movs	r2, #66	; 0x42
 801985e:	4648      	mov	r0, r9
 8019860:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8019862:	960d      	str	r6, [sp, #52]	; 0x34
 8019864:	f012 f881 	bl	802b96a <memset>
 8019868:	b15f      	cbz	r7, 8019882 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801986a:	f108 3aff 	add.w	sl, r8, #4294967295
 801986e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019870:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019872:	b152      	cbz	r2, 801988a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8019874:	8812      	ldrh	r2, [r2, #0]
 8019876:	b10a      	cbz	r2, 801987c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019878:	459a      	cmp	sl, r3
 801987a:	dc2e      	bgt.n	80198da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801987c:	2200      	movs	r2, #0
 801987e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8019882:	4638      	mov	r0, r7
 8019884:	b023      	add	sp, #140	; 0x8c
 8019886:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801988a:	9a08      	ldr	r2, [sp, #32]
 801988c:	2a00      	cmp	r2, #0
 801988e:	d0f5      	beq.n	801987c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8019890:	7812      	ldrb	r2, [r2, #0]
 8019892:	e7f0      	b.n	8019876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8019894:	2d00      	cmp	r5, #0
 8019896:	d0ea      	beq.n	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019898:	782a      	ldrb	r2, [r5, #0]
 801989a:	b142      	cbz	r2, 80198ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801989c:	2a25      	cmp	r2, #37	; 0x25
 801989e:	d001      	beq.n	80198a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80198a0:	459a      	cmp	sl, r3
 80198a2:	dc08      	bgt.n	80198b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80198a4:	f1bb 0f00 	cmp.w	fp, #0
 80198a8:	d121      	bne.n	80198ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80198aa:	2d00      	cmp	r5, #0
 80198ac:	d0df      	beq.n	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80198ae:	782a      	ldrb	r2, [r5, #0]
 80198b0:	f04f 0b00 	mov.w	fp, #0
 80198b4:	e01d      	b.n	80198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80198b6:	f1bb 0f00 	cmp.w	fp, #0
 80198ba:	d078      	beq.n	80199ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80198bc:	f8bb 2000 	ldrh.w	r2, [fp]
 80198c0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80198c4:	f1bb 0f00 	cmp.w	fp, #0
 80198c8:	d002      	beq.n	80198d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80198ca:	f10b 0202 	add.w	r2, fp, #2
 80198ce:	9209      	str	r2, [sp, #36]	; 0x24
 80198d0:	b10d      	cbz	r5, 80198d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80198d2:	3501      	adds	r5, #1
 80198d4:	9508      	str	r5, [sp, #32]
 80198d6:	3301      	adds	r3, #1
 80198d8:	930d      	str	r3, [sp, #52]	; 0x34
 80198da:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80198de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80198e0:	f1bb 0f00 	cmp.w	fp, #0
 80198e4:	d0d6      	beq.n	8019894 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80198e6:	f8bb 2000 	ldrh.w	r2, [fp]
 80198ea:	2a00      	cmp	r2, #0
 80198ec:	d1d6      	bne.n	801989c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80198ee:	f8bb 2000 	ldrh.w	r2, [fp]
 80198f2:	2a00      	cmp	r2, #0
 80198f4:	d0bb      	beq.n	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80198f6:	459a      	cmp	sl, r3
 80198f8:	ddb9      	ble.n	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80198fa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80198fe:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8019902:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8019906:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801990a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801990e:	960e      	str	r6, [sp, #56]	; 0x38
 8019910:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8019914:	960f      	str	r6, [sp, #60]	; 0x3c
 8019916:	f1bb 0f00 	cmp.w	fp, #0
 801991a:	d002      	beq.n	8019922 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801991c:	f10b 0302 	add.w	r3, fp, #2
 8019920:	9309      	str	r3, [sp, #36]	; 0x24
 8019922:	b10d      	cbz	r5, 8019928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8019924:	1c6b      	adds	r3, r5, #1
 8019926:	9308      	str	r3, [sp, #32]
 8019928:	ab0f      	add	r3, sp, #60	; 0x3c
 801992a:	9305      	str	r3, [sp, #20]
 801992c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019930:	9304      	str	r3, [sp, #16]
 8019932:	ab0e      	add	r3, sp, #56	; 0x38
 8019934:	9303      	str	r3, [sp, #12]
 8019936:	ab0c      	add	r3, sp, #48	; 0x30
 8019938:	9302      	str	r3, [sp, #8]
 801993a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801993e:	9301      	str	r3, [sp, #4]
 8019940:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019944:	9300      	str	r3, [sp, #0]
 8019946:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801994a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801994e:	a908      	add	r1, sp, #32
 8019950:	a809      	add	r0, sp, #36	; 0x24
 8019952:	f7ff fea8 	bl	80196a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019956:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019958:	2b00      	cmp	r3, #0
 801995a:	bfbe      	ittt	lt
 801995c:	6823      	ldrlt	r3, [r4, #0]
 801995e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8019962:	930e      	strlt	r3, [sp, #56]	; 0x38
 8019964:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019966:	bfb8      	it	lt
 8019968:	3404      	addlt	r4, #4
 801996a:	2b00      	cmp	r3, #0
 801996c:	bfb8      	it	lt
 801996e:	6823      	ldrlt	r3, [r4, #0]
 8019970:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8019974:	bfbe      	ittt	lt
 8019976:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801997a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801997c:	3404      	addlt	r4, #4
 801997e:	b1d9      	cbz	r1, 80199b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8019980:	880b      	ldrh	r3, [r1, #0]
 8019982:	2b69      	cmp	r3, #105	; 0x69
 8019984:	d01f      	beq.n	80199c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8019986:	d82f      	bhi.n	80199e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8019988:	2b58      	cmp	r3, #88	; 0x58
 801998a:	d01c      	beq.n	80199c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801998c:	d818      	bhi.n	80199c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801998e:	2b25      	cmp	r3, #37	; 0x25
 8019990:	d034      	beq.n	80199fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8019992:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8019996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019998:	f1bb 0f00 	cmp.w	fp, #0
 801999c:	f000 80b8 	beq.w	8019b10 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80199a0:	f8bb 5000 	ldrh.w	r5, [fp]
 80199a4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80199a8:	3301      	adds	r3, #1
 80199aa:	930d      	str	r3, [sp, #52]	; 0x34
 80199ac:	e029      	b.n	8019a02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80199ae:	b10d      	cbz	r5, 80199b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80199b0:	782a      	ldrb	r2, [r5, #0]
 80199b2:	e785      	b.n	80198c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80199b4:	462a      	mov	r2, r5
 80199b6:	e783      	b.n	80198c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80199b8:	2a00      	cmp	r2, #0
 80199ba:	d0ea      	beq.n	8019992 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80199bc:	7813      	ldrb	r3, [r2, #0]
 80199be:	e7e0      	b.n	8019982 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80199c0:	3b63      	subs	r3, #99	; 0x63
 80199c2:	2b01      	cmp	r3, #1
 80199c4:	d8e5      	bhi.n	8019992 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80199c6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80199ca:	b329      	cbz	r1, 8019a18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80199cc:	880b      	ldrh	r3, [r1, #0]
 80199ce:	2b69      	cmp	r3, #105	; 0x69
 80199d0:	d063      	beq.n	8019a9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80199d2:	d825      	bhi.n	8019a20 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80199d4:	2b63      	cmp	r3, #99	; 0x63
 80199d6:	d038      	beq.n	8019a4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80199d8:	2b64      	cmp	r3, #100	; 0x64
 80199da:	d05e      	beq.n	8019a9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80199dc:	2b58      	cmp	r3, #88	; 0x58
 80199de:	d07b      	beq.n	8019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80199e0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80199e4:	4625      	mov	r5, r4
 80199e6:	e036      	b.n	8019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80199e8:	2b73      	cmp	r3, #115	; 0x73
 80199ea:	d0ec      	beq.n	80199c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80199ec:	d802      	bhi.n	80199f4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80199ee:	2b6f      	cmp	r3, #111	; 0x6f
 80199f0:	d1cf      	bne.n	8019992 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80199f2:	e7e8      	b.n	80199c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80199f4:	2b75      	cmp	r3, #117	; 0x75
 80199f6:	d0e6      	beq.n	80199c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80199f8:	2b78      	cmp	r3, #120	; 0x78
 80199fa:	e7f9      	b.n	80199f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80199fc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80199fe:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8019a02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a04:	b10b      	cbz	r3, 8019a0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8019a06:	3302      	adds	r3, #2
 8019a08:	9309      	str	r3, [sp, #36]	; 0x24
 8019a0a:	9b08      	ldr	r3, [sp, #32]
 8019a0c:	2b00      	cmp	r3, #0
 8019a0e:	f43f af2e 	beq.w	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019a12:	3301      	adds	r3, #1
 8019a14:	9308      	str	r3, [sp, #32]
 8019a16:	e72a      	b.n	801986e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8019a18:	2a00      	cmp	r2, #0
 8019a1a:	d0e1      	beq.n	80199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019a1c:	7813      	ldrb	r3, [r2, #0]
 8019a1e:	e7d6      	b.n	80199ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8019a20:	2b73      	cmp	r3, #115	; 0x73
 8019a22:	d036      	beq.n	8019a92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8019a24:	d807      	bhi.n	8019a36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8019a26:	2b6f      	cmp	r3, #111	; 0x6f
 8019a28:	d1da      	bne.n	80199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019a2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019a2c:	1d25      	adds	r5, r4, #4
 8019a2e:	eba8 0202 	sub.w	r2, r8, r2
 8019a32:	2308      	movs	r3, #8
 8019a34:	e04a      	b.n	8019acc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019a36:	2b75      	cmp	r3, #117	; 0x75
 8019a38:	d043      	beq.n	8019ac2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8019a3a:	2b78      	cmp	r3, #120	; 0x78
 8019a3c:	d1d0      	bne.n	80199e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8019a3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019a40:	1d25      	adds	r5, r4, #4
 8019a42:	eba8 0202 	sub.w	r2, r8, r2
 8019a46:	2310      	movs	r3, #16
 8019a48:	e040      	b.n	8019acc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8019a4a:	6823      	ldr	r3, [r4, #0]
 8019a4c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019a50:	1d25      	adds	r5, r4, #4
 8019a52:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8019a56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019a58:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019a5c:	2b00      	cmp	r3, #0
 8019a5e:	d052      	beq.n	8019b06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8019a60:	881a      	ldrh	r2, [r3, #0]
 8019a62:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019a66:	a80d      	add	r0, sp, #52	; 0x34
 8019a68:	9005      	str	r0, [sp, #20]
 8019a6a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019a6e:	9004      	str	r0, [sp, #16]
 8019a70:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019a72:	9003      	str	r0, [sp, #12]
 8019a74:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019a78:	9002      	str	r0, [sp, #8]
 8019a7a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019a7c:	9001      	str	r0, [sp, #4]
 8019a7e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019a82:	9000      	str	r0, [sp, #0]
 8019a84:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8019a88:	a810      	add	r0, sp, #64	; 0x40
 8019a8a:	f7ff fd49 	bl	8019520 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019a8e:	462c      	mov	r4, r5
 8019a90:	e7b7      	b.n	8019a02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8019a92:	6823      	ldr	r3, [r4, #0]
 8019a94:	1d25      	adds	r5, r4, #4
 8019a96:	9310      	str	r3, [sp, #64]	; 0x40
 8019a98:	e7dd      	b.n	8019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019a9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019a9c:	6820      	ldr	r0, [r4, #0]
 8019a9e:	eba8 0202 	sub.w	r2, r8, r2
 8019aa2:	230a      	movs	r3, #10
 8019aa4:	b292      	uxth	r2, r2
 8019aa6:	4649      	mov	r1, r9
 8019aa8:	f7ff fce4 	bl	8019474 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8019aac:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8019ab0:	2b2d      	cmp	r3, #45	; 0x2d
 8019ab2:	f104 0504 	add.w	r5, r4, #4
 8019ab6:	d1ce      	bne.n	8019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ab8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019abc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019abe:	3302      	adds	r3, #2
 8019ac0:	e7e9      	b.n	8019a96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8019ac2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ac4:	1d25      	adds	r5, r4, #4
 8019ac6:	eba8 0202 	sub.w	r2, r8, r2
 8019aca:	230a      	movs	r3, #10
 8019acc:	b292      	uxth	r2, r2
 8019ace:	4649      	mov	r1, r9
 8019ad0:	6820      	ldr	r0, [r4, #0]
 8019ad2:	f7ff fcfb 	bl	80194cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019ad6:	e7be      	b.n	8019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019ad8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019ada:	6820      	ldr	r0, [r4, #0]
 8019adc:	eba8 0202 	sub.w	r2, r8, r2
 8019ae0:	b292      	uxth	r2, r2
 8019ae2:	2310      	movs	r3, #16
 8019ae4:	4649      	mov	r1, r9
 8019ae6:	f7ff fcf1 	bl	80194cc <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8019aea:	1d25      	adds	r5, r4, #4
 8019aec:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8019af0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8019af4:	2b00      	cmp	r3, #0
 8019af6:	d0ae      	beq.n	8019a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8019af8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8019afc:	2919      	cmp	r1, #25
 8019afe:	d8f7      	bhi.n	8019af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019b00:	3b20      	subs	r3, #32
 8019b02:	8013      	strh	r3, [r2, #0]
 8019b04:	e7f4      	b.n	8019af0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8019b06:	9a08      	ldr	r2, [sp, #32]
 8019b08:	2a00      	cmp	r2, #0
 8019b0a:	d0aa      	beq.n	8019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019b0c:	7812      	ldrb	r2, [r2, #0]
 8019b0e:	e7a8      	b.n	8019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8019b10:	2d00      	cmp	r5, #0
 8019b12:	f43f af47 	beq.w	80199a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8019b16:	782d      	ldrb	r5, [r5, #0]
 8019b18:	e744      	b.n	80199a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08019b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8019b1a:	b507      	push	{r0, r1, r2, lr}
 8019b1c:	9300      	str	r3, [sp, #0]
 8019b1e:	4613      	mov	r3, r2
 8019b20:	2200      	movs	r2, #0
 8019b22:	f7ff fe90 	bl	8019846 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8019b26:	b003      	add	sp, #12
 8019b28:	f85d fb04 	ldr.w	pc, [sp], #4

08019b2c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8019b2c:	b40c      	push	{r2, r3}
 8019b2e:	b507      	push	{r0, r1, r2, lr}
 8019b30:	ab04      	add	r3, sp, #16
 8019b32:	f853 2b04 	ldr.w	r2, [r3], #4
 8019b36:	9301      	str	r3, [sp, #4]
 8019b38:	f7ff ffef 	bl	8019b1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8019b3c:	b003      	add	sp, #12
 8019b3e:	f85d eb04 	ldr.w	lr, [sp], #4
 8019b42:	b002      	add	sp, #8
 8019b44:	4770      	bx	lr
	...

08019b48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8019b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b4c:	b0c5      	sub	sp, #276	; 0x114
 8019b4e:	2400      	movs	r4, #0
 8019b50:	af11      	add	r7, sp, #68	; 0x44
 8019b52:	4606      	mov	r6, r0
 8019b54:	468a      	mov	sl, r1
 8019b56:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8019b5a:	4621      	mov	r1, r4
 8019b5c:	22c8      	movs	r2, #200	; 0xc8
 8019b5e:	4638      	mov	r0, r7
 8019b60:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8019b64:	940d      	str	r4, [sp, #52]	; 0x34
 8019b66:	f011 ff00 	bl	802b96a <memset>
 8019b6a:	b16e      	cbz	r6, 8019b88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8019b6c:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8019e10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8019b70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019b72:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019b74:	b162      	cbz	r2, 8019b90 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8019b76:	8812      	ldrh	r2, [r2, #0]
 8019b78:	b11a      	cbz	r2, 8019b82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019b7a:	f10a 31ff 	add.w	r1, sl, #4294967295
 8019b7e:	4299      	cmp	r1, r3
 8019b80:	dc2e      	bgt.n	8019be0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8019b82:	2200      	movs	r2, #0
 8019b84:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019b88:	4630      	mov	r0, r6
 8019b8a:	b045      	add	sp, #276	; 0x114
 8019b8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b90:	9a08      	ldr	r2, [sp, #32]
 8019b92:	2a00      	cmp	r2, #0
 8019b94:	d0f5      	beq.n	8019b82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8019b96:	7812      	ldrb	r2, [r2, #0]
 8019b98:	e7ee      	b.n	8019b78 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8019b9a:	2d00      	cmp	r5, #0
 8019b9c:	d0e8      	beq.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019b9e:	782a      	ldrb	r2, [r5, #0]
 8019ba0:	b142      	cbz	r2, 8019bb4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8019ba2:	2a25      	cmp	r2, #37	; 0x25
 8019ba4:	d001      	beq.n	8019baa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8019ba6:	4299      	cmp	r1, r3
 8019ba8:	dc08      	bgt.n	8019bbc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8019baa:	f1b8 0f00 	cmp.w	r8, #0
 8019bae:	d121      	bne.n	8019bf4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8019bb0:	2d00      	cmp	r5, #0
 8019bb2:	d0dd      	beq.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019bb4:	782a      	ldrb	r2, [r5, #0]
 8019bb6:	f04f 0800 	mov.w	r8, #0
 8019bba:	e01d      	b.n	8019bf8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8019bbc:	f1b8 0f00 	cmp.w	r8, #0
 8019bc0:	d07f      	beq.n	8019cc2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8019bc2:	f8b8 2000 	ldrh.w	r2, [r8]
 8019bc6:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019bca:	f1b8 0f00 	cmp.w	r8, #0
 8019bce:	d002      	beq.n	8019bd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8019bd0:	f108 0202 	add.w	r2, r8, #2
 8019bd4:	9209      	str	r2, [sp, #36]	; 0x24
 8019bd6:	b10d      	cbz	r5, 8019bdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8019bd8:	3501      	adds	r5, #1
 8019bda:	9508      	str	r5, [sp, #32]
 8019bdc:	3301      	adds	r3, #1
 8019bde:	930d      	str	r3, [sp, #52]	; 0x34
 8019be0:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8019be4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019be6:	f1b8 0f00 	cmp.w	r8, #0
 8019bea:	d0d6      	beq.n	8019b9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8019bec:	f8b8 2000 	ldrh.w	r2, [r8]
 8019bf0:	2a00      	cmp	r2, #0
 8019bf2:	d1d6      	bne.n	8019ba2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8019bf4:	f8b8 2000 	ldrh.w	r2, [r8]
 8019bf8:	2a00      	cmp	r2, #0
 8019bfa:	d0b9      	beq.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019bfc:	4299      	cmp	r1, r3
 8019bfe:	ddb7      	ble.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019c00:	2300      	movs	r3, #0
 8019c02:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8019c06:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8019c0a:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8019c0e:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8019c12:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8019c16:	930e      	str	r3, [sp, #56]	; 0x38
 8019c18:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019c1c:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c1e:	f1b8 0f00 	cmp.w	r8, #0
 8019c22:	d002      	beq.n	8019c2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8019c24:	f108 0302 	add.w	r3, r8, #2
 8019c28:	9309      	str	r3, [sp, #36]	; 0x24
 8019c2a:	b10d      	cbz	r5, 8019c30 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8019c2c:	1c6b      	adds	r3, r5, #1
 8019c2e:	9308      	str	r3, [sp, #32]
 8019c30:	ab0f      	add	r3, sp, #60	; 0x3c
 8019c32:	9305      	str	r3, [sp, #20]
 8019c34:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8019c38:	9304      	str	r3, [sp, #16]
 8019c3a:	ab0e      	add	r3, sp, #56	; 0x38
 8019c3c:	9303      	str	r3, [sp, #12]
 8019c3e:	ab0c      	add	r3, sp, #48	; 0x30
 8019c40:	9302      	str	r3, [sp, #8]
 8019c42:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8019c46:	9301      	str	r3, [sp, #4]
 8019c48:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8019c4c:	9300      	str	r3, [sp, #0]
 8019c4e:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8019c52:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8019c56:	a908      	add	r1, sp, #32
 8019c58:	a809      	add	r0, sp, #36	; 0x24
 8019c5a:	f7ff fd24 	bl	80196a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8019c5e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019c60:	2b00      	cmp	r3, #0
 8019c62:	da0b      	bge.n	8019c7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8019c64:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019c68:	edd3 7a00 	vldr	s15, [r3]
 8019c6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019c70:	3401      	adds	r4, #1
 8019c72:	ee17 3a90 	vmov	r3, s15
 8019c76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c7a:	930e      	str	r3, [sp, #56]	; 0x38
 8019c7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019c7e:	2b00      	cmp	r3, #0
 8019c80:	da0b      	bge.n	8019c9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8019c82:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019c86:	edd3 7a00 	vldr	s15, [r3]
 8019c8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8019c8e:	3401      	adds	r4, #1
 8019c90:	ee17 3a90 	vmov	r3, s15
 8019c94:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019c98:	930f      	str	r3, [sp, #60]	; 0x3c
 8019c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c9c:	b1b3      	cbz	r3, 8019ccc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8019c9e:	881a      	ldrh	r2, [r3, #0]
 8019ca0:	2a25      	cmp	r2, #37	; 0x25
 8019ca2:	d018      	beq.n	8019cd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8019ca4:	2a66      	cmp	r2, #102	; 0x66
 8019ca6:	d01c      	beq.n	8019ce2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8019ca8:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8019cac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cae:	f1b8 0f00 	cmp.w	r8, #0
 8019cb2:	f000 8121 	beq.w	8019ef8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8019cb6:	f8b8 5000 	ldrh.w	r5, [r8]
 8019cba:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8019cbe:	3301      	adds	r3, #1
 8019cc0:	e00d      	b.n	8019cde <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8019cc2:	b10d      	cbz	r5, 8019cc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8019cc4:	782a      	ldrb	r2, [r5, #0]
 8019cc6:	e77e      	b.n	8019bc6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019cc8:	462a      	mov	r2, r5
 8019cca:	e77c      	b.n	8019bc6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8019ccc:	9b08      	ldr	r3, [sp, #32]
 8019cce:	2b00      	cmp	r3, #0
 8019cd0:	d0ea      	beq.n	8019ca8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8019cd2:	781a      	ldrb	r2, [r3, #0]
 8019cd4:	e7e4      	b.n	8019ca0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8019cd6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cd8:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8019cdc:	3302      	adds	r3, #2
 8019cde:	930d      	str	r3, [sp, #52]	; 0x34
 8019ce0:	e041      	b.n	8019d66 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8019ce2:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8019ce6:	edd3 7a00 	vldr	s15, [r3]
 8019cea:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019cee:	9710      	str	r7, [sp, #64]	; 0x40
 8019cf0:	3401      	adds	r4, #1
 8019cf2:	b923      	cbnz	r3, 8019cfe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8019cf4:	2301      	movs	r3, #1
 8019cf6:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8019cfa:	2306      	movs	r3, #6
 8019cfc:	930f      	str	r3, [sp, #60]	; 0x3c
 8019cfe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8019d02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d06:	bf48      	it	mi
 8019d08:	eef1 7a67 	vnegmi.f32	s15, s15
 8019d0c:	eeb0 7ae7 	vabs.f32	s14, s15
 8019d10:	bf48      	it	mi
 8019d12:	232d      	movmi	r3, #45	; 0x2d
 8019d14:	eeb4 7a45 	vcmp.f32	s14, s10
 8019d18:	bf48      	it	mi
 8019d1a:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8019d1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d22:	dd2b      	ble.n	8019d7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8019d24:	4b3b      	ldr	r3, [pc, #236]	; (8019e14 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8019d26:	9311      	str	r3, [sp, #68]	; 0x44
 8019d28:	2366      	movs	r3, #102	; 0x66
 8019d2a:	9312      	str	r3, [sp, #72]	; 0x48
 8019d2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d2e:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8019d32:	2b00      	cmp	r3, #0
 8019d34:	f000 80da 	beq.w	8019eec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8019d38:	881a      	ldrh	r2, [r3, #0]
 8019d3a:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8019d3e:	a80d      	add	r0, sp, #52	; 0x34
 8019d40:	9005      	str	r0, [sp, #20]
 8019d42:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8019d46:	9004      	str	r0, [sp, #16]
 8019d48:	980e      	ldr	r0, [sp, #56]	; 0x38
 8019d4a:	9003      	str	r0, [sp, #12]
 8019d4c:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8019d50:	9002      	str	r0, [sp, #8]
 8019d52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019d54:	9001      	str	r0, [sp, #4]
 8019d56:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8019d5a:	9000      	str	r0, [sp, #0]
 8019d5c:	e9cd a606 	strd	sl, r6, [sp, #24]
 8019d60:	a810      	add	r0, sp, #64	; 0x40
 8019d62:	f7ff fbdd 	bl	8019520 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8019d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d68:	b10b      	cbz	r3, 8019d6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8019d6a:	3302      	adds	r3, #2
 8019d6c:	9309      	str	r3, [sp, #36]	; 0x24
 8019d6e:	9b08      	ldr	r3, [sp, #32]
 8019d70:	2b00      	cmp	r3, #0
 8019d72:	f43f aefd 	beq.w	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019d76:	3301      	adds	r3, #1
 8019d78:	9308      	str	r3, [sp, #32]
 8019d7a:	e6f9      	b.n	8019b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8019d7c:	eef4 7a67 	vcmp.f32	s15, s15
 8019d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019d84:	d63a      	bvs.n	8019dfc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8019d86:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8019d8a:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8019d8e:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8019d92:	eeb0 6a67 	vmov.f32	s12, s15
 8019d96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019d9a:	eef0 5a47 	vmov.f32	s11, s14
 8019d9e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8019da2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019da6:	da2d      	bge.n	8019e04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8019da8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019daa:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8019dae:	2100      	movs	r1, #0
 8019db0:	eef0 4a46 	vmov.f32	s9, s12
 8019db4:	ebaa 0202 	sub.w	r2, sl, r2
 8019db8:	eef4 6ac6 	vcmpe.f32	s13, s12
 8019dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019dc0:	b28d      	uxth	r5, r1
 8019dc2:	db2c      	blt.n	8019e1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019dc4:	1a53      	subs	r3, r2, r1
 8019dc6:	2b00      	cmp	r3, #0
 8019dc8:	dd29      	ble.n	8019e1e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8019dca:	3101      	adds	r1, #1
 8019dcc:	2964      	cmp	r1, #100	; 0x64
 8019dce:	d025      	beq.n	8019e1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8019dd0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8019dd4:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8019dd8:	ee17 3a10 	vmov	r3, s14
 8019ddc:	2b09      	cmp	r3, #9
 8019dde:	bfa8      	it	ge
 8019de0:	2309      	movge	r3, #9
 8019de2:	ee07 3a10 	vmov	s14, r3
 8019de6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019dea:	f103 0030 	add.w	r0, r3, #48	; 0x30
 8019dee:	eee7 7a66 	vfms.f32	s15, s14, s13
 8019df2:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8019df6:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8019dfa:	e7dd      	b.n	8019db8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8019dfc:	4b06      	ldr	r3, [pc, #24]	; (8019e18 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 8019dfe:	9311      	str	r3, [sp, #68]	; 0x44
 8019e00:	236e      	movs	r3, #110	; 0x6e
 8019e02:	e792      	b.n	8019d2a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8019e04:	ee66 6a87 	vmul.f32	s13, s13, s14
 8019e08:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8019e0c:	e7c7      	b.n	8019d9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8019e0e:	bf00      	nop
 8019e10:	7f7fffff 	.word	0x7f7fffff
 8019e14:	006e0069 	.word	0x006e0069
 8019e18:	0061006e 	.word	0x0061006e
 8019e1c:	2563      	movs	r5, #99	; 0x63
 8019e1e:	2a63      	cmp	r2, #99	; 0x63
 8019e20:	bfd4      	ite	le
 8019e22:	ebc5 0202 	rsble	r2, r5, r2
 8019e26:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8019e2a:	2a00      	cmp	r2, #0
 8019e2c:	dd43      	ble.n	8019eb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019e2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019e30:	2b00      	cmp	r3, #0
 8019e32:	dd40      	ble.n	8019eb6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8019e34:	f04f 0901 	mov.w	r9, #1
 8019e38:	210a      	movs	r1, #10
 8019e3a:	f113 33ff 	adds.w	r3, r3, #4294967295
 8019e3e:	d30c      	bcc.n	8019e5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8019e40:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8019e44:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8019e48:	ee17 0a10 	vmov	r0, s14
 8019e4c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8019e50:	fb01 0909 	mla	r9, r1, r9, r0
 8019e54:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8019e58:	e7ef      	b.n	8019e3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8019e5a:	3501      	adds	r5, #1
 8019e5c:	930f      	str	r3, [sp, #60]	; 0x3c
 8019e5e:	b292      	uxth	r2, r2
 8019e60:	230a      	movs	r3, #10
 8019e62:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8019e66:	4648      	mov	r0, r9
 8019e68:	f7ff fb4e 	bl	8019508 <_ZN8touchgfx7Unicode4itoaElPtti>
 8019e6c:	f1b9 0f01 	cmp.w	r9, #1
 8019e70:	dc1f      	bgt.n	8019eb2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8019e72:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8019e76:	2b00      	cmp	r3, #0
 8019e78:	bf0c      	ite	eq
 8019e7a:	2300      	moveq	r3, #0
 8019e7c:	232e      	movne	r3, #46	; 0x2e
 8019e7e:	aa44      	add	r2, sp, #272	; 0x110
 8019e80:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019e84:	eef4 7ae4 	vcmpe.f32	s15, s9
 8019e88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8019e8c:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8019e90:	f6ff af4c 	blt.w	8019d2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019e94:	2300      	movs	r3, #0
 8019e96:	f838 2b02 	ldrh.w	r2, [r8], #2
 8019e9a:	1c59      	adds	r1, r3, #1
 8019e9c:	b98a      	cbnz	r2, 8019ec2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8019e9e:	b29b      	uxth	r3, r3
 8019ea0:	2130      	movs	r1, #48	; 0x30
 8019ea2:	b983      	cbnz	r3, 8019ec6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8019ea4:	2331      	movs	r3, #49	; 0x31
 8019ea6:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8019eaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019eac:	3b02      	subs	r3, #2
 8019eae:	9310      	str	r3, [sp, #64]	; 0x40
 8019eb0:	e73c      	b.n	8019d2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019eb2:	232e      	movs	r3, #46	; 0x2e
 8019eb4:	e7e3      	b.n	8019e7e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8019eb6:	ab44      	add	r3, sp, #272	; 0x110
 8019eb8:	3501      	adds	r5, #1
 8019eba:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8019ebe:	2300      	movs	r3, #0
 8019ec0:	e7e0      	b.n	8019e84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8019ec2:	460b      	mov	r3, r1
 8019ec4:	e7e7      	b.n	8019e96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8019ec6:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8019eca:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 8019ece:	2808      	cmp	r0, #8
 8019ed0:	d806      	bhi.n	8019ee0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 8019ed2:	a944      	add	r1, sp, #272	; 0x110
 8019ed4:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8019ed8:	3201      	adds	r2, #1
 8019eda:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8019ede:	e725      	b.n	8019d2c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8019ee0:	2a39      	cmp	r2, #57	; 0x39
 8019ee2:	bf08      	it	eq
 8019ee4:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8019ee8:	3b01      	subs	r3, #1
 8019eea:	e7da      	b.n	8019ea2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8019eec:	9a08      	ldr	r2, [sp, #32]
 8019eee:	2a00      	cmp	r2, #0
 8019ef0:	f43f af23 	beq.w	8019d3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019ef4:	7812      	ldrb	r2, [r2, #0]
 8019ef6:	e720      	b.n	8019d3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8019ef8:	2d00      	cmp	r5, #0
 8019efa:	f43f aede 	beq.w	8019cba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019efe:	782d      	ldrb	r5, [r5, #0]
 8019f00:	e6db      	b.n	8019cba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8019f02:	bf00      	nop

08019f04 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8019f04:	b507      	push	{r0, r1, r2, lr}
 8019f06:	9300      	str	r3, [sp, #0]
 8019f08:	4613      	mov	r3, r2
 8019f0a:	2200      	movs	r2, #0
 8019f0c:	f7ff fe1c 	bl	8019b48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8019f10:	b003      	add	sp, #12
 8019f12:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08019f18 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8019f18:	4b01      	ldr	r3, [pc, #4]	; (8019f20 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8019f1a:	6018      	str	r0, [r3, #0]
 8019f1c:	4770      	bx	lr
 8019f1e:	bf00      	nop
 8019f20:	20013854 	.word	0x20013854

08019f24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8019f24:	4b06      	ldr	r3, [pc, #24]	; (8019f40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8019f26:	881a      	ldrh	r2, [r3, #0]
 8019f28:	4282      	cmp	r2, r0
 8019f2a:	d807      	bhi.n	8019f3c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8019f2c:	4b05      	ldr	r3, [pc, #20]	; (8019f44 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8019f2e:	881b      	ldrh	r3, [r3, #0]
 8019f30:	4413      	add	r3, r2
 8019f32:	4298      	cmp	r0, r3
 8019f34:	bfac      	ite	ge
 8019f36:	2000      	movge	r0, #0
 8019f38:	2001      	movlt	r0, #1
 8019f3a:	4770      	bx	lr
 8019f3c:	2000      	movs	r0, #0
 8019f3e:	4770      	bx	lr
 8019f40:	20013874 	.word	0x20013874
 8019f44:	20013878 	.word	0x20013878

08019f48 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8019f48:	b508      	push	{r3, lr}
 8019f4a:	4601      	mov	r1, r0
 8019f4c:	f7ff ffea 	bl	8019f24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8019f50:	b118      	cbz	r0, 8019f5a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8019f52:	4b02      	ldr	r3, [pc, #8]	; (8019f5c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8019f54:	681b      	ldr	r3, [r3, #0]
 8019f56:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8019f5a:	bd08      	pop	{r3, pc}
 8019f5c:	20013858 	.word	0x20013858

08019f60 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8019f60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019f62:	4c24      	ldr	r4, [pc, #144]	; (8019ff4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8019f64:	6823      	ldr	r3, [r4, #0]
 8019f66:	2b00      	cmp	r3, #0
 8019f68:	d042      	beq.n	8019ff0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019f6a:	4a23      	ldr	r2, [pc, #140]	; (8019ff8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8019f6c:	4d23      	ldr	r5, [pc, #140]	; (8019ffc <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8019f6e:	8811      	ldrh	r1, [r2, #0]
 8019f70:	f8b5 c000 	ldrh.w	ip, [r5]
 8019f74:	4822      	ldr	r0, [pc, #136]	; (801a000 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8019f76:	4461      	add	r1, ip
 8019f78:	1c4a      	adds	r2, r1, #1
 8019f7a:	f022 0201 	bic.w	r2, r2, #1
 8019f7e:	008f      	lsls	r7, r1, #2
 8019f80:	0412      	lsls	r2, r2, #16
 8019f82:	19de      	adds	r6, r3, r7
 8019f84:	0c12      	lsrs	r2, r2, #16
 8019f86:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8019f8a:	6006      	str	r6, [r0, #0]
 8019f8c:	4e1d      	ldr	r6, [pc, #116]	; (801a004 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8019f8e:	19da      	adds	r2, r3, r7
 8019f90:	6032      	str	r2, [r6, #0]
 8019f92:	220e      	movs	r2, #14
 8019f94:	fb02 f20c 	mul.w	r2, r2, ip
 8019f98:	3203      	adds	r2, #3
 8019f9a:	f022 0203 	bic.w	r2, r2, #3
 8019f9e:	443a      	add	r2, r7
 8019fa0:	4f19      	ldr	r7, [pc, #100]	; (801a008 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8019fa2:	4413      	add	r3, r2
 8019fa4:	603b      	str	r3, [r7, #0]
 8019fa6:	4f19      	ldr	r7, [pc, #100]	; (801a00c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8019fa8:	2300      	movs	r3, #0
 8019faa:	803b      	strh	r3, [r7, #0]
 8019fac:	4f18      	ldr	r7, [pc, #96]	; (801a010 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8019fae:	683f      	ldr	r7, [r7, #0]
 8019fb0:	1aba      	subs	r2, r7, r2
 8019fb2:	4f18      	ldr	r7, [pc, #96]	; (801a014 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8019fb4:	603a      	str	r2, [r7, #0]
 8019fb6:	4a18      	ldr	r2, [pc, #96]	; (801a018 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8019fb8:	469c      	mov	ip, r3
 8019fba:	8013      	strh	r3, [r2, #0]
 8019fbc:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8019fc0:	428b      	cmp	r3, r1
 8019fc2:	d10d      	bne.n	8019fe0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8019fc4:	882d      	ldrh	r5, [r5, #0]
 8019fc6:	6830      	ldr	r0, [r6, #0]
 8019fc8:	2300      	movs	r3, #0
 8019fca:	240e      	movs	r4, #14
 8019fcc:	429d      	cmp	r5, r3
 8019fce:	d90f      	bls.n	8019ff0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8019fd0:	fb04 0203 	mla	r2, r4, r3, r0
 8019fd4:	3301      	adds	r3, #1
 8019fd6:	7b11      	ldrb	r1, [r2, #12]
 8019fd8:	f36f 1145 	bfc	r1, #5, #1
 8019fdc:	7311      	strb	r1, [r2, #12]
 8019fde:	e7f5      	b.n	8019fcc <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8019fe0:	6822      	ldr	r2, [r4, #0]
 8019fe2:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8019fe6:	6802      	ldr	r2, [r0, #0]
 8019fe8:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8019fec:	3301      	adds	r3, #1
 8019fee:	e7e7      	b.n	8019fc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8019ff0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019ff2:	bf00      	nop
 8019ff4:	20013858 	.word	0x20013858
 8019ff8:	20013874 	.word	0x20013874
 8019ffc:	20013878 	.word	0x20013878
 801a000:	2001386c 	.word	0x2001386c
 801a004:	2001385c 	.word	0x2001385c
 801a008:	20013864 	.word	0x20013864
 801a00c:	20013876 	.word	0x20013876
 801a010:	20013860 	.word	0x20013860
 801a014:	20013870 	.word	0x20013870
 801a018:	20013868 	.word	0x20013868

0801a01c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801a01c:	4b06      	ldr	r3, [pc, #24]	; (801a038 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801a01e:	681b      	ldr	r3, [r3, #0]
 801a020:	b943      	cbnz	r3, 801a034 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a022:	b139      	cbz	r1, 801a034 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801a024:	4b05      	ldr	r3, [pc, #20]	; (801a03c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801a026:	801a      	strh	r2, [r3, #0]
 801a028:	4b05      	ldr	r3, [pc, #20]	; (801a040 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801a02a:	6019      	str	r1, [r3, #0]
 801a02c:	4b05      	ldr	r3, [pc, #20]	; (801a044 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801a02e:	6018      	str	r0, [r3, #0]
 801a030:	f7ff bf96 	b.w	8019f60 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801a034:	4770      	bx	lr
 801a036:	bf00      	nop
 801a038:	20013864 	.word	0x20013864
 801a03c:	20013878 	.word	0x20013878
 801a040:	20013860 	.word	0x20013860
 801a044:	20013858 	.word	0x20013858

0801a048 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801a048:	b470      	push	{r4, r5, r6}
 801a04a:	4c07      	ldr	r4, [pc, #28]	; (801a068 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801a04c:	6826      	ldr	r6, [r4, #0]
 801a04e:	4605      	mov	r5, r0
 801a050:	4610      	mov	r0, r2
 801a052:	9a03      	ldr	r2, [sp, #12]
 801a054:	b936      	cbnz	r6, 801a064 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801a056:	6025      	str	r5, [r4, #0]
 801a058:	4c04      	ldr	r4, [pc, #16]	; (801a06c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801a05a:	8021      	strh	r1, [r4, #0]
 801a05c:	bc70      	pop	{r4, r5, r6}
 801a05e:	4619      	mov	r1, r3
 801a060:	f7ff bfdc 	b.w	801a01c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801a064:	bc70      	pop	{r4, r5, r6}
 801a066:	4770      	bx	lr
 801a068:	2001387c 	.word	0x2001387c
 801a06c:	20013874 	.word	0x20013874

0801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801a070:	4a12      	ldr	r2, [pc, #72]	; (801a0bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801a072:	8803      	ldrh	r3, [r0, #0]
 801a074:	8812      	ldrh	r2, [r2, #0]
 801a076:	4293      	cmp	r3, r2
 801a078:	d207      	bcs.n	801a08a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801a07a:	4a11      	ldr	r2, [pc, #68]	; (801a0c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801a07c:	6812      	ldr	r2, [r2, #0]
 801a07e:	2114      	movs	r1, #20
 801a080:	fb01 2303 	mla	r3, r1, r3, r2
 801a084:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801a088:	4770      	bx	lr
 801a08a:	490e      	ldr	r1, [pc, #56]	; (801a0c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801a08c:	8809      	ldrh	r1, [r1, #0]
 801a08e:	4411      	add	r1, r2
 801a090:	428b      	cmp	r3, r1
 801a092:	da04      	bge.n	801a09e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801a094:	1a9b      	subs	r3, r3, r2
 801a096:	4a0c      	ldr	r2, [pc, #48]	; (801a0c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801a098:	210e      	movs	r1, #14
 801a09a:	6812      	ldr	r2, [r2, #0]
 801a09c:	e7f0      	b.n	801a080 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801a09e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a0a2:	4293      	cmp	r3, r2
 801a0a4:	d108      	bne.n	801a0b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801a0a6:	4b09      	ldr	r3, [pc, #36]	; (801a0cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801a0a8:	781b      	ldrb	r3, [r3, #0]
 801a0aa:	b91b      	cbnz	r3, 801a0b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801a0ac:	4b08      	ldr	r3, [pc, #32]	; (801a0d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801a0ae:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a0b2:	4770      	bx	lr
 801a0b4:	4b07      	ldr	r3, [pc, #28]	; (801a0d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 801a0b6:	e7fa      	b.n	801a0ae <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 801a0b8:	2000      	movs	r0, #0
 801a0ba:	4770      	bx	lr
 801a0bc:	20013874 	.word	0x20013874
 801a0c0:	2001387c 	.word	0x2001387c
 801a0c4:	20013878 	.word	0x20013878
 801a0c8:	2001385c 	.word	0x2001385c
 801a0cc:	200137e4 	.word	0x200137e4
 801a0d0:	200137e6 	.word	0x200137e6
 801a0d4:	200137e8 	.word	0x200137e8

0801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 801a0d8:	4a12      	ldr	r2, [pc, #72]	; (801a124 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801a0da:	8803      	ldrh	r3, [r0, #0]
 801a0dc:	8812      	ldrh	r2, [r2, #0]
 801a0de:	4293      	cmp	r3, r2
 801a0e0:	d207      	bcs.n	801a0f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801a0e2:	4a11      	ldr	r2, [pc, #68]	; (801a128 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 801a0e4:	6812      	ldr	r2, [r2, #0]
 801a0e6:	2114      	movs	r1, #20
 801a0e8:	fb01 2303 	mla	r3, r1, r3, r2
 801a0ec:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801a0f0:	4770      	bx	lr
 801a0f2:	490e      	ldr	r1, [pc, #56]	; (801a12c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 801a0f4:	8809      	ldrh	r1, [r1, #0]
 801a0f6:	4411      	add	r1, r2
 801a0f8:	428b      	cmp	r3, r1
 801a0fa:	da04      	bge.n	801a106 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801a0fc:	1a9b      	subs	r3, r3, r2
 801a0fe:	4a0c      	ldr	r2, [pc, #48]	; (801a130 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801a100:	210e      	movs	r1, #14
 801a102:	6812      	ldr	r2, [r2, #0]
 801a104:	e7f0      	b.n	801a0e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 801a106:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a10a:	4293      	cmp	r3, r2
 801a10c:	d108      	bne.n	801a120 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801a10e:	4b09      	ldr	r3, [pc, #36]	; (801a134 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801a110:	781b      	ldrb	r3, [r3, #0]
 801a112:	b91b      	cbnz	r3, 801a11c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801a114:	4b08      	ldr	r3, [pc, #32]	; (801a138 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801a116:	f9b3 0000 	ldrsh.w	r0, [r3]
 801a11a:	4770      	bx	lr
 801a11c:	4b07      	ldr	r3, [pc, #28]	; (801a13c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801a11e:	e7fa      	b.n	801a116 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801a120:	2000      	movs	r0, #0
 801a122:	4770      	bx	lr
 801a124:	20013874 	.word	0x20013874
 801a128:	2001387c 	.word	0x2001387c
 801a12c:	20013878 	.word	0x20013878
 801a130:	2001385c 	.word	0x2001385c
 801a134:	200137e4 	.word	0x200137e4
 801a138:	200137e8 	.word	0x200137e8
 801a13c:	200137e6 	.word	0x200137e6

0801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801a140:	b510      	push	{r4, lr}
 801a142:	4a1f      	ldr	r2, [pc, #124]	; (801a1c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801a144:	880b      	ldrh	r3, [r1, #0]
 801a146:	8812      	ldrh	r2, [r2, #0]
 801a148:	4293      	cmp	r3, r2
 801a14a:	d213      	bcs.n	801a174 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801a14c:	4a1d      	ldr	r2, [pc, #116]	; (801a1c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801a14e:	6812      	ldr	r2, [r2, #0]
 801a150:	2114      	movs	r1, #20
 801a152:	fb01 2303 	mla	r3, r1, r3, r2
 801a156:	8a1a      	ldrh	r2, [r3, #16]
 801a158:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 801a15c:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801a160:	8a5b      	ldrh	r3, [r3, #18]
 801a162:	8004      	strh	r4, [r0, #0]
 801a164:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a168:	f3c3 030c 	ubfx	r3, r3, #0, #13
 801a16c:	8041      	strh	r1, [r0, #2]
 801a16e:	8082      	strh	r2, [r0, #4]
 801a170:	80c3      	strh	r3, [r0, #6]
 801a172:	e00e      	b.n	801a192 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a174:	4914      	ldr	r1, [pc, #80]	; (801a1c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801a176:	8809      	ldrh	r1, [r1, #0]
 801a178:	4411      	add	r1, r2
 801a17a:	428b      	cmp	r3, r1
 801a17c:	da0a      	bge.n	801a194 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801a17e:	1a9b      	subs	r3, r3, r2
 801a180:	4a12      	ldr	r2, [pc, #72]	; (801a1cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801a182:	6812      	ldr	r2, [r2, #0]
 801a184:	210e      	movs	r1, #14
 801a186:	fb01 2303 	mla	r3, r1, r3, r2
 801a18a:	681a      	ldr	r2, [r3, #0]
 801a18c:	6002      	str	r2, [r0, #0]
 801a18e:	685a      	ldr	r2, [r3, #4]
 801a190:	6042      	str	r2, [r0, #4]
 801a192:	bd10      	pop	{r4, pc}
 801a194:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a198:	4293      	cmp	r3, r2
 801a19a:	d10b      	bne.n	801a1b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801a19c:	4b0c      	ldr	r3, [pc, #48]	; (801a1d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801a19e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801a1a2:	4b0c      	ldr	r3, [pc, #48]	; (801a1d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801a1a4:	8081      	strh	r1, [r0, #4]
 801a1a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a1aa:	80c2      	strh	r2, [r0, #6]
 801a1ac:	2300      	movs	r3, #0
 801a1ae:	8003      	strh	r3, [r0, #0]
 801a1b0:	8043      	strh	r3, [r0, #2]
 801a1b2:	e7ee      	b.n	801a192 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 801a1b4:	2300      	movs	r3, #0
 801a1b6:	8003      	strh	r3, [r0, #0]
 801a1b8:	8043      	strh	r3, [r0, #2]
 801a1ba:	8083      	strh	r3, [r0, #4]
 801a1bc:	e7d8      	b.n	801a170 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801a1be:	bf00      	nop
 801a1c0:	20013874 	.word	0x20013874
 801a1c4:	2001387c 	.word	0x2001387c
 801a1c8:	20013878 	.word	0x20013878
 801a1cc:	2001385c 	.word	0x2001385c
 801a1d0:	200137e0 	.word	0x200137e0
 801a1d4:	200137e2 	.word	0x200137e2

0801a1d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 801a1d8:	4a17      	ldr	r2, [pc, #92]	; (801a238 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801a1da:	8803      	ldrh	r3, [r0, #0]
 801a1dc:	8812      	ldrh	r2, [r2, #0]
 801a1de:	4293      	cmp	r3, r2
 801a1e0:	d213      	bcs.n	801a20a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801a1e2:	4a16      	ldr	r2, [pc, #88]	; (801a23c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801a1e4:	6812      	ldr	r2, [r2, #0]
 801a1e6:	2114      	movs	r1, #20
 801a1e8:	fb01 2303 	mla	r3, r1, r3, r2
 801a1ec:	8a1a      	ldrh	r2, [r3, #16]
 801a1ee:	8919      	ldrh	r1, [r3, #8]
 801a1f0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801a1f4:	428a      	cmp	r2, r1
 801a1f6:	db1d      	blt.n	801a234 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a1f8:	8a58      	ldrh	r0, [r3, #18]
 801a1fa:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801a1fe:	895b      	ldrh	r3, [r3, #10]
 801a200:	4298      	cmp	r0, r3
 801a202:	bfac      	ite	ge
 801a204:	2000      	movge	r0, #0
 801a206:	2001      	movlt	r0, #1
 801a208:	4770      	bx	lr
 801a20a:	490d      	ldr	r1, [pc, #52]	; (801a240 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801a20c:	8809      	ldrh	r1, [r1, #0]
 801a20e:	4411      	add	r1, r2
 801a210:	428b      	cmp	r3, r1
 801a212:	da0d      	bge.n	801a230 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801a214:	1a9b      	subs	r3, r3, r2
 801a216:	4a0b      	ldr	r2, [pc, #44]	; (801a244 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801a218:	6812      	ldr	r2, [r2, #0]
 801a21a:	210e      	movs	r1, #14
 801a21c:	fb01 2303 	mla	r3, r1, r3, r2
 801a220:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801a224:	891a      	ldrh	r2, [r3, #8]
 801a226:	4291      	cmp	r1, r2
 801a228:	db04      	blt.n	801a234 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801a22a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801a22e:	e7e6      	b.n	801a1fe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801a230:	2000      	movs	r0, #0
 801a232:	4770      	bx	lr
 801a234:	2001      	movs	r0, #1
 801a236:	4770      	bx	lr
 801a238:	20013874 	.word	0x20013874
 801a23c:	2001387c 	.word	0x2001387c
 801a240:	20013878 	.word	0x20013878
 801a244:	2001385c 	.word	0x2001385c

0801a248 <_ZNK8touchgfx6Bitmap7getDataEv>:
 801a248:	4a12      	ldr	r2, [pc, #72]	; (801a294 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801a24a:	8803      	ldrh	r3, [r0, #0]
 801a24c:	8811      	ldrh	r1, [r2, #0]
 801a24e:	428b      	cmp	r3, r1
 801a250:	d20b      	bcs.n	801a26a <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801a252:	4a11      	ldr	r2, [pc, #68]	; (801a298 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a254:	6812      	ldr	r2, [r2, #0]
 801a256:	b112      	cbz	r2, 801a25e <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801a258:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a25c:	b9c0      	cbnz	r0, 801a290 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801a25e:	4a0f      	ldr	r2, [pc, #60]	; (801a29c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801a260:	6811      	ldr	r1, [r2, #0]
 801a262:	2214      	movs	r2, #20
 801a264:	4353      	muls	r3, r2
 801a266:	58c8      	ldr	r0, [r1, r3]
 801a268:	4770      	bx	lr
 801a26a:	4a0d      	ldr	r2, [pc, #52]	; (801a2a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 801a26c:	8812      	ldrh	r2, [r2, #0]
 801a26e:	440a      	add	r2, r1
 801a270:	4293      	cmp	r3, r2
 801a272:	da04      	bge.n	801a27e <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801a274:	4a08      	ldr	r2, [pc, #32]	; (801a298 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801a276:	6812      	ldr	r2, [r2, #0]
 801a278:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 801a27c:	4770      	bx	lr
 801a27e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a282:	4293      	cmp	r3, r2
 801a284:	d103      	bne.n	801a28e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801a286:	4b07      	ldr	r3, [pc, #28]	; (801a2a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801a288:	681b      	ldr	r3, [r3, #0]
 801a28a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801a28c:	4770      	bx	lr
 801a28e:	2000      	movs	r0, #0
 801a290:	4770      	bx	lr
 801a292:	bf00      	nop
 801a294:	20013874 	.word	0x20013874
 801a298:	20013858 	.word	0x20013858
 801a29c:	2001387c 	.word	0x2001387c
 801a2a0:	20013878 	.word	0x20013878
 801a2a4:	200137ec 	.word	0x200137ec

0801a2a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801a2a8:	4b24      	ldr	r3, [pc, #144]	; (801a33c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801a2aa:	8802      	ldrh	r2, [r0, #0]
 801a2ac:	8818      	ldrh	r0, [r3, #0]
 801a2ae:	4282      	cmp	r2, r0
 801a2b0:	d221      	bcs.n	801a2f6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801a2b2:	4b23      	ldr	r3, [pc, #140]	; (801a340 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801a2b4:	6819      	ldr	r1, [r3, #0]
 801a2b6:	2314      	movs	r3, #20
 801a2b8:	fb03 1302 	mla	r3, r3, r2, r1
 801a2bc:	6858      	ldr	r0, [r3, #4]
 801a2be:	2800      	cmp	r0, #0
 801a2c0:	d03a      	beq.n	801a338 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a2c2:	4920      	ldr	r1, [pc, #128]	; (801a344 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a2c4:	6809      	ldr	r1, [r1, #0]
 801a2c6:	2900      	cmp	r1, #0
 801a2c8:	d036      	beq.n	801a338 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a2ca:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801a2ce:	2900      	cmp	r1, #0
 801a2d0:	d032      	beq.n	801a338 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801a2d2:	891a      	ldrh	r2, [r3, #8]
 801a2d4:	8958      	ldrh	r0, [r3, #10]
 801a2d6:	4350      	muls	r0, r2
 801a2d8:	7c5a      	ldrb	r2, [r3, #17]
 801a2da:	7cdb      	ldrb	r3, [r3, #19]
 801a2dc:	0952      	lsrs	r2, r2, #5
 801a2de:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801a2e2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801a2e6:	2b0b      	cmp	r3, #11
 801a2e8:	bf18      	it	ne
 801a2ea:	0040      	lslne	r0, r0, #1
 801a2ec:	3003      	adds	r0, #3
 801a2ee:	f020 0003 	bic.w	r0, r0, #3
 801a2f2:	4408      	add	r0, r1
 801a2f4:	4770      	bx	lr
 801a2f6:	4b14      	ldr	r3, [pc, #80]	; (801a348 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 801a2f8:	881b      	ldrh	r3, [r3, #0]
 801a2fa:	4403      	add	r3, r0
 801a2fc:	429a      	cmp	r2, r3
 801a2fe:	da1a      	bge.n	801a336 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a300:	4b12      	ldr	r3, [pc, #72]	; (801a34c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801a302:	681b      	ldr	r3, [r3, #0]
 801a304:	1a10      	subs	r0, r2, r0
 801a306:	210e      	movs	r1, #14
 801a308:	fb01 3000 	mla	r0, r1, r0, r3
 801a30c:	7b03      	ldrb	r3, [r0, #12]
 801a30e:	f003 031f 	and.w	r3, r3, #31
 801a312:	2b0b      	cmp	r3, #11
 801a314:	d10b      	bne.n	801a32e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801a316:	8903      	ldrh	r3, [r0, #8]
 801a318:	8940      	ldrh	r0, [r0, #10]
 801a31a:	4358      	muls	r0, r3
 801a31c:	4b09      	ldr	r3, [pc, #36]	; (801a344 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801a31e:	6819      	ldr	r1, [r3, #0]
 801a320:	3003      	adds	r0, #3
 801a322:	f020 0303 	bic.w	r3, r0, #3
 801a326:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801a32a:	4418      	add	r0, r3
 801a32c:	4770      	bx	lr
 801a32e:	2b0d      	cmp	r3, #13
 801a330:	d101      	bne.n	801a336 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801a332:	300d      	adds	r0, #13
 801a334:	4770      	bx	lr
 801a336:	2000      	movs	r0, #0
 801a338:	4770      	bx	lr
 801a33a:	bf00      	nop
 801a33c:	20013874 	.word	0x20013874
 801a340:	2001387c 	.word	0x2001387c
 801a344:	20013858 	.word	0x20013858
 801a348:	20013878 	.word	0x20013878
 801a34c:	2001385c 	.word	0x2001385c

0801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801a350:	b510      	push	{r4, lr}
 801a352:	4a17      	ldr	r2, [pc, #92]	; (801a3b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801a354:	8803      	ldrh	r3, [r0, #0]
 801a356:	8812      	ldrh	r2, [r2, #0]
 801a358:	4293      	cmp	r3, r2
 801a35a:	d20c      	bcs.n	801a376 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 801a35c:	4a15      	ldr	r2, [pc, #84]	; (801a3b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801a35e:	6812      	ldr	r2, [r2, #0]
 801a360:	2114      	movs	r1, #20
 801a362:	fb01 2303 	mla	r3, r1, r3, r2
 801a366:	7c58      	ldrb	r0, [r3, #17]
 801a368:	0942      	lsrs	r2, r0, #5
 801a36a:	7cd8      	ldrb	r0, [r3, #19]
 801a36c:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801a370:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 801a374:	bd10      	pop	{r4, pc}
 801a376:	4910      	ldr	r1, [pc, #64]	; (801a3b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801a378:	8809      	ldrh	r1, [r1, #0]
 801a37a:	4411      	add	r1, r2
 801a37c:	428b      	cmp	r3, r1
 801a37e:	da09      	bge.n	801a394 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801a380:	1a9b      	subs	r3, r3, r2
 801a382:	4a0e      	ldr	r2, [pc, #56]	; (801a3bc <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 801a384:	6812      	ldr	r2, [r2, #0]
 801a386:	210e      	movs	r1, #14
 801a388:	fb01 2303 	mla	r3, r1, r3, r2
 801a38c:	7b18      	ldrb	r0, [r3, #12]
 801a38e:	f000 001f 	and.w	r0, r0, #31
 801a392:	e7ef      	b.n	801a374 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a394:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801a398:	4293      	cmp	r3, r2
 801a39a:	d106      	bne.n	801a3aa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801a39c:	f7ea fa56 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 801a3a0:	6803      	ldr	r3, [r0, #0]
 801a3a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a3a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a3a8:	4718      	bx	r3
 801a3aa:	2000      	movs	r0, #0
 801a3ac:	e7e2      	b.n	801a374 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801a3ae:	bf00      	nop
 801a3b0:	20013874 	.word	0x20013874
 801a3b4:	2001387c 	.word	0x2001387c
 801a3b8:	20013878 	.word	0x20013878
 801a3bc:	2001385c 	.word	0x2001385c

0801a3c0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801a3c0:	2010      	movs	r0, #16
 801a3c2:	4770      	bx	lr

0801a3c4 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 801a3c4:	2000      	movs	r0, #0
 801a3c6:	4770      	bx	lr

0801a3c8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 801a3c8:	4b02      	ldr	r3, [pc, #8]	; (801a3d4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801a3ca:	8818      	ldrh	r0, [r3, #0]
 801a3cc:	0040      	lsls	r0, r0, #1
 801a3ce:	b280      	uxth	r0, r0
 801a3d0:	4770      	bx	lr
 801a3d2:	bf00      	nop
 801a3d4:	200137e6 	.word	0x200137e6

0801a3d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801a3d8:	2bff      	cmp	r3, #255	; 0xff
 801a3da:	d050      	beq.n	801a47e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801a3dc:	2a0b      	cmp	r2, #11
 801a3de:	d04a      	beq.n	801a476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a3e0:	d80e      	bhi.n	801a400 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801a3e2:	2a03      	cmp	r2, #3
 801a3e4:	d03f      	beq.n	801a466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 801a3e6:	d804      	bhi.n	801a3f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 801a3e8:	2a01      	cmp	r2, #1
 801a3ea:	d03e      	beq.n	801a46a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801a3ec:	d93f      	bls.n	801a46e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801a3ee:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801a3f0:	4770      	bx	lr
 801a3f2:	2a09      	cmp	r2, #9
 801a3f4:	d03f      	beq.n	801a476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801a3f6:	d83c      	bhi.n	801a472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a3f8:	2a08      	cmp	r2, #8
 801a3fa:	d03a      	beq.n	801a472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801a3fc:	2000      	movs	r0, #0
 801a3fe:	4770      	bx	lr
 801a400:	2a2f      	cmp	r2, #47	; 0x2f
 801a402:	d024      	beq.n	801a44e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 801a404:	d80d      	bhi.n	801a422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 801a406:	2a2d      	cmp	r2, #45	; 0x2d
 801a408:	d014      	beq.n	801a434 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801a40a:	d826      	bhi.n	801a45a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801a40c:	2a2c      	cmp	r2, #44	; 0x2c
 801a40e:	d1f5      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a410:	684b      	ldr	r3, [r1, #4]
 801a412:	781b      	ldrb	r3, [r3, #0]
 801a414:	2b01      	cmp	r3, #1
 801a416:	d018      	beq.n	801a44a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801a418:	d323      	bcc.n	801a462 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801a41a:	2b02      	cmp	r3, #2
 801a41c:	d1ee      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a41e:	6880      	ldr	r0, [r0, #8]
 801a420:	4770      	bx	lr
 801a422:	2a31      	cmp	r2, #49	; 0x31
 801a424:	d004      	beq.n	801a430 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801a426:	d328      	bcc.n	801a47a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a428:	2a32      	cmp	r2, #50	; 0x32
 801a42a:	d026      	beq.n	801a47a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801a42c:	2a33      	cmp	r2, #51	; 0x33
 801a42e:	d1e5      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a430:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801a432:	4770      	bx	lr
 801a434:	684b      	ldr	r3, [r1, #4]
 801a436:	781b      	ldrb	r3, [r3, #0]
 801a438:	2b01      	cmp	r3, #1
 801a43a:	d004      	beq.n	801a446 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801a43c:	d30b      	bcc.n	801a456 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801a43e:	2b02      	cmp	r3, #2
 801a440:	d1dc      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a442:	6900      	ldr	r0, [r0, #16]
 801a444:	4770      	bx	lr
 801a446:	6a00      	ldr	r0, [r0, #32]
 801a448:	4770      	bx	lr
 801a44a:	6980      	ldr	r0, [r0, #24]
 801a44c:	4770      	bx	lr
 801a44e:	684b      	ldr	r3, [r1, #4]
 801a450:	781b      	ldrb	r3, [r3, #0]
 801a452:	2b00      	cmp	r3, #0
 801a454:	d1d2      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a456:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801a458:	4770      	bx	lr
 801a45a:	684b      	ldr	r3, [r1, #4]
 801a45c:	781b      	ldrb	r3, [r3, #0]
 801a45e:	2b00      	cmp	r3, #0
 801a460:	d1cc      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a462:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801a464:	4770      	bx	lr
 801a466:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a468:	4770      	bx	lr
 801a46a:	6d00      	ldr	r0, [r0, #80]	; 0x50
 801a46c:	4770      	bx	lr
 801a46e:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801a470:	4770      	bx	lr
 801a472:	6d80      	ldr	r0, [r0, #88]	; 0x58
 801a474:	4770      	bx	lr
 801a476:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801a478:	4770      	bx	lr
 801a47a:	6e80      	ldr	r0, [r0, #104]	; 0x68
 801a47c:	4770      	bx	lr
 801a47e:	2a0b      	cmp	r2, #11
 801a480:	d049      	beq.n	801a516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a482:	d80e      	bhi.n	801a4a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 801a484:	2a03      	cmp	r2, #3
 801a486:	d040      	beq.n	801a50a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801a488:	d804      	bhi.n	801a494 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801a48a:	2a01      	cmp	r2, #1
 801a48c:	d03f      	beq.n	801a50e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801a48e:	d940      	bls.n	801a512 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801a490:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801a492:	4770      	bx	lr
 801a494:	2a09      	cmp	r2, #9
 801a496:	d03e      	beq.n	801a516 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801a498:	d801      	bhi.n	801a49e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801a49a:	2a08      	cmp	r2, #8
 801a49c:	d1ae      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a49e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801a4a0:	4770      	bx	lr
 801a4a2:	2a2f      	cmp	r2, #47	; 0x2f
 801a4a4:	d024      	beq.n	801a4f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801a4a6:	d80d      	bhi.n	801a4c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801a4a8:	2a2d      	cmp	r2, #45	; 0x2d
 801a4aa:	d014      	beq.n	801a4d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801a4ac:	d826      	bhi.n	801a4fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801a4ae:	2a2c      	cmp	r2, #44	; 0x2c
 801a4b0:	d1a4      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4b2:	684b      	ldr	r3, [r1, #4]
 801a4b4:	781b      	ldrb	r3, [r3, #0]
 801a4b6:	2b01      	cmp	r3, #1
 801a4b8:	d018      	beq.n	801a4ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801a4ba:	d324      	bcc.n	801a506 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801a4bc:	2b02      	cmp	r3, #2
 801a4be:	d19d      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4c0:	68c0      	ldr	r0, [r0, #12]
 801a4c2:	4770      	bx	lr
 801a4c4:	2a31      	cmp	r2, #49	; 0x31
 801a4c6:	d004      	beq.n	801a4d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 801a4c8:	d327      	bcc.n	801a51a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a4ca:	2a32      	cmp	r2, #50	; 0x32
 801a4cc:	d025      	beq.n	801a51a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801a4ce:	2a33      	cmp	r2, #51	; 0x33
 801a4d0:	d194      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4d2:	6f40      	ldr	r0, [r0, #116]	; 0x74
 801a4d4:	4770      	bx	lr
 801a4d6:	684b      	ldr	r3, [r1, #4]
 801a4d8:	781b      	ldrb	r3, [r3, #0]
 801a4da:	2b01      	cmp	r3, #1
 801a4dc:	d004      	beq.n	801a4e8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801a4de:	d30b      	bcc.n	801a4f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801a4e0:	2b02      	cmp	r3, #2
 801a4e2:	d18b      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4e4:	6940      	ldr	r0, [r0, #20]
 801a4e6:	4770      	bx	lr
 801a4e8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801a4ea:	4770      	bx	lr
 801a4ec:	69c0      	ldr	r0, [r0, #28]
 801a4ee:	4770      	bx	lr
 801a4f0:	684b      	ldr	r3, [r1, #4]
 801a4f2:	781b      	ldrb	r3, [r3, #0]
 801a4f4:	2b00      	cmp	r3, #0
 801a4f6:	d181      	bne.n	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a4f8:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801a4fa:	4770      	bx	lr
 801a4fc:	684b      	ldr	r3, [r1, #4]
 801a4fe:	781b      	ldrb	r3, [r3, #0]
 801a500:	2b00      	cmp	r3, #0
 801a502:	f47f af7b 	bne.w	801a3fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801a506:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 801a508:	4770      	bx	lr
 801a50a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801a50c:	4770      	bx	lr
 801a50e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801a510:	4770      	bx	lr
 801a512:	6c40      	ldr	r0, [r0, #68]	; 0x44
 801a514:	4770      	bx	lr
 801a516:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801a518:	4770      	bx	lr
 801a51a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801a51c:	4770      	bx	lr

0801a51e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a51e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a522:	b087      	sub	sp, #28
 801a524:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a526:	9205      	str	r2, [sp, #20]
 801a528:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a52c:	9202      	str	r2, [sp, #8]
 801a52e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a532:	9101      	str	r1, [sp, #4]
 801a534:	6841      	ldr	r1, [r0, #4]
 801a536:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801a53a:	fb01 2404 	mla	r4, r1, r4, r2
 801a53e:	6802      	ldr	r2, [r0, #0]
 801a540:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a544:	f8de 2000 	ldr.w	r2, [lr]
 801a548:	9203      	str	r2, [sp, #12]
 801a54a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a54e:	3204      	adds	r2, #4
 801a550:	9204      	str	r2, [sp, #16]
 801a552:	9a02      	ldr	r2, [sp, #8]
 801a554:	43d6      	mvns	r6, r2
 801a556:	b2f6      	uxtb	r6, r6
 801a558:	9a01      	ldr	r2, [sp, #4]
 801a55a:	2a00      	cmp	r2, #0
 801a55c:	dc03      	bgt.n	801a566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a55e:	9a05      	ldr	r2, [sp, #20]
 801a560:	2a00      	cmp	r2, #0
 801a562:	f340 8129 	ble.w	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a566:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a568:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a56c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a570:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a574:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a576:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a57a:	2b00      	cmp	r3, #0
 801a57c:	dd0e      	ble.n	801a59c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a57e:	1408      	asrs	r0, r1, #16
 801a580:	d405      	bmi.n	801a58e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a582:	4560      	cmp	r0, ip
 801a584:	da03      	bge.n	801a58e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a586:	1410      	asrs	r0, r2, #16
 801a588:	d401      	bmi.n	801a58e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a58a:	42b8      	cmp	r0, r7
 801a58c:	db07      	blt.n	801a59e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a58e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a590:	4401      	add	r1, r0
 801a592:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a594:	3b01      	subs	r3, #1
 801a596:	4402      	add	r2, r0
 801a598:	3402      	adds	r4, #2
 801a59a:	e7ee      	b.n	801a57a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801a59c:	d071      	beq.n	801a682 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a59e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a5a0:	1e58      	subs	r0, r3, #1
 801a5a2:	fb05 1500 	mla	r5, r5, r0, r1
 801a5a6:	142d      	asrs	r5, r5, #16
 801a5a8:	d45f      	bmi.n	801a66a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a5aa:	4565      	cmp	r5, ip
 801a5ac:	da5d      	bge.n	801a66a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a5ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a5b0:	fb05 2000 	mla	r0, r5, r0, r2
 801a5b4:	1400      	asrs	r0, r0, #16
 801a5b6:	d458      	bmi.n	801a66a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a5b8:	42b8      	cmp	r0, r7
 801a5ba:	da56      	bge.n	801a66a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801a5bc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801a5c0:	4699      	mov	r9, r3
 801a5c2:	46a2      	mov	sl, r4
 801a5c4:	f1b9 0f00 	cmp.w	r9, #0
 801a5c8:	dd57      	ble.n	801a67a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801a5ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a5ce:	9803      	ldr	r0, [sp, #12]
 801a5d0:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801a5d4:	140d      	asrs	r5, r1, #16
 801a5d6:	fb07 000c 	mla	r0, r7, ip, r0
 801a5da:	f109 39ff 	add.w	r9, r9, #4294967295
 801a5de:	5d40      	ldrb	r0, [r0, r5]
 801a5e0:	9d04      	ldr	r5, [sp, #16]
 801a5e2:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a5e6:	f8ba 5000 	ldrh.w	r5, [sl]
 801a5ea:	122f      	asrs	r7, r5, #8
 801a5ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a5f0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a5f4:	fb17 f706 	smulbb	r7, r7, r6
 801a5f8:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a5fc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a600:	00ed      	lsls	r5, r5, #3
 801a602:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a606:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a60a:	10c7      	asrs	r7, r0, #3
 801a60c:	b2ed      	uxtb	r5, r5
 801a60e:	00c0      	lsls	r0, r0, #3
 801a610:	fb18 f806 	smulbb	r8, r8, r6
 801a614:	fb15 f506 	smulbb	r5, r5, r6
 801a618:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a61c:	b2c0      	uxtb	r0, r0
 801a61e:	fa1f fc8c 	uxth.w	ip, ip
 801a622:	fb07 870b 	mla	r7, r7, fp, r8
 801a626:	fb00 500b 	mla	r0, r0, fp, r5
 801a62a:	b280      	uxth	r0, r0
 801a62c:	b2bf      	uxth	r7, r7
 801a62e:	f10c 0501 	add.w	r5, ip, #1
 801a632:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a636:	f107 0801 	add.w	r8, r7, #1
 801a63a:	1c45      	adds	r5, r0, #1
 801a63c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a640:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a644:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a646:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a64a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a64e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a652:	ea45 0c0c 	orr.w	ip, r5, ip
 801a656:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a65a:	4401      	add	r1, r0
 801a65c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a65e:	ea4c 0c08 	orr.w	ip, ip, r8
 801a662:	f82a cb02 	strh.w	ip, [sl], #2
 801a666:	4402      	add	r2, r0
 801a668:	e7ac      	b.n	801a5c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a66a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801a66e:	f04f 0800 	mov.w	r8, #0
 801a672:	eb03 0008 	add.w	r0, r3, r8
 801a676:	2800      	cmp	r0, #0
 801a678:	dc41      	bgt.n	801a6fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a67a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a67e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a682:	9b01      	ldr	r3, [sp, #4]
 801a684:	2b00      	cmp	r3, #0
 801a686:	f340 8097 	ble.w	801a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801a68a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a68e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a692:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a696:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a698:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a69c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a6a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a6a4:	eef0 6a62 	vmov.f32	s13, s5
 801a6a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a6ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a6b4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801a6b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6bc:	eef0 6a43 	vmov.f32	s13, s6
 801a6c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a6c4:	ee12 2a90 	vmov	r2, s5
 801a6c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6d0:	ee13 2a10 	vmov	r2, s6
 801a6d4:	9313      	str	r3, [sp, #76]	; 0x4c
 801a6d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6dc:	9314      	str	r3, [sp, #80]	; 0x50
 801a6de:	9b01      	ldr	r3, [sp, #4]
 801a6e0:	9a05      	ldr	r2, [sp, #20]
 801a6e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6e6:	3b01      	subs	r3, #1
 801a6e8:	9301      	str	r3, [sp, #4]
 801a6ea:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801a6ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6f0:	eeb0 3a67 	vmov.f32	s6, s15
 801a6f4:	bf08      	it	eq
 801a6f6:	4613      	moveq	r3, r2
 801a6f8:	eef0 2a47 	vmov.f32	s5, s14
 801a6fc:	e72c      	b.n	801a558 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a6fe:	140f      	asrs	r7, r1, #16
 801a700:	d453      	bmi.n	801a7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a702:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a706:	42bd      	cmp	r5, r7
 801a708:	dd4f      	ble.n	801a7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a70a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a70e:	d44c      	bmi.n	801a7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a710:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a714:	4560      	cmp	r0, ip
 801a716:	dd48      	ble.n	801a7aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a718:	9803      	ldr	r0, [sp, #12]
 801a71a:	b22d      	sxth	r5, r5
 801a71c:	fb0c 0505 	mla	r5, ip, r5, r0
 801a720:	5de8      	ldrb	r0, [r5, r7]
 801a722:	9d04      	ldr	r5, [sp, #16]
 801a724:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a728:	f06f 0501 	mvn.w	r5, #1
 801a72c:	fb05 fb08 	mul.w	fp, r5, r8
 801a730:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a734:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a738:	122f      	asrs	r7, r5, #8
 801a73a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a73e:	fb17 f706 	smulbb	r7, r7, r6
 801a742:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a746:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a74a:	00ed      	lsls	r5, r5, #3
 801a74c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a750:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a754:	10c7      	asrs	r7, r0, #3
 801a756:	b2ed      	uxtb	r5, r5
 801a758:	00c0      	lsls	r0, r0, #3
 801a75a:	fb19 f906 	smulbb	r9, r9, r6
 801a75e:	fb15 f506 	smulbb	r5, r5, r6
 801a762:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a766:	b2c0      	uxtb	r0, r0
 801a768:	fa1f fc8c 	uxth.w	ip, ip
 801a76c:	fb07 970a 	mla	r7, r7, sl, r9
 801a770:	fb00 500a 	mla	r0, r0, sl, r5
 801a774:	b2bf      	uxth	r7, r7
 801a776:	b280      	uxth	r0, r0
 801a778:	f10c 0501 	add.w	r5, ip, #1
 801a77c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a780:	f107 0901 	add.w	r9, r7, #1
 801a784:	1c45      	adds	r5, r0, #1
 801a786:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a78a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a78e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a792:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a796:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a79a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a79e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a7a2:	ea4c 0c09 	orr.w	ip, ip, r9
 801a7a6:	f824 c00b 	strh.w	ip, [r4, fp]
 801a7aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a7ac:	4401      	add	r1, r0
 801a7ae:	9814      	ldr	r0, [sp, #80]	; 0x50
 801a7b0:	f108 38ff 	add.w	r8, r8, #4294967295
 801a7b4:	4402      	add	r2, r0
 801a7b6:	e75c      	b.n	801a672 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801a7b8:	b007      	add	sp, #28
 801a7ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7c2:	b085      	sub	sp, #20
 801a7c4:	4693      	mov	fp, r2
 801a7c6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a7c8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a7ca:	6870      	ldr	r0, [r6, #4]
 801a7cc:	9100      	str	r1, [sp, #0]
 801a7ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a7d2:	fb00 2404 	mla	r4, r0, r4, r2
 801a7d6:	6832      	ldr	r2, [r6, #0]
 801a7d8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7dc:	682a      	ldr	r2, [r5, #0]
 801a7de:	9201      	str	r2, [sp, #4]
 801a7e0:	686a      	ldr	r2, [r5, #4]
 801a7e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a7e6:	3204      	adds	r2, #4
 801a7e8:	9202      	str	r2, [sp, #8]
 801a7ea:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a7ee:	9a00      	ldr	r2, [sp, #0]
 801a7f0:	2a00      	cmp	r2, #0
 801a7f2:	dc03      	bgt.n	801a7fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a7f4:	f1bb 0f00 	cmp.w	fp, #0
 801a7f8:	f340 80a0 	ble.w	801a93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a7fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a7fe:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a802:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a806:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a80a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a80c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a810:	2b00      	cmp	r3, #0
 801a812:	dd0c      	ble.n	801a82e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a814:	1406      	asrs	r6, r0, #16
 801a816:	d405      	bmi.n	801a824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a818:	454e      	cmp	r6, r9
 801a81a:	da03      	bge.n	801a824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a81c:	1416      	asrs	r6, r2, #16
 801a81e:	d401      	bmi.n	801a824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a820:	4546      	cmp	r6, r8
 801a822:	db05      	blt.n	801a830 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a824:	4470      	add	r0, lr
 801a826:	4462      	add	r2, ip
 801a828:	3b01      	subs	r3, #1
 801a82a:	3402      	adds	r4, #2
 801a82c:	e7f0      	b.n	801a810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a82e:	d00f      	beq.n	801a850 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a830:	1e5e      	subs	r6, r3, #1
 801a832:	fb0e 0706 	mla	r7, lr, r6, r0
 801a836:	143f      	asrs	r7, r7, #16
 801a838:	d541      	bpl.n	801a8be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801a83a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a83e:	4698      	mov	r8, r3
 801a840:	9603      	str	r6, [sp, #12]
 801a842:	f1b8 0f00 	cmp.w	r8, #0
 801a846:	dc59      	bgt.n	801a8fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a848:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a84c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a850:	9b00      	ldr	r3, [sp, #0]
 801a852:	2b00      	cmp	r3, #0
 801a854:	dd72      	ble.n	801a93c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801a856:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a85a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a85e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a862:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a864:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a868:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a86c:	eeb0 6a62 	vmov.f32	s12, s5
 801a870:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a874:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a878:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a87c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a880:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a884:	eeb0 6a43 	vmov.f32	s12, s6
 801a888:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a88c:	ee12 2a90 	vmov	r2, s5
 801a890:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a894:	fb92 fef3 	sdiv	lr, r2, r3
 801a898:	ee13 2a10 	vmov	r2, s6
 801a89c:	fb92 fcf3 	sdiv	ip, r2, r3
 801a8a0:	9b00      	ldr	r3, [sp, #0]
 801a8a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a8a6:	3b01      	subs	r3, #1
 801a8a8:	9300      	str	r3, [sp, #0]
 801a8aa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a8ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a8b0:	eeb0 3a67 	vmov.f32	s6, s15
 801a8b4:	bf08      	it	eq
 801a8b6:	465b      	moveq	r3, fp
 801a8b8:	eef0 2a47 	vmov.f32	s5, s14
 801a8bc:	e797      	b.n	801a7ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a8be:	454f      	cmp	r7, r9
 801a8c0:	dabb      	bge.n	801a83a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a8c2:	fb0c 2606 	mla	r6, ip, r6, r2
 801a8c6:	1436      	asrs	r6, r6, #16
 801a8c8:	d4b7      	bmi.n	801a83a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a8ca:	4546      	cmp	r6, r8
 801a8cc:	dab5      	bge.n	801a83a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a8ce:	461e      	mov	r6, r3
 801a8d0:	46a0      	mov	r8, r4
 801a8d2:	2e00      	cmp	r6, #0
 801a8d4:	ddb8      	ble.n	801a848 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801a8d6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a8da:	9901      	ldr	r1, [sp, #4]
 801a8dc:	1417      	asrs	r7, r2, #16
 801a8de:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a8e2:	fb0a 1707 	mla	r7, sl, r7, r1
 801a8e6:	9902      	ldr	r1, [sp, #8]
 801a8e8:	f817 7009 	ldrb.w	r7, [r7, r9]
 801a8ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a8f0:	f828 7b02 	strh.w	r7, [r8], #2
 801a8f4:	4470      	add	r0, lr
 801a8f6:	4462      	add	r2, ip
 801a8f8:	3e01      	subs	r6, #1
 801a8fa:	e7ea      	b.n	801a8d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801a8fc:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a900:	d417      	bmi.n	801a932 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a902:	68ae      	ldr	r6, [r5, #8]
 801a904:	454e      	cmp	r6, r9
 801a906:	dd14      	ble.n	801a932 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a908:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a90c:	d411      	bmi.n	801a932 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a90e:	68ef      	ldr	r7, [r5, #12]
 801a910:	4557      	cmp	r7, sl
 801a912:	dd0e      	ble.n	801a932 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801a914:	9f01      	ldr	r7, [sp, #4]
 801a916:	b236      	sxth	r6, r6
 801a918:	fb0a 7606 	mla	r6, sl, r6, r7
 801a91c:	9f02      	ldr	r7, [sp, #8]
 801a91e:	f816 6009 	ldrb.w	r6, [r6, r9]
 801a922:	f06f 0101 	mvn.w	r1, #1
 801a926:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a92a:	fb01 f608 	mul.w	r6, r1, r8
 801a92e:	9903      	ldr	r1, [sp, #12]
 801a930:	538f      	strh	r7, [r1, r6]
 801a932:	4470      	add	r0, lr
 801a934:	4462      	add	r2, ip
 801a936:	f108 38ff 	add.w	r8, r8, #4294967295
 801a93a:	e782      	b.n	801a842 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a93c:	b005      	add	sp, #20
 801a93e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a942 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a946:	b087      	sub	sp, #28
 801a948:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801a94a:	9205      	str	r2, [sp, #20]
 801a94c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a950:	9203      	str	r2, [sp, #12]
 801a952:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801a956:	9102      	str	r1, [sp, #8]
 801a958:	6861      	ldr	r1, [r4, #4]
 801a95a:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801a95e:	fb01 2000 	mla	r0, r1, r0, r2
 801a962:	6822      	ldr	r2, [r4, #0]
 801a964:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801a968:	9200      	str	r2, [sp, #0]
 801a96a:	f8dc 2000 	ldr.w	r2, [ip]
 801a96e:	9204      	str	r2, [sp, #16]
 801a970:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801a974:	3204      	adds	r2, #4
 801a976:	9201      	str	r2, [sp, #4]
 801a978:	9a03      	ldr	r2, [sp, #12]
 801a97a:	43d5      	mvns	r5, r2
 801a97c:	b2ed      	uxtb	r5, r5
 801a97e:	9a02      	ldr	r2, [sp, #8]
 801a980:	2a00      	cmp	r2, #0
 801a982:	dc03      	bgt.n	801a98c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a984:	9a05      	ldr	r2, [sp, #20]
 801a986:	2a00      	cmp	r2, #0
 801a988:	f340 812c 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a98c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a98e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801a992:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 801a996:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a99a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a99c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a9a0:	2b00      	cmp	r3, #0
 801a9a2:	dd10      	ble.n	801a9c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a9a4:	140c      	asrs	r4, r1, #16
 801a9a6:	d405      	bmi.n	801a9b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9a8:	4574      	cmp	r4, lr
 801a9aa:	da03      	bge.n	801a9b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9ac:	1414      	asrs	r4, r2, #16
 801a9ae:	d401      	bmi.n	801a9b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9b0:	42bc      	cmp	r4, r7
 801a9b2:	db09      	blt.n	801a9c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a9b4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a9b6:	9800      	ldr	r0, [sp, #0]
 801a9b8:	4421      	add	r1, r4
 801a9ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a9bc:	3002      	adds	r0, #2
 801a9be:	4422      	add	r2, r4
 801a9c0:	3b01      	subs	r3, #1
 801a9c2:	9000      	str	r0, [sp, #0]
 801a9c4:	e7ec      	b.n	801a9a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a9c6:	d071      	beq.n	801aaac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801a9c8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a9ca:	1e5c      	subs	r4, r3, #1
 801a9cc:	fb06 1604 	mla	r6, r6, r4, r1
 801a9d0:	1436      	asrs	r6, r6, #16
 801a9d2:	d45d      	bmi.n	801aa90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a9d4:	4576      	cmp	r6, lr
 801a9d6:	da5b      	bge.n	801aa90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a9d8:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801a9da:	fb06 2404 	mla	r4, r6, r4, r2
 801a9de:	1424      	asrs	r4, r4, #16
 801a9e0:	d456      	bmi.n	801aa90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a9e2:	42bc      	cmp	r4, r7
 801a9e4:	da54      	bge.n	801aa90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a9e6:	f8dd 9000 	ldr.w	r9, [sp]
 801a9ea:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801a9ee:	4698      	mov	r8, r3
 801a9f0:	f1b8 0f00 	cmp.w	r8, #0
 801a9f4:	dd54      	ble.n	801aaa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a9f6:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801a9fa:	9804      	ldr	r0, [sp, #16]
 801a9fc:	1414      	asrs	r4, r2, #16
 801a9fe:	fb07 0404 	mla	r4, r7, r4, r0
 801aa02:	140e      	asrs	r6, r1, #16
 801aa04:	9801      	ldr	r0, [sp, #4]
 801aa06:	f814 e006 	ldrb.w	lr, [r4, r6]
 801aa0a:	f8b9 4000 	ldrh.w	r4, [r9]
 801aa0e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801aa12:	eb00 0b0e 	add.w	fp, r0, lr
 801aa16:	1227      	asrs	r7, r4, #8
 801aa18:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801aa1c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801aa20:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801aa24:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801aa26:	fb16 f60a 	smulbb	r6, r6, sl
 801aa2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801aa2e:	fb07 6705 	mla	r7, r7, r5, r6
 801aa32:	10e6      	asrs	r6, r4, #3
 801aa34:	00e4      	lsls	r4, r4, #3
 801aa36:	b2e4      	uxtb	r4, r4
 801aa38:	fb1b fb0a 	smulbb	fp, fp, sl
 801aa3c:	fb14 f405 	smulbb	r4, r4, r5
 801aa40:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801aa44:	b2bf      	uxth	r7, r7
 801aa46:	fb06 b605 	mla	r6, r6, r5, fp
 801aa4a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801aa4e:	b2b6      	uxth	r6, r6
 801aa50:	fa1f fe8e 	uxth.w	lr, lr
 801aa54:	1c7c      	adds	r4, r7, #1
 801aa56:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801aa5a:	f106 0b01 	add.w	fp, r6, #1
 801aa5e:	f10e 0401 	add.w	r4, lr, #1
 801aa62:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801aa66:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801aa6a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801aa6e:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801aa72:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801aa76:	4327      	orrs	r7, r4
 801aa78:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801aa7c:	4401      	add	r1, r0
 801aa7e:	9814      	ldr	r0, [sp, #80]	; 0x50
 801aa80:	ea47 070b 	orr.w	r7, r7, fp
 801aa84:	f829 7b02 	strh.w	r7, [r9], #2
 801aa88:	4402      	add	r2, r0
 801aa8a:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa8e:	e7af      	b.n	801a9f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801aa90:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 801aa94:	f04f 0e00 	mov.w	lr, #0
 801aa98:	eb03 040e 	add.w	r4, r3, lr
 801aa9c:	2c00      	cmp	r4, #0
 801aa9e:	dc43      	bgt.n	801ab28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801aaa0:	9a00      	ldr	r2, [sp, #0]
 801aaa2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aaa6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aaaa:	9300      	str	r3, [sp, #0]
 801aaac:	9b02      	ldr	r3, [sp, #8]
 801aaae:	2b00      	cmp	r3, #0
 801aab0:	f340 8098 	ble.w	801abe4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801aab4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aab8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801aabc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801aac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aac2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aac6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aaca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aace:	eef0 6a62 	vmov.f32	s13, s5
 801aad2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801aada:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aade:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801aae2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aae6:	eef0 6a43 	vmov.f32	s13, s6
 801aaea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aaee:	ee12 2a90 	vmov	r2, s5
 801aaf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aaf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801aafa:	ee13 2a10 	vmov	r2, s6
 801aafe:	9313      	str	r3, [sp, #76]	; 0x4c
 801ab00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab02:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab06:	9314      	str	r3, [sp, #80]	; 0x50
 801ab08:	9b02      	ldr	r3, [sp, #8]
 801ab0a:	9a05      	ldr	r2, [sp, #20]
 801ab0c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab10:	3b01      	subs	r3, #1
 801ab12:	9302      	str	r3, [sp, #8]
 801ab14:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801ab18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab1a:	eeb0 3a67 	vmov.f32	s6, s15
 801ab1e:	bf08      	it	eq
 801ab20:	4613      	moveq	r3, r2
 801ab22:	eef0 2a47 	vmov.f32	s5, s14
 801ab26:	e72a      	b.n	801a97e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ab28:	140f      	asrs	r7, r1, #16
 801ab2a:	d454      	bmi.n	801abd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ab2c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801ab30:	42be      	cmp	r6, r7
 801ab32:	dd50      	ble.n	801abd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ab34:	ea5f 4822 	movs.w	r8, r2, asr #16
 801ab38:	d44d      	bmi.n	801abd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ab3a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801ab3e:	4544      	cmp	r4, r8
 801ab40:	dd49      	ble.n	801abd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801ab42:	9c04      	ldr	r4, [sp, #16]
 801ab44:	b236      	sxth	r6, r6
 801ab46:	fb08 4606 	mla	r6, r8, r6, r4
 801ab4a:	f06f 0001 	mvn.w	r0, #1
 801ab4e:	f816 8007 	ldrb.w	r8, [r6, r7]
 801ab52:	9c01      	ldr	r4, [sp, #4]
 801ab54:	fb00 fa0e 	mul.w	sl, r0, lr
 801ab58:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ab5c:	9800      	ldr	r0, [sp, #0]
 801ab5e:	eb04 0b08 	add.w	fp, r4, r8
 801ab62:	f830 400a 	ldrh.w	r4, [r0, sl]
 801ab66:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801ab6a:	9801      	ldr	r0, [sp, #4]
 801ab6c:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ab70:	f810 8008 	ldrb.w	r8, [r0, r8]
 801ab74:	9800      	ldr	r0, [sp, #0]
 801ab76:	1227      	asrs	r7, r4, #8
 801ab78:	fb16 f609 	smulbb	r6, r6, r9
 801ab7c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ab80:	fb07 6705 	mla	r7, r7, r5, r6
 801ab84:	10e6      	asrs	r6, r4, #3
 801ab86:	00e4      	lsls	r4, r4, #3
 801ab88:	b2e4      	uxtb	r4, r4
 801ab8a:	fb1b fb09 	smulbb	fp, fp, r9
 801ab8e:	fb14 f405 	smulbb	r4, r4, r5
 801ab92:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ab96:	b2bf      	uxth	r7, r7
 801ab98:	fb06 b605 	mla	r6, r6, r5, fp
 801ab9c:	fb08 4809 	mla	r8, r8, r9, r4
 801aba0:	b2b6      	uxth	r6, r6
 801aba2:	fa1f f888 	uxth.w	r8, r8
 801aba6:	1c7c      	adds	r4, r7, #1
 801aba8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801abac:	f106 0b01 	add.w	fp, r6, #1
 801abb0:	f108 0401 	add.w	r4, r8, #1
 801abb4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 801abb8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801abbc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801abc0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801abc4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801abc8:	4327      	orrs	r7, r4
 801abca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801abce:	ea47 070b 	orr.w	r7, r7, fp
 801abd2:	f820 700a 	strh.w	r7, [r0, sl]
 801abd6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801abd8:	4401      	add	r1, r0
 801abda:	9814      	ldr	r0, [sp, #80]	; 0x50
 801abdc:	f10e 3eff 	add.w	lr, lr, #4294967295
 801abe0:	4402      	add	r2, r0
 801abe2:	e759      	b.n	801aa98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801abe4:	b007      	add	sp, #28
 801abe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801abec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abf0:	b085      	sub	sp, #20
 801abf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801abf6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801abf8:	9203      	str	r2, [sp, #12]
 801abfa:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801abfe:	6870      	ldr	r0, [r6, #4]
 801ac00:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ac02:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 801ac06:	686f      	ldr	r7, [r5, #4]
 801ac08:	9101      	str	r1, [sp, #4]
 801ac0a:	fb00 2404 	mla	r4, r0, r4, r2
 801ac0e:	6832      	ldr	r2, [r6, #0]
 801ac10:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac14:	682a      	ldr	r2, [r5, #0]
 801ac16:	9202      	str	r2, [sp, #8]
 801ac18:	3704      	adds	r7, #4
 801ac1a:	9a01      	ldr	r2, [sp, #4]
 801ac1c:	2a00      	cmp	r2, #0
 801ac1e:	dc03      	bgt.n	801ac28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ac20:	9a03      	ldr	r2, [sp, #12]
 801ac22:	2a00      	cmp	r2, #0
 801ac24:	f340 80cc 	ble.w	801adc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ac2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ac2e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801ac32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ac36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ac38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801ac3c:	2b00      	cmp	r3, #0
 801ac3e:	dd0d      	ble.n	801ac5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ac40:	1406      	asrs	r6, r0, #16
 801ac42:	d405      	bmi.n	801ac50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ac44:	454e      	cmp	r6, r9
 801ac46:	da03      	bge.n	801ac50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ac48:	1416      	asrs	r6, r2, #16
 801ac4a:	d401      	bmi.n	801ac50 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801ac4c:	4546      	cmp	r6, r8
 801ac4e:	db06      	blt.n	801ac5e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ac50:	9e12      	ldr	r6, [sp, #72]	; 0x48
 801ac52:	4460      	add	r0, ip
 801ac54:	4432      	add	r2, r6
 801ac56:	3b01      	subs	r3, #1
 801ac58:	3402      	adds	r4, #2
 801ac5a:	e7ef      	b.n	801ac3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 801ac5c:	d00f      	beq.n	801ac7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ac5e:	1e5e      	subs	r6, r3, #1
 801ac60:	fb0c 0e06 	mla	lr, ip, r6, r0
 801ac64:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801ac68:	d543      	bpl.n	801acf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ac6a:	4698      	mov	r8, r3
 801ac6c:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801ac70:	f1b8 0f00 	cmp.w	r8, #0
 801ac74:	dc71      	bgt.n	801ad5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801ac76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ac7e:	9b01      	ldr	r3, [sp, #4]
 801ac80:	2b00      	cmp	r3, #0
 801ac82:	f340 809d 	ble.w	801adc0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801ac86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ac94:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac98:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ac9c:	eeb0 6a62 	vmov.f32	s12, s5
 801aca0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aca4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aca8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801acb0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acb4:	eeb0 6a43 	vmov.f32	s12, s6
 801acb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acbc:	ee12 2a90 	vmov	r2, s5
 801acc0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801acc4:	fb92 fcf3 	sdiv	ip, r2, r3
 801acc8:	ee13 2a10 	vmov	r2, s6
 801accc:	fb92 f3f3 	sdiv	r3, r2, r3
 801acd0:	9312      	str	r3, [sp, #72]	; 0x48
 801acd2:	9b01      	ldr	r3, [sp, #4]
 801acd4:	9a03      	ldr	r2, [sp, #12]
 801acd6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acda:	3b01      	subs	r3, #1
 801acdc:	9301      	str	r3, [sp, #4]
 801acde:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801ace2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ace4:	eeb0 3a67 	vmov.f32	s6, s15
 801ace8:	bf08      	it	eq
 801acea:	4613      	moveq	r3, r2
 801acec:	eef0 2a47 	vmov.f32	s5, s14
 801acf0:	e793      	b.n	801ac1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801acf2:	45ce      	cmp	lr, r9
 801acf4:	dab9      	bge.n	801ac6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801acf6:	9912      	ldr	r1, [sp, #72]	; 0x48
 801acf8:	fb01 2606 	mla	r6, r1, r6, r2
 801acfc:	1436      	asrs	r6, r6, #16
 801acfe:	d4b4      	bmi.n	801ac6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ad00:	4546      	cmp	r6, r8
 801ad02:	dab2      	bge.n	801ac6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ad04:	4698      	mov	r8, r3
 801ad06:	46a2      	mov	sl, r4
 801ad08:	f1b8 0f00 	cmp.w	r8, #0
 801ad0c:	ddb3      	ble.n	801ac76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801ad0e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801ad12:	9902      	ldr	r1, [sp, #8]
 801ad14:	1416      	asrs	r6, r2, #16
 801ad16:	fb09 1606 	mla	r6, r9, r6, r1
 801ad1a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801ad1e:	492a      	ldr	r1, [pc, #168]	; (801adc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801ad20:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801ad24:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ad28:	eb07 0b0e 	add.w	fp, r7, lr
 801ad2c:	4460      	add	r0, ip
 801ad2e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801ad32:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801ad36:	00f6      	lsls	r6, r6, #3
 801ad38:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801ad3c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ad40:	ea49 0606 	orr.w	r6, r9, r6
 801ad44:	f817 900e 	ldrb.w	r9, [r7, lr]
 801ad48:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ad4a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801ad4e:	f82a 6b02 	strh.w	r6, [sl], #2
 801ad52:	440a      	add	r2, r1
 801ad54:	f108 38ff 	add.w	r8, r8, #4294967295
 801ad58:	e7d6      	b.n	801ad08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ad5a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ad5e:	d429      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ad60:	68ae      	ldr	r6, [r5, #8]
 801ad62:	454e      	cmp	r6, r9
 801ad64:	dd26      	ble.n	801adb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ad66:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801ad6a:	d423      	bmi.n	801adb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ad6c:	68e9      	ldr	r1, [r5, #12]
 801ad6e:	4559      	cmp	r1, fp
 801ad70:	dd20      	ble.n	801adb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ad72:	9902      	ldr	r1, [sp, #8]
 801ad74:	fa0f fe86 	sxth.w	lr, r6
 801ad78:	fb0b 1e0e 	mla	lr, fp, lr, r1
 801ad7c:	f06f 0101 	mvn.w	r1, #1
 801ad80:	f81e e009 	ldrb.w	lr, [lr, r9]
 801ad84:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801ad88:	eb07 060e 	add.w	r6, r7, lr
 801ad8c:	fb01 f908 	mul.w	r9, r1, r8
 801ad90:	f896 b002 	ldrb.w	fp, [r6, #2]
 801ad94:	7876      	ldrb	r6, [r6, #1]
 801ad96:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801ad9a:	00f6      	lsls	r6, r6, #3
 801ad9c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801ada0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ada4:	ea4b 0606 	orr.w	r6, fp, r6
 801ada8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801adac:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801adb0:	f82a 6009 	strh.w	r6, [sl, r9]
 801adb4:	9912      	ldr	r1, [sp, #72]	; 0x48
 801adb6:	4460      	add	r0, ip
 801adb8:	440a      	add	r2, r1
 801adba:	f108 38ff 	add.w	r8, r8, #4294967295
 801adbe:	e757      	b.n	801ac70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801adc0:	b005      	add	sp, #20
 801adc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801adc6:	bf00      	nop
 801adc8:	fffff800 	.word	0xfffff800

0801adcc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801adcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801add0:	b087      	sub	sp, #28
 801add2:	468b      	mov	fp, r1
 801add4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801add6:	9204      	str	r2, [sp, #16]
 801add8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801addc:	9205      	str	r2, [sp, #20]
 801adde:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ade2:	6841      	ldr	r1, [r0, #4]
 801ade4:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 801ade8:	fb01 2404 	mla	r4, r1, r4, r2
 801adec:	6802      	ldr	r2, [r0, #0]
 801adee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801adf2:	f8dc 2000 	ldr.w	r2, [ip]
 801adf6:	9201      	str	r2, [sp, #4]
 801adf8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801adfc:	3204      	adds	r2, #4
 801adfe:	9202      	str	r2, [sp, #8]
 801ae00:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ae04:	f1bb 0f00 	cmp.w	fp, #0
 801ae08:	dc03      	bgt.n	801ae12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801ae0a:	9a04      	ldr	r2, [sp, #16]
 801ae0c:	2a00      	cmp	r2, #0
 801ae0e:	f340 8138 	ble.w	801b082 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ae12:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801ae14:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801ae18:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801ae1c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801ae20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ae22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801ae26:	2b00      	cmp	r3, #0
 801ae28:	dd0e      	ble.n	801ae48 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801ae2a:	1402      	asrs	r2, r0, #16
 801ae2c:	d405      	bmi.n	801ae3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ae2e:	42ba      	cmp	r2, r7
 801ae30:	da03      	bge.n	801ae3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ae32:	140a      	asrs	r2, r1, #16
 801ae34:	d401      	bmi.n	801ae3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ae36:	42b2      	cmp	r2, r6
 801ae38:	db07      	blt.n	801ae4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801ae3a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ae3c:	4410      	add	r0, r2
 801ae3e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ae40:	3b01      	subs	r3, #1
 801ae42:	4411      	add	r1, r2
 801ae44:	3402      	adds	r4, #2
 801ae46:	e7ee      	b.n	801ae26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ae48:	d019      	beq.n	801ae7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801ae4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ae4c:	1e5a      	subs	r2, r3, #1
 801ae4e:	fb05 0502 	mla	r5, r5, r2, r0
 801ae52:	142d      	asrs	r5, r5, #16
 801ae54:	d409      	bmi.n	801ae6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ae56:	42bd      	cmp	r5, r7
 801ae58:	da07      	bge.n	801ae6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ae5a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ae5c:	fb05 1202 	mla	r2, r5, r2, r1
 801ae60:	1412      	asrs	r2, r2, #16
 801ae62:	d402      	bmi.n	801ae6a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ae64:	42b2      	cmp	r2, r6
 801ae66:	f2c0 80ac 	blt.w	801afc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801ae6a:	f04f 0e00 	mov.w	lr, #0
 801ae6e:	eb03 020e 	add.w	r2, r3, lr
 801ae72:	2a00      	cmp	r2, #0
 801ae74:	dc3e      	bgt.n	801aef4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ae76:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ae7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae7e:	f1bb 0f00 	cmp.w	fp, #0
 801ae82:	f340 80fe 	ble.w	801b082 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ae86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae8e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ae92:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ae94:	f1bb 0b01 	subs.w	fp, fp, #1
 801ae98:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aea0:	eeb0 6a62 	vmov.f32	s12, s5
 801aea4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aea8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aeac:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aeb0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aeb4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aeb8:	eeb0 6a43 	vmov.f32	s12, s6
 801aebc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aec0:	ee12 2a90 	vmov	r2, s5
 801aec4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aec8:	fb92 f3f3 	sdiv	r3, r2, r3
 801aecc:	ee13 2a10 	vmov	r2, s6
 801aed0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aed4:	9313      	str	r3, [sp, #76]	; 0x4c
 801aed6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aed8:	fb92 f3f3 	sdiv	r3, r2, r3
 801aedc:	9a04      	ldr	r2, [sp, #16]
 801aede:	9314      	str	r3, [sp, #80]	; 0x50
 801aee0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aee4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aee6:	eeb0 3a67 	vmov.f32	s6, s15
 801aeea:	bf08      	it	eq
 801aeec:	4613      	moveq	r3, r2
 801aeee:	eef0 2a47 	vmov.f32	s5, s14
 801aef2:	e787      	b.n	801ae04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aef4:	1406      	asrs	r6, r0, #16
 801aef6:	d45d      	bmi.n	801afb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801aef8:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801aefc:	42b5      	cmp	r5, r6
 801aefe:	dd59      	ble.n	801afb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801af00:	140f      	asrs	r7, r1, #16
 801af02:	d457      	bmi.n	801afb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801af04:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801af08:	42ba      	cmp	r2, r7
 801af0a:	dd53      	ble.n	801afb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801af0c:	9a01      	ldr	r2, [sp, #4]
 801af0e:	b22d      	sxth	r5, r5
 801af10:	fb07 2505 	mla	r5, r7, r5, r2
 801af14:	5daa      	ldrb	r2, [r5, r6]
 801af16:	9d02      	ldr	r5, [sp, #8]
 801af18:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801af1c:	0e2e      	lsrs	r6, r5, #24
 801af1e:	d049      	beq.n	801afb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801af20:	f06f 0201 	mvn.w	r2, #1
 801af24:	fb02 f20e 	mul.w	r2, r2, lr
 801af28:	9203      	str	r2, [sp, #12]
 801af2a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801af2e:	9a05      	ldr	r2, [sp, #20]
 801af30:	4356      	muls	r6, r2
 801af32:	1c72      	adds	r2, r6, #1
 801af34:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801af38:	1212      	asrs	r2, r2, #8
 801af3a:	fa1f f982 	uxth.w	r9, r2
 801af3e:	ea4f 2728 	mov.w	r7, r8, asr #8
 801af42:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801af46:	43d2      	mvns	r2, r2
 801af48:	b2d2      	uxtb	r2, r2
 801af4a:	fb16 f609 	smulbb	r6, r6, r9
 801af4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801af52:	fb07 6702 	mla	r7, r7, r2, r6
 801af56:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801af5a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801af5e:	b2ed      	uxtb	r5, r5
 801af60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801af64:	fa5f f888 	uxtb.w	r8, r8
 801af68:	fb15 f509 	smulbb	r5, r5, r9
 801af6c:	fb08 5502 	mla	r5, r8, r2, r5
 801af70:	b2bf      	uxth	r7, r7
 801af72:	fb1a fa09 	smulbb	sl, sl, r9
 801af76:	b2ad      	uxth	r5, r5
 801af78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801af7c:	fb06 a602 	mla	r6, r6, r2, sl
 801af80:	1c7a      	adds	r2, r7, #1
 801af82:	f105 0a01 	add.w	sl, r5, #1
 801af86:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801af8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af8e:	b2b6      	uxth	r6, r6
 801af90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af94:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801af98:	ea4a 0707 	orr.w	r7, sl, r7
 801af9c:	f106 0a01 	add.w	sl, r6, #1
 801afa0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801afa4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801afa8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801afac:	9a03      	ldr	r2, [sp, #12]
 801afae:	ea47 070a 	orr.w	r7, r7, sl
 801afb2:	52a7      	strh	r7, [r4, r2]
 801afb4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801afb6:	4410      	add	r0, r2
 801afb8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801afba:	f10e 3eff 	add.w	lr, lr, #4294967295
 801afbe:	4411      	add	r1, r2
 801afc0:	e755      	b.n	801ae6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801afc2:	f04f 0800 	mov.w	r8, #0
 801afc6:	eba3 0208 	sub.w	r2, r3, r8
 801afca:	2a00      	cmp	r2, #0
 801afcc:	f77f af53 	ble.w	801ae76 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801afd0:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801afd4:	9f01      	ldr	r7, [sp, #4]
 801afd6:	140a      	asrs	r2, r1, #16
 801afd8:	1405      	asrs	r5, r0, #16
 801afda:	fb06 7202 	mla	r2, r6, r2, r7
 801afde:	5d52      	ldrb	r2, [r2, r5]
 801afe0:	9d02      	ldr	r5, [sp, #8]
 801afe2:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801afe6:	0e2e      	lsrs	r6, r5, #24
 801afe8:	d044      	beq.n	801b074 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801afea:	9a05      	ldr	r2, [sp, #20]
 801afec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801aff0:	4356      	muls	r6, r2
 801aff2:	1c72      	adds	r2, r6, #1
 801aff4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801aff8:	1212      	asrs	r2, r2, #8
 801affa:	fa1f f982 	uxth.w	r9, r2
 801affe:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b002:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b006:	43d2      	mvns	r2, r2
 801b008:	b2d2      	uxtb	r2, r2
 801b00a:	fb16 f609 	smulbb	r6, r6, r9
 801b00e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b012:	fb07 6702 	mla	r7, r7, r2, r6
 801b016:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b01a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b01e:	b2ed      	uxtb	r5, r5
 801b020:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b024:	fa5f fe8e 	uxtb.w	lr, lr
 801b028:	fb15 f509 	smulbb	r5, r5, r9
 801b02c:	fb0e 5502 	mla	r5, lr, r2, r5
 801b030:	b2bf      	uxth	r7, r7
 801b032:	fb1a fa09 	smulbb	sl, sl, r9
 801b036:	b2ad      	uxth	r5, r5
 801b038:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b03c:	fb06 a602 	mla	r6, r6, r2, sl
 801b040:	1c7a      	adds	r2, r7, #1
 801b042:	f105 0a01 	add.w	sl, r5, #1
 801b046:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b04a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b04e:	b2b6      	uxth	r6, r6
 801b050:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b054:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b058:	ea4a 0707 	orr.w	r7, sl, r7
 801b05c:	f106 0a01 	add.w	sl, r6, #1
 801b060:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b064:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b068:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b06c:	ea47 070a 	orr.w	r7, r7, sl
 801b070:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b074:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801b076:	4410      	add	r0, r2
 801b078:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b07a:	f108 0801 	add.w	r8, r8, #1
 801b07e:	4411      	add	r1, r2
 801b080:	e7a1      	b.n	801afc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b082:	b007      	add	sp, #28
 801b084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b088 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b08c:	b085      	sub	sp, #20
 801b08e:	468b      	mov	fp, r1
 801b090:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b092:	9203      	str	r2, [sp, #12]
 801b094:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b098:	6841      	ldr	r1, [r0, #4]
 801b09a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b09e:	fb01 2404 	mla	r4, r1, r4, r2
 801b0a2:	6802      	ldr	r2, [r0, #0]
 801b0a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b0a8:	f8de 2000 	ldr.w	r2, [lr]
 801b0ac:	9200      	str	r2, [sp, #0]
 801b0ae:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b0b2:	3204      	adds	r2, #4
 801b0b4:	9201      	str	r2, [sp, #4]
 801b0b6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b0ba:	f1bb 0f00 	cmp.w	fp, #0
 801b0be:	dc03      	bgt.n	801b0c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b0c0:	9a03      	ldr	r2, [sp, #12]
 801b0c2:	2a00      	cmp	r2, #0
 801b0c4:	f340 8153 	ble.w	801b36e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b0c8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b0ce:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b0d2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b0d6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b0d8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b0dc:	2b00      	cmp	r3, #0
 801b0de:	dd0e      	ble.n	801b0fe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b0e0:	1408      	asrs	r0, r1, #16
 801b0e2:	d405      	bmi.n	801b0f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0e4:	42b8      	cmp	r0, r7
 801b0e6:	da03      	bge.n	801b0f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0e8:	1410      	asrs	r0, r2, #16
 801b0ea:	d401      	bmi.n	801b0f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b0ec:	42b0      	cmp	r0, r6
 801b0ee:	db07      	blt.n	801b100 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b0f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b0f2:	4401      	add	r1, r0
 801b0f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b0f6:	3b01      	subs	r3, #1
 801b0f8:	4402      	add	r2, r0
 801b0fa:	3402      	adds	r4, #2
 801b0fc:	e7ee      	b.n	801b0dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b0fe:	d017      	beq.n	801b130 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b100:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b102:	1e58      	subs	r0, r3, #1
 801b104:	fb05 1500 	mla	r5, r5, r0, r1
 801b108:	142d      	asrs	r5, r5, #16
 801b10a:	d409      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b10c:	42bd      	cmp	r5, r7
 801b10e:	da07      	bge.n	801b120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b110:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b112:	fb05 2000 	mla	r0, r5, r0, r2
 801b116:	1400      	asrs	r0, r0, #16
 801b118:	d402      	bmi.n	801b120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b11a:	42b0      	cmp	r0, r6
 801b11c:	f2c0 80bc 	blt.w	801b298 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801b120:	2600      	movs	r6, #0
 801b122:	1998      	adds	r0, r3, r6
 801b124:	2800      	cmp	r0, #0
 801b126:	dc3e      	bgt.n	801b1a6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801b128:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b12c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b130:	f1bb 0f00 	cmp.w	fp, #0
 801b134:	f340 811b 	ble.w	801b36e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801b138:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b13c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b140:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b144:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b146:	f1bb 0b01 	subs.w	fp, fp, #1
 801b14a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b14e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b152:	eeb0 6a62 	vmov.f32	s12, s5
 801b156:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b15a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b15e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b162:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b166:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b16a:	eeb0 6a43 	vmov.f32	s12, s6
 801b16e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b172:	ee12 2a90 	vmov	r2, s5
 801b176:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b17a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b17e:	ee13 2a10 	vmov	r2, s6
 801b182:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b186:	9311      	str	r3, [sp, #68]	; 0x44
 801b188:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b18a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b18e:	9a03      	ldr	r2, [sp, #12]
 801b190:	9312      	str	r3, [sp, #72]	; 0x48
 801b192:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b196:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b198:	eeb0 3a67 	vmov.f32	s6, s15
 801b19c:	bf08      	it	eq
 801b19e:	4613      	moveq	r3, r2
 801b1a0:	eef0 2a47 	vmov.f32	s5, s14
 801b1a4:	e789      	b.n	801b0ba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b1a6:	140f      	asrs	r7, r1, #16
 801b1a8:	d426      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b1aa:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b1ae:	42bd      	cmp	r5, r7
 801b1b0:	dd22      	ble.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b1b2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b1b6:	d41f      	bmi.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b1b8:	f8de 000c 	ldr.w	r0, [lr, #12]
 801b1bc:	4560      	cmp	r0, ip
 801b1be:	dd1b      	ble.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b1c0:	9800      	ldr	r0, [sp, #0]
 801b1c2:	b22d      	sxth	r5, r5
 801b1c4:	fb0c 0505 	mla	r5, ip, r5, r0
 801b1c8:	5de8      	ldrb	r0, [r5, r7]
 801b1ca:	9d01      	ldr	r5, [sp, #4]
 801b1cc:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801b1d0:	0e07      	lsrs	r7, r0, #24
 801b1d2:	2fff      	cmp	r7, #255	; 0xff
 801b1d4:	d116      	bne.n	801b204 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801b1d6:	f06f 0501 	mvn.w	r5, #1
 801b1da:	fb05 f706 	mul.w	r7, r5, r6
 801b1de:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801b1e2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b1e6:	0945      	lsrs	r5, r0, #5
 801b1e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b1ec:	ea4c 0505 	orr.w	r5, ip, r5
 801b1f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b1f4:	4305      	orrs	r5, r0
 801b1f6:	53e5      	strh	r5, [r4, r7]
 801b1f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b1fa:	4401      	add	r1, r0
 801b1fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b1fe:	3e01      	subs	r6, #1
 801b200:	4402      	add	r2, r0
 801b202:	e78e      	b.n	801b122 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b204:	b2fd      	uxtb	r5, r7
 801b206:	2f00      	cmp	r7, #0
 801b208:	d0f6      	beq.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b20a:	f06f 0701 	mvn.w	r7, #1
 801b20e:	4377      	muls	r7, r6
 801b210:	fa1f f985 	uxth.w	r9, r5
 801b214:	f834 8007 	ldrh.w	r8, [r4, r7]
 801b218:	9702      	str	r7, [sp, #8]
 801b21a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b21e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b222:	43ed      	mvns	r5, r5
 801b224:	b2ed      	uxtb	r5, r5
 801b226:	fb17 f709 	smulbb	r7, r7, r9
 801b22a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b22e:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b232:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b236:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801b23a:	b2c0      	uxtb	r0, r0
 801b23c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b240:	fa5f f888 	uxtb.w	r8, r8
 801b244:	fb10 f009 	smulbb	r0, r0, r9
 801b248:	fb08 0005 	mla	r0, r8, r5, r0
 801b24c:	b280      	uxth	r0, r0
 801b24e:	fa1f fc8c 	uxth.w	ip, ip
 801b252:	fb1a fa09 	smulbb	sl, sl, r9
 801b256:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b25a:	fb07 a705 	mla	r7, r7, r5, sl
 801b25e:	f100 0a01 	add.w	sl, r0, #1
 801b262:	f10c 0501 	add.w	r5, ip, #1
 801b266:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b26a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b26e:	b2bf      	uxth	r7, r7
 801b270:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b274:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b278:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b27c:	f107 0a01 	add.w	sl, r7, #1
 801b280:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b284:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b288:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b28c:	9802      	ldr	r0, [sp, #8]
 801b28e:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b292:	f824 c000 	strh.w	ip, [r4, r0]
 801b296:	e7af      	b.n	801b1f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b298:	f04f 0800 	mov.w	r8, #0
 801b29c:	eba3 0008 	sub.w	r0, r3, r8
 801b2a0:	2800      	cmp	r0, #0
 801b2a2:	f77f af41 	ble.w	801b128 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b2a6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b2aa:	9f00      	ldr	r7, [sp, #0]
 801b2ac:	1410      	asrs	r0, r2, #16
 801b2ae:	140d      	asrs	r5, r1, #16
 801b2b0:	fb06 7000 	mla	r0, r6, r0, r7
 801b2b4:	5d40      	ldrb	r0, [r0, r5]
 801b2b6:	9d01      	ldr	r5, [sp, #4]
 801b2b8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b2bc:	0e2e      	lsrs	r6, r5, #24
 801b2be:	2eff      	cmp	r6, #255	; 0xff
 801b2c0:	d112      	bne.n	801b2e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801b2c2:	482c      	ldr	r0, [pc, #176]	; (801b374 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801b2c4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b2c8:	0968      	lsrs	r0, r5, #5
 801b2ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b2ce:	4330      	orrs	r0, r6
 801b2d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b2d4:	4328      	orrs	r0, r5
 801b2d6:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801b2da:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b2dc:	4401      	add	r1, r0
 801b2de:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b2e0:	f108 0801 	add.w	r8, r8, #1
 801b2e4:	4402      	add	r2, r0
 801b2e6:	e7d9      	b.n	801b29c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801b2e8:	b2f0      	uxtb	r0, r6
 801b2ea:	2e00      	cmp	r6, #0
 801b2ec:	d0f5      	beq.n	801b2da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b2ee:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801b2f2:	fa1f f980 	uxth.w	r9, r0
 801b2f6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b2fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b2fe:	43c0      	mvns	r0, r0
 801b300:	b2c0      	uxtb	r0, r0
 801b302:	fb16 f609 	smulbb	r6, r6, r9
 801b306:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b30a:	fb07 6700 	mla	r7, r7, r0, r6
 801b30e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b312:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b316:	b2ed      	uxtb	r5, r5
 801b318:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b31c:	fa5f fc8c 	uxtb.w	ip, ip
 801b320:	fb15 f509 	smulbb	r5, r5, r9
 801b324:	fb0c 5500 	mla	r5, ip, r0, r5
 801b328:	b2bf      	uxth	r7, r7
 801b32a:	fb1a fa09 	smulbb	sl, sl, r9
 801b32e:	b2ad      	uxth	r5, r5
 801b330:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b334:	fb06 a600 	mla	r6, r6, r0, sl
 801b338:	1c78      	adds	r0, r7, #1
 801b33a:	f105 0a01 	add.w	sl, r5, #1
 801b33e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b342:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b346:	b2b6      	uxth	r6, r6
 801b348:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b34c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801b350:	ea4a 0707 	orr.w	r7, sl, r7
 801b354:	f106 0a01 	add.w	sl, r6, #1
 801b358:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b35c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b360:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b364:	ea47 070a 	orr.w	r7, r7, sl
 801b368:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801b36c:	e7b5      	b.n	801b2da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b36e:	b005      	add	sp, #20
 801b370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b374:	fffff800 	.word	0xfffff800

0801b378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b37c:	b087      	sub	sp, #28
 801b37e:	468b      	mov	fp, r1
 801b380:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b382:	9204      	str	r2, [sp, #16]
 801b384:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b388:	9205      	str	r2, [sp, #20]
 801b38a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801b38e:	6861      	ldr	r1, [r4, #4]
 801b390:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801b394:	fb01 2000 	mla	r0, r1, r0, r2
 801b398:	6822      	ldr	r2, [r4, #0]
 801b39a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b39e:	f8de 2000 	ldr.w	r2, [lr]
 801b3a2:	9201      	str	r2, [sp, #4]
 801b3a4:	f8de 2004 	ldr.w	r2, [lr, #4]
 801b3a8:	9202      	str	r2, [sp, #8]
 801b3aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b3ae:	f1bb 0f00 	cmp.w	fp, #0
 801b3b2:	dc03      	bgt.n	801b3bc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801b3b4:	9a04      	ldr	r2, [sp, #16]
 801b3b6:	2a00      	cmp	r2, #0
 801b3b8:	f340 8142 	ble.w	801b640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b3bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b3be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b3c2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801b3c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b3ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b3cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b3d0:	2b00      	cmp	r3, #0
 801b3d2:	dd0e      	ble.n	801b3f2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b3d4:	140c      	asrs	r4, r1, #16
 801b3d6:	d405      	bmi.n	801b3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b3d8:	42bc      	cmp	r4, r7
 801b3da:	da03      	bge.n	801b3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b3dc:	1414      	asrs	r4, r2, #16
 801b3de:	d401      	bmi.n	801b3e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801b3e0:	42b4      	cmp	r4, r6
 801b3e2:	db07      	blt.n	801b3f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801b3e4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b3e6:	4421      	add	r1, r4
 801b3e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b3ea:	3b01      	subs	r3, #1
 801b3ec:	4422      	add	r2, r4
 801b3ee:	3002      	adds	r0, #2
 801b3f0:	e7ee      	b.n	801b3d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b3f2:	d019      	beq.n	801b428 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b3f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b3f6:	1e5c      	subs	r4, r3, #1
 801b3f8:	fb05 1504 	mla	r5, r5, r4, r1
 801b3fc:	142d      	asrs	r5, r5, #16
 801b3fe:	d409      	bmi.n	801b414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b400:	42bd      	cmp	r5, r7
 801b402:	da07      	bge.n	801b414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b404:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b406:	fb05 2404 	mla	r4, r5, r4, r2
 801b40a:	1424      	asrs	r4, r4, #16
 801b40c:	d402      	bmi.n	801b414 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801b40e:	42b4      	cmp	r4, r6
 801b410:	f2c0 80b1 	blt.w	801b576 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801b414:	f04f 0800 	mov.w	r8, #0
 801b418:	eb03 0408 	add.w	r4, r3, r8
 801b41c:	2c00      	cmp	r4, #0
 801b41e:	dc3e      	bgt.n	801b49e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b420:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b424:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b428:	f1bb 0f00 	cmp.w	fp, #0
 801b42c:	f340 8108 	ble.w	801b640 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801b430:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b434:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b438:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b43c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b43e:	f1bb 0b01 	subs.w	fp, fp, #1
 801b442:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b446:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b44a:	eeb0 6a62 	vmov.f32	s12, s5
 801b44e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b452:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b456:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b45a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801b45e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b462:	eeb0 6a43 	vmov.f32	s12, s6
 801b466:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b46a:	ee12 2a90 	vmov	r2, s5
 801b46e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b472:	fb92 f3f3 	sdiv	r3, r2, r3
 801b476:	ee13 2a10 	vmov	r2, s6
 801b47a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b47e:	9313      	str	r3, [sp, #76]	; 0x4c
 801b480:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b482:	fb92 f3f3 	sdiv	r3, r2, r3
 801b486:	9a04      	ldr	r2, [sp, #16]
 801b488:	9314      	str	r3, [sp, #80]	; 0x50
 801b48a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801b48e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801b490:	eeb0 3a67 	vmov.f32	s6, s15
 801b494:	bf08      	it	eq
 801b496:	4613      	moveq	r3, r2
 801b498:	eef0 2a47 	vmov.f32	s5, s14
 801b49c:	e787      	b.n	801b3ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801b49e:	140e      	asrs	r6, r1, #16
 801b4a0:	d462      	bmi.n	801b568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4a2:	f8de 5008 	ldr.w	r5, [lr, #8]
 801b4a6:	42b5      	cmp	r5, r6
 801b4a8:	dd5e      	ble.n	801b568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4aa:	1417      	asrs	r7, r2, #16
 801b4ac:	d45c      	bmi.n	801b568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4ae:	f8de 400c 	ldr.w	r4, [lr, #12]
 801b4b2:	42bc      	cmp	r4, r7
 801b4b4:	dd58      	ble.n	801b568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4b6:	b22d      	sxth	r5, r5
 801b4b8:	fb07 6505 	mla	r5, r7, r5, r6
 801b4bc:	9c02      	ldr	r4, [sp, #8]
 801b4be:	5d66      	ldrb	r6, [r4, r5]
 801b4c0:	2e00      	cmp	r6, #0
 801b4c2:	d051      	beq.n	801b568 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4c4:	9c01      	ldr	r4, [sp, #4]
 801b4c6:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801b4ca:	f06f 0401 	mvn.w	r4, #1
 801b4ce:	fb04 f408 	mul.w	r4, r4, r8
 801b4d2:	9403      	str	r4, [sp, #12]
 801b4d4:	5b05      	ldrh	r5, [r0, r4]
 801b4d6:	9c05      	ldr	r4, [sp, #20]
 801b4d8:	4366      	muls	r6, r4
 801b4da:	1c74      	adds	r4, r6, #1
 801b4dc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b4e0:	1224      	asrs	r4, r4, #8
 801b4e2:	b2a7      	uxth	r7, r4
 801b4e4:	122e      	asrs	r6, r5, #8
 801b4e6:	43e4      	mvns	r4, r4
 801b4e8:	b2e4      	uxtb	r4, r4
 801b4ea:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801b4ee:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4f2:	fb16 f604 	smulbb	r6, r6, r4
 801b4f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b4fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b4fe:	00ed      	lsls	r5, r5, #3
 801b500:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b504:	b2ed      	uxtb	r5, r5
 801b506:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801b50a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b50e:	fb15 f504 	smulbb	r5, r5, r4
 801b512:	fa5f f989 	uxtb.w	r9, r9
 801b516:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b51a:	fb09 5507 	mla	r5, r9, r7, r5
 801b51e:	fb1a fa04 	smulbb	sl, sl, r4
 801b522:	fa1f fc8c 	uxth.w	ip, ip
 801b526:	b2ad      	uxth	r5, r5
 801b528:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b52c:	fb06 a607 	mla	r6, r6, r7, sl
 801b530:	f10c 0401 	add.w	r4, ip, #1
 801b534:	f105 0a01 	add.w	sl, r5, #1
 801b538:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b53c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b540:	b2b6      	uxth	r6, r6
 801b542:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b546:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b54a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b54e:	f106 0a01 	add.w	sl, r6, #1
 801b552:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b556:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b55a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b55e:	9c03      	ldr	r4, [sp, #12]
 801b560:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b564:	f820 c004 	strh.w	ip, [r0, r4]
 801b568:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b56a:	4421      	add	r1, r4
 801b56c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b56e:	f108 38ff 	add.w	r8, r8, #4294967295
 801b572:	4422      	add	r2, r4
 801b574:	e750      	b.n	801b418 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b576:	f04f 0900 	mov.w	r9, #0
 801b57a:	eba3 0409 	sub.w	r4, r3, r9
 801b57e:	2c00      	cmp	r4, #0
 801b580:	f77f af4e 	ble.w	801b420 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b584:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801b588:	140d      	asrs	r5, r1, #16
 801b58a:	1414      	asrs	r4, r2, #16
 801b58c:	fb06 5404 	mla	r4, r6, r4, r5
 801b590:	9d02      	ldr	r5, [sp, #8]
 801b592:	5d2e      	ldrb	r6, [r5, r4]
 801b594:	2e00      	cmp	r6, #0
 801b596:	d04c      	beq.n	801b632 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801b598:	9d01      	ldr	r5, [sp, #4]
 801b59a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801b59e:	9c05      	ldr	r4, [sp, #20]
 801b5a0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b5a4:	4366      	muls	r6, r4
 801b5a6:	1c74      	adds	r4, r6, #1
 801b5a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801b5ac:	1224      	asrs	r4, r4, #8
 801b5ae:	b2a7      	uxth	r7, r4
 801b5b0:	122e      	asrs	r6, r5, #8
 801b5b2:	43e4      	mvns	r4, r4
 801b5b4:	b2e4      	uxtb	r4, r4
 801b5b6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801b5ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b5be:	fb16 f604 	smulbb	r6, r6, r4
 801b5c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b5c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b5ca:	00ed      	lsls	r5, r5, #3
 801b5cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b5d0:	b2ed      	uxtb	r5, r5
 801b5d2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801b5d6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b5da:	fb15 f504 	smulbb	r5, r5, r4
 801b5de:	fa5f f888 	uxtb.w	r8, r8
 801b5e2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b5e6:	fb08 5507 	mla	r5, r8, r7, r5
 801b5ea:	fb1a fa04 	smulbb	sl, sl, r4
 801b5ee:	fa1f fc8c 	uxth.w	ip, ip
 801b5f2:	b2ad      	uxth	r5, r5
 801b5f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b5f8:	fb06 a607 	mla	r6, r6, r7, sl
 801b5fc:	f10c 0401 	add.w	r4, ip, #1
 801b600:	f105 0a01 	add.w	sl, r5, #1
 801b604:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b608:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b60c:	b2b6      	uxth	r6, r6
 801b60e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b612:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b616:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b61a:	f106 0a01 	add.w	sl, r6, #1
 801b61e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b622:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b626:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b62a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b62e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b632:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b634:	4421      	add	r1, r4
 801b636:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b638:	f109 0901 	add.w	r9, r9, #1
 801b63c:	4422      	add	r2, r4
 801b63e:	e79c      	b.n	801b57a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801b640:	b007      	add	sp, #28
 801b642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b646 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b646:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b64a:	b085      	sub	sp, #20
 801b64c:	468b      	mov	fp, r1
 801b64e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b650:	9203      	str	r2, [sp, #12]
 801b652:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801b656:	6861      	ldr	r1, [r4, #4]
 801b658:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801b65c:	fb01 2000 	mla	r0, r1, r0, r2
 801b660:	6822      	ldr	r2, [r4, #0]
 801b662:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b666:	f8d8 2000 	ldr.w	r2, [r8]
 801b66a:	9200      	str	r2, [sp, #0]
 801b66c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801b670:	9201      	str	r2, [sp, #4]
 801b672:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801b676:	f1bb 0f00 	cmp.w	fp, #0
 801b67a:	dc03      	bgt.n	801b684 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b67c:	9a03      	ldr	r2, [sp, #12]
 801b67e:	2a00      	cmp	r2, #0
 801b680:	f340 8146 	ble.w	801b910 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b684:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b686:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801b68a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801b68e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b692:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b694:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b698:	2b00      	cmp	r3, #0
 801b69a:	dd0e      	ble.n	801b6ba <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801b69c:	140c      	asrs	r4, r1, #16
 801b69e:	d405      	bmi.n	801b6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b6a0:	42bc      	cmp	r4, r7
 801b6a2:	da03      	bge.n	801b6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b6a4:	1414      	asrs	r4, r2, #16
 801b6a6:	d401      	bmi.n	801b6ac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801b6a8:	42b4      	cmp	r4, r6
 801b6aa:	db07      	blt.n	801b6bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b6ac:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b6ae:	4421      	add	r1, r4
 801b6b0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b6b2:	3b01      	subs	r3, #1
 801b6b4:	4422      	add	r2, r4
 801b6b6:	3002      	adds	r0, #2
 801b6b8:	e7ee      	b.n	801b698 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b6ba:	d017      	beq.n	801b6ec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801b6bc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b6be:	1e5c      	subs	r4, r3, #1
 801b6c0:	fb05 1504 	mla	r5, r5, r4, r1
 801b6c4:	142d      	asrs	r5, r5, #16
 801b6c6:	d409      	bmi.n	801b6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b6c8:	42bd      	cmp	r5, r7
 801b6ca:	da07      	bge.n	801b6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b6cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b6ce:	fb05 2404 	mla	r4, r5, r4, r2
 801b6d2:	1424      	asrs	r4, r4, #16
 801b6d4:	d402      	bmi.n	801b6dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801b6d6:	42b4      	cmp	r4, r6
 801b6d8:	f2c0 80b3 	blt.w	801b842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801b6dc:	2600      	movs	r6, #0
 801b6de:	199c      	adds	r4, r3, r6
 801b6e0:	2c00      	cmp	r4, #0
 801b6e2:	dc3e      	bgt.n	801b762 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801b6e4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b6e8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6ec:	f1bb 0f00 	cmp.w	fp, #0
 801b6f0:	f340 810e 	ble.w	801b910 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801b6f4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b6f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b6fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b700:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b702:	f1bb 0b01 	subs.w	fp, fp, #1
 801b706:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b70a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b70e:	eeb0 6a62 	vmov.f32	s12, s5
 801b712:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b716:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b71a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b71e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801b722:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b726:	eeb0 6a43 	vmov.f32	s12, s6
 801b72a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b72e:	ee12 2a90 	vmov	r2, s5
 801b732:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b736:	fb92 f3f3 	sdiv	r3, r2, r3
 801b73a:	ee13 2a10 	vmov	r2, s6
 801b73e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b742:	9311      	str	r3, [sp, #68]	; 0x44
 801b744:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b746:	fb92 f3f3 	sdiv	r3, r2, r3
 801b74a:	9a03      	ldr	r2, [sp, #12]
 801b74c:	9312      	str	r3, [sp, #72]	; 0x48
 801b74e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801b752:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801b754:	eeb0 3a67 	vmov.f32	s6, s15
 801b758:	bf08      	it	eq
 801b75a:	4613      	moveq	r3, r2
 801b75c:	eef0 2a47 	vmov.f32	s5, s14
 801b760:	e789      	b.n	801b676 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801b762:	140f      	asrs	r7, r1, #16
 801b764:	d418      	bmi.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b766:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801b76a:	42bd      	cmp	r5, r7
 801b76c:	dd14      	ble.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b76e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801b772:	d411      	bmi.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b774:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801b778:	4564      	cmp	r4, ip
 801b77a:	dd0d      	ble.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b77c:	b22d      	sxth	r5, r5
 801b77e:	fb0c 7505 	mla	r5, ip, r5, r7
 801b782:	9c01      	ldr	r4, [sp, #4]
 801b784:	5d64      	ldrb	r4, [r4, r5]
 801b786:	2cff      	cmp	r4, #255	; 0xff
 801b788:	d10c      	bne.n	801b7a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801b78a:	9c00      	ldr	r4, [sp, #0]
 801b78c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801b790:	f06f 0401 	mvn.w	r4, #1
 801b794:	4374      	muls	r4, r6
 801b796:	5305      	strh	r5, [r0, r4]
 801b798:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b79a:	4421      	add	r1, r4
 801b79c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b79e:	3e01      	subs	r6, #1
 801b7a0:	4422      	add	r2, r4
 801b7a2:	e79c      	b.n	801b6de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b7a4:	2c00      	cmp	r4, #0
 801b7a6:	d0f7      	beq.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b7a8:	9f00      	ldr	r7, [sp, #0]
 801b7aa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801b7ae:	f06f 0501 	mvn.w	r5, #1
 801b7b2:	4375      	muls	r5, r6
 801b7b4:	9502      	str	r5, [sp, #8]
 801b7b6:	5b45      	ldrh	r5, [r0, r5]
 801b7b8:	fa1f fc84 	uxth.w	ip, r4
 801b7bc:	122f      	asrs	r7, r5, #8
 801b7be:	43e4      	mvns	r4, r4
 801b7c0:	b2e4      	uxtb	r4, r4
 801b7c2:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801b7c6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b7ca:	fb17 f704 	smulbb	r7, r7, r4
 801b7ce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b7d2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b7d6:	00ed      	lsls	r5, r5, #3
 801b7d8:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801b7dc:	b2ed      	uxtb	r5, r5
 801b7de:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801b7e2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801b7e6:	fb15 f504 	smulbb	r5, r5, r4
 801b7ea:	fa5f f989 	uxtb.w	r9, r9
 801b7ee:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b7f2:	fb09 550c 	mla	r5, r9, ip, r5
 801b7f6:	fb1a fa04 	smulbb	sl, sl, r4
 801b7fa:	fa1f fe8e 	uxth.w	lr, lr
 801b7fe:	b2ad      	uxth	r5, r5
 801b800:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801b804:	fb07 a70c 	mla	r7, r7, ip, sl
 801b808:	f10e 0401 	add.w	r4, lr, #1
 801b80c:	f105 0a01 	add.w	sl, r5, #1
 801b810:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801b814:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b818:	b2bf      	uxth	r7, r7
 801b81a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b81e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801b822:	ea4a 0e0e 	orr.w	lr, sl, lr
 801b826:	f107 0a01 	add.w	sl, r7, #1
 801b82a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b82e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b832:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b836:	9c02      	ldr	r4, [sp, #8]
 801b838:	ea4e 0e0a 	orr.w	lr, lr, sl
 801b83c:	f820 e004 	strh.w	lr, [r0, r4]
 801b840:	e7aa      	b.n	801b798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801b842:	f04f 0900 	mov.w	r9, #0
 801b846:	eba3 0409 	sub.w	r4, r3, r9
 801b84a:	2c00      	cmp	r4, #0
 801b84c:	f77f af4a 	ble.w	801b6e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801b850:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b854:	1414      	asrs	r4, r2, #16
 801b856:	140d      	asrs	r5, r1, #16
 801b858:	fb06 5504 	mla	r5, r6, r4, r5
 801b85c:	9c01      	ldr	r4, [sp, #4]
 801b85e:	5d64      	ldrb	r4, [r4, r5]
 801b860:	2cff      	cmp	r4, #255	; 0xff
 801b862:	d10b      	bne.n	801b87c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b864:	9c00      	ldr	r4, [sp, #0]
 801b866:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801b86a:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801b86e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b870:	4421      	add	r1, r4
 801b872:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b874:	f109 0901 	add.w	r9, r9, #1
 801b878:	4422      	add	r2, r4
 801b87a:	e7e4      	b.n	801b846 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b87c:	2c00      	cmp	r4, #0
 801b87e:	d0f6      	beq.n	801b86e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b880:	9e00      	ldr	r6, [sp, #0]
 801b882:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801b886:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801b88a:	b2a7      	uxth	r7, r4
 801b88c:	122e      	asrs	r6, r5, #8
 801b88e:	43e4      	mvns	r4, r4
 801b890:	b2e4      	uxtb	r4, r4
 801b892:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b896:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b89a:	fb16 f604 	smulbb	r6, r6, r4
 801b89e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801b8a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b8a6:	00ed      	lsls	r5, r5, #3
 801b8a8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b8ac:	b2ed      	uxtb	r5, r5
 801b8ae:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b8b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b8b6:	fb15 f504 	smulbb	r5, r5, r4
 801b8ba:	fa5f fe8e 	uxtb.w	lr, lr
 801b8be:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801b8c2:	fb0e 5507 	mla	r5, lr, r7, r5
 801b8c6:	fb1a fa04 	smulbb	sl, sl, r4
 801b8ca:	fa1f fc8c 	uxth.w	ip, ip
 801b8ce:	b2ad      	uxth	r5, r5
 801b8d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b8d4:	fb06 a607 	mla	r6, r6, r7, sl
 801b8d8:	f10c 0401 	add.w	r4, ip, #1
 801b8dc:	f105 0a01 	add.w	sl, r5, #1
 801b8e0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801b8e4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b8e8:	b2b6      	uxth	r6, r6
 801b8ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b8ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801b8f2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b8f6:	f106 0a01 	add.w	sl, r6, #1
 801b8fa:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b8fe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b902:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b906:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b90a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801b90e:	e7ae      	b.n	801b86e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801b910:	b005      	add	sp, #20
 801b912:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b916 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b916:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b91a:	b085      	sub	sp, #20
 801b91c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801b91e:	9203      	str	r2, [sp, #12]
 801b920:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 801b924:	9201      	str	r2, [sp, #4]
 801b926:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801b92a:	9100      	str	r1, [sp, #0]
 801b92c:	6841      	ldr	r1, [r0, #4]
 801b92e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801b932:	fb01 2404 	mla	r4, r1, r4, r2
 801b936:	6802      	ldr	r2, [r0, #0]
 801b938:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b93c:	f8de 2000 	ldr.w	r2, [lr]
 801b940:	9202      	str	r2, [sp, #8]
 801b942:	9a01      	ldr	r2, [sp, #4]
 801b944:	43d6      	mvns	r6, r2
 801b946:	b2f6      	uxtb	r6, r6
 801b948:	9a00      	ldr	r2, [sp, #0]
 801b94a:	2a00      	cmp	r2, #0
 801b94c:	dc03      	bgt.n	801b956 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b94e:	9a03      	ldr	r2, [sp, #12]
 801b950:	2a00      	cmp	r2, #0
 801b952:	f340 8124 	ble.w	801bb9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801b956:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b958:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801b95c:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801b960:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801b964:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801b966:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801b96a:	2b00      	cmp	r3, #0
 801b96c:	dd0e      	ble.n	801b98c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801b96e:	1408      	asrs	r0, r1, #16
 801b970:	d405      	bmi.n	801b97e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b972:	4560      	cmp	r0, ip
 801b974:	da03      	bge.n	801b97e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b976:	1410      	asrs	r0, r2, #16
 801b978:	d401      	bmi.n	801b97e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b97a:	42b8      	cmp	r0, r7
 801b97c:	db07      	blt.n	801b98e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b97e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801b980:	4401      	add	r1, r0
 801b982:	9812      	ldr	r0, [sp, #72]	; 0x48
 801b984:	3b01      	subs	r3, #1
 801b986:	4402      	add	r2, r0
 801b988:	3402      	adds	r4, #2
 801b98a:	e7ee      	b.n	801b96a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801b98c:	d06e      	beq.n	801ba6c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801b98e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b990:	1e58      	subs	r0, r3, #1
 801b992:	fb05 1500 	mla	r5, r5, r0, r1
 801b996:	142d      	asrs	r5, r5, #16
 801b998:	d45c      	bmi.n	801ba54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b99a:	4565      	cmp	r5, ip
 801b99c:	da5a      	bge.n	801ba54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b99e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b9a0:	fb05 2000 	mla	r0, r5, r0, r2
 801b9a4:	1400      	asrs	r0, r0, #16
 801b9a6:	d455      	bmi.n	801ba54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b9a8:	42b8      	cmp	r0, r7
 801b9aa:	da53      	bge.n	801ba54 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801b9ac:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801b9b0:	4699      	mov	r9, r3
 801b9b2:	46a2      	mov	sl, r4
 801b9b4:	f1b9 0f00 	cmp.w	r9, #0
 801b9b8:	dd54      	ble.n	801ba64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801b9ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801b9be:	140d      	asrs	r5, r1, #16
 801b9c0:	1410      	asrs	r0, r2, #16
 801b9c2:	fb07 5000 	mla	r0, r7, r0, r5
 801b9c6:	9d02      	ldr	r5, [sp, #8]
 801b9c8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801b9cc:	f8ba 5000 	ldrh.w	r5, [sl]
 801b9d0:	122f      	asrs	r7, r5, #8
 801b9d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801b9d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801b9da:	fb17 f706 	smulbb	r7, r7, r6
 801b9de:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801b9e2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b9e6:	00ed      	lsls	r5, r5, #3
 801b9e8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801b9ec:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801b9f0:	10c7      	asrs	r7, r0, #3
 801b9f2:	b2ed      	uxtb	r5, r5
 801b9f4:	00c0      	lsls	r0, r0, #3
 801b9f6:	fb18 f806 	smulbb	r8, r8, r6
 801b9fa:	fb15 f506 	smulbb	r5, r5, r6
 801b9fe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ba02:	b2c0      	uxtb	r0, r0
 801ba04:	fa1f fc8c 	uxth.w	ip, ip
 801ba08:	fb07 870b 	mla	r7, r7, fp, r8
 801ba0c:	fb00 500b 	mla	r0, r0, fp, r5
 801ba10:	b280      	uxth	r0, r0
 801ba12:	b2bf      	uxth	r7, r7
 801ba14:	f10c 0501 	add.w	r5, ip, #1
 801ba18:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801ba1c:	f107 0801 	add.w	r8, r7, #1
 801ba20:	1c45      	adds	r5, r0, #1
 801ba22:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801ba26:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801ba2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801ba2c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ba30:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ba34:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ba38:	ea45 0c0c 	orr.w	ip, r5, ip
 801ba3c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ba40:	4401      	add	r1, r0
 801ba42:	9812      	ldr	r0, [sp, #72]	; 0x48
 801ba44:	ea4c 0c08 	orr.w	ip, ip, r8
 801ba48:	f82a cb02 	strh.w	ip, [sl], #2
 801ba4c:	4402      	add	r2, r0
 801ba4e:	f109 39ff 	add.w	r9, r9, #4294967295
 801ba52:	e7af      	b.n	801b9b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801ba54:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801ba58:	f04f 0800 	mov.w	r8, #0
 801ba5c:	eb03 0008 	add.w	r0, r3, r8
 801ba60:	2800      	cmp	r0, #0
 801ba62:	dc41      	bgt.n	801bae8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801ba64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ba68:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ba6c:	9b00      	ldr	r3, [sp, #0]
 801ba6e:	2b00      	cmp	r3, #0
 801ba70:	f340 8095 	ble.w	801bb9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801ba74:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ba78:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ba7c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ba80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ba82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ba86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba8e:	eef0 6a62 	vmov.f32	s13, s5
 801ba92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba9e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801baa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801baa6:	eef0 6a43 	vmov.f32	s13, s6
 801baaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801baae:	ee12 2a90 	vmov	r2, s5
 801bab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bab6:	fb92 f3f3 	sdiv	r3, r2, r3
 801baba:	ee13 2a10 	vmov	r2, s6
 801babe:	9311      	str	r3, [sp, #68]	; 0x44
 801bac0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bac2:	fb92 f3f3 	sdiv	r3, r2, r3
 801bac6:	9312      	str	r3, [sp, #72]	; 0x48
 801bac8:	9b00      	ldr	r3, [sp, #0]
 801baca:	9a03      	ldr	r2, [sp, #12]
 801bacc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bad0:	3b01      	subs	r3, #1
 801bad2:	9300      	str	r3, [sp, #0]
 801bad4:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801bad8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bada:	eeb0 3a67 	vmov.f32	s6, s15
 801bade:	bf08      	it	eq
 801bae0:	4613      	moveq	r3, r2
 801bae2:	eef0 2a47 	vmov.f32	s5, s14
 801bae6:	e72f      	b.n	801b948 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801bae8:	140f      	asrs	r7, r1, #16
 801baea:	d451      	bmi.n	801bb90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801baec:	f8de 5008 	ldr.w	r5, [lr, #8]
 801baf0:	42bd      	cmp	r5, r7
 801baf2:	dd4d      	ble.n	801bb90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801baf4:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801baf8:	d44a      	bmi.n	801bb90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bafa:	f8de 000c 	ldr.w	r0, [lr, #12]
 801bafe:	4560      	cmp	r0, ip
 801bb00:	dd46      	ble.n	801bb90 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801bb02:	b22d      	sxth	r5, r5
 801bb04:	fb0c 7505 	mla	r5, ip, r5, r7
 801bb08:	9802      	ldr	r0, [sp, #8]
 801bb0a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801bb0e:	f06f 0501 	mvn.w	r5, #1
 801bb12:	fb05 fb08 	mul.w	fp, r5, r8
 801bb16:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801bb1a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801bb1e:	122f      	asrs	r7, r5, #8
 801bb20:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801bb24:	fb17 f706 	smulbb	r7, r7, r6
 801bb28:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801bb2c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bb30:	00ed      	lsls	r5, r5, #3
 801bb32:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801bb36:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801bb3a:	10c7      	asrs	r7, r0, #3
 801bb3c:	b2ed      	uxtb	r5, r5
 801bb3e:	00c0      	lsls	r0, r0, #3
 801bb40:	fb19 f906 	smulbb	r9, r9, r6
 801bb44:	fb15 f506 	smulbb	r5, r5, r6
 801bb48:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bb4c:	b2c0      	uxtb	r0, r0
 801bb4e:	fa1f fc8c 	uxth.w	ip, ip
 801bb52:	fb07 970a 	mla	r7, r7, sl, r9
 801bb56:	fb00 500a 	mla	r0, r0, sl, r5
 801bb5a:	b2bf      	uxth	r7, r7
 801bb5c:	b280      	uxth	r0, r0
 801bb5e:	f10c 0501 	add.w	r5, ip, #1
 801bb62:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801bb66:	f107 0901 	add.w	r9, r7, #1
 801bb6a:	1c45      	adds	r5, r0, #1
 801bb6c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bb70:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801bb74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bb78:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bb7c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bb80:	ea45 0c0c 	orr.w	ip, r5, ip
 801bb84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801bb88:	ea4c 0c09 	orr.w	ip, ip, r9
 801bb8c:	f824 c00b 	strh.w	ip, [r4, fp]
 801bb90:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bb92:	4401      	add	r1, r0
 801bb94:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bb96:	f108 38ff 	add.w	r8, r8, #4294967295
 801bb9a:	4402      	add	r2, r0
 801bb9c:	e75e      	b.n	801ba5c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801bb9e:	b005      	add	sp, #20
 801bba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bba4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bba4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bba8:	b085      	sub	sp, #20
 801bbaa:	4693      	mov	fp, r2
 801bbac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801bbae:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801bbb0:	6870      	ldr	r0, [r6, #4]
 801bbb2:	9101      	str	r1, [sp, #4]
 801bbb4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801bbb8:	fb00 2404 	mla	r4, r0, r4, r2
 801bbbc:	6832      	ldr	r2, [r6, #0]
 801bbbe:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801bbc2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801bbc6:	682a      	ldr	r2, [r5, #0]
 801bbc8:	9202      	str	r2, [sp, #8]
 801bbca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bbce:	9a01      	ldr	r2, [sp, #4]
 801bbd0:	2a00      	cmp	r2, #0
 801bbd2:	dc03      	bgt.n	801bbdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801bbd4:	f1bb 0f00 	cmp.w	fp, #0
 801bbd8:	f340 809a 	ble.w	801bd10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bbdc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bbde:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801bbe2:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801bbe6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bbea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801bbec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801bbf0:	2b00      	cmp	r3, #0
 801bbf2:	dd0c      	ble.n	801bc0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801bbf4:	1406      	asrs	r6, r0, #16
 801bbf6:	d405      	bmi.n	801bc04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bbf8:	454e      	cmp	r6, r9
 801bbfa:	da03      	bge.n	801bc04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bbfc:	1416      	asrs	r6, r2, #16
 801bbfe:	d401      	bmi.n	801bc04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801bc00:	4546      	cmp	r6, r8
 801bc02:	db05      	blt.n	801bc10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801bc04:	4470      	add	r0, lr
 801bc06:	4462      	add	r2, ip
 801bc08:	3b01      	subs	r3, #1
 801bc0a:	3402      	adds	r4, #2
 801bc0c:	e7f0      	b.n	801bbf0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bc0e:	d00f      	beq.n	801bc30 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bc10:	1e5e      	subs	r6, r3, #1
 801bc12:	fb0e 0706 	mla	r7, lr, r6, r0
 801bc16:	143f      	asrs	r7, r7, #16
 801bc18:	d541      	bpl.n	801bc9e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801bc1a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801bc1e:	4698      	mov	r8, r3
 801bc20:	9603      	str	r6, [sp, #12]
 801bc22:	f1b8 0f00 	cmp.w	r8, #0
 801bc26:	dc56      	bgt.n	801bcd6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801bc28:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bc2c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bc30:	9b01      	ldr	r3, [sp, #4]
 801bc32:	2b00      	cmp	r3, #0
 801bc34:	dd6c      	ble.n	801bd10 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801bc36:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bc3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bc3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bc42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc44:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bc48:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bc4c:	eeb0 6a62 	vmov.f32	s12, s5
 801bc50:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bc54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc58:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bc5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801bc60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bc64:	eeb0 6a43 	vmov.f32	s12, s6
 801bc68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bc6c:	ee12 2a90 	vmov	r2, s5
 801bc70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bc74:	fb92 fef3 	sdiv	lr, r2, r3
 801bc78:	ee13 2a10 	vmov	r2, s6
 801bc7c:	fb92 fcf3 	sdiv	ip, r2, r3
 801bc80:	9b01      	ldr	r3, [sp, #4]
 801bc82:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bc86:	3b01      	subs	r3, #1
 801bc88:	9301      	str	r3, [sp, #4]
 801bc8a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801bc8e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bc90:	eeb0 3a67 	vmov.f32	s6, s15
 801bc94:	bf08      	it	eq
 801bc96:	465b      	moveq	r3, fp
 801bc98:	eef0 2a47 	vmov.f32	s5, s14
 801bc9c:	e797      	b.n	801bbce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801bc9e:	454f      	cmp	r7, r9
 801bca0:	dabb      	bge.n	801bc1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bca2:	fb0c 2606 	mla	r6, ip, r6, r2
 801bca6:	1436      	asrs	r6, r6, #16
 801bca8:	d4b7      	bmi.n	801bc1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bcaa:	4546      	cmp	r6, r8
 801bcac:	dab5      	bge.n	801bc1a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bcae:	461e      	mov	r6, r3
 801bcb0:	46a0      	mov	r8, r4
 801bcb2:	2e00      	cmp	r6, #0
 801bcb4:	ddb8      	ble.n	801bc28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801bcb6:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801bcba:	9902      	ldr	r1, [sp, #8]
 801bcbc:	1417      	asrs	r7, r2, #16
 801bcbe:	ea4f 4920 	mov.w	r9, r0, asr #16
 801bcc2:	fb0a 9707 	mla	r7, sl, r7, r9
 801bcc6:	4470      	add	r0, lr
 801bcc8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801bccc:	f828 7b02 	strh.w	r7, [r8], #2
 801bcd0:	4462      	add	r2, ip
 801bcd2:	3e01      	subs	r6, #1
 801bcd4:	e7ed      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801bcd6:	ea5f 4920 	movs.w	r9, r0, asr #16
 801bcda:	d414      	bmi.n	801bd06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bcdc:	68ae      	ldr	r6, [r5, #8]
 801bcde:	454e      	cmp	r6, r9
 801bce0:	dd11      	ble.n	801bd06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bce2:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801bce6:	d40e      	bmi.n	801bd06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bce8:	68ef      	ldr	r7, [r5, #12]
 801bcea:	4557      	cmp	r7, sl
 801bcec:	dd0b      	ble.n	801bd06 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801bcee:	b236      	sxth	r6, r6
 801bcf0:	fb0a 9606 	mla	r6, sl, r6, r9
 801bcf4:	9f02      	ldr	r7, [sp, #8]
 801bcf6:	f06f 0101 	mvn.w	r1, #1
 801bcfa:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801bcfe:	fb01 f608 	mul.w	r6, r1, r8
 801bd02:	9903      	ldr	r1, [sp, #12]
 801bd04:	538f      	strh	r7, [r1, r6]
 801bd06:	4470      	add	r0, lr
 801bd08:	4462      	add	r2, ip
 801bd0a:	f108 38ff 	add.w	r8, r8, #4294967295
 801bd0e:	e788      	b.n	801bc22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801bd10:	b005      	add	sp, #20
 801bd12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bd16 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd16:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd1a:	b087      	sub	sp, #28
 801bd1c:	468b      	mov	fp, r1
 801bd1e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801bd20:	9203      	str	r2, [sp, #12]
 801bd22:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bd26:	9204      	str	r2, [sp, #16]
 801bd28:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801bd2c:	6841      	ldr	r1, [r0, #4]
 801bd2e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801bd32:	fb01 2505 	mla	r5, r1, r5, r2
 801bd36:	6802      	ldr	r2, [r0, #0]
 801bd38:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801bd3c:	f8d9 2000 	ldr.w	r2, [r9]
 801bd40:	9201      	str	r2, [sp, #4]
 801bd42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801bd46:	f1bb 0f00 	cmp.w	fp, #0
 801bd4a:	dc03      	bgt.n	801bd54 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bd4c:	9a03      	ldr	r2, [sp, #12]
 801bd4e:	2a00      	cmp	r2, #0
 801bd50:	f340 8159 	ble.w	801c006 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bd54:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bd56:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801bd5a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801bd5e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801bd62:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bd64:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801bd68:	2b00      	cmp	r3, #0
 801bd6a:	dd0e      	ble.n	801bd8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801bd6c:	1402      	asrs	r2, r0, #16
 801bd6e:	d405      	bmi.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd70:	42ba      	cmp	r2, r7
 801bd72:	da03      	bge.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd74:	140a      	asrs	r2, r1, #16
 801bd76:	d401      	bmi.n	801bd7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801bd78:	42b2      	cmp	r2, r6
 801bd7a:	db07      	blt.n	801bd8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801bd7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bd7e:	4410      	add	r0, r2
 801bd80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bd82:	3b01      	subs	r3, #1
 801bd84:	4411      	add	r1, r2
 801bd86:	3502      	adds	r5, #2
 801bd88:	e7ee      	b.n	801bd68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801bd8a:	d017      	beq.n	801bdbc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801bd8c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd8e:	1e5a      	subs	r2, r3, #1
 801bd90:	fb04 0402 	mla	r4, r4, r2, r0
 801bd94:	1424      	asrs	r4, r4, #16
 801bd96:	d409      	bmi.n	801bdac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bd98:	42bc      	cmp	r4, r7
 801bd9a:	da07      	bge.n	801bdac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bd9c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bd9e:	fb04 1202 	mla	r2, r4, r2, r1
 801bda2:	1412      	asrs	r2, r2, #16
 801bda4:	d402      	bmi.n	801bdac <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801bda6:	42b2      	cmp	r2, r6
 801bda8:	f2c0 80bf 	blt.w	801bf2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801bdac:	2700      	movs	r7, #0
 801bdae:	19da      	adds	r2, r3, r7
 801bdb0:	2a00      	cmp	r2, #0
 801bdb2:	dc3e      	bgt.n	801be32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801bdb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bdb8:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801bdbc:	f1bb 0f00 	cmp.w	fp, #0
 801bdc0:	f340 8121 	ble.w	801c006 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801bdc4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bdc8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bdcc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801bdd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801bdd2:	f1bb 0b01 	subs.w	fp, fp, #1
 801bdd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bdda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bdde:	eeb0 6a62 	vmov.f32	s12, s5
 801bde2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bde6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801bdea:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bdee:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801bdf2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bdf6:	eeb0 6a43 	vmov.f32	s12, s6
 801bdfa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdfe:	ee12 2a90 	vmov	r2, s5
 801be02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801be06:	fb92 f3f3 	sdiv	r3, r2, r3
 801be0a:	ee13 2a10 	vmov	r2, s6
 801be0e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801be12:	9313      	str	r3, [sp, #76]	; 0x4c
 801be14:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be16:	fb92 f3f3 	sdiv	r3, r2, r3
 801be1a:	9a03      	ldr	r2, [sp, #12]
 801be1c:	9314      	str	r3, [sp, #80]	; 0x50
 801be1e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801be22:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801be24:	eeb0 3a67 	vmov.f32	s6, s15
 801be28:	bf08      	it	eq
 801be2a:	4613      	moveq	r3, r2
 801be2c:	eef0 2a47 	vmov.f32	s5, s14
 801be30:	e789      	b.n	801bd46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801be32:	1406      	asrs	r6, r0, #16
 801be34:	d42d      	bmi.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be36:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801be3a:	42b4      	cmp	r4, r6
 801be3c:	dd29      	ble.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be3e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801be42:	d426      	bmi.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be44:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801be48:	4562      	cmp	r2, ip
 801be4a:	dd22      	ble.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be4c:	b224      	sxth	r4, r4
 801be4e:	9a01      	ldr	r2, [sp, #4]
 801be50:	fb0c 6404 	mla	r4, ip, r4, r6
 801be54:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801be58:	0e22      	lsrs	r2, r4, #24
 801be5a:	d01a      	beq.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801be5c:	9e04      	ldr	r6, [sp, #16]
 801be5e:	4372      	muls	r2, r6
 801be60:	1c56      	adds	r6, r2, #1
 801be62:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801be66:	1212      	asrs	r2, r2, #8
 801be68:	0a26      	lsrs	r6, r4, #8
 801be6a:	2aff      	cmp	r2, #255	; 0xff
 801be6c:	9605      	str	r6, [sp, #20]
 801be6e:	d116      	bne.n	801be9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801be70:	f06f 0201 	mvn.w	r2, #1
 801be74:	fb02 fc07 	mul.w	ip, r2, r7
 801be78:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801be7c:	0962      	lsrs	r2, r4, #5
 801be7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801be82:	f026 0607 	bic.w	r6, r6, #7
 801be86:	4316      	orrs	r6, r2
 801be88:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801be8c:	4326      	orrs	r6, r4
 801be8e:	f825 600c 	strh.w	r6, [r5, ip]
 801be92:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801be94:	4410      	add	r0, r2
 801be96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801be98:	3f01      	subs	r7, #1
 801be9a:	4411      	add	r1, r2
 801be9c:	e787      	b.n	801bdae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801be9e:	f06f 0601 	mvn.w	r6, #1
 801bea2:	437e      	muls	r6, r7
 801bea4:	fa1f fa82 	uxth.w	sl, r2
 801bea8:	f835 8006 	ldrh.w	r8, [r5, r6]
 801beac:	9602      	str	r6, [sp, #8]
 801beae:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801beb2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801beb6:	43d2      	mvns	r2, r2
 801beb8:	b2d2      	uxtb	r2, r2
 801beba:	fb1c fc0a 	smulbb	ip, ip, sl
 801bebe:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801bec2:	fb0e ce02 	mla	lr, lr, r2, ip
 801bec6:	b2e4      	uxtb	r4, r4
 801bec8:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801becc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801bed0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801bed4:	fa5f f888 	uxtb.w	r8, r8
 801bed8:	fb14 f40a 	smulbb	r4, r4, sl
 801bedc:	fb08 4402 	mla	r4, r8, r2, r4
 801bee0:	fa1f fe8e 	uxth.w	lr, lr
 801bee4:	fb16 f60a 	smulbb	r6, r6, sl
 801bee8:	b2a4      	uxth	r4, r4
 801beea:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801beee:	fb0c 6c02 	mla	ip, ip, r2, r6
 801bef2:	f10e 0201 	add.w	r2, lr, #1
 801bef6:	1c66      	adds	r6, r4, #1
 801bef8:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801befc:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bf00:	fa1f fc8c 	uxth.w	ip, ip
 801bf04:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bf08:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801bf0c:	ea46 0e0e 	orr.w	lr, r6, lr
 801bf10:	f10c 0601 	add.w	r6, ip, #1
 801bf14:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801bf18:	0976      	lsrs	r6, r6, #5
 801bf1a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bf1e:	9a02      	ldr	r2, [sp, #8]
 801bf20:	ea4e 0e06 	orr.w	lr, lr, r6
 801bf24:	f825 e002 	strh.w	lr, [r5, r2]
 801bf28:	e7b3      	b.n	801be92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801bf2a:	f04f 0800 	mov.w	r8, #0
 801bf2e:	eba3 0208 	sub.w	r2, r3, r8
 801bf32:	2a00      	cmp	r2, #0
 801bf34:	f77f af3e 	ble.w	801bdb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801bf38:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801bf3c:	1404      	asrs	r4, r0, #16
 801bf3e:	140a      	asrs	r2, r1, #16
 801bf40:	fb06 4202 	mla	r2, r6, r2, r4
 801bf44:	9c01      	ldr	r4, [sp, #4]
 801bf46:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801bf4a:	0e22      	lsrs	r2, r4, #24
 801bf4c:	d016      	beq.n	801bf7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801bf4e:	9e04      	ldr	r6, [sp, #16]
 801bf50:	4372      	muls	r2, r6
 801bf52:	1c56      	adds	r6, r2, #1
 801bf54:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801bf58:	1212      	asrs	r2, r2, #8
 801bf5a:	2aff      	cmp	r2, #255	; 0xff
 801bf5c:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801bf60:	d113      	bne.n	801bf8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801bf62:	0962      	lsrs	r2, r4, #5
 801bf64:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bf68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf6c:	f026 0607 	bic.w	r6, r6, #7
 801bf70:	4316      	orrs	r6, r2
 801bf72:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801bf76:	4326      	orrs	r6, r4
 801bf78:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801bf7c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801bf7e:	4410      	add	r0, r2
 801bf80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bf82:	f108 0801 	add.w	r8, r8, #1
 801bf86:	4411      	add	r1, r2
 801bf88:	e7d1      	b.n	801bf2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801bf8a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801bf8e:	fa1f fa82 	uxth.w	sl, r2
 801bf92:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801bf96:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801bf9a:	43d2      	mvns	r2, r2
 801bf9c:	b2d2      	uxtb	r2, r2
 801bf9e:	fb17 f70a 	smulbb	r7, r7, sl
 801bfa2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bfa6:	fb0c 7c02 	mla	ip, ip, r2, r7
 801bfaa:	b2e4      	uxtb	r4, r4
 801bfac:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801bfb0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801bfb4:	fa5f fe8e 	uxtb.w	lr, lr
 801bfb8:	fb14 f40a 	smulbb	r4, r4, sl
 801bfbc:	fb0e 4402 	mla	r4, lr, r2, r4
 801bfc0:	b2f6      	uxtb	r6, r6
 801bfc2:	fa1f fc8c 	uxth.w	ip, ip
 801bfc6:	fb16 f60a 	smulbb	r6, r6, sl
 801bfca:	b2a4      	uxth	r4, r4
 801bfcc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801bfd0:	fb07 6702 	mla	r7, r7, r2, r6
 801bfd4:	f10c 0201 	add.w	r2, ip, #1
 801bfd8:	1c66      	adds	r6, r4, #1
 801bfda:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801bfde:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801bfe2:	b2bf      	uxth	r7, r7
 801bfe4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801bfe8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801bfec:	ea46 0c0c 	orr.w	ip, r6, ip
 801bff0:	1c7e      	adds	r6, r7, #1
 801bff2:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801bff6:	0976      	lsrs	r6, r6, #5
 801bff8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801bffc:	ea4c 0c06 	orr.w	ip, ip, r6
 801c000:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801c004:	e7ba      	b.n	801bf7c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801c006:	b007      	add	sp, #28
 801c008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c00c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c00c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c010:	b085      	sub	sp, #20
 801c012:	468b      	mov	fp, r1
 801c014:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c016:	9203      	str	r2, [sp, #12]
 801c018:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801c01c:	6841      	ldr	r1, [r0, #4]
 801c01e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801c022:	fb01 2404 	mla	r4, r1, r4, r2
 801c026:	6802      	ldr	r2, [r0, #0]
 801c028:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c02c:	f8d8 2000 	ldr.w	r2, [r8]
 801c030:	9201      	str	r2, [sp, #4]
 801c032:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c036:	f1bb 0f00 	cmp.w	fp, #0
 801c03a:	dc03      	bgt.n	801c044 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801c03c:	9a03      	ldr	r2, [sp, #12]
 801c03e:	2a00      	cmp	r2, #0
 801c040:	f340 814f 	ble.w	801c2e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c046:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801c04a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801c04e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c052:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c054:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801c058:	2b00      	cmp	r3, #0
 801c05a:	dd0e      	ble.n	801c07a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c05c:	1408      	asrs	r0, r1, #16
 801c05e:	d405      	bmi.n	801c06c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c060:	42b8      	cmp	r0, r7
 801c062:	da03      	bge.n	801c06c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c064:	1410      	asrs	r0, r2, #16
 801c066:	d401      	bmi.n	801c06c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801c068:	42b0      	cmp	r0, r6
 801c06a:	db07      	blt.n	801c07c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c06c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c06e:	4401      	add	r1, r0
 801c070:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c072:	3b01      	subs	r3, #1
 801c074:	4402      	add	r2, r0
 801c076:	3402      	adds	r4, #2
 801c078:	e7ee      	b.n	801c058 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c07a:	d017      	beq.n	801c0ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c07c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801c07e:	1e58      	subs	r0, r3, #1
 801c080:	fb05 1500 	mla	r5, r5, r0, r1
 801c084:	142d      	asrs	r5, r5, #16
 801c086:	d409      	bmi.n	801c09c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c088:	42bd      	cmp	r5, r7
 801c08a:	da07      	bge.n	801c09c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c08c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c08e:	fb05 2000 	mla	r0, r5, r0, r2
 801c092:	1400      	asrs	r0, r0, #16
 801c094:	d402      	bmi.n	801c09c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c096:	42b0      	cmp	r0, r6
 801c098:	f2c0 80ba 	blt.w	801c210 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c09c:	2600      	movs	r6, #0
 801c09e:	1998      	adds	r0, r3, r6
 801c0a0:	2800      	cmp	r0, #0
 801c0a2:	dc3e      	bgt.n	801c122 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c0a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c0a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c0ac:	f1bb 0f00 	cmp.w	fp, #0
 801c0b0:	f340 8117 	ble.w	801c2e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801c0b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c0b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c0bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c0c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c0c2:	f1bb 0b01 	subs.w	fp, fp, #1
 801c0c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c0ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c0ce:	eeb0 6a62 	vmov.f32	s12, s5
 801c0d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c0d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c0da:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c0de:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801c0e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c0e6:	eeb0 6a43 	vmov.f32	s12, s6
 801c0ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c0ee:	ee12 2a90 	vmov	r2, s5
 801c0f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c0f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c0fa:	ee13 2a10 	vmov	r2, s6
 801c0fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c102:	9311      	str	r3, [sp, #68]	; 0x44
 801c104:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c106:	fb92 f3f3 	sdiv	r3, r2, r3
 801c10a:	9a03      	ldr	r2, [sp, #12]
 801c10c:	9312      	str	r3, [sp, #72]	; 0x48
 801c10e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801c112:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c114:	eeb0 3a67 	vmov.f32	s6, s15
 801c118:	bf08      	it	eq
 801c11a:	4613      	moveq	r3, r2
 801c11c:	eef0 2a47 	vmov.f32	s5, s14
 801c120:	e789      	b.n	801c036 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801c122:	140f      	asrs	r7, r1, #16
 801c124:	d424      	bmi.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c126:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801c12a:	42bd      	cmp	r5, r7
 801c12c:	dd20      	ble.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c12e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801c132:	d41d      	bmi.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c134:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801c138:	4560      	cmp	r0, ip
 801c13a:	dd19      	ble.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c13c:	b22d      	sxth	r5, r5
 801c13e:	fb0c 7505 	mla	r5, ip, r5, r7
 801c142:	9801      	ldr	r0, [sp, #4]
 801c144:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801c148:	0e07      	lsrs	r7, r0, #24
 801c14a:	2fff      	cmp	r7, #255	; 0xff
 801c14c:	d116      	bne.n	801c17c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801c14e:	f06f 0501 	mvn.w	r5, #1
 801c152:	fb05 f706 	mul.w	r7, r5, r6
 801c156:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801c15a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801c15e:	0945      	lsrs	r5, r0, #5
 801c160:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c164:	ea4c 0505 	orr.w	r5, ip, r5
 801c168:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c16c:	4305      	orrs	r5, r0
 801c16e:	53e5      	strh	r5, [r4, r7]
 801c170:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c172:	4401      	add	r1, r0
 801c174:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c176:	3e01      	subs	r6, #1
 801c178:	4402      	add	r2, r0
 801c17a:	e790      	b.n	801c09e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c17c:	b2fd      	uxtb	r5, r7
 801c17e:	2f00      	cmp	r7, #0
 801c180:	d0f6      	beq.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c182:	f06f 0701 	mvn.w	r7, #1
 801c186:	4377      	muls	r7, r6
 801c188:	fa1f f985 	uxth.w	r9, r5
 801c18c:	f834 e007 	ldrh.w	lr, [r4, r7]
 801c190:	9702      	str	r7, [sp, #8]
 801c192:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c196:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801c19a:	43ed      	mvns	r5, r5
 801c19c:	b2ed      	uxtb	r5, r5
 801c19e:	fb17 f709 	smulbb	r7, r7, r9
 801c1a2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c1a6:	fb0c 7c05 	mla	ip, ip, r5, r7
 801c1aa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801c1ae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c1b2:	b2c0      	uxtb	r0, r0
 801c1b4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c1b8:	fa5f fe8e 	uxtb.w	lr, lr
 801c1bc:	fb10 f009 	smulbb	r0, r0, r9
 801c1c0:	fb0e 0005 	mla	r0, lr, r5, r0
 801c1c4:	b280      	uxth	r0, r0
 801c1c6:	fa1f fc8c 	uxth.w	ip, ip
 801c1ca:	fb1a fa09 	smulbb	sl, sl, r9
 801c1ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c1d2:	fb07 a705 	mla	r7, r7, r5, sl
 801c1d6:	f100 0a01 	add.w	sl, r0, #1
 801c1da:	f10c 0501 	add.w	r5, ip, #1
 801c1de:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801c1e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801c1e6:	b2bf      	uxth	r7, r7
 801c1e8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c1ec:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c1f0:	ea4a 0c0c 	orr.w	ip, sl, ip
 801c1f4:	f107 0a01 	add.w	sl, r7, #1
 801c1f8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c1fc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c200:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c204:	9802      	ldr	r0, [sp, #8]
 801c206:	ea4c 0c0a 	orr.w	ip, ip, sl
 801c20a:	f824 c000 	strh.w	ip, [r4, r0]
 801c20e:	e7af      	b.n	801c170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801c210:	f04f 0e00 	mov.w	lr, #0
 801c214:	eba3 000e 	sub.w	r0, r3, lr
 801c218:	2800      	cmp	r0, #0
 801c21a:	f77f af43 	ble.w	801c0a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801c21e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801c222:	140d      	asrs	r5, r1, #16
 801c224:	1410      	asrs	r0, r2, #16
 801c226:	fb06 5000 	mla	r0, r6, r0, r5
 801c22a:	9d01      	ldr	r5, [sp, #4]
 801c22c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801c230:	0e2e      	lsrs	r6, r5, #24
 801c232:	2eff      	cmp	r6, #255	; 0xff
 801c234:	d112      	bne.n	801c25c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801c236:	482c      	ldr	r0, [pc, #176]	; (801c2e8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801c238:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801c23c:	0968      	lsrs	r0, r5, #5
 801c23e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c242:	4330      	orrs	r0, r6
 801c244:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c248:	4328      	orrs	r0, r5
 801c24a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801c24e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c250:	4401      	add	r1, r0
 801c252:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c254:	f10e 0e01 	add.w	lr, lr, #1
 801c258:	4402      	add	r2, r0
 801c25a:	e7db      	b.n	801c214 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801c25c:	b2f0      	uxtb	r0, r6
 801c25e:	2e00      	cmp	r6, #0
 801c260:	d0f5      	beq.n	801c24e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c262:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c266:	fa1f f980 	uxth.w	r9, r0
 801c26a:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c26e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801c272:	43c0      	mvns	r0, r0
 801c274:	b2c0      	uxtb	r0, r0
 801c276:	fb16 f609 	smulbb	r6, r6, r9
 801c27a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c27e:	fb07 6700 	mla	r7, r7, r0, r6
 801c282:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801c286:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c28a:	b2ed      	uxtb	r5, r5
 801c28c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c290:	fa5f fc8c 	uxtb.w	ip, ip
 801c294:	fb15 f509 	smulbb	r5, r5, r9
 801c298:	fb0c 5500 	mla	r5, ip, r0, r5
 801c29c:	b2bf      	uxth	r7, r7
 801c29e:	fb1a fa09 	smulbb	sl, sl, r9
 801c2a2:	b2ad      	uxth	r5, r5
 801c2a4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c2a8:	fb06 a600 	mla	r6, r6, r0, sl
 801c2ac:	1c78      	adds	r0, r7, #1
 801c2ae:	f105 0a01 	add.w	sl, r5, #1
 801c2b2:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801c2b6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c2ba:	b2b6      	uxth	r6, r6
 801c2bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c2c0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c2c4:	ea4a 0707 	orr.w	r7, sl, r7
 801c2c8:	f106 0a01 	add.w	sl, r6, #1
 801c2cc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c2d0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c2d4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c2d8:	ea47 070a 	orr.w	r7, r7, sl
 801c2dc:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801c2e0:	e7b5      	b.n	801c24e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c2e2:	b005      	add	sp, #20
 801c2e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2e8:	fffff800 	.word	0xfffff800

0801c2ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c2ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2f0:	b087      	sub	sp, #28
 801c2f2:	468b      	mov	fp, r1
 801c2f4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c2f6:	9203      	str	r2, [sp, #12]
 801c2f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801c2fc:	9204      	str	r2, [sp, #16]
 801c2fe:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c302:	6841      	ldr	r1, [r0, #4]
 801c304:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801c308:	fb01 2404 	mla	r4, r1, r4, r2
 801c30c:	6802      	ldr	r2, [r0, #0]
 801c30e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c312:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c316:	3201      	adds	r2, #1
 801c318:	f022 0201 	bic.w	r2, r2, #1
 801c31c:	9200      	str	r2, [sp, #0]
 801c31e:	f8d9 2000 	ldr.w	r2, [r9]
 801c322:	9201      	str	r2, [sp, #4]
 801c324:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c328:	f1bb 0f00 	cmp.w	fp, #0
 801c32c:	dc03      	bgt.n	801c336 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c32e:	9a03      	ldr	r2, [sp, #12]
 801c330:	2a00      	cmp	r2, #0
 801c332:	f340 8169 	ble.w	801c608 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c336:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c338:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801c33c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801c340:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c344:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c346:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c34a:	2b00      	cmp	r3, #0
 801c34c:	dd0e      	ble.n	801c36c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c34e:	1402      	asrs	r2, r0, #16
 801c350:	d405      	bmi.n	801c35e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c352:	42ba      	cmp	r2, r7
 801c354:	da03      	bge.n	801c35e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c356:	140a      	asrs	r2, r1, #16
 801c358:	d401      	bmi.n	801c35e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801c35a:	42b2      	cmp	r2, r6
 801c35c:	db07      	blt.n	801c36e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801c35e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c360:	4410      	add	r0, r2
 801c362:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c364:	3b01      	subs	r3, #1
 801c366:	4411      	add	r1, r2
 801c368:	3402      	adds	r4, #2
 801c36a:	e7ee      	b.n	801c34a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801c36c:	d017      	beq.n	801c39e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801c36e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c370:	1e5a      	subs	r2, r3, #1
 801c372:	fb05 0502 	mla	r5, r5, r2, r0
 801c376:	142d      	asrs	r5, r5, #16
 801c378:	d409      	bmi.n	801c38e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c37a:	42bd      	cmp	r5, r7
 801c37c:	da07      	bge.n	801c38e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c37e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c380:	fb05 1202 	mla	r2, r5, r2, r1
 801c384:	1412      	asrs	r2, r2, #16
 801c386:	d402      	bmi.n	801c38e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c388:	42b2      	cmp	r2, r6
 801c38a:	f2c0 80c7 	blt.w	801c51c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801c38e:	2700      	movs	r7, #0
 801c390:	19da      	adds	r2, r3, r7
 801c392:	2a00      	cmp	r2, #0
 801c394:	dc3e      	bgt.n	801c414 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c396:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c39a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c39e:	f1bb 0f00 	cmp.w	fp, #0
 801c3a2:	f340 8131 	ble.w	801c608 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801c3a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c3aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c3ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c3b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3b4:	f1bb 0b01 	subs.w	fp, fp, #1
 801c3b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c3bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c3c0:	eeb0 6a62 	vmov.f32	s12, s5
 801c3c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c3c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c3d0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c3d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c3d8:	eeb0 6a43 	vmov.f32	s12, s6
 801c3dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c3e0:	ee12 2a90 	vmov	r2, s5
 801c3e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c3e8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3ec:	ee13 2a10 	vmov	r2, s6
 801c3f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c3f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c3f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801c3fc:	9a03      	ldr	r2, [sp, #12]
 801c3fe:	9314      	str	r3, [sp, #80]	; 0x50
 801c400:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c404:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c406:	eeb0 3a67 	vmov.f32	s6, s15
 801c40a:	bf08      	it	eq
 801c40c:	4613      	moveq	r3, r2
 801c40e:	eef0 2a47 	vmov.f32	s5, s14
 801c412:	e789      	b.n	801c328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c414:	1405      	asrs	r5, r0, #16
 801c416:	d435      	bmi.n	801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c418:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801c41c:	42aa      	cmp	r2, r5
 801c41e:	dd31      	ble.n	801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c420:	140e      	asrs	r6, r1, #16
 801c422:	d42f      	bmi.n	801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c424:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801c428:	42b2      	cmp	r2, r6
 801c42a:	dd2b      	ble.n	801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c42c:	9a00      	ldr	r2, [sp, #0]
 801c42e:	fb06 5502 	mla	r5, r6, r2, r5
 801c432:	086a      	lsrs	r2, r5, #1
 801c434:	9e01      	ldr	r6, [sp, #4]
 801c436:	5cb2      	ldrb	r2, [r6, r2]
 801c438:	07ee      	lsls	r6, r5, #31
 801c43a:	bf54      	ite	pl
 801c43c:	f002 020f 	andpl.w	r2, r2, #15
 801c440:	1112      	asrmi	r2, r2, #4
 801c442:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c446:	b2d2      	uxtb	r2, r2
 801c448:	b1e2      	cbz	r2, 801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c44a:	9d04      	ldr	r5, [sp, #16]
 801c44c:	436a      	muls	r2, r5
 801c44e:	1c55      	adds	r5, r2, #1
 801c450:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c454:	4d6e      	ldr	r5, [pc, #440]	; (801c610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c456:	682d      	ldr	r5, [r5, #0]
 801c458:	1212      	asrs	r2, r2, #8
 801c45a:	0a2e      	lsrs	r6, r5, #8
 801c45c:	2aff      	cmp	r2, #255	; 0xff
 801c45e:	9605      	str	r6, [sp, #20]
 801c460:	d116      	bne.n	801c490 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c462:	f06f 0201 	mvn.w	r2, #1
 801c466:	fb02 fc07 	mul.w	ip, r2, r7
 801c46a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801c46e:	096a      	lsrs	r2, r5, #5
 801c470:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c474:	f026 0607 	bic.w	r6, r6, #7
 801c478:	4316      	orrs	r6, r2
 801c47a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c47e:	432e      	orrs	r6, r5
 801c480:	f824 600c 	strh.w	r6, [r4, ip]
 801c484:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c486:	4410      	add	r0, r2
 801c488:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c48a:	3f01      	subs	r7, #1
 801c48c:	4411      	add	r1, r2
 801c48e:	e77f      	b.n	801c390 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801c490:	f06f 0601 	mvn.w	r6, #1
 801c494:	437e      	muls	r6, r7
 801c496:	fa1f fa82 	uxth.w	sl, r2
 801c49a:	f834 8006 	ldrh.w	r8, [r4, r6]
 801c49e:	9602      	str	r6, [sp, #8]
 801c4a0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801c4a4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801c4a8:	43d2      	mvns	r2, r2
 801c4aa:	b2d2      	uxtb	r2, r2
 801c4ac:	fb1c fc0a 	smulbb	ip, ip, sl
 801c4b0:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801c4b4:	fb0e ce02 	mla	lr, lr, r2, ip
 801c4b8:	b2ed      	uxtb	r5, r5
 801c4ba:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801c4be:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801c4c2:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801c4c6:	fa5f f888 	uxtb.w	r8, r8
 801c4ca:	fb15 f50a 	smulbb	r5, r5, sl
 801c4ce:	fb08 5502 	mla	r5, r8, r2, r5
 801c4d2:	fa1f fe8e 	uxth.w	lr, lr
 801c4d6:	fb16 f60a 	smulbb	r6, r6, sl
 801c4da:	b2ad      	uxth	r5, r5
 801c4dc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801c4e0:	fb0c 6c02 	mla	ip, ip, r2, r6
 801c4e4:	f10e 0201 	add.w	r2, lr, #1
 801c4e8:	1c6e      	adds	r6, r5, #1
 801c4ea:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801c4ee:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801c4f2:	fa1f fc8c 	uxth.w	ip, ip
 801c4f6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c4fa:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801c4fe:	ea46 0e0e 	orr.w	lr, r6, lr
 801c502:	f10c 0601 	add.w	r6, ip, #1
 801c506:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801c50a:	0976      	lsrs	r6, r6, #5
 801c50c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c510:	9a02      	ldr	r2, [sp, #8]
 801c512:	ea4e 0e06 	orr.w	lr, lr, r6
 801c516:	f824 e002 	strh.w	lr, [r4, r2]
 801c51a:	e7b3      	b.n	801c484 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c51c:	f04f 0800 	mov.w	r8, #0
 801c520:	eba3 0208 	sub.w	r2, r3, r8
 801c524:	2a00      	cmp	r2, #0
 801c526:	f77f af36 	ble.w	801c396 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801c52a:	9e00      	ldr	r6, [sp, #0]
 801c52c:	1402      	asrs	r2, r0, #16
 801c52e:	140d      	asrs	r5, r1, #16
 801c530:	fb06 2505 	mla	r5, r6, r5, r2
 801c534:	086a      	lsrs	r2, r5, #1
 801c536:	9e01      	ldr	r6, [sp, #4]
 801c538:	5cb2      	ldrb	r2, [r6, r2]
 801c53a:	07ed      	lsls	r5, r5, #31
 801c53c:	bf54      	ite	pl
 801c53e:	f002 020f 	andpl.w	r2, r2, #15
 801c542:	1112      	asrmi	r2, r2, #4
 801c544:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c548:	b2d2      	uxtb	r2, r2
 801c54a:	b1c2      	cbz	r2, 801c57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c54c:	9d04      	ldr	r5, [sp, #16]
 801c54e:	436a      	muls	r2, r5
 801c550:	1c55      	adds	r5, r2, #1
 801c552:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801c556:	4d2e      	ldr	r5, [pc, #184]	; (801c610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801c558:	1212      	asrs	r2, r2, #8
 801c55a:	682e      	ldr	r6, [r5, #0]
 801c55c:	2aff      	cmp	r2, #255	; 0xff
 801c55e:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801c562:	d113      	bne.n	801c58c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801c564:	0972      	lsrs	r2, r6, #5
 801c566:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c56a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c56e:	f025 0507 	bic.w	r5, r5, #7
 801c572:	4315      	orrs	r5, r2
 801c574:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c578:	4335      	orrs	r5, r6
 801c57a:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801c57e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c580:	4410      	add	r0, r2
 801c582:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c584:	f108 0801 	add.w	r8, r8, #1
 801c588:	4411      	add	r1, r2
 801c58a:	e7c9      	b.n	801c520 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801c58c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801c590:	fa1f fa82 	uxth.w	sl, r2
 801c594:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801c598:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801c59c:	43d2      	mvns	r2, r2
 801c59e:	b2d2      	uxtb	r2, r2
 801c5a0:	fb17 f70a 	smulbb	r7, r7, sl
 801c5a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801c5a8:	fb0c 7c02 	mla	ip, ip, r2, r7
 801c5ac:	b2f6      	uxtb	r6, r6
 801c5ae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801c5b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c5b6:	fa5f fe8e 	uxtb.w	lr, lr
 801c5ba:	fb16 f60a 	smulbb	r6, r6, sl
 801c5be:	fb0e 6602 	mla	r6, lr, r2, r6
 801c5c2:	b2ed      	uxtb	r5, r5
 801c5c4:	fa1f fc8c 	uxth.w	ip, ip
 801c5c8:	fb15 f50a 	smulbb	r5, r5, sl
 801c5cc:	b2b6      	uxth	r6, r6
 801c5ce:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c5d2:	fb07 5702 	mla	r7, r7, r2, r5
 801c5d6:	f10c 0201 	add.w	r2, ip, #1
 801c5da:	1c75      	adds	r5, r6, #1
 801c5dc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801c5e0:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c5e4:	b2bf      	uxth	r7, r7
 801c5e6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c5ea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801c5ee:	ea45 0c0c 	orr.w	ip, r5, ip
 801c5f2:	1c7d      	adds	r5, r7, #1
 801c5f4:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801c5f8:	096d      	lsrs	r5, r5, #5
 801c5fa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c5fe:	ea4c 0c05 	orr.w	ip, ip, r5
 801c602:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801c606:	e7ba      	b.n	801c57e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801c608:	b007      	add	sp, #28
 801c60a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c60e:	bf00      	nop
 801c610:	200137fc 	.word	0x200137fc

0801c614 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c618:	b087      	sub	sp, #28
 801c61a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801c928 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801c61e:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c620:	9205      	str	r2, [sp, #20]
 801c622:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801c626:	9101      	str	r1, [sp, #4]
 801c628:	6841      	ldr	r1, [r0, #4]
 801c62a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801c62e:	fb01 2404 	mla	r4, r1, r4, r2
 801c632:	6802      	ldr	r2, [r0, #0]
 801c634:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801c638:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c63c:	3201      	adds	r2, #1
 801c63e:	f022 0201 	bic.w	r2, r2, #1
 801c642:	9202      	str	r2, [sp, #8]
 801c644:	f8db 2000 	ldr.w	r2, [fp]
 801c648:	9203      	str	r2, [sp, #12]
 801c64a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801c64e:	9a01      	ldr	r2, [sp, #4]
 801c650:	2a00      	cmp	r2, #0
 801c652:	dc03      	bgt.n	801c65c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c654:	9a05      	ldr	r2, [sp, #20]
 801c656:	2a00      	cmp	r2, #0
 801c658:	f340 8162 	ble.w	801c920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c65c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c65e:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801c662:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801c666:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801c66a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c66c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801c670:	2b00      	cmp	r3, #0
 801c672:	dd0e      	ble.n	801c692 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801c674:	1402      	asrs	r2, r0, #16
 801c676:	d405      	bmi.n	801c684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c678:	42ba      	cmp	r2, r7
 801c67a:	da03      	bge.n	801c684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c67c:	140a      	asrs	r2, r1, #16
 801c67e:	d401      	bmi.n	801c684 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c680:	42b2      	cmp	r2, r6
 801c682:	db07      	blt.n	801c694 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801c684:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c686:	4410      	add	r0, r2
 801c688:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c68a:	3b01      	subs	r3, #1
 801c68c:	4411      	add	r1, r2
 801c68e:	3402      	adds	r4, #2
 801c690:	e7ee      	b.n	801c670 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801c692:	d017      	beq.n	801c6c4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801c694:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801c696:	1e5a      	subs	r2, r3, #1
 801c698:	fb05 0502 	mla	r5, r5, r2, r0
 801c69c:	142d      	asrs	r5, r5, #16
 801c69e:	d409      	bmi.n	801c6b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c6a0:	42bd      	cmp	r5, r7
 801c6a2:	da07      	bge.n	801c6b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c6a4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801c6a6:	fb05 1202 	mla	r2, r5, r2, r1
 801c6aa:	1412      	asrs	r2, r2, #16
 801c6ac:	d402      	bmi.n	801c6b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801c6ae:	42b2      	cmp	r2, r6
 801c6b0:	f2c0 80c3 	blt.w	801c83a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801c6b4:	2500      	movs	r5, #0
 801c6b6:	195a      	adds	r2, r3, r5
 801c6b8:	2a00      	cmp	r2, #0
 801c6ba:	dc3f      	bgt.n	801c73c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801c6bc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c6c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801c6c4:	9b01      	ldr	r3, [sp, #4]
 801c6c6:	2b00      	cmp	r3, #0
 801c6c8:	f340 812a 	ble.w	801c920 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801c6cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c6d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c6d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801c6d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c6da:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c6de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c6e2:	eeb0 6a62 	vmov.f32	s12, s5
 801c6e6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c6ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c6ee:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c6f2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801c6f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c6fa:	eeb0 6a43 	vmov.f32	s12, s6
 801c6fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c702:	ee12 2a90 	vmov	r2, s5
 801c706:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c70a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c70e:	ee13 2a10 	vmov	r2, s6
 801c712:	9313      	str	r3, [sp, #76]	; 0x4c
 801c714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c716:	fb92 f3f3 	sdiv	r3, r2, r3
 801c71a:	9314      	str	r3, [sp, #80]	; 0x50
 801c71c:	9b01      	ldr	r3, [sp, #4]
 801c71e:	9a05      	ldr	r2, [sp, #20]
 801c720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801c724:	3b01      	subs	r3, #1
 801c726:	9301      	str	r3, [sp, #4]
 801c728:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801c72c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c72e:	eeb0 3a67 	vmov.f32	s6, s15
 801c732:	bf08      	it	eq
 801c734:	4613      	moveq	r3, r2
 801c736:	eef0 2a47 	vmov.f32	s5, s14
 801c73a:	e788      	b.n	801c64e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c73c:	1406      	asrs	r6, r0, #16
 801c73e:	d42c      	bmi.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c740:	f8db 2008 	ldr.w	r2, [fp, #8]
 801c744:	42b2      	cmp	r2, r6
 801c746:	dd28      	ble.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c748:	140f      	asrs	r7, r1, #16
 801c74a:	d426      	bmi.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c74c:	f8db 200c 	ldr.w	r2, [fp, #12]
 801c750:	42ba      	cmp	r2, r7
 801c752:	dd22      	ble.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c754:	9a02      	ldr	r2, [sp, #8]
 801c756:	fb07 6602 	mla	r6, r7, r2, r6
 801c75a:	0872      	lsrs	r2, r6, #1
 801c75c:	9f03      	ldr	r7, [sp, #12]
 801c75e:	5cba      	ldrb	r2, [r7, r2]
 801c760:	07f6      	lsls	r6, r6, #31
 801c762:	bf54      	ite	pl
 801c764:	f002 020f 	andpl.w	r2, r2, #15
 801c768:	1112      	asrmi	r2, r2, #4
 801c76a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c76e:	b2d2      	uxtb	r2, r2
 801c770:	2aff      	cmp	r2, #255	; 0xff
 801c772:	d118      	bne.n	801c7a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801c774:	f8d8 2000 	ldr.w	r2, [r8]
 801c778:	f06f 0601 	mvn.w	r6, #1
 801c77c:	fb06 f705 	mul.w	r7, r6, r5
 801c780:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801c784:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801c788:	0956      	lsrs	r6, r2, #5
 801c78a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c78e:	ea4c 0606 	orr.w	r6, ip, r6
 801c792:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c796:	4316      	orrs	r6, r2
 801c798:	53e6      	strh	r6, [r4, r7]
 801c79a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c79c:	4410      	add	r0, r2
 801c79e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c7a0:	3d01      	subs	r5, #1
 801c7a2:	4411      	add	r1, r2
 801c7a4:	e787      	b.n	801c6b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801c7a6:	2a00      	cmp	r2, #0
 801c7a8:	d0f7      	beq.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c7aa:	f06f 0601 	mvn.w	r6, #1
 801c7ae:	436e      	muls	r6, r5
 801c7b0:	f8d8 c000 	ldr.w	ip, [r8]
 801c7b4:	f834 e006 	ldrh.w	lr, [r4, r6]
 801c7b8:	9604      	str	r6, [sp, #16]
 801c7ba:	fa1f f982 	uxth.w	r9, r2
 801c7be:	ea4f 272e 	mov.w	r7, lr, asr #8
 801c7c2:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801c7c6:	43d2      	mvns	r2, r2
 801c7c8:	b2d2      	uxtb	r2, r2
 801c7ca:	fb16 f609 	smulbb	r6, r6, r9
 801c7ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c7d2:	fb07 6702 	mla	r7, r7, r2, r6
 801c7d6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801c7da:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801c7de:	fa5f fc8c 	uxtb.w	ip, ip
 801c7e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c7e6:	fa5f fe8e 	uxtb.w	lr, lr
 801c7ea:	fb1c fc09 	smulbb	ip, ip, r9
 801c7ee:	fb0e cc02 	mla	ip, lr, r2, ip
 801c7f2:	b2bf      	uxth	r7, r7
 801c7f4:	fb1a fa09 	smulbb	sl, sl, r9
 801c7f8:	fa1f fc8c 	uxth.w	ip, ip
 801c7fc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c800:	fb06 a602 	mla	r6, r6, r2, sl
 801c804:	1c7a      	adds	r2, r7, #1
 801c806:	f10c 0a01 	add.w	sl, ip, #1
 801c80a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c80e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801c812:	b2b6      	uxth	r6, r6
 801c814:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c818:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c81c:	ea4a 0707 	orr.w	r7, sl, r7
 801c820:	f106 0a01 	add.w	sl, r6, #1
 801c824:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801c828:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c82c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c830:	9a04      	ldr	r2, [sp, #16]
 801c832:	ea47 070a 	orr.w	r7, r7, sl
 801c836:	52a7      	strh	r7, [r4, r2]
 801c838:	e7af      	b.n	801c79a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801c83a:	f04f 0e00 	mov.w	lr, #0
 801c83e:	eba3 020e 	sub.w	r2, r3, lr
 801c842:	2a00      	cmp	r2, #0
 801c844:	f77f af3a 	ble.w	801c6bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801c848:	9e02      	ldr	r6, [sp, #8]
 801c84a:	1402      	asrs	r2, r0, #16
 801c84c:	140d      	asrs	r5, r1, #16
 801c84e:	fb06 2505 	mla	r5, r6, r5, r2
 801c852:	086a      	lsrs	r2, r5, #1
 801c854:	9e03      	ldr	r6, [sp, #12]
 801c856:	5cb2      	ldrb	r2, [r6, r2]
 801c858:	07ed      	lsls	r5, r5, #31
 801c85a:	bf54      	ite	pl
 801c85c:	f002 020f 	andpl.w	r2, r2, #15
 801c860:	1112      	asrmi	r2, r2, #4
 801c862:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c866:	b2d2      	uxtb	r2, r2
 801c868:	2aff      	cmp	r2, #255	; 0xff
 801c86a:	d115      	bne.n	801c898 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801c86c:	f8d8 5000 	ldr.w	r5, [r8]
 801c870:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801c874:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801c878:	096a      	lsrs	r2, r5, #5
 801c87a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c87e:	4332      	orrs	r2, r6
 801c880:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c884:	432a      	orrs	r2, r5
 801c886:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801c88a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c88c:	4410      	add	r0, r2
 801c88e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c890:	f10e 0e01 	add.w	lr, lr, #1
 801c894:	4411      	add	r1, r2
 801c896:	e7d2      	b.n	801c83e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c898:	2a00      	cmp	r2, #0
 801c89a:	d0f6      	beq.n	801c88a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c89c:	f8d8 7000 	ldr.w	r7, [r8]
 801c8a0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801c8a4:	fa1f f982 	uxth.w	r9, r2
 801c8a8:	ea4f 262c 	mov.w	r6, ip, asr #8
 801c8ac:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801c8b0:	43d2      	mvns	r2, r2
 801c8b2:	b2d2      	uxtb	r2, r2
 801c8b4:	fb15 f509 	smulbb	r5, r5, r9
 801c8b8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c8bc:	fb06 5602 	mla	r6, r6, r2, r5
 801c8c0:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801c8c4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801c8c8:	b2ff      	uxtb	r7, r7
 801c8ca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8ce:	fa5f fc8c 	uxtb.w	ip, ip
 801c8d2:	fb17 f709 	smulbb	r7, r7, r9
 801c8d6:	fb0c 7702 	mla	r7, ip, r2, r7
 801c8da:	b2b6      	uxth	r6, r6
 801c8dc:	fb1a fa09 	smulbb	sl, sl, r9
 801c8e0:	b2bf      	uxth	r7, r7
 801c8e2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c8e6:	fb05 a502 	mla	r5, r5, r2, sl
 801c8ea:	1c72      	adds	r2, r6, #1
 801c8ec:	f107 0a01 	add.w	sl, r7, #1
 801c8f0:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801c8f4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801c8f8:	b2ad      	uxth	r5, r5
 801c8fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801c8fe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c902:	ea4a 0606 	orr.w	r6, sl, r6
 801c906:	f105 0a01 	add.w	sl, r5, #1
 801c90a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c90e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c912:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c916:	ea46 060a 	orr.w	r6, r6, sl
 801c91a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801c91e:	e7b4      	b.n	801c88a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c920:	b007      	add	sp, #28
 801c922:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c926:	bf00      	nop
 801c928:	200137fc 	.word	0x200137fc

0801c92c <_ZN8touchgfx8LCD16bppD1Ev>:
 801c92c:	4770      	bx	lr

0801c92e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801c92e:	4770      	bx	lr

0801c930 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801c930:	4770      	bx	lr

0801c932 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801c932:	4770      	bx	lr

0801c934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801c934:	4770      	bx	lr

0801c936 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801c936:	4770      	bx	lr

0801c938 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801c938:	4770      	bx	lr

0801c93a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801c93a:	4770      	bx	lr

0801c93c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c93c:	4770      	bx	lr

0801c93e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c93e:	4770      	bx	lr

0801c940 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c940:	4770      	bx	lr

0801c942 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c942:	4770      	bx	lr

0801c944 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c944:	4770      	bx	lr

0801c946 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c946:	4770      	bx	lr

0801c948 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c948:	4770      	bx	lr

0801c94a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c94a:	4770      	bx	lr

0801c94c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c94c:	4770      	bx	lr

0801c94e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c94e:	4770      	bx	lr

0801c950 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c950:	4770      	bx	lr

0801c952 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c952:	4770      	bx	lr

0801c954 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801c954:	4770      	bx	lr

0801c956 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801c956:	4770      	bx	lr

0801c958 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801c958:	4770      	bx	lr

0801c95a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801c95a:	4770      	bx	lr

0801c95c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c95c:	4770      	bx	lr

0801c95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801c95e:	4770      	bx	lr

0801c960 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c960:	4770      	bx	lr

0801c962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801c962:	4770      	bx	lr

0801c964 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801c964:	4770      	bx	lr

0801c966 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801c966:	4770      	bx	lr

0801c968 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801c968:	4770      	bx	lr

0801c96a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801c96a:	4770      	bx	lr

0801c96c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801c96c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c970:	b088      	sub	sp, #32
 801c972:	ac08      	add	r4, sp, #32
 801c974:	4606      	mov	r6, r0
 801c976:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801c97a:	4620      	mov	r0, r4
 801c97c:	4688      	mov	r8, r1
 801c97e:	4691      	mov	r9, r2
 801c980:	f7fd fc62 	bl	801a248 <_ZNK8touchgfx6Bitmap7getDataEv>
 801c984:	6833      	ldr	r3, [r6, #0]
 801c986:	4605      	mov	r5, r0
 801c988:	4620      	mov	r0, r4
 801c98a:	699f      	ldr	r7, [r3, #24]
 801c98c:	f7fd fb70 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801c990:	4682      	mov	sl, r0
 801c992:	4620      	mov	r0, r4
 801c994:	f7fd fba0 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801c998:	9500      	str	r5, [sp, #0]
 801c99a:	e9cd a001 	strd	sl, r0, [sp, #4]
 801c99e:	464b      	mov	r3, r9
 801c9a0:	a806      	add	r0, sp, #24
 801c9a2:	4642      	mov	r2, r8
 801c9a4:	4631      	mov	r1, r6
 801c9a6:	47b8      	blx	r7
 801c9a8:	4628      	mov	r0, r5
 801c9aa:	b008      	add	sp, #32
 801c9ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801c9b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801c9b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801c9b4:	2300      	movs	r3, #0
 801c9b6:	9300      	str	r3, [sp, #0]
 801c9b8:	4b3d      	ldr	r3, [pc, #244]	; (801cab0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801c9ba:	781b      	ldrb	r3, [r3, #0]
 801c9bc:	2b00      	cmp	r3, #0
 801c9be:	d137      	bne.n	801ca30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801c9c0:	4a3c      	ldr	r2, [pc, #240]	; (801cab4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801c9c2:	f9b2 2000 	ldrsh.w	r2, [r2]
 801c9c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 801c9ca:	2b00      	cmp	r3, #0
 801c9cc:	d132      	bne.n	801ca34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801c9ce:	4b3a      	ldr	r3, [pc, #232]	; (801cab8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801c9d0:	f9b3 3000 	ldrsh.w	r3, [r3]
 801c9d4:	6808      	ldr	r0, [r1, #0]
 801c9d6:	6849      	ldr	r1, [r1, #4]
 801c9d8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801c9dc:	ac02      	add	r4, sp, #8
 801c9de:	ab02      	add	r3, sp, #8
 801c9e0:	c303      	stmia	r3!, {r0, r1}
 801c9e2:	4669      	mov	r1, sp
 801c9e4:	4620      	mov	r0, r4
 801c9e6:	f7f9 fd83 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c9ea:	4668      	mov	r0, sp
 801c9ec:	f7f9 fd3c 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801c9f4:	f8bd 2000 	ldrh.w	r2, [sp]
 801c9f8:	4d30      	ldr	r5, [pc, #192]	; (801cabc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801c9fa:	4413      	add	r3, r2
 801c9fc:	f8ad 3008 	strh.w	r3, [sp, #8]
 801ca00:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ca04:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801ca08:	6828      	ldr	r0, [r5, #0]
 801ca0a:	4413      	add	r3, r2
 801ca0c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ca10:	6803      	ldr	r3, [r0, #0]
 801ca12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca14:	4798      	blx	r3
 801ca16:	f010 0f01 	tst.w	r0, #1
 801ca1a:	462f      	mov	r7, r5
 801ca1c:	d00c      	beq.n	801ca38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ca1e:	6828      	ldr	r0, [r5, #0]
 801ca20:	6803      	ldr	r3, [r0, #0]
 801ca22:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ca26:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ca28:	4798      	blx	r3
 801ca2a:	b004      	add	sp, #16
 801ca2c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca30:	4a21      	ldr	r2, [pc, #132]	; (801cab8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ca32:	e7c6      	b.n	801c9c2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ca34:	4b1f      	ldr	r3, [pc, #124]	; (801cab4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ca36:	e7cb      	b.n	801c9d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ca38:	6838      	ldr	r0, [r7, #0]
 801ca3a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ca3e:	6803      	ldr	r3, [r0, #0]
 801ca40:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ca44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ca46:	4798      	blx	r3
 801ca48:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ca4c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ca50:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ca54:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ca58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ca5c:	6838      	ldr	r0, [r7, #0]
 801ca5e:	6803      	ldr	r3, [r0, #0]
 801ca60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca62:	4798      	blx	r3
 801ca64:	4a13      	ldr	r2, [pc, #76]	; (801cab4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ca66:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ca6a:	8813      	ldrh	r3, [r2, #0]
 801ca6c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ca70:	fb03 1404 	mla	r4, r3, r4, r1
 801ca74:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ca78:	435d      	muls	r5, r3
 801ca7a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ca7e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ca82:	4691      	mov	r9, r2
 801ca84:	6838      	ldr	r0, [r7, #0]
 801ca86:	42ac      	cmp	r4, r5
 801ca88:	6803      	ldr	r3, [r0, #0]
 801ca8a:	d20e      	bcs.n	801caaa <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ca8c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ca90:	4632      	mov	r2, r6
 801ca92:	4643      	mov	r3, r8
 801ca94:	4621      	mov	r1, r4
 801ca96:	47d0      	blx	sl
 801ca98:	f8b9 3000 	ldrh.w	r3, [r9]
 801ca9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801caa0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801caa4:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801caa8:	e7ec      	b.n	801ca84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801caaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801caac:	4798      	blx	r3
 801caae:	e7bc      	b.n	801ca2a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801cab0:	200137e4 	.word	0x200137e4
 801cab4:	200137e6 	.word	0x200137e6
 801cab8:	200137e8 	.word	0x200137e8
 801cabc:	200137ec 	.word	0x200137ec

0801cac0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801cac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cac4:	b08b      	sub	sp, #44	; 0x2c
 801cac6:	460f      	mov	r7, r1
 801cac8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801cacc:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801cad0:	4616      	mov	r6, r2
 801cad2:	f1bb 0f00 	cmp.w	fp, #0
 801cad6:	d04a      	beq.n	801cb6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cad8:	6810      	ldr	r0, [r2, #0]
 801cada:	6851      	ldr	r1, [r2, #4]
 801cadc:	ad06      	add	r5, sp, #24
 801cade:	c503      	stmia	r5!, {r0, r1}
 801cae0:	6818      	ldr	r0, [r3, #0]
 801cae2:	6859      	ldr	r1, [r3, #4]
 801cae4:	ad08      	add	r5, sp, #32
 801cae6:	c503      	stmia	r5!, {r0, r1}
 801cae8:	a806      	add	r0, sp, #24
 801caea:	f7f9 fcbd 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801caee:	4631      	mov	r1, r6
 801caf0:	a808      	add	r0, sp, #32
 801caf2:	f7f9 fcfd 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801caf6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801cafa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801cafe:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801cb02:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801cb06:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801cb0a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801cb0e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801cb12:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801cb16:	4f5f      	ldr	r7, [pc, #380]	; (801cc94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cb18:	440a      	add	r2, r1
 801cb1a:	f8ad 2020 	strh.w	r2, [sp, #32]
 801cb1e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801cb22:	6838      	ldr	r0, [r7, #0]
 801cb24:	4413      	add	r3, r2
 801cb26:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801cb2a:	6803      	ldr	r3, [r0, #0]
 801cb2c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cb2e:	4798      	blx	r3
 801cb30:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cb34:	46b9      	mov	r9, r7
 801cb36:	d11d      	bne.n	801cb74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801cb38:	b9fc      	cbnz	r4, 801cb7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801cb3a:	f010 0f01 	tst.w	r0, #1
 801cb3e:	d01c      	beq.n	801cb7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801cb40:	f8d9 0000 	ldr.w	r0, [r9]
 801cb44:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801cb48:	6801      	ldr	r1, [r0, #0]
 801cb4a:	f8cd b00c 	str.w	fp, [sp, #12]
 801cb4e:	2700      	movs	r7, #0
 801cb50:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801cb54:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801cb58:	9402      	str	r4, [sp, #8]
 801cb5a:	b2ad      	uxth	r5, r5
 801cb5c:	fa1f f488 	uxth.w	r4, r8
 801cb60:	9501      	str	r5, [sp, #4]
 801cb62:	9400      	str	r4, [sp, #0]
 801cb64:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801cb66:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801cb6a:	4631      	mov	r1, r6
 801cb6c:	47a0      	blx	r4
 801cb6e:	b00b      	add	sp, #44	; 0x2c
 801cb70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb74:	f010 0f04 	tst.w	r0, #4
 801cb78:	e7e1      	b.n	801cb3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801cb7a:	f8d9 0000 	ldr.w	r0, [r9]
 801cb7e:	6803      	ldr	r3, [r0, #0]
 801cb80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cb82:	4798      	blx	r3
 801cb84:	4b44      	ldr	r3, [pc, #272]	; (801cc98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801cb86:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801cb8a:	881a      	ldrh	r2, [r3, #0]
 801cb8c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801cb90:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801cb94:	fb02 1404 	mla	r4, r2, r4, r1
 801cb98:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801cb9c:	469a      	mov	sl, r3
 801cb9e:	fb05 f502 	mul.w	r5, r5, r2
 801cba2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801cba6:	d059      	beq.n	801cc5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801cba8:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801cbac:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cbb0:	fa1f f28b 	uxth.w	r2, fp
 801cbb4:	fa1f f989 	uxth.w	r9, r9
 801cbb8:	469e      	mov	lr, r3
 801cbba:	42ac      	cmp	r4, r5
 801cbbc:	d264      	bcs.n	801cc88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801cbbe:	eb04 0a07 	add.w	sl, r4, r7
 801cbc2:	4554      	cmp	r4, sl
 801cbc4:	d23d      	bcs.n	801cc42 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801cbc6:	8821      	ldrh	r1, [r4, #0]
 801cbc8:	f836 3b02 	ldrh.w	r3, [r6], #2
 801cbcc:	1208      	asrs	r0, r1, #8
 801cbce:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cbd2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cbd6:	fb10 f009 	smulbb	r0, r0, r9
 801cbda:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801cbde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801cbe2:	00c9      	lsls	r1, r1, #3
 801cbe4:	fb0c 0c02 	mla	ip, ip, r2, r0
 801cbe8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801cbec:	10d8      	asrs	r0, r3, #3
 801cbee:	b2c9      	uxtb	r1, r1
 801cbf0:	00db      	lsls	r3, r3, #3
 801cbf2:	fa1f fc8c 	uxth.w	ip, ip
 801cbf6:	fb1b fb09 	smulbb	fp, fp, r9
 801cbfa:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cbfe:	b2db      	uxtb	r3, r3
 801cc00:	fb11 f109 	smulbb	r1, r1, r9
 801cc04:	fb00 b002 	mla	r0, r0, r2, fp
 801cc08:	fb03 1302 	mla	r3, r3, r2, r1
 801cc0c:	f10c 0b01 	add.w	fp, ip, #1
 801cc10:	b29b      	uxth	r3, r3
 801cc12:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801cc16:	b280      	uxth	r0, r0
 801cc18:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801cc1c:	f103 0c01 	add.w	ip, r3, #1
 801cc20:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cc24:	1c43      	adds	r3, r0, #1
 801cc26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801cc2a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cc2e:	0940      	lsrs	r0, r0, #5
 801cc30:	ea4c 0c0b 	orr.w	ip, ip, fp
 801cc34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc38:	ea4c 0c00 	orr.w	ip, ip, r0
 801cc3c:	f824 cb02 	strh.w	ip, [r4], #2
 801cc40:	e7bf      	b.n	801cbc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801cc42:	f8be 3000 	ldrh.w	r3, [lr]
 801cc46:	eba3 0308 	sub.w	r3, r3, r8
 801cc4a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cc4e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cc52:	eba3 0308 	sub.w	r3, r3, r8
 801cc56:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cc5a:	e7ae      	b.n	801cbba <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801cc5c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801cc60:	f8d9 0000 	ldr.w	r0, [r9]
 801cc64:	42ac      	cmp	r4, r5
 801cc66:	6803      	ldr	r3, [r0, #0]
 801cc68:	d20e      	bcs.n	801cc88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801cc6a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801cc6e:	4632      	mov	r2, r6
 801cc70:	463b      	mov	r3, r7
 801cc72:	4621      	mov	r1, r4
 801cc74:	47c0      	blx	r8
 801cc76:	f8ba 3000 	ldrh.w	r3, [sl]
 801cc7a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cc7e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801cc82:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801cc86:	e7eb      	b.n	801cc60 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801cc88:	4b02      	ldr	r3, [pc, #8]	; (801cc94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801cc8a:	6818      	ldr	r0, [r3, #0]
 801cc8c:	6803      	ldr	r3, [r0, #0]
 801cc8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc90:	4798      	blx	r3
 801cc92:	e76c      	b.n	801cb6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801cc94:	200137ec 	.word	0x200137ec
 801cc98:	200137e6 	.word	0x200137e6

0801cc9c <_ZN8touchgfx8LCD16bppD0Ev>:
 801cc9c:	b510      	push	{r4, lr}
 801cc9e:	2184      	movs	r1, #132	; 0x84
 801cca0:	4604      	mov	r4, r0
 801cca2:	f00d fe4a 	bl	802a93a <_ZdlPvj>
 801cca6:	4620      	mov	r0, r4
 801cca8:	bd10      	pop	{r4, pc}

0801ccaa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801ccaa:	b510      	push	{r4, lr}
 801ccac:	2104      	movs	r1, #4
 801ccae:	4604      	mov	r4, r0
 801ccb0:	f00d fe43 	bl	802a93a <_ZdlPvj>
 801ccb4:	4620      	mov	r0, r4
 801ccb6:	bd10      	pop	{r4, pc}

0801ccb8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801ccb8:	b510      	push	{r4, lr}
 801ccba:	2104      	movs	r1, #4
 801ccbc:	4604      	mov	r4, r0
 801ccbe:	f00d fe3c 	bl	802a93a <_ZdlPvj>
 801ccc2:	4620      	mov	r0, r4
 801ccc4:	bd10      	pop	{r4, pc}

0801ccc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801ccc6:	b510      	push	{r4, lr}
 801ccc8:	f640 0144 	movw	r1, #2116	; 0x844
 801cccc:	4604      	mov	r4, r0
 801ccce:	f00d fe34 	bl	802a93a <_ZdlPvj>
 801ccd2:	4620      	mov	r0, r4
 801ccd4:	bd10      	pop	{r4, pc}

0801ccd6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801ccd6:	b510      	push	{r4, lr}
 801ccd8:	2104      	movs	r1, #4
 801ccda:	4604      	mov	r4, r0
 801ccdc:	f00d fe2d 	bl	802a93a <_ZdlPvj>
 801cce0:	4620      	mov	r0, r4
 801cce2:	bd10      	pop	{r4, pc}

0801cce4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cce4:	b510      	push	{r4, lr}
 801cce6:	2104      	movs	r1, #4
 801cce8:	4604      	mov	r4, r0
 801ccea:	f00d fe26 	bl	802a93a <_ZdlPvj>
 801ccee:	4620      	mov	r0, r4
 801ccf0:	bd10      	pop	{r4, pc}

0801ccf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801ccf2:	b510      	push	{r4, lr}
 801ccf4:	2104      	movs	r1, #4
 801ccf6:	4604      	mov	r4, r0
 801ccf8:	f00d fe1f 	bl	802a93a <_ZdlPvj>
 801ccfc:	4620      	mov	r0, r4
 801ccfe:	bd10      	pop	{r4, pc}

0801cd00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cd00:	b510      	push	{r4, lr}
 801cd02:	2104      	movs	r1, #4
 801cd04:	4604      	mov	r4, r0
 801cd06:	f00d fe18 	bl	802a93a <_ZdlPvj>
 801cd0a:	4620      	mov	r0, r4
 801cd0c:	bd10      	pop	{r4, pc}

0801cd0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cd0e:	b510      	push	{r4, lr}
 801cd10:	2104      	movs	r1, #4
 801cd12:	4604      	mov	r4, r0
 801cd14:	f00d fe11 	bl	802a93a <_ZdlPvj>
 801cd18:	4620      	mov	r0, r4
 801cd1a:	bd10      	pop	{r4, pc}

0801cd1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801cd1c:	b510      	push	{r4, lr}
 801cd1e:	2104      	movs	r1, #4
 801cd20:	4604      	mov	r4, r0
 801cd22:	f00d fe0a 	bl	802a93a <_ZdlPvj>
 801cd26:	4620      	mov	r0, r4
 801cd28:	bd10      	pop	{r4, pc}

0801cd2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cd2a:	b510      	push	{r4, lr}
 801cd2c:	2104      	movs	r1, #4
 801cd2e:	4604      	mov	r4, r0
 801cd30:	f00d fe03 	bl	802a93a <_ZdlPvj>
 801cd34:	4620      	mov	r0, r4
 801cd36:	bd10      	pop	{r4, pc}

0801cd38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801cd38:	b510      	push	{r4, lr}
 801cd3a:	2104      	movs	r1, #4
 801cd3c:	4604      	mov	r4, r0
 801cd3e:	f00d fdfc 	bl	802a93a <_ZdlPvj>
 801cd42:	4620      	mov	r0, r4
 801cd44:	bd10      	pop	{r4, pc}

0801cd46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cd46:	b510      	push	{r4, lr}
 801cd48:	2104      	movs	r1, #4
 801cd4a:	4604      	mov	r4, r0
 801cd4c:	f00d fdf5 	bl	802a93a <_ZdlPvj>
 801cd50:	4620      	mov	r0, r4
 801cd52:	bd10      	pop	{r4, pc}

0801cd54 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cd54:	b510      	push	{r4, lr}
 801cd56:	2104      	movs	r1, #4
 801cd58:	4604      	mov	r4, r0
 801cd5a:	f00d fdee 	bl	802a93a <_ZdlPvj>
 801cd5e:	4620      	mov	r0, r4
 801cd60:	bd10      	pop	{r4, pc}

0801cd62 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cd62:	b510      	push	{r4, lr}
 801cd64:	2104      	movs	r1, #4
 801cd66:	4604      	mov	r4, r0
 801cd68:	f00d fde7 	bl	802a93a <_ZdlPvj>
 801cd6c:	4620      	mov	r0, r4
 801cd6e:	bd10      	pop	{r4, pc}

0801cd70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cd70:	b510      	push	{r4, lr}
 801cd72:	2104      	movs	r1, #4
 801cd74:	4604      	mov	r4, r0
 801cd76:	f00d fde0 	bl	802a93a <_ZdlPvj>
 801cd7a:	4620      	mov	r0, r4
 801cd7c:	bd10      	pop	{r4, pc}

0801cd7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801cd7e:	b510      	push	{r4, lr}
 801cd80:	2104      	movs	r1, #4
 801cd82:	4604      	mov	r4, r0
 801cd84:	f00d fdd9 	bl	802a93a <_ZdlPvj>
 801cd88:	4620      	mov	r0, r4
 801cd8a:	bd10      	pop	{r4, pc}

0801cd8c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801cd8c:	b510      	push	{r4, lr}
 801cd8e:	2104      	movs	r1, #4
 801cd90:	4604      	mov	r4, r0
 801cd92:	f00d fdd2 	bl	802a93a <_ZdlPvj>
 801cd96:	4620      	mov	r0, r4
 801cd98:	bd10      	pop	{r4, pc}

0801cd9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cd9a:	b510      	push	{r4, lr}
 801cd9c:	2104      	movs	r1, #4
 801cd9e:	4604      	mov	r4, r0
 801cda0:	f00d fdcb 	bl	802a93a <_ZdlPvj>
 801cda4:	4620      	mov	r0, r4
 801cda6:	bd10      	pop	{r4, pc}

0801cda8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cda8:	b510      	push	{r4, lr}
 801cdaa:	2104      	movs	r1, #4
 801cdac:	4604      	mov	r4, r0
 801cdae:	f00d fdc4 	bl	802a93a <_ZdlPvj>
 801cdb2:	4620      	mov	r0, r4
 801cdb4:	bd10      	pop	{r4, pc}

0801cdb6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801cdb6:	b510      	push	{r4, lr}
 801cdb8:	2104      	movs	r1, #4
 801cdba:	4604      	mov	r4, r0
 801cdbc:	f00d fdbd 	bl	802a93a <_ZdlPvj>
 801cdc0:	4620      	mov	r0, r4
 801cdc2:	bd10      	pop	{r4, pc}

0801cdc4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801cdc4:	b510      	push	{r4, lr}
 801cdc6:	2104      	movs	r1, #4
 801cdc8:	4604      	mov	r4, r0
 801cdca:	f00d fdb6 	bl	802a93a <_ZdlPvj>
 801cdce:	4620      	mov	r0, r4
 801cdd0:	bd10      	pop	{r4, pc}

0801cdd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801cdd2:	b510      	push	{r4, lr}
 801cdd4:	2104      	movs	r1, #4
 801cdd6:	4604      	mov	r4, r0
 801cdd8:	f00d fdaf 	bl	802a93a <_ZdlPvj>
 801cddc:	4620      	mov	r0, r4
 801cdde:	bd10      	pop	{r4, pc}

0801cde0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801cde0:	b510      	push	{r4, lr}
 801cde2:	2104      	movs	r1, #4
 801cde4:	4604      	mov	r4, r0
 801cde6:	f00d fda8 	bl	802a93a <_ZdlPvj>
 801cdea:	4620      	mov	r0, r4
 801cdec:	bd10      	pop	{r4, pc}

0801cdee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801cdee:	b510      	push	{r4, lr}
 801cdf0:	2104      	movs	r1, #4
 801cdf2:	4604      	mov	r4, r0
 801cdf4:	f00d fda1 	bl	802a93a <_ZdlPvj>
 801cdf8:	4620      	mov	r0, r4
 801cdfa:	bd10      	pop	{r4, pc}

0801cdfc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801cdfc:	b510      	push	{r4, lr}
 801cdfe:	2104      	movs	r1, #4
 801ce00:	4604      	mov	r4, r0
 801ce02:	f00d fd9a 	bl	802a93a <_ZdlPvj>
 801ce06:	4620      	mov	r0, r4
 801ce08:	bd10      	pop	{r4, pc}

0801ce0a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801ce0a:	b510      	push	{r4, lr}
 801ce0c:	2104      	movs	r1, #4
 801ce0e:	4604      	mov	r4, r0
 801ce10:	f00d fd93 	bl	802a93a <_ZdlPvj>
 801ce14:	4620      	mov	r0, r4
 801ce16:	bd10      	pop	{r4, pc}

0801ce18 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801ce18:	b510      	push	{r4, lr}
 801ce1a:	2104      	movs	r1, #4
 801ce1c:	4604      	mov	r4, r0
 801ce1e:	f00d fd8c 	bl	802a93a <_ZdlPvj>
 801ce22:	4620      	mov	r0, r4
 801ce24:	bd10      	pop	{r4, pc}

0801ce26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801ce26:	b510      	push	{r4, lr}
 801ce28:	2104      	movs	r1, #4
 801ce2a:	4604      	mov	r4, r0
 801ce2c:	f00d fd85 	bl	802a93a <_ZdlPvj>
 801ce30:	4620      	mov	r0, r4
 801ce32:	bd10      	pop	{r4, pc}

0801ce34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801ce34:	b510      	push	{r4, lr}
 801ce36:	2104      	movs	r1, #4
 801ce38:	4604      	mov	r4, r0
 801ce3a:	f00d fd7e 	bl	802a93a <_ZdlPvj>
 801ce3e:	4620      	mov	r0, r4
 801ce40:	bd10      	pop	{r4, pc}

0801ce42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801ce42:	b510      	push	{r4, lr}
 801ce44:	2104      	movs	r1, #4
 801ce46:	4604      	mov	r4, r0
 801ce48:	f00d fd77 	bl	802a93a <_ZdlPvj>
 801ce4c:	4620      	mov	r0, r4
 801ce4e:	bd10      	pop	{r4, pc}

0801ce50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801ce50:	b510      	push	{r4, lr}
 801ce52:	2104      	movs	r1, #4
 801ce54:	4604      	mov	r4, r0
 801ce56:	f00d fd70 	bl	802a93a <_ZdlPvj>
 801ce5a:	4620      	mov	r0, r4
 801ce5c:	bd10      	pop	{r4, pc}
	...

0801ce60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ce60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce64:	b08f      	sub	sp, #60	; 0x3c
 801ce66:	461c      	mov	r4, r3
 801ce68:	9205      	str	r2, [sp, #20]
 801ce6a:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801ce6e:	9100      	str	r1, [sp, #0]
 801ce70:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ce72:	9201      	str	r2, [sp, #4]
 801ce74:	2a00      	cmp	r2, #0
 801ce76:	f000 8115 	beq.w	801d0a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801ce7a:	6820      	ldr	r0, [r4, #0]
 801ce7c:	6861      	ldr	r1, [r4, #4]
 801ce7e:	aa0a      	add	r2, sp, #40	; 0x28
 801ce80:	c203      	stmia	r2!, {r0, r1}
 801ce82:	6818      	ldr	r0, [r3, #0]
 801ce84:	6859      	ldr	r1, [r3, #4]
 801ce86:	aa0c      	add	r2, sp, #48	; 0x30
 801ce88:	c203      	stmia	r2!, {r0, r1}
 801ce8a:	a80a      	add	r0, sp, #40	; 0x28
 801ce8c:	f7f9 faec 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce90:	4621      	mov	r1, r4
 801ce92:	a80c      	add	r0, sp, #48	; 0x30
 801ce94:	f7f9 fb2c 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801ce9c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801cea0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801cea4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801cea8:	bfde      	ittt	le
 801ceaa:	b2b3      	uxthle	r3, r6
 801ceac:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801ceb0:	fb92 f3f3 	sdivle	r3, r2, r3
 801ceb4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801ceb8:	bfc8      	it	gt
 801ceba:	2301      	movgt	r3, #1
 801cebc:	fb92 f1f3 	sdiv	r1, r2, r3
 801cec0:	fa1f fc81 	uxth.w	ip, r1
 801cec4:	fb0c 2413 	mls	r4, ip, r3, r2
 801cec8:	fb14 f406 	smulbb	r4, r4, r6
 801cecc:	441d      	add	r5, r3
 801cece:	4404      	add	r4, r0
 801ced0:	4661      	mov	r1, ip
 801ced2:	3d01      	subs	r5, #1
 801ced4:	b2a4      	uxth	r4, r4
 801ced6:	fb95 f5f3 	sdiv	r5, r5, r3
 801ceda:	b131      	cbz	r1, 801ceea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801cedc:	9b05      	ldr	r3, [sp, #20]
 801cede:	9900      	ldr	r1, [sp, #0]
 801cee0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cee4:	ba1b      	rev	r3, r3
 801cee6:	4419      	add	r1, r3
 801cee8:	9100      	str	r1, [sp, #0]
 801ceea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801ceee:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801cef2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cef6:	4418      	add	r0, r3
 801cef8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cefc:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801cf00:	441a      	add	r2, r3
 801cf02:	4b6a      	ldr	r3, [pc, #424]	; (801d0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801cf04:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801cf08:	6818      	ldr	r0, [r3, #0]
 801cf0a:	6803      	ldr	r3, [r0, #0]
 801cf0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf0e:	4798      	blx	r3
 801cf10:	4967      	ldr	r1, [pc, #412]	; (801d0b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801cf12:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cf16:	880b      	ldrh	r3, [r1, #0]
 801cf18:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801cf1c:	9109      	str	r1, [sp, #36]	; 0x24
 801cf1e:	fb03 c202 	mla	r2, r3, r2, ip
 801cf22:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf26:	4373      	muls	r3, r6
 801cf28:	b2ad      	uxth	r5, r5
 801cf2a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cf2e:	00ad      	lsls	r5, r5, #2
 801cf30:	9306      	str	r3, [sp, #24]
 801cf32:	1d2b      	adds	r3, r5, #4
 801cf34:	9307      	str	r3, [sp, #28]
 801cf36:	9b01      	ldr	r3, [sp, #4]
 801cf38:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cf3c:	9103      	str	r1, [sp, #12]
 801cf3e:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801cf42:	2c00      	cmp	r4, #0
 801cf44:	bf0c      	ite	eq
 801cf46:	46c6      	moveq	lr, r8
 801cf48:	f04f 0e00 	movne.w	lr, #0
 801cf4c:	2300      	movs	r3, #0
 801cf4e:	b292      	uxth	r2, r2
 801cf50:	fa1f fe8e 	uxth.w	lr, lr
 801cf54:	9302      	str	r3, [sp, #8]
 801cf56:	9204      	str	r2, [sp, #16]
 801cf58:	9a06      	ldr	r2, [sp, #24]
 801cf5a:	4282      	cmp	r2, r0
 801cf5c:	f240 809d 	bls.w	801d09a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801cf60:	b963      	cbnz	r3, 801cf7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cf62:	9b00      	ldr	r3, [sp, #0]
 801cf64:	781a      	ldrb	r2, [r3, #0]
 801cf66:	0993      	lsrs	r3, r2, #6
 801cf68:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801cf6c:	9202      	str	r2, [sp, #8]
 801cf6e:	1e5a      	subs	r2, r3, #1
 801cf70:	2a02      	cmp	r2, #2
 801cf72:	d815      	bhi.n	801cfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801cf74:	9a00      	ldr	r2, [sp, #0]
 801cf76:	3201      	adds	r2, #1
 801cf78:	9200      	str	r2, [sp, #0]
 801cf7a:	b29b      	uxth	r3, r3
 801cf7c:	b1b4      	cbz	r4, 801cfac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801cf7e:	429c      	cmp	r4, r3
 801cf80:	bf95      	itete	ls
 801cf82:	1b1c      	subls	r4, r3, r4
 801cf84:	1ae4      	subhi	r4, r4, r3
 801cf86:	fa1f fa84 	uxthls.w	sl, r4
 801cf8a:	b2a4      	uxthhi	r4, r4
 801cf8c:	bf87      	ittee	hi
 801cf8e:	4671      	movhi	r1, lr
 801cf90:	f04f 0a00 	movhi.w	sl, #0
 801cf94:	fa1f f188 	uxthls.w	r1, r8
 801cf98:	2400      	movls	r4, #0
 801cf9a:	4653      	mov	r3, sl
 801cf9c:	468e      	mov	lr, r1
 801cf9e:	e7db      	b.n	801cf58 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801cfa0:	9a00      	ldr	r2, [sp, #0]
 801cfa2:	9b00      	ldr	r3, [sp, #0]
 801cfa4:	3202      	adds	r2, #2
 801cfa6:	785b      	ldrb	r3, [r3, #1]
 801cfa8:	9200      	str	r2, [sp, #0]
 801cfaa:	e7e7      	b.n	801cf7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801cfac:	2202      	movs	r2, #2
 801cfae:	4615      	mov	r5, r2
 801cfb0:	9907      	ldr	r1, [sp, #28]
 801cfb2:	9a02      	ldr	r2, [sp, #8]
 801cfb4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801cfb8:	9905      	ldr	r1, [sp, #20]
 801cfba:	4573      	cmp	r3, lr
 801cfbc:	f831 c002 	ldrh.w	ip, [r1, r2]
 801cfc0:	9a01      	ldr	r2, [sp, #4]
 801cfc2:	bf2b      	itete	cs
 801cfc4:	eba3 0a0e 	subcs.w	sl, r3, lr
 801cfc8:	ebae 0103 	subcc.w	r1, lr, r3
 801cfcc:	46f1      	movcs	r9, lr
 801cfce:	4699      	movcc	r9, r3
 801cfd0:	bf27      	ittee	cs
 801cfd2:	fa1f fa8a 	uxthcs.w	sl, sl
 801cfd6:	4621      	movcs	r1, r4
 801cfd8:	b289      	uxthcc	r1, r1
 801cfda:	46a2      	movcc	sl, r4
 801cfdc:	2aff      	cmp	r2, #255	; 0xff
 801cfde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cfe2:	d105      	bne.n	801cff0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801cfe4:	4481      	add	r9, r0
 801cfe6:	4581      	cmp	r9, r0
 801cfe8:	d045      	beq.n	801d076 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801cfea:	f820 cb02 	strh.w	ip, [r0], #2
 801cfee:	e7fa      	b.n	801cfe6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801cff0:	9d03      	ldr	r5, [sp, #12]
 801cff2:	ea4f 222c 	mov.w	r2, ip, asr #8
 801cff6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801cffa:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801cffe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d002:	436a      	muls	r2, r5
 801d004:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801d008:	fa5f fc8c 	uxtb.w	ip, ip
 801d00c:	9208      	str	r2, [sp, #32]
 801d00e:	fb0b fb05 	mul.w	fp, fp, r5
 801d012:	fb0c fc05 	mul.w	ip, ip, r5
 801d016:	4481      	add	r9, r0
 801d018:	4581      	cmp	r9, r0
 801d01a:	d02c      	beq.n	801d076 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801d01c:	8802      	ldrh	r2, [r0, #0]
 801d01e:	9d04      	ldr	r5, [sp, #16]
 801d020:	9f04      	ldr	r7, [sp, #16]
 801d022:	1216      	asrs	r6, r2, #8
 801d024:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d028:	fb16 f605 	smulbb	r6, r6, r5
 801d02c:	9d08      	ldr	r5, [sp, #32]
 801d02e:	442e      	add	r6, r5
 801d030:	10d5      	asrs	r5, r2, #3
 801d032:	00d2      	lsls	r2, r2, #3
 801d034:	b2d2      	uxtb	r2, r2
 801d036:	fb12 f207 	smulbb	r2, r2, r7
 801d03a:	b2b6      	uxth	r6, r6
 801d03c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d040:	4462      	add	r2, ip
 801d042:	fb15 f507 	smulbb	r5, r5, r7
 801d046:	b292      	uxth	r2, r2
 801d048:	1c77      	adds	r7, r6, #1
 801d04a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801d04e:	1c57      	adds	r7, r2, #1
 801d050:	445d      	add	r5, fp
 801d052:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801d056:	b2ad      	uxth	r5, r5
 801d058:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d05c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d060:	4316      	orrs	r6, r2
 801d062:	1c6a      	adds	r2, r5, #1
 801d064:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d068:	096d      	lsrs	r5, r5, #5
 801d06a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d06e:	432e      	orrs	r6, r5
 801d070:	f820 6b02 	strh.w	r6, [r0], #2
 801d074:	e7d0      	b.n	801d018 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801d076:	4573      	cmp	r3, lr
 801d078:	d38f      	bcc.n	801cf9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d07a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d07e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d080:	fa1f f188 	uxth.w	r1, r8
 801d084:	1a64      	subs	r4, r4, r1
 801d086:	881b      	ldrh	r3, [r3, #0]
 801d088:	b2a4      	uxth	r4, r4
 801d08a:	2c00      	cmp	r4, #0
 801d08c:	eba3 0308 	sub.w	r3, r3, r8
 801d090:	bf18      	it	ne
 801d092:	2100      	movne	r1, #0
 801d094:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d098:	e77f      	b.n	801cf9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801d09a:	4b04      	ldr	r3, [pc, #16]	; (801d0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801d09c:	6818      	ldr	r0, [r3, #0]
 801d09e:	6803      	ldr	r3, [r0, #0]
 801d0a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0a2:	4798      	blx	r3
 801d0a4:	b00f      	add	sp, #60	; 0x3c
 801d0a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0aa:	bf00      	nop
 801d0ac:	200137ec 	.word	0x200137ec
 801d0b0:	200137e6 	.word	0x200137e6

0801d0b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801d0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0b8:	b09f      	sub	sp, #124	; 0x7c
 801d0ba:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801d0be:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801d0c2:	9209      	str	r2, [sp, #36]	; 0x24
 801d0c4:	461d      	mov	r5, r3
 801d0c6:	4604      	mov	r4, r0
 801d0c8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d0ca:	2a00      	cmp	r2, #0
 801d0cc:	f000 81eb 	beq.w	801d4a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801d0d0:	6828      	ldr	r0, [r5, #0]
 801d0d2:	6869      	ldr	r1, [r5, #4]
 801d0d4:	aa1a      	add	r2, sp, #104	; 0x68
 801d0d6:	c203      	stmia	r2!, {r0, r1}
 801d0d8:	6818      	ldr	r0, [r3, #0]
 801d0da:	6859      	ldr	r1, [r3, #4]
 801d0dc:	aa1c      	add	r2, sp, #112	; 0x70
 801d0de:	c203      	stmia	r2!, {r0, r1}
 801d0e0:	a81a      	add	r0, sp, #104	; 0x68
 801d0e2:	f7f9 f9c1 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d0e6:	4629      	mov	r1, r5
 801d0e8:	a81c      	add	r0, sp, #112	; 0x70
 801d0ea:	f7f9 fa01 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d0ee:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801d0f2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801d0f6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801d0fa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d0fe:	bfd7      	itett	le
 801d100:	b29a      	uxthle	r2, r3
 801d102:	2201      	movgt	r2, #1
 801d104:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801d108:	fb91 f2f2 	sdivle	r2, r1, r2
 801d10c:	9202      	str	r2, [sp, #8]
 801d10e:	9802      	ldr	r0, [sp, #8]
 801d110:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801d114:	fb92 f0f0 	sdiv	r0, r2, r0
 801d118:	b280      	uxth	r0, r0
 801d11a:	9010      	str	r0, [sp, #64]	; 0x40
 801d11c:	9902      	ldr	r1, [sp, #8]
 801d11e:	9802      	ldr	r0, [sp, #8]
 801d120:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801d122:	4488      	add	r8, r1
 801d124:	fb05 2510 	mls	r5, r5, r0, r2
 801d128:	fb15 f503 	smulbb	r5, r5, r3
 801d12c:	f108 38ff 	add.w	r8, r8, #4294967295
 801d130:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801d134:	fb98 f8f1 	sdiv	r8, r8, r1
 801d138:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801d13c:	440d      	add	r5, r1
 801d13e:	4419      	add	r1, r3
 801d140:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801d144:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801d148:	441a      	add	r2, r3
 801d14a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801d14e:	9304      	str	r3, [sp, #16]
 801d150:	4b95      	ldr	r3, [pc, #596]	; (801d3a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801d152:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801d156:	6818      	ldr	r0, [r3, #0]
 801d158:	6803      	ldr	r3, [r0, #0]
 801d15a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d15c:	4798      	blx	r3
 801d15e:	4b93      	ldr	r3, [pc, #588]	; (801d3ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801d160:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801d164:	881a      	ldrh	r2, [r3, #0]
 801d166:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801d16a:	9318      	str	r3, [sp, #96]	; 0x60
 801d16c:	fb02 7101 	mla	r1, r2, r1, r7
 801d170:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d174:	4356      	muls	r6, r2
 801d176:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801d17a:	f108 0801 	add.w	r8, r8, #1
 801d17e:	920a      	str	r2, [sp, #40]	; 0x28
 801d180:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801d182:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801d186:	930f      	str	r3, [sp, #60]	; 0x3c
 801d188:	fa1f f888 	uxth.w	r8, r8
 801d18c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801d190:	f108 0204 	add.w	r2, r8, #4
 801d194:	9211      	str	r2, [sp, #68]	; 0x44
 801d196:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d198:	4b85      	ldr	r3, [pc, #532]	; (801d3b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d19a:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801d19e:	b2ad      	uxth	r5, r5
 801d1a0:	9215      	str	r2, [sp, #84]	; 0x54
 801d1a2:	2d00      	cmp	r5, #0
 801d1a4:	9a04      	ldr	r2, [sp, #16]
 801d1a6:	f04f 0100 	mov.w	r1, #0
 801d1aa:	bf18      	it	ne
 801d1ac:	2200      	movne	r2, #0
 801d1ae:	1b1b      	subs	r3, r3, r4
 801d1b0:	b292      	uxth	r2, r2
 801d1b2:	910d      	str	r1, [sp, #52]	; 0x34
 801d1b4:	9319      	str	r3, [sp, #100]	; 0x64
 801d1b6:	9910      	ldr	r1, [sp, #64]	; 0x40
 801d1b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1ba:	fa11 f383 	uxtah	r3, r1, r3
 801d1be:	9914      	ldr	r1, [sp, #80]	; 0x50
 801d1c0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801d1c4:	3304      	adds	r3, #4
 801d1c6:	9306      	str	r3, [sp, #24]
 801d1c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d1ca:	4283      	cmp	r3, r0
 801d1cc:	f240 8166 	bls.w	801d49c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801d1d0:	9902      	ldr	r1, [sp, #8]
 801d1d2:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801d1d6:	fbb5 f3f3 	udiv	r3, r5, r3
 801d1da:	1acb      	subs	r3, r1, r3
 801d1dc:	b29b      	uxth	r3, r3
 801d1de:	9316      	str	r3, [sp, #88]	; 0x58
 801d1e0:	9b06      	ldr	r3, [sp, #24]
 801d1e2:	9e06      	ldr	r6, [sp, #24]
 801d1e4:	7859      	ldrb	r1, [r3, #1]
 801d1e6:	789b      	ldrb	r3, [r3, #2]
 801d1e8:	7836      	ldrb	r6, [r6, #0]
 801d1ea:	9612      	str	r6, [sp, #72]	; 0x48
 801d1ec:	021b      	lsls	r3, r3, #8
 801d1ee:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801d1f2:	9906      	ldr	r1, [sp, #24]
 801d1f4:	78c9      	ldrb	r1, [r1, #3]
 801d1f6:	430b      	orrs	r3, r1
 801d1f8:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801d1fa:	3601      	adds	r6, #1
 801d1fc:	4419      	add	r1, r3
 801d1fe:	9605      	str	r6, [sp, #20]
 801d200:	1c4e      	adds	r6, r1, #1
 801d202:	9603      	str	r6, [sp, #12]
 801d204:	7849      	ldrb	r1, [r1, #1]
 801d206:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801d208:	0209      	lsls	r1, r1, #8
 801d20a:	5cf3      	ldrb	r3, [r6, r3]
 801d20c:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801d210:	4319      	orrs	r1, r3
 801d212:	b28b      	uxth	r3, r1
 801d214:	930c      	str	r3, [sp, #48]	; 0x30
 801d216:	2300      	movs	r3, #0
 801d218:	f04f 0a01 	mov.w	sl, #1
 801d21c:	9307      	str	r3, [sp, #28]
 801d21e:	469c      	mov	ip, r3
 801d220:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801d224:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801d228:	46d3      	mov	fp, sl
 801d22a:	4657      	mov	r7, sl
 801d22c:	930e      	str	r3, [sp, #56]	; 0x38
 801d22e:	2d00      	cmp	r5, #0
 801d230:	d07e      	beq.n	801d330 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801d232:	42af      	cmp	r7, r5
 801d234:	d26e      	bcs.n	801d314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801d236:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d238:	9201      	str	r2, [sp, #4]
 801d23a:	1bed      	subs	r5, r5, r7
 801d23c:	4283      	cmp	r3, r0
 801d23e:	b2ad      	uxth	r5, r5
 801d240:	d802      	bhi.n	801d248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801d242:	e073      	b.n	801d32c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801d244:	2b00      	cmp	r3, #0
 801d246:	d15f      	bne.n	801d308 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801d248:	9b03      	ldr	r3, [sp, #12]
 801d24a:	785b      	ldrb	r3, [r3, #1]
 801d24c:	f1cb 0207 	rsb	r2, fp, #7
 801d250:	4093      	lsls	r3, r2
 801d252:	005b      	lsls	r3, r3, #1
 801d254:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801d258:	9b03      	ldr	r3, [sp, #12]
 801d25a:	781b      	ldrb	r3, [r3, #0]
 801d25c:	fa43 f30b 	asr.w	r3, r3, fp
 801d260:	b2db      	uxtb	r3, r3
 801d262:	4313      	orrs	r3, r2
 801d264:	f10b 0201 	add.w	r2, fp, #1
 801d268:	fa5f fb82 	uxtb.w	fp, r2
 801d26c:	9a03      	ldr	r2, [sp, #12]
 801d26e:	f1bb 0f08 	cmp.w	fp, #8
 801d272:	bf15      	itete	ne
 801d274:	3201      	addne	r2, #1
 801d276:	3202      	addeq	r2, #2
 801d278:	9203      	strne	r2, [sp, #12]
 801d27a:	9203      	streq	r2, [sp, #12]
 801d27c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801d27e:	b29f      	uxth	r7, r3
 801d280:	bf08      	it	eq
 801d282:	f04f 0b00 	moveq.w	fp, #0
 801d286:	42ba      	cmp	r2, r7
 801d288:	d309      	bcc.n	801d29e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801d28a:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801d28e:	2301      	movs	r3, #1
 801d290:	9a05      	ldr	r2, [sp, #20]
 801d292:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801d296:	d30e      	bcc.n	801d2b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801d298:	469a      	mov	sl, r3
 801d29a:	2600      	movs	r6, #0
 801d29c:	e035      	b.n	801d30a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801d29e:	9b05      	ldr	r3, [sp, #20]
 801d2a0:	429f      	cmp	r7, r3
 801d2a2:	d318      	bcc.n	801d2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801d2a4:	eb04 030a 	add.w	r3, r4, sl
 801d2a8:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801d2ac:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801d2b0:	f10a 0301 	add.w	r3, sl, #1
 801d2b4:	b29b      	uxth	r3, r3
 801d2b6:	9a05      	ldr	r2, [sp, #20]
 801d2b8:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801d2bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d2be:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d2c2:	7116      	strb	r6, [r2, #4]
 801d2c4:	f10a 0601 	add.w	r6, sl, #1
 801d2c8:	80d1      	strh	r1, [r2, #6]
 801d2ca:	7156      	strb	r6, [r2, #5]
 801d2cc:	9a05      	ldr	r2, [sp, #20]
 801d2ce:	3201      	adds	r2, #1
 801d2d0:	b292      	uxth	r2, r2
 801d2d2:	9205      	str	r2, [sp, #20]
 801d2d4:	e7e0      	b.n	801d298 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801d2d6:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801d2da:	463a      	mov	r2, r7
 801d2dc:	795b      	ldrb	r3, [r3, #5]
 801d2de:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801d2e2:	4426      	add	r6, r4
 801d2e4:	9919      	ldr	r1, [sp, #100]	; 0x64
 801d2e6:	eb01 0c06 	add.w	ip, r1, r6
 801d2ea:	f1bc 0f00 	cmp.w	ip, #0
 801d2ee:	dd07      	ble.n	801d300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801d2f0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801d2f4:	f892 c004 	ldrb.w	ip, [r2, #4]
 801d2f8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801d2fc:	88d2      	ldrh	r2, [r2, #6]
 801d2fe:	e7f1      	b.n	801d2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801d300:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801d304:	b29b      	uxth	r3, r3
 801d306:	e7c3      	b.n	801d290 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801d308:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d30a:	970c      	str	r7, [sp, #48]	; 0x30
 801d30c:	9a01      	ldr	r2, [sp, #4]
 801d30e:	46b4      	mov	ip, r6
 801d310:	461f      	mov	r7, r3
 801d312:	e78c      	b.n	801d22e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801d314:	1b7b      	subs	r3, r7, r5
 801d316:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d31a:	9201      	str	r2, [sp, #4]
 801d31c:	eb0c 0605 	add.w	r6, ip, r5
 801d320:	b29b      	uxth	r3, r3
 801d322:	b2b6      	uxth	r6, r6
 801d324:	2500      	movs	r5, #0
 801d326:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d328:	4282      	cmp	r2, r0
 801d32a:	d88b      	bhi.n	801d244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801d32c:	9a01      	ldr	r2, [sp, #4]
 801d32e:	e74b      	b.n	801d1c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801d330:	4297      	cmp	r7, r2
 801d332:	d332      	bcc.n	801d39a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801d334:	1abb      	subs	r3, r7, r2
 801d336:	b29b      	uxth	r3, r3
 801d338:	9208      	str	r2, [sp, #32]
 801d33a:	9501      	str	r5, [sp, #4]
 801d33c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d33e:	29ff      	cmp	r1, #255	; 0xff
 801d340:	9908      	ldr	r1, [sp, #32]
 801d342:	eb0c 0601 	add.w	r6, ip, r1
 801d346:	d135      	bne.n	801d3b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801d348:	f1a0 0e02 	sub.w	lr, r0, #2
 801d34c:	b2b6      	uxth	r6, r6
 801d34e:	45b4      	cmp	ip, r6
 801d350:	f040 808c 	bne.w	801d46c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801d354:	9908      	ldr	r1, [sp, #32]
 801d356:	4297      	cmp	r7, r2
 801d358:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d35c:	d3e2      	bcc.n	801d324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801d35e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801d360:	9904      	ldr	r1, [sp, #16]
 801d362:	8812      	ldrh	r2, [r2, #0]
 801d364:	1a52      	subs	r2, r2, r1
 801d366:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d36a:	9a07      	ldr	r2, [sp, #28]
 801d36c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801d36e:	3201      	adds	r2, #1
 801d370:	428a      	cmp	r2, r1
 801d372:	9207      	str	r2, [sp, #28]
 801d374:	f040 8087 	bne.w	801d486 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801d378:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801d37c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801d380:	9b04      	ldr	r3, [sp, #16]
 801d382:	1bed      	subs	r5, r5, r7
 801d384:	b2ad      	uxth	r5, r5
 801d386:	2d00      	cmp	r5, #0
 801d388:	bf08      	it	eq
 801d38a:	461a      	moveq	r2, r3
 801d38c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d38e:	bf18      	it	ne
 801d390:	2200      	movne	r2, #0
 801d392:	3301      	adds	r3, #1
 801d394:	930d      	str	r3, [sp, #52]	; 0x34
 801d396:	b292      	uxth	r2, r2
 801d398:	e70d      	b.n	801d1b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801d39a:	1bd1      	subs	r1, r2, r7
 801d39c:	b28b      	uxth	r3, r1
 801d39e:	9301      	str	r3, [sp, #4]
 801d3a0:	9708      	str	r7, [sp, #32]
 801d3a2:	462b      	mov	r3, r5
 801d3a4:	e7ca      	b.n	801d33c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801d3a6:	bf00      	nop
 801d3a8:	200137ec 	.word	0x200137ec
 801d3ac:	200137e6 	.word	0x200137e6
 801d3b0:	fffff7fb 	.word	0xfffff7fb
 801d3b4:	b2b6      	uxth	r6, r6
 801d3b6:	900b      	str	r0, [sp, #44]	; 0x2c
 801d3b8:	45b4      	cmp	ip, r6
 801d3ba:	d0cb      	beq.n	801d354 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801d3bc:	f10c 0101 	add.w	r1, ip, #1
 801d3c0:	44a4      	add	ip, r4
 801d3c2:	9117      	str	r1, [sp, #92]	; 0x5c
 801d3c4:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d3c8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d3ca:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d3ce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d3d0:	f8b1 c000 	ldrh.w	ip, [r1]
 801d3d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d3d6:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801d3da:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801d3de:	fb1e fe01 	smulbb	lr, lr, r1
 801d3e2:	ea4f 2825 	mov.w	r8, r5, asr #8
 801d3e6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d3e8:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d3ec:	fb08 e801 	mla	r8, r8, r1, lr
 801d3f0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801d3f4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d3f6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d3fa:	fb19 f901 	smulbb	r9, r9, r1
 801d3fe:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801d402:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d404:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d408:	fb0e 9e01 	mla	lr, lr, r1, r9
 801d40c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d410:	990e      	ldr	r1, [sp, #56]	; 0x38
 801d412:	fa5f fc8c 	uxtb.w	ip, ip
 801d416:	fb1c fc01 	smulbb	ip, ip, r1
 801d41a:	00ed      	lsls	r5, r5, #3
 801d41c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801d41e:	b2ed      	uxtb	r5, r5
 801d420:	fb05 c501 	mla	r5, r5, r1, ip
 801d424:	fa1f f888 	uxth.w	r8, r8
 801d428:	fa1f fe8e 	uxth.w	lr, lr
 801d42c:	b2ad      	uxth	r5, r5
 801d42e:	f108 0c01 	add.w	ip, r8, #1
 801d432:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801d436:	f10e 0901 	add.w	r9, lr, #1
 801d43a:	f105 0c01 	add.w	ip, r5, #1
 801d43e:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801d442:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801d446:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d44a:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d44e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d452:	ea4c 0808 	orr.w	r8, ip, r8
 801d456:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801d458:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801d45c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d460:	ea48 0809 	orr.w	r8, r8, r9
 801d464:	f821 8b02 	strh.w	r8, [r1], #2
 801d468:	910b      	str	r1, [sp, #44]	; 0x2c
 801d46a:	e7a5      	b.n	801d3b8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801d46c:	f10c 0801 	add.w	r8, ip, #1
 801d470:	44a4      	add	ip, r4
 801d472:	9911      	ldr	r1, [sp, #68]	; 0x44
 801d474:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801d478:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801d47c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801d480:	fa1f fc88 	uxth.w	ip, r8
 801d484:	e763      	b.n	801d34e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801d486:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d48a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801d48e:	1aad      	subs	r5, r5, r2
 801d490:	b2ad      	uxth	r5, r5
 801d492:	2d00      	cmp	r5, #0
 801d494:	bf18      	it	ne
 801d496:	2200      	movne	r2, #0
 801d498:	9201      	str	r2, [sp, #4]
 801d49a:	e744      	b.n	801d326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801d49c:	4b03      	ldr	r3, [pc, #12]	; (801d4ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801d49e:	6818      	ldr	r0, [r3, #0]
 801d4a0:	6803      	ldr	r3, [r0, #0]
 801d4a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4a4:	4798      	blx	r3
 801d4a6:	b01f      	add	sp, #124	; 0x7c
 801d4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4ac:	200137ec 	.word	0x200137ec

0801d4b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d4b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4b4:	b08f      	sub	sp, #60	; 0x3c
 801d4b6:	461c      	mov	r4, r3
 801d4b8:	9203      	str	r2, [sp, #12]
 801d4ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801d4be:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801d4c0:	9202      	str	r2, [sp, #8]
 801d4c2:	460f      	mov	r7, r1
 801d4c4:	2a00      	cmp	r2, #0
 801d4c6:	f000 8128 	beq.w	801d71a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801d4ca:	6820      	ldr	r0, [r4, #0]
 801d4cc:	6861      	ldr	r1, [r4, #4]
 801d4ce:	aa0a      	add	r2, sp, #40	; 0x28
 801d4d0:	c203      	stmia	r2!, {r0, r1}
 801d4d2:	6818      	ldr	r0, [r3, #0]
 801d4d4:	6859      	ldr	r1, [r3, #4]
 801d4d6:	aa0c      	add	r2, sp, #48	; 0x30
 801d4d8:	c203      	stmia	r2!, {r0, r1}
 801d4da:	a80a      	add	r0, sp, #40	; 0x28
 801d4dc:	f7f8 ffc4 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4e0:	4621      	mov	r1, r4
 801d4e2:	a80c      	add	r0, sp, #48	; 0x30
 801d4e4:	f7f9 f804 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4e8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801d4ec:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801d4f0:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801d4f4:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d4f8:	bfde      	ittt	le
 801d4fa:	b2b3      	uxthle	r3, r6
 801d4fc:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d500:	fb92 f3f3 	sdivle	r3, r2, r3
 801d504:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d508:	bfc8      	it	gt
 801d50a:	2301      	movgt	r3, #1
 801d50c:	fb92 f1f3 	sdiv	r1, r2, r3
 801d510:	fa1f fc81 	uxth.w	ip, r1
 801d514:	fb0c 2413 	mls	r4, ip, r3, r2
 801d518:	fb14 f406 	smulbb	r4, r4, r6
 801d51c:	441d      	add	r5, r3
 801d51e:	4404      	add	r4, r0
 801d520:	4661      	mov	r1, ip
 801d522:	3d01      	subs	r5, #1
 801d524:	b2a4      	uxth	r4, r4
 801d526:	fb95 f5f3 	sdiv	r5, r5, r3
 801d52a:	b121      	cbz	r1, 801d536 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801d52c:	9b03      	ldr	r3, [sp, #12]
 801d52e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d532:	ba1b      	rev	r3, r3
 801d534:	441f      	add	r7, r3
 801d536:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801d53a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801d53e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801d542:	4418      	add	r0, r3
 801d544:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801d548:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801d54c:	441a      	add	r2, r3
 801d54e:	4b74      	ldr	r3, [pc, #464]	; (801d720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d550:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801d554:	6818      	ldr	r0, [r3, #0]
 801d556:	6803      	ldr	r3, [r0, #0]
 801d558:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d55a:	4798      	blx	r3
 801d55c:	4a71      	ldr	r2, [pc, #452]	; (801d724 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d55e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801d562:	8813      	ldrh	r3, [r2, #0]
 801d564:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801d568:	9209      	str	r2, [sp, #36]	; 0x24
 801d56a:	fb03 c101 	mla	r1, r3, r1, ip
 801d56e:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d572:	4373      	muls	r3, r6
 801d574:	b2ad      	uxth	r5, r5
 801d576:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d57a:	00ad      	lsls	r5, r5, #2
 801d57c:	2c00      	cmp	r4, #0
 801d57e:	9304      	str	r3, [sp, #16]
 801d580:	f105 0304 	add.w	r3, r5, #4
 801d584:	9305      	str	r3, [sp, #20]
 801d586:	bf0c      	ite	eq
 801d588:	46c8      	moveq	r8, r9
 801d58a:	f04f 0800 	movne.w	r8, #0
 801d58e:	2300      	movs	r3, #0
 801d590:	fa1f f888 	uxth.w	r8, r8
 801d594:	9301      	str	r3, [sp, #4]
 801d596:	9a04      	ldr	r2, [sp, #16]
 801d598:	4282      	cmp	r2, r0
 801d59a:	f240 80b9 	bls.w	801d710 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d59e:	b95b      	cbnz	r3, 801d5b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801d5a0:	783a      	ldrb	r2, [r7, #0]
 801d5a2:	0993      	lsrs	r3, r2, #6
 801d5a4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d5a8:	9201      	str	r2, [sp, #4]
 801d5aa:	1e5a      	subs	r2, r3, #1
 801d5ac:	2a02      	cmp	r2, #2
 801d5ae:	bf8d      	iteet	hi
 801d5b0:	787b      	ldrbhi	r3, [r7, #1]
 801d5b2:	3701      	addls	r7, #1
 801d5b4:	b29b      	uxthls	r3, r3
 801d5b6:	3702      	addhi	r7, #2
 801d5b8:	b184      	cbz	r4, 801d5dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801d5ba:	429c      	cmp	r4, r3
 801d5bc:	bf95      	itete	ls
 801d5be:	1b1c      	subls	r4, r3, r4
 801d5c0:	1ae4      	subhi	r4, r4, r3
 801d5c2:	fa1f fa84 	uxthls.w	sl, r4
 801d5c6:	b2a4      	uxthhi	r4, r4
 801d5c8:	bf87      	ittee	hi
 801d5ca:	46c4      	movhi	ip, r8
 801d5cc:	f04f 0a00 	movhi.w	sl, #0
 801d5d0:	fa1f fc89 	uxthls.w	ip, r9
 801d5d4:	2400      	movls	r4, #0
 801d5d6:	4653      	mov	r3, sl
 801d5d8:	46e0      	mov	r8, ip
 801d5da:	e7dc      	b.n	801d596 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801d5dc:	2204      	movs	r2, #4
 801d5de:	4615      	mov	r5, r2
 801d5e0:	9905      	ldr	r1, [sp, #20]
 801d5e2:	9a01      	ldr	r2, [sp, #4]
 801d5e4:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d5e8:	9903      	ldr	r1, [sp, #12]
 801d5ea:	588a      	ldr	r2, [r1, r2]
 801d5ec:	4543      	cmp	r3, r8
 801d5ee:	bf27      	ittee	cs
 801d5f0:	eba3 0a08 	subcs.w	sl, r3, r8
 801d5f4:	46c6      	movcs	lr, r8
 801d5f6:	eba8 0c03 	subcc.w	ip, r8, r3
 801d5fa:	469e      	movcc	lr, r3
 801d5fc:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d600:	bf27      	ittee	cs
 801d602:	fa1f fa8a 	uxthcs.w	sl, sl
 801d606:	46a4      	movcs	ip, r4
 801d608:	fa1f fc8c 	uxthcc.w	ip, ip
 801d60c:	46a2      	movcc	sl, r4
 801d60e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d612:	2900      	cmp	r1, #0
 801d614:	d066      	beq.n	801d6e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d616:	29ff      	cmp	r1, #255	; 0xff
 801d618:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d61c:	d114      	bne.n	801d648 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d61e:	9d02      	ldr	r5, [sp, #8]
 801d620:	2dff      	cmp	r5, #255	; 0xff
 801d622:	d111      	bne.n	801d648 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d624:	0951      	lsrs	r1, r2, #5
 801d626:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801d62a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d62e:	f026 0607 	bic.w	r6, r6, #7
 801d632:	430e      	orrs	r6, r1
 801d634:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d638:	4316      	orrs	r6, r2
 801d63a:	b2b6      	uxth	r6, r6
 801d63c:	4486      	add	lr, r0
 801d63e:	4586      	cmp	lr, r0
 801d640:	d051      	beq.n	801d6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d642:	f820 6b02 	strh.w	r6, [r0], #2
 801d646:	e7fa      	b.n	801d63e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d648:	9d02      	ldr	r5, [sp, #8]
 801d64a:	4369      	muls	r1, r5
 801d64c:	1c4d      	adds	r5, r1, #1
 801d64e:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d652:	122d      	asrs	r5, r5, #8
 801d654:	ea6f 0b05 	mvn.w	fp, r5
 801d658:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d65c:	b2ad      	uxth	r5, r5
 801d65e:	b2f6      	uxtb	r6, r6
 801d660:	b2d2      	uxtb	r2, r2
 801d662:	fb11 f105 	smulbb	r1, r1, r5
 801d666:	fb16 f605 	smulbb	r6, r6, r5
 801d66a:	fb12 f205 	smulbb	r2, r2, r5
 801d66e:	b289      	uxth	r1, r1
 801d670:	b2b6      	uxth	r6, r6
 801d672:	b292      	uxth	r2, r2
 801d674:	9106      	str	r1, [sp, #24]
 801d676:	9607      	str	r6, [sp, #28]
 801d678:	9208      	str	r2, [sp, #32]
 801d67a:	4486      	add	lr, r0
 801d67c:	fa5f fb8b 	uxtb.w	fp, fp
 801d680:	4586      	cmp	lr, r0
 801d682:	d030      	beq.n	801d6e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d684:	8802      	ldrh	r2, [r0, #0]
 801d686:	9906      	ldr	r1, [sp, #24]
 801d688:	1216      	asrs	r6, r2, #8
 801d68a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d68e:	10d5      	asrs	r5, r2, #3
 801d690:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d694:	fb06 160b 	mla	r6, r6, fp, r1
 801d698:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d69c:	9907      	ldr	r1, [sp, #28]
 801d69e:	00d2      	lsls	r2, r2, #3
 801d6a0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d6a4:	fb05 150b 	mla	r5, r5, fp, r1
 801d6a8:	b2d2      	uxtb	r2, r2
 801d6aa:	9908      	ldr	r1, [sp, #32]
 801d6ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d6b0:	b2b6      	uxth	r6, r6
 801d6b2:	fb02 120b 	mla	r2, r2, fp, r1
 801d6b6:	b292      	uxth	r2, r2
 801d6b8:	1c71      	adds	r1, r6, #1
 801d6ba:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d6be:	1c51      	adds	r1, r2, #1
 801d6c0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d6c4:	b2ad      	uxth	r5, r5
 801d6c6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d6ca:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801d6ce:	4316      	orrs	r6, r2
 801d6d0:	1c6a      	adds	r2, r5, #1
 801d6d2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d6d6:	096d      	lsrs	r5, r5, #5
 801d6d8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d6dc:	432e      	orrs	r6, r5
 801d6de:	f820 6b02 	strh.w	r6, [r0], #2
 801d6e2:	e7cd      	b.n	801d680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d6e4:	4470      	add	r0, lr
 801d6e6:	4543      	cmp	r3, r8
 801d6e8:	f4ff af75 	bcc.w	801d5d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d6ec:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801d6f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d6f2:	fa1f fc89 	uxth.w	ip, r9
 801d6f6:	eba4 040c 	sub.w	r4, r4, ip
 801d6fa:	881b      	ldrh	r3, [r3, #0]
 801d6fc:	b2a4      	uxth	r4, r4
 801d6fe:	2c00      	cmp	r4, #0
 801d700:	eba3 0309 	sub.w	r3, r3, r9
 801d704:	bf18      	it	ne
 801d706:	f04f 0c00 	movne.w	ip, #0
 801d70a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d70e:	e762      	b.n	801d5d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801d710:	4b03      	ldr	r3, [pc, #12]	; (801d720 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d712:	6818      	ldr	r0, [r3, #0]
 801d714:	6803      	ldr	r3, [r0, #0]
 801d716:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d718:	4798      	blx	r3
 801d71a:	b00f      	add	sp, #60	; 0x3c
 801d71c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d720:	200137ec 	.word	0x200137ec
 801d724:	200137e6 	.word	0x200137e6

0801d728 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d72c:	b093      	sub	sp, #76	; 0x4c
 801d72e:	461c      	mov	r4, r3
 801d730:	9205      	str	r2, [sp, #20]
 801d732:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801d736:	9101      	str	r1, [sp, #4]
 801d738:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d73a:	9202      	str	r2, [sp, #8]
 801d73c:	2a00      	cmp	r2, #0
 801d73e:	f000 812c 	beq.w	801d99a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801d742:	6820      	ldr	r0, [r4, #0]
 801d744:	6861      	ldr	r1, [r4, #4]
 801d746:	aa0e      	add	r2, sp, #56	; 0x38
 801d748:	c203      	stmia	r2!, {r0, r1}
 801d74a:	6818      	ldr	r0, [r3, #0]
 801d74c:	6859      	ldr	r1, [r3, #4]
 801d74e:	aa10      	add	r2, sp, #64	; 0x40
 801d750:	c203      	stmia	r2!, {r0, r1}
 801d752:	a80e      	add	r0, sp, #56	; 0x38
 801d754:	f7f8 fe88 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d758:	4621      	mov	r1, r4
 801d75a:	a810      	add	r0, sp, #64	; 0x40
 801d75c:	f7f8 fec8 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d760:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d764:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801d768:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801d76c:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801d770:	bfde      	ittt	le
 801d772:	b2b3      	uxthle	r3, r6
 801d774:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801d778:	fb92 f3f3 	sdivle	r3, r2, r3
 801d77c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d780:	bfc8      	it	gt
 801d782:	2301      	movgt	r3, #1
 801d784:	fb92 f1f3 	sdiv	r1, r2, r3
 801d788:	fa1f fc81 	uxth.w	ip, r1
 801d78c:	fb0c 2413 	mls	r4, ip, r3, r2
 801d790:	fb14 f406 	smulbb	r4, r4, r6
 801d794:	441d      	add	r5, r3
 801d796:	4404      	add	r4, r0
 801d798:	4661      	mov	r1, ip
 801d79a:	3d01      	subs	r5, #1
 801d79c:	b2a4      	uxth	r4, r4
 801d79e:	fb95 f5f3 	sdiv	r5, r5, r3
 801d7a2:	b131      	cbz	r1, 801d7b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801d7a4:	9b05      	ldr	r3, [sp, #20]
 801d7a6:	9901      	ldr	r1, [sp, #4]
 801d7a8:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d7ac:	ba1b      	rev	r3, r3
 801d7ae:	4419      	add	r1, r3
 801d7b0:	9101      	str	r1, [sp, #4]
 801d7b2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d7b6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801d7ba:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801d7be:	4418      	add	r0, r3
 801d7c0:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801d7c4:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801d7c8:	441a      	add	r2, r3
 801d7ca:	4b75      	ldr	r3, [pc, #468]	; (801d9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d7cc:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801d7d0:	6818      	ldr	r0, [r3, #0]
 801d7d2:	6803      	ldr	r3, [r0, #0]
 801d7d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d7d6:	4798      	blx	r3
 801d7d8:	4972      	ldr	r1, [pc, #456]	; (801d9a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d7da:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801d7de:	880b      	ldrh	r3, [r1, #0]
 801d7e0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d7e4:	910d      	str	r1, [sp, #52]	; 0x34
 801d7e6:	fb03 c202 	mla	r2, r3, r2, ip
 801d7ea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d7ee:	4373      	muls	r3, r6
 801d7f0:	b2ad      	uxth	r5, r5
 801d7f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d7f6:	00ad      	lsls	r5, r5, #2
 801d7f8:	9308      	str	r3, [sp, #32]
 801d7fa:	1d2b      	adds	r3, r5, #4
 801d7fc:	9309      	str	r3, [sp, #36]	; 0x24
 801d7fe:	9b02      	ldr	r3, [sp, #8]
 801d800:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d804:	9106      	str	r1, [sp, #24]
 801d806:	43da      	mvns	r2, r3
 801d808:	2c00      	cmp	r4, #0
 801d80a:	bf0c      	ite	eq
 801d80c:	46dc      	moveq	ip, fp
 801d80e:	f04f 0c00 	movne.w	ip, #0
 801d812:	2300      	movs	r3, #0
 801d814:	b2d2      	uxtb	r2, r2
 801d816:	fa1f fc8c 	uxth.w	ip, ip
 801d81a:	9303      	str	r3, [sp, #12]
 801d81c:	9207      	str	r2, [sp, #28]
 801d81e:	9a08      	ldr	r2, [sp, #32]
 801d820:	4282      	cmp	r2, r0
 801d822:	f240 80b5 	bls.w	801d990 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801d826:	b963      	cbnz	r3, 801d842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d828:	9b01      	ldr	r3, [sp, #4]
 801d82a:	781a      	ldrb	r2, [r3, #0]
 801d82c:	0993      	lsrs	r3, r2, #6
 801d82e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801d832:	9203      	str	r2, [sp, #12]
 801d834:	1e5a      	subs	r2, r3, #1
 801d836:	2a02      	cmp	r2, #2
 801d838:	d815      	bhi.n	801d866 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801d83a:	9a01      	ldr	r2, [sp, #4]
 801d83c:	3201      	adds	r2, #1
 801d83e:	9201      	str	r2, [sp, #4]
 801d840:	b29b      	uxth	r3, r3
 801d842:	b1b4      	cbz	r4, 801d872 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801d844:	429c      	cmp	r4, r3
 801d846:	bf95      	itete	ls
 801d848:	1b1c      	subls	r4, r3, r4
 801d84a:	1ae4      	subhi	r4, r4, r3
 801d84c:	fa1f f884 	uxthls.w	r8, r4
 801d850:	b2a4      	uxthhi	r4, r4
 801d852:	bf87      	ittee	hi
 801d854:	4666      	movhi	r6, ip
 801d856:	f04f 0800 	movhi.w	r8, #0
 801d85a:	fa1f f68b 	uxthls.w	r6, fp
 801d85e:	2400      	movls	r4, #0
 801d860:	4643      	mov	r3, r8
 801d862:	46b4      	mov	ip, r6
 801d864:	e7db      	b.n	801d81e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801d866:	9a01      	ldr	r2, [sp, #4]
 801d868:	9b01      	ldr	r3, [sp, #4]
 801d86a:	3202      	adds	r2, #2
 801d86c:	785b      	ldrb	r3, [r3, #1]
 801d86e:	9201      	str	r2, [sp, #4]
 801d870:	e7e7      	b.n	801d842 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801d872:	2203      	movs	r2, #3
 801d874:	4615      	mov	r5, r2
 801d876:	9909      	ldr	r1, [sp, #36]	; 0x24
 801d878:	9a03      	ldr	r2, [sp, #12]
 801d87a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d87e:	9905      	ldr	r1, [sp, #20]
 801d880:	4563      	cmp	r3, ip
 801d882:	eb01 0502 	add.w	r5, r1, r2
 801d886:	9902      	ldr	r1, [sp, #8]
 801d888:	bf29      	itett	cs
 801d88a:	eba3 080c 	subcs.w	r8, r3, ip
 801d88e:	ebac 0603 	subcc.w	r6, ip, r3
 801d892:	fa1f f888 	uxthcs.w	r8, r8
 801d896:	46e1      	movcs	r9, ip
 801d898:	bf2f      	iteee	cs
 801d89a:	4626      	movcs	r6, r4
 801d89c:	b2b6      	uxthcc	r6, r6
 801d89e:	4699      	movcc	r9, r3
 801d8a0:	46a0      	movcc	r8, r4
 801d8a2:	29ff      	cmp	r1, #255	; 0xff
 801d8a4:	d04a      	beq.n	801d93c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801d8a6:	9f06      	ldr	r7, [sp, #24]
 801d8a8:	78a9      	ldrb	r1, [r5, #2]
 801d8aa:	9004      	str	r0, [sp, #16]
 801d8ac:	4379      	muls	r1, r7
 801d8ae:	910a      	str	r1, [sp, #40]	; 0x28
 801d8b0:	7869      	ldrb	r1, [r5, #1]
 801d8b2:	4379      	muls	r1, r7
 801d8b4:	910b      	str	r1, [sp, #44]	; 0x2c
 801d8b6:	9905      	ldr	r1, [sp, #20]
 801d8b8:	5c8a      	ldrb	r2, [r1, r2]
 801d8ba:	437a      	muls	r2, r7
 801d8bc:	920c      	str	r2, [sp, #48]	; 0x30
 801d8be:	46ca      	mov	sl, r9
 801d8c0:	f1ba 0f00 	cmp.w	sl, #0
 801d8c4:	d03d      	beq.n	801d942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801d8c6:	9a04      	ldr	r2, [sp, #16]
 801d8c8:	9f07      	ldr	r7, [sp, #28]
 801d8ca:	8812      	ldrh	r2, [r2, #0]
 801d8cc:	1215      	asrs	r5, r2, #8
 801d8ce:	46be      	mov	lr, r7
 801d8d0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d8d4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801d8d6:	10d1      	asrs	r1, r2, #3
 801d8d8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d8dc:	fb05 750e 	mla	r5, r5, lr, r7
 801d8e0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d8e4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d8e6:	00d2      	lsls	r2, r2, #3
 801d8e8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d8ec:	fb01 710e 	mla	r1, r1, lr, r7
 801d8f0:	b2d2      	uxtb	r2, r2
 801d8f2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801d8f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d8f8:	b2ad      	uxth	r5, r5
 801d8fa:	fb02 720e 	mla	r2, r2, lr, r7
 801d8fe:	b292      	uxth	r2, r2
 801d900:	f105 0e01 	add.w	lr, r5, #1
 801d904:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d908:	f102 0e01 	add.w	lr, r2, #1
 801d90c:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d910:	b289      	uxth	r1, r1
 801d912:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d916:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d91a:	4315      	orrs	r5, r2
 801d91c:	1c4a      	adds	r2, r1, #1
 801d91e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d922:	0949      	lsrs	r1, r1, #5
 801d924:	9a04      	ldr	r2, [sp, #16]
 801d926:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d92a:	430d      	orrs	r5, r1
 801d92c:	f822 5b02 	strh.w	r5, [r2], #2
 801d930:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d934:	9204      	str	r2, [sp, #16]
 801d936:	fa1f fa8a 	uxth.w	sl, sl
 801d93a:	e7c1      	b.n	801d8c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801d93c:	4649      	mov	r1, r9
 801d93e:	4686      	mov	lr, r0
 801d940:	b999      	cbnz	r1, 801d96a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801d942:	4563      	cmp	r3, ip
 801d944:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d948:	d38a      	bcc.n	801d860 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d94a:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801d94e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d950:	fa1f f68b 	uxth.w	r6, fp
 801d954:	1ba4      	subs	r4, r4, r6
 801d956:	881b      	ldrh	r3, [r3, #0]
 801d958:	b2a4      	uxth	r4, r4
 801d95a:	2c00      	cmp	r4, #0
 801d95c:	eba3 030b 	sub.w	r3, r3, fp
 801d960:	bf18      	it	ne
 801d962:	2600      	movne	r6, #0
 801d964:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d968:	e77a      	b.n	801d860 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801d96a:	78aa      	ldrb	r2, [r5, #2]
 801d96c:	4f0e      	ldr	r7, [pc, #56]	; (801d9a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d96e:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d972:	786a      	ldrb	r2, [r5, #1]
 801d974:	00d2      	lsls	r2, r2, #3
 801d976:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d97a:	ea4a 0202 	orr.w	r2, sl, r2
 801d97e:	f895 a000 	ldrb.w	sl, [r5]
 801d982:	3901      	subs	r1, #1
 801d984:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d988:	f82e 2b02 	strh.w	r2, [lr], #2
 801d98c:	b289      	uxth	r1, r1
 801d98e:	e7d7      	b.n	801d940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d990:	4b03      	ldr	r3, [pc, #12]	; (801d9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801d992:	6818      	ldr	r0, [r3, #0]
 801d994:	6803      	ldr	r3, [r0, #0]
 801d996:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d998:	4798      	blx	r3
 801d99a:	b013      	add	sp, #76	; 0x4c
 801d99c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9a0:	200137ec 	.word	0x200137ec
 801d9a4:	200137e6 	.word	0x200137e6
 801d9a8:	fffff800 	.word	0xfffff800

0801d9ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d9ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9b0:	b09d      	sub	sp, #116	; 0x74
 801d9b2:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801d9b6:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801d9ba:	920e      	str	r2, [sp, #56]	; 0x38
 801d9bc:	461c      	mov	r4, r3
 801d9be:	4683      	mov	fp, r0
 801d9c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801d9c2:	2a00      	cmp	r2, #0
 801d9c4:	f000 81e0 	beq.w	801dd88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801d9c8:	6820      	ldr	r0, [r4, #0]
 801d9ca:	6861      	ldr	r1, [r4, #4]
 801d9cc:	aa18      	add	r2, sp, #96	; 0x60
 801d9ce:	c203      	stmia	r2!, {r0, r1}
 801d9d0:	6818      	ldr	r0, [r3, #0]
 801d9d2:	6859      	ldr	r1, [r3, #4]
 801d9d4:	aa1a      	add	r2, sp, #104	; 0x68
 801d9d6:	c203      	stmia	r2!, {r0, r1}
 801d9d8:	a818      	add	r0, sp, #96	; 0x60
 801d9da:	f7f8 fd45 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d9de:	4621      	mov	r1, r4
 801d9e0:	a81a      	add	r0, sp, #104	; 0x68
 801d9e2:	f7f8 fd85 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d9e6:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801d9ea:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801d9ee:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801d9f2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d9f6:	bfd7      	itett	le
 801d9f8:	b29a      	uxthle	r2, r3
 801d9fa:	2201      	movgt	r2, #1
 801d9fc:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801da00:	fb91 f2f2 	sdivle	r2, r1, r2
 801da04:	9202      	str	r2, [sp, #8]
 801da06:	9802      	ldr	r0, [sp, #8]
 801da08:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801da0c:	fb92 f0f0 	sdiv	r0, r2, r0
 801da10:	b280      	uxth	r0, r0
 801da12:	900f      	str	r0, [sp, #60]	; 0x3c
 801da14:	9902      	ldr	r1, [sp, #8]
 801da16:	9802      	ldr	r0, [sp, #8]
 801da18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801da1a:	440c      	add	r4, r1
 801da1c:	fb05 2510 	mls	r5, r5, r0, r2
 801da20:	fb15 f503 	smulbb	r5, r5, r3
 801da24:	3c01      	subs	r4, #1
 801da26:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801da2a:	fb94 f4f1 	sdiv	r4, r4, r1
 801da2e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801da32:	440d      	add	r5, r1
 801da34:	4419      	add	r1, r3
 801da36:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801da3a:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801da3e:	441a      	add	r2, r3
 801da40:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801da44:	9306      	str	r3, [sp, #24]
 801da46:	4bb3      	ldr	r3, [pc, #716]	; (801dd14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801da48:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801da4c:	6818      	ldr	r0, [r3, #0]
 801da4e:	6803      	ldr	r3, [r0, #0]
 801da50:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801da52:	4798      	blx	r3
 801da54:	4bb0      	ldr	r3, [pc, #704]	; (801dd18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801da56:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801da5a:	881a      	ldrh	r2, [r3, #0]
 801da5c:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801da60:	9316      	str	r3, [sp, #88]	; 0x58
 801da62:	fb02 7101 	mla	r1, r2, r1, r7
 801da66:	3401      	adds	r4, #1
 801da68:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801da6c:	b2a4      	uxth	r4, r4
 801da6e:	4356      	muls	r6, r2
 801da70:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801da74:	00a4      	lsls	r4, r4, #2
 801da76:	920a      	str	r2, [sp, #40]	; 0x28
 801da78:	1d22      	adds	r2, r4, #4
 801da7a:	b2ad      	uxth	r5, r5
 801da7c:	9213      	str	r2, [sp, #76]	; 0x4c
 801da7e:	4ba7      	ldr	r3, [pc, #668]	; (801dd1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801da80:	9a06      	ldr	r2, [sp, #24]
 801da82:	2d00      	cmp	r5, #0
 801da84:	bf0c      	ite	eq
 801da86:	4611      	moveq	r1, r2
 801da88:	2100      	movne	r1, #0
 801da8a:	2200      	movs	r2, #0
 801da8c:	eba3 030b 	sub.w	r3, r3, fp
 801da90:	b289      	uxth	r1, r1
 801da92:	920d      	str	r2, [sp, #52]	; 0x34
 801da94:	9317      	str	r3, [sp, #92]	; 0x5c
 801da96:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801da98:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801da9a:	fa12 f383 	uxtah	r3, r2, r3
 801da9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801daa0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801daa4:	3304      	adds	r3, #4
 801daa6:	9308      	str	r3, [sp, #32]
 801daa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801daaa:	4543      	cmp	r3, r8
 801daac:	f240 8167 	bls.w	801dd7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801dab0:	9a02      	ldr	r2, [sp, #8]
 801dab2:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801dab6:	fbb5 f3f3 	udiv	r3, r5, r3
 801daba:	1ad3      	subs	r3, r2, r3
 801dabc:	b29b      	uxth	r3, r3
 801dabe:	9314      	str	r3, [sp, #80]	; 0x50
 801dac0:	9b08      	ldr	r3, [sp, #32]
 801dac2:	9808      	ldr	r0, [sp, #32]
 801dac4:	785a      	ldrb	r2, [r3, #1]
 801dac6:	789b      	ldrb	r3, [r3, #2]
 801dac8:	7800      	ldrb	r0, [r0, #0]
 801daca:	9010      	str	r0, [sp, #64]	; 0x40
 801dacc:	021b      	lsls	r3, r3, #8
 801dace:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dad2:	9a08      	ldr	r2, [sp, #32]
 801dad4:	78d2      	ldrb	r2, [r2, #3]
 801dad6:	4313      	orrs	r3, r2
 801dad8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801dada:	3001      	adds	r0, #1
 801dadc:	441a      	add	r2, r3
 801dade:	9007      	str	r0, [sp, #28]
 801dae0:	1c50      	adds	r0, r2, #1
 801dae2:	9005      	str	r0, [sp, #20]
 801dae4:	7852      	ldrb	r2, [r2, #1]
 801dae6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dae8:	0212      	lsls	r2, r2, #8
 801daea:	5cc3      	ldrb	r3, [r0, r3]
 801daec:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801daf0:	431a      	orrs	r2, r3
 801daf2:	b293      	uxth	r3, r2
 801daf4:	930b      	str	r3, [sp, #44]	; 0x2c
 801daf6:	2300      	movs	r3, #0
 801daf8:	9309      	str	r3, [sp, #36]	; 0x24
 801dafa:	2301      	movs	r3, #1
 801dafc:	9301      	str	r3, [sp, #4]
 801dafe:	9304      	str	r3, [sp, #16]
 801db00:	2300      	movs	r3, #0
 801db02:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801db06:	9303      	str	r3, [sp, #12]
 801db08:	f04f 0e01 	mov.w	lr, #1
 801db0c:	2d00      	cmp	r5, #0
 801db0e:	d07c      	beq.n	801dc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801db10:	45ae      	cmp	lr, r5
 801db12:	d26b      	bcs.n	801dbec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801db14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801db16:	eba5 050e 	sub.w	r5, r5, lr
 801db1a:	4543      	cmp	r3, r8
 801db1c:	b2ad      	uxth	r5, r5
 801db1e:	460c      	mov	r4, r1
 801db20:	d802      	bhi.n	801db28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801db22:	e070      	b.n	801dc06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801db24:	2b00      	cmp	r3, #0
 801db26:	d15c      	bne.n	801dbe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801db28:	9b05      	ldr	r3, [sp, #20]
 801db2a:	9a04      	ldr	r2, [sp, #16]
 801db2c:	785b      	ldrb	r3, [r3, #1]
 801db2e:	9904      	ldr	r1, [sp, #16]
 801db30:	f1c2 0207 	rsb	r2, r2, #7
 801db34:	4093      	lsls	r3, r2
 801db36:	005b      	lsls	r3, r3, #1
 801db38:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801db3c:	9b05      	ldr	r3, [sp, #20]
 801db3e:	781b      	ldrb	r3, [r3, #0]
 801db40:	410b      	asrs	r3, r1
 801db42:	3101      	adds	r1, #1
 801db44:	b2c9      	uxtb	r1, r1
 801db46:	2908      	cmp	r1, #8
 801db48:	9104      	str	r1, [sp, #16]
 801db4a:	9905      	ldr	r1, [sp, #20]
 801db4c:	bf0a      	itet	eq
 801db4e:	3102      	addeq	r1, #2
 801db50:	3101      	addne	r1, #1
 801db52:	9105      	streq	r1, [sp, #20]
 801db54:	b2db      	uxtb	r3, r3
 801db56:	bf0a      	itet	eq
 801db58:	2100      	moveq	r1, #0
 801db5a:	9105      	strne	r1, [sp, #20]
 801db5c:	9104      	streq	r1, [sp, #16]
 801db5e:	4313      	orrs	r3, r2
 801db60:	9910      	ldr	r1, [sp, #64]	; 0x40
 801db62:	b29a      	uxth	r2, r3
 801db64:	4291      	cmp	r1, r2
 801db66:	d30a      	bcc.n	801db7e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801db68:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801db6c:	2301      	movs	r3, #1
 801db6e:	9907      	ldr	r1, [sp, #28]
 801db70:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801db74:	d30f      	bcc.n	801db96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801db76:	2100      	movs	r1, #0
 801db78:	9301      	str	r3, [sp, #4]
 801db7a:	9103      	str	r1, [sp, #12]
 801db7c:	e032      	b.n	801dbe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801db7e:	9b07      	ldr	r3, [sp, #28]
 801db80:	429a      	cmp	r2, r3
 801db82:	d318      	bcc.n	801dbb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801db84:	9b01      	ldr	r3, [sp, #4]
 801db86:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801db8a:	445b      	add	r3, fp
 801db8c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801db90:	9b01      	ldr	r3, [sp, #4]
 801db92:	3301      	adds	r3, #1
 801db94:	b29b      	uxth	r3, r3
 801db96:	9907      	ldr	r1, [sp, #28]
 801db98:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801db9c:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801dba0:	7108      	strb	r0, [r1, #4]
 801dba2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801dba4:	80c8      	strh	r0, [r1, #6]
 801dba6:	9801      	ldr	r0, [sp, #4]
 801dba8:	3001      	adds	r0, #1
 801dbaa:	7148      	strb	r0, [r1, #5]
 801dbac:	9907      	ldr	r1, [sp, #28]
 801dbae:	3101      	adds	r1, #1
 801dbb0:	b289      	uxth	r1, r1
 801dbb2:	9107      	str	r1, [sp, #28]
 801dbb4:	e7df      	b.n	801db76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801dbb6:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801dbba:	4611      	mov	r1, r2
 801dbbc:	795b      	ldrb	r3, [r3, #5]
 801dbbe:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801dbc2:	4458      	add	r0, fp
 801dbc4:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801dbc6:	4406      	add	r6, r0
 801dbc8:	2e00      	cmp	r6, #0
 801dbca:	dd06      	ble.n	801dbda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801dbcc:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801dbd0:	790e      	ldrb	r6, [r1, #4]
 801dbd2:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801dbd6:	88c9      	ldrh	r1, [r1, #6]
 801dbd8:	e7f4      	b.n	801dbc4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801dbda:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801dbde:	b29b      	uxth	r3, r3
 801dbe0:	e7c5      	b.n	801db6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801dbe2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dbe4:	920b      	str	r2, [sp, #44]	; 0x2c
 801dbe6:	4621      	mov	r1, r4
 801dbe8:	469e      	mov	lr, r3
 801dbea:	e78f      	b.n	801db0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801dbec:	9a03      	ldr	r2, [sp, #12]
 801dbee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801dbf2:	442a      	add	r2, r5
 801dbf4:	ebae 0305 	sub.w	r3, lr, r5
 801dbf8:	b292      	uxth	r2, r2
 801dbfa:	b29b      	uxth	r3, r3
 801dbfc:	9203      	str	r2, [sp, #12]
 801dbfe:	2500      	movs	r5, #0
 801dc00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dc02:	4542      	cmp	r2, r8
 801dc04:	d88e      	bhi.n	801db24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801dc06:	4621      	mov	r1, r4
 801dc08:	e74e      	b.n	801daa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801dc0a:	458e      	cmp	lr, r1
 801dc0c:	bf29      	itett	cs
 801dc0e:	ebae 0301 	subcs.w	r3, lr, r1
 801dc12:	eba1 040e 	subcc.w	r4, r1, lr
 801dc16:	b29b      	uxthcs	r3, r3
 801dc18:	910c      	strcs	r1, [sp, #48]	; 0x30
 801dc1a:	bf2f      	iteee	cs
 801dc1c:	462c      	movcs	r4, r5
 801dc1e:	b2a4      	uxthcc	r4, r4
 801dc20:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801dc24:	462b      	movcc	r3, r5
 801dc26:	f04f 0900 	mov.w	r9, #0
 801dc2a:	9a03      	ldr	r2, [sp, #12]
 801dc2c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801dc2e:	444a      	add	r2, r9
 801dc30:	4548      	cmp	r0, r9
 801dc32:	b292      	uxth	r2, r2
 801dc34:	d074      	beq.n	801dd20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801dc36:	445a      	add	r2, fp
 801dc38:	2004      	movs	r0, #4
 801dc3a:	4605      	mov	r5, r0
 801dc3c:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801dc40:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801dc42:	fb15 0202 	smlabb	r2, r5, r2, r0
 801dc46:	9812      	ldr	r0, [sp, #72]	; 0x48
 801dc48:	5880      	ldr	r0, [r0, r2]
 801dc4a:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801dc4e:	d014      	beq.n	801dc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801dc50:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801dc54:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801dc58:	d112      	bne.n	801dc80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801dc5a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dc5c:	2aff      	cmp	r2, #255	; 0xff
 801dc5e:	d10f      	bne.n	801dc80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801dc60:	0942      	lsrs	r2, r0, #5
 801dc62:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801dc66:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc6a:	f025 0507 	bic.w	r5, r5, #7
 801dc6e:	4315      	orrs	r5, r2
 801dc70:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801dc74:	4305      	orrs	r5, r0
 801dc76:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801dc7a:	f109 0901 	add.w	r9, r9, #1
 801dc7e:	e7d4      	b.n	801dc2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801dc80:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801dc84:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801dc88:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801dc8c:	9215      	str	r2, [sp, #84]	; 0x54
 801dc8e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801dc90:	fb02 fa0a 	mul.w	sl, r2, sl
 801dc94:	f10a 0201 	add.w	r2, sl, #1
 801dc98:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801dc9c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801dca0:	1212      	asrs	r2, r2, #8
 801dca2:	fa1f fa82 	uxth.w	sl, r2
 801dca6:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801dcaa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801dcae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801dcb2:	43d2      	mvns	r2, r2
 801dcb4:	b2d2      	uxtb	r2, r2
 801dcb6:	fb16 f60a 	smulbb	r6, r6, sl
 801dcba:	fa5f fc8c 	uxtb.w	ip, ip
 801dcbe:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801dcc2:	b2c0      	uxtb	r0, r0
 801dcc4:	fb07 6702 	mla	r7, r7, r2, r6
 801dcc8:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801dccc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801dcce:	fb10 f00a 	smulbb	r0, r0, sl
 801dcd2:	fb0c 0002 	mla	r0, ip, r2, r0
 801dcd6:	b2ed      	uxtb	r5, r5
 801dcd8:	b2bf      	uxth	r7, r7
 801dcda:	fb15 f50a 	smulbb	r5, r5, sl
 801dcde:	b280      	uxth	r0, r0
 801dce0:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dce4:	fb06 5602 	mla	r6, r6, r2, r5
 801dce8:	1c7a      	adds	r2, r7, #1
 801dcea:	1c45      	adds	r5, r0, #1
 801dcec:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801dcf0:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801dcf4:	b2b6      	uxth	r6, r6
 801dcf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801dcfa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801dcfe:	432f      	orrs	r7, r5
 801dd00:	1c75      	adds	r5, r6, #1
 801dd02:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801dd06:	096d      	lsrs	r5, r5, #5
 801dd08:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801dd0c:	432f      	orrs	r7, r5
 801dd0e:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801dd12:	e7b2      	b.n	801dc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801dd14:	200137ec 	.word	0x200137ec
 801dd18:	200137e6 	.word	0x200137e6
 801dd1c:	fffff7fb 	.word	0xfffff7fb
 801dd20:	9203      	str	r2, [sp, #12]
 801dd22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dd24:	458e      	cmp	lr, r1
 801dd26:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801dd2a:	f4ff af68 	bcc.w	801dbfe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801dd2e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801dd30:	9906      	ldr	r1, [sp, #24]
 801dd32:	8812      	ldrh	r2, [r2, #0]
 801dd34:	1a52      	subs	r2, r2, r1
 801dd36:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801dd3a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dd3c:	9914      	ldr	r1, [sp, #80]	; 0x50
 801dd3e:	3201      	adds	r2, #1
 801dd40:	428a      	cmp	r2, r1
 801dd42:	9209      	str	r2, [sp, #36]	; 0x24
 801dd44:	d111      	bne.n	801dd6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801dd46:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801dd4a:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801dd4e:	9b06      	ldr	r3, [sp, #24]
 801dd50:	eba5 0509 	sub.w	r5, r5, r9
 801dd54:	b2ad      	uxth	r5, r5
 801dd56:	2d00      	cmp	r5, #0
 801dd58:	bf08      	it	eq
 801dd5a:	4619      	moveq	r1, r3
 801dd5c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dd5e:	bf18      	it	ne
 801dd60:	2100      	movne	r1, #0
 801dd62:	3301      	adds	r3, #1
 801dd64:	930d      	str	r3, [sp, #52]	; 0x34
 801dd66:	b289      	uxth	r1, r1
 801dd68:	e695      	b.n	801da96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801dd6a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801dd6e:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801dd72:	1b2d      	subs	r5, r5, r4
 801dd74:	b2ad      	uxth	r5, r5
 801dd76:	2d00      	cmp	r5, #0
 801dd78:	bf18      	it	ne
 801dd7a:	2400      	movne	r4, #0
 801dd7c:	e740      	b.n	801dc00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801dd7e:	4b04      	ldr	r3, [pc, #16]	; (801dd90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801dd80:	6818      	ldr	r0, [r3, #0]
 801dd82:	6803      	ldr	r3, [r0, #0]
 801dd84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801dd86:	4798      	blx	r3
 801dd88:	b01d      	add	sp, #116	; 0x74
 801dd8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd8e:	bf00      	nop
 801dd90:	200137ec 	.word	0x200137ec

0801dd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801dd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd98:	b09f      	sub	sp, #124	; 0x7c
 801dd9a:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801dd9e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801dda2:	920a      	str	r2, [sp, #40]	; 0x28
 801dda4:	461d      	mov	r5, r3
 801dda6:	4604      	mov	r4, r0
 801dda8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ddaa:	2a00      	cmp	r2, #0
 801ddac:	f000 81fa 	beq.w	801e1a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801ddb0:	6828      	ldr	r0, [r5, #0]
 801ddb2:	6869      	ldr	r1, [r5, #4]
 801ddb4:	aa1a      	add	r2, sp, #104	; 0x68
 801ddb6:	c203      	stmia	r2!, {r0, r1}
 801ddb8:	6818      	ldr	r0, [r3, #0]
 801ddba:	6859      	ldr	r1, [r3, #4]
 801ddbc:	aa1c      	add	r2, sp, #112	; 0x70
 801ddbe:	c203      	stmia	r2!, {r0, r1}
 801ddc0:	a81a      	add	r0, sp, #104	; 0x68
 801ddc2:	f7f8 fb51 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddc6:	4629      	mov	r1, r5
 801ddc8:	a81c      	add	r0, sp, #112	; 0x70
 801ddca:	f7f8 fb91 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddce:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801ddd2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801ddd6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801ddda:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801ddde:	bfd7      	itett	le
 801dde0:	b29a      	uxthle	r2, r3
 801dde2:	2201      	movgt	r2, #1
 801dde4:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801dde8:	fb91 f2f2 	sdivle	r2, r1, r2
 801ddec:	9201      	str	r2, [sp, #4]
 801ddee:	9801      	ldr	r0, [sp, #4]
 801ddf0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801ddf4:	fb92 f0f0 	sdiv	r0, r2, r0
 801ddf8:	b280      	uxth	r0, r0
 801ddfa:	9010      	str	r0, [sp, #64]	; 0x40
 801ddfc:	9901      	ldr	r1, [sp, #4]
 801ddfe:	9801      	ldr	r0, [sp, #4]
 801de00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801de02:	440e      	add	r6, r1
 801de04:	fb05 2510 	mls	r5, r5, r0, r2
 801de08:	fb15 f503 	smulbb	r5, r5, r3
 801de0c:	3e01      	subs	r6, #1
 801de0e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801de12:	fb96 f6f1 	sdiv	r6, r6, r1
 801de16:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801de1a:	440d      	add	r5, r1
 801de1c:	4419      	add	r1, r3
 801de1e:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801de22:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801de26:	441a      	add	r2, r3
 801de28:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801de2c:	9304      	str	r3, [sp, #16]
 801de2e:	4b96      	ldr	r3, [pc, #600]	; (801e088 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801de30:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801de34:	6818      	ldr	r0, [r3, #0]
 801de36:	6803      	ldr	r3, [r0, #0]
 801de38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801de3a:	4798      	blx	r3
 801de3c:	4b93      	ldr	r3, [pc, #588]	; (801e08c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801de3e:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801de42:	881a      	ldrh	r2, [r3, #0]
 801de44:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801de48:	9318      	str	r3, [sp, #96]	; 0x60
 801de4a:	fb02 c101 	mla	r1, r2, r1, ip
 801de4e:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801de52:	4357      	muls	r7, r2
 801de54:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801de58:	3601      	adds	r6, #1
 801de5a:	920b      	str	r2, [sp, #44]	; 0x2c
 801de5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801de5e:	4b8c      	ldr	r3, [pc, #560]	; (801e090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801de60:	b2b6      	uxth	r6, r6
 801de62:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801de66:	1d32      	adds	r2, r6, #4
 801de68:	9206      	str	r2, [sp, #24]
 801de6a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801de6c:	43d2      	mvns	r2, r2
 801de6e:	b2d2      	uxtb	r2, r2
 801de70:	b2ad      	uxth	r5, r5
 801de72:	9215      	str	r2, [sp, #84]	; 0x54
 801de74:	9a04      	ldr	r2, [sp, #16]
 801de76:	2d00      	cmp	r5, #0
 801de78:	bf0c      	ite	eq
 801de7a:	4611      	moveq	r1, r2
 801de7c:	2100      	movne	r1, #0
 801de7e:	2200      	movs	r2, #0
 801de80:	1b1b      	subs	r3, r3, r4
 801de82:	b289      	uxth	r1, r1
 801de84:	920d      	str	r2, [sp, #52]	; 0x34
 801de86:	9319      	str	r3, [sp, #100]	; 0x64
 801de88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801de8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de8c:	fa12 f383 	uxtah	r3, r2, r3
 801de90:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801de92:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801de96:	3304      	adds	r3, #4
 801de98:	9307      	str	r3, [sp, #28]
 801de9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801de9c:	455b      	cmp	r3, fp
 801de9e:	f240 817c 	bls.w	801e19a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801dea2:	9a01      	ldr	r2, [sp, #4]
 801dea4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801dea8:	fbb5 f3f3 	udiv	r3, r5, r3
 801deac:	1ad3      	subs	r3, r2, r3
 801deae:	b29b      	uxth	r3, r3
 801deb0:	9316      	str	r3, [sp, #88]	; 0x58
 801deb2:	9b07      	ldr	r3, [sp, #28]
 801deb4:	9807      	ldr	r0, [sp, #28]
 801deb6:	785a      	ldrb	r2, [r3, #1]
 801deb8:	789b      	ldrb	r3, [r3, #2]
 801deba:	7800      	ldrb	r0, [r0, #0]
 801debc:	9011      	str	r0, [sp, #68]	; 0x44
 801debe:	021b      	lsls	r3, r3, #8
 801dec0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801dec4:	9a07      	ldr	r2, [sp, #28]
 801dec6:	78d2      	ldrb	r2, [r2, #3]
 801dec8:	4313      	orrs	r3, r2
 801deca:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801decc:	3001      	adds	r0, #1
 801dece:	441a      	add	r2, r3
 801ded0:	9005      	str	r0, [sp, #20]
 801ded2:	1c50      	adds	r0, r2, #1
 801ded4:	9003      	str	r0, [sp, #12]
 801ded6:	7852      	ldrb	r2, [r2, #1]
 801ded8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801deda:	0212      	lsls	r2, r2, #8
 801dedc:	5cc3      	ldrb	r3, [r0, r3]
 801dede:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801dee2:	431a      	orrs	r2, r3
 801dee4:	b293      	uxth	r3, r2
 801dee6:	930c      	str	r3, [sp, #48]	; 0x30
 801dee8:	2300      	movs	r3, #0
 801deea:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801deee:	9308      	str	r3, [sp, #32]
 801def0:	461a      	mov	r2, r3
 801def2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801def6:	930e      	str	r3, [sp, #56]	; 0x38
 801def8:	f04f 0801 	mov.w	r8, #1
 801defc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801df00:	f8cd 8008 	str.w	r8, [sp, #8]
 801df04:	46c4      	mov	ip, r8
 801df06:	930f      	str	r3, [sp, #60]	; 0x3c
 801df08:	2d00      	cmp	r5, #0
 801df0a:	d07c      	beq.n	801e006 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801df0c:	45ac      	cmp	ip, r5
 801df0e:	d26c      	bcs.n	801dfea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801df10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df12:	eba5 050c 	sub.w	r5, r5, ip
 801df16:	455b      	cmp	r3, fp
 801df18:	b2ad      	uxth	r5, r5
 801df1a:	4608      	mov	r0, r1
 801df1c:	d802      	bhi.n	801df24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801df1e:	e070      	b.n	801e002 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801df20:	2b00      	cmp	r3, #0
 801df22:	d15c      	bne.n	801dfde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801df24:	9b03      	ldr	r3, [sp, #12]
 801df26:	9a02      	ldr	r2, [sp, #8]
 801df28:	785b      	ldrb	r3, [r3, #1]
 801df2a:	9902      	ldr	r1, [sp, #8]
 801df2c:	f1c2 0207 	rsb	r2, r2, #7
 801df30:	4093      	lsls	r3, r2
 801df32:	005b      	lsls	r3, r3, #1
 801df34:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801df38:	9b03      	ldr	r3, [sp, #12]
 801df3a:	781b      	ldrb	r3, [r3, #0]
 801df3c:	410b      	asrs	r3, r1
 801df3e:	3101      	adds	r1, #1
 801df40:	b2c9      	uxtb	r1, r1
 801df42:	2908      	cmp	r1, #8
 801df44:	9102      	str	r1, [sp, #8]
 801df46:	9903      	ldr	r1, [sp, #12]
 801df48:	bf0a      	itet	eq
 801df4a:	3102      	addeq	r1, #2
 801df4c:	3101      	addne	r1, #1
 801df4e:	9103      	streq	r1, [sp, #12]
 801df50:	b2db      	uxtb	r3, r3
 801df52:	bf0a      	itet	eq
 801df54:	2100      	moveq	r1, #0
 801df56:	9103      	strne	r1, [sp, #12]
 801df58:	9102      	streq	r1, [sp, #8]
 801df5a:	4313      	orrs	r3, r2
 801df5c:	9911      	ldr	r1, [sp, #68]	; 0x44
 801df5e:	b29a      	uxth	r2, r3
 801df60:	4291      	cmp	r1, r2
 801df62:	d30a      	bcc.n	801df7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801df64:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801df68:	2301      	movs	r3, #1
 801df6a:	9905      	ldr	r1, [sp, #20]
 801df6c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801df70:	d30f      	bcc.n	801df92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801df72:	2100      	movs	r1, #0
 801df74:	4698      	mov	r8, r3
 801df76:	9100      	str	r1, [sp, #0]
 801df78:	e032      	b.n	801dfe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801df7a:	9b05      	ldr	r3, [sp, #20]
 801df7c:	429a      	cmp	r2, r3
 801df7e:	d318      	bcc.n	801dfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801df80:	eb04 0308 	add.w	r3, r4, r8
 801df84:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801df88:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801df8c:	f108 0301 	add.w	r3, r8, #1
 801df90:	b29b      	uxth	r3, r3
 801df92:	9905      	ldr	r1, [sp, #20]
 801df94:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801df98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801df9c:	710e      	strb	r6, [r1, #4]
 801df9e:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801dfa0:	80ce      	strh	r6, [r1, #6]
 801dfa2:	f108 0601 	add.w	r6, r8, #1
 801dfa6:	714e      	strb	r6, [r1, #5]
 801dfa8:	9905      	ldr	r1, [sp, #20]
 801dfaa:	3101      	adds	r1, #1
 801dfac:	b289      	uxth	r1, r1
 801dfae:	9105      	str	r1, [sp, #20]
 801dfb0:	e7df      	b.n	801df72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801dfb2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801dfb6:	4611      	mov	r1, r2
 801dfb8:	795b      	ldrb	r3, [r3, #5]
 801dfba:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801dfbe:	4426      	add	r6, r4
 801dfc0:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801dfc2:	4437      	add	r7, r6
 801dfc4:	2f00      	cmp	r7, #0
 801dfc6:	dd06      	ble.n	801dfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801dfc8:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801dfcc:	790f      	ldrb	r7, [r1, #4]
 801dfce:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801dfd2:	88c9      	ldrh	r1, [r1, #6]
 801dfd4:	e7f4      	b.n	801dfc0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801dfd6:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801dfda:	b29b      	uxth	r3, r3
 801dfdc:	e7c5      	b.n	801df6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801dfde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dfe0:	920c      	str	r2, [sp, #48]	; 0x30
 801dfe2:	4601      	mov	r1, r0
 801dfe4:	9a00      	ldr	r2, [sp, #0]
 801dfe6:	469c      	mov	ip, r3
 801dfe8:	e78e      	b.n	801df08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801dfea:	1957      	adds	r7, r2, r5
 801dfec:	ebac 0305 	sub.w	r3, ip, r5
 801dff0:	b2ba      	uxth	r2, r7
 801dff2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801dff6:	9200      	str	r2, [sp, #0]
 801dff8:	b29b      	uxth	r3, r3
 801dffa:	2500      	movs	r5, #0
 801dffc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dffe:	455a      	cmp	r2, fp
 801e000:	d88e      	bhi.n	801df20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801e002:	4601      	mov	r1, r0
 801e004:	e749      	b.n	801de9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801e006:	458c      	cmp	ip, r1
 801e008:	bf2c      	ite	cs
 801e00a:	4628      	movcs	r0, r5
 801e00c:	462b      	movcc	r3, r5
 801e00e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801e010:	bf27      	ittee	cs
 801e012:	9109      	strcs	r1, [sp, #36]	; 0x24
 801e014:	ebac 0301 	subcs.w	r3, ip, r1
 801e018:	eba1 000c 	subcc.w	r0, r1, ip
 801e01c:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801e020:	bf2c      	ite	cs
 801e022:	b29b      	uxthcs	r3, r3
 801e024:	b280      	uxthcc	r0, r0
 801e026:	2dff      	cmp	r5, #255	; 0xff
 801e028:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e02a:	eb02 0705 	add.w	r7, r2, r5
 801e02e:	b2bd      	uxth	r5, r7
 801e030:	9500      	str	r5, [sp, #0]
 801e032:	d12f      	bne.n	801e094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801e034:	465e      	mov	r6, fp
 801e036:	9d00      	ldr	r5, [sp, #0]
 801e038:	42aa      	cmp	r2, r5
 801e03a:	f040 8084 	bne.w	801e146 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801e03e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e040:	458c      	cmp	ip, r1
 801e042:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e046:	d3d8      	bcc.n	801dffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801e048:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801e04a:	9904      	ldr	r1, [sp, #16]
 801e04c:	8812      	ldrh	r2, [r2, #0]
 801e04e:	1a52      	subs	r2, r2, r1
 801e050:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801e054:	9a08      	ldr	r2, [sp, #32]
 801e056:	9916      	ldr	r1, [sp, #88]	; 0x58
 801e058:	3201      	adds	r2, #1
 801e05a:	428a      	cmp	r2, r1
 801e05c:	9208      	str	r2, [sp, #32]
 801e05e:	f040 8092 	bne.w	801e186 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801e062:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801e066:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801e06a:	9b04      	ldr	r3, [sp, #16]
 801e06c:	eba5 050c 	sub.w	r5, r5, ip
 801e070:	b2ad      	uxth	r5, r5
 801e072:	2d00      	cmp	r5, #0
 801e074:	bf08      	it	eq
 801e076:	4619      	moveq	r1, r3
 801e078:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e07a:	bf18      	it	ne
 801e07c:	2100      	movne	r1, #0
 801e07e:	3301      	adds	r3, #1
 801e080:	930d      	str	r3, [sp, #52]	; 0x34
 801e082:	b289      	uxth	r1, r1
 801e084:	e700      	b.n	801de88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801e086:	bf00      	nop
 801e088:	200137ec 	.word	0x200137ec
 801e08c:	200137e6 	.word	0x200137e6
 801e090:	fffff7fb 	.word	0xfffff7fb
 801e094:	46d9      	mov	r9, fp
 801e096:	9d00      	ldr	r5, [sp, #0]
 801e098:	42aa      	cmp	r2, r5
 801e09a:	d0d0      	beq.n	801e03e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801e09c:	1c55      	adds	r5, r2, #1
 801e09e:	4422      	add	r2, r4
 801e0a0:	9517      	str	r5, [sp, #92]	; 0x5c
 801e0a2:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801e0a6:	9a06      	ldr	r2, [sp, #24]
 801e0a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801e0ac:	4472      	add	r2, lr
 801e0ae:	9212      	str	r2, [sp, #72]	; 0x48
 801e0b0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e0b2:	f8b9 2000 	ldrh.w	r2, [r9]
 801e0b6:	f897 a002 	ldrb.w	sl, [r7, #2]
 801e0ba:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e0bc:	1216      	asrs	r6, r2, #8
 801e0be:	fb1a fa07 	smulbb	sl, sl, r7
 801e0c2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e0c6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e0c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e0cc:	fb06 a607 	mla	r6, r6, r7, sl
 801e0d0:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801e0d2:	f897 a001 	ldrb.w	sl, [r7, #1]
 801e0d6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e0d8:	10d5      	asrs	r5, r2, #3
 801e0da:	fb1a fa07 	smulbb	sl, sl, r7
 801e0de:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e0e2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e0e4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e0e8:	fb05 a507 	mla	r5, r5, r7, sl
 801e0ec:	9f06      	ldr	r7, [sp, #24]
 801e0ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801e0f2:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801e0f4:	00d2      	lsls	r2, r2, #3
 801e0f6:	fb1e fe07 	smulbb	lr, lr, r7
 801e0fa:	b2d2      	uxtb	r2, r2
 801e0fc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801e0fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e102:	b2b6      	uxth	r6, r6
 801e104:	fb02 e207 	mla	r2, r2, r7, lr
 801e108:	b292      	uxth	r2, r2
 801e10a:	b2ad      	uxth	r5, r5
 801e10c:	f106 0a01 	add.w	sl, r6, #1
 801e110:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801e114:	f102 0e01 	add.w	lr, r2, #1
 801e118:	f105 0a01 	add.w	sl, r5, #1
 801e11c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801e120:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801e124:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801e128:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801e12c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801e130:	ea4e 0606 	orr.w	r6, lr, r6
 801e134:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801e138:	ea46 060a 	orr.w	r6, r6, sl
 801e13c:	f829 6b02 	strh.w	r6, [r9], #2
 801e140:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e144:	e7a7      	b.n	801e096 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801e146:	f102 0e01 	add.w	lr, r2, #1
 801e14a:	4422      	add	r2, r4
 801e14c:	9f06      	ldr	r7, [sp, #24]
 801e14e:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801e152:	9a06      	ldr	r2, [sp, #24]
 801e154:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801e158:	eb02 0a05 	add.w	sl, r2, r5
 801e15c:	4a13      	ldr	r2, [pc, #76]	; (801e1ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801e15e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801e162:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801e166:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e16a:	00d2      	lsls	r2, r2, #3
 801e16c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e170:	ea49 0202 	orr.w	r2, r9, r2
 801e174:	f817 9005 	ldrb.w	r9, [r7, r5]
 801e178:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801e17c:	f826 2b02 	strh.w	r2, [r6], #2
 801e180:	fa1f f28e 	uxth.w	r2, lr
 801e184:	e757      	b.n	801e036 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801e186:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801e18a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801e18e:	1a2d      	subs	r5, r5, r0
 801e190:	b2ad      	uxth	r5, r5
 801e192:	2d00      	cmp	r5, #0
 801e194:	bf18      	it	ne
 801e196:	2000      	movne	r0, #0
 801e198:	e730      	b.n	801dffc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801e19a:	4b05      	ldr	r3, [pc, #20]	; (801e1b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801e19c:	6818      	ldr	r0, [r3, #0]
 801e19e:	6803      	ldr	r3, [r0, #0]
 801e1a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e1a2:	4798      	blx	r3
 801e1a4:	b01f      	add	sp, #124	; 0x7c
 801e1a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e1aa:	bf00      	nop
 801e1ac:	fffff800 	.word	0xfffff800
 801e1b0:	200137ec 	.word	0x200137ec

0801e1b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801e1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1b8:	b091      	sub	sp, #68	; 0x44
 801e1ba:	469b      	mov	fp, r3
 801e1bc:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801e1c0:	4616      	mov	r6, r2
 801e1c2:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801e1c6:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e1ca:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801e1ce:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801e1d2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e1d6:	4604      	mov	r4, r0
 801e1d8:	460d      	mov	r5, r1
 801e1da:	4640      	mov	r0, r8
 801e1dc:	4659      	mov	r1, fp
 801e1de:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e1e2:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801e1e6:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801e1ea:	f7f2 fb9f 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 801e1ee:	4631      	mov	r1, r6
 801e1f0:	4640      	mov	r0, r8
 801e1f2:	f7f2 fb9b 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 801e1f6:	4b74      	ldr	r3, [pc, #464]	; (801e3c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801e1f8:	8818      	ldrh	r0, [r3, #0]
 801e1fa:	4b74      	ldr	r3, [pc, #464]	; (801e3cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801e1fc:	8819      	ldrh	r1, [r3, #0]
 801e1fe:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e202:	2b00      	cmp	r3, #0
 801e204:	b202      	sxth	r2, r0
 801e206:	b20e      	sxth	r6, r1
 801e208:	da07      	bge.n	801e21a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801e20a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801e20e:	4463      	add	r3, ip
 801e210:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801e214:	2300      	movs	r3, #0
 801e216:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801e21a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801e21e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e222:	1ad2      	subs	r2, r2, r3
 801e224:	4594      	cmp	ip, r2
 801e226:	bfc4      	itt	gt
 801e228:	1ac2      	subgt	r2, r0, r3
 801e22a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801e22e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e232:	2a00      	cmp	r2, #0
 801e234:	da07      	bge.n	801e246 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801e236:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801e23a:	4462      	add	r2, ip
 801e23c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e240:	2200      	movs	r2, #0
 801e242:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801e246:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801e24a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e24e:	eba6 060a 	sub.w	r6, r6, sl
 801e252:	42b2      	cmp	r2, r6
 801e254:	bfc4      	itt	gt
 801e256:	eba1 020a 	subgt.w	r2, r1, sl
 801e25a:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801e25e:	4a5c      	ldr	r2, [pc, #368]	; (801e3d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801e260:	7812      	ldrb	r2, [r2, #0]
 801e262:	b9a2      	cbnz	r2, 801e28e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801e264:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801e268:	4286      	cmp	r6, r0
 801e26a:	4640      	mov	r0, r8
 801e26c:	9303      	str	r3, [sp, #12]
 801e26e:	bf14      	ite	ne
 801e270:	2600      	movne	r6, #0
 801e272:	2601      	moveq	r6, #1
 801e274:	f7f2 fb9d 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e278:	9b03      	ldr	r3, [sp, #12]
 801e27a:	b160      	cbz	r0, 801e296 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801e27c:	2300      	movs	r3, #0
 801e27e:	8023      	strh	r3, [r4, #0]
 801e280:	8063      	strh	r3, [r4, #2]
 801e282:	80a3      	strh	r3, [r4, #4]
 801e284:	4620      	mov	r0, r4
 801e286:	80e3      	strh	r3, [r4, #6]
 801e288:	b011      	add	sp, #68	; 0x44
 801e28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e28e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e292:	428e      	cmp	r6, r1
 801e294:	e7e9      	b.n	801e26a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801e296:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801e29a:	9205      	str	r2, [sp, #20]
 801e29c:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801e2a0:	9206      	str	r2, [sp, #24]
 801e2a2:	f8bb 2000 	ldrh.w	r2, [fp]
 801e2a6:	900e      	str	r0, [sp, #56]	; 0x38
 801e2a8:	1a9b      	subs	r3, r3, r2
 801e2aa:	b21b      	sxth	r3, r3
 801e2ac:	9303      	str	r3, [sp, #12]
 801e2ae:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e2b2:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801e2b6:	ebaa 0a03 	sub.w	sl, sl, r3
 801e2ba:	fa0f f38a 	sxth.w	r3, sl
 801e2be:	9304      	str	r3, [sp, #16]
 801e2c0:	9b03      	ldr	r3, [sp, #12]
 801e2c2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801e2c6:	9b04      	ldr	r3, [sp, #16]
 801e2c8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e2cc:	9b05      	ldr	r3, [sp, #20]
 801e2ce:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801e2d2:	a90e      	add	r1, sp, #56	; 0x38
 801e2d4:	9b06      	ldr	r3, [sp, #24]
 801e2d6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801e2da:	a80c      	add	r0, sp, #48	; 0x30
 801e2dc:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801e2e0:	f7f8 f906 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2e4:	4640      	mov	r0, r8
 801e2e6:	f7f8 f8bf 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2ea:	a80e      	add	r0, sp, #56	; 0x38
 801e2ec:	f7f8 f8bc 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2f0:	4b38      	ldr	r3, [pc, #224]	; (801e3d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801e2f2:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801e2f6:	881b      	ldrh	r3, [r3, #0]
 801e2f8:	9307      	str	r3, [sp, #28]
 801e2fa:	682b      	ldr	r3, [r5, #0]
 801e2fc:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801e3d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e302:	4628      	mov	r0, r5
 801e304:	4798      	blx	r3
 801e306:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801e30a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801e30e:	4681      	mov	r9, r0
 801e310:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801e314:	f8db 0000 	ldr.w	r0, [fp]
 801e318:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e31a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801e31e:	6803      	ldr	r3, [r0, #0]
 801e320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801e322:	4798      	blx	r3
 801e324:	4607      	mov	r7, r0
 801e326:	f8db 0000 	ldr.w	r0, [fp]
 801e32a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801e32e:	6803      	ldr	r3, [r0, #0]
 801e330:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e334:	9109      	str	r1, [sp, #36]	; 0x24
 801e336:	9208      	str	r2, [sp, #32]
 801e338:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e33a:	4798      	blx	r3
 801e33c:	f010 0f01 	tst.w	r0, #1
 801e340:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801e344:	d012      	beq.n	801e36c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801e346:	f8db 0000 	ldr.w	r0, [fp]
 801e34a:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801e34e:	6803      	ldr	r3, [r0, #0]
 801e350:	9200      	str	r2, [sp, #0]
 801e352:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801e354:	e898 0006 	ldmia.w	r8, {r1, r2}
 801e358:	462b      	mov	r3, r5
 801e35a:	47b0      	blx	r6
 801e35c:	9b03      	ldr	r3, [sp, #12]
 801e35e:	8023      	strh	r3, [r4, #0]
 801e360:	9b04      	ldr	r3, [sp, #16]
 801e362:	8063      	strh	r3, [r4, #2]
 801e364:	9b05      	ldr	r3, [sp, #20]
 801e366:	80a3      	strh	r3, [r4, #4]
 801e368:	9b06      	ldr	r3, [sp, #24]
 801e36a:	e78b      	b.n	801e284 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801e36c:	fb09 f202 	mul.w	r2, r9, r2
 801e370:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801e374:	440f      	add	r7, r1
 801e376:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801e37a:	b166      	cbz	r6, 801e396 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e37c:	9a07      	ldr	r2, [sp, #28]
 801e37e:	4592      	cmp	sl, r2
 801e380:	d109      	bne.n	801e396 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801e382:	f8db 0000 	ldr.w	r0, [fp]
 801e386:	6802      	ldr	r2, [r0, #0]
 801e388:	fb09 f303 	mul.w	r3, r9, r3
 801e38c:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801e38e:	4629      	mov	r1, r5
 801e390:	463a      	mov	r2, r7
 801e392:	47b0      	blx	r6
 801e394:	e7e2      	b.n	801e35c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e396:	fb0a f303 	mul.w	r3, sl, r3
 801e39a:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801e3d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801e39e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801e3a2:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801e3a6:	4545      	cmp	r5, r8
 801e3a8:	d2d8      	bcs.n	801e35c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801e3aa:	f8db 0000 	ldr.w	r0, [fp]
 801e3ae:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801e3b2:	6802      	ldr	r2, [r0, #0]
 801e3b4:	4629      	mov	r1, r5
 801e3b6:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801e3ba:	005b      	lsls	r3, r3, #1
 801e3bc:	463a      	mov	r2, r7
 801e3be:	47d0      	blx	sl
 801e3c0:	444f      	add	r7, r9
 801e3c2:	4435      	add	r5, r6
 801e3c4:	e7ef      	b.n	801e3a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801e3c6:	bf00      	nop
 801e3c8:	200137e0 	.word	0x200137e0
 801e3cc:	200137e2 	.word	0x200137e2
 801e3d0:	200137e4 	.word	0x200137e4
 801e3d4:	200137e6 	.word	0x200137e6
 801e3d8:	200137ec 	.word	0x200137ec

0801e3dc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801e3dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 801e3de:	4606      	mov	r6, r0
 801e3e0:	b087      	sub	sp, #28
 801e3e2:	460c      	mov	r4, r1
 801e3e4:	4617      	mov	r7, r2
 801e3e6:	461d      	mov	r5, r3
 801e3e8:	b333      	cbz	r3, 801e438 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e3ea:	4608      	mov	r0, r1
 801e3ec:	f7f2 fae1 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e3f0:	bb10      	cbnz	r0, 801e438 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e3f2:	6820      	ldr	r0, [r4, #0]
 801e3f4:	6861      	ldr	r1, [r4, #4]
 801e3f6:	4c1c      	ldr	r4, [pc, #112]	; (801e468 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801e3f8:	ab04      	add	r3, sp, #16
 801e3fa:	c303      	stmia	r3!, {r0, r1}
 801e3fc:	a804      	add	r0, sp, #16
 801e3fe:	f7f8 f833 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e402:	6820      	ldr	r0, [r4, #0]
 801e404:	6803      	ldr	r3, [r0, #0]
 801e406:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e408:	4798      	blx	r3
 801e40a:	2dff      	cmp	r5, #255	; 0xff
 801e40c:	d016      	beq.n	801e43c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801e40e:	f010 0f08 	tst.w	r0, #8
 801e412:	6820      	ldr	r0, [r4, #0]
 801e414:	d015      	beq.n	801e442 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801e416:	2400      	movs	r4, #0
 801e418:	6801      	ldr	r1, [r0, #0]
 801e41a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801e41e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801e422:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801e426:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801e42a:	9401      	str	r4, [sp, #4]
 801e42c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801e430:	9400      	str	r4, [sp, #0]
 801e432:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801e434:	4639      	mov	r1, r7
 801e436:	47a0      	blx	r4
 801e438:	b007      	add	sp, #28
 801e43a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801e43c:	f010 0f02 	tst.w	r0, #2
 801e440:	e7e7      	b.n	801e412 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801e442:	6803      	ldr	r3, [r0, #0]
 801e444:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e446:	4798      	blx	r3
 801e448:	4b08      	ldr	r3, [pc, #32]	; (801e46c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801e44a:	881a      	ldrh	r2, [r3, #0]
 801e44c:	6833      	ldr	r3, [r6, #0]
 801e44e:	e9cd 7500 	strd	r7, r5, [sp]
 801e452:	4601      	mov	r1, r0
 801e454:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801e456:	4630      	mov	r0, r6
 801e458:	ab04      	add	r3, sp, #16
 801e45a:	47a8      	blx	r5
 801e45c:	6820      	ldr	r0, [r4, #0]
 801e45e:	6803      	ldr	r3, [r0, #0]
 801e460:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e462:	4798      	blx	r3
 801e464:	e7e8      	b.n	801e438 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801e466:	bf00      	nop
 801e468:	200137ec 	.word	0x200137ec
 801e46c:	200137e6 	.word	0x200137e6

0801e470 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801e470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e474:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801e478:	9e08      	ldr	r6, [sp, #32]
 801e47a:	4688      	mov	r8, r1
 801e47c:	4614      	mov	r4, r2
 801e47e:	461d      	mov	r5, r3
 801e480:	2f00      	cmp	r7, #0
 801e482:	f000 80a9 	beq.w	801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e486:	4618      	mov	r0, r3
 801e488:	f7f2 fa93 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e48c:	2800      	cmp	r0, #0
 801e48e:	f040 80a3 	bne.w	801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e492:	f9b5 1000 	ldrsh.w	r1, [r5]
 801e496:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801e49a:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801e49e:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801e4a2:	fb04 1303 	mla	r3, r4, r3, r1
 801e4a6:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801e4aa:	4365      	muls	r5, r4
 801e4ac:	2fff      	cmp	r7, #255	; 0xff
 801e4ae:	eba4 0200 	sub.w	r2, r4, r0
 801e4b2:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801e4b6:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801e4ba:	d04a      	beq.n	801e552 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801e4bc:	b2bc      	uxth	r4, r7
 801e4be:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801e4c2:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801e4c6:	fa5f f788 	uxtb.w	r7, r8
 801e4ca:	b2f3      	uxtb	r3, r6
 801e4cc:	0040      	lsls	r0, r0, #1
 801e4ce:	fb0e fe04 	mul.w	lr, lr, r4
 801e4d2:	4367      	muls	r7, r4
 801e4d4:	4363      	muls	r3, r4
 801e4d6:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801e4da:	fa1f fc8c 	uxth.w	ip, ip
 801e4de:	42a9      	cmp	r1, r5
 801e4e0:	d27a      	bcs.n	801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e4e2:	eb01 0900 	add.w	r9, r1, r0
 801e4e6:	4549      	cmp	r1, r9
 801e4e8:	d231      	bcs.n	801e54e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801e4ea:	880a      	ldrh	r2, [r1, #0]
 801e4ec:	1214      	asrs	r4, r2, #8
 801e4ee:	10d6      	asrs	r6, r2, #3
 801e4f0:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801e4f4:	00d2      	lsls	r2, r2, #3
 801e4f6:	b2d2      	uxtb	r2, r2
 801e4f8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e4fc:	fb14 f40c 	smulbb	r4, r4, ip
 801e500:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e504:	4474      	add	r4, lr
 801e506:	fb12 f20c 	smulbb	r2, r2, ip
 801e50a:	b2a4      	uxth	r4, r4
 801e50c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801e510:	441a      	add	r2, r3
 801e512:	b292      	uxth	r2, r2
 801e514:	f104 0a01 	add.w	sl, r4, #1
 801e518:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801e51c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801e520:	fb16 f60c 	smulbb	r6, r6, ip
 801e524:	f102 0a01 	add.w	sl, r2, #1
 801e528:	443e      	add	r6, r7
 801e52a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801e52e:	b2b6      	uxth	r6, r6
 801e530:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801e534:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e538:	4322      	orrs	r2, r4
 801e53a:	1c74      	adds	r4, r6, #1
 801e53c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e540:	0976      	lsrs	r6, r6, #5
 801e542:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801e546:	4332      	orrs	r2, r6
 801e548:	f821 2b02 	strh.w	r2, [r1], #2
 801e54c:	e7cb      	b.n	801e4e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801e54e:	4441      	add	r1, r8
 801e550:	e7c5      	b.n	801e4de <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801e552:	4f22      	ldr	r7, [pc, #136]	; (801e5dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801e554:	0973      	lsrs	r3, r6, #5
 801e556:	ea08 0707 	and.w	r7, r8, r7
 801e55a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e55e:	433b      	orrs	r3, r7
 801e560:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e564:	4333      	orrs	r3, r6
 801e566:	07e7      	lsls	r7, r4, #31
 801e568:	b29b      	uxth	r3, r3
 801e56a:	d50b      	bpl.n	801e584 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e56c:	0040      	lsls	r0, r0, #1
 801e56e:	0052      	lsls	r2, r2, #1
 801e570:	42a9      	cmp	r1, r5
 801e572:	d231      	bcs.n	801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e574:	180c      	adds	r4, r1, r0
 801e576:	42a1      	cmp	r1, r4
 801e578:	d202      	bcs.n	801e580 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801e57a:	f821 3b02 	strh.w	r3, [r1], #2
 801e57e:	e7fa      	b.n	801e576 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801e580:	4411      	add	r1, r2
 801e582:	e7f5      	b.n	801e570 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801e584:	078e      	lsls	r6, r1, #30
 801e586:	d008      	beq.n	801e59a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e588:	0066      	lsls	r6, r4, #1
 801e58a:	460a      	mov	r2, r1
 801e58c:	42aa      	cmp	r2, r5
 801e58e:	d202      	bcs.n	801e596 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801e590:	8013      	strh	r3, [r2, #0]
 801e592:	4432      	add	r2, r6
 801e594:	e7fa      	b.n	801e58c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801e596:	3102      	adds	r1, #2
 801e598:	3801      	subs	r0, #1
 801e59a:	07c2      	lsls	r2, r0, #31
 801e59c:	d50b      	bpl.n	801e5b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801e59e:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801e5a2:	3a01      	subs	r2, #1
 801e5a4:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e5a8:	0066      	lsls	r6, r4, #1
 801e5aa:	42aa      	cmp	r2, r5
 801e5ac:	d202      	bcs.n	801e5b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801e5ae:	8013      	strh	r3, [r2, #0]
 801e5b0:	4432      	add	r2, r6
 801e5b2:	e7fa      	b.n	801e5aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801e5b4:	3801      	subs	r0, #1
 801e5b6:	b178      	cbz	r0, 801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e5b8:	1040      	asrs	r0, r0, #1
 801e5ba:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e5be:	0080      	lsls	r0, r0, #2
 801e5c0:	0064      	lsls	r4, r4, #1
 801e5c2:	42a9      	cmp	r1, r5
 801e5c4:	d208      	bcs.n	801e5d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e5c6:	180e      	adds	r6, r1, r0
 801e5c8:	460a      	mov	r2, r1
 801e5ca:	42b2      	cmp	r2, r6
 801e5cc:	d202      	bcs.n	801e5d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801e5ce:	f842 3b04 	str.w	r3, [r2], #4
 801e5d2:	e7fa      	b.n	801e5ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801e5d4:	4421      	add	r1, r4
 801e5d6:	e7f4      	b.n	801e5c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801e5d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e5dc:	00fff800 	.word	0x00fff800

0801e5e0 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e5e0:	2200      	movs	r2, #0
 801e5e2:	4912      	ldr	r1, [pc, #72]	; (801e62c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e5e4:	6042      	str	r2, [r0, #4]
 801e5e6:	6001      	str	r1, [r0, #0]
 801e5e8:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801e5ec:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801e5f0:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801e5f4:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801e5f8:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801e5fc:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801e600:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801e604:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801e608:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801e60c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801e610:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801e614:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801e618:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801e61c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801e620:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801e624:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801e628:	4770      	bx	lr
 801e62a:	bf00      	nop
 801e62c:	0802fd90 	.word	0x0802fd90

0801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e634:	460d      	mov	r5, r1
 801e636:	b08d      	sub	sp, #52	; 0x34
 801e638:	4604      	mov	r4, r0
 801e63a:	6808      	ldr	r0, [r1, #0]
 801e63c:	6849      	ldr	r1, [r1, #4]
 801e63e:	4699      	mov	r9, r3
 801e640:	ab08      	add	r3, sp, #32
 801e642:	c303      	stmia	r3!, {r0, r1}
 801e644:	6810      	ldr	r0, [r2, #0]
 801e646:	6851      	ldr	r1, [r2, #4]
 801e648:	ab0a      	add	r3, sp, #40	; 0x28
 801e64a:	c303      	stmia	r3!, {r0, r1}
 801e64c:	a808      	add	r0, sp, #32
 801e64e:	f7f7 ff0b 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e652:	4629      	mov	r1, r5
 801e654:	a80a      	add	r0, sp, #40	; 0x28
 801e656:	f7f7 ff4b 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e65a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801e65e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801e662:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801e666:	4d63      	ldr	r5, [pc, #396]	; (801e7f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e668:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801e66c:	6828      	ldr	r0, [r5, #0]
 801e66e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801e672:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e676:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e67a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e67e:	440a      	add	r2, r1
 801e680:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801e684:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801e688:	4413      	add	r3, r2
 801e68a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801e68e:	6803      	ldr	r3, [r0, #0]
 801e690:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e692:	4798      	blx	r3
 801e694:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e698:	d119      	bne.n	801e6ce <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e69a:	f010 0f20 	tst.w	r0, #32
 801e69e:	6828      	ldr	r0, [r5, #0]
 801e6a0:	d018      	beq.n	801e6d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e6a2:	2500      	movs	r5, #0
 801e6a4:	6801      	ldr	r1, [r0, #0]
 801e6a6:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801e6aa:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801e6ae:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e6b2:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801e6b6:	9502      	str	r5, [sp, #8]
 801e6b8:	b2b6      	uxth	r6, r6
 801e6ba:	fa1f f588 	uxth.w	r5, r8
 801e6be:	9601      	str	r6, [sp, #4]
 801e6c0:	9500      	str	r5, [sp, #0]
 801e6c2:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801e6c4:	4621      	mov	r1, r4
 801e6c6:	47a8      	blx	r5
 801e6c8:	b00d      	add	sp, #52	; 0x34
 801e6ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e6ce:	f010 0f40 	tst.w	r0, #64	; 0x40
 801e6d2:	e7e4      	b.n	801e69e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e6d4:	6803      	ldr	r3, [r0, #0]
 801e6d6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e6d8:	4798      	blx	r3
 801e6da:	4947      	ldr	r1, [pc, #284]	; (801e7f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e6dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801e6e0:	880b      	ldrh	r3, [r1, #0]
 801e6e2:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801e6e6:	fb03 5202 	mla	r2, r3, r2, r5
 801e6ea:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e6ee:	4373      	muls	r3, r6
 801e6f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e6f4:	9307      	str	r3, [sp, #28]
 801e6f6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e6fa:	9306      	str	r3, [sp, #24]
 801e6fc:	468a      	mov	sl, r1
 801e6fe:	9b07      	ldr	r3, [sp, #28]
 801e700:	4298      	cmp	r0, r3
 801e702:	d270      	bcs.n	801e7e6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e704:	9b06      	ldr	r3, [sp, #24]
 801e706:	4621      	mov	r1, r4
 801e708:	eb00 0b03 	add.w	fp, r0, r3
 801e70c:	4558      	cmp	r0, fp
 801e70e:	d25d      	bcs.n	801e7cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e710:	f851 4b04 	ldr.w	r4, [r1], #4
 801e714:	0e23      	lsrs	r3, r4, #24
 801e716:	d014      	beq.n	801e742 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e718:	2bff      	cmp	r3, #255	; 0xff
 801e71a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e71e:	d112      	bne.n	801e746 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e720:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801e724:	d10f      	bne.n	801e746 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e726:	0963      	lsrs	r3, r4, #5
 801e728:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801e72c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e730:	f02c 0c07 	bic.w	ip, ip, #7
 801e734:	ea43 0c0c 	orr.w	ip, r3, ip
 801e738:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e73c:	ea4c 0404 	orr.w	r4, ip, r4
 801e740:	8004      	strh	r4, [r0, #0]
 801e742:	3002      	adds	r0, #2
 801e744:	e7e2      	b.n	801e70c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e746:	fb09 f303 	mul.w	r3, r9, r3
 801e74a:	8807      	ldrh	r7, [r0, #0]
 801e74c:	1c5a      	adds	r2, r3, #1
 801e74e:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e752:	1212      	asrs	r2, r2, #8
 801e754:	123e      	asrs	r6, r7, #8
 801e756:	b293      	uxth	r3, r2
 801e758:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e75c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801e760:	43d2      	mvns	r2, r2
 801e762:	b2d2      	uxtb	r2, r2
 801e764:	10fd      	asrs	r5, r7, #3
 801e766:	fb1e fe03 	smulbb	lr, lr, r3
 801e76a:	00ff      	lsls	r7, r7, #3
 801e76c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e770:	fb06 e602 	mla	r6, r6, r2, lr
 801e774:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801e778:	b2ff      	uxtb	r7, r7
 801e77a:	fa5f fc8c 	uxtb.w	ip, ip
 801e77e:	b2e4      	uxtb	r4, r4
 801e780:	b2b6      	uxth	r6, r6
 801e782:	fb1c fc03 	smulbb	ip, ip, r3
 801e786:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e78a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e78e:	fb14 f403 	smulbb	r4, r4, r3
 801e792:	fb05 c502 	mla	r5, r5, r2, ip
 801e796:	f106 0e01 	add.w	lr, r6, #1
 801e79a:	fb07 4702 	mla	r7, r7, r2, r4
 801e79e:	b2ad      	uxth	r5, r5
 801e7a0:	b2bf      	uxth	r7, r7
 801e7a2:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e7a6:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801e7aa:	f105 0c01 	add.w	ip, r5, #1
 801e7ae:	1c7e      	adds	r6, r7, #1
 801e7b0:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e7b4:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e7b8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e7bc:	096d      	lsrs	r5, r5, #5
 801e7be:	ea46 060e 	orr.w	r6, r6, lr
 801e7c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801e7c6:	432e      	orrs	r6, r5
 801e7c8:	8006      	strh	r6, [r0, #0]
 801e7ca:	e7ba      	b.n	801e742 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e7cc:	f8ba 3000 	ldrh.w	r3, [sl]
 801e7d0:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801e7d4:	eba3 0308 	sub.w	r3, r3, r8
 801e7d8:	eba4 0408 	sub.w	r4, r4, r8
 801e7dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e7e0:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e7e4:	e78b      	b.n	801e6fe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e7e6:	4b03      	ldr	r3, [pc, #12]	; (801e7f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e7e8:	6818      	ldr	r0, [r3, #0]
 801e7ea:	6803      	ldr	r3, [r0, #0]
 801e7ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e7ee:	4798      	blx	r3
 801e7f0:	e76a      	b.n	801e6c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e7f2:	bf00      	nop
 801e7f4:	200137ec 	.word	0x200137ec
 801e7f8:	200137e6 	.word	0x200137e6

0801e7fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e7fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e800:	460c      	mov	r4, r1
 801e802:	b085      	sub	sp, #20
 801e804:	6810      	ldr	r0, [r2, #0]
 801e806:	6851      	ldr	r1, [r2, #4]
 801e808:	466d      	mov	r5, sp
 801e80a:	c503      	stmia	r5!, {r0, r1}
 801e80c:	6818      	ldr	r0, [r3, #0]
 801e80e:	6859      	ldr	r1, [r3, #4]
 801e810:	4616      	mov	r6, r2
 801e812:	c503      	stmia	r5!, {r0, r1}
 801e814:	4668      	mov	r0, sp
 801e816:	f7f7 fe27 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e81a:	4631      	mov	r1, r6
 801e81c:	a802      	add	r0, sp, #8
 801e81e:	f7f7 fe67 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e822:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e826:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e82a:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e82e:	4d28      	ldr	r5, [pc, #160]	; (801e8d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e830:	4e28      	ldr	r6, [pc, #160]	; (801e8d4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e832:	6828      	ldr	r0, [r5, #0]
 801e834:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e838:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e83c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e840:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e844:	f8bd 1000 	ldrh.w	r1, [sp]
 801e848:	440a      	add	r2, r1
 801e84a:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e84e:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e852:	4413      	add	r3, r2
 801e854:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e858:	6803      	ldr	r3, [r0, #0]
 801e85a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e85c:	4798      	blx	r3
 801e85e:	8833      	ldrh	r3, [r6, #0]
 801e860:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e864:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e868:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801e8d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e86c:	fb03 1202 	mla	r2, r3, r2, r1
 801e870:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e874:	fb08 f303 	mul.w	r3, r8, r3
 801e878:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e87c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e880:	4298      	cmp	r0, r3
 801e882:	d21d      	bcs.n	801e8c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e884:	eb00 080c 	add.w	r8, r0, ip
 801e888:	4540      	cmp	r0, r8
 801e88a:	d20f      	bcs.n	801e8ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e88c:	f854 1b04 	ldr.w	r1, [r4], #4
 801e890:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e894:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e898:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e89c:	ea42 0209 	orr.w	r2, r2, r9
 801e8a0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e8a4:	430a      	orrs	r2, r1
 801e8a6:	f820 2b02 	strh.w	r2, [r0], #2
 801e8aa:	e7ed      	b.n	801e888 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e8ac:	8832      	ldrh	r2, [r6, #0]
 801e8ae:	1bd2      	subs	r2, r2, r7
 801e8b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e8b4:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e8b8:	1bd2      	subs	r2, r2, r7
 801e8ba:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e8be:	e7df      	b.n	801e880 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e8c0:	6828      	ldr	r0, [r5, #0]
 801e8c2:	6803      	ldr	r3, [r0, #0]
 801e8c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e8c6:	4798      	blx	r3
 801e8c8:	b005      	add	sp, #20
 801e8ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e8ce:	bf00      	nop
 801e8d0:	200137ec 	.word	0x200137ec
 801e8d4:	200137e6 	.word	0x200137e6
 801e8d8:	fffff800 	.word	0xfffff800

0801e8dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e8dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e8e0:	460e      	mov	r6, r1
 801e8e2:	b08e      	sub	sp, #56	; 0x38
 801e8e4:	4604      	mov	r4, r0
 801e8e6:	6808      	ldr	r0, [r1, #0]
 801e8e8:	6849      	ldr	r1, [r1, #4]
 801e8ea:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801eac4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e8ee:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801eac8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e8f2:	461d      	mov	r5, r3
 801e8f4:	ab0a      	add	r3, sp, #40	; 0x28
 801e8f6:	c303      	stmia	r3!, {r0, r1}
 801e8f8:	6810      	ldr	r0, [r2, #0]
 801e8fa:	6851      	ldr	r1, [r2, #4]
 801e8fc:	ab0c      	add	r3, sp, #48	; 0x30
 801e8fe:	c303      	stmia	r3!, {r0, r1}
 801e900:	a80a      	add	r0, sp, #40	; 0x28
 801e902:	f7f7 fdb1 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e906:	4631      	mov	r1, r6
 801e908:	a80c      	add	r0, sp, #48	; 0x30
 801e90a:	f7f7 fdf1 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e90e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801e912:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801e916:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e91a:	f8d8 0000 	ldr.w	r0, [r8]
 801e91e:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801e922:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801e926:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e92a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e92e:	440c      	add	r4, r1
 801e930:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801e934:	440a      	add	r2, r1
 801e936:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801e93a:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801e93e:	4413      	add	r3, r2
 801e940:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801e944:	6803      	ldr	r3, [r0, #0]
 801e946:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e948:	4798      	blx	r3
 801e94a:	2dff      	cmp	r5, #255	; 0xff
 801e94c:	d124      	bne.n	801e998 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e94e:	f010 0f01 	tst.w	r0, #1
 801e952:	f8d8 0000 	ldr.w	r0, [r8]
 801e956:	d022      	beq.n	801e99e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e958:	2100      	movs	r1, #0
 801e95a:	f8d0 c000 	ldr.w	ip, [r0]
 801e95e:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801e962:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801e966:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e96a:	f04f 0e01 	mov.w	lr, #1
 801e96e:	f8cd e018 	str.w	lr, [sp, #24]
 801e972:	f8b9 e000 	ldrh.w	lr, [r9]
 801e976:	9503      	str	r5, [sp, #12]
 801e978:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e97c:	b2b6      	uxth	r6, r6
 801e97e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e982:	9102      	str	r1, [sp, #8]
 801e984:	b2bf      	uxth	r7, r7
 801e986:	9601      	str	r6, [sp, #4]
 801e988:	9700      	str	r7, [sp, #0]
 801e98a:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801e98e:	4621      	mov	r1, r4
 801e990:	47a8      	blx	r5
 801e992:	b00e      	add	sp, #56	; 0x38
 801e994:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e998:	f010 0f04 	tst.w	r0, #4
 801e99c:	e7d9      	b.n	801e952 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e99e:	6803      	ldr	r3, [r0, #0]
 801e9a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e9a2:	4798      	blx	r3
 801e9a4:	f8b9 3000 	ldrh.w	r3, [r9]
 801e9a8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801e9ac:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801e9b0:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801e9b4:	fb03 1202 	mla	r2, r3, r2, r1
 801e9b8:	ebac 0c07 	sub.w	ip, ip, r7
 801e9bc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e9c0:	435e      	muls	r6, r3
 801e9c2:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e9c6:	2dff      	cmp	r5, #255	; 0xff
 801e9c8:	eba3 0707 	sub.w	r7, r3, r7
 801e9cc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e9d0:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e9d4:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e9d8:	d049      	beq.n	801ea6e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e9da:	43eb      	mvns	r3, r5
 801e9dc:	fa1f f985 	uxth.w	r9, r5
 801e9e0:	b2db      	uxtb	r3, r3
 801e9e2:	42b0      	cmp	r0, r6
 801e9e4:	d266      	bcs.n	801eab4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e9e6:	eb00 0a0e 	add.w	sl, r0, lr
 801e9ea:	4550      	cmp	r0, sl
 801e9ec:	4621      	mov	r1, r4
 801e9ee:	f104 0403 	add.w	r4, r4, #3
 801e9f2:	d25b      	bcs.n	801eaac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e9f4:	8802      	ldrh	r2, [r0, #0]
 801e9f6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e9fa:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e9fe:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ea02:	fb11 f109 	smulbb	r1, r1, r9
 801ea06:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ea0a:	10d5      	asrs	r5, r2, #3
 801ea0c:	fb08 1803 	mla	r8, r8, r3, r1
 801ea10:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ea14:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ea18:	fb11 f109 	smulbb	r1, r1, r9
 801ea1c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ea20:	fb05 1503 	mla	r5, r5, r3, r1
 801ea24:	00d2      	lsls	r2, r2, #3
 801ea26:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ea2a:	b2d2      	uxtb	r2, r2
 801ea2c:	fb11 f109 	smulbb	r1, r1, r9
 801ea30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ea34:	fa1f f888 	uxth.w	r8, r8
 801ea38:	fb02 1203 	mla	r2, r2, r3, r1
 801ea3c:	b292      	uxth	r2, r2
 801ea3e:	f108 0101 	add.w	r1, r8, #1
 801ea42:	b2ad      	uxth	r5, r5
 801ea44:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ea48:	1c51      	adds	r1, r2, #1
 801ea4a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ea4e:	1c69      	adds	r1, r5, #1
 801ea50:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ea54:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ea58:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea5c:	096d      	lsrs	r5, r5, #5
 801ea5e:	ea42 0208 	orr.w	r2, r2, r8
 801ea62:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ea66:	432a      	orrs	r2, r5
 801ea68:	f820 2b02 	strh.w	r2, [r0], #2
 801ea6c:	e7bd      	b.n	801e9ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ea6e:	4a14      	ldr	r2, [pc, #80]	; (801eac0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ea70:	42b0      	cmp	r0, r6
 801ea72:	d21f      	bcs.n	801eab4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ea74:	eb00 050e 	add.w	r5, r0, lr
 801ea78:	42a8      	cmp	r0, r5
 801ea7a:	4621      	mov	r1, r4
 801ea7c:	f104 0403 	add.w	r4, r4, #3
 801ea80:	d210      	bcs.n	801eaa4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ea82:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ea86:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ea8a:	00db      	lsls	r3, r3, #3
 801ea8c:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ea90:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea94:	430b      	orrs	r3, r1
 801ea96:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ea9a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ea9e:	f820 3b02 	strh.w	r3, [r0], #2
 801eaa2:	e7e9      	b.n	801ea78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801eaa4:	4438      	add	r0, r7
 801eaa6:	eb01 040c 	add.w	r4, r1, ip
 801eaaa:	e7e1      	b.n	801ea70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801eaac:	4438      	add	r0, r7
 801eaae:	eb01 040c 	add.w	r4, r1, ip
 801eab2:	e796      	b.n	801e9e2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801eab4:	4b03      	ldr	r3, [pc, #12]	; (801eac4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801eab6:	6818      	ldr	r0, [r3, #0]
 801eab8:	6803      	ldr	r3, [r0, #0]
 801eaba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801eabc:	4798      	blx	r3
 801eabe:	e768      	b.n	801e992 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801eac0:	fffff800 	.word	0xfffff800
 801eac4:	200137ec 	.word	0x200137ec
 801eac8:	200137e6 	.word	0x200137e6

0801eacc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801eacc:	b4f0      	push	{r4, r5, r6, r7}
 801eace:	4616      	mov	r6, r2
 801ead0:	2e01      	cmp	r6, #1
 801ead2:	461c      	mov	r4, r3
 801ead4:	460d      	mov	r5, r1
 801ead6:	9a04      	ldr	r2, [sp, #16]
 801ead8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801eadc:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801eae0:	d012      	beq.n	801eb08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801eae2:	d303      	bcc.n	801eaec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801eae4:	2e02      	cmp	r6, #2
 801eae6:	d00a      	beq.n	801eafe <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801eae8:	bcf0      	pop	{r4, r5, r6, r7}
 801eaea:	4770      	bx	lr
 801eaec:	6805      	ldr	r5, [r0, #0]
 801eaee:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801eaf2:	68ed      	ldr	r5, [r5, #12]
 801eaf4:	4613      	mov	r3, r2
 801eaf6:	46ac      	mov	ip, r5
 801eaf8:	4622      	mov	r2, r4
 801eafa:	bcf0      	pop	{r4, r5, r6, r7}
 801eafc:	4760      	bx	ip
 801eafe:	4621      	mov	r1, r4
 801eb00:	4628      	mov	r0, r5
 801eb02:	bcf0      	pop	{r4, r5, r6, r7}
 801eb04:	f7ff bd94 	b.w	801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eb08:	4621      	mov	r1, r4
 801eb0a:	4628      	mov	r0, r5
 801eb0c:	bcf0      	pop	{r4, r5, r6, r7}
 801eb0e:	f7ff bee5 	b.w	801e8dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801eb14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801eb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb18:	4681      	mov	r9, r0
 801eb1a:	b093      	sub	sp, #76	; 0x4c
 801eb1c:	6810      	ldr	r0, [r2, #0]
 801eb1e:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801eb22:	4f6d      	ldr	r7, [pc, #436]	; (801ecd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801eb24:	4688      	mov	r8, r1
 801eb26:	6851      	ldr	r1, [r2, #4]
 801eb28:	ac0e      	add	r4, sp, #56	; 0x38
 801eb2a:	c403      	stmia	r4!, {r0, r1}
 801eb2c:	6818      	ldr	r0, [r3, #0]
 801eb2e:	6859      	ldr	r1, [r3, #4]
 801eb30:	ac10      	add	r4, sp, #64	; 0x40
 801eb32:	4616      	mov	r6, r2
 801eb34:	c403      	stmia	r4!, {r0, r1}
 801eb36:	a80e      	add	r0, sp, #56	; 0x38
 801eb38:	f7f7 fc96 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eb3c:	4631      	mov	r1, r6
 801eb3e:	a810      	add	r0, sp, #64	; 0x40
 801eb40:	f7f7 fcd6 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eb44:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801eb48:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801eb4c:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801eb50:	4e62      	ldr	r6, [pc, #392]	; (801ecdc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801eb52:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801eb56:	6830      	ldr	r0, [r6, #0]
 801eb58:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801eb5c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eb60:	4489      	add	r9, r1
 801eb62:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801eb66:	440a      	add	r2, r1
 801eb68:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801eb6c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801eb70:	4413      	add	r3, r2
 801eb72:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801eb76:	6803      	ldr	r3, [r0, #0]
 801eb78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eb7a:	4798      	blx	r3
 801eb7c:	f010 0f80 	tst.w	r0, #128	; 0x80
 801eb80:	6830      	ldr	r0, [r6, #0]
 801eb82:	d01d      	beq.n	801ebc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801eb84:	2200      	movs	r2, #0
 801eb86:	6801      	ldr	r1, [r0, #0]
 801eb88:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801eb8c:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801eb90:	220b      	movs	r2, #11
 801eb92:	9207      	str	r2, [sp, #28]
 801eb94:	883a      	ldrh	r2, [r7, #0]
 801eb96:	9206      	str	r2, [sp, #24]
 801eb98:	2201      	movs	r2, #1
 801eb9a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801eb9e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801eba2:	9203      	str	r2, [sp, #12]
 801eba4:	b2a4      	uxth	r4, r4
 801eba6:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801ebaa:	9200      	str	r2, [sp, #0]
 801ebac:	b2ad      	uxth	r5, r5
 801ebae:	9502      	str	r5, [sp, #8]
 801ebb0:	9401      	str	r4, [sp, #4]
 801ebb2:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801ebb4:	4642      	mov	r2, r8
 801ebb6:	4649      	mov	r1, r9
 801ebb8:	47a0      	blx	r4
 801ebba:	b013      	add	sp, #76	; 0x4c
 801ebbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ebc0:	6803      	ldr	r3, [r0, #0]
 801ebc2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ebc4:	4798      	blx	r3
 801ebc6:	883b      	ldrh	r3, [r7, #0]
 801ebc8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801ebcc:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801ebd0:	fb03 1202 	mla	r2, r3, r2, r1
 801ebd4:	435d      	muls	r5, r3
 801ebd6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ebda:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ebde:	920c      	str	r2, [sp, #48]	; 0x30
 801ebe0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801ebe4:	1b12      	subs	r2, r2, r4
 801ebe6:	920d      	str	r2, [sp, #52]	; 0x34
 801ebe8:	0062      	lsls	r2, r4, #1
 801ebea:	1b1c      	subs	r4, r3, r4
 801ebec:	0063      	lsls	r3, r4, #1
 801ebee:	920a      	str	r2, [sp, #40]	; 0x28
 801ebf0:	930b      	str	r3, [sp, #44]	; 0x2c
 801ebf2:	f04f 0e04 	mov.w	lr, #4
 801ebf6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ebf8:	4298      	cmp	r0, r3
 801ebfa:	d266      	bcs.n	801ecca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ebfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ebfe:	eb00 0b03 	add.w	fp, r0, r3
 801ec02:	4558      	cmp	r0, fp
 801ec04:	d25c      	bcs.n	801ecc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ec06:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ec0a:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ec0e:	f858 2003 	ldr.w	r2, [r8, r3]
 801ec12:	0e11      	lsrs	r1, r2, #24
 801ec14:	d012      	beq.n	801ec3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ec16:	29ff      	cmp	r1, #255	; 0xff
 801ec18:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ec1c:	d110      	bne.n	801ec40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ec1e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801ec22:	d10d      	bne.n	801ec40 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ec24:	0953      	lsrs	r3, r2, #5
 801ec26:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801ec2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec2e:	f027 0707 	bic.w	r7, r7, #7
 801ec32:	431f      	orrs	r7, r3
 801ec34:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ec38:	433a      	orrs	r2, r7
 801ec3a:	8002      	strh	r2, [r0, #0]
 801ec3c:	3002      	adds	r0, #2
 801ec3e:	e7e0      	b.n	801ec02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ec40:	fb0a f101 	mul.w	r1, sl, r1
 801ec44:	8806      	ldrh	r6, [r0, #0]
 801ec46:	1c4b      	adds	r3, r1, #1
 801ec48:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ec4c:	1235      	asrs	r5, r6, #8
 801ec4e:	10f4      	asrs	r4, r6, #3
 801ec50:	121b      	asrs	r3, r3, #8
 801ec52:	00f6      	lsls	r6, r6, #3
 801ec54:	b299      	uxth	r1, r3
 801ec56:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ec5a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ec5e:	b2f6      	uxtb	r6, r6
 801ec60:	43db      	mvns	r3, r3
 801ec62:	b2d2      	uxtb	r2, r2
 801ec64:	b2db      	uxtb	r3, r3
 801ec66:	fb1c fc01 	smulbb	ip, ip, r1
 801ec6a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ec6e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ec72:	fb12 f201 	smulbb	r2, r2, r1
 801ec76:	fb05 c503 	mla	r5, r5, r3, ip
 801ec7a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801ec7e:	b2ff      	uxtb	r7, r7
 801ec80:	fb06 2203 	mla	r2, r6, r3, r2
 801ec84:	b2ad      	uxth	r5, r5
 801ec86:	fb17 f701 	smulbb	r7, r7, r1
 801ec8a:	b292      	uxth	r2, r2
 801ec8c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ec90:	fb04 7403 	mla	r4, r4, r3, r7
 801ec94:	f105 0c01 	add.w	ip, r5, #1
 801ec98:	1c57      	adds	r7, r2, #1
 801ec9a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ec9e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801eca2:	b2a4      	uxth	r4, r4
 801eca4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801eca8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ecac:	433d      	orrs	r5, r7
 801ecae:	1c67      	adds	r7, r4, #1
 801ecb0:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801ecb4:	0964      	lsrs	r4, r4, #5
 801ecb6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801ecba:	4325      	orrs	r5, r4
 801ecbc:	8005      	strh	r5, [r0, #0]
 801ecbe:	e7bd      	b.n	801ec3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ecc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ecc2:	4418      	add	r0, r3
 801ecc4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ecc6:	4499      	add	r9, r3
 801ecc8:	e795      	b.n	801ebf6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801ecca:	4b04      	ldr	r3, [pc, #16]	; (801ecdc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801eccc:	6818      	ldr	r0, [r3, #0]
 801ecce:	6803      	ldr	r3, [r0, #0]
 801ecd0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ecd2:	4798      	blx	r3
 801ecd4:	e771      	b.n	801ebba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801ecd6:	bf00      	nop
 801ecd8:	200137e6 	.word	0x200137e6
 801ecdc:	200137ec 	.word	0x200137ec

0801ece0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801ece0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ece4:	b087      	sub	sp, #28
 801ece6:	4680      	mov	r8, r0
 801ece8:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801ecec:	460d      	mov	r5, r1
 801ecee:	4614      	mov	r4, r2
 801ecf0:	2e00      	cmp	r6, #0
 801ecf2:	f000 80b9 	beq.w	801ee68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801ecf6:	6810      	ldr	r0, [r2, #0]
 801ecf8:	6851      	ldr	r1, [r2, #4]
 801ecfa:	af02      	add	r7, sp, #8
 801ecfc:	c703      	stmia	r7!, {r0, r1}
 801ecfe:	6818      	ldr	r0, [r3, #0]
 801ed00:	6859      	ldr	r1, [r3, #4]
 801ed02:	af04      	add	r7, sp, #16
 801ed04:	c703      	stmia	r7!, {r0, r1}
 801ed06:	a802      	add	r0, sp, #8
 801ed08:	f7f7 fbae 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ed0c:	4621      	mov	r1, r4
 801ed0e:	a804      	add	r0, sp, #16
 801ed10:	f7f7 fbee 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ed14:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ed18:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ed1c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801ed20:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801ed24:	fb14 2103 	smlabb	r1, r4, r3, r2
 801ed28:	eb08 0401 	add.w	r4, r8, r1
 801ed2c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ed30:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ed34:	440a      	add	r2, r1
 801ed36:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ed3a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ed3e:	4413      	add	r3, r2
 801ed40:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ed44:	4b4a      	ldr	r3, [pc, #296]	; (801ee70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ed46:	6818      	ldr	r0, [r3, #0]
 801ed48:	6803      	ldr	r3, [r0, #0]
 801ed4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ed4c:	4798      	blx	r3
 801ed4e:	4b49      	ldr	r3, [pc, #292]	; (801ee74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801ed50:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801ed54:	881a      	ldrh	r2, [r3, #0]
 801ed56:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801ed5a:	2eff      	cmp	r6, #255	; 0xff
 801ed5c:	fb02 c101 	mla	r1, r2, r1, ip
 801ed60:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ed64:	fb02 f207 	mul.w	r2, r2, r7
 801ed68:	f105 0104 	add.w	r1, r5, #4
 801ed6c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801ed70:	461d      	mov	r5, r3
 801ed72:	d05a      	beq.n	801ee2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801ed74:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801ed78:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ed7c:	b2b6      	uxth	r6, r6
 801ed7e:	fa1f fe8e 	uxth.w	lr, lr
 801ed82:	9301      	str	r3, [sp, #4]
 801ed84:	4282      	cmp	r2, r0
 801ed86:	d96a      	bls.n	801ee5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ed88:	eb00 0b0a 	add.w	fp, r0, sl
 801ed8c:	4583      	cmp	fp, r0
 801ed8e:	d940      	bls.n	801ee12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ed90:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ed94:	8805      	ldrh	r5, [r0, #0]
 801ed96:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ed9a:	122f      	asrs	r7, r5, #8
 801ed9c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801eda0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801eda4:	fb17 f70e 	smulbb	r7, r7, lr
 801eda8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801edac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801edb0:	00ed      	lsls	r5, r5, #3
 801edb2:	fb0c 7c06 	mla	ip, ip, r6, r7
 801edb6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801edba:	10df      	asrs	r7, r3, #3
 801edbc:	b2ed      	uxtb	r5, r5
 801edbe:	00db      	lsls	r3, r3, #3
 801edc0:	fa1f fc8c 	uxth.w	ip, ip
 801edc4:	fb19 f90e 	smulbb	r9, r9, lr
 801edc8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801edcc:	b2db      	uxtb	r3, r3
 801edce:	fb15 f50e 	smulbb	r5, r5, lr
 801edd2:	fb07 9706 	mla	r7, r7, r6, r9
 801edd6:	fb03 5306 	mla	r3, r3, r6, r5
 801edda:	f10c 0901 	add.w	r9, ip, #1
 801edde:	b29b      	uxth	r3, r3
 801ede0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ede4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801ede8:	f103 0c01 	add.w	ip, r3, #1
 801edec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801edf0:	b2bf      	uxth	r7, r7
 801edf2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801edf6:	ea4c 0c09 	orr.w	ip, ip, r9
 801edfa:	f107 0901 	add.w	r9, r7, #1
 801edfe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ee02:	097f      	lsrs	r7, r7, #5
 801ee04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801ee08:	ea4c 0c07 	orr.w	ip, ip, r7
 801ee0c:	f820 cb02 	strh.w	ip, [r0], #2
 801ee10:	e7bc      	b.n	801ed8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ee12:	9b01      	ldr	r3, [sp, #4]
 801ee14:	881b      	ldrh	r3, [r3, #0]
 801ee16:	eba3 0308 	sub.w	r3, r3, r8
 801ee1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee1e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ee22:	eba3 0308 	sub.w	r3, r3, r8
 801ee26:	441c      	add	r4, r3
 801ee28:	e7ac      	b.n	801ed84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801ee2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ee2e:	4282      	cmp	r2, r0
 801ee30:	d915      	bls.n	801ee5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ee32:	eb00 060a 	add.w	r6, r0, sl
 801ee36:	4286      	cmp	r6, r0
 801ee38:	d906      	bls.n	801ee48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ee3a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ee3e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ee42:	f820 3b02 	strh.w	r3, [r0], #2
 801ee46:	e7f6      	b.n	801ee36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801ee48:	882b      	ldrh	r3, [r5, #0]
 801ee4a:	eba3 0308 	sub.w	r3, r3, r8
 801ee4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ee56:	eba3 0308 	sub.w	r3, r3, r8
 801ee5a:	441c      	add	r4, r3
 801ee5c:	e7e7      	b.n	801ee2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ee5e:	4b04      	ldr	r3, [pc, #16]	; (801ee70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801ee60:	6818      	ldr	r0, [r3, #0]
 801ee62:	6803      	ldr	r3, [r0, #0]
 801ee64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ee66:	4798      	blx	r3
 801ee68:	b007      	add	sp, #28
 801ee6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee6e:	bf00      	nop
 801ee70:	200137ec 	.word	0x200137ec
 801ee74:	200137e6 	.word	0x200137e6

0801ee78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801ee78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee7c:	b091      	sub	sp, #68	; 0x44
 801ee7e:	4680      	mov	r8, r0
 801ee80:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801ee84:	460f      	mov	r7, r1
 801ee86:	4614      	mov	r4, r2
 801ee88:	2d00      	cmp	r5, #0
 801ee8a:	d051      	beq.n	801ef30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ee8c:	6810      	ldr	r0, [r2, #0]
 801ee8e:	6851      	ldr	r1, [r2, #4]
 801ee90:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801f094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801ee94:	ae0c      	add	r6, sp, #48	; 0x30
 801ee96:	c603      	stmia	r6!, {r0, r1}
 801ee98:	6818      	ldr	r0, [r3, #0]
 801ee9a:	6859      	ldr	r1, [r3, #4]
 801ee9c:	ae0e      	add	r6, sp, #56	; 0x38
 801ee9e:	c603      	stmia	r6!, {r0, r1}
 801eea0:	a80c      	add	r0, sp, #48	; 0x30
 801eea2:	f7f7 fae1 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801eea6:	4621      	mov	r1, r4
 801eea8:	a80e      	add	r0, sp, #56	; 0x38
 801eeaa:	f7f7 fb21 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801eeae:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801eeb2:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801eeb6:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801eeba:	f8d9 0000 	ldr.w	r0, [r9]
 801eebe:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801eec2:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801eec6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801eeca:	eb08 0401 	add.w	r4, r8, r1
 801eece:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801eed2:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801f098 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801eed6:	440a      	add	r2, r1
 801eed8:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801eedc:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801eee0:	4413      	add	r3, r2
 801eee2:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801eee6:	6803      	ldr	r3, [r0, #0]
 801eee8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801eeea:	4798      	blx	r3
 801eeec:	f010 0f80 	tst.w	r0, #128	; 0x80
 801eef0:	f8d9 0000 	ldr.w	r0, [r9]
 801eef4:	d01f      	beq.n	801ef36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801eef6:	2200      	movs	r2, #0
 801eef8:	6801      	ldr	r1, [r0, #0]
 801eefa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801eefe:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801ef02:	220b      	movs	r2, #11
 801ef04:	9207      	str	r2, [sp, #28]
 801ef06:	f8b8 2000 	ldrh.w	r2, [r8]
 801ef0a:	9206      	str	r2, [sp, #24]
 801ef0c:	2201      	movs	r2, #1
 801ef0e:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801ef12:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801ef16:	9203      	str	r2, [sp, #12]
 801ef18:	fa1f f28a 	uxth.w	r2, sl
 801ef1c:	9202      	str	r2, [sp, #8]
 801ef1e:	b2b6      	uxth	r6, r6
 801ef20:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801ef24:	9200      	str	r2, [sp, #0]
 801ef26:	9601      	str	r6, [sp, #4]
 801ef28:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801ef2a:	463a      	mov	r2, r7
 801ef2c:	4621      	mov	r1, r4
 801ef2e:	47a8      	blx	r5
 801ef30:	b011      	add	sp, #68	; 0x44
 801ef32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef36:	6803      	ldr	r3, [r0, #0]
 801ef38:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ef3a:	4798      	blx	r3
 801ef3c:	f8b8 2000 	ldrh.w	r2, [r8]
 801ef40:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801ef44:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801ef48:	2dff      	cmp	r5, #255	; 0xff
 801ef4a:	fb02 1303 	mla	r3, r2, r3, r1
 801ef4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ef52:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ef56:	fb0a fa02 	mul.w	sl, sl, r2
 801ef5a:	d062      	beq.n	801f022 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ef5c:	ea6f 0c05 	mvn.w	ip, r5
 801ef60:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801ef64:	930a      	str	r3, [sp, #40]	; 0x28
 801ef66:	b2ad      	uxth	r5, r5
 801ef68:	fa5f fc8c 	uxtb.w	ip, ip
 801ef6c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801ef70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ef72:	4298      	cmp	r0, r3
 801ef74:	f080 8085 	bcs.w	801f082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ef78:	eb00 0b09 	add.w	fp, r0, r9
 801ef7c:	4558      	cmp	r0, fp
 801ef7e:	d246      	bcs.n	801f00e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801ef80:	f814 eb01 	ldrb.w	lr, [r4], #1
 801ef84:	2303      	movs	r3, #3
 801ef86:	2204      	movs	r2, #4
 801ef88:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801ef8c:	eb07 0a0e 	add.w	sl, r7, lr
 801ef90:	8803      	ldrh	r3, [r0, #0]
 801ef92:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ef96:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ef9a:	1219      	asrs	r1, r3, #8
 801ef9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801efa0:	fb18 f805 	smulbb	r8, r8, r5
 801efa4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801efa8:	10da      	asrs	r2, r3, #3
 801efaa:	fb01 810c 	mla	r1, r1, ip, r8
 801efae:	00db      	lsls	r3, r3, #3
 801efb0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801efb4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801efb8:	b2db      	uxtb	r3, r3
 801efba:	fb18 f805 	smulbb	r8, r8, r5
 801efbe:	fb1e fe05 	smulbb	lr, lr, r5
 801efc2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801efc6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801efca:	b289      	uxth	r1, r1
 801efcc:	fb02 820c 	mla	r2, r2, ip, r8
 801efd0:	fb03 e30c 	mla	r3, r3, ip, lr
 801efd4:	b292      	uxth	r2, r2
 801efd6:	b29b      	uxth	r3, r3
 801efd8:	f101 0801 	add.w	r8, r1, #1
 801efdc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801efe0:	f103 0e01 	add.w	lr, r3, #1
 801efe4:	f102 0801 	add.w	r8, r2, #1
 801efe8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801efec:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801eff0:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801eff4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801eff8:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801effc:	ea4e 0101 	orr.w	r1, lr, r1
 801f000:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801f004:	ea41 0108 	orr.w	r1, r1, r8
 801f008:	f820 1b02 	strh.w	r1, [r0], #2
 801f00c:	e7b6      	b.n	801ef7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801f00e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f010:	881b      	ldrh	r3, [r3, #0]
 801f012:	1b9b      	subs	r3, r3, r6
 801f014:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f018:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f01c:	1b9b      	subs	r3, r3, r6
 801f01e:	441c      	add	r4, r3
 801f020:	e7a6      	b.n	801ef70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801f022:	491b      	ldr	r1, [pc, #108]	; (801f090 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801f024:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801f028:	2203      	movs	r2, #3
 801f02a:	2504      	movs	r5, #4
 801f02c:	4550      	cmp	r0, sl
 801f02e:	d228      	bcs.n	801f082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801f030:	eb00 0c09 	add.w	ip, r0, r9
 801f034:	4560      	cmp	r0, ip
 801f036:	4623      	mov	r3, r4
 801f038:	d219      	bcs.n	801f06e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801f03a:	f893 e000 	ldrb.w	lr, [r3]
 801f03e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801f042:	eb07 0b0e 	add.w	fp, r7, lr
 801f046:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f04a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801f04e:	f89b b001 	ldrb.w	fp, [fp, #1]
 801f052:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801f056:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801f05a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801f05e:	ea43 030b 	orr.w	r3, r3, fp
 801f062:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801f066:	3401      	adds	r4, #1
 801f068:	f820 3b02 	strh.w	r3, [r0], #2
 801f06c:	e7e2      	b.n	801f034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801f06e:	f8b8 3000 	ldrh.w	r3, [r8]
 801f072:	1b9b      	subs	r3, r3, r6
 801f074:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f078:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801f07c:	1b9b      	subs	r3, r3, r6
 801f07e:	441c      	add	r4, r3
 801f080:	e7d4      	b.n	801f02c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801f082:	4b04      	ldr	r3, [pc, #16]	; (801f094 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801f084:	6818      	ldr	r0, [r3, #0]
 801f086:	6803      	ldr	r3, [r0, #0]
 801f088:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f08a:	4798      	blx	r3
 801f08c:	e750      	b.n	801ef30 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801f08e:	bf00      	nop
 801f090:	fffff800 	.word	0xfffff800
 801f094:	200137ec 	.word	0x200137ec
 801f098:	200137e6 	.word	0x200137e6

0801f09c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801f09c:	b4f0      	push	{r4, r5, r6, r7}
 801f09e:	460c      	mov	r4, r1
 801f0a0:	4611      	mov	r1, r2
 801f0a2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f0a6:	780f      	ldrb	r7, [r1, #0]
 801f0a8:	784e      	ldrb	r6, [r1, #1]
 801f0aa:	2f01      	cmp	r7, #1
 801f0ac:	461a      	mov	r2, r3
 801f0ae:	9b04      	ldr	r3, [sp, #16]
 801f0b0:	d036      	beq.n	801f120 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801f0b2:	d31e      	bcc.n	801f0f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801f0b4:	2f02      	cmp	r7, #2
 801f0b6:	d14a      	bne.n	801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f0b8:	2e03      	cmp	r6, #3
 801f0ba:	d848      	bhi.n	801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f0bc:	e8df f006 	tbb	[pc, r6]
 801f0c0:	16140702 	.word	0x16140702
 801f0c4:	9504      	str	r5, [sp, #16]
 801f0c6:	4620      	mov	r0, r4
 801f0c8:	bcf0      	pop	{r4, r5, r6, r7}
 801f0ca:	f7ff be09 	b.w	801ece0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801f0ce:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f0d0:	2800      	cmp	r0, #0
 801f0d2:	d03c      	beq.n	801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f0d4:	6806      	ldr	r6, [r0, #0]
 801f0d6:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f0da:	68b5      	ldr	r5, [r6, #8]
 801f0dc:	4613      	mov	r3, r2
 801f0de:	46ac      	mov	ip, r5
 801f0e0:	460a      	mov	r2, r1
 801f0e2:	4621      	mov	r1, r4
 801f0e4:	bcf0      	pop	{r4, r5, r6, r7}
 801f0e6:	4760      	bx	ip
 801f0e8:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f0ea:	e7f1      	b.n	801f0d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f0ec:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f0f0:	e7ee      	b.n	801f0d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801f0f2:	2e03      	cmp	r6, #3
 801f0f4:	d82b      	bhi.n	801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f0f6:	e8df f006 	tbb	[pc, r6]
 801f0fa:	0702      	.short	0x0702
 801f0fc:	100e      	.short	0x100e
 801f0fe:	9504      	str	r5, [sp, #16]
 801f100:	4620      	mov	r0, r4
 801f102:	bcf0      	pop	{r4, r5, r6, r7}
 801f104:	f7ff bd06 	b.w	801eb14 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801f108:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f10a:	b300      	cbz	r0, 801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f10c:	6806      	ldr	r6, [r0, #0]
 801f10e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f112:	68f5      	ldr	r5, [r6, #12]
 801f114:	e7e2      	b.n	801f0dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f116:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f118:	e7f7      	b.n	801f10a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f11a:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f11e:	e7f4      	b.n	801f10a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801f120:	2e03      	cmp	r6, #3
 801f122:	d814      	bhi.n	801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f124:	e8df f006 	tbb	[pc, r6]
 801f128:	100e0702 	.word	0x100e0702
 801f12c:	9504      	str	r5, [sp, #16]
 801f12e:	4620      	mov	r0, r4
 801f130:	bcf0      	pop	{r4, r5, r6, r7}
 801f132:	f7ff bea1 	b.w	801ee78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801f136:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801f138:	b148      	cbz	r0, 801f14e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801f13a:	6806      	ldr	r6, [r0, #0]
 801f13c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801f140:	6935      	ldr	r5, [r6, #16]
 801f142:	e7cb      	b.n	801f0dc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801f144:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801f146:	e7f7      	b.n	801f138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f148:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801f14c:	e7f4      	b.n	801f138 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801f14e:	bcf0      	pop	{r4, r5, r6, r7}
 801f150:	4770      	bx	lr
	...

0801f154 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801f154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f158:	4604      	mov	r4, r0
 801f15a:	b087      	sub	sp, #28
 801f15c:	6810      	ldr	r0, [r2, #0]
 801f15e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801f162:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801f39c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801f166:	460e      	mov	r6, r1
 801f168:	6851      	ldr	r1, [r2, #4]
 801f16a:	ad02      	add	r5, sp, #8
 801f16c:	c503      	stmia	r5!, {r0, r1}
 801f16e:	6818      	ldr	r0, [r3, #0]
 801f170:	6859      	ldr	r1, [r3, #4]
 801f172:	ad04      	add	r5, sp, #16
 801f174:	4617      	mov	r7, r2
 801f176:	c503      	stmia	r5!, {r0, r1}
 801f178:	a802      	add	r0, sp, #8
 801f17a:	f7f7 f975 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f17e:	4639      	mov	r1, r7
 801f180:	a804      	add	r0, sp, #16
 801f182:	f7f7 f9b5 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801f186:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f18a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f18e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801f192:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801f196:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801f19a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801f19e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801f1a2:	440e      	add	r6, r1
 801f1a4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801f1a8:	440a      	add	r2, r1
 801f1aa:	f8ad 2010 	strh.w	r2, [sp, #16]
 801f1ae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801f1b2:	4413      	add	r3, r2
 801f1b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801f1b8:	4b77      	ldr	r3, [pc, #476]	; (801f398 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f1ba:	6818      	ldr	r0, [r3, #0]
 801f1bc:	6803      	ldr	r3, [r0, #0]
 801f1be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f1c0:	4798      	blx	r3
 801f1c2:	f8b9 b000 	ldrh.w	fp, [r9]
 801f1c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f1ca:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801f1ce:	fb0b 2303 	mla	r3, fp, r3, r2
 801f1d2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f1d6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801f1da:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801f1de:	fb05 f50b 	mul.w	r5, r5, fp
 801f1e2:	9300      	str	r3, [sp, #0]
 801f1e4:	d069      	beq.n	801f2ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801f1e6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801f1ea:	4558      	cmp	r0, fp
 801f1ec:	f080 80cc 	bcs.w	801f388 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f1f0:	9b00      	ldr	r3, [sp, #0]
 801f1f2:	18c3      	adds	r3, r0, r3
 801f1f4:	9301      	str	r3, [sp, #4]
 801f1f6:	4631      	mov	r1, r6
 801f1f8:	9b01      	ldr	r3, [sp, #4]
 801f1fa:	4298      	cmp	r0, r3
 801f1fc:	d24f      	bcs.n	801f29e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801f1fe:	f811 2b01 	ldrb.w	r2, [r1], #1
 801f202:	2a00      	cmp	r2, #0
 801f204:	d048      	beq.n	801f298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f206:	fb0a f202 	mul.w	r2, sl, r2
 801f20a:	1c53      	adds	r3, r2, #1
 801f20c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f210:	121b      	asrs	r3, r3, #8
 801f212:	d041      	beq.n	801f298 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801f214:	8802      	ldrh	r2, [r0, #0]
 801f216:	f8b4 c000 	ldrh.w	ip, [r4]
 801f21a:	b29e      	uxth	r6, r3
 801f21c:	1215      	asrs	r5, r2, #8
 801f21e:	43db      	mvns	r3, r3
 801f220:	b2db      	uxtb	r3, r3
 801f222:	ea4f 272c 	mov.w	r7, ip, asr #8
 801f226:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801f22a:	fb15 f503 	smulbb	r5, r5, r3
 801f22e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801f232:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801f236:	00d2      	lsls	r2, r2, #3
 801f238:	fb07 5706 	mla	r7, r7, r6, r5
 801f23c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801f240:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801f244:	b2d2      	uxtb	r2, r2
 801f246:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f24a:	b2bf      	uxth	r7, r7
 801f24c:	fb1e fe03 	smulbb	lr, lr, r3
 801f250:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801f254:	fa5f fc8c 	uxtb.w	ip, ip
 801f258:	fb12 f203 	smulbb	r2, r2, r3
 801f25c:	fb05 e506 	mla	r5, r5, r6, lr
 801f260:	fb0c 2c06 	mla	ip, ip, r6, r2
 801f264:	f107 0e01 	add.w	lr, r7, #1
 801f268:	fa1f fc8c 	uxth.w	ip, ip
 801f26c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801f270:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801f274:	f10c 0701 	add.w	r7, ip, #1
 801f278:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f27c:	b2ad      	uxth	r5, r5
 801f27e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f282:	ea47 070e 	orr.w	r7, r7, lr
 801f286:	f105 0e01 	add.w	lr, r5, #1
 801f28a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801f28e:	096d      	lsrs	r5, r5, #5
 801f290:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f294:	432f      	orrs	r7, r5
 801f296:	8007      	strh	r7, [r0, #0]
 801f298:	3002      	adds	r0, #2
 801f29a:	3402      	adds	r4, #2
 801f29c:	e7ac      	b.n	801f1f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801f29e:	f8b9 3000 	ldrh.w	r3, [r9]
 801f2a2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f2a6:	eba3 0308 	sub.w	r3, r3, r8
 801f2aa:	eba6 0608 	sub.w	r6, r6, r8
 801f2ae:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f2b2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f2b6:	440e      	add	r6, r1
 801f2b8:	e797      	b.n	801f1ea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801f2ba:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801f2be:	42a8      	cmp	r0, r5
 801f2c0:	d262      	bcs.n	801f388 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801f2c2:	9b00      	ldr	r3, [sp, #0]
 801f2c4:	4631      	mov	r1, r6
 801f2c6:	eb00 0b03 	add.w	fp, r0, r3
 801f2ca:	4558      	cmp	r0, fp
 801f2cc:	d24e      	bcs.n	801f36c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801f2ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f2d2:	b12b      	cbz	r3, 801f2e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f2d4:	2bff      	cmp	r3, #255	; 0xff
 801f2d6:	f8b4 e000 	ldrh.w	lr, [r4]
 801f2da:	d104      	bne.n	801f2e6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801f2dc:	f8a0 e000 	strh.w	lr, [r0]
 801f2e0:	3002      	adds	r0, #2
 801f2e2:	3402      	adds	r4, #2
 801f2e4:	e7f1      	b.n	801f2ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801f2e6:	8802      	ldrh	r2, [r0, #0]
 801f2e8:	b29f      	uxth	r7, r3
 801f2ea:	1216      	asrs	r6, r2, #8
 801f2ec:	43db      	mvns	r3, r3
 801f2ee:	b2db      	uxtb	r3, r3
 801f2f0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801f2f4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801f2f8:	fb16 f603 	smulbb	r6, r6, r3
 801f2fc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801f300:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f304:	00d2      	lsls	r2, r2, #3
 801f306:	fb0c 6c07 	mla	ip, ip, r7, r6
 801f30a:	b2d2      	uxtb	r2, r2
 801f30c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801f310:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801f314:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f318:	fb1a fa03 	smulbb	sl, sl, r3
 801f31c:	fa1f fc8c 	uxth.w	ip, ip
 801f320:	fb12 f303 	smulbb	r3, r2, r3
 801f324:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801f328:	fa5f fe8e 	uxtb.w	lr, lr
 801f32c:	fb06 a607 	mla	r6, r6, r7, sl
 801f330:	f10c 0201 	add.w	r2, ip, #1
 801f334:	fb0e 3307 	mla	r3, lr, r7, r3
 801f338:	b2b6      	uxth	r6, r6
 801f33a:	b29b      	uxth	r3, r3
 801f33c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801f340:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801f344:	f106 0a01 	add.w	sl, r6, #1
 801f348:	f103 0c01 	add.w	ip, r3, #1
 801f34c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f350:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801f354:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f358:	0976      	lsrs	r6, r6, #5
 801f35a:	ea4c 0c02 	orr.w	ip, ip, r2
 801f35e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801f362:	ea4c 0c06 	orr.w	ip, ip, r6
 801f366:	f8a0 c000 	strh.w	ip, [r0]
 801f36a:	e7b9      	b.n	801f2e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801f36c:	f8b9 3000 	ldrh.w	r3, [r9]
 801f370:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801f374:	eba3 0308 	sub.w	r3, r3, r8
 801f378:	eba6 0608 	sub.w	r6, r6, r8
 801f37c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801f380:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801f384:	440e      	add	r6, r1
 801f386:	e79a      	b.n	801f2be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801f388:	4b03      	ldr	r3, [pc, #12]	; (801f398 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801f38a:	6818      	ldr	r0, [r3, #0]
 801f38c:	6803      	ldr	r3, [r0, #0]
 801f38e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f390:	4798      	blx	r3
 801f392:	b007      	add	sp, #28
 801f394:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f398:	200137ec 	.word	0x200137ec
 801f39c:	200137e6 	.word	0x200137e6

0801f3a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801f3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3a4:	b089      	sub	sp, #36	; 0x24
 801f3a6:	4682      	mov	sl, r0
 801f3a8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801f3ac:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801f3ae:	460f      	mov	r7, r1
 801f3b0:	4691      	mov	r9, r2
 801f3b2:	4698      	mov	r8, r3
 801f3b4:	2e00      	cmp	r6, #0
 801f3b6:	d03d      	beq.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f3b8:	4608      	mov	r0, r1
 801f3ba:	f7fa fe59 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801f3be:	4605      	mov	r5, r0
 801f3c0:	4638      	mov	r0, r7
 801f3c2:	f7fa fe89 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801f3c6:	f8ad 000e 	strh.w	r0, [sp, #14]
 801f3ca:	4638      	mov	r0, r7
 801f3cc:	f8ad 9008 	strh.w	r9, [sp, #8]
 801f3d0:	f8ad 500c 	strh.w	r5, [sp, #12]
 801f3d4:	f8ad 800a 	strh.w	r8, [sp, #10]
 801f3d8:	f7fa ff36 	bl	801a248 <_ZNK8touchgfx6Bitmap7getDataEv>
 801f3dc:	4605      	mov	r5, r0
 801f3de:	4638      	mov	r0, r7
 801f3e0:	f7fa ff62 	bl	801a2a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801f3e4:	4681      	mov	r9, r0
 801f3e6:	4638      	mov	r0, r7
 801f3e8:	f7fa ffb2 	bl	801a350 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801f3ec:	280b      	cmp	r0, #11
 801f3ee:	d821      	bhi.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f3f0:	e8df f000 	tbb	[pc, r0]
 801f3f4:	2006aebe 	.word	0x2006aebe
 801f3f8:	20202020 	.word	0x20202020
 801f3fc:	b5202020 	.word	0xb5202020
 801f400:	4bb0      	ldr	r3, [pc, #704]	; (801f6c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801f402:	6818      	ldr	r0, [r3, #0]
 801f404:	6803      	ldr	r3, [r0, #0]
 801f406:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801f408:	4798      	blx	r3
 801f40a:	2eff      	cmp	r6, #255	; 0xff
 801f40c:	d101      	bne.n	801f412 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f40e:	0683      	lsls	r3, r0, #26
 801f410:	d506      	bpl.n	801f420 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801f412:	4633      	mov	r3, r6
 801f414:	4622      	mov	r2, r4
 801f416:	a902      	add	r1, sp, #8
 801f418:	4628      	mov	r0, r5
 801f41a:	f7ff f909 	bl	801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f41e:	e009      	b.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f420:	4638      	mov	r0, r7
 801f422:	f7fa fed9 	bl	801a1d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f426:	b940      	cbnz	r0, 801f43a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801f428:	4623      	mov	r3, r4
 801f42a:	aa02      	add	r2, sp, #8
 801f42c:	4629      	mov	r1, r5
 801f42e:	4650      	mov	r0, sl
 801f430:	f7ff f9e4 	bl	801e7fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f434:	b009      	add	sp, #36	; 0x24
 801f436:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f43a:	f10d 0818 	add.w	r8, sp, #24
 801f43e:	4639      	mov	r1, r7
 801f440:	4640      	mov	r0, r8
 801f442:	f7fa fe7d 	bl	801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f446:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f44a:	af04      	add	r7, sp, #16
 801f44c:	e887 0003 	stmia.w	r7, {r0, r1}
 801f450:	4638      	mov	r0, r7
 801f452:	4621      	mov	r1, r4
 801f454:	f7f1 fa6a 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 801f458:	4638      	mov	r0, r7
 801f45a:	f7f1 faaa 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f45e:	2800      	cmp	r0, #0
 801f460:	d1d7      	bne.n	801f412 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801f462:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f466:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f46a:	4293      	cmp	r3, r2
 801f46c:	dd12      	ble.n	801f494 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801f46e:	1a9b      	subs	r3, r3, r2
 801f470:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f474:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f478:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f47c:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f480:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f484:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f488:	4642      	mov	r2, r8
 801f48a:	4633      	mov	r3, r6
 801f48c:	a902      	add	r1, sp, #8
 801f48e:	4628      	mov	r0, r5
 801f490:	f7ff f8ce 	bl	801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f494:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f498:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f49c:	4293      	cmp	r3, r2
 801f49e:	dd12      	ble.n	801f4c6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801f4a0:	1a9b      	subs	r3, r3, r2
 801f4a2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f4a6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f4aa:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f4ae:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f4b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f4b6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f4ba:	23ff      	movs	r3, #255	; 0xff
 801f4bc:	4642      	mov	r2, r8
 801f4be:	a902      	add	r1, sp, #8
 801f4c0:	4628      	mov	r0, r5
 801f4c2:	f7ff f8b5 	bl	801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f4c6:	463b      	mov	r3, r7
 801f4c8:	aa02      	add	r2, sp, #8
 801f4ca:	4629      	mov	r1, r5
 801f4cc:	4650      	mov	r0, sl
 801f4ce:	f7ff f995 	bl	801e7fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801f4d2:	88a2      	ldrh	r2, [r4, #4]
 801f4d4:	8823      	ldrh	r3, [r4, #0]
 801f4d6:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f4da:	4413      	add	r3, r2
 801f4dc:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f4e0:	440a      	add	r2, r1
 801f4e2:	b29b      	uxth	r3, r3
 801f4e4:	b292      	uxth	r2, r2
 801f4e6:	b211      	sxth	r1, r2
 801f4e8:	b218      	sxth	r0, r3
 801f4ea:	4288      	cmp	r0, r1
 801f4ec:	dd12      	ble.n	801f514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801f4ee:	1a9b      	subs	r3, r3, r2
 801f4f0:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f4f4:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801f4f8:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f4fc:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f500:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f504:	23ff      	movs	r3, #255	; 0xff
 801f506:	4642      	mov	r2, r8
 801f508:	a902      	add	r1, sp, #8
 801f50a:	4628      	mov	r0, r5
 801f50c:	f8ad 601a 	strh.w	r6, [sp, #26]
 801f510:	f7ff f88e 	bl	801e630 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801f514:	88e2      	ldrh	r2, [r4, #6]
 801f516:	8863      	ldrh	r3, [r4, #2]
 801f518:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f51c:	4413      	add	r3, r2
 801f51e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f522:	440a      	add	r2, r1
 801f524:	b29b      	uxth	r3, r3
 801f526:	b292      	uxth	r2, r2
 801f528:	b211      	sxth	r1, r2
 801f52a:	b218      	sxth	r0, r3
 801f52c:	4288      	cmp	r0, r1
 801f52e:	dd81      	ble.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f530:	1a9b      	subs	r3, r3, r2
 801f532:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f536:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f53a:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f53e:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f542:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f546:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f54a:	23ff      	movs	r3, #255	; 0xff
 801f54c:	4642      	mov	r2, r8
 801f54e:	e762      	b.n	801f416 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801f550:	4633      	mov	r3, r6
 801f552:	4622      	mov	r2, r4
 801f554:	a902      	add	r1, sp, #8
 801f556:	4628      	mov	r0, r5
 801f558:	f7ff f9c0 	bl	801e8dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f55c:	e76a      	b.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f55e:	e9cd 4600 	strd	r4, r6, [sp]
 801f562:	ab02      	add	r3, sp, #8
 801f564:	464a      	mov	r2, r9
 801f566:	4629      	mov	r1, r5
 801f568:	4650      	mov	r0, sl
 801f56a:	f7ff fd97 	bl	801f09c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f56e:	e761      	b.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f570:	4638      	mov	r0, r7
 801f572:	f7fa fe31 	bl	801a1d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f576:	b950      	cbnz	r0, 801f58e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801f578:	e9cd 6000 	strd	r6, r0, [sp]
 801f57c:	f8da 3000 	ldr.w	r3, [sl]
 801f580:	aa02      	add	r2, sp, #8
 801f582:	68de      	ldr	r6, [r3, #12]
 801f584:	4629      	mov	r1, r5
 801f586:	4623      	mov	r3, r4
 801f588:	4650      	mov	r0, sl
 801f58a:	47b0      	blx	r6
 801f58c:	e752      	b.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f58e:	f10d 0818 	add.w	r8, sp, #24
 801f592:	4639      	mov	r1, r7
 801f594:	4640      	mov	r0, r8
 801f596:	f7fa fdd3 	bl	801a140 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f59a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801f59e:	af04      	add	r7, sp, #16
 801f5a0:	e887 0003 	stmia.w	r7, {r0, r1}
 801f5a4:	4638      	mov	r0, r7
 801f5a6:	4621      	mov	r1, r4
 801f5a8:	f7f1 f9c0 	bl	801092c <_ZN8touchgfx4RectaNERKS0_>
 801f5ac:	4638      	mov	r0, r7
 801f5ae:	f7f1 fa00 	bl	80109b2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f5b2:	b138      	cbz	r0, 801f5c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801f5b4:	9600      	str	r6, [sp, #0]
 801f5b6:	4623      	mov	r3, r4
 801f5b8:	aa02      	add	r2, sp, #8
 801f5ba:	4649      	mov	r1, r9
 801f5bc:	4628      	mov	r0, r5
 801f5be:	f7ff fdc9 	bl	801f154 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f5c2:	e737      	b.n	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f5c4:	e9cd 6000 	strd	r6, r0, [sp]
 801f5c8:	f8da 3000 	ldr.w	r3, [sl]
 801f5cc:	aa02      	add	r2, sp, #8
 801f5ce:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f5d2:	4629      	mov	r1, r5
 801f5d4:	463b      	mov	r3, r7
 801f5d6:	4650      	mov	r0, sl
 801f5d8:	47d8      	blx	fp
 801f5da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f5de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f5e2:	4293      	cmp	r3, r2
 801f5e4:	dd13      	ble.n	801f60e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801f5e6:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f5ea:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f5ee:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f5f2:	1a9b      	subs	r3, r3, r2
 801f5f4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f5f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f5fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f600:	9600      	str	r6, [sp, #0]
 801f602:	4643      	mov	r3, r8
 801f604:	aa02      	add	r2, sp, #8
 801f606:	4649      	mov	r1, r9
 801f608:	4628      	mov	r0, r5
 801f60a:	f7ff fda3 	bl	801f154 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f60e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f612:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f616:	4293      	cmp	r3, r2
 801f618:	dd13      	ble.n	801f642 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801f61a:	1a9b      	subs	r3, r3, r2
 801f61c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f620:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f624:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f628:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f62c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f630:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f634:	9600      	str	r6, [sp, #0]
 801f636:	4643      	mov	r3, r8
 801f638:	aa02      	add	r2, sp, #8
 801f63a:	4649      	mov	r1, r9
 801f63c:	4628      	mov	r0, r5
 801f63e:	f7ff fd89 	bl	801f154 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f642:	88a2      	ldrh	r2, [r4, #4]
 801f644:	8823      	ldrh	r3, [r4, #0]
 801f646:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f64a:	4413      	add	r3, r2
 801f64c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f650:	440a      	add	r2, r1
 801f652:	b29b      	uxth	r3, r3
 801f654:	b292      	uxth	r2, r2
 801f656:	b211      	sxth	r1, r2
 801f658:	b218      	sxth	r0, r3
 801f65a:	4288      	cmp	r0, r1
 801f65c:	dd13      	ble.n	801f686 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801f65e:	1a9b      	subs	r3, r3, r2
 801f660:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f664:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f668:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f66c:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f670:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f674:	9600      	str	r6, [sp, #0]
 801f676:	4643      	mov	r3, r8
 801f678:	aa02      	add	r2, sp, #8
 801f67a:	4649      	mov	r1, r9
 801f67c:	4628      	mov	r0, r5
 801f67e:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f682:	f7ff fd67 	bl	801f154 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f686:	88e2      	ldrh	r2, [r4, #6]
 801f688:	8863      	ldrh	r3, [r4, #2]
 801f68a:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f68e:	4413      	add	r3, r2
 801f690:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f694:	440a      	add	r2, r1
 801f696:	b29b      	uxth	r3, r3
 801f698:	b292      	uxth	r2, r2
 801f69a:	b211      	sxth	r1, r2
 801f69c:	b218      	sxth	r0, r3
 801f69e:	4288      	cmp	r0, r1
 801f6a0:	f77f aec8 	ble.w	801f434 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801f6a4:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f6a8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f6ac:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f6b0:	1a9b      	subs	r3, r3, r2
 801f6b2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f6b6:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f6ba:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f6be:	9600      	str	r6, [sp, #0]
 801f6c0:	4643      	mov	r3, r8
 801f6c2:	e779      	b.n	801f5b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801f6c4:	200137ec 	.word	0x200137ec

0801f6c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f6c8:	b180      	cbz	r0, 801f6ec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f6ca:	2903      	cmp	r1, #3
 801f6cc:	d81c      	bhi.n	801f708 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f6ce:	e8df f001 	tbb	[pc, r1]
 801f6d2:	1d02      	.short	0x1d02
 801f6d4:	1f08      	.short	0x1f08
 801f6d6:	4b10      	ldr	r3, [pc, #64]	; (801f718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f6d8:	8818      	ldrh	r0, [r3, #0]
 801f6da:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f6de:	4240      	negs	r0, r0
 801f6e0:	4770      	bx	lr
 801f6e2:	4b0d      	ldr	r3, [pc, #52]	; (801f718 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f6e4:	8818      	ldrh	r0, [r3, #0]
 801f6e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f6ea:	4770      	bx	lr
 801f6ec:	2903      	cmp	r1, #3
 801f6ee:	d80b      	bhi.n	801f708 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f6f0:	a301      	add	r3, pc, #4	; (adr r3, 801f6f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f6f2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f6f6:	bf00      	nop
 801f6f8:	0801f70d 	.word	0x0801f70d
 801f6fc:	0801f6e3 	.word	0x0801f6e3
 801f700:	0801f711 	.word	0x0801f711
 801f704:	0801f6d7 	.word	0x0801f6d7
 801f708:	2000      	movs	r0, #0
 801f70a:	4770      	bx	lr
 801f70c:	2001      	movs	r0, #1
 801f70e:	4770      	bx	lr
 801f710:	f04f 30ff 	mov.w	r0, #4294967295
 801f714:	4770      	bx	lr
 801f716:	bf00      	nop
 801f718:	200137e6 	.word	0x200137e6

0801f71c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f71c:	b180      	cbz	r0, 801f740 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f71e:	2903      	cmp	r1, #3
 801f720:	d81c      	bhi.n	801f75c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f722:	e8df f001 	tbb	[pc, r1]
 801f726:	021d      	.short	0x021d
 801f728:	071f      	.short	0x071f
 801f72a:	4b10      	ldr	r3, [pc, #64]	; (801f76c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f72c:	8818      	ldrh	r0, [r3, #0]
 801f72e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f732:	4770      	bx	lr
 801f734:	4b0d      	ldr	r3, [pc, #52]	; (801f76c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f736:	8818      	ldrh	r0, [r3, #0]
 801f738:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f73c:	4240      	negs	r0, r0
 801f73e:	4770      	bx	lr
 801f740:	2903      	cmp	r1, #3
 801f742:	d80b      	bhi.n	801f75c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f744:	a301      	add	r3, pc, #4	; (adr r3, 801f74c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f746:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f74a:	bf00      	nop
 801f74c:	0801f72b 	.word	0x0801f72b
 801f750:	0801f765 	.word	0x0801f765
 801f754:	0801f735 	.word	0x0801f735
 801f758:	0801f761 	.word	0x0801f761
 801f75c:	2000      	movs	r0, #0
 801f75e:	4770      	bx	lr
 801f760:	2001      	movs	r0, #1
 801f762:	4770      	bx	lr
 801f764:	f04f 30ff 	mov.w	r0, #4294967295
 801f768:	4770      	bx	lr
 801f76a:	bf00      	nop
 801f76c:	200137e6 	.word	0x200137e6

0801f770 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f774:	b099      	sub	sp, #100	; 0x64
 801f776:	910b      	str	r1, [sp, #44]	; 0x2c
 801f778:	a914      	add	r1, sp, #80	; 0x50
 801f77a:	e881 000c 	stmia.w	r1, {r2, r3}
 801f77e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801f782:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801f786:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f78a:	9309      	str	r3, [sp, #36]	; 0x24
 801f78c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f790:	9310      	str	r3, [sp, #64]	; 0x40
 801f792:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f796:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801f79a:	930c      	str	r3, [sp, #48]	; 0x30
 801f79c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801f7a0:	798f      	ldrb	r7, [r1, #6]
 801f7a2:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801f7a6:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801f7aa:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801f7ae:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801f7b2:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801f7b6:	431f      	orrs	r7, r3
 801f7b8:	f000 8195 	beq.w	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f7bc:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f7c0:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801f7c4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f7c8:	ea59 0903 	orrs.w	r9, r9, r3
 801f7cc:	f000 818b 	beq.w	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f7d0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f7d4:	b29b      	uxth	r3, r3
 801f7d6:	2d00      	cmp	r5, #0
 801f7d8:	f000 812e 	beq.w	801fa38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f7dc:	1aed      	subs	r5, r5, r3
 801f7de:	b2ad      	uxth	r5, r5
 801f7e0:	042b      	lsls	r3, r5, #16
 801f7e2:	d502      	bpl.n	801f7ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f7e4:	1b64      	subs	r4, r4, r5
 801f7e6:	b224      	sxth	r4, r4
 801f7e8:	2500      	movs	r5, #0
 801f7ea:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f7ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801f7f2:	428c      	cmp	r4, r1
 801f7f4:	b28b      	uxth	r3, r1
 801f7f6:	bfbf      	itttt	lt
 801f7f8:	18ed      	addlt	r5, r5, r3
 801f7fa:	1b2c      	sublt	r4, r5, r4
 801f7fc:	b2a5      	uxthlt	r5, r4
 801f7fe:	460c      	movlt	r4, r1
 801f800:	8891      	ldrh	r1, [r2, #4]
 801f802:	440b      	add	r3, r1
 801f804:	b21b      	sxth	r3, r3
 801f806:	930f      	str	r3, [sp, #60]	; 0x3c
 801f808:	88d3      	ldrh	r3, [r2, #6]
 801f80a:	8852      	ldrh	r2, [r2, #2]
 801f80c:	4413      	add	r3, r2
 801f80e:	b21b      	sxth	r3, r3
 801f810:	930d      	str	r3, [sp, #52]	; 0x34
 801f812:	4bbe      	ldr	r3, [pc, #760]	; (801fb0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801f814:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f816:	f893 b000 	ldrb.w	fp, [r3]
 801f81a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f81e:	f1dc 0300 	rsbs	r3, ip, #0
 801f822:	eb43 030c 	adc.w	r3, r3, ip
 801f826:	930e      	str	r3, [sp, #56]	; 0x38
 801f828:	4621      	mov	r1, r4
 801f82a:	4653      	mov	r3, sl
 801f82c:	a814      	add	r0, sp, #80	; 0x50
 801f82e:	f7f6 fc90 	bl	8016152 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f832:	4621      	mov	r1, r4
 801f834:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801f838:	4653      	mov	r3, sl
 801f83a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f83c:	a814      	add	r0, sp, #80	; 0x50
 801f83e:	f7f6 fca5 	bl	801618c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f842:	a918      	add	r1, sp, #96	; 0x60
 801f844:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f848:	a817      	add	r0, sp, #92	; 0x5c
 801f84a:	f7f6 fdcb 	bl	80163e4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f84e:	f1ba 0f00 	cmp.w	sl, #0
 801f852:	f040 80f4 	bne.w	801fa3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f856:	f1bb 0f01 	cmp.w	fp, #1
 801f85a:	f040 80f8 	bne.w	801fa4e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f85e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f860:	2b00      	cmp	r3, #0
 801f862:	f040 8145 	bne.w	801faf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f866:	b2ba      	uxth	r2, r7
 801f868:	b905      	cbnz	r5, 801f86c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f86a:	b16e      	cbz	r6, 801f888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f86c:	fb06 5302 	mla	r3, r6, r2, r5
 801f870:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801f872:	fb08 f303 	mul.w	r3, r8, r3
 801f876:	4631      	mov	r1, r6
 801f878:	f003 0607 	and.w	r6, r3, #7
 801f87c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f880:	9328      	str	r3, [sp, #160]	; 0xa0
 801f882:	eba9 0301 	sub.w	r3, r9, r1
 801f886:	930a      	str	r3, [sp, #40]	; 0x28
 801f888:	4651      	mov	r1, sl
 801f88a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f88c:	f7ff ff1c 	bl	801f6c8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f890:	4681      	mov	r9, r0
 801f892:	980e      	ldr	r0, [sp, #56]	; 0x38
 801f894:	f7ff ff42 	bl	801f71c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f898:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f89a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f89c:	eba3 0a01 	sub.w	sl, r3, r1
 801f8a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8a2:	459a      	cmp	sl, r3
 801f8a4:	bfa8      	it	ge
 801f8a6:	469a      	movge	sl, r3
 801f8a8:	f1ba 0f00 	cmp.w	sl, #0
 801f8ac:	4683      	mov	fp, r0
 801f8ae:	f340 811a 	ble.w	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f8b2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f8b4:	1b64      	subs	r4, r4, r5
 801f8b6:	1b1c      	subs	r4, r3, r4
 801f8b8:	42bc      	cmp	r4, r7
 801f8ba:	bfd4      	ite	le
 801f8bc:	ebc5 0504 	rsble	r5, r5, r4
 801f8c0:	ebc5 0507 	rsbgt	r5, r5, r7
 801f8c4:	2d00      	cmp	r5, #0
 801f8c6:	f340 810e 	ble.w	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f8ca:	1b52      	subs	r2, r2, r5
 801f8cc:	fb08 f302 	mul.w	r3, r8, r2
 801f8d0:	930f      	str	r3, [sp, #60]	; 0x3c
 801f8d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f8d4:	2b00      	cmp	r3, #0
 801f8d6:	f040 8116 	bne.w	801fb06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f8da:	4b8d      	ldr	r3, [pc, #564]	; (801fb10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f8dc:	6818      	ldr	r0, [r3, #0]
 801f8de:	6803      	ldr	r3, [r0, #0]
 801f8e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f8e2:	4798      	blx	r3
 801f8e4:	2301      	movs	r3, #1
 801f8e6:	fa03 f308 	lsl.w	r3, r3, r8
 801f8ea:	4a8a      	ldr	r2, [pc, #552]	; (801fb14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f8ec:	3b01      	subs	r3, #1
 801f8ee:	b2db      	uxtb	r3, r3
 801f8f0:	8811      	ldrh	r1, [r2, #0]
 801f8f2:	930e      	str	r3, [sp, #56]	; 0x38
 801f8f4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801f8f8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801f8fc:	fb01 2303 	mla	r3, r1, r3, r2
 801f900:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f904:	930a      	str	r3, [sp, #40]	; 0x28
 801f906:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f908:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f90c:	9313      	str	r3, [sp, #76]	; 0x4c
 801f90e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f910:	0a19      	lsrs	r1, r3, #8
 801f912:	b2cb      	uxtb	r3, r1
 801f914:	9312      	str	r3, [sp, #72]	; 0x48
 801f916:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f918:	b2db      	uxtb	r3, r3
 801f91a:	9311      	str	r3, [sp, #68]	; 0x44
 801f91c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f91e:	095a      	lsrs	r2, r3, #5
 801f920:	4b7d      	ldr	r3, [pc, #500]	; (801fb18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f922:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f926:	400b      	ands	r3, r1
 801f928:	4313      	orrs	r3, r2
 801f92a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801f92c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f930:	4313      	orrs	r3, r2
 801f932:	b29b      	uxth	r3, r3
 801f934:	9310      	str	r3, [sp, #64]	; 0x40
 801f936:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f938:	781a      	ldrb	r2, [r3, #0]
 801f93a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f93e:	4132      	asrs	r2, r6
 801f940:	fb05 b919 	mls	r9, r5, r9, fp
 801f944:	fb03 fb05 	mul.w	fp, r3, r5
 801f948:	b2d2      	uxtb	r2, r2
 801f94a:	930d      	str	r3, [sp, #52]	; 0x34
 801f94c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f950:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f954:	f0c0 80f5 	bcc.w	801fb42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f958:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801f95c:	46ae      	mov	lr, r5
 801f95e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f962:	f0c0 80dd 	bcc.w	801fb20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f966:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f968:	4013      	ands	r3, r2
 801f96a:	d055      	beq.n	801fa18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f96c:	20ff      	movs	r0, #255	; 0xff
 801f96e:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f970:	fb90 f1f1 	sdiv	r1, r0, r1
 801f974:	434b      	muls	r3, r1
 801f976:	2bfe      	cmp	r3, #254	; 0xfe
 801f978:	dd03      	ble.n	801f982 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f97a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f97c:	4281      	cmp	r1, r0
 801f97e:	f000 80cd 	beq.w	801fb1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801f982:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f984:	f8bc 4000 	ldrh.w	r4, [ip]
 801f988:	fb11 f303 	smulbb	r3, r1, r3
 801f98c:	b29b      	uxth	r3, r3
 801f98e:	1c59      	adds	r1, r3, #1
 801f990:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f994:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f998:	b29f      	uxth	r7, r3
 801f99a:	43db      	mvns	r3, r3
 801f99c:	b2db      	uxtb	r3, r3
 801f99e:	9309      	str	r3, [sp, #36]	; 0x24
 801f9a0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801f9a2:	1220      	asrs	r0, r4, #8
 801f9a4:	fb13 f907 	smulbb	r9, r3, r7
 801f9a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f9ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9ae:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f9b2:	fb00 9003 	mla	r0, r0, r3, r9
 801f9b6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f9b8:	10e1      	asrs	r1, r4, #3
 801f9ba:	fb13 f907 	smulbb	r9, r3, r7
 801f9be:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f9c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9c4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f9c8:	fb01 9103 	mla	r1, r1, r3, r9
 801f9cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f9ce:	00e4      	lsls	r4, r4, #3
 801f9d0:	fb13 f707 	smulbb	r7, r3, r7
 801f9d4:	b2e4      	uxtb	r4, r4
 801f9d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f9dc:	fb04 7403 	mla	r4, r4, r3, r7
 801f9e0:	b280      	uxth	r0, r0
 801f9e2:	b2a4      	uxth	r4, r4
 801f9e4:	1c43      	adds	r3, r0, #1
 801f9e6:	f104 0901 	add.w	r9, r4, #1
 801f9ea:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f9ee:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f9f2:	b289      	uxth	r1, r1
 801f9f4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f9f8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f9fc:	ea49 0000 	orr.w	r0, r9, r0
 801fa00:	f101 0901 	add.w	r9, r1, #1
 801fa04:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801fa08:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801fa0c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801fa10:	ea40 0009 	orr.w	r0, r0, r9
 801fa14:	f8ac 0000 	strh.w	r0, [ip]
 801fa18:	4446      	add	r6, r8
 801fa1a:	b2b6      	uxth	r6, r6
 801fa1c:	2e07      	cmp	r6, #7
 801fa1e:	bf81      	itttt	hi
 801fa20:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801fa22:	785a      	ldrbhi	r2, [r3, #1]
 801fa24:	3301      	addhi	r3, #1
 801fa26:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801fa28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fa2a:	bf9a      	itte	ls
 801fa2c:	fa42 f208 	asrls.w	r2, r2, r8
 801fa30:	b2d2      	uxtbls	r2, r2
 801fa32:	2600      	movhi	r6, #0
 801fa34:	449c      	add	ip, r3
 801fa36:	e792      	b.n	801f95e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801fa38:	441c      	add	r4, r3
 801fa3a:	b224      	sxth	r4, r4
 801fa3c:	e6d5      	b.n	801f7ea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801fa3e:	f1ba 0f01 	cmp.w	sl, #1
 801fa42:	f47f af0c 	bne.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa46:	f1bb 0f01 	cmp.w	fp, #1
 801fa4a:	f47f af08 	bne.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa4e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801fb10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801fa52:	f8db 0000 	ldr.w	r0, [fp]
 801fa56:	6803      	ldr	r3, [r0, #0]
 801fa58:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801fa5a:	4798      	blx	r3
 801fa5c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801fa60:	465a      	mov	r2, fp
 801fa62:	d006      	beq.n	801fa72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801fa64:	f1b8 0f04 	cmp.w	r8, #4
 801fa68:	d140      	bne.n	801faec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801fa6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fa6c:	3300      	adds	r3, #0
 801fa6e:	bf18      	it	ne
 801fa70:	2301      	movne	r3, #1
 801fa72:	0580      	lsls	r0, r0, #22
 801fa74:	d56e      	bpl.n	801fb54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801fa76:	f1b8 0f08 	cmp.w	r8, #8
 801fa7a:	d16b      	bne.n	801fb54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801fa7c:	2b00      	cmp	r3, #0
 801fa7e:	bf0c      	ite	eq
 801fa80:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801fa84:	f44f 7180 	movne.w	r1, #256	; 0x100
 801fa88:	2d00      	cmp	r5, #0
 801fa8a:	f47f aee8 	bne.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa8e:	2e00      	cmp	r6, #0
 801fa90:	f47f aee5 	bne.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa94:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801fa96:	19e3      	adds	r3, r4, r7
 801fa98:	4283      	cmp	r3, r0
 801fa9a:	f73f aee0 	bgt.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fa9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faa0:	980d      	ldr	r0, [sp, #52]	; 0x34
 801faa2:	444b      	add	r3, r9
 801faa4:	4283      	cmp	r3, r0
 801faa6:	f73f aeda 	bgt.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801faaa:	6810      	ldr	r0, [r2, #0]
 801faac:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801fab0:	6804      	ldr	r4, [r0, #0]
 801fab2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801fab6:	b2bf      	uxth	r7, r7
 801fab8:	f1b8 0f08 	cmp.w	r8, #8
 801fabc:	f04f 0500 	mov.w	r5, #0
 801fac0:	bf18      	it	ne
 801fac2:	3701      	addne	r7, #1
 801fac4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fac8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801faca:	9104      	str	r1, [sp, #16]
 801facc:	bf18      	it	ne
 801face:	f027 0701 	bicne.w	r7, r7, #1
 801fad2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801fad4:	bf18      	it	ne
 801fad6:	b2bf      	uxthne	r7, r7
 801fad8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801fadc:	e9cd 7900 	strd	r7, r9, [sp]
 801fae0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801fae2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801fae4:	47a0      	blx	r4
 801fae6:	b019      	add	sp, #100	; 0x64
 801fae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801faec:	2300      	movs	r3, #0
 801faee:	e7c0      	b.n	801fa72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801faf0:	2208      	movs	r2, #8
 801faf2:	fb92 f3f8 	sdiv	r3, r2, r8
 801faf6:	1e5a      	subs	r2, r3, #1
 801faf8:	443a      	add	r2, r7
 801fafa:	fb92 f2f3 	sdiv	r2, r2, r3
 801fafe:	fb12 f203 	smulbb	r2, r2, r3
 801fb02:	b292      	uxth	r2, r2
 801fb04:	e6b0      	b.n	801f868 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801fb06:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801fb08:	e6ec      	b.n	801f8e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801fb0a:	bf00      	nop
 801fb0c:	200137e4 	.word	0x200137e4
 801fb10:	200137ec 	.word	0x200137ec
 801fb14:	200137e6 	.word	0x200137e6
 801fb18:	00fff800 	.word	0x00fff800
 801fb1c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801fb1e:	e779      	b.n	801fa14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801fb20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801fb22:	b153      	cbz	r3, 801fb3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801fb24:	441e      	add	r6, r3
 801fb26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fb28:	b2b6      	uxth	r6, r6
 801fb2a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801fb2e:	f006 0607 	and.w	r6, r6, #7
 801fb32:	781a      	ldrb	r2, [r3, #0]
 801fb34:	9328      	str	r3, [sp, #160]	; 0xa0
 801fb36:	4132      	asrs	r2, r6
 801fb38:	b2d2      	uxtb	r2, r2
 801fb3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fb3c:	445b      	add	r3, fp
 801fb3e:	930a      	str	r3, [sp, #40]	; 0x28
 801fb40:	e706      	b.n	801f950 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801fb42:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fb44:	2b00      	cmp	r3, #0
 801fb46:	d1ce      	bne.n	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fb48:	4b05      	ldr	r3, [pc, #20]	; (801fb60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801fb4a:	6818      	ldr	r0, [r3, #0]
 801fb4c:	6803      	ldr	r3, [r0, #0]
 801fb4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801fb50:	4798      	blx	r3
 801fb52:	e7c8      	b.n	801fae6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801fb54:	2b00      	cmp	r3, #0
 801fb56:	f43f ae82 	beq.w	801f85e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801fb5a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801fb5e:	e793      	b.n	801fa88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801fb60:	200137ec 	.word	0x200137ec

0801fb64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801fb64:	b538      	push	{r3, r4, r5, lr}
 801fb66:	4c15      	ldr	r4, [pc, #84]	; (801fbbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801fb68:	7823      	ldrb	r3, [r4, #0]
 801fb6a:	f3bf 8f5b 	dmb	ish
 801fb6e:	07da      	lsls	r2, r3, #31
 801fb70:	4605      	mov	r5, r0
 801fb72:	d40b      	bmi.n	801fb8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fb74:	4620      	mov	r0, r4
 801fb76:	f00a fee2 	bl	802a93e <__cxa_guard_acquire>
 801fb7a:	b138      	cbz	r0, 801fb8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801fb7c:	4620      	mov	r0, r4
 801fb7e:	f00a feea 	bl	802a956 <__cxa_guard_release>
 801fb82:	4a0f      	ldr	r2, [pc, #60]	; (801fbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fb84:	490f      	ldr	r1, [pc, #60]	; (801fbc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801fb86:	4810      	ldr	r0, [pc, #64]	; (801fbc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fb88:	f00a fed2 	bl	802a930 <__aeabi_atexit>
 801fb8c:	4c0f      	ldr	r4, [pc, #60]	; (801fbcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801fb8e:	7823      	ldrb	r3, [r4, #0]
 801fb90:	f3bf 8f5b 	dmb	ish
 801fb94:	07db      	lsls	r3, r3, #31
 801fb96:	d40b      	bmi.n	801fbb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fb98:	4620      	mov	r0, r4
 801fb9a:	f00a fed0 	bl	802a93e <__cxa_guard_acquire>
 801fb9e:	b138      	cbz	r0, 801fbb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801fba0:	4620      	mov	r0, r4
 801fba2:	f00a fed8 	bl	802a956 <__cxa_guard_release>
 801fba6:	4a06      	ldr	r2, [pc, #24]	; (801fbc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801fba8:	4909      	ldr	r1, [pc, #36]	; (801fbd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801fbaa:	480a      	ldr	r0, [pc, #40]	; (801fbd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fbac:	f00a fec0 	bl	802a930 <__aeabi_atexit>
 801fbb0:	4b05      	ldr	r3, [pc, #20]	; (801fbc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801fbb2:	612b      	str	r3, [r5, #16]
 801fbb4:	4b07      	ldr	r3, [pc, #28]	; (801fbd4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801fbb6:	616b      	str	r3, [r5, #20]
 801fbb8:	bd38      	pop	{r3, r4, r5, pc}
 801fbba:	bf00      	nop
 801fbbc:	200138cc 	.word	0x200138cc
 801fbc0:	20000000 	.word	0x20000000
 801fbc4:	0801c967 	.word	0x0801c967
 801fbc8:	200000d4 	.word	0x200000d4
 801fbcc:	200138d0 	.word	0x200138d0
 801fbd0:	0801c965 	.word	0x0801c965
 801fbd4:	200000d8 	.word	0x200000d8

0801fbd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801fbd8:	b538      	push	{r3, r4, r5, lr}
 801fbda:	4c15      	ldr	r4, [pc, #84]	; (801fc30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801fbdc:	7823      	ldrb	r3, [r4, #0]
 801fbde:	f3bf 8f5b 	dmb	ish
 801fbe2:	07da      	lsls	r2, r3, #31
 801fbe4:	4605      	mov	r5, r0
 801fbe6:	d40b      	bmi.n	801fc00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fbe8:	4620      	mov	r0, r4
 801fbea:	f00a fea8 	bl	802a93e <__cxa_guard_acquire>
 801fbee:	b138      	cbz	r0, 801fc00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801fbf0:	4620      	mov	r0, r4
 801fbf2:	f00a feb0 	bl	802a956 <__cxa_guard_release>
 801fbf6:	4a0f      	ldr	r2, [pc, #60]	; (801fc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fbf8:	490f      	ldr	r1, [pc, #60]	; (801fc38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801fbfa:	4810      	ldr	r0, [pc, #64]	; (801fc3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fbfc:	f00a fe98 	bl	802a930 <__aeabi_atexit>
 801fc00:	4c0f      	ldr	r4, [pc, #60]	; (801fc40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801fc02:	7823      	ldrb	r3, [r4, #0]
 801fc04:	f3bf 8f5b 	dmb	ish
 801fc08:	07db      	lsls	r3, r3, #31
 801fc0a:	d40b      	bmi.n	801fc24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fc0c:	4620      	mov	r0, r4
 801fc0e:	f00a fe96 	bl	802a93e <__cxa_guard_acquire>
 801fc12:	b138      	cbz	r0, 801fc24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801fc14:	4620      	mov	r0, r4
 801fc16:	f00a fe9e 	bl	802a956 <__cxa_guard_release>
 801fc1a:	4a06      	ldr	r2, [pc, #24]	; (801fc34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801fc1c:	4909      	ldr	r1, [pc, #36]	; (801fc44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801fc1e:	480a      	ldr	r0, [pc, #40]	; (801fc48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fc20:	f00a fe86 	bl	802a930 <__aeabi_atexit>
 801fc24:	4b05      	ldr	r3, [pc, #20]	; (801fc3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801fc26:	60ab      	str	r3, [r5, #8]
 801fc28:	4b07      	ldr	r3, [pc, #28]	; (801fc48 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801fc2a:	60eb      	str	r3, [r5, #12]
 801fc2c:	bd38      	pop	{r3, r4, r5, pc}
 801fc2e:	bf00      	nop
 801fc30:	200138a4 	.word	0x200138a4
 801fc34:	20000000 	.word	0x20000000
 801fc38:	0801c96b 	.word	0x0801c96b
 801fc3c:	200000ac 	.word	0x200000ac
 801fc40:	200138a8 	.word	0x200138a8
 801fc44:	0801c969 	.word	0x0801c969
 801fc48:	200000b0 	.word	0x200000b0

0801fc4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801fc4c:	b510      	push	{r4, lr}
 801fc4e:	4604      	mov	r4, r0
 801fc50:	f7ff ff88 	bl	801fb64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801fc54:	4620      	mov	r0, r4
 801fc56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fc5a:	f7ff bfbd 	b.w	801fbd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801fc60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801fc60:	b538      	push	{r3, r4, r5, lr}
 801fc62:	4c15      	ldr	r4, [pc, #84]	; (801fcb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801fc64:	7823      	ldrb	r3, [r4, #0]
 801fc66:	f3bf 8f5b 	dmb	ish
 801fc6a:	07da      	lsls	r2, r3, #31
 801fc6c:	4605      	mov	r5, r0
 801fc6e:	d40b      	bmi.n	801fc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fc70:	4620      	mov	r0, r4
 801fc72:	f00a fe64 	bl	802a93e <__cxa_guard_acquire>
 801fc76:	b138      	cbz	r0, 801fc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801fc78:	4620      	mov	r0, r4
 801fc7a:	f00a fe6c 	bl	802a956 <__cxa_guard_release>
 801fc7e:	4a0f      	ldr	r2, [pc, #60]	; (801fcbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fc80:	490f      	ldr	r1, [pc, #60]	; (801fcc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801fc82:	4810      	ldr	r0, [pc, #64]	; (801fcc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fc84:	f00a fe54 	bl	802a930 <__aeabi_atexit>
 801fc88:	4c0f      	ldr	r4, [pc, #60]	; (801fcc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801fc8a:	7823      	ldrb	r3, [r4, #0]
 801fc8c:	f3bf 8f5b 	dmb	ish
 801fc90:	07db      	lsls	r3, r3, #31
 801fc92:	d40b      	bmi.n	801fcac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fc94:	4620      	mov	r0, r4
 801fc96:	f00a fe52 	bl	802a93e <__cxa_guard_acquire>
 801fc9a:	b138      	cbz	r0, 801fcac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801fc9c:	4620      	mov	r0, r4
 801fc9e:	f00a fe5a 	bl	802a956 <__cxa_guard_release>
 801fca2:	4a06      	ldr	r2, [pc, #24]	; (801fcbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801fca4:	4909      	ldr	r1, [pc, #36]	; (801fccc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801fca6:	480a      	ldr	r0, [pc, #40]	; (801fcd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fca8:	f00a fe42 	bl	802a930 <__aeabi_atexit>
 801fcac:	4b05      	ldr	r3, [pc, #20]	; (801fcc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801fcae:	622b      	str	r3, [r5, #32]
 801fcb0:	4b07      	ldr	r3, [pc, #28]	; (801fcd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801fcb2:	626b      	str	r3, [r5, #36]	; 0x24
 801fcb4:	bd38      	pop	{r3, r4, r5, pc}
 801fcb6:	bf00      	nop
 801fcb8:	200138d4 	.word	0x200138d4
 801fcbc:	20000000 	.word	0x20000000
 801fcc0:	0801c95f 	.word	0x0801c95f
 801fcc4:	200000dc 	.word	0x200000dc
 801fcc8:	200138d8 	.word	0x200138d8
 801fccc:	0801c95d 	.word	0x0801c95d
 801fcd0:	200000e0 	.word	0x200000e0

0801fcd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801fcd4:	b538      	push	{r3, r4, r5, lr}
 801fcd6:	4c15      	ldr	r4, [pc, #84]	; (801fd2c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801fcd8:	7823      	ldrb	r3, [r4, #0]
 801fcda:	f3bf 8f5b 	dmb	ish
 801fcde:	07da      	lsls	r2, r3, #31
 801fce0:	4605      	mov	r5, r0
 801fce2:	d40b      	bmi.n	801fcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fce4:	4620      	mov	r0, r4
 801fce6:	f00a fe2a 	bl	802a93e <__cxa_guard_acquire>
 801fcea:	b138      	cbz	r0, 801fcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801fcec:	4620      	mov	r0, r4
 801fcee:	f00a fe32 	bl	802a956 <__cxa_guard_release>
 801fcf2:	4a0f      	ldr	r2, [pc, #60]	; (801fd30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fcf4:	490f      	ldr	r1, [pc, #60]	; (801fd34 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801fcf6:	4810      	ldr	r0, [pc, #64]	; (801fd38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fcf8:	f00a fe1a 	bl	802a930 <__aeabi_atexit>
 801fcfc:	4c0f      	ldr	r4, [pc, #60]	; (801fd3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801fcfe:	7823      	ldrb	r3, [r4, #0]
 801fd00:	f3bf 8f5b 	dmb	ish
 801fd04:	07db      	lsls	r3, r3, #31
 801fd06:	d40b      	bmi.n	801fd20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fd08:	4620      	mov	r0, r4
 801fd0a:	f00a fe18 	bl	802a93e <__cxa_guard_acquire>
 801fd0e:	b138      	cbz	r0, 801fd20 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801fd10:	4620      	mov	r0, r4
 801fd12:	f00a fe20 	bl	802a956 <__cxa_guard_release>
 801fd16:	4a06      	ldr	r2, [pc, #24]	; (801fd30 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801fd18:	4909      	ldr	r1, [pc, #36]	; (801fd40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801fd1a:	480a      	ldr	r0, [pc, #40]	; (801fd44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fd1c:	f00a fe08 	bl	802a930 <__aeabi_atexit>
 801fd20:	4b05      	ldr	r3, [pc, #20]	; (801fd38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801fd22:	61ab      	str	r3, [r5, #24]
 801fd24:	4b07      	ldr	r3, [pc, #28]	; (801fd44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801fd26:	61eb      	str	r3, [r5, #28]
 801fd28:	bd38      	pop	{r3, r4, r5, pc}
 801fd2a:	bf00      	nop
 801fd2c:	200138ac 	.word	0x200138ac
 801fd30:	20000000 	.word	0x20000000
 801fd34:	0801c963 	.word	0x0801c963
 801fd38:	200000b4 	.word	0x200000b4
 801fd3c:	200138b0 	.word	0x200138b0
 801fd40:	0801c961 	.word	0x0801c961
 801fd44:	200000b8 	.word	0x200000b8

0801fd48 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801fd48:	b510      	push	{r4, lr}
 801fd4a:	4604      	mov	r4, r0
 801fd4c:	f7ff ff88 	bl	801fc60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801fd50:	4620      	mov	r0, r4
 801fd52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fd56:	f7ff bfbd 	b.w	801fcd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801fd5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801fd5c:	b538      	push	{r3, r4, r5, lr}
 801fd5e:	4c15      	ldr	r4, [pc, #84]	; (801fdb4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801fd60:	7823      	ldrb	r3, [r4, #0]
 801fd62:	f3bf 8f5b 	dmb	ish
 801fd66:	07da      	lsls	r2, r3, #31
 801fd68:	4605      	mov	r5, r0
 801fd6a:	d40b      	bmi.n	801fd84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fd6c:	4620      	mov	r0, r4
 801fd6e:	f00a fde6 	bl	802a93e <__cxa_guard_acquire>
 801fd72:	b138      	cbz	r0, 801fd84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801fd74:	4620      	mov	r0, r4
 801fd76:	f00a fdee 	bl	802a956 <__cxa_guard_release>
 801fd7a:	4a0f      	ldr	r2, [pc, #60]	; (801fdb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fd7c:	490f      	ldr	r1, [pc, #60]	; (801fdbc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801fd7e:	4810      	ldr	r0, [pc, #64]	; (801fdc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fd80:	f00a fdd6 	bl	802a930 <__aeabi_atexit>
 801fd84:	4c0f      	ldr	r4, [pc, #60]	; (801fdc4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801fd86:	7823      	ldrb	r3, [r4, #0]
 801fd88:	f3bf 8f5b 	dmb	ish
 801fd8c:	07db      	lsls	r3, r3, #31
 801fd8e:	d40b      	bmi.n	801fda8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fd90:	4620      	mov	r0, r4
 801fd92:	f00a fdd4 	bl	802a93e <__cxa_guard_acquire>
 801fd96:	b138      	cbz	r0, 801fda8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801fd98:	4620      	mov	r0, r4
 801fd9a:	f00a fddc 	bl	802a956 <__cxa_guard_release>
 801fd9e:	4a06      	ldr	r2, [pc, #24]	; (801fdb8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801fda0:	4909      	ldr	r1, [pc, #36]	; (801fdc8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801fda2:	480a      	ldr	r0, [pc, #40]	; (801fdcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fda4:	f00a fdc4 	bl	802a930 <__aeabi_atexit>
 801fda8:	4b05      	ldr	r3, [pc, #20]	; (801fdc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801fdaa:	632b      	str	r3, [r5, #48]	; 0x30
 801fdac:	4b07      	ldr	r3, [pc, #28]	; (801fdcc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801fdae:	636b      	str	r3, [r5, #52]	; 0x34
 801fdb0:	bd38      	pop	{r3, r4, r5, pc}
 801fdb2:	bf00      	nop
 801fdb4:	200138e4 	.word	0x200138e4
 801fdb8:	20000000 	.word	0x20000000
 801fdbc:	0801c957 	.word	0x0801c957
 801fdc0:	200000ec 	.word	0x200000ec
 801fdc4:	200138e8 	.word	0x200138e8
 801fdc8:	0801c955 	.word	0x0801c955
 801fdcc:	200000f0 	.word	0x200000f0

0801fdd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801fdd0:	b538      	push	{r3, r4, r5, lr}
 801fdd2:	4c15      	ldr	r4, [pc, #84]	; (801fe28 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801fdd4:	7823      	ldrb	r3, [r4, #0]
 801fdd6:	f3bf 8f5b 	dmb	ish
 801fdda:	07da      	lsls	r2, r3, #31
 801fddc:	4605      	mov	r5, r0
 801fdde:	d40b      	bmi.n	801fdf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fde0:	4620      	mov	r0, r4
 801fde2:	f00a fdac 	bl	802a93e <__cxa_guard_acquire>
 801fde6:	b138      	cbz	r0, 801fdf8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801fde8:	4620      	mov	r0, r4
 801fdea:	f00a fdb4 	bl	802a956 <__cxa_guard_release>
 801fdee:	4a0f      	ldr	r2, [pc, #60]	; (801fe2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fdf0:	490f      	ldr	r1, [pc, #60]	; (801fe30 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801fdf2:	4810      	ldr	r0, [pc, #64]	; (801fe34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fdf4:	f00a fd9c 	bl	802a930 <__aeabi_atexit>
 801fdf8:	4c0f      	ldr	r4, [pc, #60]	; (801fe38 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801fdfa:	7823      	ldrb	r3, [r4, #0]
 801fdfc:	f3bf 8f5b 	dmb	ish
 801fe00:	07db      	lsls	r3, r3, #31
 801fe02:	d40b      	bmi.n	801fe1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fe04:	4620      	mov	r0, r4
 801fe06:	f00a fd9a 	bl	802a93e <__cxa_guard_acquire>
 801fe0a:	b138      	cbz	r0, 801fe1c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801fe0c:	4620      	mov	r0, r4
 801fe0e:	f00a fda2 	bl	802a956 <__cxa_guard_release>
 801fe12:	4a06      	ldr	r2, [pc, #24]	; (801fe2c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801fe14:	4909      	ldr	r1, [pc, #36]	; (801fe3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801fe16:	480a      	ldr	r0, [pc, #40]	; (801fe40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fe18:	f00a fd8a 	bl	802a930 <__aeabi_atexit>
 801fe1c:	4b05      	ldr	r3, [pc, #20]	; (801fe34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801fe1e:	62ab      	str	r3, [r5, #40]	; 0x28
 801fe20:	4b07      	ldr	r3, [pc, #28]	; (801fe40 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801fe22:	62eb      	str	r3, [r5, #44]	; 0x2c
 801fe24:	bd38      	pop	{r3, r4, r5, pc}
 801fe26:	bf00      	nop
 801fe28:	200138b4 	.word	0x200138b4
 801fe2c:	20000000 	.word	0x20000000
 801fe30:	0801c95b 	.word	0x0801c95b
 801fe34:	200000bc 	.word	0x200000bc
 801fe38:	200138b8 	.word	0x200138b8
 801fe3c:	0801c959 	.word	0x0801c959
 801fe40:	200000c0 	.word	0x200000c0

0801fe44 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801fe44:	b510      	push	{r4, lr}
 801fe46:	4604      	mov	r4, r0
 801fe48:	f7ff ff88 	bl	801fd5c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801fe4c:	4620      	mov	r0, r4
 801fe4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe52:	f7ff bfbd 	b.w	801fdd0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801fe58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801fe58:	b538      	push	{r3, r4, r5, lr}
 801fe5a:	4c15      	ldr	r4, [pc, #84]	; (801feb0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801fe5c:	7823      	ldrb	r3, [r4, #0]
 801fe5e:	f3bf 8f5b 	dmb	ish
 801fe62:	07da      	lsls	r2, r3, #31
 801fe64:	4605      	mov	r5, r0
 801fe66:	d40b      	bmi.n	801fe80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fe68:	4620      	mov	r0, r4
 801fe6a:	f00a fd68 	bl	802a93e <__cxa_guard_acquire>
 801fe6e:	b138      	cbz	r0, 801fe80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801fe70:	4620      	mov	r0, r4
 801fe72:	f00a fd70 	bl	802a956 <__cxa_guard_release>
 801fe76:	4a0f      	ldr	r2, [pc, #60]	; (801feb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fe78:	490f      	ldr	r1, [pc, #60]	; (801feb8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801fe7a:	4810      	ldr	r0, [pc, #64]	; (801febc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fe7c:	f00a fd58 	bl	802a930 <__aeabi_atexit>
 801fe80:	4c0f      	ldr	r4, [pc, #60]	; (801fec0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801fe82:	7823      	ldrb	r3, [r4, #0]
 801fe84:	f3bf 8f5b 	dmb	ish
 801fe88:	07db      	lsls	r3, r3, #31
 801fe8a:	d40b      	bmi.n	801fea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fe8c:	4620      	mov	r0, r4
 801fe8e:	f00a fd56 	bl	802a93e <__cxa_guard_acquire>
 801fe92:	b138      	cbz	r0, 801fea4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801fe94:	4620      	mov	r0, r4
 801fe96:	f00a fd5e 	bl	802a956 <__cxa_guard_release>
 801fe9a:	4a06      	ldr	r2, [pc, #24]	; (801feb4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801fe9c:	4909      	ldr	r1, [pc, #36]	; (801fec4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801fe9e:	480a      	ldr	r0, [pc, #40]	; (801fec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801fea0:	f00a fd46 	bl	802a930 <__aeabi_atexit>
 801fea4:	4b05      	ldr	r3, [pc, #20]	; (801febc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801fea6:	652b      	str	r3, [r5, #80]	; 0x50
 801fea8:	4b07      	ldr	r3, [pc, #28]	; (801fec8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801feaa:	656b      	str	r3, [r5, #84]	; 0x54
 801feac:	bd38      	pop	{r3, r4, r5, pc}
 801feae:	bf00      	nop
 801feb0:	200138ec 	.word	0x200138ec
 801feb4:	20000000 	.word	0x20000000
 801feb8:	0801c947 	.word	0x0801c947
 801febc:	200000f4 	.word	0x200000f4
 801fec0:	200138f0 	.word	0x200138f0
 801fec4:	0801c945 	.word	0x0801c945
 801fec8:	200000f8 	.word	0x200000f8

0801fecc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801fecc:	b538      	push	{r3, r4, r5, lr}
 801fece:	4c15      	ldr	r4, [pc, #84]	; (801ff24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801fed0:	7823      	ldrb	r3, [r4, #0]
 801fed2:	f3bf 8f5b 	dmb	ish
 801fed6:	07da      	lsls	r2, r3, #31
 801fed8:	4605      	mov	r5, r0
 801feda:	d40b      	bmi.n	801fef4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fedc:	4620      	mov	r0, r4
 801fede:	f00a fd2e 	bl	802a93e <__cxa_guard_acquire>
 801fee2:	b138      	cbz	r0, 801fef4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801fee4:	4620      	mov	r0, r4
 801fee6:	f00a fd36 	bl	802a956 <__cxa_guard_release>
 801feea:	4a0f      	ldr	r2, [pc, #60]	; (801ff28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801feec:	490f      	ldr	r1, [pc, #60]	; (801ff2c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801feee:	4810      	ldr	r0, [pc, #64]	; (801ff30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fef0:	f00a fd1e 	bl	802a930 <__aeabi_atexit>
 801fef4:	4c0f      	ldr	r4, [pc, #60]	; (801ff34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801fef6:	7823      	ldrb	r3, [r4, #0]
 801fef8:	f3bf 8f5b 	dmb	ish
 801fefc:	07db      	lsls	r3, r3, #31
 801fefe:	d40b      	bmi.n	801ff18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ff00:	4620      	mov	r0, r4
 801ff02:	f00a fd1c 	bl	802a93e <__cxa_guard_acquire>
 801ff06:	b138      	cbz	r0, 801ff18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801ff08:	4620      	mov	r0, r4
 801ff0a:	f00a fd24 	bl	802a956 <__cxa_guard_release>
 801ff0e:	4a06      	ldr	r2, [pc, #24]	; (801ff28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801ff10:	4909      	ldr	r1, [pc, #36]	; (801ff38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801ff12:	480a      	ldr	r0, [pc, #40]	; (801ff3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ff14:	f00a fd0c 	bl	802a930 <__aeabi_atexit>
 801ff18:	4b05      	ldr	r3, [pc, #20]	; (801ff30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801ff1a:	64ab      	str	r3, [r5, #72]	; 0x48
 801ff1c:	4b07      	ldr	r3, [pc, #28]	; (801ff3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801ff1e:	64eb      	str	r3, [r5, #76]	; 0x4c
 801ff20:	bd38      	pop	{r3, r4, r5, pc}
 801ff22:	bf00      	nop
 801ff24:	200138f4 	.word	0x200138f4
 801ff28:	20000000 	.word	0x20000000
 801ff2c:	0801c94b 	.word	0x0801c94b
 801ff30:	200000fc 	.word	0x200000fc
 801ff34:	200138f8 	.word	0x200138f8
 801ff38:	0801c949 	.word	0x0801c949
 801ff3c:	20000100 	.word	0x20000100

0801ff40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801ff40:	b538      	push	{r3, r4, r5, lr}
 801ff42:	4c15      	ldr	r4, [pc, #84]	; (801ff98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801ff44:	7823      	ldrb	r3, [r4, #0]
 801ff46:	f3bf 8f5b 	dmb	ish
 801ff4a:	07da      	lsls	r2, r3, #31
 801ff4c:	4605      	mov	r5, r0
 801ff4e:	d40b      	bmi.n	801ff68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ff50:	4620      	mov	r0, r4
 801ff52:	f00a fcf4 	bl	802a93e <__cxa_guard_acquire>
 801ff56:	b138      	cbz	r0, 801ff68 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801ff58:	4620      	mov	r0, r4
 801ff5a:	f00a fcfc 	bl	802a956 <__cxa_guard_release>
 801ff5e:	4a0f      	ldr	r2, [pc, #60]	; (801ff9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ff60:	490f      	ldr	r1, [pc, #60]	; (801ffa0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ff62:	4810      	ldr	r0, [pc, #64]	; (801ffa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ff64:	f00a fce4 	bl	802a930 <__aeabi_atexit>
 801ff68:	4c0f      	ldr	r4, [pc, #60]	; (801ffa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ff6a:	7823      	ldrb	r3, [r4, #0]
 801ff6c:	f3bf 8f5b 	dmb	ish
 801ff70:	07db      	lsls	r3, r3, #31
 801ff72:	d40b      	bmi.n	801ff8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ff74:	4620      	mov	r0, r4
 801ff76:	f00a fce2 	bl	802a93e <__cxa_guard_acquire>
 801ff7a:	b138      	cbz	r0, 801ff8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ff7c:	4620      	mov	r0, r4
 801ff7e:	f00a fcea 	bl	802a956 <__cxa_guard_release>
 801ff82:	4a06      	ldr	r2, [pc, #24]	; (801ff9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ff84:	4909      	ldr	r1, [pc, #36]	; (801ffac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ff86:	480a      	ldr	r0, [pc, #40]	; (801ffb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ff88:	f00a fcd2 	bl	802a930 <__aeabi_atexit>
 801ff8c:	4b05      	ldr	r3, [pc, #20]	; (801ffa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ff8e:	642b      	str	r3, [r5, #64]	; 0x40
 801ff90:	4b07      	ldr	r3, [pc, #28]	; (801ffb0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ff92:	646b      	str	r3, [r5, #68]	; 0x44
 801ff94:	bd38      	pop	{r3, r4, r5, pc}
 801ff96:	bf00      	nop
 801ff98:	200138bc 	.word	0x200138bc
 801ff9c:	20000000 	.word	0x20000000
 801ffa0:	0801c94f 	.word	0x0801c94f
 801ffa4:	200000c4 	.word	0x200000c4
 801ffa8:	200138c0 	.word	0x200138c0
 801ffac:	0801c94d 	.word	0x0801c94d
 801ffb0:	200000c8 	.word	0x200000c8

0801ffb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801ffb4:	b538      	push	{r3, r4, r5, lr}
 801ffb6:	4c15      	ldr	r4, [pc, #84]	; (802000c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801ffb8:	7823      	ldrb	r3, [r4, #0]
 801ffba:	f3bf 8f5b 	dmb	ish
 801ffbe:	07da      	lsls	r2, r3, #31
 801ffc0:	4605      	mov	r5, r0
 801ffc2:	d40b      	bmi.n	801ffdc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801ffc4:	4620      	mov	r0, r4
 801ffc6:	f00a fcba 	bl	802a93e <__cxa_guard_acquire>
 801ffca:	b138      	cbz	r0, 801ffdc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801ffcc:	4620      	mov	r0, r4
 801ffce:	f00a fcc2 	bl	802a956 <__cxa_guard_release>
 801ffd2:	4a0f      	ldr	r2, [pc, #60]	; (8020010 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801ffd4:	490f      	ldr	r1, [pc, #60]	; (8020014 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801ffd6:	4810      	ldr	r0, [pc, #64]	; (8020018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801ffd8:	f00a fcaa 	bl	802a930 <__aeabi_atexit>
 801ffdc:	4c0f      	ldr	r4, [pc, #60]	; (802001c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801ffde:	7823      	ldrb	r3, [r4, #0]
 801ffe0:	f3bf 8f5b 	dmb	ish
 801ffe4:	07db      	lsls	r3, r3, #31
 801ffe6:	d40b      	bmi.n	8020000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801ffe8:	4620      	mov	r0, r4
 801ffea:	f00a fca8 	bl	802a93e <__cxa_guard_acquire>
 801ffee:	b138      	cbz	r0, 8020000 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fff0:	4620      	mov	r0, r4
 801fff2:	f00a fcb0 	bl	802a956 <__cxa_guard_release>
 801fff6:	4a06      	ldr	r2, [pc, #24]	; (8020010 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fff8:	4909      	ldr	r1, [pc, #36]	; (8020020 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801fffa:	480a      	ldr	r0, [pc, #40]	; (8020024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fffc:	f00a fc98 	bl	802a930 <__aeabi_atexit>
 8020000:	4b05      	ldr	r3, [pc, #20]	; (8020018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8020002:	63ab      	str	r3, [r5, #56]	; 0x38
 8020004:	4b07      	ldr	r3, [pc, #28]	; (8020024 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8020006:	63eb      	str	r3, [r5, #60]	; 0x3c
 8020008:	bd38      	pop	{r3, r4, r5, pc}
 802000a:	bf00      	nop
 802000c:	200138dc 	.word	0x200138dc
 8020010:	20000000 	.word	0x20000000
 8020014:	0801c953 	.word	0x0801c953
 8020018:	200000e4 	.word	0x200000e4
 802001c:	200138e0 	.word	0x200138e0
 8020020:	0801c951 	.word	0x0801c951
 8020024:	200000e8 	.word	0x200000e8

08020028 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8020028:	b510      	push	{r4, lr}
 802002a:	4604      	mov	r4, r0
 802002c:	f7ff ff14 	bl	801fe58 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8020030:	4620      	mov	r0, r4
 8020032:	f7ff ff85 	bl	801ff40 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8020036:	4620      	mov	r0, r4
 8020038:	f7ff ff48 	bl	801fecc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802003c:	4620      	mov	r0, r4
 802003e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020042:	f7ff bfb7 	b.w	801ffb4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08020048 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8020048:	b538      	push	{r3, r4, r5, lr}
 802004a:	4c15      	ldr	r4, [pc, #84]	; (80200a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802004c:	7823      	ldrb	r3, [r4, #0]
 802004e:	f3bf 8f5b 	dmb	ish
 8020052:	07da      	lsls	r2, r3, #31
 8020054:	4605      	mov	r5, r0
 8020056:	d40b      	bmi.n	8020070 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020058:	4620      	mov	r0, r4
 802005a:	f00a fc70 	bl	802a93e <__cxa_guard_acquire>
 802005e:	b138      	cbz	r0, 8020070 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8020060:	4620      	mov	r0, r4
 8020062:	f00a fc78 	bl	802a956 <__cxa_guard_release>
 8020066:	4a0f      	ldr	r2, [pc, #60]	; (80200a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8020068:	490f      	ldr	r1, [pc, #60]	; (80200a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802006a:	4810      	ldr	r0, [pc, #64]	; (80200ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802006c:	f00a fc60 	bl	802a930 <__aeabi_atexit>
 8020070:	4c0f      	ldr	r4, [pc, #60]	; (80200b0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8020072:	7823      	ldrb	r3, [r4, #0]
 8020074:	f3bf 8f5b 	dmb	ish
 8020078:	07db      	lsls	r3, r3, #31
 802007a:	d40b      	bmi.n	8020094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802007c:	4620      	mov	r0, r4
 802007e:	f00a fc5e 	bl	802a93e <__cxa_guard_acquire>
 8020082:	b138      	cbz	r0, 8020094 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8020084:	4620      	mov	r0, r4
 8020086:	f00a fc66 	bl	802a956 <__cxa_guard_release>
 802008a:	4a06      	ldr	r2, [pc, #24]	; (80200a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802008c:	4909      	ldr	r1, [pc, #36]	; (80200b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802008e:	480a      	ldr	r0, [pc, #40]	; (80200b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8020090:	f00a fc4e 	bl	802a930 <__aeabi_atexit>
 8020094:	4b05      	ldr	r3, [pc, #20]	; (80200ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8020096:	662b      	str	r3, [r5, #96]	; 0x60
 8020098:	4b07      	ldr	r3, [pc, #28]	; (80200b8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802009a:	666b      	str	r3, [r5, #100]	; 0x64
 802009c:	bd38      	pop	{r3, r4, r5, pc}
 802009e:	bf00      	nop
 80200a0:	200138c4 	.word	0x200138c4
 80200a4:	20000000 	.word	0x20000000
 80200a8:	0801c93f 	.word	0x0801c93f
 80200ac:	200000cc 	.word	0x200000cc
 80200b0:	200138c8 	.word	0x200138c8
 80200b4:	0801c93d 	.word	0x0801c93d
 80200b8:	200000d0 	.word	0x200000d0

080200bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80200bc:	b538      	push	{r3, r4, r5, lr}
 80200be:	4c15      	ldr	r4, [pc, #84]	; (8020114 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80200c0:	7823      	ldrb	r3, [r4, #0]
 80200c2:	f3bf 8f5b 	dmb	ish
 80200c6:	07da      	lsls	r2, r3, #31
 80200c8:	4605      	mov	r5, r0
 80200ca:	d40b      	bmi.n	80200e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80200cc:	4620      	mov	r0, r4
 80200ce:	f00a fc36 	bl	802a93e <__cxa_guard_acquire>
 80200d2:	b138      	cbz	r0, 80200e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80200d4:	4620      	mov	r0, r4
 80200d6:	f00a fc3e 	bl	802a956 <__cxa_guard_release>
 80200da:	4a0f      	ldr	r2, [pc, #60]	; (8020118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80200dc:	490f      	ldr	r1, [pc, #60]	; (802011c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80200de:	4810      	ldr	r0, [pc, #64]	; (8020120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80200e0:	f00a fc26 	bl	802a930 <__aeabi_atexit>
 80200e4:	4c0f      	ldr	r4, [pc, #60]	; (8020124 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80200e6:	7823      	ldrb	r3, [r4, #0]
 80200e8:	f3bf 8f5b 	dmb	ish
 80200ec:	07db      	lsls	r3, r3, #31
 80200ee:	d40b      	bmi.n	8020108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80200f0:	4620      	mov	r0, r4
 80200f2:	f00a fc24 	bl	802a93e <__cxa_guard_acquire>
 80200f6:	b138      	cbz	r0, 8020108 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80200f8:	4620      	mov	r0, r4
 80200fa:	f00a fc2c 	bl	802a956 <__cxa_guard_release>
 80200fe:	4a06      	ldr	r2, [pc, #24]	; (8020118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8020100:	4909      	ldr	r1, [pc, #36]	; (8020128 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8020102:	480a      	ldr	r0, [pc, #40]	; (802012c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8020104:	f00a fc14 	bl	802a930 <__aeabi_atexit>
 8020108:	4b05      	ldr	r3, [pc, #20]	; (8020120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 802010a:	65ab      	str	r3, [r5, #88]	; 0x58
 802010c:	4b07      	ldr	r3, [pc, #28]	; (802012c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 802010e:	65eb      	str	r3, [r5, #92]	; 0x5c
 8020110:	bd38      	pop	{r3, r4, r5, pc}
 8020112:	bf00      	nop
 8020114:	2001389c 	.word	0x2001389c
 8020118:	20000000 	.word	0x20000000
 802011c:	0801c943 	.word	0x0801c943
 8020120:	200000a4 	.word	0x200000a4
 8020124:	200138a0 	.word	0x200138a0
 8020128:	0801c941 	.word	0x0801c941
 802012c:	200000a8 	.word	0x200000a8

08020130 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8020130:	b510      	push	{r4, lr}
 8020132:	4604      	mov	r4, r0
 8020134:	f7ff ff88 	bl	8020048 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8020138:	4620      	mov	r0, r4
 802013a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802013e:	f7ff bfbd 	b.w	80200bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08020144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8020144:	b538      	push	{r3, r4, r5, lr}
 8020146:	4c15      	ldr	r4, [pc, #84]	; (802019c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8020148:	7823      	ldrb	r3, [r4, #0]
 802014a:	f3bf 8f5b 	dmb	ish
 802014e:	07da      	lsls	r2, r3, #31
 8020150:	4605      	mov	r5, r0
 8020152:	d40b      	bmi.n	802016c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8020154:	4620      	mov	r0, r4
 8020156:	f00a fbf2 	bl	802a93e <__cxa_guard_acquire>
 802015a:	b138      	cbz	r0, 802016c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802015c:	4620      	mov	r0, r4
 802015e:	f00a fbfa 	bl	802a956 <__cxa_guard_release>
 8020162:	4a0f      	ldr	r2, [pc, #60]	; (80201a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020164:	490f      	ldr	r1, [pc, #60]	; (80201a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8020166:	4810      	ldr	r0, [pc, #64]	; (80201a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020168:	f00a fbe2 	bl	802a930 <__aeabi_atexit>
 802016c:	4c0f      	ldr	r4, [pc, #60]	; (80201ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802016e:	7823      	ldrb	r3, [r4, #0]
 8020170:	f3bf 8f5b 	dmb	ish
 8020174:	07db      	lsls	r3, r3, #31
 8020176:	d40b      	bmi.n	8020190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020178:	4620      	mov	r0, r4
 802017a:	f00a fbe0 	bl	802a93e <__cxa_guard_acquire>
 802017e:	b138      	cbz	r0, 8020190 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8020180:	4620      	mov	r0, r4
 8020182:	f00a fbe8 	bl	802a956 <__cxa_guard_release>
 8020186:	4a06      	ldr	r2, [pc, #24]	; (80201a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8020188:	4909      	ldr	r1, [pc, #36]	; (80201b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802018a:	480a      	ldr	r0, [pc, #40]	; (80201b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802018c:	f00a fbd0 	bl	802a930 <__aeabi_atexit>
 8020190:	4b05      	ldr	r3, [pc, #20]	; (80201a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8020192:	672b      	str	r3, [r5, #112]	; 0x70
 8020194:	4b07      	ldr	r3, [pc, #28]	; (80201b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8020196:	676b      	str	r3, [r5, #116]	; 0x74
 8020198:	bd38      	pop	{r3, r4, r5, pc}
 802019a:	bf00      	nop
 802019c:	20013894 	.word	0x20013894
 80201a0:	20000000 	.word	0x20000000
 80201a4:	0801c937 	.word	0x0801c937
 80201a8:	2000009c 	.word	0x2000009c
 80201ac:	20013898 	.word	0x20013898
 80201b0:	0801c935 	.word	0x0801c935
 80201b4:	200000a0 	.word	0x200000a0

080201b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80201b8:	b538      	push	{r3, r4, r5, lr}
 80201ba:	4c15      	ldr	r4, [pc, #84]	; (8020210 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80201bc:	7823      	ldrb	r3, [r4, #0]
 80201be:	f3bf 8f5b 	dmb	ish
 80201c2:	07da      	lsls	r2, r3, #31
 80201c4:	4605      	mov	r5, r0
 80201c6:	d40b      	bmi.n	80201e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80201c8:	4620      	mov	r0, r4
 80201ca:	f00a fbb8 	bl	802a93e <__cxa_guard_acquire>
 80201ce:	b138      	cbz	r0, 80201e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80201d0:	4620      	mov	r0, r4
 80201d2:	f00a fbc0 	bl	802a956 <__cxa_guard_release>
 80201d6:	4a0f      	ldr	r2, [pc, #60]	; (8020214 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80201d8:	490f      	ldr	r1, [pc, #60]	; (8020218 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80201da:	4810      	ldr	r0, [pc, #64]	; (802021c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80201dc:	f00a fba8 	bl	802a930 <__aeabi_atexit>
 80201e0:	4c0f      	ldr	r4, [pc, #60]	; (8020220 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80201e2:	7823      	ldrb	r3, [r4, #0]
 80201e4:	f3bf 8f5b 	dmb	ish
 80201e8:	07db      	lsls	r3, r3, #31
 80201ea:	d40b      	bmi.n	8020204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80201ec:	4620      	mov	r0, r4
 80201ee:	f00a fba6 	bl	802a93e <__cxa_guard_acquire>
 80201f2:	b138      	cbz	r0, 8020204 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80201f4:	4620      	mov	r0, r4
 80201f6:	f00a fbae 	bl	802a956 <__cxa_guard_release>
 80201fa:	4a06      	ldr	r2, [pc, #24]	; (8020214 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80201fc:	4909      	ldr	r1, [pc, #36]	; (8020224 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80201fe:	480a      	ldr	r0, [pc, #40]	; (8020228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8020200:	f00a fb96 	bl	802a930 <__aeabi_atexit>
 8020204:	4b05      	ldr	r3, [pc, #20]	; (802021c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8020206:	66ab      	str	r3, [r5, #104]	; 0x68
 8020208:	4b07      	ldr	r3, [pc, #28]	; (8020228 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 802020a:	66eb      	str	r3, [r5, #108]	; 0x6c
 802020c:	bd38      	pop	{r3, r4, r5, pc}
 802020e:	bf00      	nop
 8020210:	2001388c 	.word	0x2001388c
 8020214:	20000000 	.word	0x20000000
 8020218:	0801c93b 	.word	0x0801c93b
 802021c:	20000094 	.word	0x20000094
 8020220:	20013890 	.word	0x20013890
 8020224:	0801c939 	.word	0x0801c939
 8020228:	20000098 	.word	0x20000098

0802022c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 802022c:	b510      	push	{r4, lr}
 802022e:	4604      	mov	r4, r0
 8020230:	f7ff ff88 	bl	8020144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8020234:	4620      	mov	r0, r4
 8020236:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802023a:	f7ff bfbd 	b.w	80201b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802023e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802023e:	b510      	push	{r4, lr}
 8020240:	4604      	mov	r4, r0
 8020242:	f7ff fff3 	bl	802022c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8020246:	4620      	mov	r0, r4
 8020248:	f7ff ff72 	bl	8020130 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802024c:	4620      	mov	r0, r4
 802024e:	f7ff fdf9 	bl	801fe44 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8020252:	4620      	mov	r0, r4
 8020254:	f7ff fcfa 	bl	801fc4c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8020258:	4620      	mov	r0, r4
 802025a:	f7ff fd75 	bl	801fd48 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802025e:	4620      	mov	r0, r4
 8020260:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020264:	f7ff bee0 	b.w	8020028 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08020268 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8020268:	b538      	push	{r3, r4, r5, lr}
 802026a:	4c0b      	ldr	r4, [pc, #44]	; (8020298 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 802026c:	7823      	ldrb	r3, [r4, #0]
 802026e:	f3bf 8f5b 	dmb	ish
 8020272:	07db      	lsls	r3, r3, #31
 8020274:	4605      	mov	r5, r0
 8020276:	d40b      	bmi.n	8020290 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020278:	4620      	mov	r0, r4
 802027a:	f00a fb60 	bl	802a93e <__cxa_guard_acquire>
 802027e:	b138      	cbz	r0, 8020290 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8020280:	4620      	mov	r0, r4
 8020282:	f00a fb68 	bl	802a956 <__cxa_guard_release>
 8020286:	4a05      	ldr	r2, [pc, #20]	; (802029c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8020288:	4905      	ldr	r1, [pc, #20]	; (80202a0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 802028a:	4806      	ldr	r0, [pc, #24]	; (80202a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 802028c:	f00a fb50 	bl	802a930 <__aeabi_atexit>
 8020290:	4b04      	ldr	r3, [pc, #16]	; (80202a4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8020292:	67ab      	str	r3, [r5, #120]	; 0x78
 8020294:	bd38      	pop	{r3, r4, r5, pc}
 8020296:	bf00      	nop
 8020298:	20013880 	.word	0x20013880
 802029c:	20000000 	.word	0x20000000
 80202a0:	0801c933 	.word	0x0801c933
 80202a4:	2000008c 	.word	0x2000008c

080202a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 80202a8:	b538      	push	{r3, r4, r5, lr}
 80202aa:	4c0b      	ldr	r4, [pc, #44]	; (80202d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 80202ac:	7823      	ldrb	r3, [r4, #0]
 80202ae:	f3bf 8f5b 	dmb	ish
 80202b2:	07db      	lsls	r3, r3, #31
 80202b4:	4605      	mov	r5, r0
 80202b6:	d40b      	bmi.n	80202d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80202b8:	4620      	mov	r0, r4
 80202ba:	f00a fb40 	bl	802a93e <__cxa_guard_acquire>
 80202be:	b138      	cbz	r0, 80202d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 80202c0:	4620      	mov	r0, r4
 80202c2:	f00a fb48 	bl	802a956 <__cxa_guard_release>
 80202c6:	4a05      	ldr	r2, [pc, #20]	; (80202dc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 80202c8:	4905      	ldr	r1, [pc, #20]	; (80202e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 80202ca:	4806      	ldr	r0, [pc, #24]	; (80202e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80202cc:	f00a fb30 	bl	802a930 <__aeabi_atexit>
 80202d0:	4b04      	ldr	r3, [pc, #16]	; (80202e4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 80202d2:	67eb      	str	r3, [r5, #124]	; 0x7c
 80202d4:	bd38      	pop	{r3, r4, r5, pc}
 80202d6:	bf00      	nop
 80202d8:	20013884 	.word	0x20013884
 80202dc:	20000000 	.word	0x20000000
 80202e0:	0801c931 	.word	0x0801c931
 80202e4:	20000090 	.word	0x20000090

080202e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80202e8:	b570      	push	{r4, r5, r6, lr}
 80202ea:	4d0d      	ldr	r5, [pc, #52]	; (8020320 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80202ec:	4c0d      	ldr	r4, [pc, #52]	; (8020324 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80202ee:	782b      	ldrb	r3, [r5, #0]
 80202f0:	f3bf 8f5b 	dmb	ish
 80202f4:	f013 0f01 	tst.w	r3, #1
 80202f8:	4606      	mov	r6, r0
 80202fa:	d10d      	bne.n	8020318 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80202fc:	4628      	mov	r0, r5
 80202fe:	f00a fb1e 	bl	802a93e <__cxa_guard_acquire>
 8020302:	b148      	cbz	r0, 8020318 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 8020304:	4b08      	ldr	r3, [pc, #32]	; (8020328 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 8020306:	6023      	str	r3, [r4, #0]
 8020308:	4628      	mov	r0, r5
 802030a:	f00a fb24 	bl	802a956 <__cxa_guard_release>
 802030e:	4a07      	ldr	r2, [pc, #28]	; (802032c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 8020310:	4907      	ldr	r1, [pc, #28]	; (8020330 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 8020312:	4620      	mov	r0, r4
 8020314:	f00a fb0c 	bl	802a930 <__aeabi_atexit>
 8020318:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 802031c:	bd70      	pop	{r4, r5, r6, pc}
 802031e:	bf00      	nop
 8020320:	20013888 	.word	0x20013888
 8020324:	200138fc 	.word	0x200138fc
 8020328:	0802fb44 	.word	0x0802fb44
 802032c:	20000000 	.word	0x20000000
 8020330:	0801c92f 	.word	0x0801c92f

08020334 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 8020334:	b510      	push	{r4, lr}
 8020336:	4604      	mov	r4, r0
 8020338:	f7ff ff96 	bl	8020268 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 802033c:	4620      	mov	r0, r4
 802033e:	f7ff ffb3 	bl	80202a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 8020342:	4620      	mov	r0, r4
 8020344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020348:	f7ff bfce 	b.w	80202e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0802034c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 802034c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020350:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8020354:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8020358:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 802035c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8020360:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8020364:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8020368:	8808      	ldrh	r0, [r1, #0]
 802036a:	fb05 4c0e 	mla	ip, r5, lr, r4
 802036e:	2d00      	cmp	r5, #0
 8020370:	eb02 0a0c 	add.w	sl, r2, ip
 8020374:	f2c0 80b0 	blt.w	80204d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8020378:	45ab      	cmp	fp, r5
 802037a:	f340 80ad 	ble.w	80204d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802037e:	2c00      	cmp	r4, #0
 8020380:	f2c0 80a8 	blt.w	80204d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8020384:	45a6      	cmp	lr, r4
 8020386:	f340 80a5 	ble.w	80204d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 802038a:	f812 200c 	ldrb.w	r2, [r2, ip]
 802038e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8020392:	1c62      	adds	r2, r4, #1
 8020394:	f100 80a3 	bmi.w	80204de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8020398:	4596      	cmp	lr, r2
 802039a:	f340 80a0 	ble.w	80204de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802039e:	f1b9 0f00 	cmp.w	r9, #0
 80203a2:	f000 809c 	beq.w	80204de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80203a6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80203aa:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80203ae:	3501      	adds	r5, #1
 80203b0:	f100 8099 	bmi.w	80204e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80203b4:	45ab      	cmp	fp, r5
 80203b6:	f340 8096 	ble.w	80204e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80203ba:	2f00      	cmp	r7, #0
 80203bc:	f000 8093 	beq.w	80204e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80203c0:	2c00      	cmp	r4, #0
 80203c2:	f2c0 808e 	blt.w	80204e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80203c6:	45a6      	cmp	lr, r4
 80203c8:	f340 808b 	ble.w	80204e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80203cc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80203d0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80203d4:	3401      	adds	r4, #1
 80203d6:	f100 8089 	bmi.w	80204ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80203da:	45a6      	cmp	lr, r4
 80203dc:	f340 8086 	ble.w	80204ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80203e0:	f1b9 0f00 	cmp.w	r9, #0
 80203e4:	f000 8082 	beq.w	80204ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80203e8:	44d6      	add	lr, sl
 80203ea:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80203ee:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80203f2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80203f6:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80203fa:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80203fe:	fb19 fe07 	smulbb	lr, r9, r7
 8020402:	ea44 0808 	orr.w	r8, r4, r8
 8020406:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802040a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802040e:	f1c7 0210 	rsb	r2, r7, #16
 8020412:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8020416:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802041a:	ea44 0c0c 	orr.w	ip, r4, ip
 802041e:	eba2 0209 	sub.w	r2, r2, r9
 8020422:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020426:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802042a:	fb04 f40c 	mul.w	r4, r4, ip
 802042e:	fb02 4808 	mla	r8, r2, r8, r4
 8020432:	041a      	lsls	r2, r3, #16
 8020434:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020438:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802043c:	4313      	orrs	r3, r2
 802043e:	042a      	lsls	r2, r5, #16
 8020440:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8020444:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020448:	fb0e 8303 	mla	r3, lr, r3, r8
 802044c:	432a      	orrs	r2, r5
 802044e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8020452:	fb07 3202 	mla	r2, r7, r2, r3
 8020456:	0d53      	lsrs	r3, r2, #21
 8020458:	0952      	lsrs	r2, r2, #5
 802045a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802045e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020462:	431a      	orrs	r2, r3
 8020464:	b293      	uxth	r3, r2
 8020466:	b2b4      	uxth	r4, r6
 8020468:	1202      	asrs	r2, r0, #8
 802046a:	43f6      	mvns	r6, r6
 802046c:	b2f6      	uxtb	r6, r6
 802046e:	121d      	asrs	r5, r3, #8
 8020470:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020474:	fb12 f206 	smulbb	r2, r2, r6
 8020478:	10c7      	asrs	r7, r0, #3
 802047a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802047e:	00c0      	lsls	r0, r0, #3
 8020480:	fb05 2504 	mla	r5, r5, r4, r2
 8020484:	b2c0      	uxtb	r0, r0
 8020486:	10da      	asrs	r2, r3, #3
 8020488:	00db      	lsls	r3, r3, #3
 802048a:	b2db      	uxtb	r3, r3
 802048c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020490:	fb10 f006 	smulbb	r0, r0, r6
 8020494:	b2ad      	uxth	r5, r5
 8020496:	fb03 0004 	mla	r0, r3, r4, r0
 802049a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802049e:	fb17 f706 	smulbb	r7, r7, r6
 80204a2:	b280      	uxth	r0, r0
 80204a4:	1c6b      	adds	r3, r5, #1
 80204a6:	fb02 7204 	mla	r2, r2, r4, r7
 80204aa:	b292      	uxth	r2, r2
 80204ac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80204b0:	1c43      	adds	r3, r0, #1
 80204b2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80204b6:	1c50      	adds	r0, r2, #1
 80204b8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80204bc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80204c0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80204c4:	0952      	lsrs	r2, r2, #5
 80204c6:	432b      	orrs	r3, r5
 80204c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80204cc:	4313      	orrs	r3, r2
 80204ce:	800b      	strh	r3, [r1, #0]
 80204d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80204d4:	4680      	mov	r8, r0
 80204d6:	e75c      	b.n	8020392 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80204d8:	4684      	mov	ip, r0
 80204da:	4680      	mov	r8, r0
 80204dc:	e767      	b.n	80203ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80204de:	4684      	mov	ip, r0
 80204e0:	e765      	b.n	80203ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80204e2:	4605      	mov	r5, r0
 80204e4:	e776      	b.n	80203d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80204e6:	4603      	mov	r3, r0
 80204e8:	4605      	mov	r5, r0
 80204ea:	e782      	b.n	80203f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80204ec:	4603      	mov	r3, r0
 80204ee:	e780      	b.n	80203f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080204f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80204f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80204f4:	b099      	sub	sp, #100	; 0x64
 80204f6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 80204fa:	9215      	str	r2, [sp, #84]	; 0x54
 80204fc:	9309      	str	r3, [sp, #36]	; 0x24
 80204fe:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8020500:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8020504:	930d      	str	r3, [sp, #52]	; 0x34
 8020506:	910c      	str	r1, [sp, #48]	; 0x30
 8020508:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 802050c:	9016      	str	r0, [sp, #88]	; 0x58
 802050e:	6850      	ldr	r0, [r2, #4]
 8020510:	6812      	ldr	r2, [r2, #0]
 8020512:	fb00 1303 	mla	r3, r0, r3, r1
 8020516:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 802051a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802051c:	681b      	ldr	r3, [r3, #0]
 802051e:	930b      	str	r3, [sp, #44]	; 0x2c
 8020520:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020522:	685e      	ldr	r6, [r3, #4]
 8020524:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020526:	43db      	mvns	r3, r3
 8020528:	b2db      	uxtb	r3, r3
 802052a:	3604      	adds	r6, #4
 802052c:	930a      	str	r3, [sp, #40]	; 0x28
 802052e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020530:	2b00      	cmp	r3, #0
 8020532:	dc03      	bgt.n	802053c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020534:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8020536:	2b00      	cmp	r3, #0
 8020538:	f340 8225 	ble.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802053c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802053e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020542:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020546:	1e48      	subs	r0, r1, #1
 8020548:	1e57      	subs	r7, r2, #1
 802054a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802054c:	2b00      	cmp	r3, #0
 802054e:	f340 80e3 	ble.w	8020718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8020552:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8020556:	ea4f 4325 	mov.w	r3, r5, asr #16
 802055a:	d406      	bmi.n	802056a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802055c:	4584      	cmp	ip, r0
 802055e:	da04      	bge.n	802056a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020560:	2b00      	cmp	r3, #0
 8020562:	db02      	blt.n	802056a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020564:	42bb      	cmp	r3, r7
 8020566:	f2c0 80d8 	blt.w	802071a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802056a:	f11c 0c01 	adds.w	ip, ip, #1
 802056e:	f100 80c9 	bmi.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020572:	4561      	cmp	r1, ip
 8020574:	f2c0 80c6 	blt.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020578:	3301      	adds	r3, #1
 802057a:	f100 80c3 	bmi.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802057e:	429a      	cmp	r2, r3
 8020580:	f2c0 80c0 	blt.w	8020704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020584:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020588:	4647      	mov	r7, r8
 802058a:	f1bb 0f00 	cmp.w	fp, #0
 802058e:	f340 80e3 	ble.w	8020758 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8020592:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8020594:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020596:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802059a:	689b      	ldr	r3, [r3, #8]
 802059c:	ea5f 422a 	movs.w	r2, sl, asr #16
 80205a0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80205a4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80205a8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80205ac:	f100 8121 	bmi.w	80207f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80205b0:	f103 39ff 	add.w	r9, r3, #4294967295
 80205b4:	454a      	cmp	r2, r9
 80205b6:	f280 811c 	bge.w	80207f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80205ba:	f1bc 0f00 	cmp.w	ip, #0
 80205be:	f2c0 8118 	blt.w	80207f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80205c2:	f10e 39ff 	add.w	r9, lr, #4294967295
 80205c6:	45cc      	cmp	ip, r9
 80205c8:	f280 8113 	bge.w	80207f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80205cc:	b21b      	sxth	r3, r3
 80205ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80205d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80205d4:	eb04 0902 	add.w	r9, r4, r2
 80205d8:	5ca2      	ldrb	r2, [r4, r2]
 80205da:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80205de:	2800      	cmp	r0, #0
 80205e0:	f000 80fe 	beq.w	80207e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80205e4:	f899 2001 	ldrb.w	r2, [r9, #1]
 80205e8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80205ec:	9211      	str	r2, [sp, #68]	; 0x44
 80205ee:	b151      	cbz	r1, 8020606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80205f0:	eb09 0203 	add.w	r2, r9, r3
 80205f4:	f819 3003 	ldrb.w	r3, [r9, r3]
 80205f8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80205fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80205fe:	7853      	ldrb	r3, [r2, #1]
 8020600:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020604:	9312      	str	r3, [sp, #72]	; 0x48
 8020606:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8020608:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802060a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802060e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020612:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020616:	ea4c 0c03 	orr.w	ip, ip, r3
 802061a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802061c:	041b      	lsls	r3, r3, #16
 802061e:	fb10 f201 	smulbb	r2, r0, r1
 8020622:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8020626:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802062a:	10d2      	asrs	r2, r2, #3
 802062c:	4323      	orrs	r3, r4
 802062e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020632:	4353      	muls	r3, r2
 8020634:	fb09 330c 	mla	r3, r9, ip, r3
 8020638:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802063c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020640:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020644:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020648:	f1c1 0c10 	rsb	ip, r1, #16
 802064c:	ebac 0c00 	sub.w	ip, ip, r0
 8020650:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020654:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802065a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802065c:	0418      	lsls	r0, r3, #16
 802065e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020662:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020666:	4318      	orrs	r0, r3
 8020668:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 802066c:	fb02 c200 	mla	r2, r2, r0, ip
 8020670:	0d53      	lsrs	r3, r2, #21
 8020672:	0952      	lsrs	r2, r2, #5
 8020674:	8838      	ldrh	r0, [r7, #0]
 8020676:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802067a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802067e:	431a      	orrs	r2, r3
 8020680:	b292      	uxth	r2, r2
 8020682:	1201      	asrs	r1, r0, #8
 8020684:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8020688:	ea4f 2c22 	mov.w	ip, r2, asr #8
 802068c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020690:	fb11 f104 	smulbb	r1, r1, r4
 8020694:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8020698:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802069c:	00c0      	lsls	r0, r0, #3
 802069e:	fb0c 1c03 	mla	ip, ip, r3, r1
 80206a2:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80206a6:	10d1      	asrs	r1, r2, #3
 80206a8:	b2c0      	uxtb	r0, r0
 80206aa:	00d2      	lsls	r2, r2, #3
 80206ac:	b2d2      	uxtb	r2, r2
 80206ae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80206b2:	fb1e fe04 	smulbb	lr, lr, r4
 80206b6:	fb10 f004 	smulbb	r0, r0, r4
 80206ba:	fa1f fc8c 	uxth.w	ip, ip
 80206be:	fb01 e103 	mla	r1, r1, r3, lr
 80206c2:	fb02 0303 	mla	r3, r2, r3, r0
 80206c6:	b29a      	uxth	r2, r3
 80206c8:	f10c 0301 	add.w	r3, ip, #1
 80206cc:	b289      	uxth	r1, r1
 80206ce:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80206d2:	1c53      	adds	r3, r2, #1
 80206d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80206d8:	1c4a      	adds	r2, r1, #1
 80206da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80206de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80206e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80206e6:	0949      	lsrs	r1, r1, #5
 80206e8:	ea43 030c 	orr.w	r3, r3, ip
 80206ec:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80206f0:	430b      	orrs	r3, r1
 80206f2:	803b      	strh	r3, [r7, #0]
 80206f4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80206f6:	449a      	add	sl, r3
 80206f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80206fa:	3702      	adds	r7, #2
 80206fc:	441d      	add	r5, r3
 80206fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020702:	e742      	b.n	802058a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020704:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020706:	449a      	add	sl, r3
 8020708:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802070a:	441d      	add	r5, r3
 802070c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802070e:	3b01      	subs	r3, #1
 8020710:	9309      	str	r3, [sp, #36]	; 0x24
 8020712:	f108 0802 	add.w	r8, r8, #2
 8020716:	e718      	b.n	802054a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020718:	d023      	beq.n	8020762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 802071a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802071c:	9825      	ldr	r0, [sp, #148]	; 0x94
 802071e:	3b01      	subs	r3, #1
 8020720:	fb00 a003 	mla	r0, r0, r3, sl
 8020724:	1400      	asrs	r0, r0, #16
 8020726:	f53f af2d 	bmi.w	8020584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802072a:	3901      	subs	r1, #1
 802072c:	4288      	cmp	r0, r1
 802072e:	f6bf af29 	bge.w	8020584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020732:	9926      	ldr	r1, [sp, #152]	; 0x98
 8020734:	fb01 5303 	mla	r3, r1, r3, r5
 8020738:	141b      	asrs	r3, r3, #16
 802073a:	f53f af23 	bmi.w	8020584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802073e:	3a01      	subs	r2, #1
 8020740:	4293      	cmp	r3, r2
 8020742:	f6bf af1f 	bge.w	8020584 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020746:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 802074a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 802074e:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8020752:	f1be 0f00 	cmp.w	lr, #0
 8020756:	dc6c      	bgt.n	8020832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8020758:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802075a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802075e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8020762:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020764:	2b00      	cmp	r3, #0
 8020766:	f340 810e 	ble.w	8020986 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 802076a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802076e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020772:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020776:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8020778:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802077c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020780:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020784:	eef0 6a62 	vmov.f32	s13, s5
 8020788:	ee61 7a27 	vmul.f32	s15, s2, s15
 802078c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020790:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020794:	ee16 aa90 	vmov	sl, s13
 8020798:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802079c:	eef0 6a43 	vmov.f32	s13, s6
 80207a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80207a4:	ee12 2a90 	vmov	r2, s5
 80207a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80207ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80207b0:	ee13 2a10 	vmov	r2, s6
 80207b4:	9325      	str	r3, [sp, #148]	; 0x94
 80207b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80207b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80207bc:	9326      	str	r3, [sp, #152]	; 0x98
 80207be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80207c0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80207c2:	3b01      	subs	r3, #1
 80207c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80207c8:	930c      	str	r3, [sp, #48]	; 0x30
 80207ca:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80207cc:	bf08      	it	eq
 80207ce:	4613      	moveq	r3, r2
 80207d0:	ee16 5a90 	vmov	r5, s13
 80207d4:	9309      	str	r3, [sp, #36]	; 0x24
 80207d6:	eeb0 3a67 	vmov.f32	s6, s15
 80207da:	eef0 2a47 	vmov.f32	s5, s14
 80207de:	e6a6      	b.n	802052e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80207e0:	2900      	cmp	r1, #0
 80207e2:	f43f af10 	beq.w	8020606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80207e6:	f819 3003 	ldrb.w	r3, [r9, r3]
 80207ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80207ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80207f0:	e709      	b.n	8020606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80207f2:	f112 0901 	adds.w	r9, r2, #1
 80207f6:	f53f af7d 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80207fa:	454b      	cmp	r3, r9
 80207fc:	f6ff af7a 	blt.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020800:	f11c 0901 	adds.w	r9, ip, #1
 8020804:	f53f af76 	bmi.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020808:	45ce      	cmp	lr, r9
 802080a:	f6ff af73 	blt.w	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802080e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020810:	9202      	str	r2, [sp, #8]
 8020812:	b21b      	sxth	r3, r3
 8020814:	fa0f f28e 	sxth.w	r2, lr
 8020818:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802081c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020820:	9201      	str	r2, [sp, #4]
 8020822:	9300      	str	r3, [sp, #0]
 8020824:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020826:	9816      	ldr	r0, [sp, #88]	; 0x58
 8020828:	4633      	mov	r3, r6
 802082a:	4639      	mov	r1, r7
 802082c:	f7ff fd8e 	bl	802034c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8020830:	e760      	b.n	80206f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020832:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8020834:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020836:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802083a:	ea4f 422a 	mov.w	r2, sl, asr #16
 802083e:	1429      	asrs	r1, r5, #16
 8020840:	fb03 2101 	mla	r1, r3, r1, r2
 8020844:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020846:	440a      	add	r2, r1
 8020848:	5c61      	ldrb	r1, [r4, r1]
 802084a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 802084e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020852:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8020856:	f1bc 0f00 	cmp.w	ip, #0
 802085a:	f000 808c 	beq.w	8020976 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 802085e:	7857      	ldrb	r7, [r2, #1]
 8020860:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8020864:	9413      	str	r4, [sp, #76]	; 0x4c
 8020866:	b140      	cbz	r0, 802087a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020868:	18d7      	adds	r7, r2, r3
 802086a:	5cd3      	ldrb	r3, [r2, r3]
 802086c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020870:	9310      	str	r3, [sp, #64]	; 0x40
 8020872:	787b      	ldrb	r3, [r7, #1]
 8020874:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020878:	9314      	str	r3, [sp, #80]	; 0x50
 802087a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802087c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802087e:	fb1c f200 	smulbb	r2, ip, r0
 8020882:	041f      	lsls	r7, r3, #16
 8020884:	10d2      	asrs	r2, r2, #3
 8020886:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802088a:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 802088e:	431f      	orrs	r7, r3
 8020890:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8020894:	9317      	str	r3, [sp, #92]	; 0x5c
 8020896:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8020898:	041b      	lsls	r3, r3, #16
 802089a:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 802089e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80208a2:	ea43 030b 	orr.w	r3, r3, fp
 80208a6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208a8:	4353      	muls	r3, r2
 80208aa:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80208ae:	fb04 3707 	mla	r7, r4, r7, r3
 80208b2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80208b6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80208ba:	ea43 0b01 	orr.w	fp, r3, r1
 80208be:	f1c0 0110 	rsb	r1, r0, #16
 80208c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80208c4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80208c6:	eba1 0c0c 	sub.w	ip, r1, ip
 80208ca:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80208ce:	fb0c 770b 	mla	r7, ip, fp, r7
 80208d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80208d6:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80208da:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80208de:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80208e2:	ea4c 0c0b 	orr.w	ip, ip, fp
 80208e6:	fb02 770c 	mla	r7, r2, ip, r7
 80208ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80208ec:	0d79      	lsrs	r1, r7, #21
 80208ee:	097f      	lsrs	r7, r7, #5
 80208f0:	8812      	ldrh	r2, [r2, #0]
 80208f2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80208f6:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80208fa:	430f      	orrs	r7, r1
 80208fc:	b2bb      	uxth	r3, r7
 80208fe:	1211      	asrs	r1, r2, #8
 8020900:	1218      	asrs	r0, r3, #8
 8020902:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020906:	fb11 f104 	smulbb	r1, r1, r4
 802090a:	10d7      	asrs	r7, r2, #3
 802090c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020910:	00d2      	lsls	r2, r2, #3
 8020912:	fb00 1009 	mla	r0, r0, r9, r1
 8020916:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802091a:	10d9      	asrs	r1, r3, #3
 802091c:	b2d2      	uxtb	r2, r2
 802091e:	00db      	lsls	r3, r3, #3
 8020920:	fb17 f704 	smulbb	r7, r7, r4
 8020924:	fb12 f204 	smulbb	r2, r2, r4
 8020928:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802092c:	b2db      	uxtb	r3, r3
 802092e:	b280      	uxth	r0, r0
 8020930:	fb01 7109 	mla	r1, r1, r9, r7
 8020934:	fb03 2309 	mla	r3, r3, r9, r2
 8020938:	b29b      	uxth	r3, r3
 802093a:	b289      	uxth	r1, r1
 802093c:	1c42      	adds	r2, r0, #1
 802093e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020942:	1c4f      	adds	r7, r1, #1
 8020944:	1c5a      	adds	r2, r3, #1
 8020946:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802094a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802094e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020952:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020956:	0949      	lsrs	r1, r1, #5
 8020958:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802095a:	4310      	orrs	r0, r2
 802095c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020960:	4308      	orrs	r0, r1
 8020962:	f823 0b02 	strh.w	r0, [r3], #2
 8020966:	930e      	str	r3, [sp, #56]	; 0x38
 8020968:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802096a:	449a      	add	sl, r3
 802096c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802096e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8020972:	441d      	add	r5, r3
 8020974:	e6ed      	b.n	8020752 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8020976:	2800      	cmp	r0, #0
 8020978:	f43f af7f 	beq.w	802087a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802097c:	5cd3      	ldrb	r3, [r2, r3]
 802097e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020982:	9310      	str	r3, [sp, #64]	; 0x40
 8020984:	e779      	b.n	802087a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020986:	b019      	add	sp, #100	; 0x64
 8020988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802098c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 802098c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020990:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8020994:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8020998:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 802099c:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80209a0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80209a4:	8808      	ldrh	r0, [r1, #0]
 80209a6:	fb08 470e 	mla	r7, r8, lr, r4
 80209aa:	f1b8 0f00 	cmp.w	r8, #0
 80209ae:	eb02 0907 	add.w	r9, r2, r7
 80209b2:	db67      	blt.n	8020a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80209b4:	45c2      	cmp	sl, r8
 80209b6:	dd65      	ble.n	8020a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80209b8:	2c00      	cmp	r4, #0
 80209ba:	db61      	blt.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80209bc:	45a6      	cmp	lr, r4
 80209be:	dd5f      	ble.n	8020a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80209c0:	5dd2      	ldrb	r2, [r2, r7]
 80209c2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80209c6:	1c62      	adds	r2, r4, #1
 80209c8:	d45f      	bmi.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80209ca:	4596      	cmp	lr, r2
 80209cc:	dd5d      	ble.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80209ce:	2d00      	cmp	r5, #0
 80209d0:	d05b      	beq.n	8020a8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80209d2:	f899 2001 	ldrb.w	r2, [r9, #1]
 80209d6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80209da:	f118 0801 	adds.w	r8, r8, #1
 80209de:	d458      	bmi.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80209e0:	45c2      	cmp	sl, r8
 80209e2:	dd56      	ble.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80209e4:	2e00      	cmp	r6, #0
 80209e6:	d054      	beq.n	8020a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 80209e8:	2c00      	cmp	r4, #0
 80209ea:	db50      	blt.n	8020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80209ec:	45a6      	cmp	lr, r4
 80209ee:	dd4e      	ble.n	8020a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 80209f0:	f819 200e 	ldrb.w	r2, [r9, lr]
 80209f4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80209f8:	3401      	adds	r4, #1
 80209fa:	d407      	bmi.n	8020a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 80209fc:	45a6      	cmp	lr, r4
 80209fe:	dd05      	ble.n	8020a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020a00:	b125      	cbz	r5, 8020a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020a02:	44ce      	add	lr, r9
 8020a04:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020a08:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020a0c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020a10:	fb15 f406 	smulbb	r4, r5, r6
 8020a14:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a18:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020a1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020a20:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020a24:	ea43 0c0c 	orr.w	ip, r3, ip
 8020a28:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8020a2c:	f1c6 0310 	rsb	r3, r6, #16
 8020a30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8020a34:	1b5b      	subs	r3, r3, r5
 8020a36:	ea4e 0707 	orr.w	r7, lr, r7
 8020a3a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020a3e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020a42:	437d      	muls	r5, r7
 8020a44:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020a48:	0403      	lsls	r3, r0, #16
 8020a4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a4e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020a52:	4318      	orrs	r0, r3
 8020a54:	0413      	lsls	r3, r2, #16
 8020a56:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020a5a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020a5e:	4313      	orrs	r3, r2
 8020a60:	fb04 c000 	mla	r0, r4, r0, ip
 8020a64:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020a68:	fb06 0003 	mla	r0, r6, r3, r0
 8020a6c:	0d43      	lsrs	r3, r0, #21
 8020a6e:	0940      	lsrs	r0, r0, #5
 8020a70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a74:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8020a78:	4318      	orrs	r0, r3
 8020a7a:	8008      	strh	r0, [r1, #0]
 8020a7c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020a80:	4684      	mov	ip, r0
 8020a82:	e7a0      	b.n	80209c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8020a84:	4607      	mov	r7, r0
 8020a86:	4684      	mov	ip, r0
 8020a88:	e7a7      	b.n	80209da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020a8a:	4607      	mov	r7, r0
 8020a8c:	e7a5      	b.n	80209da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8020a8e:	4602      	mov	r2, r0
 8020a90:	e7b2      	b.n	80209f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8020a92:	4602      	mov	r2, r0
 8020a94:	e7ba      	b.n	8020a0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08020a96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a9a:	b093      	sub	sp, #76	; 0x4c
 8020a9c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020aa0:	920f      	str	r2, [sp, #60]	; 0x3c
 8020aa2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020aa4:	9108      	str	r1, [sp, #32]
 8020aa6:	9306      	str	r3, [sp, #24]
 8020aa8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020aac:	9010      	str	r0, [sp, #64]	; 0x40
 8020aae:	6850      	ldr	r0, [r2, #4]
 8020ab0:	6812      	ldr	r2, [r2, #0]
 8020ab2:	fb00 1303 	mla	r3, r0, r3, r1
 8020ab6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020aba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020abc:	681b      	ldr	r3, [r3, #0]
 8020abe:	9307      	str	r3, [sp, #28]
 8020ac0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ac2:	685f      	ldr	r7, [r3, #4]
 8020ac4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020ac8:	3704      	adds	r7, #4
 8020aca:	9b08      	ldr	r3, [sp, #32]
 8020acc:	2b00      	cmp	r3, #0
 8020ace:	dc03      	bgt.n	8020ad8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8020ad0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8020ad2:	2b00      	cmp	r3, #0
 8020ad4:	f340 81b2 	ble.w	8020e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020ad8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ada:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ade:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ae2:	1e48      	subs	r0, r1, #1
 8020ae4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020ae8:	9b06      	ldr	r3, [sp, #24]
 8020aea:	2b00      	cmp	r3, #0
 8020aec:	f340 80a9 	ble.w	8020c42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8020af0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020af4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020af8:	d406      	bmi.n	8020b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020afa:	4586      	cmp	lr, r0
 8020afc:	da04      	bge.n	8020b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020afe:	2b00      	cmp	r3, #0
 8020b00:	db02      	blt.n	8020b08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020b02:	4563      	cmp	r3, ip
 8020b04:	f2c0 809e 	blt.w	8020c44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020b08:	f11e 0e01 	adds.w	lr, lr, #1
 8020b0c:	f100 808f 	bmi.w	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b10:	4571      	cmp	r1, lr
 8020b12:	f2c0 808c 	blt.w	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b16:	3301      	adds	r3, #1
 8020b18:	f100 8089 	bmi.w	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b1c:	429a      	cmp	r2, r3
 8020b1e:	f2c0 8086 	blt.w	8020c2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020b22:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020b26:	46c8      	mov	r8, r9
 8020b28:	f1bb 0f00 	cmp.w	fp, #0
 8020b2c:	f340 80a6 	ble.w	8020c7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8020b30:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8020b32:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020b34:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020b38:	689b      	ldr	r3, [r3, #8]
 8020b3a:	1422      	asrs	r2, r4, #16
 8020b3c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020b40:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020b44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020b48:	f100 80e3 	bmi.w	8020d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020b4c:	f103 3aff 	add.w	sl, r3, #4294967295
 8020b50:	4552      	cmp	r2, sl
 8020b52:	f280 80de 	bge.w	8020d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020b56:	f1bc 0f00 	cmp.w	ip, #0
 8020b5a:	f2c0 80da 	blt.w	8020d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020b5e:	f10e 3aff 	add.w	sl, lr, #4294967295
 8020b62:	45d4      	cmp	ip, sl
 8020b64:	f280 80d5 	bge.w	8020d12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8020b68:	b21b      	sxth	r3, r3
 8020b6a:	fb0c 2203 	mla	r2, ip, r3, r2
 8020b6e:	9d07      	ldr	r5, [sp, #28]
 8020b70:	eb05 0a02 	add.w	sl, r5, r2
 8020b74:	5caa      	ldrb	r2, [r5, r2]
 8020b76:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8020b7a:	2800      	cmp	r0, #0
 8020b7c:	f000 80c0 	beq.w	8020d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8020b80:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8020b84:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8020b88:	920b      	str	r2, [sp, #44]	; 0x2c
 8020b8a:	b151      	cbz	r1, 8020ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020b8c:	eb0a 0203 	add.w	r2, sl, r3
 8020b90:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020b94:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020b98:	9309      	str	r3, [sp, #36]	; 0x24
 8020b9a:	7853      	ldrb	r3, [r2, #1]
 8020b9c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020ba0:	930c      	str	r3, [sp, #48]	; 0x30
 8020ba2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020ba4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020ba6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020baa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020bae:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020bb2:	ea4c 0c03 	orr.w	ip, ip, r3
 8020bb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020bb8:	041b      	lsls	r3, r3, #16
 8020bba:	fb10 f201 	smulbb	r2, r0, r1
 8020bbe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020bc2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8020bc6:	10d2      	asrs	r2, r2, #3
 8020bc8:	432b      	orrs	r3, r5
 8020bca:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8020bce:	4353      	muls	r3, r2
 8020bd0:	fb0a 330c 	mla	r3, sl, ip, r3
 8020bd4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020bd8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020bdc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8020be0:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020be4:	f1c1 0c10 	rsb	ip, r1, #16
 8020be8:	ebac 0c00 	sub.w	ip, ip, r0
 8020bec:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8020bf0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020bf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020bf6:	0418      	lsls	r0, r3, #16
 8020bf8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8020bfc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020c00:	4318      	orrs	r0, r3
 8020c02:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020c06:	fb02 c200 	mla	r2, r2, r0, ip
 8020c0a:	0d53      	lsrs	r3, r2, #21
 8020c0c:	0952      	lsrs	r2, r2, #5
 8020c0e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020c12:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8020c16:	431a      	orrs	r2, r3
 8020c18:	f8a8 2000 	strh.w	r2, [r8]
 8020c1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c1e:	441c      	add	r4, r3
 8020c20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c22:	f108 0802 	add.w	r8, r8, #2
 8020c26:	441e      	add	r6, r3
 8020c28:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c2c:	e77c      	b.n	8020b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020c2e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020c30:	441c      	add	r4, r3
 8020c32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020c34:	441e      	add	r6, r3
 8020c36:	9b06      	ldr	r3, [sp, #24]
 8020c38:	3b01      	subs	r3, #1
 8020c3a:	9306      	str	r3, [sp, #24]
 8020c3c:	f109 0902 	add.w	r9, r9, #2
 8020c40:	e752      	b.n	8020ae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8020c42:	d020      	beq.n	8020c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8020c44:	9b06      	ldr	r3, [sp, #24]
 8020c46:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020c48:	3b01      	subs	r3, #1
 8020c4a:	fb00 4003 	mla	r0, r0, r3, r4
 8020c4e:	1400      	asrs	r0, r0, #16
 8020c50:	f53f af67 	bmi.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020c54:	3901      	subs	r1, #1
 8020c56:	4288      	cmp	r0, r1
 8020c58:	f6bf af63 	bge.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020c5c:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020c5e:	fb01 6303 	mla	r3, r1, r3, r6
 8020c62:	141b      	asrs	r3, r3, #16
 8020c64:	f53f af5d 	bmi.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020c68:	3a01      	subs	r2, #1
 8020c6a:	4293      	cmp	r3, r2
 8020c6c:	f6bf af59 	bge.w	8020b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8020c70:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8020c74:	46ca      	mov	sl, r9
 8020c76:	f1b8 0f00 	cmp.w	r8, #0
 8020c7a:	dc67      	bgt.n	8020d4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8020c7c:	9b06      	ldr	r3, [sp, #24]
 8020c7e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020c82:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020c86:	9b08      	ldr	r3, [sp, #32]
 8020c88:	2b00      	cmp	r3, #0
 8020c8a:	f340 80d7 	ble.w	8020e3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020c8e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020c92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020c96:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8020c9a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020c9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020ca0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ca4:	eeb0 6a62 	vmov.f32	s12, s5
 8020ca8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020cac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020cb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020cb4:	ee16 4a10 	vmov	r4, s12
 8020cb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020cbc:	eeb0 6a43 	vmov.f32	s12, s6
 8020cc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020cc4:	ee12 2a90 	vmov	r2, s5
 8020cc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020ccc:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cd0:	ee13 2a10 	vmov	r2, s6
 8020cd4:	931f      	str	r3, [sp, #124]	; 0x7c
 8020cd6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cd8:	fb92 f3f3 	sdiv	r3, r2, r3
 8020cdc:	9320      	str	r3, [sp, #128]	; 0x80
 8020cde:	9b08      	ldr	r3, [sp, #32]
 8020ce0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020ce2:	3b01      	subs	r3, #1
 8020ce4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020ce8:	9308      	str	r3, [sp, #32]
 8020cea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020cec:	bf08      	it	eq
 8020cee:	4613      	moveq	r3, r2
 8020cf0:	ee16 6a10 	vmov	r6, s12
 8020cf4:	9306      	str	r3, [sp, #24]
 8020cf6:	eeb0 3a67 	vmov.f32	s6, s15
 8020cfa:	eef0 2a47 	vmov.f32	s5, s14
 8020cfe:	e6e4      	b.n	8020aca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8020d00:	2900      	cmp	r1, #0
 8020d02:	f43f af4e 	beq.w	8020ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020d06:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020d0a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d0e:	9309      	str	r3, [sp, #36]	; 0x24
 8020d10:	e747      	b.n	8020ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020d12:	f112 0a01 	adds.w	sl, r2, #1
 8020d16:	d481      	bmi.n	8020c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020d18:	4553      	cmp	r3, sl
 8020d1a:	f6ff af7f 	blt.w	8020c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020d1e:	f11c 0a01 	adds.w	sl, ip, #1
 8020d22:	f53f af7b 	bmi.w	8020c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020d26:	45d6      	cmp	lr, sl
 8020d28:	f6ff af78 	blt.w	8020c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020d2c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8020d30:	b21b      	sxth	r3, r3
 8020d32:	fa0f f28e 	sxth.w	r2, lr
 8020d36:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8020d3a:	9201      	str	r2, [sp, #4]
 8020d3c:	9300      	str	r3, [sp, #0]
 8020d3e:	9a07      	ldr	r2, [sp, #28]
 8020d40:	9810      	ldr	r0, [sp, #64]	; 0x40
 8020d42:	463b      	mov	r3, r7
 8020d44:	4641      	mov	r1, r8
 8020d46:	f7ff fe21 	bl	802098c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020d4a:	e767      	b.n	8020c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020d4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020d4e:	9d07      	ldr	r5, [sp, #28]
 8020d50:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020d54:	1422      	asrs	r2, r4, #16
 8020d56:	1431      	asrs	r1, r6, #16
 8020d58:	fb03 2101 	mla	r1, r3, r1, r2
 8020d5c:	9a07      	ldr	r2, [sp, #28]
 8020d5e:	440a      	add	r2, r1
 8020d60:	5c69      	ldrb	r1, [r5, r1]
 8020d62:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8020d66:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020d6a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8020d6e:	f1be 0f00 	cmp.w	lr, #0
 8020d72:	d05c      	beq.n	8020e2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020d74:	f892 c001 	ldrb.w	ip, [r2, #1]
 8020d78:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8020d7c:	950d      	str	r5, [sp, #52]	; 0x34
 8020d7e:	b150      	cbz	r0, 8020d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020d80:	eb02 0c03 	add.w	ip, r2, r3
 8020d84:	5cd3      	ldrb	r3, [r2, r3]
 8020d86:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d8a:	930a      	str	r3, [sp, #40]	; 0x28
 8020d8c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8020d90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020d94:	930e      	str	r3, [sp, #56]	; 0x38
 8020d96:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020d98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020d9a:	fb1e f200 	smulbb	r2, lr, r0
 8020d9e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020da2:	10d2      	asrs	r2, r2, #3
 8020da4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8020da8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8020dac:	ea4c 0c03 	orr.w	ip, ip, r3
 8020db0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020db4:	9311      	str	r3, [sp, #68]	; 0x44
 8020db6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8020db8:	041b      	lsls	r3, r3, #16
 8020dba:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8020dbe:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8020dc2:	ea43 030b 	orr.w	r3, r3, fp
 8020dc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8020dc8:	4353      	muls	r3, r2
 8020dca:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020dce:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020dd2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8020dd6:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8020dda:	ea43 0b01 	orr.w	fp, r3, r1
 8020dde:	f1c0 0110 	rsb	r1, r0, #16
 8020de2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020de4:	eba1 0e0e 	sub.w	lr, r1, lr
 8020de8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8020dec:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020df0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020df4:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8020df8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8020dfc:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020e00:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020e04:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020e08:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8020e0c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020e10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020e14:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8020e18:	ea43 0c0c 	orr.w	ip, r3, ip
 8020e1c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020e1e:	f82a cb02 	strh.w	ip, [sl], #2
 8020e22:	441c      	add	r4, r3
 8020e24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020e26:	f108 38ff 	add.w	r8, r8, #4294967295
 8020e2a:	441e      	add	r6, r3
 8020e2c:	e723      	b.n	8020c76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020e2e:	2800      	cmp	r0, #0
 8020e30:	d0b1      	beq.n	8020d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020e32:	5cd3      	ldrb	r3, [r2, r3]
 8020e34:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020e38:	930a      	str	r3, [sp, #40]	; 0x28
 8020e3a:	e7ac      	b.n	8020d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020e3c:	b013      	add	sp, #76	; 0x4c
 8020e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020e42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8020e42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e46:	880d      	ldrh	r5, [r1, #0]
 8020e48:	b087      	sub	sp, #28
 8020e4a:	10ef      	asrs	r7, r5, #3
 8020e4c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8020e50:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8020e54:	00ed      	lsls	r5, r5, #3
 8020e56:	9701      	str	r7, [sp, #4]
 8020e58:	b2ed      	uxtb	r5, r5
 8020e5a:	9502      	str	r5, [sp, #8]
 8020e5c:	9d01      	ldr	r5, [sp, #4]
 8020e5e:	9103      	str	r1, [sp, #12]
 8020e60:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8020e64:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8020e68:	9902      	ldr	r1, [sp, #8]
 8020e6a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8020e6e:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8020e72:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8020e76:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8020e7a:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8020e7e:	022d      	lsls	r5, r5, #8
 8020e80:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8020e84:	fb06 0709 	mla	r7, r6, r9, r0
 8020e88:	430d      	orrs	r5, r1
 8020e8a:	2e00      	cmp	r6, #0
 8020e8c:	eb02 0c07 	add.w	ip, r2, r7
 8020e90:	9505      	str	r5, [sp, #20]
 8020e92:	f2c0 80b6 	blt.w	8021002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020e96:	45b3      	cmp	fp, r6
 8020e98:	f340 80b3 	ble.w	8021002 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8020e9c:	2800      	cmp	r0, #0
 8020e9e:	f2c0 80ae 	blt.w	8020ffe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020ea2:	4581      	cmp	r9, r0
 8020ea4:	f340 80ab 	ble.w	8020ffe <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020ea8:	5dd7      	ldrb	r7, [r2, r7]
 8020eaa:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020eae:	441f      	add	r7, r3
 8020eb0:	1c42      	adds	r2, r0, #1
 8020eb2:	f100 80a9 	bmi.w	8021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020eb6:	4591      	cmp	r9, r2
 8020eb8:	f340 80a6 	ble.w	8021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020ebc:	2c00      	cmp	r4, #0
 8020ebe:	f000 80a3 	beq.w	8021008 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020ec2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020ec6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020eca:	441d      	add	r5, r3
 8020ecc:	3601      	adds	r6, #1
 8020ece:	f100 809f 	bmi.w	8021010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020ed2:	45b3      	cmp	fp, r6
 8020ed4:	f340 809c 	ble.w	8021010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020ed8:	f1be 0f00 	cmp.w	lr, #0
 8020edc:	f000 8098 	beq.w	8021010 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020ee0:	2800      	cmp	r0, #0
 8020ee2:	f2c0 8093 	blt.w	802100c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020ee6:	4581      	cmp	r9, r0
 8020ee8:	f340 8090 	ble.w	802100c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020eec:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020ef0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020ef4:	441e      	add	r6, r3
 8020ef6:	3001      	adds	r0, #1
 8020ef8:	f100 808d 	bmi.w	8021016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020efc:	4581      	cmp	r9, r0
 8020efe:	f340 808a 	ble.w	8021016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020f02:	2c00      	cmp	r4, #0
 8020f04:	f000 8087 	beq.w	8021016 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020f08:	44e1      	add	r9, ip
 8020f0a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020f0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f12:	4413      	add	r3, r2
 8020f14:	b2a4      	uxth	r4, r4
 8020f16:	fa1f fe8e 	uxth.w	lr, lr
 8020f1a:	fb04 fb0e 	mul.w	fp, r4, lr
 8020f1e:	0124      	lsls	r4, r4, #4
 8020f20:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020f24:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8020f28:	eba4 040b 	sub.w	r4, r4, fp
 8020f2c:	fa1f f08e 	uxth.w	r0, lr
 8020f30:	b2a2      	uxth	r2, r4
 8020f32:	78ac      	ldrb	r4, [r5, #2]
 8020f34:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020f38:	9901      	ldr	r1, [sp, #4]
 8020f3a:	eba9 0900 	sub.w	r9, r9, r0
 8020f3e:	fa1f f989 	uxth.w	r9, r9
 8020f42:	4354      	muls	r4, r2
 8020f44:	fb09 440c 	mla	r4, r9, ip, r4
 8020f48:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020f4c:	fb00 440c 	mla	r4, r0, ip, r4
 8020f50:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020f54:	fa1f fe88 	uxth.w	lr, r8
 8020f58:	ea6f 0808 	mvn.w	r8, r8
 8020f5c:	fa5f f888 	uxtb.w	r8, r8
 8020f60:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020f64:	fb1a fa08 	smulbb	sl, sl, r8
 8020f68:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020f6c:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020f70:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020f74:	787c      	ldrb	r4, [r7, #1]
 8020f76:	782d      	ldrb	r5, [r5, #0]
 8020f78:	783f      	ldrb	r7, [r7, #0]
 8020f7a:	fb02 fa0a 	mul.w	sl, r2, sl
 8020f7e:	fb09 aa04 	mla	sl, r9, r4, sl
 8020f82:	7874      	ldrb	r4, [r6, #1]
 8020f84:	436a      	muls	r2, r5
 8020f86:	7835      	ldrb	r5, [r6, #0]
 8020f88:	fb00 aa04 	mla	sl, r0, r4, sl
 8020f8c:	fb09 2207 	mla	r2, r9, r7, r2
 8020f90:	785c      	ldrb	r4, [r3, #1]
 8020f92:	781b      	ldrb	r3, [r3, #0]
 8020f94:	fb00 2005 	mla	r0, r0, r5, r2
 8020f98:	fb0b a404 	mla	r4, fp, r4, sl
 8020f9c:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020fa0:	9b02      	ldr	r3, [sp, #8]
 8020fa2:	fb11 fa08 	smulbb	sl, r1, r8
 8020fa6:	fa1f fc8c 	uxth.w	ip, ip
 8020faa:	fb13 f808 	smulbb	r8, r3, r8
 8020fae:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020fb2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020fb6:	fb04 a40e 	mla	r4, r4, lr, sl
 8020fba:	f10c 0301 	add.w	r3, ip, #1
 8020fbe:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020fc2:	fa1f fe8e 	uxth.w	lr, lr
 8020fc6:	b2a4      	uxth	r4, r4
 8020fc8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020fcc:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8020fd0:	f104 0a01 	add.w	sl, r4, #1
 8020fd4:	f10e 0c01 	add.w	ip, lr, #1
 8020fd8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020fdc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020fe0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020fe4:	0964      	lsrs	r4, r4, #5
 8020fe6:	ea4c 0c03 	orr.w	ip, ip, r3
 8020fea:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8020fee:	9b03      	ldr	r3, [sp, #12]
 8020ff0:	ea4c 0c04 	orr.w	ip, ip, r4
 8020ff4:	f8a3 c000 	strh.w	ip, [r3]
 8020ff8:	b007      	add	sp, #28
 8020ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ffe:	af05      	add	r7, sp, #20
 8021000:	e756      	b.n	8020eb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8021002:	ad05      	add	r5, sp, #20
 8021004:	462f      	mov	r7, r5
 8021006:	e761      	b.n	8020ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8021008:	ad05      	add	r5, sp, #20
 802100a:	e75f      	b.n	8020ecc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 802100c:	ae05      	add	r6, sp, #20
 802100e:	e772      	b.n	8020ef6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8021010:	ab05      	add	r3, sp, #20
 8021012:	461e      	mov	r6, r3
 8021014:	e77e      	b.n	8020f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8021016:	ab05      	add	r3, sp, #20
 8021018:	e77c      	b.n	8020f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0802101a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802101a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802101e:	b095      	sub	sp, #84	; 0x54
 8021020:	9212      	str	r2, [sp, #72]	; 0x48
 8021022:	9309      	str	r3, [sp, #36]	; 0x24
 8021024:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021026:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 802102a:	930f      	str	r3, [sp, #60]	; 0x3c
 802102c:	910e      	str	r1, [sp, #56]	; 0x38
 802102e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8021032:	9013      	str	r0, [sp, #76]	; 0x4c
 8021034:	6850      	ldr	r0, [r2, #4]
 8021036:	6812      	ldr	r2, [r2, #0]
 8021038:	fb00 1303 	mla	r3, r0, r3, r1
 802103c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021040:	930a      	str	r3, [sp, #40]	; 0x28
 8021042:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021044:	681b      	ldr	r3, [r3, #0]
 8021046:	930d      	str	r3, [sp, #52]	; 0x34
 8021048:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802104a:	685c      	ldr	r4, [r3, #4]
 802104c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802104e:	43db      	mvns	r3, r3
 8021050:	b2db      	uxtb	r3, r3
 8021052:	3404      	adds	r4, #4
 8021054:	930b      	str	r3, [sp, #44]	; 0x2c
 8021056:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021058:	2b00      	cmp	r3, #0
 802105a:	dc03      	bgt.n	8021064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802105c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802105e:	2b00      	cmp	r3, #0
 8021060:	f340 8255 	ble.w	802150e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8021064:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8021066:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802106a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802106e:	1e48      	subs	r0, r1, #1
 8021070:	1e55      	subs	r5, r2, #1
 8021072:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021074:	2b00      	cmp	r3, #0
 8021076:	f340 80f9 	ble.w	802126c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 802107a:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802107c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802107e:	1436      	asrs	r6, r6, #16
 8021080:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021084:	d406      	bmi.n	8021094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021086:	4286      	cmp	r6, r0
 8021088:	da04      	bge.n	8021094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802108a:	2b00      	cmp	r3, #0
 802108c:	db02      	blt.n	8021094 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802108e:	42ab      	cmp	r3, r5
 8021090:	f2c0 80ed 	blt.w	802126e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8021094:	3601      	adds	r6, #1
 8021096:	f100 80da 	bmi.w	802124e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802109a:	42b1      	cmp	r1, r6
 802109c:	f2c0 80d7 	blt.w	802124e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80210a0:	3301      	adds	r3, #1
 80210a2:	f100 80d4 	bmi.w	802124e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80210a6:	429a      	cmp	r2, r3
 80210a8:	f2c0 80d1 	blt.w	802124e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80210ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80210ae:	9311      	str	r3, [sp, #68]	; 0x44
 80210b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80210b2:	930c      	str	r3, [sp, #48]	; 0x30
 80210b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80210b6:	2b00      	cmp	r3, #0
 80210b8:	f340 80fa 	ble.w	80212b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80210bc:	9826      	ldr	r0, [sp, #152]	; 0x98
 80210be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80210c0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80210c2:	68c6      	ldr	r6, [r0, #12]
 80210c4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80210c6:	141d      	asrs	r5, r3, #16
 80210c8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80210cc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80210ce:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80210d0:	1400      	asrs	r0, r0, #16
 80210d2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80210d6:	6892      	ldr	r2, [r2, #8]
 80210d8:	f100 813e 	bmi.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80210dc:	1e57      	subs	r7, r2, #1
 80210de:	42b8      	cmp	r0, r7
 80210e0:	f280 813a 	bge.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80210e4:	2d00      	cmp	r5, #0
 80210e6:	f2c0 8137 	blt.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80210ea:	1e77      	subs	r7, r6, #1
 80210ec:	42bd      	cmp	r5, r7
 80210ee:	f280 8133 	bge.w	8021358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80210f2:	b212      	sxth	r2, r2
 80210f4:	fb05 0002 	mla	r0, r5, r2, r0
 80210f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80210fa:	f815 a000 	ldrb.w	sl, [r5, r0]
 80210fe:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8021102:	182e      	adds	r6, r5, r0
 8021104:	eb04 050a 	add.w	r5, r4, sl
 8021108:	2b00      	cmp	r3, #0
 802110a:	f000 8117 	beq.w	802133c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 802110e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8021112:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8021116:	44a4      	add	ip, r4
 8021118:	2900      	cmp	r1, #0
 802111a:	f000 8117 	beq.w	802134c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802111e:	18b0      	adds	r0, r6, r2
 8021120:	5cb2      	ldrb	r2, [r6, r2]
 8021122:	7840      	ldrb	r0, [r0, #1]
 8021124:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021128:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802112c:	4422      	add	r2, r4
 802112e:	4420      	add	r0, r4
 8021130:	b29b      	uxth	r3, r3
 8021132:	b289      	uxth	r1, r1
 8021134:	fb03 f901 	mul.w	r9, r3, r1
 8021138:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802113c:	011b      	lsls	r3, r3, #4
 802113e:	b289      	uxth	r1, r1
 8021140:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8021144:	f895 b002 	ldrb.w	fp, [r5, #2]
 8021148:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 802114a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802114e:	f8b6 e000 	ldrh.w	lr, [r6]
 8021152:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8021156:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 802115a:	eba3 0309 	sub.w	r3, r3, r9
 802115e:	b29b      	uxth	r3, r3
 8021160:	eba8 0801 	sub.w	r8, r8, r1
 8021164:	fa1f f888 	uxth.w	r8, r8
 8021168:	435f      	muls	r7, r3
 802116a:	fb08 770b 	mla	r7, r8, fp, r7
 802116e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021172:	9310      	str	r3, [sp, #64]	; 0x40
 8021174:	fb01 770b 	mla	r7, r1, fp, r7
 8021178:	f890 b002 	ldrb.w	fp, [r0, #2]
 802117c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802117e:	fb09 770b 	mla	r7, r9, fp, r7
 8021182:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8021186:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802118a:	fb1b fb03 	smulbb	fp, fp, r3
 802118e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021192:	fb07 b706 	mla	r7, r7, r6, fp
 8021196:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021198:	f895 b001 	ldrb.w	fp, [r5, #1]
 802119c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80211a0:	f89c c000 	ldrb.w	ip, [ip]
 80211a4:	435d      	muls	r5, r3
 80211a6:	fb08 550b 	mla	r5, r8, fp, r5
 80211aa:	f892 b001 	ldrb.w	fp, [r2, #1]
 80211ae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211b0:	fb01 550b 	mla	r5, r1, fp, r5
 80211b4:	f890 b001 	ldrb.w	fp, [r0, #1]
 80211b8:	fb09 550b 	mla	r5, r9, fp, r5
 80211bc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80211c0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80211c4:	fb1b fb03 	smulbb	fp, fp, r3
 80211c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80211ca:	fb03 f30c 	mul.w	r3, r3, ip
 80211ce:	f892 c000 	ldrb.w	ip, [r2]
 80211d2:	fb08 330a 	mla	r3, r8, sl, r3
 80211d6:	fb01 330c 	mla	r3, r1, ip, r3
 80211da:	f890 c000 	ldrb.w	ip, [r0]
 80211de:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80211e2:	fb09 3c0c 	mla	ip, r9, ip, r3
 80211e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80211e8:	fa5f fe8e 	uxtb.w	lr, lr
 80211ec:	b2bf      	uxth	r7, r7
 80211ee:	fb1e fe03 	smulbb	lr, lr, r3
 80211f2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80211f6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80211fa:	fb05 b506 	mla	r5, r5, r6, fp
 80211fe:	1c7b      	adds	r3, r7, #1
 8021200:	fb0c e606 	mla	r6, ip, r6, lr
 8021204:	b2ad      	uxth	r5, r5
 8021206:	b2b6      	uxth	r6, r6
 8021208:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802120c:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8021210:	f105 0b01 	add.w	fp, r5, #1
 8021214:	1c77      	adds	r7, r6, #1
 8021216:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 802121a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802121e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021222:	096d      	lsrs	r5, r5, #5
 8021224:	431f      	orrs	r7, r3
 8021226:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802122a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802122c:	433d      	orrs	r5, r7
 802122e:	801d      	strh	r5, [r3, #0]
 8021230:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021232:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021234:	3302      	adds	r3, #2
 8021236:	930c      	str	r3, [sp, #48]	; 0x30
 8021238:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802123a:	4413      	add	r3, r2
 802123c:	931f      	str	r3, [sp, #124]	; 0x7c
 802123e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021240:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021242:	4413      	add	r3, r2
 8021244:	9320      	str	r3, [sp, #128]	; 0x80
 8021246:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021248:	3b01      	subs	r3, #1
 802124a:	9311      	str	r3, [sp, #68]	; 0x44
 802124c:	e732      	b.n	80210b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802124e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8021250:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021252:	4433      	add	r3, r6
 8021254:	931f      	str	r3, [sp, #124]	; 0x7c
 8021256:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8021258:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802125a:	4433      	add	r3, r6
 802125c:	9320      	str	r3, [sp, #128]	; 0x80
 802125e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021260:	3b01      	subs	r3, #1
 8021262:	9309      	str	r3, [sp, #36]	; 0x24
 8021264:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021266:	3302      	adds	r3, #2
 8021268:	930a      	str	r3, [sp, #40]	; 0x28
 802126a:	e702      	b.n	8021072 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802126c:	d027      	beq.n	80212be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802126e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021270:	9821      	ldr	r0, [sp, #132]	; 0x84
 8021272:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021274:	3b01      	subs	r3, #1
 8021276:	fb00 5003 	mla	r0, r0, r3, r5
 802127a:	1400      	asrs	r0, r0, #16
 802127c:	f53f af16 	bmi.w	80210ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021280:	3901      	subs	r1, #1
 8021282:	4288      	cmp	r0, r1
 8021284:	f6bf af12 	bge.w	80210ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021288:	9922      	ldr	r1, [sp, #136]	; 0x88
 802128a:	9820      	ldr	r0, [sp, #128]	; 0x80
 802128c:	fb01 0303 	mla	r3, r1, r3, r0
 8021290:	141b      	asrs	r3, r3, #16
 8021292:	f53f af0b 	bmi.w	80210ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021296:	3a01      	subs	r2, #1
 8021298:	4293      	cmp	r3, r2
 802129a:	f6bf af07 	bge.w	80210ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802129e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212a0:	9311      	str	r3, [sp, #68]	; 0x44
 80212a2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 80212a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80212a8:	930c      	str	r3, [sp, #48]	; 0x30
 80212aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80212ac:	2b00      	cmp	r3, #0
 80212ae:	dc70      	bgt.n	8021392 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80212b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80212b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80212b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80212b8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80212bc:	930a      	str	r3, [sp, #40]	; 0x28
 80212be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80212c0:	2b00      	cmp	r3, #0
 80212c2:	f340 8124 	ble.w	802150e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80212c6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80212ca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80212ce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80212d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80212d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80212d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80212dc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80212e0:	eef0 6a62 	vmov.f32	s13, s5
 80212e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80212e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80212ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80212f0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80212f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80212f8:	eef0 6a43 	vmov.f32	s13, s6
 80212fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021300:	ee12 2a90 	vmov	r2, s5
 8021304:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021308:	fb92 f3f3 	sdiv	r3, r2, r3
 802130c:	ee13 2a10 	vmov	r2, s6
 8021310:	9321      	str	r3, [sp, #132]	; 0x84
 8021312:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021314:	fb92 f3f3 	sdiv	r3, r2, r3
 8021318:	9322      	str	r3, [sp, #136]	; 0x88
 802131a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802131c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802131e:	3b01      	subs	r3, #1
 8021320:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021324:	930e      	str	r3, [sp, #56]	; 0x38
 8021326:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021328:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 802132c:	bf08      	it	eq
 802132e:	4613      	moveq	r3, r2
 8021330:	9309      	str	r3, [sp, #36]	; 0x24
 8021332:	eeb0 3a67 	vmov.f32	s6, s15
 8021336:	eef0 2a47 	vmov.f32	s5, s14
 802133a:	e68c      	b.n	8021056 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802133c:	b149      	cbz	r1, 8021352 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802133e:	5cb2      	ldrb	r2, [r6, r2]
 8021340:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021344:	4422      	add	r2, r4
 8021346:	4628      	mov	r0, r5
 8021348:	46ac      	mov	ip, r5
 802134a:	e6f1      	b.n	8021130 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802134c:	4628      	mov	r0, r5
 802134e:	462a      	mov	r2, r5
 8021350:	e6ee      	b.n	8021130 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8021352:	4628      	mov	r0, r5
 8021354:	462a      	mov	r2, r5
 8021356:	e7f7      	b.n	8021348 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8021358:	1c47      	adds	r7, r0, #1
 802135a:	f53f af69 	bmi.w	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802135e:	42ba      	cmp	r2, r7
 8021360:	f6ff af66 	blt.w	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021364:	1c6f      	adds	r7, r5, #1
 8021366:	f53f af63 	bmi.w	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802136a:	42be      	cmp	r6, r7
 802136c:	f6ff af60 	blt.w	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021370:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8021372:	9002      	str	r0, [sp, #8]
 8021374:	b236      	sxth	r6, r6
 8021376:	b212      	sxth	r2, r2
 8021378:	e9cd 1705 	strd	r1, r7, [sp, #20]
 802137c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8021380:	9200      	str	r2, [sp, #0]
 8021382:	9601      	str	r6, [sp, #4]
 8021384:	4623      	mov	r3, r4
 8021386:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 802138a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802138c:	f7ff fd59 	bl	8020e42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8021390:	e74e      	b.n	8021230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8021392:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021394:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021396:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8021398:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802139a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802139e:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80213a0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80213a4:	142d      	asrs	r5, r5, #16
 80213a6:	1400      	asrs	r0, r0, #16
 80213a8:	fb02 5000 	mla	r0, r2, r0, r5
 80213ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80213ae:	f815 9000 	ldrb.w	r9, [r5, r0]
 80213b2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80213b6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80213ba:	182e      	adds	r6, r5, r0
 80213bc:	eb04 0509 	add.w	r5, r4, r9
 80213c0:	2b00      	cmp	r3, #0
 80213c2:	f000 8096 	beq.w	80214f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80213c6:	7877      	ldrb	r7, [r6, #1]
 80213c8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80213cc:	4427      	add	r7, r4
 80213ce:	2900      	cmp	r1, #0
 80213d0:	f000 8097 	beq.w	8021502 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80213d4:	18b0      	adds	r0, r6, r2
 80213d6:	5cb2      	ldrb	r2, [r6, r2]
 80213d8:	7840      	ldrb	r0, [r0, #1]
 80213da:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80213de:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80213e2:	4422      	add	r2, r4
 80213e4:	4420      	add	r0, r4
 80213e6:	b29b      	uxth	r3, r3
 80213e8:	b289      	uxth	r1, r1
 80213ea:	fb03 f801 	mul.w	r8, r3, r1
 80213ee:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80213f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80213f4:	f8b6 c000 	ldrh.w	ip, [r6]
 80213f8:	78be      	ldrb	r6, [r7, #2]
 80213fa:	f814 9009 	ldrb.w	r9, [r4, r9]
 80213fe:	011b      	lsls	r3, r3, #4
 8021400:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8021404:	b289      	uxth	r1, r1
 8021406:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802140a:	eba3 0308 	sub.w	r3, r3, r8
 802140e:	b29b      	uxth	r3, r3
 8021410:	ebae 0e01 	sub.w	lr, lr, r1
 8021414:	fa1f fe8e 	uxth.w	lr, lr
 8021418:	435e      	muls	r6, r3
 802141a:	fb0e 660b 	mla	r6, lr, fp, r6
 802141e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8021422:	9310      	str	r3, [sp, #64]	; 0x40
 8021424:	fb01 660b 	mla	r6, r1, fp, r6
 8021428:	f890 b002 	ldrb.w	fp, [r0, #2]
 802142c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802142e:	fb08 660b 	mla	r6, r8, fp, r6
 8021432:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8021436:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 802143a:	fb1b fb03 	smulbb	fp, fp, r3
 802143e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021442:	fb06 b60a 	mla	r6, r6, sl, fp
 8021446:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021448:	f895 b001 	ldrb.w	fp, [r5, #1]
 802144c:	787d      	ldrb	r5, [r7, #1]
 802144e:	783f      	ldrb	r7, [r7, #0]
 8021450:	435d      	muls	r5, r3
 8021452:	fb0e 550b 	mla	r5, lr, fp, r5
 8021456:	f892 b001 	ldrb.w	fp, [r2, #1]
 802145a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802145c:	fb01 550b 	mla	r5, r1, fp, r5
 8021460:	f890 b001 	ldrb.w	fp, [r0, #1]
 8021464:	fb08 550b 	mla	r5, r8, fp, r5
 8021468:	ea4f 0bec 	mov.w	fp, ip, asr #3
 802146c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8021470:	fb1b fb03 	smulbb	fp, fp, r3
 8021474:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021476:	437b      	muls	r3, r7
 8021478:	7817      	ldrb	r7, [r2, #0]
 802147a:	fb0e 3309 	mla	r3, lr, r9, r3
 802147e:	fb01 3307 	mla	r3, r1, r7, r3
 8021482:	7807      	ldrb	r7, [r0, #0]
 8021484:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8021488:	fb08 3707 	mla	r7, r8, r7, r3
 802148c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802148e:	fa5f fc8c 	uxtb.w	ip, ip
 8021492:	fb1c fc03 	smulbb	ip, ip, r3
 8021496:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802149a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802149e:	fb05 b50a 	mla	r5, r5, sl, fp
 80214a2:	fb07 c70a 	mla	r7, r7, sl, ip
 80214a6:	b2b6      	uxth	r6, r6
 80214a8:	b2ad      	uxth	r5, r5
 80214aa:	b2bf      	uxth	r7, r7
 80214ac:	1c73      	adds	r3, r6, #1
 80214ae:	1c7a      	adds	r2, r7, #1
 80214b0:	f105 0b01 	add.w	fp, r5, #1
 80214b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80214b8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80214bc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 80214c0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80214c4:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80214c8:	096d      	lsrs	r5, r5, #5
 80214ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80214cc:	4316      	orrs	r6, r2
 80214ce:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80214d2:	432e      	orrs	r6, r5
 80214d4:	f823 6b02 	strh.w	r6, [r3], #2
 80214d8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80214da:	930c      	str	r3, [sp, #48]	; 0x30
 80214dc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80214de:	4413      	add	r3, r2
 80214e0:	931f      	str	r3, [sp, #124]	; 0x7c
 80214e2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80214e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80214e6:	4413      	add	r3, r2
 80214e8:	9320      	str	r3, [sp, #128]	; 0x80
 80214ea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80214ec:	3b01      	subs	r3, #1
 80214ee:	9311      	str	r3, [sp, #68]	; 0x44
 80214f0:	e6db      	b.n	80212aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 80214f2:	b149      	cbz	r1, 8021508 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80214f4:	5cb2      	ldrb	r2, [r6, r2]
 80214f6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80214fa:	4422      	add	r2, r4
 80214fc:	4628      	mov	r0, r5
 80214fe:	462f      	mov	r7, r5
 8021500:	e771      	b.n	80213e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021502:	4628      	mov	r0, r5
 8021504:	462a      	mov	r2, r5
 8021506:	e76e      	b.n	80213e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021508:	4628      	mov	r0, r5
 802150a:	462a      	mov	r2, r5
 802150c:	e7f7      	b.n	80214fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802150e:	b015      	add	sp, #84	; 0x54
 8021510:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021514:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021518:	880f      	ldrh	r7, [r1, #0]
 802151a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 802151e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8021522:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8021526:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802152a:	023c      	lsls	r4, r7, #8
 802152c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8021530:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8021534:	017c      	lsls	r4, r7, #5
 8021536:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 802153a:	00ff      	lsls	r7, r7, #3
 802153c:	ea4b 0404 	orr.w	r4, fp, r4
 8021540:	b2ff      	uxtb	r7, r7
 8021542:	fb05 ca0e 	mla	sl, r5, lr, ip
 8021546:	4327      	orrs	r7, r4
 8021548:	2d00      	cmp	r5, #0
 802154a:	eb02 080a 	add.w	r8, r2, sl
 802154e:	9701      	str	r7, [sp, #4]
 8021550:	db7e      	blt.n	8021650 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021552:	45a9      	cmp	r9, r5
 8021554:	dd7c      	ble.n	8021650 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8021556:	f1bc 0f00 	cmp.w	ip, #0
 802155a:	db77      	blt.n	802164c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 802155c:	45e6      	cmp	lr, ip
 802155e:	dd75      	ble.n	802164c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8021560:	f812 700a 	ldrb.w	r7, [r2, sl]
 8021564:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8021568:	441f      	add	r7, r3
 802156a:	f11c 0201 	adds.w	r2, ip, #1
 802156e:	d472      	bmi.n	8021656 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021570:	4596      	cmp	lr, r2
 8021572:	dd70      	ble.n	8021656 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021574:	2800      	cmp	r0, #0
 8021576:	d06e      	beq.n	8021656 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8021578:	f898 4001 	ldrb.w	r4, [r8, #1]
 802157c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8021580:	441c      	add	r4, r3
 8021582:	3501      	adds	r5, #1
 8021584:	d46b      	bmi.n	802165e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8021586:	45a9      	cmp	r9, r5
 8021588:	dd69      	ble.n	802165e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802158a:	2e00      	cmp	r6, #0
 802158c:	d067      	beq.n	802165e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 802158e:	f1bc 0f00 	cmp.w	ip, #0
 8021592:	db62      	blt.n	802165a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021594:	45e6      	cmp	lr, ip
 8021596:	dd60      	ble.n	802165a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8021598:	f818 500e 	ldrb.w	r5, [r8, lr]
 802159c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80215a0:	441d      	add	r5, r3
 80215a2:	f11c 0201 	adds.w	r2, ip, #1
 80215a6:	d45d      	bmi.n	8021664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80215a8:	4596      	cmp	lr, r2
 80215aa:	dd5b      	ble.n	8021664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80215ac:	2800      	cmp	r0, #0
 80215ae:	d059      	beq.n	8021664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 80215b0:	44c6      	add	lr, r8
 80215b2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80215b6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80215ba:	4413      	add	r3, r2
 80215bc:	b280      	uxth	r0, r0
 80215be:	b2b2      	uxth	r2, r6
 80215c0:	fb00 f602 	mul.w	r6, r0, r2
 80215c4:	0100      	lsls	r0, r0, #4
 80215c6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 80215ca:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 80215ce:	1b80      	subs	r0, r0, r6
 80215d0:	fa1f fc82 	uxth.w	ip, r2
 80215d4:	b282      	uxth	r2, r0
 80215d6:	78a0      	ldrb	r0, [r4, #2]
 80215d8:	f897 e002 	ldrb.w	lr, [r7, #2]
 80215dc:	f897 9000 	ldrb.w	r9, [r7]
 80215e0:	787f      	ldrb	r7, [r7, #1]
 80215e2:	eba8 080c 	sub.w	r8, r8, ip
 80215e6:	fa1f f888 	uxth.w	r8, r8
 80215ea:	4350      	muls	r0, r2
 80215ec:	fb08 0e0e 	mla	lr, r8, lr, r0
 80215f0:	78a8      	ldrb	r0, [r5, #2]
 80215f2:	fb0c e000 	mla	r0, ip, r0, lr
 80215f6:	f893 e002 	ldrb.w	lr, [r3, #2]
 80215fa:	fb06 0e0e 	mla	lr, r6, lr, r0
 80215fe:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8021602:	f894 e000 	ldrb.w	lr, [r4]
 8021606:	fb02 fe0e 	mul.w	lr, r2, lr
 802160a:	fb08 e909 	mla	r9, r8, r9, lr
 802160e:	f895 e000 	ldrb.w	lr, [r5]
 8021612:	fb0c 990e 	mla	r9, ip, lr, r9
 8021616:	f893 e000 	ldrb.w	lr, [r3]
 802161a:	785b      	ldrb	r3, [r3, #1]
 802161c:	fb06 9e0e 	mla	lr, r6, lr, r9
 8021620:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021624:	ea4e 0e00 	orr.w	lr, lr, r0
 8021628:	7860      	ldrb	r0, [r4, #1]
 802162a:	4350      	muls	r0, r2
 802162c:	786a      	ldrb	r2, [r5, #1]
 802162e:	fb08 0007 	mla	r0, r8, r7, r0
 8021632:	fb0c 0202 	mla	r2, ip, r2, r0
 8021636:	fb06 2303 	mla	r3, r6, r3, r2
 802163a:	095b      	lsrs	r3, r3, #5
 802163c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021640:	ea4e 0303 	orr.w	r3, lr, r3
 8021644:	800b      	strh	r3, [r1, #0]
 8021646:	b003      	add	sp, #12
 8021648:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802164c:	af01      	add	r7, sp, #4
 802164e:	e78c      	b.n	802156a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8021650:	ac01      	add	r4, sp, #4
 8021652:	4627      	mov	r7, r4
 8021654:	e795      	b.n	8021582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8021656:	ac01      	add	r4, sp, #4
 8021658:	e793      	b.n	8021582 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 802165a:	ad01      	add	r5, sp, #4
 802165c:	e7a1      	b.n	80215a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 802165e:	ab01      	add	r3, sp, #4
 8021660:	461d      	mov	r5, r3
 8021662:	e7ab      	b.n	80215bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8021664:	ab01      	add	r3, sp, #4
 8021666:	e7a9      	b.n	80215bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802166c:	b08f      	sub	sp, #60	; 0x3c
 802166e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8021672:	920c      	str	r2, [sp, #48]	; 0x30
 8021674:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8021676:	910a      	str	r1, [sp, #40]	; 0x28
 8021678:	9306      	str	r3, [sp, #24]
 802167a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 802167e:	900d      	str	r0, [sp, #52]	; 0x34
 8021680:	6850      	ldr	r0, [r2, #4]
 8021682:	6812      	ldr	r2, [r2, #0]
 8021684:	fb00 1303 	mla	r3, r0, r3, r1
 8021688:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802168c:	9307      	str	r3, [sp, #28]
 802168e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021690:	681b      	ldr	r3, [r3, #0]
 8021692:	9308      	str	r3, [sp, #32]
 8021694:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021696:	685c      	ldr	r4, [r3, #4]
 8021698:	3404      	adds	r4, #4
 802169a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802169c:	2b00      	cmp	r3, #0
 802169e:	dc03      	bgt.n	80216a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80216a0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216a2:	2b00      	cmp	r3, #0
 80216a4:	f340 81d6 	ble.w	8021a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 80216a8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80216aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80216ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80216b2:	1e48      	subs	r0, r1, #1
 80216b4:	1e56      	subs	r6, r2, #1
 80216b6:	9b06      	ldr	r3, [sp, #24]
 80216b8:	2b00      	cmp	r3, #0
 80216ba:	f340 80b7 	ble.w	802182c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80216be:	ea5f 472b 	movs.w	r7, fp, asr #16
 80216c2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80216c6:	d406      	bmi.n	80216d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80216c8:	4287      	cmp	r7, r0
 80216ca:	da04      	bge.n	80216d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80216cc:	2b00      	cmp	r3, #0
 80216ce:	db02      	blt.n	80216d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80216d0:	42b3      	cmp	r3, r6
 80216d2:	f2c0 80ac 	blt.w	802182e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80216d6:	3701      	adds	r7, #1
 80216d8:	f100 809d 	bmi.w	8021816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80216dc:	42b9      	cmp	r1, r7
 80216de:	f2c0 809a 	blt.w	8021816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80216e2:	3301      	adds	r3, #1
 80216e4:	f100 8097 	bmi.w	8021816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80216e8:	429a      	cmp	r2, r3
 80216ea:	f2c0 8094 	blt.w	8021816 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80216ee:	9b06      	ldr	r3, [sp, #24]
 80216f0:	930b      	str	r3, [sp, #44]	; 0x2c
 80216f2:	9b07      	ldr	r3, [sp, #28]
 80216f4:	9309      	str	r3, [sp, #36]	; 0x24
 80216f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80216f8:	2b00      	cmp	r3, #0
 80216fa:	f340 80b5 	ble.w	8021868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80216fe:	9820      	ldr	r0, [sp, #128]	; 0x80
 8021700:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8021702:	68c7      	ldr	r7, [r0, #12]
 8021704:	6892      	ldr	r2, [r2, #8]
 8021706:	ea5f 402b 	movs.w	r0, fp, asr #16
 802170a:	ea4f 4625 	mov.w	r6, r5, asr #16
 802170e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021712:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021716:	f100 80fb 	bmi.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802171a:	f102 3cff 	add.w	ip, r2, #4294967295
 802171e:	4560      	cmp	r0, ip
 8021720:	f280 80f6 	bge.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021724:	2e00      	cmp	r6, #0
 8021726:	f2c0 80f3 	blt.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 802172a:	f107 3cff 	add.w	ip, r7, #4294967295
 802172e:	4566      	cmp	r6, ip
 8021730:	f280 80ee 	bge.w	8021910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8021734:	b212      	sxth	r2, r2
 8021736:	fb06 0002 	mla	r0, r6, r2, r0
 802173a:	9e08      	ldr	r6, [sp, #32]
 802173c:	1837      	adds	r7, r6, r0
 802173e:	5c30      	ldrb	r0, [r6, r0]
 8021740:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8021744:	eb04 0c08 	add.w	ip, r4, r8
 8021748:	2b00      	cmp	r3, #0
 802174a:	f000 80d3 	beq.w	80218f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802174e:	787e      	ldrb	r6, [r7, #1]
 8021750:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8021754:	4426      	add	r6, r4
 8021756:	2900      	cmp	r1, #0
 8021758:	f000 80d4 	beq.w	8021904 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 802175c:	18b8      	adds	r0, r7, r2
 802175e:	5cba      	ldrb	r2, [r7, r2]
 8021760:	7840      	ldrb	r0, [r0, #1]
 8021762:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021766:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802176a:	4422      	add	r2, r4
 802176c:	4420      	add	r0, r4
 802176e:	b29b      	uxth	r3, r3
 8021770:	b289      	uxth	r1, r1
 8021772:	fb03 f901 	mul.w	r9, r3, r1
 8021776:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802177a:	011b      	lsls	r3, r3, #4
 802177c:	b289      	uxth	r1, r1
 802177e:	78b7      	ldrb	r7, [r6, #2]
 8021780:	f89c a002 	ldrb.w	sl, [ip, #2]
 8021784:	f89c c001 	ldrb.w	ip, [ip, #1]
 8021788:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802178c:	eba3 0309 	sub.w	r3, r3, r9
 8021790:	b29b      	uxth	r3, r3
 8021792:	ebae 0e01 	sub.w	lr, lr, r1
 8021796:	fa1f fe8e 	uxth.w	lr, lr
 802179a:	435f      	muls	r7, r3
 802179c:	fb0e 770a 	mla	r7, lr, sl, r7
 80217a0:	f892 a002 	ldrb.w	sl, [r2, #2]
 80217a4:	fb01 770a 	mla	r7, r1, sl, r7
 80217a8:	f890 a002 	ldrb.w	sl, [r0, #2]
 80217ac:	fb09 7a0a 	mla	sl, r9, sl, r7
 80217b0:	f814 7008 	ldrb.w	r7, [r4, r8]
 80217b4:	f896 8000 	ldrb.w	r8, [r6]
 80217b8:	7876      	ldrb	r6, [r6, #1]
 80217ba:	fb03 f808 	mul.w	r8, r3, r8
 80217be:	fb0e 8807 	mla	r8, lr, r7, r8
 80217c2:	7817      	ldrb	r7, [r2, #0]
 80217c4:	fb01 8807 	mla	r8, r1, r7, r8
 80217c8:	7807      	ldrb	r7, [r0, #0]
 80217ca:	fb09 8707 	mla	r7, r9, r7, r8
 80217ce:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80217d2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80217d6:	ea47 070a 	orr.w	r7, r7, sl
 80217da:	4373      	muls	r3, r6
 80217dc:	f892 a001 	ldrb.w	sl, [r2, #1]
 80217e0:	fb0e 330c 	mla	r3, lr, ip, r3
 80217e4:	fb01 310a 	mla	r1, r1, sl, r3
 80217e8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80217ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217ee:	fb09 1a0a 	mla	sl, r9, sl, r1
 80217f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80217f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80217fa:	ea47 070a 	orr.w	r7, r7, sl
 80217fe:	801f      	strh	r7, [r3, #0]
 8021800:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021802:	3302      	adds	r3, #2
 8021804:	9309      	str	r3, [sp, #36]	; 0x24
 8021806:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021808:	449b      	add	fp, r3
 802180a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802180c:	441d      	add	r5, r3
 802180e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021810:	3b01      	subs	r3, #1
 8021812:	930b      	str	r3, [sp, #44]	; 0x2c
 8021814:	e76f      	b.n	80216f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021816:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021818:	449b      	add	fp, r3
 802181a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802181c:	441d      	add	r5, r3
 802181e:	9b06      	ldr	r3, [sp, #24]
 8021820:	3b01      	subs	r3, #1
 8021822:	9306      	str	r3, [sp, #24]
 8021824:	9b07      	ldr	r3, [sp, #28]
 8021826:	3302      	adds	r3, #2
 8021828:	9307      	str	r3, [sp, #28]
 802182a:	e744      	b.n	80216b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 802182c:	d023      	beq.n	8021876 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802182e:	9b06      	ldr	r3, [sp, #24]
 8021830:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8021832:	3b01      	subs	r3, #1
 8021834:	fb00 b003 	mla	r0, r0, r3, fp
 8021838:	1400      	asrs	r0, r0, #16
 802183a:	f53f af58 	bmi.w	80216ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802183e:	3901      	subs	r1, #1
 8021840:	4288      	cmp	r0, r1
 8021842:	f6bf af54 	bge.w	80216ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021846:	991c      	ldr	r1, [sp, #112]	; 0x70
 8021848:	fb01 5303 	mla	r3, r1, r3, r5
 802184c:	141b      	asrs	r3, r3, #16
 802184e:	f53f af4e 	bmi.w	80216ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021852:	3a01      	subs	r2, #1
 8021854:	4293      	cmp	r3, r2
 8021856:	f6bf af4a 	bge.w	80216ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 802185a:	9b06      	ldr	r3, [sp, #24]
 802185c:	9309      	str	r3, [sp, #36]	; 0x24
 802185e:	9b07      	ldr	r3, [sp, #28]
 8021860:	930b      	str	r3, [sp, #44]	; 0x2c
 8021862:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021864:	2b00      	cmp	r3, #0
 8021866:	dc70      	bgt.n	802194a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021868:	9b06      	ldr	r3, [sp, #24]
 802186a:	9a07      	ldr	r2, [sp, #28]
 802186c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8021870:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021874:	9307      	str	r3, [sp, #28]
 8021876:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021878:	2b00      	cmp	r3, #0
 802187a:	f340 80eb 	ble.w	8021a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 802187e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021882:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021886:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802188a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802188c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021890:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021894:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021898:	eef0 6a62 	vmov.f32	s13, s5
 802189c:	ee61 7a27 	vmul.f32	s15, s2, s15
 80218a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80218a8:	ee16 ba90 	vmov	fp, s13
 80218ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80218b0:	eef0 6a43 	vmov.f32	s13, s6
 80218b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80218b8:	ee12 2a90 	vmov	r2, s5
 80218bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80218c4:	ee13 2a10 	vmov	r2, s6
 80218c8:	931b      	str	r3, [sp, #108]	; 0x6c
 80218ca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80218cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80218d0:	931c      	str	r3, [sp, #112]	; 0x70
 80218d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80218d4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80218d6:	3b01      	subs	r3, #1
 80218d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218dc:	930a      	str	r3, [sp, #40]	; 0x28
 80218de:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80218e0:	bf08      	it	eq
 80218e2:	4613      	moveq	r3, r2
 80218e4:	ee16 5a90 	vmov	r5, s13
 80218e8:	9306      	str	r3, [sp, #24]
 80218ea:	eeb0 3a67 	vmov.f32	s6, s15
 80218ee:	eef0 2a47 	vmov.f32	s5, s14
 80218f2:	e6d2      	b.n	802169a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80218f4:	b149      	cbz	r1, 802190a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80218f6:	5cba      	ldrb	r2, [r7, r2]
 80218f8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80218fc:	4422      	add	r2, r4
 80218fe:	4660      	mov	r0, ip
 8021900:	4666      	mov	r6, ip
 8021902:	e734      	b.n	802176e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8021904:	4660      	mov	r0, ip
 8021906:	4662      	mov	r2, ip
 8021908:	e731      	b.n	802176e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802190a:	4660      	mov	r0, ip
 802190c:	4662      	mov	r2, ip
 802190e:	e7f7      	b.n	8021900 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8021910:	f110 0c01 	adds.w	ip, r0, #1
 8021914:	f53f af74 	bmi.w	8021800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021918:	4562      	cmp	r2, ip
 802191a:	f6ff af71 	blt.w	8021800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802191e:	f116 0c01 	adds.w	ip, r6, #1
 8021922:	f53f af6d 	bmi.w	8021800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8021926:	4567      	cmp	r7, ip
 8021928:	f6ff af6a 	blt.w	8021800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802192c:	b23f      	sxth	r7, r7
 802192e:	b212      	sxth	r2, r2
 8021930:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021934:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021938:	9200      	str	r2, [sp, #0]
 802193a:	9701      	str	r7, [sp, #4]
 802193c:	4623      	mov	r3, r4
 802193e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8021942:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021944:	f7ff fde6 	bl	8021514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8021948:	e75a      	b.n	8021800 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802194a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 802194c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8021950:	ea4f 462b 	mov.w	r6, fp, asr #16
 8021954:	1428      	asrs	r0, r5, #16
 8021956:	fb02 6000 	mla	r0, r2, r0, r6
 802195a:	9e08      	ldr	r6, [sp, #32]
 802195c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8021960:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021964:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8021968:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802196c:	1837      	adds	r7, r6, r0
 802196e:	eb04 0c08 	add.w	ip, r4, r8
 8021972:	2b00      	cmp	r3, #0
 8021974:	d060      	beq.n	8021a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8021976:	787e      	ldrb	r6, [r7, #1]
 8021978:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 802197c:	4426      	add	r6, r4
 802197e:	2900      	cmp	r1, #0
 8021980:	d062      	beq.n	8021a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8021982:	18b8      	adds	r0, r7, r2
 8021984:	5cba      	ldrb	r2, [r7, r2]
 8021986:	7840      	ldrb	r0, [r0, #1]
 8021988:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802198c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021990:	4422      	add	r2, r4
 8021992:	4420      	add	r0, r4
 8021994:	b29b      	uxth	r3, r3
 8021996:	b289      	uxth	r1, r1
 8021998:	fb03 f901 	mul.w	r9, r3, r1
 802199c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80219a0:	011b      	lsls	r3, r3, #4
 80219a2:	b289      	uxth	r1, r1
 80219a4:	78b7      	ldrb	r7, [r6, #2]
 80219a6:	f89c a002 	ldrb.w	sl, [ip, #2]
 80219aa:	f89c c001 	ldrb.w	ip, [ip, #1]
 80219ae:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80219b2:	eba3 0309 	sub.w	r3, r3, r9
 80219b6:	b29b      	uxth	r3, r3
 80219b8:	ebae 0e01 	sub.w	lr, lr, r1
 80219bc:	fa1f fe8e 	uxth.w	lr, lr
 80219c0:	435f      	muls	r7, r3
 80219c2:	fb0e 770a 	mla	r7, lr, sl, r7
 80219c6:	f892 a002 	ldrb.w	sl, [r2, #2]
 80219ca:	fb01 770a 	mla	r7, r1, sl, r7
 80219ce:	f890 a002 	ldrb.w	sl, [r0, #2]
 80219d2:	fb09 7a0a 	mla	sl, r9, sl, r7
 80219d6:	f814 7008 	ldrb.w	r7, [r4, r8]
 80219da:	f896 8000 	ldrb.w	r8, [r6]
 80219de:	7876      	ldrb	r6, [r6, #1]
 80219e0:	fb03 f808 	mul.w	r8, r3, r8
 80219e4:	fb0e 8807 	mla	r8, lr, r7, r8
 80219e8:	7817      	ldrb	r7, [r2, #0]
 80219ea:	fb01 8807 	mla	r8, r1, r7, r8
 80219ee:	7807      	ldrb	r7, [r0, #0]
 80219f0:	fb09 8707 	mla	r7, r9, r7, r8
 80219f4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80219f8:	4373      	muls	r3, r6
 80219fa:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80219fe:	7856      	ldrb	r6, [r2, #1]
 8021a00:	ea47 070a 	orr.w	r7, r7, sl
 8021a04:	fb0e 330c 	mla	r3, lr, ip, r3
 8021a08:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021a0c:	fb01 3306 	mla	r3, r1, r6, r3
 8021a10:	fb09 3a0a 	mla	sl, r9, sl, r3
 8021a14:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021a18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8021a1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8021a1e:	ea47 070a 	orr.w	r7, r7, sl
 8021a22:	f823 7b02 	strh.w	r7, [r3], #2
 8021a26:	930b      	str	r3, [sp, #44]	; 0x2c
 8021a28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021a2a:	449b      	add	fp, r3
 8021a2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8021a2e:	441d      	add	r5, r3
 8021a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021a32:	3b01      	subs	r3, #1
 8021a34:	9309      	str	r3, [sp, #36]	; 0x24
 8021a36:	e714      	b.n	8021862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8021a38:	b149      	cbz	r1, 8021a4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021a3a:	5cba      	ldrb	r2, [r7, r2]
 8021a3c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021a40:	4422      	add	r2, r4
 8021a42:	4660      	mov	r0, ip
 8021a44:	4666      	mov	r6, ip
 8021a46:	e7a5      	b.n	8021994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021a48:	4660      	mov	r0, ip
 8021a4a:	4662      	mov	r2, ip
 8021a4c:	e7a2      	b.n	8021994 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8021a4e:	4660      	mov	r0, ip
 8021a50:	4662      	mov	r2, ip
 8021a52:	e7f7      	b.n	8021a44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8021a54:	b00f      	add	sp, #60	; 0x3c
 8021a56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8021a5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a5e:	b085      	sub	sp, #20
 8021a60:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8021a64:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8021a68:	9102      	str	r1, [sp, #8]
 8021a6a:	2c00      	cmp	r4, #0
 8021a6c:	fb04 710c 	mla	r1, r4, ip, r7
 8021a70:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8021a74:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8021a78:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8021a7c:	eb02 0e01 	add.w	lr, r2, r1
 8021a80:	f2c0 8122 	blt.w	8021cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021a84:	45a0      	cmp	r8, r4
 8021a86:	f340 811f 	ble.w	8021cc8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8021a8a:	2f00      	cmp	r7, #0
 8021a8c:	f2c0 811a 	blt.w	8021cc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021a90:	45bc      	cmp	ip, r7
 8021a92:	f340 8117 	ble.w	8021cc4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8021a96:	5c52      	ldrb	r2, [r2, r1]
 8021a98:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8021a9c:	1c7a      	adds	r2, r7, #1
 8021a9e:	f100 8116 	bmi.w	8021cce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021aa2:	4594      	cmp	ip, r2
 8021aa4:	f340 8113 	ble.w	8021cce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021aa8:	2e00      	cmp	r6, #0
 8021aaa:	f000 8112 	beq.w	8021cd2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021aae:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021ab2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021ab6:	3401      	adds	r4, #1
 8021ab8:	f100 810f 	bmi.w	8021cda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021abc:	45a0      	cmp	r8, r4
 8021abe:	f340 810c 	ble.w	8021cda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021ac2:	2800      	cmp	r0, #0
 8021ac4:	f000 810c 	beq.w	8021ce0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021ac8:	2f00      	cmp	r7, #0
 8021aca:	f2c0 8104 	blt.w	8021cd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021ace:	45bc      	cmp	ip, r7
 8021ad0:	f340 8101 	ble.w	8021cd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021ad4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021ad8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021adc:	3701      	adds	r7, #1
 8021ade:	f100 8102 	bmi.w	8021ce6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021ae2:	45bc      	cmp	ip, r7
 8021ae4:	f340 80ff 	ble.w	8021ce6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021ae8:	2e00      	cmp	r6, #0
 8021aea:	f000 80fe 	beq.w	8021cea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021aee:	44f4      	add	ip, lr
 8021af0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8021af4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021af8:	b2b6      	uxth	r6, r6
 8021afa:	b280      	uxth	r0, r0
 8021afc:	fb00 fe06 	mul.w	lr, r0, r6
 8021b00:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021b04:	0136      	lsls	r6, r6, #4
 8021b06:	eba6 070e 	sub.w	r7, r6, lr
 8021b0a:	b280      	uxth	r0, r0
 8021b0c:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8021b10:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021b14:	b2bf      	uxth	r7, r7
 8021b16:	1a1b      	subs	r3, r3, r0
 8021b18:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021b1c:	b29b      	uxth	r3, r3
 8021b1e:	fb0a f607 	mul.w	r6, sl, r7
 8021b22:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021b26:	fb0b 6603 	mla	r6, fp, r3, r6
 8021b2a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021b2e:	fb00 6609 	mla	r6, r0, r9, r6
 8021b32:	fb0e 6608 	mla	r6, lr, r8, r6
 8021b36:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021b3a:	9600      	str	r6, [sp, #0]
 8021b3c:	2e00      	cmp	r6, #0
 8021b3e:	f000 80be 	beq.w	8021cbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8021b42:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8021b46:	fb0b fc0c 	mul.w	ip, fp, ip
 8021b4a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8021b4e:	fb0b f505 	mul.w	r5, fp, r5
 8021b52:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021b56:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8021b5a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021b5e:	44dc      	add	ip, fp
 8021b60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b64:	9501      	str	r5, [sp, #4]
 8021b66:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8021b6a:	9503      	str	r5, [sp, #12]
 8021b6c:	9d01      	ldr	r5, [sp, #4]
 8021b6e:	9e02      	ldr	r6, [sp, #8]
 8021b70:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8021b74:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021b78:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8021b7c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021b80:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021b84:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021b88:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021b8c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021b90:	4465      	add	r5, ip
 8021b92:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021b96:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8021b9a:	fb09 fc0c 	mul.w	ip, r9, ip
 8021b9e:	fb09 f904 	mul.w	r9, r9, r4
 8021ba2:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8021ba6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021baa:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8021bae:	fb08 f404 	mul.w	r4, r8, r4
 8021bb2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021bb6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8021bba:	fb08 f802 	mul.w	r8, r8, r2
 8021bbe:	fb0a fa01 	mul.w	sl, sl, r1
 8021bc2:	0a22      	lsrs	r2, r4, #8
 8021bc4:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8021bc8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8021bcc:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8021bd0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021bd4:	4414      	add	r4, r2
 8021bd6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021bda:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8021bde:	0a2d      	lsrs	r5, r5, #8
 8021be0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021be4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8021be8:	9a03      	ldr	r2, [sp, #12]
 8021bea:	8836      	ldrh	r6, [r6, #0]
 8021bec:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021bf0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8021bf4:	437d      	muls	r5, r7
 8021bf6:	4461      	add	r1, ip
 8021bf8:	0a24      	lsrs	r4, r4, #8
 8021bfa:	fb02 5503 	mla	r5, r2, r3, r5
 8021bfe:	0a09      	lsrs	r1, r1, #8
 8021c00:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8021c04:	fb04 540e 	mla	r4, r4, lr, r5
 8021c08:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8021c0c:	fb01 4100 	mla	r1, r1, r0, r4
 8021c10:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021c14:	0a09      	lsrs	r1, r1, #8
 8021c16:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021c1a:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8021c1e:	fb07 f70a 	mul.w	r7, r7, sl
 8021c22:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021c26:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8021c2a:	fb03 7101 	mla	r1, r3, r1, r7
 8021c2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021c32:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8021c36:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021c3a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8021c3e:	fb00 e101 	mla	r1, r0, r1, lr
 8021c42:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8021c46:	9a00      	ldr	r2, [sp, #0]
 8021c48:	b287      	uxth	r7, r0
 8021c4a:	437a      	muls	r2, r7
 8021c4c:	0a09      	lsrs	r1, r1, #8
 8021c4e:	1c53      	adds	r3, r2, #1
 8021c50:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8021c54:	4321      	orrs	r1, r4
 8021c56:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021c5a:	1235      	asrs	r5, r6, #8
 8021c5c:	0c0a      	lsrs	r2, r1, #16
 8021c5e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8021c62:	b2db      	uxtb	r3, r3
 8021c64:	fb12 f207 	smulbb	r2, r2, r7
 8021c68:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021c6c:	fb05 2503 	mla	r5, r5, r3, r2
 8021c70:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8021c74:	10f2      	asrs	r2, r6, #3
 8021c76:	b2c8      	uxtb	r0, r1
 8021c78:	00f6      	lsls	r6, r6, #3
 8021c7a:	fb14 f407 	smulbb	r4, r4, r7
 8021c7e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8021c82:	b2f6      	uxtb	r6, r6
 8021c84:	fb10 f007 	smulbb	r0, r0, r7
 8021c88:	fb02 4203 	mla	r2, r2, r3, r4
 8021c8c:	b2ad      	uxth	r5, r5
 8021c8e:	fb06 0303 	mla	r3, r6, r3, r0
 8021c92:	b299      	uxth	r1, r3
 8021c94:	b294      	uxth	r4, r2
 8021c96:	1c6b      	adds	r3, r5, #1
 8021c98:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c9c:	1c62      	adds	r2, r4, #1
 8021c9e:	1c4b      	adds	r3, r1, #1
 8021ca0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021ca4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8021ca8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021cac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021cb0:	0952      	lsrs	r2, r2, #5
 8021cb2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021cb6:	432b      	orrs	r3, r5
 8021cb8:	4313      	orrs	r3, r2
 8021cba:	9a02      	ldr	r2, [sp, #8]
 8021cbc:	8013      	strh	r3, [r2, #0]
 8021cbe:	b005      	add	sp, #20
 8021cc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021cc4:	2500      	movs	r5, #0
 8021cc6:	e6e9      	b.n	8021a9c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021cc8:	2100      	movs	r1, #0
 8021cca:	460d      	mov	r5, r1
 8021ccc:	e6f3      	b.n	8021ab6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021cce:	2100      	movs	r1, #0
 8021cd0:	e6f1      	b.n	8021ab6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021cd2:	4631      	mov	r1, r6
 8021cd4:	e6ef      	b.n	8021ab6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021cd6:	2400      	movs	r4, #0
 8021cd8:	e700      	b.n	8021adc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021cda:	2200      	movs	r2, #0
 8021cdc:	4614      	mov	r4, r2
 8021cde:	e70b      	b.n	8021af8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021ce0:	4602      	mov	r2, r0
 8021ce2:	4604      	mov	r4, r0
 8021ce4:	e708      	b.n	8021af8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021ce6:	2200      	movs	r2, #0
 8021ce8:	e706      	b.n	8021af8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021cea:	4632      	mov	r2, r6
 8021cec:	e704      	b.n	8021af8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021cee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021cee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cf2:	b09f      	sub	sp, #124	; 0x7c
 8021cf4:	921b      	str	r2, [sp, #108]	; 0x6c
 8021cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8021cf8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8021cfa:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8021cfe:	931c      	str	r3, [sp, #112]	; 0x70
 8021d00:	9119      	str	r1, [sp, #100]	; 0x64
 8021d02:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8021d06:	901d      	str	r0, [sp, #116]	; 0x74
 8021d08:	6850      	ldr	r0, [r2, #4]
 8021d0a:	6812      	ldr	r2, [r2, #0]
 8021d0c:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8021d0e:	fb00 1303 	mla	r3, r0, r3, r1
 8021d12:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d16:	930c      	str	r3, [sp, #48]	; 0x30
 8021d18:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021d1a:	681b      	ldr	r3, [r3, #0]
 8021d1c:	9312      	str	r3, [sp, #72]	; 0x48
 8021d1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021d20:	685e      	ldr	r6, [r3, #4]
 8021d22:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8021d26:	930d      	str	r3, [sp, #52]	; 0x34
 8021d28:	3604      	adds	r6, #4
 8021d2a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8021d2c:	2b00      	cmp	r3, #0
 8021d2e:	dc03      	bgt.n	8021d38 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021d30:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8021d32:	2b00      	cmp	r3, #0
 8021d34:	f340 8388 	ble.w	8022448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8021d38:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021d3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d3e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d42:	1e48      	subs	r0, r1, #1
 8021d44:	1e57      	subs	r7, r2, #1
 8021d46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d48:	2b00      	cmp	r3, #0
 8021d4a:	f340 8195 	ble.w	8022078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021d4e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8021d50:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021d54:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021d58:	d406      	bmi.n	8021d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021d5a:	4584      	cmp	ip, r0
 8021d5c:	da04      	bge.n	8021d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021d5e:	2b00      	cmp	r3, #0
 8021d60:	db02      	blt.n	8021d68 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8021d62:	42bb      	cmp	r3, r7
 8021d64:	f2c0 8189 	blt.w	802207a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8021d68:	f11c 0c01 	adds.w	ip, ip, #1
 8021d6c:	f100 8177 	bmi.w	802205e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d70:	4561      	cmp	r1, ip
 8021d72:	f2c0 8174 	blt.w	802205e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d76:	3301      	adds	r3, #1
 8021d78:	f100 8171 	bmi.w	802205e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d7c:	429a      	cmp	r2, r3
 8021d7e:	f2c0 816e 	blt.w	802205e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021d84:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8021d86:	931a      	str	r3, [sp, #104]	; 0x68
 8021d88:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8021d8a:	2b00      	cmp	r3, #0
 8021d8c:	f340 8193 	ble.w	80220b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8021d90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021d92:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021d96:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8021d98:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8021d9c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8021d9e:	141b      	asrs	r3, r3, #16
 8021da0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8021da4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8021da8:	f100 81d6 	bmi.w	8022158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021dac:	f100 38ff 	add.w	r8, r0, #4294967295
 8021db0:	4543      	cmp	r3, r8
 8021db2:	f280 81d1 	bge.w	8022158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021db6:	f1bc 0f00 	cmp.w	ip, #0
 8021dba:	f2c0 81cd 	blt.w	8022158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021dbe:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021dc2:	45c4      	cmp	ip, r8
 8021dc4:	f280 81c8 	bge.w	8022158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8021dc8:	b200      	sxth	r0, r0
 8021dca:	fb0c 3300 	mla	r3, ip, r0, r3
 8021dce:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021dd0:	eb04 0803 	add.w	r8, r4, r3
 8021dd4:	5ce3      	ldrb	r3, [r4, r3]
 8021dd6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021dda:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021dde:	2a00      	cmp	r2, #0
 8021de0:	f000 81af 	beq.w	8022142 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8021de4:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021de8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021dec:	940e      	str	r4, [sp, #56]	; 0x38
 8021dee:	0e24      	lsrs	r4, r4, #24
 8021df0:	9415      	str	r4, [sp, #84]	; 0x54
 8021df2:	b179      	cbz	r1, 8021e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8021df4:	eb08 0c00 	add.w	ip, r8, r0
 8021df8:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021dfc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021e00:	900a      	str	r0, [sp, #40]	; 0x28
 8021e02:	0e00      	lsrs	r0, r0, #24
 8021e04:	9013      	str	r0, [sp, #76]	; 0x4c
 8021e06:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021e0a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021e0e:	900f      	str	r0, [sp, #60]	; 0x3c
 8021e10:	0e00      	lsrs	r0, r0, #24
 8021e12:	9016      	str	r0, [sp, #88]	; 0x58
 8021e14:	b292      	uxth	r2, r2
 8021e16:	b289      	uxth	r1, r1
 8021e18:	fb02 f901 	mul.w	r9, r2, r1
 8021e1c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021e20:	0112      	lsls	r2, r2, #4
 8021e22:	eba2 0809 	sub.w	r8, r2, r9
 8021e26:	b289      	uxth	r1, r1
 8021e28:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8021e2c:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021e2e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021e30:	fa1f f888 	uxth.w	r8, r8
 8021e34:	1a52      	subs	r2, r2, r1
 8021e36:	b292      	uxth	r2, r2
 8021e38:	fb08 f000 	mul.w	r0, r8, r0
 8021e3c:	fb02 000e 	mla	r0, r2, lr, r0
 8021e40:	fb01 0004 	mla	r0, r1, r4, r0
 8021e44:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021e46:	fb09 0004 	mla	r0, r9, r4, r0
 8021e4a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8021e4e:	2800      	cmp	r0, #0
 8021e50:	f000 80fa 	beq.w	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021e54:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8021e58:	d01b      	beq.n	8021e92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021e5a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021e5e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021e62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021e66:	fb0e fe03 	mul.w	lr, lr, r3
 8021e6a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021e6e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021e72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021e76:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8021e7a:	4453      	add	r3, sl
 8021e7c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021e80:	0a1b      	lsrs	r3, r3, #8
 8021e82:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e86:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021e8a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021e8e:	ea43 030c 	orr.w	r3, r3, ip
 8021e92:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021e94:	2cff      	cmp	r4, #255	; 0xff
 8021e96:	d021      	beq.n	8021edc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8021e98:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021e9a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021e9e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021ea0:	fb04 fb0b 	mul.w	fp, r4, fp
 8021ea4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021ea6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021eaa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021eac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021eb0:	fb04 fa0a 	mul.w	sl, r4, sl
 8021eb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021eb8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021ebc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021ec0:	44de      	add	lr, fp
 8021ec2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ec6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021eca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ece:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021ed2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021ed6:	ea4e 040a 	orr.w	r4, lr, sl
 8021eda:	940e      	str	r4, [sp, #56]	; 0x38
 8021edc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021ede:	2cff      	cmp	r4, #255	; 0xff
 8021ee0:	d021      	beq.n	8021f26 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8021ee2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021ee4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021ee8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021eea:	fb04 fb0b 	mul.w	fp, r4, fp
 8021eee:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021ef0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021ef4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8021ef6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021efa:	fb04 fa0a 	mul.w	sl, r4, sl
 8021efe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f02:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f06:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021f0a:	44de      	add	lr, fp
 8021f0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f1c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f20:	ea4e 040a 	orr.w	r4, lr, sl
 8021f24:	940a      	str	r4, [sp, #40]	; 0x28
 8021f26:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021f28:	2cff      	cmp	r4, #255	; 0xff
 8021f2a:	d021      	beq.n	8021f70 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021f2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021f2e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8021f32:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021f34:	fb04 fb0b 	mul.w	fp, r4, fp
 8021f38:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021f3a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021f3e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8021f40:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021f44:	fb04 fa0a 	mul.w	sl, r4, sl
 8021f48:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f4c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8021f50:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8021f54:	44de      	add	lr, fp
 8021f56:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f5a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8021f66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021f6a:	ea4e 040a 	orr.w	r4, lr, sl
 8021f6e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021f70:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021f72:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021f76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021f78:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8021f7c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021f80:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021f84:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021f88:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021f8a:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021f8e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8021f92:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021f94:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021f98:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8021f9c:	fb08 f80e 	mul.w	r8, r8, lr
 8021fa0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021fa4:	fb02 8303 	mla	r3, r2, r3, r8
 8021fa8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8021faa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021fac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8021fb0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8021fb2:	fb01 330a 	mla	r3, r1, sl, r3
 8021fb6:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8021fba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021fbc:	fb09 3901 	mla	r9, r9, r1, r3
 8021fc0:	4342      	muls	r2, r0
 8021fc2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021fc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021fca:	883b      	ldrh	r3, [r7, #0]
 8021fcc:	1c50      	adds	r0, r2, #1
 8021fce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021fd2:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021fd6:	ea4c 0c09 	orr.w	ip, ip, r9
 8021fda:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021fde:	1219      	asrs	r1, r3, #8
 8021fe0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021fe4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021fe8:	b2c0      	uxtb	r0, r0
 8021fea:	fb12 f204 	smulbb	r2, r2, r4
 8021fee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8021ff2:	fb01 2100 	mla	r1, r1, r0, r2
 8021ff6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021ffa:	10da      	asrs	r2, r3, #3
 8021ffc:	fa5f fc8c 	uxtb.w	ip, ip
 8022000:	00db      	lsls	r3, r3, #3
 8022002:	fb1c fc04 	smulbb	ip, ip, r4
 8022006:	b2db      	uxtb	r3, r3
 8022008:	b289      	uxth	r1, r1
 802200a:	fb03 c300 	mla	r3, r3, r0, ip
 802200e:	fa1f fc83 	uxth.w	ip, r3
 8022012:	1c4b      	adds	r3, r1, #1
 8022014:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8022018:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802201c:	fb1e fe04 	smulbb	lr, lr, r4
 8022020:	f10c 0301 	add.w	r3, ip, #1
 8022024:	fb02 e200 	mla	r2, r2, r0, lr
 8022028:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802202c:	b292      	uxth	r2, r2
 802202e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8022032:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022036:	430b      	orrs	r3, r1
 8022038:	1c51      	adds	r1, r2, #1
 802203a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802203e:	0952      	lsrs	r2, r2, #5
 8022040:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022044:	4313      	orrs	r3, r2
 8022046:	803b      	strh	r3, [r7, #0]
 8022048:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802204a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802204c:	441a      	add	r2, r3
 802204e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022050:	9229      	str	r2, [sp, #164]	; 0xa4
 8022052:	441d      	add	r5, r3
 8022054:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8022056:	3b01      	subs	r3, #1
 8022058:	3702      	adds	r7, #2
 802205a:	931a      	str	r3, [sp, #104]	; 0x68
 802205c:	e694      	b.n	8021d88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802205e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022060:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022062:	441c      	add	r4, r3
 8022064:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022066:	9429      	str	r4, [sp, #164]	; 0xa4
 8022068:	441d      	add	r5, r3
 802206a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802206c:	3b01      	subs	r3, #1
 802206e:	9309      	str	r3, [sp, #36]	; 0x24
 8022070:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022072:	3302      	adds	r3, #2
 8022074:	930c      	str	r3, [sp, #48]	; 0x30
 8022076:	e666      	b.n	8021d46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022078:	d024      	beq.n	80220c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802207a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802207c:	982b      	ldr	r0, [sp, #172]	; 0xac
 802207e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8022080:	3b01      	subs	r3, #1
 8022082:	fb00 4003 	mla	r0, r0, r3, r4
 8022086:	1400      	asrs	r0, r0, #16
 8022088:	f53f ae7b 	bmi.w	8021d82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802208c:	3901      	subs	r1, #1
 802208e:	4288      	cmp	r0, r1
 8022090:	f6bf ae77 	bge.w	8021d82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8022094:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8022096:	fb01 5303 	mla	r3, r1, r3, r5
 802209a:	141b      	asrs	r3, r3, #16
 802209c:	f53f ae71 	bmi.w	8021d82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80220a0:	3a01      	subs	r2, #1
 80220a2:	4293      	cmp	r3, r2
 80220a4:	f6bf ae6d 	bge.w	8021d82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80220a8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80220ac:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80220b0:	f1bb 0f00 	cmp.w	fp, #0
 80220b4:	dc70      	bgt.n	8022198 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80220b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80220bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80220be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80220c2:	930c      	str	r3, [sp, #48]	; 0x30
 80220c4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80220c6:	2b00      	cmp	r3, #0
 80220c8:	f340 81be 	ble.w	8022448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80220cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80220d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80220d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80220d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80220da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80220de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80220e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80220e6:	eef0 6a62 	vmov.f32	s13, s5
 80220ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80220ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80220f6:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80220fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80220fe:	eef0 6a43 	vmov.f32	s13, s6
 8022102:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022106:	ee12 2a90 	vmov	r2, s5
 802210a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802210e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022112:	ee13 2a10 	vmov	r2, s6
 8022116:	932b      	str	r3, [sp, #172]	; 0xac
 8022118:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802211a:	fb92 f3f3 	sdiv	r3, r2, r3
 802211e:	932c      	str	r3, [sp, #176]	; 0xb0
 8022120:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8022122:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8022124:	3b01      	subs	r3, #1
 8022126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802212a:	9319      	str	r3, [sp, #100]	; 0x64
 802212c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802212e:	bf08      	it	eq
 8022130:	4613      	moveq	r3, r2
 8022132:	ee16 5a90 	vmov	r5, s13
 8022136:	9309      	str	r3, [sp, #36]	; 0x24
 8022138:	eeb0 3a67 	vmov.f32	s6, s15
 802213c:	eef0 2a47 	vmov.f32	s5, s14
 8022140:	e5f3      	b.n	8021d2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022142:	2900      	cmp	r1, #0
 8022144:	f43f ae66 	beq.w	8021e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022148:	f818 0000 	ldrb.w	r0, [r8, r0]
 802214c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8022150:	900a      	str	r0, [sp, #40]	; 0x28
 8022152:	0e00      	lsrs	r0, r0, #24
 8022154:	9013      	str	r0, [sp, #76]	; 0x4c
 8022156:	e65d      	b.n	8021e14 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022158:	f113 0801 	adds.w	r8, r3, #1
 802215c:	f53f af74 	bmi.w	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022160:	4540      	cmp	r0, r8
 8022162:	f6ff af71 	blt.w	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022166:	f11c 0801 	adds.w	r8, ip, #1
 802216a:	f53f af6d 	bmi.w	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802216e:	45c6      	cmp	lr, r8
 8022170:	f6ff af6a 	blt.w	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022174:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8022176:	9302      	str	r3, [sp, #8]
 8022178:	b200      	sxth	r0, r0
 802217a:	fa0f f38e 	sxth.w	r3, lr
 802217e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8022182:	e9cd c203 	strd	ip, r2, [sp, #12]
 8022186:	9301      	str	r3, [sp, #4]
 8022188:	9000      	str	r0, [sp, #0]
 802218a:	4633      	mov	r3, r6
 802218c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802218e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8022190:	4639      	mov	r1, r7
 8022192:	f7ff fc62 	bl	8021a5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8022196:	e757      	b.n	8022048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022198:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802219a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802219c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80221a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80221a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80221a6:	1427      	asrs	r7, r4, #16
 80221a8:	142b      	asrs	r3, r5, #16
 80221aa:	fb01 7303 	mla	r3, r1, r3, r7
 80221ae:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80221b0:	18e7      	adds	r7, r4, r3
 80221b2:	5ce3      	ldrb	r3, [r4, r3]
 80221b4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80221b8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80221bc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80221c0:	2a00      	cmp	r2, #0
 80221c2:	f000 8137 	beq.w	8022434 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80221c6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80221ca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80221ce:	9410      	str	r4, [sp, #64]	; 0x40
 80221d0:	0e24      	lsrs	r4, r4, #24
 80221d2:	9417      	str	r4, [sp, #92]	; 0x5c
 80221d4:	b170      	cbz	r0, 80221f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80221d6:	eb07 0e01 	add.w	lr, r7, r1
 80221da:	5c79      	ldrb	r1, [r7, r1]
 80221dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80221e0:	910b      	str	r1, [sp, #44]	; 0x2c
 80221e2:	0e09      	lsrs	r1, r1, #24
 80221e4:	9114      	str	r1, [sp, #80]	; 0x50
 80221e6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80221ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80221ee:	9111      	str	r1, [sp, #68]	; 0x44
 80221f0:	0e09      	lsrs	r1, r1, #24
 80221f2:	9118      	str	r1, [sp, #96]	; 0x60
 80221f4:	b292      	uxth	r2, r2
 80221f6:	b280      	uxth	r0, r0
 80221f8:	fb02 f800 	mul.w	r8, r2, r0
 80221fc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022200:	0112      	lsls	r2, r2, #4
 8022202:	eba2 0e08 	sub.w	lr, r2, r8
 8022206:	b280      	uxth	r0, r0
 8022208:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802220c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802220e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022210:	fa1f fe8e 	uxth.w	lr, lr
 8022214:	1a12      	subs	r2, r2, r0
 8022216:	b292      	uxth	r2, r2
 8022218:	fb0e f101 	mul.w	r1, lr, r1
 802221c:	fb02 110c 	mla	r1, r2, ip, r1
 8022220:	fb00 1104 	mla	r1, r0, r4, r1
 8022224:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022226:	fb08 1104 	mla	r1, r8, r4, r1
 802222a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802222e:	2900      	cmp	r1, #0
 8022230:	f000 80f5 	beq.w	802241e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022234:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022238:	d019      	beq.n	802226e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802223a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802223e:	fb0c fa0a 	mul.w	sl, ip, sl
 8022242:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022246:	fb0c fc03 	mul.w	ip, ip, r3
 802224a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802224e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022252:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022256:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802225a:	4453      	add	r3, sl
 802225c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022260:	0a1b      	lsrs	r3, r3, #8
 8022262:	0a3f      	lsrs	r7, r7, #8
 8022264:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022268:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802226c:	433b      	orrs	r3, r7
 802226e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022270:	2cff      	cmp	r4, #255	; 0xff
 8022272:	d020      	beq.n	80222b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8022274:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022276:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802227a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802227c:	4367      	muls	r7, r4
 802227e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022280:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022284:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8022286:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802228a:	fb04 fa0a 	mul.w	sl, r4, sl
 802228e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022292:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022296:	44bc      	add	ip, r7
 8022298:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802229c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80222a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222a4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80222b0:	ea4c 040a 	orr.w	r4, ip, sl
 80222b4:	9410      	str	r4, [sp, #64]	; 0x40
 80222b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80222b8:	2cff      	cmp	r4, #255	; 0xff
 80222ba:	d020      	beq.n	80222fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80222bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80222be:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80222c2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80222c4:	4367      	muls	r7, r4
 80222c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80222c8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80222cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80222ce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80222d2:	fb04 fa0a 	mul.w	sl, r4, sl
 80222d6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80222da:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222de:	44bc      	add	ip, r7
 80222e0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80222e4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80222e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222ec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80222f4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80222f8:	ea4c 040a 	orr.w	r4, ip, sl
 80222fc:	940b      	str	r4, [sp, #44]	; 0x2c
 80222fe:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022300:	2cff      	cmp	r4, #255	; 0xff
 8022302:	d020      	beq.n	8022346 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8022304:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022306:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802230a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802230c:	4367      	muls	r7, r4
 802230e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022310:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022314:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8022316:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802231a:	fb04 fa0a 	mul.w	sl, r4, sl
 802231e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022322:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022326:	44bc      	add	ip, r7
 8022328:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802232c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022330:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022334:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022338:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802233c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022340:	ea4c 040a 	orr.w	r4, ip, sl
 8022344:	9411      	str	r4, [sp, #68]	; 0x44
 8022346:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022348:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802234c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802234e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022352:	fb0e f707 	mul.w	r7, lr, r7
 8022356:	fb02 770c 	mla	r7, r2, ip, r7
 802235a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802235e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022360:	fb00 770c 	mla	r7, r0, ip, r7
 8022364:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022368:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802236a:	fb08 770c 	mla	r7, r8, ip, r7
 802236e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022372:	fb0e fe0c 	mul.w	lr, lr, ip
 8022376:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802237a:	fb02 e303 	mla	r3, r2, r3, lr
 802237e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8022380:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022382:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022386:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022388:	fb00 330a 	mla	r3, r0, sl, r3
 802238c:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8022390:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022394:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8022396:	f8b9 0000 	ldrh.w	r0, [r9]
 802239a:	434b      	muls	r3, r1
 802239c:	0a3f      	lsrs	r7, r7, #8
 802239e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223a2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80223a6:	1c59      	adds	r1, r3, #1
 80223a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80223ac:	ea47 070c 	orr.w	r7, r7, ip
 80223b0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80223b4:	1202      	asrs	r2, r0, #8
 80223b6:	0c3b      	lsrs	r3, r7, #16
 80223b8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80223bc:	b2c9      	uxtb	r1, r1
 80223be:	fb13 f304 	smulbb	r3, r3, r4
 80223c2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80223c6:	fb02 3201 	mla	r2, r2, r1, r3
 80223ca:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80223ce:	10c3      	asrs	r3, r0, #3
 80223d0:	b2ff      	uxtb	r7, r7
 80223d2:	00c0      	lsls	r0, r0, #3
 80223d4:	b292      	uxth	r2, r2
 80223d6:	fb1c fc04 	smulbb	ip, ip, r4
 80223da:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80223de:	b2c0      	uxtb	r0, r0
 80223e0:	fb17 f704 	smulbb	r7, r7, r4
 80223e4:	fb03 c301 	mla	r3, r3, r1, ip
 80223e8:	fb00 7001 	mla	r0, r0, r1, r7
 80223ec:	f102 0c01 	add.w	ip, r2, #1
 80223f0:	b280      	uxth	r0, r0
 80223f2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80223f6:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80223fa:	1c42      	adds	r2, r0, #1
 80223fc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8022400:	b29b      	uxth	r3, r3
 8022402:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022406:	ea42 020c 	orr.w	r2, r2, ip
 802240a:	f103 0c01 	add.w	ip, r3, #1
 802240e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8022412:	095b      	lsrs	r3, r3, #5
 8022414:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022418:	431a      	orrs	r2, r3
 802241a:	f8a9 2000 	strh.w	r2, [r9]
 802241e:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8022420:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8022422:	441a      	add	r2, r3
 8022424:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022426:	9229      	str	r2, [sp, #164]	; 0xa4
 8022428:	f109 0902 	add.w	r9, r9, #2
 802242c:	441d      	add	r5, r3
 802242e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022432:	e63d      	b.n	80220b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8022434:	2800      	cmp	r0, #0
 8022436:	f43f aedd 	beq.w	80221f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802243a:	5c79      	ldrb	r1, [r7, r1]
 802243c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022440:	910b      	str	r1, [sp, #44]	; 0x2c
 8022442:	0e09      	lsrs	r1, r1, #24
 8022444:	9114      	str	r1, [sp, #80]	; 0x50
 8022446:	e6d5      	b.n	80221f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8022448:	b01f      	add	sp, #124	; 0x7c
 802244a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802244e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802244e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022452:	b089      	sub	sp, #36	; 0x24
 8022454:	9101      	str	r1, [sp, #4]
 8022456:	9801      	ldr	r0, [sp, #4]
 8022458:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 802245c:	8800      	ldrh	r0, [r0, #0]
 802245e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8022462:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8022466:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802246a:	1206      	asrs	r6, r0, #8
 802246c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8022470:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022474:	9602      	str	r6, [sp, #8]
 8022476:	10c6      	asrs	r6, r0, #3
 8022478:	00c0      	lsls	r0, r0, #3
 802247a:	b2c0      	uxtb	r0, r0
 802247c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022480:	9004      	str	r0, [sp, #16]
 8022482:	2f00      	cmp	r7, #0
 8022484:	fb07 100c 	mla	r0, r7, ip, r1
 8022488:	9603      	str	r6, [sp, #12]
 802248a:	eb02 0e00 	add.w	lr, r2, r0
 802248e:	f2c0 810a 	blt.w	80226a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022492:	45b8      	cmp	r8, r7
 8022494:	f340 8107 	ble.w	80226a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8022498:	2900      	cmp	r1, #0
 802249a:	f2c0 8102 	blt.w	80226a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802249e:	458c      	cmp	ip, r1
 80224a0:	f340 80ff 	ble.w	80226a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80224a4:	5c12      	ldrb	r2, [r2, r0]
 80224a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80224aa:	1c4a      	adds	r2, r1, #1
 80224ac:	f100 80fe 	bmi.w	80226ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80224b0:	4594      	cmp	ip, r2
 80224b2:	f340 80fb 	ble.w	80226ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80224b6:	2d00      	cmp	r5, #0
 80224b8:	f000 80fa 	beq.w	80226b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80224bc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80224c0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80224c4:	3701      	adds	r7, #1
 80224c6:	f100 80f7 	bmi.w	80226b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80224ca:	45b8      	cmp	r8, r7
 80224cc:	f340 80f4 	ble.w	80226b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80224d0:	2c00      	cmp	r4, #0
 80224d2:	f000 80f4 	beq.w	80226be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80224d6:	2900      	cmp	r1, #0
 80224d8:	eb0e 020c 	add.w	r2, lr, ip
 80224dc:	f2c0 80ea 	blt.w	80226b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80224e0:	458c      	cmp	ip, r1
 80224e2:	f340 80e7 	ble.w	80226b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80224e6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80224ea:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80224ee:	3101      	adds	r1, #1
 80224f0:	f100 80e8 	bmi.w	80226c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80224f4:	458c      	cmp	ip, r1
 80224f6:	f340 80e5 	ble.w	80226c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80224fa:	2d00      	cmp	r5, #0
 80224fc:	f000 80e4 	beq.w	80226c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022500:	7852      	ldrb	r2, [r2, #1]
 8022502:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8022506:	0e0b      	lsrs	r3, r1, #24
 8022508:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802250c:	9300      	str	r3, [sp, #0]
 802250e:	b2a4      	uxth	r4, r4
 8022510:	b2ab      	uxth	r3, r5
 8022512:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8022516:	fb03 f904 	mul.w	r9, r3, r4
 802251a:	fb0a f505 	mul.w	r5, sl, r5
 802251e:	011b      	lsls	r3, r3, #4
 8022520:	eba3 0e09 	sub.w	lr, r3, r9
 8022524:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8022528:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 802252c:	0a28      	lsrs	r0, r5, #8
 802252e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8022532:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8022536:	4405      	add	r5, r0
 8022538:	0a2d      	lsrs	r5, r5, #8
 802253a:	fb0a f303 	mul.w	r3, sl, r3
 802253e:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8022542:	9005      	str	r0, [sp, #20]
 8022544:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8022548:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802254c:	0a1b      	lsrs	r3, r3, #8
 802254e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022552:	9306      	str	r3, [sp, #24]
 8022554:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8022558:	fb0b f303 	mul.w	r3, fp, r3
 802255c:	0a1d      	lsrs	r5, r3, #8
 802255e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022562:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022566:	fb0b f606 	mul.w	r6, fp, r6
 802256a:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802256e:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8022572:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8022576:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802257a:	fb08 f707 	mul.w	r7, r8, r7
 802257e:	441d      	add	r5, r3
 8022580:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8022584:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022588:	f507 7380 	add.w	r3, r7, #256	; 0x100
 802258c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022590:	fb08 fc0c 	mul.w	ip, r8, ip
 8022594:	0a1b      	lsrs	r3, r3, #8
 8022596:	9307      	str	r3, [sp, #28]
 8022598:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802259c:	0e0b      	lsrs	r3, r1, #24
 802259e:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 80225a2:	435f      	muls	r7, r3
 80225a4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80225a8:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80225ac:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80225b0:	4460      	add	r0, ip
 80225b2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80225b6:	b2a4      	uxth	r4, r4
 80225b8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80225bc:	0a2d      	lsrs	r5, r5, #8
 80225be:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80225c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80225c6:	fa1f fe8e 	uxth.w	lr, lr
 80225ca:	4359      	muls	r1, r3
 80225cc:	1b12      	subs	r2, r2, r4
 80225ce:	9b05      	ldr	r3, [sp, #20]
 80225d0:	44bc      	add	ip, r7
 80225d2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80225d6:	b292      	uxth	r2, r2
 80225d8:	fb05 f50e 	mul.w	r5, r5, lr
 80225dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80225e0:	fb03 5502 	mla	r5, r3, r2, r5
 80225e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80225e8:	9b06      	ldr	r3, [sp, #24]
 80225ea:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80225ee:	0a36      	lsrs	r6, r6, #8
 80225f0:	0a00      	lsrs	r0, r0, #8
 80225f2:	fb0c 5509 	mla	r5, ip, r9, r5
 80225f6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80225fa:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80225fe:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8022602:	fb00 5504 	mla	r5, r0, r4, r5
 8022606:	fb0e f606 	mul.w	r6, lr, r6
 802260a:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 802260e:	0a09      	lsrs	r1, r1, #8
 8022610:	9b07      	ldr	r3, [sp, #28]
 8022612:	fb02 6000 	mla	r0, r2, r0, r6
 8022616:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802261a:	fb09 0001 	mla	r0, r9, r1, r0
 802261e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022622:	fb0e fe0b 	mul.w	lr, lr, fp
 8022626:	fb04 0003 	mla	r0, r4, r3, r0
 802262a:	fb02 e20a 	mla	r2, r2, sl, lr
 802262e:	9b00      	ldr	r3, [sp, #0]
 8022630:	fb04 2408 	mla	r4, r4, r8, r2
 8022634:	fb09 4903 	mla	r9, r9, r3, r4
 8022638:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802263c:	9b02      	ldr	r3, [sp, #8]
 802263e:	9a04      	ldr	r2, [sp, #16]
 8022640:	fa5f f989 	uxtb.w	r9, r9
 8022644:	fb03 f109 	mul.w	r1, r3, r9
 8022648:	9b03      	ldr	r3, [sp, #12]
 802264a:	0a2d      	lsrs	r5, r5, #8
 802264c:	0a00      	lsrs	r0, r0, #8
 802264e:	fb03 f309 	mul.w	r3, r3, r9
 8022652:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8022656:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802265a:	4305      	orrs	r5, r0
 802265c:	fb02 f909 	mul.w	r9, r2, r9
 8022660:	1c58      	adds	r0, r3, #1
 8022662:	1c4a      	adds	r2, r1, #1
 8022664:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022668:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802266c:	0a2b      	lsrs	r3, r5, #8
 802266e:	0c2a      	lsrs	r2, r5, #16
 8022670:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022674:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8022678:	00db      	lsls	r3, r3, #3
 802267a:	0212      	lsls	r2, r2, #8
 802267c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8022680:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022684:	4313      	orrs	r3, r2
 8022686:	f109 0201 	add.w	r2, r9, #1
 802268a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802268e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8022692:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022696:	431d      	orrs	r5, r3
 8022698:	9b01      	ldr	r3, [sp, #4]
 802269a:	801d      	strh	r5, [r3, #0]
 802269c:	b009      	add	sp, #36	; 0x24
 802269e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80226a2:	2000      	movs	r0, #0
 80226a4:	e701      	b.n	80224aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80226a6:	2600      	movs	r6, #0
 80226a8:	4630      	mov	r0, r6
 80226aa:	e70b      	b.n	80224c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80226ac:	2600      	movs	r6, #0
 80226ae:	e709      	b.n	80224c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80226b0:	462e      	mov	r6, r5
 80226b2:	e707      	b.n	80224c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80226b4:	2700      	movs	r7, #0
 80226b6:	e71a      	b.n	80224ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80226b8:	2100      	movs	r1, #0
 80226ba:	460f      	mov	r7, r1
 80226bc:	e723      	b.n	8022506 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80226be:	4621      	mov	r1, r4
 80226c0:	4627      	mov	r7, r4
 80226c2:	e720      	b.n	8022506 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80226c4:	2100      	movs	r1, #0
 80226c6:	e71e      	b.n	8022506 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80226c8:	4629      	mov	r1, r5
 80226ca:	e71c      	b.n	8022506 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080226cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226d0:	b09b      	sub	sp, #108	; 0x6c
 80226d2:	9218      	str	r2, [sp, #96]	; 0x60
 80226d4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80226d6:	9116      	str	r1, [sp, #88]	; 0x58
 80226d8:	9307      	str	r3, [sp, #28]
 80226da:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80226de:	9019      	str	r0, [sp, #100]	; 0x64
 80226e0:	6850      	ldr	r0, [r2, #4]
 80226e2:	6812      	ldr	r2, [r2, #0]
 80226e4:	9d26      	ldr	r5, [sp, #152]	; 0x98
 80226e6:	fb00 1303 	mla	r3, r0, r3, r1
 80226ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80226ee:	930a      	str	r3, [sp, #40]	; 0x28
 80226f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80226f2:	681b      	ldr	r3, [r3, #0]
 80226f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80226f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80226f8:	685e      	ldr	r6, [r3, #4]
 80226fa:	3604      	adds	r6, #4
 80226fc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80226fe:	2b00      	cmp	r3, #0
 8022700:	dc03      	bgt.n	802270a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8022702:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022704:	2b00      	cmp	r3, #0
 8022706:	f340 8373 	ble.w	8022df0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802270a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802270c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022710:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022714:	1e48      	subs	r0, r1, #1
 8022716:	1e57      	subs	r7, r2, #1
 8022718:	9b07      	ldr	r3, [sp, #28]
 802271a:	2b00      	cmp	r3, #0
 802271c:	f340 8190 	ble.w	8022a40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022720:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022722:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022726:	ea4f 4325 	mov.w	r3, r5, asr #16
 802272a:	d406      	bmi.n	802273a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802272c:	4584      	cmp	ip, r0
 802272e:	da04      	bge.n	802273a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022730:	2b00      	cmp	r3, #0
 8022732:	db02      	blt.n	802273a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022734:	42bb      	cmp	r3, r7
 8022736:	f2c0 8184 	blt.w	8022a42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802273a:	f11c 0c01 	adds.w	ip, ip, #1
 802273e:	f100 8172 	bmi.w	8022a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022742:	4561      	cmp	r1, ip
 8022744:	f2c0 816f 	blt.w	8022a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022748:	3301      	adds	r3, #1
 802274a:	f100 816c 	bmi.w	8022a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802274e:	429a      	cmp	r2, r3
 8022750:	f2c0 8169 	blt.w	8022a26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022754:	9b07      	ldr	r3, [sp, #28]
 8022756:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8022758:	9317      	str	r3, [sp, #92]	; 0x5c
 802275a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802275c:	2b00      	cmp	r3, #0
 802275e:	f340 818e 	ble.w	8022a7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8022762:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022764:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022768:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802276a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802276e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022770:	141b      	asrs	r3, r3, #16
 8022772:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8022776:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802277a:	f100 81d1 	bmi.w	8022b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802277e:	f101 38ff 	add.w	r8, r1, #4294967295
 8022782:	4543      	cmp	r3, r8
 8022784:	f280 81cc 	bge.w	8022b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022788:	f1bc 0f00 	cmp.w	ip, #0
 802278c:	f2c0 81c8 	blt.w	8022b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8022790:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022794:	45c4      	cmp	ip, r8
 8022796:	f280 81c3 	bge.w	8022b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802279a:	b209      	sxth	r1, r1
 802279c:	fb0c 3301 	mla	r3, ip, r1, r3
 80227a0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80227a2:	eb04 0803 	add.w	r8, r4, r3
 80227a6:	5ce3      	ldrb	r3, [r4, r3]
 80227a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80227ac:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80227b0:	2a00      	cmp	r2, #0
 80227b2:	f000 81aa 	beq.w	8022b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80227b6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80227ba:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80227be:	940b      	str	r4, [sp, #44]	; 0x2c
 80227c0:	0e24      	lsrs	r4, r4, #24
 80227c2:	9412      	str	r4, [sp, #72]	; 0x48
 80227c4:	b178      	cbz	r0, 80227e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80227c6:	eb08 0c01 	add.w	ip, r8, r1
 80227ca:	f818 1001 	ldrb.w	r1, [r8, r1]
 80227ce:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80227d2:	9108      	str	r1, [sp, #32]
 80227d4:	0e09      	lsrs	r1, r1, #24
 80227d6:	9110      	str	r1, [sp, #64]	; 0x40
 80227d8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80227dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80227e0:	910c      	str	r1, [sp, #48]	; 0x30
 80227e2:	0e09      	lsrs	r1, r1, #24
 80227e4:	9113      	str	r1, [sp, #76]	; 0x4c
 80227e6:	b292      	uxth	r2, r2
 80227e8:	b280      	uxth	r0, r0
 80227ea:	fb02 f900 	mul.w	r9, r2, r0
 80227ee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80227f2:	0112      	lsls	r2, r2, #4
 80227f4:	eba2 0809 	sub.w	r8, r2, r9
 80227f8:	b280      	uxth	r0, r0
 80227fa:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80227fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8022800:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8022802:	fa1f f888 	uxth.w	r8, r8
 8022806:	1a12      	subs	r2, r2, r0
 8022808:	b292      	uxth	r2, r2
 802280a:	fb08 f101 	mul.w	r1, r8, r1
 802280e:	fb02 110e 	mla	r1, r2, lr, r1
 8022812:	fb00 1104 	mla	r1, r0, r4, r1
 8022816:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022818:	fb09 1104 	mla	r1, r9, r4, r1
 802281c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022820:	2900      	cmp	r1, #0
 8022822:	f000 80f5 	beq.w	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022826:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802282a:	d01b      	beq.n	8022864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802282c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022830:	fb0e fa0a 	mul.w	sl, lr, sl
 8022834:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022838:	fb0e fe03 	mul.w	lr, lr, r3
 802283c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022840:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022844:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022848:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802284c:	4453      	add	r3, sl
 802284e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8022852:	0a1b      	lsrs	r3, r3, #8
 8022854:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022858:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802285c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022860:	ea43 030c 	orr.w	r3, r3, ip
 8022864:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022866:	2cff      	cmp	r4, #255	; 0xff
 8022868:	d021      	beq.n	80228ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802286a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802286c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022870:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8022872:	fb04 fb0b 	mul.w	fp, r4, fp
 8022876:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022878:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802287c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802287e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022882:	fb04 fa0a 	mul.w	sl, r4, sl
 8022886:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802288a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802288e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022892:	44de      	add	lr, fp
 8022894:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022898:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802289c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80228a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80228a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80228a8:	ea4e 040a 	orr.w	r4, lr, sl
 80228ac:	940b      	str	r4, [sp, #44]	; 0x2c
 80228ae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228b0:	2cff      	cmp	r4, #255	; 0xff
 80228b2:	d021      	beq.n	80228f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80228b4:	9c08      	ldr	r4, [sp, #32]
 80228b6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80228ba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228bc:	fb04 fb0b 	mul.w	fp, r4, fp
 80228c0:	9c08      	ldr	r4, [sp, #32]
 80228c2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80228c6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80228c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80228cc:	fb04 fa0a 	mul.w	sl, r4, sl
 80228d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80228d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80228d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80228dc:	44de      	add	lr, fp
 80228de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80228e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80228e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80228ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80228ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80228f2:	ea4e 040a 	orr.w	r4, lr, sl
 80228f6:	9408      	str	r4, [sp, #32]
 80228f8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80228fa:	2cff      	cmp	r4, #255	; 0xff
 80228fc:	d021      	beq.n	8022942 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80228fe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8022900:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8022904:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022906:	fb04 fb0b 	mul.w	fp, r4, fp
 802290a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802290c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022910:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022912:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022916:	fb04 fa0a 	mul.w	sl, r4, sl
 802291a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802291e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8022922:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8022926:	44de      	add	lr, fp
 8022928:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802292c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022930:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022934:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8022938:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802293c:	ea4e 040a 	orr.w	r4, lr, sl
 8022940:	940c      	str	r4, [sp, #48]	; 0x30
 8022942:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022944:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022948:	9c08      	ldr	r4, [sp, #32]
 802294a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 802294e:	fb08 fc0c 	mul.w	ip, r8, ip
 8022952:	fb02 cc0e 	mla	ip, r2, lr, ip
 8022956:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802295a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802295c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8022960:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8022964:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022966:	fb09 cc0e 	mla	ip, r9, lr, ip
 802296a:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 802296e:	fb08 f80e 	mul.w	r8, r8, lr
 8022972:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022976:	fb02 8303 	mla	r3, r2, r3, r8
 802297a:	9a08      	ldr	r2, [sp, #32]
 802297c:	f8b7 8000 	ldrh.w	r8, [r7]
 8022980:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8022984:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022986:	fb00 330a 	mla	r3, r0, sl, r3
 802298a:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 802298e:	fb09 3900 	mla	r9, r9, r0, r3
 8022992:	43c9      	mvns	r1, r1
 8022994:	ea4f 2228 	mov.w	r2, r8, asr #8
 8022998:	fa5f fe81 	uxtb.w	lr, r1
 802299c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80229a0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80229a4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80229a8:	fb02 f20e 	mul.w	r2, r2, lr
 80229ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80229b0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80229b4:	ea4c 0c09 	orr.w	ip, ip, r9
 80229b8:	1c53      	adds	r3, r2, #1
 80229ba:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80229be:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80229c2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80229c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80229ce:	4a63      	ldr	r2, [pc, #396]	; (8022b5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 80229d0:	fb00 f00e 	mul.w	r0, r0, lr
 80229d4:	b2db      	uxtb	r3, r3
 80229d6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 80229da:	1c43      	adds	r3, r0, #1
 80229dc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80229e0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80229e4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80229e8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80229ec:	b2c9      	uxtb	r1, r1
 80229ee:	00db      	lsls	r3, r3, #3
 80229f0:	fb01 f10e 	mul.w	r1, r1, lr
 80229f4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80229f8:	4313      	orrs	r3, r2
 80229fa:	1c4a      	adds	r2, r1, #1
 80229fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a00:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022a04:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8022a08:	ea4c 0c03 	orr.w	ip, ip, r3
 8022a0c:	f8a7 c000 	strh.w	ip, [r7]
 8022a10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022a12:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022a14:	441a      	add	r2, r3
 8022a16:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a18:	9225      	str	r2, [sp, #148]	; 0x94
 8022a1a:	441d      	add	r5, r3
 8022a1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8022a1e:	3b01      	subs	r3, #1
 8022a20:	3702      	adds	r7, #2
 8022a22:	9317      	str	r3, [sp, #92]	; 0x5c
 8022a24:	e699      	b.n	802275a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022a26:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022a28:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022a2a:	441c      	add	r4, r3
 8022a2c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022a2e:	9425      	str	r4, [sp, #148]	; 0x94
 8022a30:	441d      	add	r5, r3
 8022a32:	9b07      	ldr	r3, [sp, #28]
 8022a34:	3b01      	subs	r3, #1
 8022a36:	9307      	str	r3, [sp, #28]
 8022a38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a3a:	3302      	adds	r3, #2
 8022a3c:	930a      	str	r3, [sp, #40]	; 0x28
 8022a3e:	e66b      	b.n	8022718 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022a40:	d024      	beq.n	8022a8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8022a42:	9b07      	ldr	r3, [sp, #28]
 8022a44:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8022a46:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022a48:	3b01      	subs	r3, #1
 8022a4a:	fb00 4003 	mla	r0, r0, r3, r4
 8022a4e:	1400      	asrs	r0, r0, #16
 8022a50:	f53f ae80 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022a54:	3901      	subs	r1, #1
 8022a56:	4288      	cmp	r0, r1
 8022a58:	f6bf ae7c 	bge.w	8022754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022a5c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8022a5e:	fb01 5303 	mla	r3, r1, r3, r5
 8022a62:	141b      	asrs	r3, r3, #16
 8022a64:	f53f ae76 	bmi.w	8022754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022a68:	3a01      	subs	r2, #1
 8022a6a:	4293      	cmp	r3, r2
 8022a6c:	f6bf ae72 	bge.w	8022754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8022a70:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022a74:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8022a78:	f1bb 0f00 	cmp.w	fp, #0
 8022a7c:	dc70      	bgt.n	8022b60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8022a7e:	9b07      	ldr	r3, [sp, #28]
 8022a80:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022a84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022a86:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022a8a:	930a      	str	r3, [sp, #40]	; 0x28
 8022a8c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022a8e:	2b00      	cmp	r3, #0
 8022a90:	f340 81ae 	ble.w	8022df0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022a94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022a98:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022a9c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022aa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022aa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022aa6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022aaa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022aae:	eef0 6a62 	vmov.f32	s13, s5
 8022ab2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ab6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022aba:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022abe:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8022ac2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ac6:	eef0 6a43 	vmov.f32	s13, s6
 8022aca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022ace:	ee12 2a90 	vmov	r2, s5
 8022ad2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022ad6:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ada:	ee13 2a10 	vmov	r2, s6
 8022ade:	9327      	str	r3, [sp, #156]	; 0x9c
 8022ae0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ae2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022ae6:	9328      	str	r3, [sp, #160]	; 0xa0
 8022ae8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8022aea:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8022aec:	3b01      	subs	r3, #1
 8022aee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022af2:	9316      	str	r3, [sp, #88]	; 0x58
 8022af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022af6:	bf08      	it	eq
 8022af8:	4613      	moveq	r3, r2
 8022afa:	ee16 5a90 	vmov	r5, s13
 8022afe:	9307      	str	r3, [sp, #28]
 8022b00:	eeb0 3a67 	vmov.f32	s6, s15
 8022b04:	eef0 2a47 	vmov.f32	s5, s14
 8022b08:	e5f8      	b.n	80226fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022b0a:	2800      	cmp	r0, #0
 8022b0c:	f43f ae6b 	beq.w	80227e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022b10:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022b14:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022b18:	9108      	str	r1, [sp, #32]
 8022b1a:	0e09      	lsrs	r1, r1, #24
 8022b1c:	9110      	str	r1, [sp, #64]	; 0x40
 8022b1e:	e662      	b.n	80227e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8022b20:	f113 0801 	adds.w	r8, r3, #1
 8022b24:	f53f af74 	bmi.w	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022b28:	4541      	cmp	r1, r8
 8022b2a:	f6ff af71 	blt.w	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022b2e:	f11c 0801 	adds.w	r8, ip, #1
 8022b32:	f53f af6d 	bmi.w	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022b36:	45c6      	cmp	lr, r8
 8022b38:	f6ff af6a 	blt.w	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022b3c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022b40:	b209      	sxth	r1, r1
 8022b42:	fa0f f38e 	sxth.w	r3, lr
 8022b46:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8022b4a:	9301      	str	r3, [sp, #4]
 8022b4c:	9100      	str	r1, [sp, #0]
 8022b4e:	4633      	mov	r3, r6
 8022b50:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022b52:	9819      	ldr	r0, [sp, #100]	; 0x64
 8022b54:	4639      	mov	r1, r7
 8022b56:	f7ff fc7a 	bl	802244e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8022b5a:	e759      	b.n	8022a10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8022b5c:	fffff800 	.word	0xfffff800
 8022b60:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8022b62:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8022b64:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022b68:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8022b6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022b6e:	1427      	asrs	r7, r4, #16
 8022b70:	142b      	asrs	r3, r5, #16
 8022b72:	fb01 7303 	mla	r3, r1, r3, r7
 8022b76:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8022b78:	18e7      	adds	r7, r4, r3
 8022b7a:	5ce3      	ldrb	r3, [r4, r3]
 8022b7c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022b80:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8022b84:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022b88:	2a00      	cmp	r2, #0
 8022b8a:	f000 8127 	beq.w	8022ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022b8e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8022b92:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8022b96:	940d      	str	r4, [sp, #52]	; 0x34
 8022b98:	0e24      	lsrs	r4, r4, #24
 8022b9a:	9414      	str	r4, [sp, #80]	; 0x50
 8022b9c:	b170      	cbz	r0, 8022bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022b9e:	eb07 0e01 	add.w	lr, r7, r1
 8022ba2:	5c79      	ldrb	r1, [r7, r1]
 8022ba4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022ba8:	9109      	str	r1, [sp, #36]	; 0x24
 8022baa:	0e09      	lsrs	r1, r1, #24
 8022bac:	9111      	str	r1, [sp, #68]	; 0x44
 8022bae:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8022bb2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022bb6:	910e      	str	r1, [sp, #56]	; 0x38
 8022bb8:	0e09      	lsrs	r1, r1, #24
 8022bba:	9115      	str	r1, [sp, #84]	; 0x54
 8022bbc:	b292      	uxth	r2, r2
 8022bbe:	b280      	uxth	r0, r0
 8022bc0:	fb02 f800 	mul.w	r8, r2, r0
 8022bc4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022bc8:	0112      	lsls	r2, r2, #4
 8022bca:	eba2 0e08 	sub.w	lr, r2, r8
 8022bce:	b280      	uxth	r0, r0
 8022bd0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8022bd4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022bd6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022bd8:	fa1f fe8e 	uxth.w	lr, lr
 8022bdc:	1a09      	subs	r1, r1, r0
 8022bde:	b289      	uxth	r1, r1
 8022be0:	fb0e f202 	mul.w	r2, lr, r2
 8022be4:	fb01 220c 	mla	r2, r1, ip, r2
 8022be8:	fb00 2204 	mla	r2, r0, r4, r2
 8022bec:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022bee:	fb08 2204 	mla	r2, r8, r4, r2
 8022bf2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8022bf6:	2a00      	cmp	r2, #0
 8022bf8:	f000 80e5 	beq.w	8022dc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022bfc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8022c00:	d019      	beq.n	8022c36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8022c02:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8022c06:	fb0c fa0a 	mul.w	sl, ip, sl
 8022c0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022c0e:	fb0c fc03 	mul.w	ip, ip, r3
 8022c12:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022c16:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022c1a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8022c1e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8022c22:	4453      	add	r3, sl
 8022c24:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022c28:	0a1b      	lsrs	r3, r3, #8
 8022c2a:	0a3f      	lsrs	r7, r7, #8
 8022c2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8022c30:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8022c34:	433b      	orrs	r3, r7
 8022c36:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022c38:	2cff      	cmp	r4, #255	; 0xff
 8022c3a:	d020      	beq.n	8022c7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022c3c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022c3e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022c42:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022c44:	4367      	muls	r7, r4
 8022c46:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022c48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022c4c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022c4e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022c52:	fb04 fa0a 	mul.w	sl, r4, sl
 8022c56:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022c5a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c5e:	44bc      	add	ip, r7
 8022c60:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022c64:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022c68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022c6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022c70:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022c74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022c78:	ea4c 040a 	orr.w	r4, ip, sl
 8022c7c:	940d      	str	r4, [sp, #52]	; 0x34
 8022c7e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022c80:	2cff      	cmp	r4, #255	; 0xff
 8022c82:	d020      	beq.n	8022cc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8022c84:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022c86:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022c8a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022c8c:	4367      	muls	r7, r4
 8022c8e:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022c90:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022c94:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8022c96:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022c9a:	fb04 fa0a 	mul.w	sl, r4, sl
 8022c9e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022ca2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022ca6:	44bc      	add	ip, r7
 8022ca8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022cac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022cb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022cb4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022cb8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022cbc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022cc0:	ea4c 040a 	orr.w	r4, ip, sl
 8022cc4:	9409      	str	r4, [sp, #36]	; 0x24
 8022cc6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022cc8:	2cff      	cmp	r4, #255	; 0xff
 8022cca:	d020      	beq.n	8022d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022ccc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022cce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022cd2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022cd4:	4367      	muls	r7, r4
 8022cd6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022cd8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8022cdc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022cde:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022ce2:	fb04 fa0a 	mul.w	sl, r4, sl
 8022ce6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8022cea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022cee:	44bc      	add	ip, r7
 8022cf0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8022cf4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022cf8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022cfc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8022d04:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8022d08:	ea4c 040a 	orr.w	r4, ip, sl
 8022d0c:	940e      	str	r4, [sp, #56]	; 0x38
 8022d0e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d10:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8022d14:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8022d16:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8022d1a:	fb0e f707 	mul.w	r7, lr, r7
 8022d1e:	fb01 770c 	mla	r7, r1, ip, r7
 8022d22:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022d26:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8022d28:	fb00 770c 	mla	r7, r0, ip, r7
 8022d2c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8022d30:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022d32:	fb08 770c 	mla	r7, r8, ip, r7
 8022d36:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8022d3a:	fb0e fe0c 	mul.w	lr, lr, ip
 8022d3e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8022d42:	fb01 e303 	mla	r3, r1, r3, lr
 8022d46:	9909      	ldr	r1, [sp, #36]	; 0x24
 8022d48:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8022d4c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8022d4e:	fb00 330a 	mla	r3, r0, sl, r3
 8022d52:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8022d56:	fb08 3c0c 	mla	ip, r8, ip, r3
 8022d5a:	f8b9 3000 	ldrh.w	r3, [r9]
 8022d5e:	43d2      	mvns	r2, r2
 8022d60:	1218      	asrs	r0, r3, #8
 8022d62:	b2d2      	uxtb	r2, r2
 8022d64:	10d9      	asrs	r1, r3, #3
 8022d66:	0a3f      	lsrs	r7, r7, #8
 8022d68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d6c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022d70:	00db      	lsls	r3, r3, #3
 8022d72:	4350      	muls	r0, r2
 8022d74:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8022d78:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8022d7c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d80:	b2db      	uxtb	r3, r3
 8022d82:	ea47 070c 	orr.w	r7, r7, ip
 8022d86:	4351      	muls	r1, r2
 8022d88:	4353      	muls	r3, r2
 8022d8a:	1c42      	adds	r2, r0, #1
 8022d8c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022d90:	0c3a      	lsrs	r2, r7, #16
 8022d92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022d96:	4a18      	ldr	r2, [pc, #96]	; (8022df8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8022d98:	b2c0      	uxtb	r0, r0
 8022d9a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8022d9e:	1c4a      	adds	r2, r1, #1
 8022da0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022da4:	0a3a      	lsrs	r2, r7, #8
 8022da6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022daa:	00c9      	lsls	r1, r1, #3
 8022dac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022db0:	4301      	orrs	r1, r0
 8022db2:	1c58      	adds	r0, r3, #1
 8022db4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022db8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022dbc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022dc0:	4308      	orrs	r0, r1
 8022dc2:	f8a9 0000 	strh.w	r0, [r9]
 8022dc6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8022dc8:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8022dca:	441a      	add	r2, r3
 8022dcc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8022dce:	9225      	str	r2, [sp, #148]	; 0x94
 8022dd0:	f109 0902 	add.w	r9, r9, #2
 8022dd4:	441d      	add	r5, r3
 8022dd6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022dda:	e64d      	b.n	8022a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8022ddc:	2800      	cmp	r0, #0
 8022dde:	f43f aeed 	beq.w	8022bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022de2:	5c79      	ldrb	r1, [r7, r1]
 8022de4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022de8:	9109      	str	r1, [sp, #36]	; 0x24
 8022dea:	0e09      	lsrs	r1, r1, #24
 8022dec:	9111      	str	r1, [sp, #68]	; 0x44
 8022dee:	e6e5      	b.n	8022bbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022df0:	b01b      	add	sp, #108	; 0x6c
 8022df2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022df6:	bf00      	nop
 8022df8:	fffff800 	.word	0xfffff800

08022dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e00:	b085      	sub	sp, #20
 8022e02:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8022e06:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8022e0a:	9103      	str	r1, [sp, #12]
 8022e0c:	fb00 7406 	mla	r4, r0, r6, r7
 8022e10:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022e14:	2800      	cmp	r0, #0
 8022e16:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8022e1a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8022e1e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8022e22:	9501      	str	r5, [sp, #4]
 8022e24:	eb03 0904 	add.w	r9, r3, r4
 8022e28:	f2c0 8150 	blt.w	80230cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022e2c:	4583      	cmp	fp, r0
 8022e2e:	f340 814d 	ble.w	80230cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022e32:	2f00      	cmp	r7, #0
 8022e34:	f2c0 8146 	blt.w	80230c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022e38:	42be      	cmp	r6, r7
 8022e3a:	f340 8143 	ble.w	80230c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022e3e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8022e42:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8022e46:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022e4a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8022e4e:	4355      	muls	r5, r2
 8022e50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e54:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8022e58:	fb0c f203 	mul.w	r2, ip, r3
 8022e5c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8022e60:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8022e64:	441d      	add	r5, r3
 8022e66:	f102 0320 	add.w	r3, r2, #32
 8022e6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e6e:	0a1b      	lsrs	r3, r3, #8
 8022e70:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8022e74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e78:	431c      	orrs	r4, r3
 8022e7a:	1c7b      	adds	r3, r7, #1
 8022e7c:	f100 812b 	bmi.w	80230d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022e80:	429e      	cmp	r6, r3
 8022e82:	f340 8128 	ble.w	80230d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8022e86:	2900      	cmp	r1, #0
 8022e88:	f000 8128 	beq.w	80230dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8022e8c:	9a01      	ldr	r2, [sp, #4]
 8022e8e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8022e92:	8855      	ldrh	r5, [r2, #2]
 8022e94:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8022e98:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8022e9c:	fb08 f802 	mul.w	r8, r8, r2
 8022ea0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ea4:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8022ea8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022eac:	435d      	muls	r5, r3
 8022eae:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022eb2:	44d0      	add	r8, sl
 8022eb4:	f105 0a20 	add.w	sl, r5, #32
 8022eb8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022ebc:	0a2d      	lsrs	r5, r5, #8
 8022ebe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022ec2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022ec6:	432a      	orrs	r2, r5
 8022ec8:	3001      	adds	r0, #1
 8022eca:	f100 810d 	bmi.w	80230e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022ece:	4583      	cmp	fp, r0
 8022ed0:	f340 810a 	ble.w	80230e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022ed4:	f1be 0f00 	cmp.w	lr, #0
 8022ed8:	f000 810b 	beq.w	80230f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022edc:	2f00      	cmp	r7, #0
 8022ede:	f2c0 8100 	blt.w	80230e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022ee2:	42be      	cmp	r6, r7
 8022ee4:	f340 80fd 	ble.w	80230e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022ee8:	9801      	ldr	r0, [sp, #4]
 8022eea:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022eee:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022ef2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022ef6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022efa:	fb0a fa00 	mul.w	sl, sl, r0
 8022efe:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8022f02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022f06:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022f0a:	fb05 f808 	mul.w	r8, r5, r8
 8022f0e:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8022f12:	4482      	add	sl, r0
 8022f14:	f108 0020 	add.w	r0, r8, #32
 8022f18:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f1c:	0a00      	lsrs	r0, r0, #8
 8022f1e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022f22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f26:	ea4b 0b00 	orr.w	fp, fp, r0
 8022f2a:	3701      	adds	r7, #1
 8022f2c:	f100 80e6 	bmi.w	80230fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022f30:	42be      	cmp	r6, r7
 8022f32:	f340 80e3 	ble.w	80230fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022f36:	2900      	cmp	r1, #0
 8022f38:	f000 80e3 	beq.w	8023102 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022f3c:	3601      	adds	r6, #1
 8022f3e:	9801      	ldr	r0, [sp, #4]
 8022f40:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022f44:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022f48:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022f4c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8022f50:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f54:	fb09 f906 	mul.w	r9, r9, r6
 8022f58:	fb07 f800 	mul.w	r8, r7, r0
 8022f5c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8022f60:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022f64:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8022f68:	44d1      	add	r9, sl
 8022f6a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022f6e:	f108 0020 	add.w	r0, r8, #32
 8022f72:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022f76:	0a00      	lsrs	r0, r0, #8
 8022f78:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022f7c:	4330      	orrs	r0, r6
 8022f7e:	b28e      	uxth	r6, r1
 8022f80:	fa1f f98e 	uxth.w	r9, lr
 8022f84:	fb06 f809 	mul.w	r8, r6, r9
 8022f88:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022f8c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022f90:	0136      	lsls	r6, r6, #4
 8022f92:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022f96:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8022f9a:	9601      	str	r6, [sp, #4]
 8022f9c:	ea4a 0404 	orr.w	r4, sl, r4
 8022fa0:	fa1f f689 	uxth.w	r6, r9
 8022fa4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022fa8:	fb11 f90e 	smulbb	r9, r1, lr
 8022fac:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022fb0:	9602      	str	r6, [sp, #8]
 8022fb2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022fb6:	4626      	mov	r6, r4
 8022fb8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022fbc:	f1ce 0410 	rsb	r4, lr, #16
 8022fc0:	1a64      	subs	r4, r4, r1
 8022fc2:	ea4a 0202 	orr.w	r2, sl, r2
 8022fc6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022fca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022fce:	434a      	muls	r2, r1
 8022fd0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022fd4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022fd8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022fdc:	fb04 2406 	mla	r4, r4, r6, r2
 8022fe0:	ea4a 0000 	orr.w	r0, sl, r0
 8022fe4:	fb09 4200 	mla	r2, r9, r0, r4
 8022fe8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022fec:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022ff0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022ff4:	ea44 0b0b 	orr.w	fp, r4, fp
 8022ff8:	9c01      	ldr	r4, [sp, #4]
 8022ffa:	9e02      	ldr	r6, [sp, #8]
 8022ffc:	9903      	ldr	r1, [sp, #12]
 8022ffe:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8023002:	1ba4      	subs	r4, r4, r6
 8023004:	9e01      	ldr	r6, [sp, #4]
 8023006:	8808      	ldrh	r0, [r1, #0]
 8023008:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 802300c:	eba6 0608 	sub.w	r6, r6, r8
 8023010:	b2b6      	uxth	r6, r6
 8023012:	b2a4      	uxth	r4, r4
 8023014:	4373      	muls	r3, r6
 8023016:	fb0c 3304 	mla	r3, ip, r4, r3
 802301a:	9c02      	ldr	r4, [sp, #8]
 802301c:	fb04 3505 	mla	r5, r4, r5, r3
 8023020:	fb08 5707 	mla	r7, r8, r7, r5
 8023024:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023028:	b289      	uxth	r1, r1
 802302a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802302e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8023032:	434f      	muls	r7, r1
 8023034:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023038:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802303c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023040:	1c7b      	adds	r3, r7, #1
 8023042:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023046:	ea42 0e0e 	orr.w	lr, r2, lr
 802304a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802304e:	fa1f f28e 	uxth.w	r2, lr
 8023052:	1203      	asrs	r3, r0, #8
 8023054:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8023058:	b2ff      	uxtb	r7, r7
 802305a:	1215      	asrs	r5, r2, #8
 802305c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023060:	fb13 f307 	smulbb	r3, r3, r7
 8023064:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023068:	fb05 3501 	mla	r5, r5, r1, r3
 802306c:	10c3      	asrs	r3, r0, #3
 802306e:	10d4      	asrs	r4, r2, #3
 8023070:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023074:	fb13 f307 	smulbb	r3, r3, r7
 8023078:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802307c:	fb04 3401 	mla	r4, r4, r1, r3
 8023080:	00c3      	lsls	r3, r0, #3
 8023082:	00d2      	lsls	r2, r2, #3
 8023084:	b2db      	uxtb	r3, r3
 8023086:	fb13 f307 	smulbb	r3, r3, r7
 802308a:	b2d2      	uxtb	r2, r2
 802308c:	fb02 3101 	mla	r1, r2, r1, r3
 8023090:	b2ad      	uxth	r5, r5
 8023092:	b289      	uxth	r1, r1
 8023094:	b2a4      	uxth	r4, r4
 8023096:	1c6b      	adds	r3, r5, #1
 8023098:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802309c:	1c62      	adds	r2, r4, #1
 802309e:	1c4b      	adds	r3, r1, #1
 80230a0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80230a4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80230a8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80230ac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80230b0:	0964      	lsrs	r4, r4, #5
 80230b2:	432b      	orrs	r3, r5
 80230b4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80230b8:	9a03      	ldr	r2, [sp, #12]
 80230ba:	4323      	orrs	r3, r4
 80230bc:	8013      	strh	r3, [r2, #0]
 80230be:	b005      	add	sp, #20
 80230c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80230c4:	f04f 0c00 	mov.w	ip, #0
 80230c8:	4664      	mov	r4, ip
 80230ca:	e6d6      	b.n	8022e7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80230cc:	2300      	movs	r3, #0
 80230ce:	469c      	mov	ip, r3
 80230d0:	461a      	mov	r2, r3
 80230d2:	461c      	mov	r4, r3
 80230d4:	e6f8      	b.n	8022ec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80230d6:	2300      	movs	r3, #0
 80230d8:	461a      	mov	r2, r3
 80230da:	e6f5      	b.n	8022ec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80230dc:	460b      	mov	r3, r1
 80230de:	460a      	mov	r2, r1
 80230e0:	e6f2      	b.n	8022ec8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80230e2:	2500      	movs	r5, #0
 80230e4:	46ab      	mov	fp, r5
 80230e6:	e720      	b.n	8022f2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80230e8:	2700      	movs	r7, #0
 80230ea:	463d      	mov	r5, r7
 80230ec:	4638      	mov	r0, r7
 80230ee:	46bb      	mov	fp, r7
 80230f0:	e745      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80230f2:	4677      	mov	r7, lr
 80230f4:	4675      	mov	r5, lr
 80230f6:	4670      	mov	r0, lr
 80230f8:	46f3      	mov	fp, lr
 80230fa:	e740      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80230fc:	2700      	movs	r7, #0
 80230fe:	4638      	mov	r0, r7
 8023100:	e73d      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8023102:	460f      	mov	r7, r1
 8023104:	4608      	mov	r0, r1
 8023106:	e73a      	b.n	8022f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08023108 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023108:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802310c:	b097      	sub	sp, #92	; 0x5c
 802310e:	9214      	str	r2, [sp, #80]	; 0x50
 8023110:	9308      	str	r3, [sp, #32]
 8023112:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8023114:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8023118:	9312      	str	r3, [sp, #72]	; 0x48
 802311a:	9111      	str	r1, [sp, #68]	; 0x44
 802311c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8023120:	9015      	str	r0, [sp, #84]	; 0x54
 8023122:	6850      	ldr	r0, [r2, #4]
 8023124:	6812      	ldr	r2, [r2, #0]
 8023126:	fb00 1303 	mla	r3, r0, r3, r1
 802312a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802312e:	9309      	str	r3, [sp, #36]	; 0x24
 8023130:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023132:	681b      	ldr	r3, [r3, #0]
 8023134:	930b      	str	r3, [sp, #44]	; 0x2c
 8023136:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023138:	685b      	ldr	r3, [r3, #4]
 802313a:	930c      	str	r3, [sp, #48]	; 0x30
 802313c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8023140:	930a      	str	r3, [sp, #40]	; 0x28
 8023142:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023144:	2b00      	cmp	r3, #0
 8023146:	dc03      	bgt.n	8023150 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023148:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802314a:	2b00      	cmp	r3, #0
 802314c:	f340 83cb 	ble.w	80238e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023150:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023152:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023156:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802315a:	1e48      	subs	r0, r1, #1
 802315c:	1e55      	subs	r5, r2, #1
 802315e:	9b08      	ldr	r3, [sp, #32]
 8023160:	2b00      	cmp	r3, #0
 8023162:	f340 81a3 	ble.w	80234ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8023166:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8023168:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802316a:	1436      	asrs	r6, r6, #16
 802316c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023170:	d406      	bmi.n	8023180 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023172:	4286      	cmp	r6, r0
 8023174:	da04      	bge.n	8023180 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023176:	2b00      	cmp	r3, #0
 8023178:	db02      	blt.n	8023180 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802317a:	42ab      	cmp	r3, r5
 802317c:	f2c0 8197 	blt.w	80234ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8023180:	3601      	adds	r6, #1
 8023182:	f100 8184 	bmi.w	802348e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023186:	42b1      	cmp	r1, r6
 8023188:	f2c0 8181 	blt.w	802348e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802318c:	3301      	adds	r3, #1
 802318e:	f100 817e 	bmi.w	802348e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023192:	429a      	cmp	r2, r3
 8023194:	f2c0 817b 	blt.w	802348e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8023198:	9b08      	ldr	r3, [sp, #32]
 802319a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802319c:	9313      	str	r3, [sp, #76]	; 0x4c
 802319e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80231a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80231a4:	2b00      	cmp	r3, #0
 80231a6:	f340 81a4 	ble.w	80234f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80231aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80231ac:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80231ae:	1418      	asrs	r0, r3, #16
 80231b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80231b2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80231b6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80231b8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80231bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80231be:	142d      	asrs	r5, r5, #16
 80231c0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80231c4:	f100 81f8 	bmi.w	80235b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80231c8:	f102 3eff 	add.w	lr, r2, #4294967295
 80231cc:	4575      	cmp	r5, lr
 80231ce:	f280 81f3 	bge.w	80235b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80231d2:	2800      	cmp	r0, #0
 80231d4:	f2c0 81f0 	blt.w	80235b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80231d8:	f103 3eff 	add.w	lr, r3, #4294967295
 80231dc:	4570      	cmp	r0, lr
 80231de:	f280 81eb 	bge.w	80235b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80231e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80231e4:	b212      	sxth	r2, r2
 80231e6:	fb00 5002 	mla	r0, r0, r2, r5
 80231ea:	fa1f fe81 	uxth.w	lr, r1
 80231ee:	eb03 0a00 	add.w	sl, r3, r0
 80231f2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80231f6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80231fa:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80231fe:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023202:	b29b      	uxth	r3, r3
 8023204:	f1bc 0f00 	cmp.w	ip, #0
 8023208:	f000 81b9 	beq.w	802357e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802320c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023210:	940d      	str	r4, [sp, #52]	; 0x34
 8023212:	eb0a 0b02 	add.w	fp, sl, r2
 8023216:	fa1f fa8c 	uxth.w	sl, ip
 802321a:	fb0a fe0e 	mul.w	lr, sl, lr
 802321e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023222:	fa1f fa8a 	uxth.w	sl, sl
 8023226:	eba5 050e 	sub.w	r5, r5, lr
 802322a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802322e:	940e      	str	r4, [sp, #56]	; 0x38
 8023230:	eba3 030a 	sub.w	r3, r3, sl
 8023234:	b2ad      	uxth	r5, r5
 8023236:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8023238:	b29b      	uxth	r3, r3
 802323a:	fb08 f505 	mul.w	r5, r8, r5
 802323e:	fb09 5303 	mla	r3, r9, r3, r5
 8023242:	fb0a 3304 	mla	r3, sl, r4, r3
 8023246:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8023248:	fb0e 3304 	mla	r3, lr, r4, r3
 802324c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023250:	2b00      	cmp	r3, #0
 8023252:	f000 810f 	beq.w	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023256:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023258:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802325c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023260:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023264:	f000 8190 	beq.w	8023588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8023268:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802326c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023270:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023274:	fb09 f000 	mul.w	r0, r9, r0
 8023278:	fb0a fe0e 	mul.w	lr, sl, lr
 802327c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023280:	f100 0b20 	add.w	fp, r0, #32
 8023284:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023288:	44ce      	add	lr, r9
 802328a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802328e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023292:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023296:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802329a:	ea4e 0909 	orr.w	r9, lr, r9
 802329e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80232a2:	8868      	ldrh	r0, [r5, #2]
 80232a4:	d019      	beq.n	80232da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80232a6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80232aa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80232ae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232b2:	fb08 f800 	mul.w	r8, r8, r0
 80232b6:	fb0a fe0e 	mul.w	lr, sl, lr
 80232ba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80232be:	f108 0b20 	add.w	fp, r8, #32
 80232c2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80232c6:	4486      	add	lr, r0
 80232c8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80232cc:	0a00      	lsrs	r0, r0, #8
 80232ce:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80232d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80232d6:	ea4e 0000 	orr.w	r0, lr, r0
 80232da:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80232de:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80232e2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80232e6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80232ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80232ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80232f2:	ea4e 0909 	orr.w	r9, lr, r9
 80232f6:	ea4a 0000 	orr.w	r0, sl, r0
 80232fa:	f1bc 0f00 	cmp.w	ip, #0
 80232fe:	f000 8145 	beq.w	802358c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8023302:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023306:	3a01      	subs	r2, #1
 8023308:	0052      	lsls	r2, r2, #1
 802330a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802330c:	3202      	adds	r2, #2
 802330e:	2cff      	cmp	r4, #255	; 0xff
 8023310:	eb05 0e02 	add.w	lr, r5, r2
 8023314:	5aaa      	ldrh	r2, [r5, r2]
 8023316:	d018      	beq.n	802334a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023318:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802331c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023320:	fb04 fa02 	mul.w	sl, r4, r2
 8023324:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023328:	fb08 f805 	mul.w	r8, r8, r5
 802332c:	f10a 0520 	add.w	r5, sl, #32
 8023330:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023334:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023338:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802333c:	4442      	add	r2, r8
 802333e:	0a2d      	lsrs	r5, r5, #8
 8023340:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023344:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023348:	432a      	orrs	r2, r5
 802334a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802334c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023350:	2cff      	cmp	r4, #255	; 0xff
 8023352:	d01a      	beq.n	802338a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8023354:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023358:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802335c:	fb04 fa05 	mul.w	sl, r4, r5
 8023360:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023364:	fb08 f80e 	mul.w	r8, r8, lr
 8023368:	f10a 0e20 	add.w	lr, sl, #32
 802336c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023370:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023374:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023378:	4445      	add	r5, r8
 802337a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802337e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023382:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023386:	ea45 050e 	orr.w	r5, r5, lr
 802338a:	fb1c fe01 	smulbb	lr, ip, r1
 802338e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023392:	f1cc 0810 	rsb	r8, ip, #16
 8023396:	eba8 0801 	sub.w	r8, r8, r1
 802339a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802339e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80233a2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80233a6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80233aa:	4341      	muls	r1, r0
 80233ac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80233b0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80233b4:	ea4a 0202 	orr.w	r2, sl, r2
 80233b8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80233bc:	fb09 1108 	mla	r1, r9, r8, r1
 80233c0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233c4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80233c8:	fb0c 1102 	mla	r1, ip, r2, r1
 80233cc:	ea4b 0505 	orr.w	r5, fp, r5
 80233d0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80233d4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80233d8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80233dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80233e0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80233e4:	ea42 0e0e 	orr.w	lr, r2, lr
 80233e8:	fa1f f28e 	uxth.w	r2, lr
 80233ec:	2bff      	cmp	r3, #255	; 0xff
 80233ee:	d103      	bne.n	80233f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80233f0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80233f2:	29ff      	cmp	r1, #255	; 0xff
 80233f4:	f000 80de 	beq.w	80235b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80233f8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80233fa:	8838      	ldrh	r0, [r7, #0]
 80233fc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80233fe:	434b      	muls	r3, r1
 8023400:	f103 0c01 	add.w	ip, r3, #1
 8023404:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8023408:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802340c:	fa5f fc83 	uxtb.w	ip, r3
 8023410:	1203      	asrs	r3, r0, #8
 8023412:	1215      	asrs	r5, r2, #8
 8023414:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023418:	fb13 f30c 	smulbb	r3, r3, ip
 802341c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023420:	fb05 3501 	mla	r5, r5, r1, r3
 8023424:	10c3      	asrs	r3, r0, #3
 8023426:	10d1      	asrs	r1, r2, #3
 8023428:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802342c:	fb13 f30c 	smulbb	r3, r3, ip
 8023430:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8023434:	fb01 3104 	mla	r1, r1, r4, r3
 8023438:	00c3      	lsls	r3, r0, #3
 802343a:	00d2      	lsls	r2, r2, #3
 802343c:	b2db      	uxtb	r3, r3
 802343e:	b2d2      	uxtb	r2, r2
 8023440:	fb13 f30c 	smulbb	r3, r3, ip
 8023444:	b2ad      	uxth	r5, r5
 8023446:	fb02 3304 	mla	r3, r2, r4, r3
 802344a:	b29a      	uxth	r2, r3
 802344c:	1c6b      	adds	r3, r5, #1
 802344e:	b289      	uxth	r1, r1
 8023450:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023454:	1c53      	adds	r3, r2, #1
 8023456:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802345a:	1c4a      	adds	r2, r1, #1
 802345c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8023460:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023464:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023468:	0949      	lsrs	r1, r1, #5
 802346a:	432b      	orrs	r3, r5
 802346c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023470:	430b      	orrs	r3, r1
 8023472:	803b      	strh	r3, [r7, #0]
 8023474:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023476:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023478:	4413      	add	r3, r2
 802347a:	9321      	str	r3, [sp, #132]	; 0x84
 802347c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802347e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023480:	441a      	add	r2, r3
 8023482:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8023484:	9222      	str	r2, [sp, #136]	; 0x88
 8023486:	3b01      	subs	r3, #1
 8023488:	3702      	adds	r7, #2
 802348a:	9313      	str	r3, [sp, #76]	; 0x4c
 802348c:	e689      	b.n	80231a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802348e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023490:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8023492:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8023494:	4433      	add	r3, r6
 8023496:	9321      	str	r3, [sp, #132]	; 0x84
 8023498:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802349a:	441c      	add	r4, r3
 802349c:	9b08      	ldr	r3, [sp, #32]
 802349e:	9422      	str	r4, [sp, #136]	; 0x88
 80234a0:	3b01      	subs	r3, #1
 80234a2:	9308      	str	r3, [sp, #32]
 80234a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234a6:	3302      	adds	r3, #2
 80234a8:	9309      	str	r3, [sp, #36]	; 0x24
 80234aa:	e658      	b.n	802315e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80234ac:	d028      	beq.n	8023500 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80234ae:	9b08      	ldr	r3, [sp, #32]
 80234b0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80234b2:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80234b4:	3b01      	subs	r3, #1
 80234b6:	fb00 5003 	mla	r0, r0, r3, r5
 80234ba:	1400      	asrs	r0, r0, #16
 80234bc:	f53f ae6c 	bmi.w	8023198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80234c0:	3901      	subs	r1, #1
 80234c2:	4288      	cmp	r0, r1
 80234c4:	f6bf ae68 	bge.w	8023198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80234c8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80234ca:	9822      	ldr	r0, [sp, #136]	; 0x88
 80234cc:	fb01 0303 	mla	r3, r1, r3, r0
 80234d0:	141b      	asrs	r3, r3, #16
 80234d2:	f53f ae61 	bmi.w	8023198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80234d6:	3a01      	subs	r2, #1
 80234d8:	4293      	cmp	r3, r2
 80234da:	f6bf ae5d 	bge.w	8023198 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80234de:	9b08      	ldr	r3, [sp, #32]
 80234e0:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80234e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80234e6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80234ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80234ec:	2b00      	cmp	r3, #0
 80234ee:	f300 8082 	bgt.w	80235f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80234f2:	9b08      	ldr	r3, [sp, #32]
 80234f4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80234f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80234fa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80234fe:	9309      	str	r3, [sp, #36]	; 0x24
 8023500:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8023502:	2b00      	cmp	r3, #0
 8023504:	f340 81ef 	ble.w	80238e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8023508:	ee30 0a04 	vadd.f32	s0, s0, s8
 802350c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023510:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023514:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023516:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802351a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802351e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023522:	eef0 6a62 	vmov.f32	s13, s5
 8023526:	ee61 7a27 	vmul.f32	s15, s2, s15
 802352a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802352e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023532:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8023536:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802353a:	eef0 6a43 	vmov.f32	s13, s6
 802353e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023542:	ee12 2a90 	vmov	r2, s5
 8023546:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802354a:	fb92 f3f3 	sdiv	r3, r2, r3
 802354e:	ee13 2a10 	vmov	r2, s6
 8023552:	9323      	str	r3, [sp, #140]	; 0x8c
 8023554:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023556:	fb92 f3f3 	sdiv	r3, r2, r3
 802355a:	9324      	str	r3, [sp, #144]	; 0x90
 802355c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802355e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023560:	3b01      	subs	r3, #1
 8023562:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023566:	9311      	str	r3, [sp, #68]	; 0x44
 8023568:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802356a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802356e:	bf08      	it	eq
 8023570:	4613      	moveq	r3, r2
 8023572:	9308      	str	r3, [sp, #32]
 8023574:	eeb0 3a67 	vmov.f32	s6, s15
 8023578:	eef0 2a47 	vmov.f32	s5, s14
 802357c:	e5e1      	b.n	8023142 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802357e:	fb08 f505 	mul.w	r5, r8, r5
 8023582:	fb09 5303 	mla	r3, r9, r3, r5
 8023586:	e661      	b.n	802324c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8023588:	4681      	mov	r9, r0
 802358a:	e688      	b.n	802329e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802358c:	f1c1 0210 	rsb	r2, r1, #16
 8023590:	4341      	muls	r1, r0
 8023592:	fb09 1902 	mla	r9, r9, r2, r1
 8023596:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802359a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802359e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80235a2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80235a6:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80235aa:	ea42 0909 	orr.w	r9, r2, r9
 80235ae:	fa1f f289 	uxth.w	r2, r9
 80235b2:	e71b      	b.n	80233ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80235b4:	803a      	strh	r2, [r7, #0]
 80235b6:	e75d      	b.n	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235b8:	f115 0e01 	adds.w	lr, r5, #1
 80235bc:	f53f af5a 	bmi.w	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235c0:	4572      	cmp	r2, lr
 80235c2:	f6ff af57 	blt.w	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235c6:	f110 0e01 	adds.w	lr, r0, #1
 80235ca:	f53f af53 	bmi.w	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235ce:	4573      	cmp	r3, lr
 80235d0:	f6ff af50 	blt.w	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80235d6:	9502      	str	r5, [sp, #8]
 80235d8:	b21b      	sxth	r3, r3
 80235da:	b212      	sxth	r2, r2
 80235dc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80235e0:	9301      	str	r3, [sp, #4]
 80235e2:	9200      	str	r2, [sp, #0]
 80235e4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80235e8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80235ec:	4639      	mov	r1, r7
 80235ee:	9815      	ldr	r0, [sp, #84]	; 0x54
 80235f0:	f7ff fc04 	bl	8022dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80235f4:	e73e      	b.n	8023474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80235f6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80235f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80235fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80235fe:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023602:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8023604:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023608:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802360a:	141f      	asrs	r7, r3, #16
 802360c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802360e:	141b      	asrs	r3, r3, #16
 8023610:	fb01 3707 	mla	r7, r1, r7, r3
 8023614:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8023616:	fa1f fc82 	uxth.w	ip, r2
 802361a:	eb03 0a07 	add.w	sl, r3, r7
 802361e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023622:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023626:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802362a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802362e:	b29b      	uxth	r3, r3
 8023630:	2d00      	cmp	r5, #0
 8023632:	f000 813d 	beq.w	80238b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023636:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802363a:	940f      	str	r4, [sp, #60]	; 0x3c
 802363c:	eb0a 0b01 	add.w	fp, sl, r1
 8023640:	fa1f fa85 	uxth.w	sl, r5
 8023644:	fb0a fc0c 	mul.w	ip, sl, ip
 8023648:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802364c:	fa1f fa8a 	uxth.w	sl, sl
 8023650:	eba0 000c 	sub.w	r0, r0, ip
 8023654:	eba3 030a 	sub.w	r3, r3, sl
 8023658:	b280      	uxth	r0, r0
 802365a:	fb08 f000 	mul.w	r0, r8, r0
 802365e:	b29b      	uxth	r3, r3
 8023660:	fb09 0303 	mla	r3, r9, r3, r0
 8023664:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8023666:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802366a:	9410      	str	r4, [sp, #64]	; 0x40
 802366c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023670:	fb0c 3304 	mla	r3, ip, r4, r3
 8023674:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023678:	2b00      	cmp	r3, #0
 802367a:	f000 810b 	beq.w	8023894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802367e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8023680:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023682:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023686:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802368a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802368e:	f000 8114 	beq.w	80238ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8023692:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8023696:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802369a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802369e:	fb09 f707 	mul.w	r7, r9, r7
 80236a2:	fb0a fc0c 	mul.w	ip, sl, ip
 80236a6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80236aa:	f107 0b20 	add.w	fp, r7, #32
 80236ae:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80236b2:	44cc      	add	ip, r9
 80236b4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80236b8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80236c0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80236c4:	ea4c 0909 	orr.w	r9, ip, r9
 80236c8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80236cc:	8847      	ldrh	r7, [r0, #2]
 80236ce:	d019      	beq.n	8023704 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80236d0:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80236d4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80236d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80236dc:	fb08 f807 	mul.w	r8, r8, r7
 80236e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80236e4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80236e8:	f108 0b20 	add.w	fp, r8, #32
 80236ec:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80236f0:	44bc      	add	ip, r7
 80236f2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80236f6:	0a3f      	lsrs	r7, r7, #8
 80236f8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80236fc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023700:	ea4c 0707 	orr.w	r7, ip, r7
 8023704:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023708:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802370c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8023710:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023714:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023718:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802371c:	ea4c 0909 	orr.w	r9, ip, r9
 8023720:	ea4a 0707 	orr.w	r7, sl, r7
 8023724:	2d00      	cmp	r5, #0
 8023726:	f000 80ca 	beq.w	80238be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802372a:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802372e:	3901      	subs	r1, #1
 8023730:	0049      	lsls	r1, r1, #1
 8023732:	3102      	adds	r1, #2
 8023734:	eb00 0c01 	add.w	ip, r0, r1
 8023738:	5a41      	ldrh	r1, [r0, r1]
 802373a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 802373c:	28ff      	cmp	r0, #255	; 0xff
 802373e:	d019      	beq.n	8023774 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8023740:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8023742:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8023746:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802374a:	fb04 fa01 	mul.w	sl, r4, r1
 802374e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023752:	fb08 f800 	mul.w	r8, r8, r0
 8023756:	f10a 0020 	add.w	r0, sl, #32
 802375a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802375e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023762:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023766:	4441      	add	r1, r8
 8023768:	0a00      	lsrs	r0, r0, #8
 802376a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802376e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023772:	4301      	orrs	r1, r0
 8023774:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8023776:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802377a:	2cff      	cmp	r4, #255	; 0xff
 802377c:	d01a      	beq.n	80237b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802377e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8023782:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023786:	fb04 fa00 	mul.w	sl, r4, r0
 802378a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802378e:	fb08 f80c 	mul.w	r8, r8, ip
 8023792:	f10a 0c20 	add.w	ip, sl, #32
 8023796:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802379a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802379e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80237a2:	4440      	add	r0, r8
 80237a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237a8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80237ac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80237b0:	ea40 000c 	orr.w	r0, r0, ip
 80237b4:	fb15 fc02 	smulbb	ip, r5, r2
 80237b8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80237bc:	f1c5 0810 	rsb	r8, r5, #16
 80237c0:	eba8 0802 	sub.w	r8, r8, r2
 80237c4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80237c8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80237cc:	437a      	muls	r2, r7
 80237ce:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80237d2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80237d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80237da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80237de:	fb09 2208 	mla	r2, r9, r8, r2
 80237e2:	ea4a 0101 	orr.w	r1, sl, r1
 80237e6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80237ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80237ee:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80237f2:	fb05 2201 	mla	r2, r5, r1, r2
 80237f6:	ea4b 0000 	orr.w	r0, fp, r0
 80237fa:	fb0c 2200 	mla	r2, ip, r0, r2
 80237fe:	0d57      	lsrs	r7, r2, #21
 8023800:	0952      	lsrs	r2, r2, #5
 8023802:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8023806:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802380a:	433a      	orrs	r2, r7
 802380c:	2bff      	cmp	r3, #255	; 0xff
 802380e:	b292      	uxth	r2, r2
 8023810:	d102      	bne.n	8023818 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8023812:	9912      	ldr	r1, [sp, #72]	; 0x48
 8023814:	29ff      	cmp	r1, #255	; 0xff
 8023816:	d063      	beq.n	80238e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8023818:	980a      	ldr	r0, [sp, #40]	; 0x28
 802381a:	f8be 1000 	ldrh.w	r1, [lr]
 802381e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023820:	4343      	muls	r3, r0
 8023822:	1c58      	adds	r0, r3, #1
 8023824:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023828:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802382c:	1208      	asrs	r0, r1, #8
 802382e:	b2db      	uxtb	r3, r3
 8023830:	1215      	asrs	r5, r2, #8
 8023832:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8023836:	fb10 f003 	smulbb	r0, r0, r3
 802383a:	10cf      	asrs	r7, r1, #3
 802383c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023840:	00c9      	lsls	r1, r1, #3
 8023842:	fb05 0504 	mla	r5, r5, r4, r0
 8023846:	b2c9      	uxtb	r1, r1
 8023848:	10d0      	asrs	r0, r2, #3
 802384a:	00d2      	lsls	r2, r2, #3
 802384c:	fb11 f103 	smulbb	r1, r1, r3
 8023850:	b2d2      	uxtb	r2, r2
 8023852:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023856:	fb02 1204 	mla	r2, r2, r4, r1
 802385a:	fb17 f703 	smulbb	r7, r7, r3
 802385e:	b2ad      	uxth	r5, r5
 8023860:	b292      	uxth	r2, r2
 8023862:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023866:	fb00 7004 	mla	r0, r0, r4, r7
 802386a:	1c6b      	adds	r3, r5, #1
 802386c:	1c57      	adds	r7, r2, #1
 802386e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023872:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023876:	b280      	uxth	r0, r0
 8023878:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802387c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023880:	433d      	orrs	r5, r7
 8023882:	1c47      	adds	r7, r0, #1
 8023884:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8023888:	097f      	lsrs	r7, r7, #5
 802388a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802388e:	433d      	orrs	r5, r7
 8023890:	f8ae 5000 	strh.w	r5, [lr]
 8023894:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8023896:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8023898:	4413      	add	r3, r2
 802389a:	9321      	str	r3, [sp, #132]	; 0x84
 802389c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802389e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80238a0:	441a      	add	r2, r3
 80238a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80238a4:	9222      	str	r2, [sp, #136]	; 0x88
 80238a6:	3b01      	subs	r3, #1
 80238a8:	f10e 0e02 	add.w	lr, lr, #2
 80238ac:	9313      	str	r3, [sp, #76]	; 0x4c
 80238ae:	e61c      	b.n	80234ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80238b0:	fb08 f000 	mul.w	r0, r8, r0
 80238b4:	fb09 0303 	mla	r3, r9, r3, r0
 80238b8:	e6dc      	b.n	8023674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80238ba:	46b9      	mov	r9, r7
 80238bc:	e704      	b.n	80236c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80238be:	f1c2 0110 	rsb	r1, r2, #16
 80238c2:	437a      	muls	r2, r7
 80238c4:	fb09 2901 	mla	r9, r9, r1, r2
 80238c8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80238cc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80238d0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80238d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80238d8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80238dc:	4302      	orrs	r2, r0
 80238de:	e795      	b.n	802380c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80238e0:	f8ae 2000 	strh.w	r2, [lr]
 80238e4:	e7d6      	b.n	8023894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80238e6:	b017      	add	sp, #92	; 0x5c
 80238e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80238ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80238f0:	b085      	sub	sp, #20
 80238f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80238f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80238fa:	9103      	str	r1, [sp, #12]
 80238fc:	fb00 7406 	mla	r4, r0, r6, r7
 8023900:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8023904:	2800      	cmp	r0, #0
 8023906:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802390a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802390e:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8023912:	9501      	str	r5, [sp, #4]
 8023914:	eb02 0904 	add.w	r9, r2, r4
 8023918:	f2c0 8141 	blt.w	8023b9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802391c:	4583      	cmp	fp, r0
 802391e:	f340 813e 	ble.w	8023b9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023922:	2f00      	cmp	r7, #0
 8023924:	f2c0 8137 	blt.w	8023b96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023928:	42be      	cmp	r6, r7
 802392a:	f340 8134 	ble.w	8023b96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802392e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8023932:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023936:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802393a:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802393e:	4355      	muls	r5, r2
 8023940:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023944:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8023948:	fb0c f203 	mul.w	r2, ip, r3
 802394c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8023950:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8023954:	441d      	add	r5, r3
 8023956:	f102 0320 	add.w	r3, r2, #32
 802395a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802395e:	0a1b      	lsrs	r3, r3, #8
 8023960:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8023964:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023968:	431c      	orrs	r4, r3
 802396a:	1c7b      	adds	r3, r7, #1
 802396c:	f100 811c 	bmi.w	8023ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023970:	429e      	cmp	r6, r3
 8023972:	f340 8119 	ble.w	8023ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8023976:	2900      	cmp	r1, #0
 8023978:	f000 8119 	beq.w	8023bae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 802397c:	9a01      	ldr	r2, [sp, #4]
 802397e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8023982:	8855      	ldrh	r5, [r2, #2]
 8023984:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8023988:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 802398c:	fb08 f802 	mul.w	r8, r8, r2
 8023990:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023994:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8023998:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802399c:	435d      	muls	r5, r3
 802399e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80239a2:	44d0      	add	r8, sl
 80239a4:	f105 0a20 	add.w	sl, r5, #32
 80239a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80239ac:	0a2d      	lsrs	r5, r5, #8
 80239ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80239b2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80239b6:	432a      	orrs	r2, r5
 80239b8:	3001      	adds	r0, #1
 80239ba:	f100 80fe 	bmi.w	8023bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80239be:	4583      	cmp	fp, r0
 80239c0:	f340 80fb 	ble.w	8023bba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80239c4:	f1be 0f00 	cmp.w	lr, #0
 80239c8:	f000 80fc 	beq.w	8023bc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80239cc:	2f00      	cmp	r7, #0
 80239ce:	f2c0 80f1 	blt.w	8023bb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80239d2:	42be      	cmp	r6, r7
 80239d4:	f340 80ee 	ble.w	8023bb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80239d8:	9801      	ldr	r0, [sp, #4]
 80239da:	f819 5006 	ldrb.w	r5, [r9, r6]
 80239de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80239e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80239e6:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80239ea:	fb0a fa00 	mul.w	sl, sl, r0
 80239ee:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80239f2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80239f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80239fa:	fb05 f808 	mul.w	r8, r5, r8
 80239fe:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8023a02:	4482      	add	sl, r0
 8023a04:	f108 0020 	add.w	r0, r8, #32
 8023a08:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023a0c:	0a00      	lsrs	r0, r0, #8
 8023a0e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8023a12:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a16:	ea4b 0b00 	orr.w	fp, fp, r0
 8023a1a:	3701      	adds	r7, #1
 8023a1c:	f100 80d7 	bmi.w	8023bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023a20:	42be      	cmp	r6, r7
 8023a22:	f340 80d4 	ble.w	8023bce <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023a26:	2900      	cmp	r1, #0
 8023a28:	f000 80d4 	beq.w	8023bd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023a2c:	3601      	adds	r6, #1
 8023a2e:	9801      	ldr	r0, [sp, #4]
 8023a30:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023a34:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023a38:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023a3c:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8023a40:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a44:	fb09 f906 	mul.w	r9, r9, r6
 8023a48:	fb07 f800 	mul.w	r8, r7, r0
 8023a4c:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8023a50:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8023a54:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8023a58:	44d1      	add	r9, sl
 8023a5a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8023a5e:	f108 0020 	add.w	r0, r8, #32
 8023a62:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023a66:	0a00      	lsrs	r0, r0, #8
 8023a68:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023a6c:	4330      	orrs	r0, r6
 8023a6e:	b28e      	uxth	r6, r1
 8023a70:	fa1f f98e 	uxth.w	r9, lr
 8023a74:	fb06 f809 	mul.w	r8, r6, r9
 8023a78:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8023a7c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8023a80:	0136      	lsls	r6, r6, #4
 8023a82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023a86:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8023a8a:	9601      	str	r6, [sp, #4]
 8023a8c:	ea4a 0404 	orr.w	r4, sl, r4
 8023a90:	fa1f f689 	uxth.w	r6, r9
 8023a94:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023a98:	fb11 f90e 	smulbb	r9, r1, lr
 8023a9c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023aa0:	9602      	str	r6, [sp, #8]
 8023aa2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023aa6:	4626      	mov	r6, r4
 8023aa8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023aac:	f1ce 0410 	rsb	r4, lr, #16
 8023ab0:	1a64      	subs	r4, r4, r1
 8023ab2:	ea4a 0202 	orr.w	r2, sl, r2
 8023ab6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8023aba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023abe:	434a      	muls	r2, r1
 8023ac0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023ac4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023ac8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023acc:	fb04 2406 	mla	r4, r4, r6, r2
 8023ad0:	ea4a 0000 	orr.w	r0, sl, r0
 8023ad4:	fb09 4200 	mla	r2, r9, r0, r4
 8023ad8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8023adc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8023ae0:	9801      	ldr	r0, [sp, #4]
 8023ae2:	9903      	ldr	r1, [sp, #12]
 8023ae4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8023ae8:	ea44 0b0b 	orr.w	fp, r4, fp
 8023aec:	9c02      	ldr	r4, [sp, #8]
 8023aee:	8809      	ldrh	r1, [r1, #0]
 8023af0:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8023af4:	1b00      	subs	r0, r0, r4
 8023af6:	9c01      	ldr	r4, [sp, #4]
 8023af8:	eba4 0608 	sub.w	r6, r4, r8
 8023afc:	b2b6      	uxth	r6, r6
 8023afe:	b280      	uxth	r0, r0
 8023b00:	4373      	muls	r3, r6
 8023b02:	fb0c 3300 	mla	r3, ip, r0, r3
 8023b06:	9802      	ldr	r0, [sp, #8]
 8023b08:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023b0c:	fb00 3505 	mla	r5, r0, r5, r3
 8023b10:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8023b14:	fb08 5707 	mla	r7, r8, r7, r5
 8023b18:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023b1c:	120b      	asrs	r3, r1, #8
 8023b1e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023b22:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8023b26:	b2ff      	uxtb	r7, r7
 8023b28:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023b2c:	10c8      	asrs	r0, r1, #3
 8023b2e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023b32:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023b36:	00c9      	lsls	r1, r1, #3
 8023b38:	437b      	muls	r3, r7
 8023b3a:	ea42 0e0e 	orr.w	lr, r2, lr
 8023b3e:	b2c9      	uxtb	r1, r1
 8023b40:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023b44:	fa1f f28e 	uxth.w	r2, lr
 8023b48:	4378      	muls	r0, r7
 8023b4a:	434f      	muls	r7, r1
 8023b4c:	1c59      	adds	r1, r3, #1
 8023b4e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8023b52:	1213      	asrs	r3, r2, #8
 8023b54:	f023 0307 	bic.w	r3, r3, #7
 8023b58:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8023b5c:	1c41      	adds	r1, r0, #1
 8023b5e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023b62:	10d1      	asrs	r1, r2, #3
 8023b64:	f021 0103 	bic.w	r1, r1, #3
 8023b68:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023b6c:	021b      	lsls	r3, r3, #8
 8023b6e:	00c9      	lsls	r1, r1, #3
 8023b70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8023b74:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023b78:	430b      	orrs	r3, r1
 8023b7a:	1c79      	adds	r1, r7, #1
 8023b7c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8023b80:	00d2      	lsls	r2, r2, #3
 8023b82:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8023b86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023b8a:	431a      	orrs	r2, r3
 8023b8c:	9b03      	ldr	r3, [sp, #12]
 8023b8e:	801a      	strh	r2, [r3, #0]
 8023b90:	b005      	add	sp, #20
 8023b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023b96:	f04f 0c00 	mov.w	ip, #0
 8023b9a:	4664      	mov	r4, ip
 8023b9c:	e6e5      	b.n	802396a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8023b9e:	2300      	movs	r3, #0
 8023ba0:	469c      	mov	ip, r3
 8023ba2:	461a      	mov	r2, r3
 8023ba4:	461c      	mov	r4, r3
 8023ba6:	e707      	b.n	80239b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023ba8:	2300      	movs	r3, #0
 8023baa:	461a      	mov	r2, r3
 8023bac:	e704      	b.n	80239b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023bae:	460b      	mov	r3, r1
 8023bb0:	460a      	mov	r2, r1
 8023bb2:	e701      	b.n	80239b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023bb4:	2500      	movs	r5, #0
 8023bb6:	46ab      	mov	fp, r5
 8023bb8:	e72f      	b.n	8023a1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023bba:	2700      	movs	r7, #0
 8023bbc:	463d      	mov	r5, r7
 8023bbe:	4638      	mov	r0, r7
 8023bc0:	46bb      	mov	fp, r7
 8023bc2:	e754      	b.n	8023a6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023bc4:	4677      	mov	r7, lr
 8023bc6:	4675      	mov	r5, lr
 8023bc8:	4670      	mov	r0, lr
 8023bca:	46f3      	mov	fp, lr
 8023bcc:	e74f      	b.n	8023a6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023bce:	2700      	movs	r7, #0
 8023bd0:	4638      	mov	r0, r7
 8023bd2:	e74c      	b.n	8023a6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023bd4:	460f      	mov	r7, r1
 8023bd6:	4608      	mov	r0, r1
 8023bd8:	e749      	b.n	8023a6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023bdc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023bdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023be0:	b093      	sub	sp, #76	; 0x4c
 8023be2:	9210      	str	r2, [sp, #64]	; 0x40
 8023be4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8023be6:	910e      	str	r1, [sp, #56]	; 0x38
 8023be8:	9306      	str	r3, [sp, #24]
 8023bea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8023bee:	9011      	str	r0, [sp, #68]	; 0x44
 8023bf0:	6850      	ldr	r0, [r2, #4]
 8023bf2:	6812      	ldr	r2, [r2, #0]
 8023bf4:	fb00 1303 	mla	r3, r0, r3, r1
 8023bf8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023bfc:	9307      	str	r3, [sp, #28]
 8023bfe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c00:	681b      	ldr	r3, [r3, #0]
 8023c02:	9308      	str	r3, [sp, #32]
 8023c04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c06:	685b      	ldr	r3, [r3, #4]
 8023c08:	9309      	str	r3, [sp, #36]	; 0x24
 8023c0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023c0c:	2b00      	cmp	r3, #0
 8023c0e:	dc03      	bgt.n	8023c18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023c10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023c12:	2b00      	cmp	r3, #0
 8023c14:	f340 83b4 	ble.w	8024380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023c18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c1e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023c22:	1e48      	subs	r0, r1, #1
 8023c24:	1e55      	subs	r5, r2, #1
 8023c26:	9b06      	ldr	r3, [sp, #24]
 8023c28:	2b00      	cmp	r3, #0
 8023c2a:	f340 8163 	ble.w	8023ef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8023c2e:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8023c30:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023c32:	1436      	asrs	r6, r6, #16
 8023c34:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023c38:	d406      	bmi.n	8023c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023c3a:	4286      	cmp	r6, r0
 8023c3c:	da04      	bge.n	8023c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023c3e:	2b00      	cmp	r3, #0
 8023c40:	db02      	blt.n	8023c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023c42:	42ab      	cmp	r3, r5
 8023c44:	f2c0 8157 	blt.w	8023ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8023c48:	3601      	adds	r6, #1
 8023c4a:	f100 8144 	bmi.w	8023ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023c4e:	42b1      	cmp	r1, r6
 8023c50:	f2c0 8141 	blt.w	8023ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023c54:	3301      	adds	r3, #1
 8023c56:	f100 813e 	bmi.w	8023ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023c5a:	429a      	cmp	r2, r3
 8023c5c:	f2c0 813b 	blt.w	8023ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8023c60:	9b06      	ldr	r3, [sp, #24]
 8023c62:	9f07      	ldr	r7, [sp, #28]
 8023c64:	930f      	str	r3, [sp, #60]	; 0x3c
 8023c66:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023c6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023c6c:	2b00      	cmp	r3, #0
 8023c6e:	f340 8164 	ble.w	8023f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8023c72:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023c74:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023c76:	1418      	asrs	r0, r3, #16
 8023c78:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023c7a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8023c7e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8023c80:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8023c84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8023c86:	142d      	asrs	r5, r5, #16
 8023c88:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8023c8c:	f100 81ee 	bmi.w	802406c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023c90:	f102 3eff 	add.w	lr, r2, #4294967295
 8023c94:	4575      	cmp	r5, lr
 8023c96:	f280 81e9 	bge.w	802406c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023c9a:	2800      	cmp	r0, #0
 8023c9c:	f2c0 81e6 	blt.w	802406c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023ca0:	f103 3eff 	add.w	lr, r3, #4294967295
 8023ca4:	4570      	cmp	r0, lr
 8023ca6:	f280 81e1 	bge.w	802406c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8023caa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023cac:	b212      	sxth	r2, r2
 8023cae:	fb00 5002 	mla	r0, r0, r2, r5
 8023cb2:	fa1f fe81 	uxth.w	lr, r1
 8023cb6:	eb03 0a00 	add.w	sl, r3, r0
 8023cba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023cbe:	f813 9000 	ldrb.w	r9, [r3, r0]
 8023cc2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023cc6:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8023cca:	b29b      	uxth	r3, r3
 8023ccc:	f1bc 0f00 	cmp.w	ip, #0
 8023cd0:	f000 8179 	beq.w	8023fc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8023cd4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023cd8:	940a      	str	r4, [sp, #40]	; 0x28
 8023cda:	eb0a 0b02 	add.w	fp, sl, r2
 8023cde:	fa1f fa8c 	uxth.w	sl, ip
 8023ce2:	fb0a fe0e 	mul.w	lr, sl, lr
 8023ce6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8023cea:	fa1f fa8a 	uxth.w	sl, sl
 8023cee:	eba5 050e 	sub.w	r5, r5, lr
 8023cf2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023cf6:	940b      	str	r4, [sp, #44]	; 0x2c
 8023cf8:	eba3 030a 	sub.w	r3, r3, sl
 8023cfc:	b2ad      	uxth	r5, r5
 8023cfe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023d00:	b29b      	uxth	r3, r3
 8023d02:	fb08 f505 	mul.w	r5, r8, r5
 8023d06:	fb09 5303 	mla	r3, r9, r3, r5
 8023d0a:	fb0a 3304 	mla	r3, sl, r4, r3
 8023d0e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023d10:	fb0e 3304 	mla	r3, lr, r4, r3
 8023d14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023d18:	2b00      	cmp	r3, #0
 8023d1a:	f000 80cf 	beq.w	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8023d1e:	9c08      	ldr	r4, [sp, #32]
 8023d20:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8023d24:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023d28:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023d2c:	f000 8150 	beq.w	8023fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8023d30:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023d34:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023d38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023d3c:	fb09 f000 	mul.w	r0, r9, r0
 8023d40:	fb0a fe0e 	mul.w	lr, sl, lr
 8023d44:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8023d48:	f100 0b20 	add.w	fp, r0, #32
 8023d4c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023d50:	44ce      	add	lr, r9
 8023d52:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8023d56:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023d5a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023d5e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8023d62:	ea4e 0909 	orr.w	r9, lr, r9
 8023d66:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8023d6a:	8868      	ldrh	r0, [r5, #2]
 8023d6c:	d019      	beq.n	8023da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8023d6e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8023d72:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023d76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023d7a:	fb08 f800 	mul.w	r8, r8, r0
 8023d7e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023d82:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8023d86:	f108 0b20 	add.w	fp, r8, #32
 8023d8a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8023d8e:	4486      	add	lr, r0
 8023d90:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8023d94:	0a00      	lsrs	r0, r0, #8
 8023d96:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8023d9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023d9e:	ea4e 0000 	orr.w	r0, lr, r0
 8023da2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023da6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023daa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023dae:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023db2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023db6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023dba:	ea4e 0909 	orr.w	r9, lr, r9
 8023dbe:	ea4a 0000 	orr.w	r0, sl, r0
 8023dc2:	f1bc 0f00 	cmp.w	ip, #0
 8023dc6:	f000 8105 	beq.w	8023fd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023dca:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8023dce:	3a01      	subs	r2, #1
 8023dd0:	0052      	lsls	r2, r2, #1
 8023dd2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8023dd4:	3202      	adds	r2, #2
 8023dd6:	2cff      	cmp	r4, #255	; 0xff
 8023dd8:	eb05 0e02 	add.w	lr, r5, r2
 8023ddc:	5aaa      	ldrh	r2, [r5, r2]
 8023dde:	d018      	beq.n	8023e12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023de0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8023de4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023de8:	fb04 fa02 	mul.w	sl, r4, r2
 8023dec:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023df0:	fb08 f805 	mul.w	r8, r8, r5
 8023df4:	f10a 0520 	add.w	r5, sl, #32
 8023df8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8023dfc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023e00:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023e04:	4442      	add	r2, r8
 8023e06:	0a2d      	lsrs	r5, r5, #8
 8023e08:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8023e0c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e10:	432a      	orrs	r2, r5
 8023e12:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8023e14:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023e18:	2cff      	cmp	r4, #255	; 0xff
 8023e1a:	d01a      	beq.n	8023e52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8023e1c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8023e20:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023e24:	fb04 fa05 	mul.w	sl, r4, r5
 8023e28:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023e2c:	fb08 f80e 	mul.w	r8, r8, lr
 8023e30:	f10a 0e20 	add.w	lr, sl, #32
 8023e34:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023e38:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8023e3c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8023e40:	4445      	add	r5, r8
 8023e42:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023e46:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8023e4a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8023e4e:	ea45 050e 	orr.w	r5, r5, lr
 8023e52:	fb1c fe01 	smulbb	lr, ip, r1
 8023e56:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8023e5a:	f1cc 0810 	rsb	r8, ip, #16
 8023e5e:	eba8 0801 	sub.w	r8, r8, r1
 8023e62:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8023e66:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8023e6a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8023e6e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8023e72:	4341      	muls	r1, r0
 8023e74:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8023e78:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8023e7c:	ea4a 0202 	orr.w	r2, sl, r2
 8023e80:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8023e84:	fb09 1108 	mla	r1, r9, r8, r1
 8023e88:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023e8c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8023e90:	fb0c 1102 	mla	r1, ip, r2, r1
 8023e94:	ea4b 0505 	orr.w	r5, fp, r5
 8023e98:	fb0e 1e05 	mla	lr, lr, r5, r1
 8023e9c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023ea0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023ea4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023ea8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8023eac:	ea42 0e0e 	orr.w	lr, r2, lr
 8023eb0:	fa1f f28e 	uxth.w	r2, lr
 8023eb4:	2bff      	cmp	r3, #255	; 0xff
 8023eb6:	f040 80a1 	bne.w	8023ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8023eba:	803a      	strh	r2, [r7, #0]
 8023ebc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ebe:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8023ec0:	4413      	add	r3, r2
 8023ec2:	931d      	str	r3, [sp, #116]	; 0x74
 8023ec4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8023ec6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ec8:	441a      	add	r2, r3
 8023eca:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023ecc:	921e      	str	r2, [sp, #120]	; 0x78
 8023ece:	3b01      	subs	r3, #1
 8023ed0:	3702      	adds	r7, #2
 8023ed2:	930f      	str	r3, [sp, #60]	; 0x3c
 8023ed4:	e6c9      	b.n	8023c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023ed6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8023ed8:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8023eda:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8023edc:	4433      	add	r3, r6
 8023ede:	931d      	str	r3, [sp, #116]	; 0x74
 8023ee0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023ee2:	441c      	add	r4, r3
 8023ee4:	9b06      	ldr	r3, [sp, #24]
 8023ee6:	941e      	str	r4, [sp, #120]	; 0x78
 8023ee8:	3b01      	subs	r3, #1
 8023eea:	9306      	str	r3, [sp, #24]
 8023eec:	9b07      	ldr	r3, [sp, #28]
 8023eee:	3302      	adds	r3, #2
 8023ef0:	9307      	str	r3, [sp, #28]
 8023ef2:	e698      	b.n	8023c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023ef4:	d028      	beq.n	8023f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8023ef6:	9b06      	ldr	r3, [sp, #24]
 8023ef8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8023efa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8023efc:	3b01      	subs	r3, #1
 8023efe:	fb00 5003 	mla	r0, r0, r3, r5
 8023f02:	1400      	asrs	r0, r0, #16
 8023f04:	f53f aeac 	bmi.w	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023f08:	3901      	subs	r1, #1
 8023f0a:	4288      	cmp	r0, r1
 8023f0c:	f6bf aea8 	bge.w	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023f10:	9920      	ldr	r1, [sp, #128]	; 0x80
 8023f12:	981e      	ldr	r0, [sp, #120]	; 0x78
 8023f14:	fb01 0303 	mla	r3, r1, r3, r0
 8023f18:	141b      	asrs	r3, r3, #16
 8023f1a:	f53f aea1 	bmi.w	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023f1e:	3a01      	subs	r2, #1
 8023f20:	4293      	cmp	r3, r2
 8023f22:	f6bf ae9d 	bge.w	8023c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023f26:	9b06      	ldr	r3, [sp, #24]
 8023f28:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023f2c:	930f      	str	r3, [sp, #60]	; 0x3c
 8023f2e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8023f32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8023f34:	2b00      	cmp	r3, #0
 8023f36:	f300 80b6 	bgt.w	80240a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8023f3a:	9b06      	ldr	r3, [sp, #24]
 8023f3c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023f40:	9b07      	ldr	r3, [sp, #28]
 8023f42:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023f46:	9307      	str	r3, [sp, #28]
 8023f48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023f4a:	2b00      	cmp	r3, #0
 8023f4c:	f340 8218 	ble.w	8024380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8023f50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023f54:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023f58:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023f5c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023f62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023f66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023f6a:	eef0 6a62 	vmov.f32	s13, s5
 8023f6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023f76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023f7a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8023f7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023f82:	eef0 6a43 	vmov.f32	s13, s6
 8023f86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023f8a:	ee12 2a90 	vmov	r2, s5
 8023f8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023f92:	fb92 f3f3 	sdiv	r3, r2, r3
 8023f96:	ee13 2a10 	vmov	r2, s6
 8023f9a:	931f      	str	r3, [sp, #124]	; 0x7c
 8023f9c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023f9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023fa2:	9320      	str	r3, [sp, #128]	; 0x80
 8023fa4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023fa6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023fa8:	3b01      	subs	r3, #1
 8023faa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023fae:	930e      	str	r3, [sp, #56]	; 0x38
 8023fb0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023fb2:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8023fb6:	bf08      	it	eq
 8023fb8:	4613      	moveq	r3, r2
 8023fba:	9306      	str	r3, [sp, #24]
 8023fbc:	eeb0 3a67 	vmov.f32	s6, s15
 8023fc0:	eef0 2a47 	vmov.f32	s5, s14
 8023fc4:	e621      	b.n	8023c0a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023fc6:	fb08 f505 	mul.w	r5, r8, r5
 8023fca:	fb09 5303 	mla	r3, r9, r3, r5
 8023fce:	e6a1      	b.n	8023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023fd0:	4681      	mov	r9, r0
 8023fd2:	e6c8      	b.n	8023d66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023fd4:	f1c1 0210 	rsb	r2, r1, #16
 8023fd8:	4341      	muls	r1, r0
 8023fda:	fb09 1902 	mla	r9, r9, r2, r1
 8023fde:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023fe2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023fe6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023fea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fee:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8023ff2:	ea42 0909 	orr.w	r9, r2, r9
 8023ff6:	fa1f f289 	uxth.w	r2, r9
 8023ffa:	e75b      	b.n	8023eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8023ffc:	f8b7 c000 	ldrh.w	ip, [r7]
 8024000:	43db      	mvns	r3, r3
 8024002:	ea4f 202c 	mov.w	r0, ip, asr #8
 8024006:	fa5f fe83 	uxtb.w	lr, r3
 802400a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802400e:	fb00 f00e 	mul.w	r0, r0, lr
 8024012:	1c41      	adds	r1, r0, #1
 8024014:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024018:	1211      	asrs	r1, r2, #8
 802401a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802401e:	f021 0107 	bic.w	r1, r1, #7
 8024022:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8024026:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802402a:	48d7      	ldr	r0, [pc, #860]	; (8024388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802402c:	fb05 f50e 	mul.w	r5, r5, lr
 8024030:	b2c9      	uxtb	r1, r1
 8024032:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8024036:	1c69      	adds	r1, r5, #1
 8024038:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802403c:	10d1      	asrs	r1, r2, #3
 802403e:	f021 0103 	bic.w	r1, r1, #3
 8024042:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8024046:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802404a:	b2db      	uxtb	r3, r3
 802404c:	00c9      	lsls	r1, r1, #3
 802404e:	fb03 f30e 	mul.w	r3, r3, lr
 8024052:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024056:	4301      	orrs	r1, r0
 8024058:	1c58      	adds	r0, r3, #1
 802405a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802405e:	00d2      	lsls	r2, r2, #3
 8024060:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8024064:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024068:	430a      	orrs	r2, r1
 802406a:	e726      	b.n	8023eba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802406c:	f115 0e01 	adds.w	lr, r5, #1
 8024070:	f53f af24 	bmi.w	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024074:	4572      	cmp	r2, lr
 8024076:	f6ff af21 	blt.w	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802407a:	f110 0e01 	adds.w	lr, r0, #1
 802407e:	f53f af1d 	bmi.w	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024082:	4573      	cmp	r3, lr
 8024084:	f6ff af1a 	blt.w	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8024088:	b21b      	sxth	r3, r3
 802408a:	b212      	sxth	r2, r2
 802408c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8024090:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8024094:	9301      	str	r3, [sp, #4]
 8024096:	9200      	str	r2, [sp, #0]
 8024098:	4639      	mov	r1, r7
 802409a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802409e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80240a0:	f7ff fc24 	bl	80238ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80240a4:	e70a      	b.n	8023ebc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80240a6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80240a8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80240ac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80240ae:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80240b2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240b8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80240ba:	141f      	asrs	r7, r3, #16
 80240bc:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80240be:	141b      	asrs	r3, r3, #16
 80240c0:	fb01 3707 	mla	r7, r1, r7, r3
 80240c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80240c6:	fa1f fc82 	uxth.w	ip, r2
 80240ca:	eb03 0a07 	add.w	sl, r3, r7
 80240ce:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80240d2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80240d6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80240da:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80240de:	b29b      	uxth	r3, r3
 80240e0:	2d00      	cmp	r5, #0
 80240e2:	f000 80fe 	beq.w	80242e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80240e6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80240ea:	940c      	str	r4, [sp, #48]	; 0x30
 80240ec:	eb0a 0b01 	add.w	fp, sl, r1
 80240f0:	fa1f fa85 	uxth.w	sl, r5
 80240f4:	fb0a fc0c 	mul.w	ip, sl, ip
 80240f8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80240fc:	fa1f fa8a 	uxth.w	sl, sl
 8024100:	eba0 000c 	sub.w	r0, r0, ip
 8024104:	eba3 030a 	sub.w	r3, r3, sl
 8024108:	b280      	uxth	r0, r0
 802410a:	fb08 f000 	mul.w	r0, r8, r0
 802410e:	b29b      	uxth	r3, r3
 8024110:	fb09 0303 	mla	r3, r9, r3, r0
 8024114:	980c      	ldr	r0, [sp, #48]	; 0x30
 8024116:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802411a:	940d      	str	r4, [sp, #52]	; 0x34
 802411c:	fb0a 3300 	mla	r3, sl, r0, r3
 8024120:	fb0c 3304 	mla	r3, ip, r4, r3
 8024124:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024128:	2b00      	cmp	r3, #0
 802412a:	f000 80cc 	beq.w	80242c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802412e:	9808      	ldr	r0, [sp, #32]
 8024130:	9c08      	ldr	r4, [sp, #32]
 8024132:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024136:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802413a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802413e:	f000 80d5 	beq.w	80242ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8024142:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024146:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802414a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802414e:	fb09 f707 	mul.w	r7, r9, r7
 8024152:	fb0a fc0c 	mul.w	ip, sl, ip
 8024156:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802415a:	f107 0b20 	add.w	fp, r7, #32
 802415e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8024162:	44cc      	add	ip, r9
 8024164:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8024168:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802416c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8024170:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024174:	ea4c 0909 	orr.w	r9, ip, r9
 8024178:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802417c:	8847      	ldrh	r7, [r0, #2]
 802417e:	d019      	beq.n	80241b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8024180:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8024184:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8024188:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802418c:	fb08 f807 	mul.w	r8, r8, r7
 8024190:	fb0a fc0c 	mul.w	ip, sl, ip
 8024194:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8024198:	f108 0b20 	add.w	fp, r8, #32
 802419c:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80241a0:	44bc      	add	ip, r7
 80241a2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80241a6:	0a3f      	lsrs	r7, r7, #8
 80241a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80241ac:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80241b0:	ea4c 0707 	orr.w	r7, ip, r7
 80241b4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80241b8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80241bc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80241c0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80241c4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80241c8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80241cc:	ea4c 0909 	orr.w	r9, ip, r9
 80241d0:	ea4a 0707 	orr.w	r7, sl, r7
 80241d4:	2d00      	cmp	r5, #0
 80241d6:	f000 808b 	beq.w	80242f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80241da:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80241de:	3901      	subs	r1, #1
 80241e0:	0049      	lsls	r1, r1, #1
 80241e2:	3102      	adds	r1, #2
 80241e4:	eb00 0c01 	add.w	ip, r0, r1
 80241e8:	5a41      	ldrh	r1, [r0, r1]
 80241ea:	980c      	ldr	r0, [sp, #48]	; 0x30
 80241ec:	28ff      	cmp	r0, #255	; 0xff
 80241ee:	d019      	beq.n	8024224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80241f0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80241f2:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80241f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80241fa:	fb04 fa01 	mul.w	sl, r4, r1
 80241fe:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8024202:	fb08 f800 	mul.w	r8, r8, r0
 8024206:	f10a 0020 	add.w	r0, sl, #32
 802420a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802420e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8024212:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024216:	4441      	add	r1, r8
 8024218:	0a00      	lsrs	r0, r0, #8
 802421a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802421e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024222:	4301      	orrs	r1, r0
 8024224:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8024226:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802422a:	2cff      	cmp	r4, #255	; 0xff
 802422c:	d01a      	beq.n	8024264 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802422e:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8024232:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024236:	fb04 fa00 	mul.w	sl, r4, r0
 802423a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802423e:	fb08 f80c 	mul.w	r8, r8, ip
 8024242:	f10a 0c20 	add.w	ip, sl, #32
 8024246:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802424a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802424e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8024252:	4440      	add	r0, r8
 8024254:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024258:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802425c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024260:	ea40 000c 	orr.w	r0, r0, ip
 8024264:	fb15 fc02 	smulbb	ip, r5, r2
 8024268:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802426c:	f1c5 0810 	rsb	r8, r5, #16
 8024270:	eba8 0802 	sub.w	r8, r8, r2
 8024274:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024278:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802427c:	437a      	muls	r2, r7
 802427e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024282:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8024286:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802428a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802428e:	fb09 2208 	mla	r2, r9, r8, r2
 8024292:	ea4a 0101 	orr.w	r1, sl, r1
 8024296:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802429a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802429e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80242a2:	fb05 2201 	mla	r2, r5, r1, r2
 80242a6:	ea4b 0000 	orr.w	r0, fp, r0
 80242aa:	fb0c 2200 	mla	r2, ip, r0, r2
 80242ae:	0d57      	lsrs	r7, r2, #21
 80242b0:	0952      	lsrs	r2, r2, #5
 80242b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80242b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80242ba:	433a      	orrs	r2, r7
 80242bc:	2bff      	cmp	r3, #255	; 0xff
 80242be:	b292      	uxth	r2, r2
 80242c0:	d127      	bne.n	8024312 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80242c2:	f8ae 2000 	strh.w	r2, [lr]
 80242c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80242c8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80242ca:	4413      	add	r3, r2
 80242cc:	931d      	str	r3, [sp, #116]	; 0x74
 80242ce:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80242d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80242d2:	441a      	add	r2, r3
 80242d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80242d6:	921e      	str	r2, [sp, #120]	; 0x78
 80242d8:	3b01      	subs	r3, #1
 80242da:	f10e 0e02 	add.w	lr, lr, #2
 80242de:	930f      	str	r3, [sp, #60]	; 0x3c
 80242e0:	e627      	b.n	8023f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80242e2:	fb08 f000 	mul.w	r0, r8, r0
 80242e6:	fb09 0303 	mla	r3, r9, r3, r0
 80242ea:	e71b      	b.n	8024124 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80242ec:	46b9      	mov	r9, r7
 80242ee:	e743      	b.n	8024178 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80242f0:	f1c2 0110 	rsb	r1, r2, #16
 80242f4:	437a      	muls	r2, r7
 80242f6:	fb09 2901 	mla	r9, r9, r1, r2
 80242fa:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80242fe:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8024302:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8024306:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802430a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802430e:	4302      	orrs	r2, r0
 8024310:	e7d4      	b.n	80242bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8024312:	f8be 7000 	ldrh.w	r7, [lr]
 8024316:	4c1c      	ldr	r4, [pc, #112]	; (8024388 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8024318:	43db      	mvns	r3, r3
 802431a:	1238      	asrs	r0, r7, #8
 802431c:	fa5f fc83 	uxtb.w	ip, r3
 8024320:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024324:	10fd      	asrs	r5, r7, #3
 8024326:	fb00 f00c 	mul.w	r0, r0, ip
 802432a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802432e:	fb05 f10c 	mul.w	r1, r5, ip
 8024332:	1c45      	adds	r5, r0, #1
 8024334:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024338:	1215      	asrs	r5, r2, #8
 802433a:	f025 0507 	bic.w	r5, r5, #7
 802433e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8024342:	1c4d      	adds	r5, r1, #1
 8024344:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8024348:	10d1      	asrs	r1, r2, #3
 802434a:	f021 0103 	bic.w	r1, r1, #3
 802434e:	00fb      	lsls	r3, r7, #3
 8024350:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8024354:	b2db      	uxtb	r3, r3
 8024356:	b2c0      	uxtb	r0, r0
 8024358:	00c9      	lsls	r1, r1, #3
 802435a:	fb03 f30c 	mul.w	r3, r3, ip
 802435e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024362:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8024366:	4308      	orrs	r0, r1
 8024368:	1c59      	adds	r1, r3, #1
 802436a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802436e:	00d2      	lsls	r2, r2, #3
 8024370:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024374:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8024378:	4318      	orrs	r0, r3
 802437a:	f8ae 0000 	strh.w	r0, [lr]
 802437e:	e7a2      	b.n	80242c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8024380:	b013      	add	sp, #76	; 0x4c
 8024382:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024386:	bf00      	nop
 8024388:	fffff800 	.word	0xfffff800

0802438c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802438c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024390:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8024394:	fb05 4c03 	mla	ip, r5, r3, r4
 8024398:	2d00      	cmp	r5, #0
 802439a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802439e:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80243a2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80243a6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80243aa:	8808      	ldrh	r0, [r1, #0]
 80243ac:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80243b0:	f2c0 80a7 	blt.w	8024502 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80243b4:	45aa      	cmp	sl, r5
 80243b6:	f340 80a4 	ble.w	8024502 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80243ba:	2c00      	cmp	r4, #0
 80243bc:	f2c0 809f 	blt.w	80244fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80243c0:	42a3      	cmp	r3, r4
 80243c2:	f340 809c 	ble.w	80244fe <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80243c6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80243ca:	1c62      	adds	r2, r4, #1
 80243cc:	f100 809c 	bmi.w	8024508 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80243d0:	4293      	cmp	r3, r2
 80243d2:	f340 8099 	ble.w	8024508 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80243d6:	f1b9 0f00 	cmp.w	r9, #0
 80243da:	f000 8095 	beq.w	8024508 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80243de:	f8be c002 	ldrh.w	ip, [lr, #2]
 80243e2:	3501      	adds	r5, #1
 80243e4:	f100 8094 	bmi.w	8024510 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80243e8:	45aa      	cmp	sl, r5
 80243ea:	f340 8091 	ble.w	8024510 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80243ee:	2f00      	cmp	r7, #0
 80243f0:	f000 808e 	beq.w	8024510 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80243f4:	2c00      	cmp	r4, #0
 80243f6:	f2c0 8089 	blt.w	802450c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80243fa:	42a3      	cmp	r3, r4
 80243fc:	f340 8086 	ble.w	802450c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8024400:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8024404:	3401      	adds	r4, #1
 8024406:	f100 8086 	bmi.w	8024516 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802440a:	42a3      	cmp	r3, r4
 802440c:	f340 8083 	ble.w	8024516 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024410:	f1b9 0f00 	cmp.w	r9, #0
 8024414:	d07f      	beq.n	8024516 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8024416:	3301      	adds	r3, #1
 8024418:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802441c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8024420:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024424:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8024428:	fb19 fe07 	smulbb	lr, r9, r7
 802442c:	ea44 0808 	orr.w	r8, r4, r8
 8024430:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8024434:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8024438:	f1c7 0210 	rsb	r2, r7, #16
 802443c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8024440:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024444:	ea44 0c0c 	orr.w	ip, r4, ip
 8024448:	eba2 0209 	sub.w	r2, r2, r9
 802444c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8024450:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8024454:	fb04 f40c 	mul.w	r4, r4, ip
 8024458:	fb02 4808 	mla	r8, r2, r8, r4
 802445c:	041a      	lsls	r2, r3, #16
 802445e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024462:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024466:	4313      	orrs	r3, r2
 8024468:	042a      	lsls	r2, r5, #16
 802446a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802446e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8024472:	fb0e 8303 	mla	r3, lr, r3, r8
 8024476:	432a      	orrs	r2, r5
 8024478:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802447c:	fb07 3202 	mla	r2, r7, r2, r3
 8024480:	0d53      	lsrs	r3, r2, #21
 8024482:	0952      	lsrs	r2, r2, #5
 8024484:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024488:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802448c:	431a      	orrs	r2, r3
 802448e:	b293      	uxth	r3, r2
 8024490:	b2b4      	uxth	r4, r6
 8024492:	1202      	asrs	r2, r0, #8
 8024494:	43f6      	mvns	r6, r6
 8024496:	b2f6      	uxtb	r6, r6
 8024498:	121d      	asrs	r5, r3, #8
 802449a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802449e:	fb12 f206 	smulbb	r2, r2, r6
 80244a2:	10c7      	asrs	r7, r0, #3
 80244a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80244a8:	00c0      	lsls	r0, r0, #3
 80244aa:	fb05 2504 	mla	r5, r5, r4, r2
 80244ae:	b2c0      	uxtb	r0, r0
 80244b0:	10da      	asrs	r2, r3, #3
 80244b2:	00db      	lsls	r3, r3, #3
 80244b4:	b2db      	uxtb	r3, r3
 80244b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80244ba:	fb10 f006 	smulbb	r0, r0, r6
 80244be:	b2ad      	uxth	r5, r5
 80244c0:	fb03 0004 	mla	r0, r3, r4, r0
 80244c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80244c8:	fb17 f706 	smulbb	r7, r7, r6
 80244cc:	b280      	uxth	r0, r0
 80244ce:	1c6b      	adds	r3, r5, #1
 80244d0:	fb02 7204 	mla	r2, r2, r4, r7
 80244d4:	b292      	uxth	r2, r2
 80244d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80244da:	1c43      	adds	r3, r0, #1
 80244dc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80244e0:	1c50      	adds	r0, r2, #1
 80244e2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80244e6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80244ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80244ee:	0952      	lsrs	r2, r2, #5
 80244f0:	432b      	orrs	r3, r5
 80244f2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80244f6:	4313      	orrs	r3, r2
 80244f8:	800b      	strh	r3, [r1, #0]
 80244fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80244fe:	4680      	mov	r8, r0
 8024500:	e763      	b.n	80243ca <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024502:	4684      	mov	ip, r0
 8024504:	4680      	mov	r8, r0
 8024506:	e76c      	b.n	80243e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024508:	4684      	mov	ip, r0
 802450a:	e76a      	b.n	80243e2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802450c:	4605      	mov	r5, r0
 802450e:	e779      	b.n	8024404 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024510:	4603      	mov	r3, r0
 8024512:	4605      	mov	r5, r0
 8024514:	e782      	b.n	802441c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024516:	4603      	mov	r3, r0
 8024518:	e780      	b.n	802441c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802451a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802451a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802451e:	b093      	sub	sp, #76	; 0x4c
 8024520:	461d      	mov	r5, r3
 8024522:	9210      	str	r2, [sp, #64]	; 0x40
 8024524:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8024526:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802452a:	920b      	str	r2, [sp, #44]	; 0x2c
 802452c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8024530:	910a      	str	r1, [sp, #40]	; 0x28
 8024532:	6859      	ldr	r1, [r3, #4]
 8024534:	681b      	ldr	r3, [r3, #0]
 8024536:	9011      	str	r0, [sp, #68]	; 0x44
 8024538:	fb01 2707 	mla	r7, r1, r7, r2
 802453c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8024540:	9307      	str	r3, [sp, #28]
 8024542:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024544:	681b      	ldr	r3, [r3, #0]
 8024546:	9309      	str	r3, [sp, #36]	; 0x24
 8024548:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802454a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802454e:	43db      	mvns	r3, r3
 8024550:	b2db      	uxtb	r3, r3
 8024552:	9308      	str	r3, [sp, #32]
 8024554:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024556:	2b00      	cmp	r3, #0
 8024558:	dc03      	bgt.n	8024562 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802455a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802455c:	2b00      	cmp	r3, #0
 802455e:	f340 8203 	ble.w	8024968 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024562:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024564:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024568:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802456c:	1e48      	subs	r0, r1, #1
 802456e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024572:	2d00      	cmp	r5, #0
 8024574:	f340 80da 	ble.w	802472c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8024578:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802457c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024580:	d406      	bmi.n	8024590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024582:	4586      	cmp	lr, r0
 8024584:	da04      	bge.n	8024590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8024586:	2b00      	cmp	r3, #0
 8024588:	db02      	blt.n	8024590 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802458a:	4563      	cmp	r3, ip
 802458c:	f2c0 80cf 	blt.w	802472e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8024590:	f11e 0e01 	adds.w	lr, lr, #1
 8024594:	f100 80c1 	bmi.w	802471a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024598:	4571      	cmp	r1, lr
 802459a:	f2c0 80be 	blt.w	802471a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802459e:	3301      	adds	r3, #1
 80245a0:	f100 80bb 	bmi.w	802471a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80245a4:	429a      	cmp	r2, r3
 80245a6:	f2c0 80b8 	blt.w	802471a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80245aa:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80245ae:	46a9      	mov	r9, r5
 80245b0:	f1b9 0f00 	cmp.w	r9, #0
 80245b4:	f340 80d8 	ble.w	8024768 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80245b8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80245ba:	1421      	asrs	r1, r4, #16
 80245bc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80245c0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80245c4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80245c8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80245cc:	f100 8111 	bmi.w	80247f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80245d0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80245d4:	4551      	cmp	r1, sl
 80245d6:	f280 810c 	bge.w	80247f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80245da:	2800      	cmp	r0, #0
 80245dc:	f2c0 8109 	blt.w	80247f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80245e0:	f103 3aff 	add.w	sl, r3, #4294967295
 80245e4:	4550      	cmp	r0, sl
 80245e6:	f280 8104 	bge.w	80247f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80245ea:	fa0f f38e 	sxth.w	r3, lr
 80245ee:	fb00 1103 	mla	r1, r0, r3, r1
 80245f2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80245f4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80245f8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80245fc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024600:	f1bc 0f00 	cmp.w	ip, #0
 8024604:	d007      	beq.n	8024616 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024606:	005b      	lsls	r3, r3, #1
 8024608:	eb0a 0003 	add.w	r0, sl, r3
 802460c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024610:	930c      	str	r3, [sp, #48]	; 0x30
 8024612:	8843      	ldrh	r3, [r0, #2]
 8024614:	930d      	str	r3, [sp, #52]	; 0x34
 8024616:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802461a:	fb12 f30c 	smulbb	r3, r2, ip
 802461e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8024622:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024626:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802462a:	10db      	asrs	r3, r3, #3
 802462c:	ea40 000e 	orr.w	r0, r0, lr
 8024630:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8024634:	f1cc 0e10 	rsb	lr, ip, #16
 8024638:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802463c:	ebae 0e02 	sub.w	lr, lr, r2
 8024640:	ea4a 0101 	orr.w	r1, sl, r1
 8024644:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024648:	4351      	muls	r1, r2
 802464a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802464c:	9f08      	ldr	r7, [sp, #32]
 802464e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024652:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024656:	0410      	lsls	r0, r2, #16
 8024658:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802465c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024660:	4310      	orrs	r0, r2
 8024662:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024664:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024666:	0412      	lsls	r2, r2, #16
 8024668:	fb03 e000 	mla	r0, r3, r0, lr
 802466c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024670:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024674:	ea42 020e 	orr.w	r2, r2, lr
 8024678:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802467c:	fb03 0302 	mla	r3, r3, r2, r0
 8024680:	0d5a      	lsrs	r2, r3, #21
 8024682:	095b      	lsrs	r3, r3, #5
 8024684:	f8b8 0000 	ldrh.w	r0, [r8]
 8024688:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802468c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024690:	4313      	orrs	r3, r2
 8024692:	b29b      	uxth	r3, r3
 8024694:	1201      	asrs	r1, r0, #8
 8024696:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802469a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802469e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80246a2:	fb11 f107 	smulbb	r1, r1, r7
 80246a6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80246aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80246ae:	00c0      	lsls	r0, r0, #3
 80246b0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80246b4:	b2c0      	uxtb	r0, r0
 80246b6:	10d9      	asrs	r1, r3, #3
 80246b8:	00db      	lsls	r3, r3, #3
 80246ba:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80246be:	b2db      	uxtb	r3, r3
 80246c0:	fb10 f007 	smulbb	r0, r0, r7
 80246c4:	fa1f fc8c 	uxth.w	ip, ip
 80246c8:	fb03 0302 	mla	r3, r3, r2, r0
 80246cc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80246d0:	fb1e fe07 	smulbb	lr, lr, r7
 80246d4:	fb01 e102 	mla	r1, r1, r2, lr
 80246d8:	b29a      	uxth	r2, r3
 80246da:	f10c 0301 	add.w	r3, ip, #1
 80246de:	b289      	uxth	r1, r1
 80246e0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80246e4:	1c53      	adds	r3, r2, #1
 80246e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80246ea:	1c4a      	adds	r2, r1, #1
 80246ec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80246f0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80246f4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80246f8:	0949      	lsrs	r1, r1, #5
 80246fa:	ea43 030c 	orr.w	r3, r3, ip
 80246fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024702:	430b      	orrs	r3, r1
 8024704:	f8a8 3000 	strh.w	r3, [r8]
 8024708:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802470a:	441c      	add	r4, r3
 802470c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802470e:	f108 0802 	add.w	r8, r8, #2
 8024712:	441e      	add	r6, r3
 8024714:	f109 39ff 	add.w	r9, r9, #4294967295
 8024718:	e74a      	b.n	80245b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802471a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802471c:	441c      	add	r4, r3
 802471e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024720:	441e      	add	r6, r3
 8024722:	9b07      	ldr	r3, [sp, #28]
 8024724:	3302      	adds	r3, #2
 8024726:	3d01      	subs	r5, #1
 8024728:	9307      	str	r3, [sp, #28]
 802472a:	e722      	b.n	8024572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802472c:	d022      	beq.n	8024774 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802472e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024730:	1e6b      	subs	r3, r5, #1
 8024732:	fb00 4003 	mla	r0, r0, r3, r4
 8024736:	1400      	asrs	r0, r0, #16
 8024738:	f53f af37 	bmi.w	80245aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802473c:	3901      	subs	r1, #1
 802473e:	4288      	cmp	r0, r1
 8024740:	f6bf af33 	bge.w	80245aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024744:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024746:	fb01 6303 	mla	r3, r1, r3, r6
 802474a:	141b      	asrs	r3, r3, #16
 802474c:	f53f af2d 	bmi.w	80245aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024750:	3a01      	subs	r2, #1
 8024752:	4293      	cmp	r3, r2
 8024754:	f6bf af29 	bge.w	80245aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8024758:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802475c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8024760:	46a8      	mov	r8, r5
 8024762:	f1b8 0f00 	cmp.w	r8, #0
 8024766:	dc5e      	bgt.n	8024826 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024768:	9b07      	ldr	r3, [sp, #28]
 802476a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802476e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024772:	9307      	str	r3, [sp, #28]
 8024774:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024776:	2b00      	cmp	r3, #0
 8024778:	f340 80f6 	ble.w	8024968 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802477c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024780:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024784:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024788:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802478a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802478e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024792:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024796:	eef0 6a62 	vmov.f32	s13, s5
 802479a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802479e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247a6:	ee16 4a90 	vmov	r4, s13
 80247aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247ae:	eef0 6a43 	vmov.f32	s13, s6
 80247b2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247b6:	ee12 2a90 	vmov	r2, s5
 80247ba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247be:	fb92 f3f3 	sdiv	r3, r2, r3
 80247c2:	ee13 2a10 	vmov	r2, s6
 80247c6:	931f      	str	r3, [sp, #124]	; 0x7c
 80247c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80247ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80247ce:	9320      	str	r3, [sp, #128]	; 0x80
 80247d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80247d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80247d4:	3b01      	subs	r3, #1
 80247d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247da:	930a      	str	r3, [sp, #40]	; 0x28
 80247dc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80247de:	ee16 6a90 	vmov	r6, s13
 80247e2:	bf14      	ite	ne
 80247e4:	461d      	movne	r5, r3
 80247e6:	4615      	moveq	r5, r2
 80247e8:	eeb0 3a67 	vmov.f32	s6, s15
 80247ec:	eef0 2a47 	vmov.f32	s5, s14
 80247f0:	e6b0      	b.n	8024554 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80247f2:	f111 0a01 	adds.w	sl, r1, #1
 80247f6:	d487      	bmi.n	8024708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80247f8:	45d6      	cmp	lr, sl
 80247fa:	db85      	blt.n	8024708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80247fc:	f110 0a01 	adds.w	sl, r0, #1
 8024800:	d482      	bmi.n	8024708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024802:	4553      	cmp	r3, sl
 8024804:	db80      	blt.n	8024708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024806:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8024808:	9101      	str	r1, [sp, #4]
 802480a:	b21b      	sxth	r3, r3
 802480c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8024810:	9300      	str	r3, [sp, #0]
 8024812:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024816:	fa0f f38e 	sxth.w	r3, lr
 802481a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802481c:	9811      	ldr	r0, [sp, #68]	; 0x44
 802481e:	4641      	mov	r1, r8
 8024820:	f7ff fdb4 	bl	802438c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024824:	e770      	b.n	8024708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024826:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024828:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802482a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802482e:	1430      	asrs	r0, r6, #16
 8024830:	1423      	asrs	r3, r4, #16
 8024832:	fb01 3000 	mla	r0, r1, r0, r3
 8024836:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024838:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802483c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8024840:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024844:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024848:	8858      	ldrh	r0, [r3, #2]
 802484a:	f1be 0f00 	cmp.w	lr, #0
 802484e:	d00b      	beq.n	8024868 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8024850:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8024854:	3901      	subs	r1, #1
 8024856:	0049      	lsls	r1, r1, #1
 8024858:	3102      	adds	r1, #2
 802485a:	eb03 0b01 	add.w	fp, r3, r1
 802485e:	5a5b      	ldrh	r3, [r3, r1]
 8024860:	930e      	str	r3, [sp, #56]	; 0x38
 8024862:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024866:	930f      	str	r3, [sp, #60]	; 0x3c
 8024868:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802486c:	fb12 f30e 	smulbb	r3, r2, lr
 8024870:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024874:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8024878:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802487c:	10db      	asrs	r3, r3, #3
 802487e:	ea41 010c 	orr.w	r1, r1, ip
 8024882:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024886:	f1ce 0c10 	rsb	ip, lr, #16
 802488a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802488e:	ebac 0c02 	sub.w	ip, ip, r2
 8024892:	ea4b 0000 	orr.w	r0, fp, r0
 8024896:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802489a:	4350      	muls	r0, r2
 802489c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802489e:	9f08      	ldr	r7, [sp, #32]
 80248a0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80248a4:	fb0c 0c01 	mla	ip, ip, r1, r0
 80248a8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80248ac:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 80248b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80248b2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80248b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80248b8:	0412      	lsls	r2, r2, #16
 80248ba:	ea4b 0101 	orr.w	r1, fp, r1
 80248be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80248c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80248c6:	fb03 c101 	mla	r1, r3, r1, ip
 80248ca:	4302      	orrs	r2, r0
 80248cc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80248d0:	fb03 1202 	mla	r2, r3, r2, r1
 80248d4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80248d8:	0952      	lsrs	r2, r2, #5
 80248da:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 80248de:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80248e2:	f8b9 2000 	ldrh.w	r2, [r9]
 80248e6:	ea4b 0303 	orr.w	r3, fp, r3
 80248ea:	b29b      	uxth	r3, r3
 80248ec:	1211      	asrs	r1, r2, #8
 80248ee:	1218      	asrs	r0, r3, #8
 80248f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80248f4:	fb11 f107 	smulbb	r1, r1, r7
 80248f8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80248fc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024900:	00d2      	lsls	r2, r2, #3
 8024902:	fb00 100a 	mla	r0, r0, sl, r1
 8024906:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802490a:	10d9      	asrs	r1, r3, #3
 802490c:	b2d2      	uxtb	r2, r2
 802490e:	00db      	lsls	r3, r3, #3
 8024910:	fb1c fc07 	smulbb	ip, ip, r7
 8024914:	fb12 f207 	smulbb	r2, r2, r7
 8024918:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802491c:	b2db      	uxtb	r3, r3
 802491e:	b280      	uxth	r0, r0
 8024920:	fb01 c10a 	mla	r1, r1, sl, ip
 8024924:	fb03 230a 	mla	r3, r3, sl, r2
 8024928:	b29b      	uxth	r3, r3
 802492a:	b289      	uxth	r1, r1
 802492c:	1c42      	adds	r2, r0, #1
 802492e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024932:	f101 0c01 	add.w	ip, r1, #1
 8024936:	1c5a      	adds	r2, r3, #1
 8024938:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802493c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8024940:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024942:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024946:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802494a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802494e:	4310      	orrs	r0, r2
 8024950:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024954:	441c      	add	r4, r3
 8024956:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024958:	ea40 000c 	orr.w	r0, r0, ip
 802495c:	f829 0b02 	strh.w	r0, [r9], #2
 8024960:	441e      	add	r6, r3
 8024962:	f108 38ff 	add.w	r8, r8, #4294967295
 8024966:	e6fc      	b.n	8024762 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8024968:	b013      	add	sp, #76	; 0x4c
 802496a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802496e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802496e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024972:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8024976:	fb0e 4703 	mla	r7, lr, r3, r4
 802497a:	f1be 0f00 	cmp.w	lr, #0
 802497e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8024982:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8024986:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802498a:	8808      	ldrh	r0, [r1, #0]
 802498c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8024990:	db60      	blt.n	8024a54 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024992:	45f1      	cmp	r9, lr
 8024994:	dd5e      	ble.n	8024a54 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8024996:	2c00      	cmp	r4, #0
 8024998:	db5a      	blt.n	8024a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802499a:	42a3      	cmp	r3, r4
 802499c:	dd58      	ble.n	8024a50 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802499e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 80249a2:	1c62      	adds	r2, r4, #1
 80249a4:	d459      	bmi.n	8024a5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80249a6:	4293      	cmp	r3, r2
 80249a8:	dd57      	ble.n	8024a5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80249aa:	2d00      	cmp	r5, #0
 80249ac:	d055      	beq.n	8024a5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 80249ae:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 80249b2:	f11e 0e01 	adds.w	lr, lr, #1
 80249b6:	d454      	bmi.n	8024a62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80249b8:	45f1      	cmp	r9, lr
 80249ba:	dd52      	ble.n	8024a62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80249bc:	2e00      	cmp	r6, #0
 80249be:	d050      	beq.n	8024a62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 80249c0:	2c00      	cmp	r4, #0
 80249c2:	db4c      	blt.n	8024a5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80249c4:	42a3      	cmp	r3, r4
 80249c6:	dd4a      	ble.n	8024a5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 80249c8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 80249cc:	3401      	adds	r4, #1
 80249ce:	d405      	bmi.n	80249dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80249d0:	42a3      	cmp	r3, r4
 80249d2:	dd03      	ble.n	80249dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80249d4:	b115      	cbz	r5, 80249dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80249d6:	3301      	adds	r3, #1
 80249d8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 80249dc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 80249e0:	fb15 f406 	smulbb	r4, r5, r6
 80249e4:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80249e8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 80249ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80249f0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 80249f4:	ea43 0c0c 	orr.w	ip, r3, ip
 80249f8:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80249fc:	f1c6 0310 	rsb	r3, r6, #16
 8024a00:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8024a04:	1b5b      	subs	r3, r3, r5
 8024a06:	ea4e 0707 	orr.w	r7, lr, r7
 8024a0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024a0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8024a12:	437d      	muls	r5, r7
 8024a14:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024a18:	0403      	lsls	r3, r0, #16
 8024a1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024a1e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024a22:	4318      	orrs	r0, r3
 8024a24:	0413      	lsls	r3, r2, #16
 8024a26:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8024a2a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024a2e:	4313      	orrs	r3, r2
 8024a30:	fb04 c000 	mla	r0, r4, r0, ip
 8024a34:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024a38:	fb06 0003 	mla	r0, r6, r3, r0
 8024a3c:	0d43      	lsrs	r3, r0, #21
 8024a3e:	0940      	lsrs	r0, r0, #5
 8024a40:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024a44:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024a48:	4318      	orrs	r0, r3
 8024a4a:	8008      	strh	r0, [r1, #0]
 8024a4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8024a50:	4684      	mov	ip, r0
 8024a52:	e7a6      	b.n	80249a2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8024a54:	4607      	mov	r7, r0
 8024a56:	4684      	mov	ip, r0
 8024a58:	e7ab      	b.n	80249b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024a5a:	4607      	mov	r7, r0
 8024a5c:	e7a9      	b.n	80249b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8024a5e:	4602      	mov	r2, r0
 8024a60:	e7b4      	b.n	80249cc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8024a62:	4602      	mov	r2, r0
 8024a64:	e7ba      	b.n	80249dc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08024a66 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024a66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024a6a:	b08f      	sub	sp, #60	; 0x3c
 8024a6c:	461d      	mov	r5, r3
 8024a6e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8024a70:	920c      	str	r2, [sp, #48]	; 0x30
 8024a72:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8024a76:	9107      	str	r1, [sp, #28]
 8024a78:	6859      	ldr	r1, [r3, #4]
 8024a7a:	681b      	ldr	r3, [r3, #0]
 8024a7c:	900d      	str	r0, [sp, #52]	; 0x34
 8024a7e:	fb01 2707 	mla	r7, r1, r7, r2
 8024a82:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8024a86:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024a88:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8024a8c:	f8d3 8000 	ldr.w	r8, [r3]
 8024a90:	9b07      	ldr	r3, [sp, #28]
 8024a92:	2b00      	cmp	r3, #0
 8024a94:	dc03      	bgt.n	8024a9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024a96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024a98:	2b00      	cmp	r3, #0
 8024a9a:	f340 8181 	ble.w	8024da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024a9e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024aa0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024aa4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024aa8:	1e48      	subs	r0, r1, #1
 8024aaa:	f102 3cff 	add.w	ip, r2, #4294967295
 8024aae:	2d00      	cmp	r5, #0
 8024ab0:	f340 809b 	ble.w	8024bea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024ab4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024ab8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024abc:	d406      	bmi.n	8024acc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024abe:	4586      	cmp	lr, r0
 8024ac0:	da04      	bge.n	8024acc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024ac2:	2b00      	cmp	r3, #0
 8024ac4:	db02      	blt.n	8024acc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024ac6:	4563      	cmp	r3, ip
 8024ac8:	f2c0 8090 	blt.w	8024bec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024acc:	f11e 0e01 	adds.w	lr, lr, #1
 8024ad0:	f100 8084 	bmi.w	8024bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024ad4:	4571      	cmp	r1, lr
 8024ad6:	f2c0 8081 	blt.w	8024bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024ada:	3301      	adds	r3, #1
 8024adc:	d47e      	bmi.n	8024bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024ade:	429a      	cmp	r2, r3
 8024ae0:	db7c      	blt.n	8024bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024ae2:	46aa      	mov	sl, r5
 8024ae4:	46b9      	mov	r9, r7
 8024ae6:	f1ba 0f00 	cmp.w	sl, #0
 8024aea:	f340 8099 	ble.w	8024c20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024aee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024af0:	1421      	asrs	r1, r4, #16
 8024af2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024af6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024afa:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024afe:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024b02:	f100 80d0 	bmi.w	8024ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024b06:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024b0a:	4559      	cmp	r1, fp
 8024b0c:	f280 80cb 	bge.w	8024ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024b10:	2800      	cmp	r0, #0
 8024b12:	f2c0 80c8 	blt.w	8024ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024b16:	f103 3bff 	add.w	fp, r3, #4294967295
 8024b1a:	4558      	cmp	r0, fp
 8024b1c:	f280 80c3 	bge.w	8024ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8024b20:	fa0f fe8e 	sxth.w	lr, lr
 8024b24:	fb00 110e 	mla	r1, r0, lr, r1
 8024b28:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024b2c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024b30:	8841      	ldrh	r1, [r0, #2]
 8024b32:	f1bc 0f00 	cmp.w	ip, #0
 8024b36:	d00b      	beq.n	8024b50 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8024b38:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8024b3c:	3b01      	subs	r3, #1
 8024b3e:	005b      	lsls	r3, r3, #1
 8024b40:	3302      	adds	r3, #2
 8024b42:	eb00 0e03 	add.w	lr, r0, r3
 8024b46:	5ac3      	ldrh	r3, [r0, r3]
 8024b48:	9308      	str	r3, [sp, #32]
 8024b4a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8024b4e:	9309      	str	r3, [sp, #36]	; 0x24
 8024b50:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8024b54:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b58:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8024b5c:	ea40 000b 	orr.w	r0, r0, fp
 8024b60:	fb12 f30c 	smulbb	r3, r2, ip
 8024b64:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024b68:	10db      	asrs	r3, r3, #3
 8024b6a:	f1cc 0e10 	rsb	lr, ip, #16
 8024b6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024b72:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024b76:	ebae 0e02 	sub.w	lr, lr, r2
 8024b7a:	ea4b 0101 	orr.w	r1, fp, r1
 8024b7e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024b82:	4351      	muls	r1, r2
 8024b84:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8024b86:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8024b8a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8024b8e:	0410      	lsls	r0, r2, #16
 8024b90:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024b94:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8024b98:	4310      	orrs	r0, r2
 8024b9a:	9a08      	ldr	r2, [sp, #32]
 8024b9c:	9908      	ldr	r1, [sp, #32]
 8024b9e:	0412      	lsls	r2, r2, #16
 8024ba0:	fb03 e000 	mla	r0, r3, r0, lr
 8024ba4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024ba8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8024bac:	ea42 020e 	orr.w	r2, r2, lr
 8024bb0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024bb4:	fb03 0302 	mla	r3, r3, r2, r0
 8024bb8:	0d5a      	lsrs	r2, r3, #21
 8024bba:	095b      	lsrs	r3, r3, #5
 8024bbc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024bc0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8024bc4:	4313      	orrs	r3, r2
 8024bc6:	f8a9 3000 	strh.w	r3, [r9]
 8024bca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024bcc:	441c      	add	r4, r3
 8024bce:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024bd0:	f109 0902 	add.w	r9, r9, #2
 8024bd4:	441e      	add	r6, r3
 8024bd6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024bda:	e784      	b.n	8024ae6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024bdc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024bde:	441c      	add	r4, r3
 8024be0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024be2:	3d01      	subs	r5, #1
 8024be4:	441e      	add	r6, r3
 8024be6:	3702      	adds	r7, #2
 8024be8:	e761      	b.n	8024aae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024bea:	d01d      	beq.n	8024c28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024bec:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8024bee:	1e6b      	subs	r3, r5, #1
 8024bf0:	fb00 4003 	mla	r0, r0, r3, r4
 8024bf4:	1400      	asrs	r0, r0, #16
 8024bf6:	f53f af74 	bmi.w	8024ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024bfa:	3901      	subs	r1, #1
 8024bfc:	4288      	cmp	r0, r1
 8024bfe:	f6bf af70 	bge.w	8024ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024c02:	991c      	ldr	r1, [sp, #112]	; 0x70
 8024c04:	fb01 6303 	mla	r3, r1, r3, r6
 8024c08:	141b      	asrs	r3, r3, #16
 8024c0a:	f53f af6a 	bmi.w	8024ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024c0e:	3a01      	subs	r2, #1
 8024c10:	4293      	cmp	r3, r2
 8024c12:	f6bf af66 	bge.w	8024ae2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024c16:	46a9      	mov	r9, r5
 8024c18:	46ba      	mov	sl, r7
 8024c1a:	f1b9 0f00 	cmp.w	r9, #0
 8024c1e:	dc5a      	bgt.n	8024cd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8024c20:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024c24:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8024c28:	9b07      	ldr	r3, [sp, #28]
 8024c2a:	2b00      	cmp	r3, #0
 8024c2c:	f340 80b8 	ble.w	8024da0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8024c30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024c34:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024c38:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024c3c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024c3e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024c42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024c46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024c4a:	eef0 6a62 	vmov.f32	s13, s5
 8024c4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024c52:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024c5a:	ee16 4a90 	vmov	r4, s13
 8024c5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024c62:	eef0 6a43 	vmov.f32	s13, s6
 8024c66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024c6a:	ee12 2a90 	vmov	r2, s5
 8024c6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024c72:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c76:	ee13 2a10 	vmov	r2, s6
 8024c7a:	931b      	str	r3, [sp, #108]	; 0x6c
 8024c7c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024c7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024c82:	931c      	str	r3, [sp, #112]	; 0x70
 8024c84:	9b07      	ldr	r3, [sp, #28]
 8024c86:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8024c88:	3b01      	subs	r3, #1
 8024c8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024c8e:	9307      	str	r3, [sp, #28]
 8024c90:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024c92:	ee16 6a90 	vmov	r6, s13
 8024c96:	bf14      	ite	ne
 8024c98:	461d      	movne	r5, r3
 8024c9a:	4615      	moveq	r5, r2
 8024c9c:	eeb0 3a67 	vmov.f32	s6, s15
 8024ca0:	eef0 2a47 	vmov.f32	s5, s14
 8024ca4:	e6f4      	b.n	8024a90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8024ca6:	f111 0b01 	adds.w	fp, r1, #1
 8024caa:	d48e      	bmi.n	8024bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024cac:	45de      	cmp	lr, fp
 8024cae:	db8c      	blt.n	8024bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024cb0:	f110 0b01 	adds.w	fp, r0, #1
 8024cb4:	d489      	bmi.n	8024bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024cb6:	455b      	cmp	r3, fp
 8024cb8:	db87      	blt.n	8024bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024cba:	b21b      	sxth	r3, r3
 8024cbc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024cc0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8024cc4:	9300      	str	r3, [sp, #0]
 8024cc6:	4642      	mov	r2, r8
 8024cc8:	fa0f f38e 	sxth.w	r3, lr
 8024ccc:	4649      	mov	r1, r9
 8024cce:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024cd0:	f7ff fe4d 	bl	802496e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8024cd4:	e779      	b.n	8024bca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024cd6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024cd8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8024cdc:	1420      	asrs	r0, r4, #16
 8024cde:	1431      	asrs	r1, r6, #16
 8024ce0:	fb03 0101 	mla	r1, r3, r1, r0
 8024ce4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024ce8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024cec:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8024cf0:	8841      	ldrh	r1, [r0, #2]
 8024cf2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024cf6:	f1be 0f00 	cmp.w	lr, #0
 8024cfa:	d00b      	beq.n	8024d14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024cfc:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8024d00:	3b01      	subs	r3, #1
 8024d02:	005b      	lsls	r3, r3, #1
 8024d04:	3302      	adds	r3, #2
 8024d06:	eb00 0b03 	add.w	fp, r0, r3
 8024d0a:	5ac3      	ldrh	r3, [r0, r3]
 8024d0c:	930a      	str	r3, [sp, #40]	; 0x28
 8024d0e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024d12:	930b      	str	r3, [sp, #44]	; 0x2c
 8024d14:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8024d18:	fb12 f30e 	smulbb	r3, r2, lr
 8024d1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8024d20:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8024d24:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8024d28:	10db      	asrs	r3, r3, #3
 8024d2a:	ea40 000c 	orr.w	r0, r0, ip
 8024d2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d32:	f1ce 0c10 	rsb	ip, lr, #16
 8024d36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8024d3a:	ebac 0c02 	sub.w	ip, ip, r2
 8024d3e:	ea4b 0101 	orr.w	r1, fp, r1
 8024d42:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024d46:	4351      	muls	r1, r2
 8024d48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024d4a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8024d4e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8024d52:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024d56:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8024d5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024d5c:	990a      	ldr	r1, [sp, #40]	; 0x28
 8024d5e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8024d62:	0412      	lsls	r2, r2, #16
 8024d64:	ea4b 0000 	orr.w	r0, fp, r0
 8024d68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8024d6c:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8024d70:	fb03 c000 	mla	r0, r3, r0, ip
 8024d74:	ea42 0b0b 	orr.w	fp, r2, fp
 8024d78:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024d7c:	fb03 000b 	mla	r0, r3, fp, r0
 8024d80:	0d43      	lsrs	r3, r0, #21
 8024d82:	0940      	lsrs	r0, r0, #5
 8024d84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024d88:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8024d8c:	4318      	orrs	r0, r3
 8024d8e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024d90:	f82a 0b02 	strh.w	r0, [sl], #2
 8024d94:	441c      	add	r4, r3
 8024d96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024d98:	f109 39ff 	add.w	r9, r9, #4294967295
 8024d9c:	441e      	add	r6, r3
 8024d9e:	e73c      	b.n	8024c1a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024da0:	b00f      	add	sp, #60	; 0x3c
 8024da2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8024da6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024daa:	b085      	sub	sp, #20
 8024dac:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8024db0:	9102      	str	r1, [sp, #8]
 8024db2:	2c00      	cmp	r4, #0
 8024db4:	fb04 7103 	mla	r1, r4, r3, r7
 8024db8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8024dbc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8024dc0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8024dc4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8024dc8:	f2c0 811b 	blt.w	8025002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024dcc:	45a6      	cmp	lr, r4
 8024dce:	f340 8118 	ble.w	8025002 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024dd2:	2f00      	cmp	r7, #0
 8024dd4:	f2c0 8113 	blt.w	8024ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024dd8:	42bb      	cmp	r3, r7
 8024dda:	f340 8110 	ble.w	8024ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024dde:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024de2:	1c7a      	adds	r2, r7, #1
 8024de4:	f100 8110 	bmi.w	8025008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024de8:	4293      	cmp	r3, r2
 8024dea:	f340 810d 	ble.w	8025008 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024dee:	2e00      	cmp	r6, #0
 8024df0:	f000 810c 	beq.w	802500c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8024df4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8024df8:	3401      	adds	r4, #1
 8024dfa:	f100 810b 	bmi.w	8025014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024dfe:	45a6      	cmp	lr, r4
 8024e00:	f340 8108 	ble.w	8025014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024e04:	2800      	cmp	r0, #0
 8024e06:	f000 8108 	beq.w	802501a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024e0a:	2f00      	cmp	r7, #0
 8024e0c:	f2c0 8100 	blt.w	8025010 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024e10:	42bb      	cmp	r3, r7
 8024e12:	f340 80fd 	ble.w	8025010 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024e16:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024e1a:	3701      	adds	r7, #1
 8024e1c:	f100 8100 	bmi.w	8025020 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024e20:	42bb      	cmp	r3, r7
 8024e22:	f340 80fd 	ble.w	8025020 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024e26:	2e00      	cmp	r6, #0
 8024e28:	f000 80fc 	beq.w	8025024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024e2c:	3301      	adds	r3, #1
 8024e2e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024e32:	b2b6      	uxth	r6, r6
 8024e34:	b280      	uxth	r0, r0
 8024e36:	fb00 fe06 	mul.w	lr, r0, r6
 8024e3a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8024e3e:	0136      	lsls	r6, r6, #4
 8024e40:	eba6 070e 	sub.w	r7, r6, lr
 8024e44:	b280      	uxth	r0, r0
 8024e46:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8024e4a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8024e4e:	b2bf      	uxth	r7, r7
 8024e50:	1a1b      	subs	r3, r3, r0
 8024e52:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8024e56:	b29b      	uxth	r3, r3
 8024e58:	fb0a f607 	mul.w	r6, sl, r7
 8024e5c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8024e60:	fb0b 6603 	mla	r6, fp, r3, r6
 8024e64:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8024e68:	fb00 6609 	mla	r6, r0, r9, r6
 8024e6c:	fb0e 6608 	mla	r6, lr, r8, r6
 8024e70:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8024e74:	9600      	str	r6, [sp, #0]
 8024e76:	2e00      	cmp	r6, #0
 8024e78:	f000 80be 	beq.w	8024ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8024e7c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024e80:	fb0b fc0c 	mul.w	ip, fp, ip
 8024e84:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8024e88:	fb0b f505 	mul.w	r5, fp, r5
 8024e8c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8024e90:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8024e94:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024e98:	44dc      	add	ip, fp
 8024e9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e9e:	9501      	str	r5, [sp, #4]
 8024ea0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8024ea4:	9503      	str	r5, [sp, #12]
 8024ea6:	9d01      	ldr	r5, [sp, #4]
 8024ea8:	9e02      	ldr	r6, [sp, #8]
 8024eaa:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8024eae:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024eb2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8024eb6:	fb0a fc0c 	mul.w	ip, sl, ip
 8024eba:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024ebe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024ec2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024ec6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024eca:	4465      	add	r5, ip
 8024ecc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8024ed0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8024ed4:	fb09 fc0c 	mul.w	ip, r9, ip
 8024ed8:	fb09 f904 	mul.w	r9, r9, r4
 8024edc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8024ee0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024ee4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8024ee8:	fb08 f404 	mul.w	r4, r8, r4
 8024eec:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024ef0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024ef4:	fb08 f802 	mul.w	r8, r8, r2
 8024ef8:	fb0a fa01 	mul.w	sl, sl, r1
 8024efc:	0a22      	lsrs	r2, r4, #8
 8024efe:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8024f02:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8024f06:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8024f0a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024f0e:	4414      	add	r4, r2
 8024f10:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024f14:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8024f18:	0a2d      	lsrs	r5, r5, #8
 8024f1a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024f1e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8024f22:	9a03      	ldr	r2, [sp, #12]
 8024f24:	8836      	ldrh	r6, [r6, #0]
 8024f26:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024f2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8024f2e:	437d      	muls	r5, r7
 8024f30:	4461      	add	r1, ip
 8024f32:	0a24      	lsrs	r4, r4, #8
 8024f34:	fb02 5503 	mla	r5, r2, r3, r5
 8024f38:	0a09      	lsrs	r1, r1, #8
 8024f3a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8024f3e:	fb04 540e 	mla	r4, r4, lr, r5
 8024f42:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8024f46:	fb01 4100 	mla	r1, r1, r0, r4
 8024f4a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024f4e:	0a09      	lsrs	r1, r1, #8
 8024f50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024f54:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8024f58:	fb07 f70a 	mul.w	r7, r7, sl
 8024f5c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024f60:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8024f64:	fb03 7101 	mla	r1, r3, r1, r7
 8024f68:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024f6c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8024f70:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024f74:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8024f78:	fb00 e101 	mla	r1, r0, r1, lr
 8024f7c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8024f80:	9a00      	ldr	r2, [sp, #0]
 8024f82:	b287      	uxth	r7, r0
 8024f84:	437a      	muls	r2, r7
 8024f86:	0a09      	lsrs	r1, r1, #8
 8024f88:	1c53      	adds	r3, r2, #1
 8024f8a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8024f8e:	4321      	orrs	r1, r4
 8024f90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024f94:	1235      	asrs	r5, r6, #8
 8024f96:	0c0a      	lsrs	r2, r1, #16
 8024f98:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024f9c:	b2db      	uxtb	r3, r3
 8024f9e:	fb12 f207 	smulbb	r2, r2, r7
 8024fa2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8024fa6:	fb05 2503 	mla	r5, r5, r3, r2
 8024faa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024fae:	10f2      	asrs	r2, r6, #3
 8024fb0:	b2c8      	uxtb	r0, r1
 8024fb2:	00f6      	lsls	r6, r6, #3
 8024fb4:	fb14 f407 	smulbb	r4, r4, r7
 8024fb8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8024fbc:	b2f6      	uxtb	r6, r6
 8024fbe:	fb10 f007 	smulbb	r0, r0, r7
 8024fc2:	fb02 4203 	mla	r2, r2, r3, r4
 8024fc6:	b2ad      	uxth	r5, r5
 8024fc8:	fb06 0303 	mla	r3, r6, r3, r0
 8024fcc:	b299      	uxth	r1, r3
 8024fce:	b294      	uxth	r4, r2
 8024fd0:	1c6b      	adds	r3, r5, #1
 8024fd2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024fd6:	1c62      	adds	r2, r4, #1
 8024fd8:	1c4b      	adds	r3, r1, #1
 8024fda:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024fde:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024fe2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8024fe6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024fea:	0952      	lsrs	r2, r2, #5
 8024fec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024ff0:	432b      	orrs	r3, r5
 8024ff2:	4313      	orrs	r3, r2
 8024ff4:	9a02      	ldr	r2, [sp, #8]
 8024ff6:	8013      	strh	r3, [r2, #0]
 8024ff8:	b005      	add	sp, #20
 8024ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024ffe:	2500      	movs	r5, #0
 8025000:	e6ef      	b.n	8024de2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8025002:	2100      	movs	r1, #0
 8025004:	460d      	mov	r5, r1
 8025006:	e6f7      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025008:	2100      	movs	r1, #0
 802500a:	e6f5      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802500c:	4631      	mov	r1, r6
 802500e:	e6f3      	b.n	8024df8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8025010:	2400      	movs	r4, #0
 8025012:	e702      	b.n	8024e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8025014:	2200      	movs	r2, #0
 8025016:	4614      	mov	r4, r2
 8025018:	e70b      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802501a:	4602      	mov	r2, r0
 802501c:	4604      	mov	r4, r0
 802501e:	e708      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025020:	2200      	movs	r2, #0
 8025022:	e706      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8025024:	4632      	mov	r2, r6
 8025026:	e704      	b.n	8024e32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08025028 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025028:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802502c:	b09d      	sub	sp, #116	; 0x74
 802502e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8025032:	9219      	str	r2, [sp, #100]	; 0x64
 8025034:	9307      	str	r3, [sp, #28]
 8025036:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8025038:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802503c:	931a      	str	r3, [sp, #104]	; 0x68
 802503e:	9117      	str	r1, [sp, #92]	; 0x5c
 8025040:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8025044:	901b      	str	r0, [sp, #108]	; 0x6c
 8025046:	6850      	ldr	r0, [r2, #4]
 8025048:	6812      	ldr	r2, [r2, #0]
 802504a:	fb00 1303 	mla	r3, r0, r3, r1
 802504e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8025052:	930a      	str	r3, [sp, #40]	; 0x28
 8025054:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025056:	681b      	ldr	r3, [r3, #0]
 8025058:	9310      	str	r3, [sp, #64]	; 0x40
 802505a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802505e:	930b      	str	r3, [sp, #44]	; 0x2c
 8025060:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025062:	2b00      	cmp	r3, #0
 8025064:	dc03      	bgt.n	802506e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8025066:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8025068:	2b00      	cmp	r3, #0
 802506a:	f340 8375 	ble.w	8025758 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802506e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8025070:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025074:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025078:	1e48      	subs	r0, r1, #1
 802507a:	1e57      	subs	r7, r2, #1
 802507c:	9b07      	ldr	r3, [sp, #28]
 802507e:	2b00      	cmp	r3, #0
 8025080:	f340 818e 	ble.w	80253a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8025084:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025088:	ea4f 4326 	mov.w	r3, r6, asr #16
 802508c:	d406      	bmi.n	802509c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802508e:	4584      	cmp	ip, r0
 8025090:	da04      	bge.n	802509c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025092:	2b00      	cmp	r3, #0
 8025094:	db02      	blt.n	802509c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8025096:	42bb      	cmp	r3, r7
 8025098:	f2c0 8183 	blt.w	80253a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802509c:	f11c 0c01 	adds.w	ip, ip, #1
 80250a0:	f100 8173 	bmi.w	802538a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80250a4:	4561      	cmp	r1, ip
 80250a6:	f2c0 8170 	blt.w	802538a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80250aa:	3301      	adds	r3, #1
 80250ac:	f100 816d 	bmi.w	802538a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80250b0:	429a      	cmp	r2, r3
 80250b2:	f2c0 816a 	blt.w	802538a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80250b6:	9b07      	ldr	r3, [sp, #28]
 80250b8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80250ba:	9318      	str	r3, [sp, #96]	; 0x60
 80250bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80250be:	2b00      	cmp	r3, #0
 80250c0:	f340 818c 	ble.w	80253dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80250c4:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80250c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80250c8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80250cc:	689b      	ldr	r3, [r3, #8]
 80250ce:	1422      	asrs	r2, r4, #16
 80250d0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80250d4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80250d8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80250dc:	f100 81cd 	bmi.w	802547a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80250e0:	f103 38ff 	add.w	r8, r3, #4294967295
 80250e4:	4542      	cmp	r2, r8
 80250e6:	f280 81c8 	bge.w	802547a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80250ea:	f1bc 0f00 	cmp.w	ip, #0
 80250ee:	f2c0 81c4 	blt.w	802547a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80250f2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80250f6:	45c4      	cmp	ip, r8
 80250f8:	f280 81bf 	bge.w	802547a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80250fc:	b21b      	sxth	r3, r3
 80250fe:	fb0c 2203 	mla	r2, ip, r3, r2
 8025102:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025104:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025108:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802510c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025110:	2800      	cmp	r0, #0
 8025112:	f000 81a9 	beq.w	8025468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8025116:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802511a:	950c      	str	r5, [sp, #48]	; 0x30
 802511c:	0e2d      	lsrs	r5, r5, #24
 802511e:	9513      	str	r5, [sp, #76]	; 0x4c
 8025120:	b181      	cbz	r1, 8025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8025122:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025126:	3b01      	subs	r3, #1
 8025128:	009b      	lsls	r3, r3, #2
 802512a:	3304      	adds	r3, #4
 802512c:	eb08 0c03 	add.w	ip, r8, r3
 8025130:	f858 3003 	ldr.w	r3, [r8, r3]
 8025134:	9308      	str	r3, [sp, #32]
 8025136:	0e1b      	lsrs	r3, r3, #24
 8025138:	9311      	str	r3, [sp, #68]	; 0x44
 802513a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802513e:	930d      	str	r3, [sp, #52]	; 0x34
 8025140:	0e1b      	lsrs	r3, r3, #24
 8025142:	9314      	str	r3, [sp, #80]	; 0x50
 8025144:	b280      	uxth	r0, r0
 8025146:	b289      	uxth	r1, r1
 8025148:	fb00 f901 	mul.w	r9, r0, r1
 802514c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8025150:	0100      	lsls	r0, r0, #4
 8025152:	eba0 0809 	sub.w	r8, r0, r9
 8025156:	b289      	uxth	r1, r1
 8025158:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802515c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802515e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025160:	fa1f f888 	uxth.w	r8, r8
 8025164:	1a5b      	subs	r3, r3, r1
 8025166:	b29b      	uxth	r3, r3
 8025168:	fb08 f000 	mul.w	r0, r8, r0
 802516c:	fb03 000e 	mla	r0, r3, lr, r0
 8025170:	fb01 0005 	mla	r0, r1, r5, r0
 8025174:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025176:	fb09 0005 	mla	r0, r9, r5, r0
 802517a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802517e:	2800      	cmp	r0, #0
 8025180:	f000 80fa 	beq.w	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025184:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025188:	d01b      	beq.n	80251c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802518a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802518e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025192:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025196:	fb0e fe02 	mul.w	lr, lr, r2
 802519a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802519e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80251a2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80251a6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80251aa:	4452      	add	r2, sl
 80251ac:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80251b0:	0a12      	lsrs	r2, r2, #8
 80251b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251b6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80251ba:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80251be:	ea42 020c 	orr.w	r2, r2, ip
 80251c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80251c4:	2dff      	cmp	r5, #255	; 0xff
 80251c6:	d021      	beq.n	802520c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80251c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80251ca:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80251ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80251d0:	fb05 fb0b 	mul.w	fp, r5, fp
 80251d4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80251d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80251da:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80251dc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80251e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80251e4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80251e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80251ec:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80251f0:	44de      	add	lr, fp
 80251f2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80251f6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80251fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251fe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025202:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025206:	ea4e 050a 	orr.w	r5, lr, sl
 802520a:	950c      	str	r5, [sp, #48]	; 0x30
 802520c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802520e:	2dff      	cmp	r5, #255	; 0xff
 8025210:	d021      	beq.n	8025256 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8025212:	9d08      	ldr	r5, [sp, #32]
 8025214:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025218:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802521a:	fb05 fb0b 	mul.w	fp, r5, fp
 802521e:	9d08      	ldr	r5, [sp, #32]
 8025220:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025224:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025226:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802522a:	fb05 fa0a 	mul.w	sl, r5, sl
 802522e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025232:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025236:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802523a:	44de      	add	lr, fp
 802523c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025240:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025248:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802524c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025250:	ea4e 050a 	orr.w	r5, lr, sl
 8025254:	9508      	str	r5, [sp, #32]
 8025256:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025258:	2dff      	cmp	r5, #255	; 0xff
 802525a:	d021      	beq.n	80252a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802525c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802525e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025262:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025264:	fb05 fb0b 	mul.w	fp, r5, fp
 8025268:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802526a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802526e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025270:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025274:	fb05 fa0a 	mul.w	sl, r5, sl
 8025278:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802527c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025280:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025284:	44de      	add	lr, fp
 8025286:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802528a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802528e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025292:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025296:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802529a:	ea4e 050a 	orr.w	r5, lr, sl
 802529e:	950d      	str	r5, [sp, #52]	; 0x34
 80252a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80252a2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80252a6:	9d08      	ldr	r5, [sp, #32]
 80252a8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80252ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80252b0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80252b4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80252b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80252ba:	fb01 cc0e 	mla	ip, r1, lr, ip
 80252be:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80252c2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80252c4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80252c8:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80252cc:	fb08 f80e 	mul.w	r8, r8, lr
 80252d0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80252d4:	fb03 8202 	mla	r2, r3, r2, r8
 80252d8:	9b08      	ldr	r3, [sp, #32]
 80252da:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80252dc:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80252e0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80252e2:	fb01 220a 	mla	r2, r1, sl, r2
 80252e6:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80252ea:	fb09 2901 	mla	r9, r9, r1, r2
 80252ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80252f0:	883b      	ldrh	r3, [r7, #0]
 80252f2:	4342      	muls	r2, r0
 80252f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80252f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80252fc:	1c50      	adds	r0, r2, #1
 80252fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025302:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025306:	ea4c 0c09 	orr.w	ip, ip, r9
 802530a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802530e:	1219      	asrs	r1, r3, #8
 8025310:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8025314:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8025318:	b2c0      	uxtb	r0, r0
 802531a:	fb12 f205 	smulbb	r2, r2, r5
 802531e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025322:	fb01 2100 	mla	r1, r1, r0, r2
 8025326:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802532a:	10da      	asrs	r2, r3, #3
 802532c:	fa5f fc8c 	uxtb.w	ip, ip
 8025330:	00db      	lsls	r3, r3, #3
 8025332:	fb1c fc05 	smulbb	ip, ip, r5
 8025336:	b2db      	uxtb	r3, r3
 8025338:	b289      	uxth	r1, r1
 802533a:	fb03 c300 	mla	r3, r3, r0, ip
 802533e:	fa1f fc83 	uxth.w	ip, r3
 8025342:	1c4b      	adds	r3, r1, #1
 8025344:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025348:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802534c:	fb1e fe05 	smulbb	lr, lr, r5
 8025350:	f10c 0301 	add.w	r3, ip, #1
 8025354:	fb02 e200 	mla	r2, r2, r0, lr
 8025358:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802535c:	b292      	uxth	r2, r2
 802535e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8025362:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025366:	430b      	orrs	r3, r1
 8025368:	1c51      	adds	r1, r2, #1
 802536a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802536e:	0952      	lsrs	r2, r2, #5
 8025370:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025374:	4313      	orrs	r3, r2
 8025376:	803b      	strh	r3, [r7, #0]
 8025378:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802537a:	441c      	add	r4, r3
 802537c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802537e:	441e      	add	r6, r3
 8025380:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025382:	3b01      	subs	r3, #1
 8025384:	3702      	adds	r7, #2
 8025386:	9318      	str	r3, [sp, #96]	; 0x60
 8025388:	e698      	b.n	80250bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802538a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802538c:	441c      	add	r4, r3
 802538e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025390:	441e      	add	r6, r3
 8025392:	9b07      	ldr	r3, [sp, #28]
 8025394:	3b01      	subs	r3, #1
 8025396:	9307      	str	r3, [sp, #28]
 8025398:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802539a:	3302      	adds	r3, #2
 802539c:	930a      	str	r3, [sp, #40]	; 0x28
 802539e:	e66d      	b.n	802507c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80253a0:	d023      	beq.n	80253ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80253a2:	9b07      	ldr	r3, [sp, #28]
 80253a4:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80253a6:	3b01      	subs	r3, #1
 80253a8:	fb00 4003 	mla	r0, r0, r3, r4
 80253ac:	1400      	asrs	r0, r0, #16
 80253ae:	f53f ae82 	bmi.w	80250b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80253b2:	3901      	subs	r1, #1
 80253b4:	4288      	cmp	r0, r1
 80253b6:	f6bf ae7e 	bge.w	80250b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80253ba:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80253bc:	fb01 6303 	mla	r3, r1, r3, r6
 80253c0:	141b      	asrs	r3, r3, #16
 80253c2:	f53f ae78 	bmi.w	80250b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80253c6:	3a01      	subs	r2, #1
 80253c8:	4293      	cmp	r3, r2
 80253ca:	f6bf ae74 	bge.w	80250b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80253ce:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80253d2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80253d6:	f1bb 0f00 	cmp.w	fp, #0
 80253da:	dc6c      	bgt.n	80254b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80253dc:	9b07      	ldr	r3, [sp, #28]
 80253de:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80253e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80253e4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80253e8:	930a      	str	r3, [sp, #40]	; 0x28
 80253ea:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80253ec:	2b00      	cmp	r3, #0
 80253ee:	f340 81b3 	ble.w	8025758 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80253f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80253f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80253fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80253fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025400:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025404:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025408:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802540c:	eef0 6a62 	vmov.f32	s13, s5
 8025410:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025414:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025418:	ee77 2a62 	vsub.f32	s5, s14, s5
 802541c:	ee16 4a90 	vmov	r4, s13
 8025420:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025424:	eef0 6a43 	vmov.f32	s13, s6
 8025428:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802542c:	ee12 2a90 	vmov	r2, s5
 8025430:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025434:	fb92 f3f3 	sdiv	r3, r2, r3
 8025438:	ee13 2a10 	vmov	r2, s6
 802543c:	9329      	str	r3, [sp, #164]	; 0xa4
 802543e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025440:	fb92 f3f3 	sdiv	r3, r2, r3
 8025444:	932a      	str	r3, [sp, #168]	; 0xa8
 8025446:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025448:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802544a:	3b01      	subs	r3, #1
 802544c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025450:	9317      	str	r3, [sp, #92]	; 0x5c
 8025452:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8025454:	bf08      	it	eq
 8025456:	4613      	moveq	r3, r2
 8025458:	ee16 6a90 	vmov	r6, s13
 802545c:	9307      	str	r3, [sp, #28]
 802545e:	eeb0 3a67 	vmov.f32	s6, s15
 8025462:	eef0 2a47 	vmov.f32	s5, s14
 8025466:	e5fb      	b.n	8025060 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8025468:	2900      	cmp	r1, #0
 802546a:	f43f ae6b 	beq.w	8025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802546e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025472:	9308      	str	r3, [sp, #32]
 8025474:	0e1b      	lsrs	r3, r3, #24
 8025476:	9311      	str	r3, [sp, #68]	; 0x44
 8025478:	e664      	b.n	8025144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802547a:	f112 0801 	adds.w	r8, r2, #1
 802547e:	f53f af7b 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025482:	4543      	cmp	r3, r8
 8025484:	f6ff af78 	blt.w	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025488:	f11c 0801 	adds.w	r8, ip, #1
 802548c:	f53f af74 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025490:	45c6      	cmp	lr, r8
 8025492:	f6ff af71 	blt.w	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8025496:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8025498:	9201      	str	r2, [sp, #4]
 802549a:	fa0f f28e 	sxth.w	r2, lr
 802549e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80254a2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80254a6:	9200      	str	r2, [sp, #0]
 80254a8:	b21b      	sxth	r3, r3
 80254aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80254ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80254ae:	4639      	mov	r1, r7
 80254b0:	f7ff fc79 	bl	8024da6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80254b4:	e760      	b.n	8025378 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80254b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80254b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80254ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80254be:	1427      	asrs	r7, r4, #16
 80254c0:	1433      	asrs	r3, r6, #16
 80254c2:	fb01 7303 	mla	r3, r1, r3, r7
 80254c6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80254ca:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80254ce:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80254d2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80254d6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80254da:	2a00      	cmp	r2, #0
 80254dc:	f000 8133 	beq.w	8025746 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80254e0:	687d      	ldr	r5, [r7, #4]
 80254e2:	950e      	str	r5, [sp, #56]	; 0x38
 80254e4:	0e2d      	lsrs	r5, r5, #24
 80254e6:	9515      	str	r5, [sp, #84]	; 0x54
 80254e8:	b178      	cbz	r0, 802550a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80254ea:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80254ee:	3901      	subs	r1, #1
 80254f0:	0089      	lsls	r1, r1, #2
 80254f2:	3104      	adds	r1, #4
 80254f4:	eb07 0e01 	add.w	lr, r7, r1
 80254f8:	5879      	ldr	r1, [r7, r1]
 80254fa:	9109      	str	r1, [sp, #36]	; 0x24
 80254fc:	0e09      	lsrs	r1, r1, #24
 80254fe:	9112      	str	r1, [sp, #72]	; 0x48
 8025500:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025504:	910f      	str	r1, [sp, #60]	; 0x3c
 8025506:	0e09      	lsrs	r1, r1, #24
 8025508:	9116      	str	r1, [sp, #88]	; 0x58
 802550a:	b292      	uxth	r2, r2
 802550c:	b280      	uxth	r0, r0
 802550e:	fb02 f800 	mul.w	r8, r2, r0
 8025512:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025516:	0112      	lsls	r2, r2, #4
 8025518:	eba2 0e08 	sub.w	lr, r2, r8
 802551c:	b280      	uxth	r0, r0
 802551e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8025522:	9915      	ldr	r1, [sp, #84]	; 0x54
 8025524:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025526:	fa1f fe8e 	uxth.w	lr, lr
 802552a:	1a12      	subs	r2, r2, r0
 802552c:	b292      	uxth	r2, r2
 802552e:	fb0e f101 	mul.w	r1, lr, r1
 8025532:	fb02 110c 	mla	r1, r2, ip, r1
 8025536:	fb00 1105 	mla	r1, r0, r5, r1
 802553a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802553c:	fb08 1105 	mla	r1, r8, r5, r1
 8025540:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8025544:	2900      	cmp	r1, #0
 8025546:	f000 80f5 	beq.w	8025734 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802554a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802554e:	d019      	beq.n	8025584 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8025550:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025554:	fb0c fa0a 	mul.w	sl, ip, sl
 8025558:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802555c:	fb0c fc03 	mul.w	ip, ip, r3
 8025560:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025564:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025568:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802556c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025570:	4453      	add	r3, sl
 8025572:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025576:	0a1b      	lsrs	r3, r3, #8
 8025578:	0a3f      	lsrs	r7, r7, #8
 802557a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802557e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025582:	433b      	orrs	r3, r7
 8025584:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025586:	2dff      	cmp	r5, #255	; 0xff
 8025588:	d020      	beq.n	80255cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802558a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802558c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025590:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025592:	436f      	muls	r7, r5
 8025594:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025596:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802559a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802559c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80255a0:	fb05 fa0a 	mul.w	sl, r5, sl
 80255a4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80255a8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255ac:	44bc      	add	ip, r7
 80255ae:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80255b2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80255b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80255ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80255be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80255c6:	ea4c 050a 	orr.w	r5, ip, sl
 80255ca:	950e      	str	r5, [sp, #56]	; 0x38
 80255cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80255ce:	2dff      	cmp	r5, #255	; 0xff
 80255d0:	d020      	beq.n	8025614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80255d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80255d4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80255d8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80255da:	436f      	muls	r7, r5
 80255dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80255de:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80255e2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80255e4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80255e8:	fb05 fa0a 	mul.w	sl, r5, sl
 80255ec:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80255f0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80255f4:	44bc      	add	ip, r7
 80255f6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80255fa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80255fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025602:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025606:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802560a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802560e:	ea4c 050a 	orr.w	r5, ip, sl
 8025612:	9509      	str	r5, [sp, #36]	; 0x24
 8025614:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025616:	2dff      	cmp	r5, #255	; 0xff
 8025618:	d020      	beq.n	802565c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802561a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802561c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025620:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8025622:	436f      	muls	r7, r5
 8025624:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025626:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802562a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802562c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025630:	fb05 fa0a 	mul.w	sl, r5, sl
 8025634:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025638:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802563c:	44bc      	add	ip, r7
 802563e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025642:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025646:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802564a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802564e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025652:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025656:	ea4c 050a 	orr.w	r5, ip, sl
 802565a:	950f      	str	r5, [sp, #60]	; 0x3c
 802565c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802565e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025662:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025664:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8025668:	fb0e f707 	mul.w	r7, lr, r7
 802566c:	fb02 770c 	mla	r7, r2, ip, r7
 8025670:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025674:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025676:	fb00 770c 	mla	r7, r0, ip, r7
 802567a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802567e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025680:	fb08 770c 	mla	r7, r8, ip, r7
 8025684:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025688:	fb0e fe0c 	mul.w	lr, lr, ip
 802568c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025690:	fb02 e303 	mla	r3, r2, r3, lr
 8025694:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025696:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025698:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802569c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802569e:	fb00 330a 	mla	r3, r0, sl, r3
 80256a2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80256a6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80256aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80256ac:	f8b9 0000 	ldrh.w	r0, [r9]
 80256b0:	4359      	muls	r1, r3
 80256b2:	0a3f      	lsrs	r7, r7, #8
 80256b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256b8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80256bc:	1c4b      	adds	r3, r1, #1
 80256be:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80256c2:	ea47 070c 	orr.w	r7, r7, ip
 80256c6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80256ca:	1202      	asrs	r2, r0, #8
 80256cc:	0c3b      	lsrs	r3, r7, #16
 80256ce:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80256d2:	b2c9      	uxtb	r1, r1
 80256d4:	fb13 f305 	smulbb	r3, r3, r5
 80256d8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80256dc:	fb02 3201 	mla	r2, r2, r1, r3
 80256e0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80256e4:	10c3      	asrs	r3, r0, #3
 80256e6:	b2ff      	uxtb	r7, r7
 80256e8:	00c0      	lsls	r0, r0, #3
 80256ea:	b2c0      	uxtb	r0, r0
 80256ec:	fb17 f705 	smulbb	r7, r7, r5
 80256f0:	fb00 7001 	mla	r0, r0, r1, r7
 80256f4:	b292      	uxth	r2, r2
 80256f6:	fb1c fc05 	smulbb	ip, ip, r5
 80256fa:	b280      	uxth	r0, r0
 80256fc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025700:	fb03 c301 	mla	r3, r3, r1, ip
 8025704:	1c51      	adds	r1, r2, #1
 8025706:	f100 0c01 	add.w	ip, r0, #1
 802570a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802570e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8025712:	b29b      	uxth	r3, r3
 8025714:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025718:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802571c:	ea4c 0202 	orr.w	r2, ip, r2
 8025720:	f103 0c01 	add.w	ip, r3, #1
 8025724:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8025728:	095b      	lsrs	r3, r3, #5
 802572a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802572e:	431a      	orrs	r2, r3
 8025730:	f8a9 2000 	strh.w	r2, [r9]
 8025734:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8025736:	441c      	add	r4, r3
 8025738:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802573a:	f109 0902 	add.w	r9, r9, #2
 802573e:	441e      	add	r6, r3
 8025740:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025744:	e647      	b.n	80253d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8025746:	2800      	cmp	r0, #0
 8025748:	f43f aedf 	beq.w	802550a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802574c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8025750:	9109      	str	r1, [sp, #36]	; 0x24
 8025752:	0e09      	lsrs	r1, r1, #24
 8025754:	9112      	str	r1, [sp, #72]	; 0x48
 8025756:	e6d8      	b.n	802550a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025758:	b01d      	add	sp, #116	; 0x74
 802575a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802575e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802575e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025762:	b085      	sub	sp, #20
 8025764:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8025768:	9102      	str	r1, [sp, #8]
 802576a:	2c00      	cmp	r4, #0
 802576c:	fb04 7103 	mla	r1, r4, r3, r7
 8025770:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8025774:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8025778:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802577c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8025780:	f2c0 810c 	blt.w	802599c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8025784:	45a6      	cmp	lr, r4
 8025786:	f340 8109 	ble.w	802599c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802578a:	2f00      	cmp	r7, #0
 802578c:	f2c0 8104 	blt.w	8025998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025790:	42bb      	cmp	r3, r7
 8025792:	f340 8101 	ble.w	8025998 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8025796:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802579a:	1c7a      	adds	r2, r7, #1
 802579c:	f100 8101 	bmi.w	80259a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80257a0:	4293      	cmp	r3, r2
 80257a2:	f340 80fe 	ble.w	80259a2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80257a6:	2e00      	cmp	r6, #0
 80257a8:	f000 80fd 	beq.w	80259a6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80257ac:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80257b0:	3401      	adds	r4, #1
 80257b2:	f100 80fc 	bmi.w	80259ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80257b6:	45a6      	cmp	lr, r4
 80257b8:	f340 80f9 	ble.w	80259ae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80257bc:	2800      	cmp	r0, #0
 80257be:	f000 80f9 	beq.w	80259b4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80257c2:	2f00      	cmp	r7, #0
 80257c4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80257c8:	f2c0 80ef 	blt.w	80259aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80257cc:	42bb      	cmp	r3, r7
 80257ce:	f340 80ec 	ble.w	80259aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80257d2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80257d6:	3701      	adds	r7, #1
 80257d8:	f100 80ef 	bmi.w	80259ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80257dc:	42bb      	cmp	r3, r7
 80257de:	f340 80ec 	ble.w	80259ba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80257e2:	2e00      	cmp	r6, #0
 80257e4:	f000 80eb 	beq.w	80259be <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80257e8:	6852      	ldr	r2, [r2, #4]
 80257ea:	b2b6      	uxth	r6, r6
 80257ec:	b280      	uxth	r0, r0
 80257ee:	fb00 fe06 	mul.w	lr, r0, r6
 80257f2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80257f6:	0136      	lsls	r6, r6, #4
 80257f8:	eba6 070e 	sub.w	r7, r6, lr
 80257fc:	b280      	uxth	r0, r0
 80257fe:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8025802:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025806:	b2bf      	uxth	r7, r7
 8025808:	1a1b      	subs	r3, r3, r0
 802580a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802580e:	b29b      	uxth	r3, r3
 8025810:	fb07 f60a 	mul.w	r6, r7, sl
 8025814:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025818:	fb0b 6603 	mla	r6, fp, r3, r6
 802581c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8025820:	fb00 6609 	mla	r6, r0, r9, r6
 8025824:	fb0e 6608 	mla	r6, lr, r8, r6
 8025828:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802582c:	9600      	str	r6, [sp, #0]
 802582e:	2e00      	cmp	r6, #0
 8025830:	f000 80af 	beq.w	8025992 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8025834:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025838:	fb0b fc0c 	mul.w	ip, fp, ip
 802583c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8025840:	fb0b f505 	mul.w	r5, fp, r5
 8025844:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8025848:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802584c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025850:	44dc      	add	ip, fp
 8025852:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025856:	9501      	str	r5, [sp, #4]
 8025858:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802585c:	9503      	str	r5, [sp, #12]
 802585e:	9d01      	ldr	r5, [sp, #4]
 8025860:	9e02      	ldr	r6, [sp, #8]
 8025862:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8025866:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802586a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802586e:	fb0a fc0c 	mul.w	ip, sl, ip
 8025872:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8025876:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802587a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802587e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8025882:	4465      	add	r5, ip
 8025884:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8025888:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802588c:	fb09 fc0c 	mul.w	ip, r9, ip
 8025890:	fb09 f904 	mul.w	r9, r9, r4
 8025894:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8025898:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802589c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80258a0:	fb08 f404 	mul.w	r4, r8, r4
 80258a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80258a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80258ac:	fb08 f802 	mul.w	r8, r8, r2
 80258b0:	fb0a fa01 	mul.w	sl, sl, r1
 80258b4:	0a22      	lsrs	r2, r4, #8
 80258b6:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80258ba:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80258be:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80258c2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80258c6:	4414      	add	r4, r2
 80258c8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80258cc:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80258d0:	0a2d      	lsrs	r5, r5, #8
 80258d2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80258d6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80258da:	9a03      	ldr	r2, [sp, #12]
 80258dc:	8836      	ldrh	r6, [r6, #0]
 80258de:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80258e2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80258e6:	437d      	muls	r5, r7
 80258e8:	4461      	add	r1, ip
 80258ea:	0a24      	lsrs	r4, r4, #8
 80258ec:	fb02 5503 	mla	r5, r2, r3, r5
 80258f0:	0a09      	lsrs	r1, r1, #8
 80258f2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80258f6:	fb04 540e 	mla	r4, r4, lr, r5
 80258fa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80258fe:	fb01 4100 	mla	r1, r1, r0, r4
 8025902:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025906:	0a09      	lsrs	r1, r1, #8
 8025908:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802590c:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8025910:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025914:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8025918:	fb07 f70a 	mul.w	r7, r7, sl
 802591c:	fb03 7101 	mla	r1, r3, r1, r7
 8025920:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025924:	9b00      	ldr	r3, [sp, #0]
 8025926:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802592a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802592e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8025932:	fb00 e101 	mla	r1, r0, r1, lr
 8025936:	43da      	mvns	r2, r3
 8025938:	1233      	asrs	r3, r6, #8
 802593a:	b2d2      	uxtb	r2, r2
 802593c:	10f0      	asrs	r0, r6, #3
 802593e:	0a09      	lsrs	r1, r1, #8
 8025940:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025944:	00f6      	lsls	r6, r6, #3
 8025946:	4353      	muls	r3, r2
 8025948:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802594c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025950:	b2f6      	uxtb	r6, r6
 8025952:	4321      	orrs	r1, r4
 8025954:	4350      	muls	r0, r2
 8025956:	4356      	muls	r6, r2
 8025958:	1c5a      	adds	r2, r3, #1
 802595a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802595e:	0c0b      	lsrs	r3, r1, #16
 8025960:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025964:	1c42      	adds	r2, r0, #1
 8025966:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802596a:	0a0a      	lsrs	r2, r1, #8
 802596c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025970:	021b      	lsls	r3, r3, #8
 8025972:	00d2      	lsls	r2, r2, #3
 8025974:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025978:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802597c:	4313      	orrs	r3, r2
 802597e:	1c72      	adds	r2, r6, #1
 8025980:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8025984:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8025988:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802598c:	4319      	orrs	r1, r3
 802598e:	9b02      	ldr	r3, [sp, #8]
 8025990:	8019      	strh	r1, [r3, #0]
 8025992:	b005      	add	sp, #20
 8025994:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025998:	2500      	movs	r5, #0
 802599a:	e6fe      	b.n	802579a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802599c:	2100      	movs	r1, #0
 802599e:	460d      	mov	r5, r1
 80259a0:	e706      	b.n	80257b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80259a2:	2100      	movs	r1, #0
 80259a4:	e704      	b.n	80257b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80259a6:	4631      	mov	r1, r6
 80259a8:	e702      	b.n	80257b0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 80259aa:	2400      	movs	r4, #0
 80259ac:	e713      	b.n	80257d6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 80259ae:	2200      	movs	r2, #0
 80259b0:	4614      	mov	r4, r2
 80259b2:	e71a      	b.n	80257ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80259b4:	4602      	mov	r2, r0
 80259b6:	4604      	mov	r4, r0
 80259b8:	e717      	b.n	80257ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80259ba:	2200      	movs	r2, #0
 80259bc:	e715      	b.n	80257ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 80259be:	4632      	mov	r2, r6
 80259c0:	e713      	b.n	80257ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

080259c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80259c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80259c8:	b09b      	sub	sp, #108	; 0x6c
 80259ca:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80259ce:	9218      	str	r2, [sp, #96]	; 0x60
 80259d0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80259d2:	9116      	str	r1, [sp, #88]	; 0x58
 80259d4:	9307      	str	r3, [sp, #28]
 80259d6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 80259da:	9019      	str	r0, [sp, #100]	; 0x64
 80259dc:	6850      	ldr	r0, [r2, #4]
 80259de:	6812      	ldr	r2, [r2, #0]
 80259e0:	fb00 1303 	mla	r3, r0, r3, r1
 80259e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80259e8:	930a      	str	r3, [sp, #40]	; 0x28
 80259ea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80259ec:	681b      	ldr	r3, [r3, #0]
 80259ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80259f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80259f2:	2b00      	cmp	r3, #0
 80259f4:	dc03      	bgt.n	80259fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80259f6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80259f8:	2b00      	cmp	r3, #0
 80259fa:	f340 8386 	ble.w	802610a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80259fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025a00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025a04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025a08:	1e48      	subs	r0, r1, #1
 8025a0a:	1e57      	subs	r7, r2, #1
 8025a0c:	9b07      	ldr	r3, [sp, #28]
 8025a0e:	2b00      	cmp	r3, #0
 8025a10:	f340 8166 	ble.w	8025ce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025a14:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8025a18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025a1c:	d406      	bmi.n	8025a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025a1e:	4584      	cmp	ip, r0
 8025a20:	da04      	bge.n	8025a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025a22:	2b00      	cmp	r3, #0
 8025a24:	db02      	blt.n	8025a2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025a26:	42bb      	cmp	r3, r7
 8025a28:	f2c0 815b 	blt.w	8025ce2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025a2c:	f11c 0c01 	adds.w	ip, ip, #1
 8025a30:	f100 814b 	bmi.w	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025a34:	4561      	cmp	r1, ip
 8025a36:	f2c0 8148 	blt.w	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025a3a:	3301      	adds	r3, #1
 8025a3c:	f100 8145 	bmi.w	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025a40:	429a      	cmp	r2, r3
 8025a42:	f2c0 8142 	blt.w	8025cca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025a46:	9b07      	ldr	r3, [sp, #28]
 8025a48:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8025a4a:	9317      	str	r3, [sp, #92]	; 0x5c
 8025a4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025a4e:	2b00      	cmp	r3, #0
 8025a50:	f340 8165 	ble.w	8025d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8025a54:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8025a56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025a58:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8025a5c:	689b      	ldr	r3, [r3, #8]
 8025a5e:	1422      	asrs	r2, r4, #16
 8025a60:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8025a64:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8025a68:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025a6c:	f100 81d5 	bmi.w	8025e1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025a70:	f103 38ff 	add.w	r8, r3, #4294967295
 8025a74:	4542      	cmp	r2, r8
 8025a76:	f280 81d0 	bge.w	8025e1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025a7a:	f1bc 0f00 	cmp.w	ip, #0
 8025a7e:	f2c0 81cc 	blt.w	8025e1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025a82:	f10e 38ff 	add.w	r8, lr, #4294967295
 8025a86:	45c4      	cmp	ip, r8
 8025a88:	f280 81c7 	bge.w	8025e1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8025a8c:	b21b      	sxth	r3, r3
 8025a8e:	fb0c 2203 	mla	r2, ip, r3, r2
 8025a92:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025a94:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8025a98:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025a9c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025aa0:	2900      	cmp	r1, #0
 8025aa2:	f000 8182 	beq.w	8025daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8025aa6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8025aaa:	950b      	str	r5, [sp, #44]	; 0x2c
 8025aac:	0e2d      	lsrs	r5, r5, #24
 8025aae:	9512      	str	r5, [sp, #72]	; 0x48
 8025ab0:	b180      	cbz	r0, 8025ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025ab2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8025ab6:	3b01      	subs	r3, #1
 8025ab8:	009b      	lsls	r3, r3, #2
 8025aba:	3304      	adds	r3, #4
 8025abc:	eb08 0c03 	add.w	ip, r8, r3
 8025ac0:	f858 3003 	ldr.w	r3, [r8, r3]
 8025ac4:	9308      	str	r3, [sp, #32]
 8025ac6:	0e1b      	lsrs	r3, r3, #24
 8025ac8:	9310      	str	r3, [sp, #64]	; 0x40
 8025aca:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025ace:	930c      	str	r3, [sp, #48]	; 0x30
 8025ad0:	0e1b      	lsrs	r3, r3, #24
 8025ad2:	9313      	str	r3, [sp, #76]	; 0x4c
 8025ad4:	b289      	uxth	r1, r1
 8025ad6:	b280      	uxth	r0, r0
 8025ad8:	fb01 f900 	mul.w	r9, r1, r0
 8025adc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025ae0:	0109      	lsls	r1, r1, #4
 8025ae2:	eba1 0809 	sub.w	r8, r1, r9
 8025ae6:	b280      	uxth	r0, r0
 8025ae8:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8025aec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8025aee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025af0:	fa1f f888 	uxth.w	r8, r8
 8025af4:	1a09      	subs	r1, r1, r0
 8025af6:	b289      	uxth	r1, r1
 8025af8:	fb08 f303 	mul.w	r3, r8, r3
 8025afc:	fb01 330e 	mla	r3, r1, lr, r3
 8025b00:	fb00 3305 	mla	r3, r0, r5, r3
 8025b04:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025b06:	fb09 3305 	mla	r3, r9, r5, r3
 8025b0a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025b0e:	2b00      	cmp	r3, #0
 8025b10:	f000 80d2 	beq.w	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025b14:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8025b18:	d01b      	beq.n	8025b52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8025b1a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8025b1e:	fb0e fa0a 	mul.w	sl, lr, sl
 8025b22:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025b26:	fb0e fe02 	mul.w	lr, lr, r2
 8025b2a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025b2e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025b32:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025b36:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8025b3a:	4452      	add	r2, sl
 8025b3c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8025b40:	0a12      	lsrs	r2, r2, #8
 8025b42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b46:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8025b4a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8025b4e:	ea42 020c 	orr.w	r2, r2, ip
 8025b52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025b54:	2dff      	cmp	r5, #255	; 0xff
 8025b56:	d021      	beq.n	8025b9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8025b58:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b5a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025b5e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025b60:	fb05 fb0b 	mul.w	fp, r5, fp
 8025b64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025b66:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025b6a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8025b6c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025b70:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b74:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025b78:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025b7c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025b80:	44de      	add	lr, fp
 8025b82:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025b86:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025b8a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b8e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025b92:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025b96:	ea4e 050a 	orr.w	r5, lr, sl
 8025b9a:	950b      	str	r5, [sp, #44]	; 0x2c
 8025b9c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025b9e:	2dff      	cmp	r5, #255	; 0xff
 8025ba0:	d021      	beq.n	8025be6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025ba2:	9d08      	ldr	r5, [sp, #32]
 8025ba4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025ba8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025baa:	fb05 fb0b 	mul.w	fp, r5, fp
 8025bae:	9d08      	ldr	r5, [sp, #32]
 8025bb0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025bb4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8025bb6:	fb05 fa0e 	mul.w	sl, r5, lr
 8025bba:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025bbe:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025bc2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025bc6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025bca:	44de      	add	lr, fp
 8025bcc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025bd0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025bd4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025bd8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025bdc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025be0:	ea4e 050a 	orr.w	r5, lr, sl
 8025be4:	9508      	str	r5, [sp, #32]
 8025be6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025be8:	2dff      	cmp	r5, #255	; 0xff
 8025bea:	d021      	beq.n	8025c30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025bec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025bee:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8025bf2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025bf4:	fb05 fb0b 	mul.w	fp, r5, fp
 8025bf8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025bfa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025bfe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8025c00:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025c04:	fb05 fa0a 	mul.w	sl, r5, sl
 8025c08:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025c0c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8025c10:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8025c14:	44de      	add	lr, fp
 8025c16:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025c1a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025c1e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025c22:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8025c26:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025c2a:	ea4e 050a 	orr.w	r5, lr, sl
 8025c2e:	950c      	str	r5, [sp, #48]	; 0x30
 8025c30:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025c32:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8025c36:	9d08      	ldr	r5, [sp, #32]
 8025c38:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8025c3c:	fb08 fc0c 	mul.w	ip, r8, ip
 8025c40:	fb01 cc0e 	mla	ip, r1, lr, ip
 8025c44:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025c48:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8025c4a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8025c4e:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8025c52:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8025c54:	fb09 cc0e 	mla	ip, r9, lr, ip
 8025c58:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8025c5c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8025c60:	fb08 f80e 	mul.w	r8, r8, lr
 8025c64:	fb01 8202 	mla	r2, r1, r2, r8
 8025c68:	9908      	ldr	r1, [sp, #32]
 8025c6a:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8025c6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8025c70:	fb00 220a 	mla	r2, r0, sl, r2
 8025c74:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8025c78:	fb09 2900 	mla	r9, r9, r0, r2
 8025c7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025c80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025c84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025c88:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8025c8c:	ea4c 0c09 	orr.w	ip, ip, r9
 8025c90:	2bff      	cmp	r3, #255	; 0xff
 8025c92:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8025c96:	f040 8091 	bne.w	8025dbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8025c9a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025c9e:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8025ca2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025ca6:	f022 0207 	bic.w	r2, r2, #7
 8025caa:	431a      	orrs	r2, r3
 8025cac:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025cb0:	ea4c 0c02 	orr.w	ip, ip, r2
 8025cb4:	f8a7 c000 	strh.w	ip, [r7]
 8025cb8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025cba:	441c      	add	r4, r3
 8025cbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025cbe:	441e      	add	r6, r3
 8025cc0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8025cc2:	3b01      	subs	r3, #1
 8025cc4:	3702      	adds	r7, #2
 8025cc6:	9317      	str	r3, [sp, #92]	; 0x5c
 8025cc8:	e6c0      	b.n	8025a4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8025cca:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8025ccc:	441c      	add	r4, r3
 8025cce:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8025cd0:	441e      	add	r6, r3
 8025cd2:	9b07      	ldr	r3, [sp, #28]
 8025cd4:	3b01      	subs	r3, #1
 8025cd6:	9307      	str	r3, [sp, #28]
 8025cd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025cda:	3302      	adds	r3, #2
 8025cdc:	930a      	str	r3, [sp, #40]	; 0x28
 8025cde:	e695      	b.n	8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025ce0:	d024      	beq.n	8025d2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025ce2:	9b07      	ldr	r3, [sp, #28]
 8025ce4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8025ce6:	3b01      	subs	r3, #1
 8025ce8:	fb00 4003 	mla	r0, r0, r3, r4
 8025cec:	1400      	asrs	r0, r0, #16
 8025cee:	f53f aeaa 	bmi.w	8025a46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025cf2:	3901      	subs	r1, #1
 8025cf4:	4288      	cmp	r0, r1
 8025cf6:	f6bf aea6 	bge.w	8025a46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025cfa:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8025cfc:	fb01 6303 	mla	r3, r1, r3, r6
 8025d00:	141b      	asrs	r3, r3, #16
 8025d02:	f53f aea0 	bmi.w	8025a46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025d06:	3a01      	subs	r2, #1
 8025d08:	4293      	cmp	r3, r2
 8025d0a:	f6bf ae9c 	bge.w	8025a46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025d0e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025d12:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8025d16:	f1bb 0f00 	cmp.w	fp, #0
 8025d1a:	f300 809a 	bgt.w	8025e52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025d1e:	9b07      	ldr	r3, [sp, #28]
 8025d20:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025d24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025d26:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8025d2a:	930a      	str	r3, [sp, #40]	; 0x28
 8025d2c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025d2e:	2b00      	cmp	r3, #0
 8025d30:	f340 81eb 	ble.w	802610a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8025d34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025d38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025d3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025d40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025d46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025d4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025d4e:	eef0 6a62 	vmov.f32	s13, s5
 8025d52:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025d56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025d5e:	ee16 4a90 	vmov	r4, s13
 8025d62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025d66:	eef0 6a43 	vmov.f32	s13, s6
 8025d6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025d6e:	ee12 2a90 	vmov	r2, s5
 8025d72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d7a:	ee13 2a10 	vmov	r2, s6
 8025d7e:	9327      	str	r3, [sp, #156]	; 0x9c
 8025d80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8025d86:	9328      	str	r3, [sp, #160]	; 0xa0
 8025d88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8025d8a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8025d8c:	3b01      	subs	r3, #1
 8025d8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025d92:	9316      	str	r3, [sp, #88]	; 0x58
 8025d94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025d96:	bf08      	it	eq
 8025d98:	4613      	moveq	r3, r2
 8025d9a:	ee16 6a90 	vmov	r6, s13
 8025d9e:	9307      	str	r3, [sp, #28]
 8025da0:	eeb0 3a67 	vmov.f32	s6, s15
 8025da4:	eef0 2a47 	vmov.f32	s5, s14
 8025da8:	e622      	b.n	80259f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8025daa:	2800      	cmp	r0, #0
 8025dac:	f43f ae92 	beq.w	8025ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025db0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025db4:	9308      	str	r3, [sp, #32]
 8025db6:	0e1b      	lsrs	r3, r3, #24
 8025db8:	9310      	str	r3, [sp, #64]	; 0x40
 8025dba:	e68b      	b.n	8025ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025dbc:	8839      	ldrh	r1, [r7, #0]
 8025dbe:	4dd4      	ldr	r5, [pc, #848]	; (8026110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8025dc0:	43db      	mvns	r3, r3
 8025dc2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8025dc6:	fa5f f883 	uxtb.w	r8, r3
 8025dca:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8025dce:	fb0e fe08 	mul.w	lr, lr, r8
 8025dd2:	10c8      	asrs	r0, r1, #3
 8025dd4:	00cb      	lsls	r3, r1, #3
 8025dd6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025dda:	f10e 0101 	add.w	r1, lr, #1
 8025dde:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025de2:	fb00 f008 	mul.w	r0, r0, r8
 8025de6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025dea:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025dee:	f100 0e01 	add.w	lr, r0, #1
 8025df2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025df6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025dfa:	b2db      	uxtb	r3, r3
 8025dfc:	b2c9      	uxtb	r1, r1
 8025dfe:	00d2      	lsls	r2, r2, #3
 8025e00:	fb03 f308 	mul.w	r3, r3, r8
 8025e04:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8025e08:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025e0c:	430a      	orrs	r2, r1
 8025e0e:	1c59      	adds	r1, r3, #1
 8025e10:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025e14:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025e18:	e748      	b.n	8025cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8025e1a:	f112 0801 	adds.w	r8, r2, #1
 8025e1e:	f53f af4b 	bmi.w	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025e22:	4543      	cmp	r3, r8
 8025e24:	f6ff af48 	blt.w	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025e28:	f11c 0801 	adds.w	r8, ip, #1
 8025e2c:	f53f af44 	bmi.w	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025e30:	45c6      	cmp	lr, r8
 8025e32:	f6ff af41 	blt.w	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025e36:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8025e3a:	fa0f f28e 	sxth.w	r2, lr
 8025e3e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8025e42:	9200      	str	r2, [sp, #0]
 8025e44:	b21b      	sxth	r3, r3
 8025e46:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8025e48:	9819      	ldr	r0, [sp, #100]	; 0x64
 8025e4a:	4639      	mov	r1, r7
 8025e4c:	f7ff fc87 	bl	802575e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8025e50:	e732      	b.n	8025cb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025e52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8025e54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025e56:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8025e5a:	1421      	asrs	r1, r4, #16
 8025e5c:	1433      	asrs	r3, r6, #16
 8025e5e:	fb07 1303 	mla	r3, r7, r3, r1
 8025e62:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8025e64:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8025e68:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8025e6c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025e70:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025e74:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025e78:	2a00      	cmp	r2, #0
 8025e7a:	f000 8107 	beq.w	802608c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8025e7e:	684d      	ldr	r5, [r1, #4]
 8025e80:	950d      	str	r5, [sp, #52]	; 0x34
 8025e82:	0e2d      	lsrs	r5, r5, #24
 8025e84:	9514      	str	r5, [sp, #80]	; 0x50
 8025e86:	b178      	cbz	r0, 8025ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025e88:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8025e8c:	3f01      	subs	r7, #1
 8025e8e:	00bf      	lsls	r7, r7, #2
 8025e90:	3704      	adds	r7, #4
 8025e92:	eb01 0e07 	add.w	lr, r1, r7
 8025e96:	59c9      	ldr	r1, [r1, r7]
 8025e98:	9109      	str	r1, [sp, #36]	; 0x24
 8025e9a:	0e09      	lsrs	r1, r1, #24
 8025e9c:	9111      	str	r1, [sp, #68]	; 0x44
 8025e9e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025ea2:	910e      	str	r1, [sp, #56]	; 0x38
 8025ea4:	0e09      	lsrs	r1, r1, #24
 8025ea6:	9115      	str	r1, [sp, #84]	; 0x54
 8025ea8:	b292      	uxth	r2, r2
 8025eaa:	b280      	uxth	r0, r0
 8025eac:	fb02 f900 	mul.w	r9, r2, r0
 8025eb0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025eb4:	0112      	lsls	r2, r2, #4
 8025eb6:	eba2 0e09 	sub.w	lr, r2, r9
 8025eba:	b280      	uxth	r0, r0
 8025ebc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8025ec0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8025ec2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025ec4:	fa1f fe8e 	uxth.w	lr, lr
 8025ec8:	1a09      	subs	r1, r1, r0
 8025eca:	b289      	uxth	r1, r1
 8025ecc:	fb0e f202 	mul.w	r2, lr, r2
 8025ed0:	fb01 220c 	mla	r2, r1, ip, r2
 8025ed4:	fb00 2205 	mla	r2, r0, r5, r2
 8025ed8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025eda:	fb09 2205 	mla	r2, r9, r5, r2
 8025ede:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025ee2:	2a00      	cmp	r2, #0
 8025ee4:	f000 80c9 	beq.w	802607a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8025ee8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8025eec:	d019      	beq.n	8025f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025eee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8025ef2:	fb0c fa0a 	mul.w	sl, ip, sl
 8025ef6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8025efa:	fb0c fc03 	mul.w	ip, ip, r3
 8025efe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025f02:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025f06:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8025f0a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8025f0e:	4453      	add	r3, sl
 8025f10:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025f14:	0a1b      	lsrs	r3, r3, #8
 8025f16:	0a3f      	lsrs	r7, r7, #8
 8025f18:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8025f1c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8025f20:	433b      	orrs	r3, r7
 8025f22:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025f24:	2dff      	cmp	r5, #255	; 0xff
 8025f26:	d020      	beq.n	8025f6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025f28:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025f2a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025f2e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025f30:	436f      	muls	r7, r5
 8025f32:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025f34:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025f38:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8025f3a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025f3e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025f42:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025f46:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025f4a:	44bc      	add	ip, r7
 8025f4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025f50:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025f54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025f58:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025f5c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025f60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025f64:	ea4c 050a 	orr.w	r5, ip, sl
 8025f68:	950d      	str	r5, [sp, #52]	; 0x34
 8025f6a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025f6c:	2dff      	cmp	r5, #255	; 0xff
 8025f6e:	d020      	beq.n	8025fb2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025f70:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025f72:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025f76:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025f78:	436f      	muls	r7, r5
 8025f7a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8025f7c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8025f80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8025f82:	fb05 fa0c 	mul.w	sl, r5, ip
 8025f86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025f8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025f8e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025f92:	44bc      	add	ip, r7
 8025f94:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025f98:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025f9c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025fa0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025fa4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025fa8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025fac:	ea4c 050a 	orr.w	r5, ip, sl
 8025fb0:	9509      	str	r5, [sp, #36]	; 0x24
 8025fb2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025fb4:	2dff      	cmp	r5, #255	; 0xff
 8025fb6:	d020      	beq.n	8025ffa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025fb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025fba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8025fbe:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025fc0:	436f      	muls	r7, r5
 8025fc2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8025fc4:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8025fc8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8025fca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025fce:	fb05 fa0a 	mul.w	sl, r5, sl
 8025fd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8025fd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025fda:	44bc      	add	ip, r7
 8025fdc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8025fe0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025fe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025fe8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025fec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8025ff0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8025ff4:	ea4c 050a 	orr.w	r5, ip, sl
 8025ff8:	950e      	str	r5, [sp, #56]	; 0x38
 8025ffa:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8025ffc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8026000:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8026002:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8026006:	fb0e f707 	mul.w	r7, lr, r7
 802600a:	fb01 770c 	mla	r7, r1, ip, r7
 802600e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8026012:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8026014:	fb00 770c 	mla	r7, r0, ip, r7
 8026018:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802601c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802601e:	fb09 770c 	mla	r7, r9, ip, r7
 8026022:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8026026:	fb0e fe0c 	mul.w	lr, lr, ip
 802602a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802602e:	fb01 e303 	mla	r3, r1, r3, lr
 8026032:	9909      	ldr	r1, [sp, #36]	; 0x24
 8026034:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8026038:	990e      	ldr	r1, [sp, #56]	; 0x38
 802603a:	fb00 330a 	mla	r3, r0, sl, r3
 802603e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8026042:	fb09 3c0c 	mla	ip, r9, ip, r3
 8026046:	0a3f      	lsrs	r7, r7, #8
 8026048:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802604c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8026050:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8026054:	ea47 070c 	orr.w	r7, r7, ip
 8026058:	2aff      	cmp	r2, #255	; 0xff
 802605a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802605e:	d11e      	bne.n	802609e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8026060:	097a      	lsrs	r2, r7, #5
 8026062:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8026066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802606a:	f023 0307 	bic.w	r3, r3, #7
 802606e:	4313      	orrs	r3, r2
 8026070:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026074:	431f      	orrs	r7, r3
 8026076:	f8a8 7000 	strh.w	r7, [r8]
 802607a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802607c:	441c      	add	r4, r3
 802607e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026080:	f108 0802 	add.w	r8, r8, #2
 8026084:	441e      	add	r6, r3
 8026086:	f10b 3bff 	add.w	fp, fp, #4294967295
 802608a:	e644      	b.n	8025d16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802608c:	2800      	cmp	r0, #0
 802608e:	f43f af0b 	beq.w	8025ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8026092:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8026096:	9109      	str	r1, [sp, #36]	; 0x24
 8026098:	0e09      	lsrs	r1, r1, #24
 802609a:	9111      	str	r1, [sp, #68]	; 0x44
 802609c:	e704      	b.n	8025ea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802609e:	f8b8 1000 	ldrh.w	r1, [r8]
 80260a2:	43d2      	mvns	r2, r2
 80260a4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80260a8:	fa5f fe82 	uxtb.w	lr, r2
 80260ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80260b0:	fb0c fc0e 	mul.w	ip, ip, lr
 80260b4:	10c8      	asrs	r0, r1, #3
 80260b6:	00ca      	lsls	r2, r1, #3
 80260b8:	f10c 0101 	add.w	r1, ip, #1
 80260bc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80260c0:	0c39      	lsrs	r1, r7, #16
 80260c2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80260c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80260ca:	4911      	ldr	r1, [pc, #68]	; (8026110 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80260cc:	fb00 f00e 	mul.w	r0, r0, lr
 80260d0:	fa5f fc8c 	uxtb.w	ip, ip
 80260d4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80260d8:	b2d2      	uxtb	r2, r2
 80260da:	1c41      	adds	r1, r0, #1
 80260dc:	fb02 f20e 	mul.w	r2, r2, lr
 80260e0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80260e4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80260e8:	1c51      	adds	r1, r2, #1
 80260ea:	00c0      	lsls	r0, r0, #3
 80260ec:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80260f0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80260f4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80260f8:	ea4c 0c00 	orr.w	ip, ip, r0
 80260fc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8026100:	ea47 0c0c 	orr.w	ip, r7, ip
 8026104:	f8a8 c000 	strh.w	ip, [r8]
 8026108:	e7b7      	b.n	802607a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802610a:	b01b      	add	sp, #108	; 0x6c
 802610c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026110:	fffff800 	.word	0xfffff800

08026114 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8026114:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026118:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802611c:	2d00      	cmp	r5, #0
 802611e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8026122:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026126:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802612a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802612e:	fb05 0e03 	mla	lr, r5, r3, r0
 8026132:	f2c0 808c 	blt.w	802624e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8026136:	45a9      	cmp	r9, r5
 8026138:	f340 8089 	ble.w	802624e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802613c:	2800      	cmp	r0, #0
 802613e:	f2c0 8084 	blt.w	802624a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026142:	4580      	cmp	r8, r0
 8026144:	f340 8081 	ble.w	802624a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8026148:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802614c:	f01e 0f01 	tst.w	lr, #1
 8026150:	5d16      	ldrb	r6, [r2, r4]
 8026152:	bf0c      	ite	eq
 8026154:	f006 060f 	andeq.w	r6, r6, #15
 8026158:	1136      	asrne	r6, r6, #4
 802615a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802615e:	b2f6      	uxtb	r6, r6
 8026160:	1c44      	adds	r4, r0, #1
 8026162:	d477      	bmi.n	8026254 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026164:	45a0      	cmp	r8, r4
 8026166:	dd75      	ble.n	8026254 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8026168:	2f00      	cmp	r7, #0
 802616a:	d075      	beq.n	8026258 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802616c:	f10e 0a01 	add.w	sl, lr, #1
 8026170:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026174:	f01a 0f01 	tst.w	sl, #1
 8026178:	5d14      	ldrb	r4, [r2, r4]
 802617a:	bf0c      	ite	eq
 802617c:	f004 040f 	andeq.w	r4, r4, #15
 8026180:	1124      	asrne	r4, r4, #4
 8026182:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026186:	b2e4      	uxtb	r4, r4
 8026188:	3501      	adds	r5, #1
 802618a:	d469      	bmi.n	8026260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802618c:	45a9      	cmp	r9, r5
 802618e:	dd67      	ble.n	8026260 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8026190:	f1bc 0f00 	cmp.w	ip, #0
 8026194:	d067      	beq.n	8026266 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8026196:	2800      	cmp	r0, #0
 8026198:	db60      	blt.n	802625c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802619a:	4580      	cmp	r8, r0
 802619c:	dd5e      	ble.n	802625c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802619e:	eb03 090e 	add.w	r9, r3, lr
 80261a2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80261a6:	f019 0f01 	tst.w	r9, #1
 80261aa:	5d55      	ldrb	r5, [r2, r5]
 80261ac:	bf0c      	ite	eq
 80261ae:	f005 050f 	andeq.w	r5, r5, #15
 80261b2:	112d      	asrne	r5, r5, #4
 80261b4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80261b8:	b2ed      	uxtb	r5, r5
 80261ba:	3001      	adds	r0, #1
 80261bc:	d456      	bmi.n	802626c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80261be:	4580      	cmp	r8, r0
 80261c0:	dd54      	ble.n	802626c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80261c2:	2f00      	cmp	r7, #0
 80261c4:	d054      	beq.n	8026270 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80261c6:	3301      	adds	r3, #1
 80261c8:	449e      	add	lr, r3
 80261ca:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80261ce:	f01e 0f01 	tst.w	lr, #1
 80261d2:	5cd0      	ldrb	r0, [r2, r3]
 80261d4:	bf0c      	ite	eq
 80261d6:	f000 000f 	andeq.w	r0, r0, #15
 80261da:	1100      	asrne	r0, r0, #4
 80261dc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80261e0:	b2c3      	uxtb	r3, r0
 80261e2:	b2ba      	uxth	r2, r7
 80261e4:	fa1f fc8c 	uxth.w	ip, ip
 80261e8:	fb02 f00c 	mul.w	r0, r2, ip
 80261ec:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80261f0:	0112      	lsls	r2, r2, #4
 80261f2:	fa1f fc8c 	uxth.w	ip, ip
 80261f6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80261fa:	1a12      	subs	r2, r2, r0
 80261fc:	eba7 070c 	sub.w	r7, r7, ip
 8026200:	b292      	uxth	r2, r2
 8026202:	b2bf      	uxth	r7, r7
 8026204:	4362      	muls	r2, r4
 8026206:	fb06 2207 	mla	r2, r6, r7, r2
 802620a:	fb0c 2505 	mla	r5, ip, r5, r2
 802620e:	fb00 5303 	mla	r3, r0, r3, r5
 8026212:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026216:	b1b3      	cbz	r3, 8026246 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8026218:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802621c:	435a      	muls	r2, r3
 802621e:	1c53      	adds	r3, r2, #1
 8026220:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026224:	4a2d      	ldr	r2, [pc, #180]	; (80262dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8026226:	121b      	asrs	r3, r3, #8
 8026228:	6812      	ldr	r2, [r2, #0]
 802622a:	2bff      	cmp	r3, #255	; 0xff
 802622c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8026230:	d120      	bne.n	8026274 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8026232:	4b2b      	ldr	r3, [pc, #172]	; (80262e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8026234:	0950      	lsrs	r0, r2, #5
 8026236:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802623a:	4033      	ands	r3, r6
 802623c:	4318      	orrs	r0, r3
 802623e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026242:	4302      	orrs	r2, r0
 8026244:	800a      	strh	r2, [r1, #0]
 8026246:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802624a:	2600      	movs	r6, #0
 802624c:	e788      	b.n	8026160 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802624e:	2400      	movs	r4, #0
 8026250:	4626      	mov	r6, r4
 8026252:	e799      	b.n	8026188 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026254:	2400      	movs	r4, #0
 8026256:	e797      	b.n	8026188 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8026258:	463c      	mov	r4, r7
 802625a:	e795      	b.n	8026188 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802625c:	2500      	movs	r5, #0
 802625e:	e7ac      	b.n	80261ba <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8026260:	2300      	movs	r3, #0
 8026262:	461d      	mov	r5, r3
 8026264:	e7bd      	b.n	80261e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026266:	4663      	mov	r3, ip
 8026268:	4665      	mov	r5, ip
 802626a:	e7ba      	b.n	80261e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802626c:	2300      	movs	r3, #0
 802626e:	e7b8      	b.n	80261e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026270:	463b      	mov	r3, r7
 8026272:	e7b6      	b.n	80261e2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8026274:	880d      	ldrh	r5, [r1, #0]
 8026276:	b29f      	uxth	r7, r3
 8026278:	122c      	asrs	r4, r5, #8
 802627a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802627e:	43db      	mvns	r3, r3
 8026280:	b2db      	uxtb	r3, r3
 8026282:	fb10 f007 	smulbb	r0, r0, r7
 8026286:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802628a:	fb04 0403 	mla	r4, r4, r3, r0
 802628e:	b2f6      	uxtb	r6, r6
 8026290:	10e8      	asrs	r0, r5, #3
 8026292:	b2d2      	uxtb	r2, r2
 8026294:	00ed      	lsls	r5, r5, #3
 8026296:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802629a:	fb12 f207 	smulbb	r2, r2, r7
 802629e:	fb16 f607 	smulbb	r6, r6, r7
 80262a2:	b2ed      	uxtb	r5, r5
 80262a4:	b2a4      	uxth	r4, r4
 80262a6:	fb00 6603 	mla	r6, r0, r3, r6
 80262aa:	fb05 2303 	mla	r3, r5, r3, r2
 80262ae:	b29a      	uxth	r2, r3
 80262b0:	1c63      	adds	r3, r4, #1
 80262b2:	b2b0      	uxth	r0, r6
 80262b4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80262b8:	1c53      	adds	r3, r2, #1
 80262ba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80262be:	1c42      	adds	r2, r0, #1
 80262c0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80262c4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80262c8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80262cc:	0940      	lsrs	r0, r0, #5
 80262ce:	4323      	orrs	r3, r4
 80262d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80262d4:	4303      	orrs	r3, r0
 80262d6:	800b      	strh	r3, [r1, #0]
 80262d8:	e7b5      	b.n	8026246 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80262da:	bf00      	nop
 80262dc:	200137fc 	.word	0x200137fc
 80262e0:	00fff800 	.word	0x00fff800

080262e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80262e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80262e8:	b097      	sub	sp, #92	; 0x5c
 80262ea:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80262ee:	9214      	str	r2, [sp, #80]	; 0x50
 80262f0:	9309      	str	r3, [sp, #36]	; 0x24
 80262f2:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80262f4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80262f8:	910d      	str	r1, [sp, #52]	; 0x34
 80262fa:	930f      	str	r3, [sp, #60]	; 0x3c
 80262fc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8026300:	9015      	str	r0, [sp, #84]	; 0x54
 8026302:	6850      	ldr	r0, [r2, #4]
 8026304:	6812      	ldr	r2, [r2, #0]
 8026306:	fb00 1303 	mla	r3, r0, r3, r1
 802630a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802630e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026310:	689b      	ldr	r3, [r3, #8]
 8026312:	3301      	adds	r3, #1
 8026314:	f023 0301 	bic.w	r3, r3, #1
 8026318:	930a      	str	r3, [sp, #40]	; 0x28
 802631a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802631c:	681f      	ldr	r7, [r3, #0]
 802631e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026320:	2b00      	cmp	r3, #0
 8026322:	dc03      	bgt.n	802632c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8026324:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026326:	2b00      	cmp	r3, #0
 8026328:	f340 8287 	ble.w	802683a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802632c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802632e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026332:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026336:	1e48      	subs	r0, r1, #1
 8026338:	f102 3cff 	add.w	ip, r2, #4294967295
 802633c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802633e:	2b00      	cmp	r3, #0
 8026340:	f340 80c4 	ble.w	80264cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8026344:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026348:	ea4f 4326 	mov.w	r3, r6, asr #16
 802634c:	d406      	bmi.n	802635c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802634e:	4586      	cmp	lr, r0
 8026350:	da04      	bge.n	802635c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026352:	2b00      	cmp	r3, #0
 8026354:	db02      	blt.n	802635c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8026356:	4563      	cmp	r3, ip
 8026358:	f2c0 80b9 	blt.w	80264ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802635c:	f11e 0e01 	adds.w	lr, lr, #1
 8026360:	f100 80aa 	bmi.w	80264b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026364:	4571      	cmp	r1, lr
 8026366:	f2c0 80a7 	blt.w	80264b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802636a:	3301      	adds	r3, #1
 802636c:	f100 80a4 	bmi.w	80264b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026370:	429a      	cmp	r2, r3
 8026372:	f2c0 80a1 	blt.w	80264b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8026376:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026378:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802637c:	930e      	str	r3, [sp, #56]	; 0x38
 802637e:	46c8      	mov	r8, r9
 8026380:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026382:	2b00      	cmp	r3, #0
 8026384:	f340 80c3 	ble.w	802650e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026388:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802638a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802638e:	1423      	asrs	r3, r4, #16
 8026390:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026394:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8026398:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802639c:	f100 814d 	bmi.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80263a0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80263a4:	455b      	cmp	r3, fp
 80263a6:	f280 8148 	bge.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80263aa:	2800      	cmp	r0, #0
 80263ac:	f2c0 8145 	blt.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80263b0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80263b4:	4558      	cmp	r0, fp
 80263b6:	f280 8140 	bge.w	802663a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80263ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80263bc:	fb00 3305 	mla	r3, r0, r5, r3
 80263c0:	0858      	lsrs	r0, r3, #1
 80263c2:	07dd      	lsls	r5, r3, #31
 80263c4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80263c8:	bf54      	ite	pl
 80263ca:	f00c 0c0f 	andpl.w	ip, ip, #15
 80263ce:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80263d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80263d6:	fa5f fc8c 	uxtb.w	ip, ip
 80263da:	2a00      	cmp	r2, #0
 80263dc:	f000 80db 	beq.w	8026596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80263e0:	1c58      	adds	r0, r3, #1
 80263e2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80263e6:	07c0      	lsls	r0, r0, #31
 80263e8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80263ec:	bf54      	ite	pl
 80263ee:	f00e 0e0f 	andpl.w	lr, lr, #15
 80263f2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80263f6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80263fa:	fa5f f08e 	uxtb.w	r0, lr
 80263fe:	9010      	str	r0, [sp, #64]	; 0x40
 8026400:	b1c9      	cbz	r1, 8026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8026402:	4453      	add	r3, sl
 8026404:	0858      	lsrs	r0, r3, #1
 8026406:	07dd      	lsls	r5, r3, #31
 8026408:	5c38      	ldrb	r0, [r7, r0]
 802640a:	bf54      	ite	pl
 802640c:	f000 000f 	andpl.w	r0, r0, #15
 8026410:	1100      	asrmi	r0, r0, #4
 8026412:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026416:	3301      	adds	r3, #1
 8026418:	b2c0      	uxtb	r0, r0
 802641a:	900b      	str	r0, [sp, #44]	; 0x2c
 802641c:	0858      	lsrs	r0, r3, #1
 802641e:	07dd      	lsls	r5, r3, #31
 8026420:	f817 e000 	ldrb.w	lr, [r7, r0]
 8026424:	bf54      	ite	pl
 8026426:	f00e 030f 	andpl.w	r3, lr, #15
 802642a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802642e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026432:	b2db      	uxtb	r3, r3
 8026434:	9311      	str	r3, [sp, #68]	; 0x44
 8026436:	b292      	uxth	r2, r2
 8026438:	b289      	uxth	r1, r1
 802643a:	fb02 f301 	mul.w	r3, r2, r1
 802643e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026442:	0112      	lsls	r2, r2, #4
 8026444:	b289      	uxth	r1, r1
 8026446:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802644a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802644c:	1ad2      	subs	r2, r2, r3
 802644e:	1a40      	subs	r0, r0, r1
 8026450:	b292      	uxth	r2, r2
 8026452:	436a      	muls	r2, r5
 8026454:	b280      	uxth	r0, r0
 8026456:	fb0c 2c00 	mla	ip, ip, r0, r2
 802645a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802645c:	fb01 c102 	mla	r1, r1, r2, ip
 8026460:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8026462:	fb03 1302 	mla	r3, r3, r2, r1
 8026466:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802646a:	b1db      	cbz	r3, 80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802646c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802646e:	4353      	muls	r3, r2
 8026470:	1c5a      	adds	r2, r3, #1
 8026472:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026476:	4ac6      	ldr	r2, [pc, #792]	; (8026790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026478:	121b      	asrs	r3, r3, #8
 802647a:	6812      	ldr	r2, [r2, #0]
 802647c:	2bff      	cmp	r3, #255	; 0xff
 802647e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8026482:	f040 8099 	bne.w	80265b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8026486:	0953      	lsrs	r3, r2, #5
 8026488:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802648c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026490:	f02c 0c07 	bic.w	ip, ip, #7
 8026494:	ea43 0c0c 	orr.w	ip, r3, ip
 8026498:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802649c:	ea4c 0202 	orr.w	r2, ip, r2
 80264a0:	f8a8 2000 	strh.w	r2, [r8]
 80264a4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80264a6:	441c      	add	r4, r3
 80264a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264aa:	441e      	add	r6, r3
 80264ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80264ae:	3b01      	subs	r3, #1
 80264b0:	f108 0802 	add.w	r8, r8, #2
 80264b4:	930e      	str	r3, [sp, #56]	; 0x38
 80264b6:	e763      	b.n	8026380 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80264b8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80264ba:	441c      	add	r4, r3
 80264bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80264be:	441e      	add	r6, r3
 80264c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264c2:	3b01      	subs	r3, #1
 80264c4:	9309      	str	r3, [sp, #36]	; 0x24
 80264c6:	f109 0902 	add.w	r9, r9, #2
 80264ca:	e737      	b.n	802633c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80264cc:	d024      	beq.n	8026518 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80264ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80264d0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80264d2:	3b01      	subs	r3, #1
 80264d4:	fb00 4003 	mla	r0, r0, r3, r4
 80264d8:	1400      	asrs	r0, r0, #16
 80264da:	f53f af4c 	bmi.w	8026376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80264de:	3901      	subs	r1, #1
 80264e0:	4288      	cmp	r0, r1
 80264e2:	f6bf af48 	bge.w	8026376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80264e6:	9924      	ldr	r1, [sp, #144]	; 0x90
 80264e8:	fb01 6303 	mla	r3, r1, r3, r6
 80264ec:	141b      	asrs	r3, r3, #16
 80264ee:	f53f af42 	bmi.w	8026376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80264f2:	3a01      	subs	r2, #1
 80264f4:	4293      	cmp	r3, r2
 80264f6:	f6bf af3e 	bge.w	8026376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80264fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80264fe:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026502:	930e      	str	r3, [sp, #56]	; 0x38
 8026504:	46c8      	mov	r8, r9
 8026506:	f1bb 0f00 	cmp.w	fp, #0
 802650a:	f300 80b7 	bgt.w	802667c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802650e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026510:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8026514:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026518:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802651a:	2b00      	cmp	r3, #0
 802651c:	f340 818d 	ble.w	802683a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8026520:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026524:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026528:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802652c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802652e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026532:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026536:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802653a:	eef0 6a62 	vmov.f32	s13, s5
 802653e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026542:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026546:	ee77 2a62 	vsub.f32	s5, s14, s5
 802654a:	ee16 4a90 	vmov	r4, s13
 802654e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026552:	eef0 6a43 	vmov.f32	s13, s6
 8026556:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802655a:	ee12 2a90 	vmov	r2, s5
 802655e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026562:	fb92 f3f3 	sdiv	r3, r2, r3
 8026566:	ee13 2a10 	vmov	r2, s6
 802656a:	9323      	str	r3, [sp, #140]	; 0x8c
 802656c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802656e:	fb92 f3f3 	sdiv	r3, r2, r3
 8026572:	9324      	str	r3, [sp, #144]	; 0x90
 8026574:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026576:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026578:	3b01      	subs	r3, #1
 802657a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802657e:	930d      	str	r3, [sp, #52]	; 0x34
 8026580:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026582:	bf08      	it	eq
 8026584:	4613      	moveq	r3, r2
 8026586:	ee16 6a90 	vmov	r6, s13
 802658a:	9309      	str	r3, [sp, #36]	; 0x24
 802658c:	eeb0 3a67 	vmov.f32	s6, s15
 8026590:	eef0 2a47 	vmov.f32	s5, s14
 8026594:	e6c3      	b.n	802631e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026596:	2900      	cmp	r1, #0
 8026598:	f43f af4d 	beq.w	8026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802659c:	eb0a 0003 	add.w	r0, sl, r3
 80265a0:	0843      	lsrs	r3, r0, #1
 80265a2:	07c0      	lsls	r0, r0, #31
 80265a4:	5cfb      	ldrb	r3, [r7, r3]
 80265a6:	bf54      	ite	pl
 80265a8:	f003 030f 	andpl.w	r3, r3, #15
 80265ac:	111b      	asrmi	r3, r3, #4
 80265ae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80265b2:	b2db      	uxtb	r3, r3
 80265b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80265b6:	e73e      	b.n	8026436 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80265b8:	f8b8 e000 	ldrh.w	lr, [r8]
 80265bc:	fa1f fb83 	uxth.w	fp, r3
 80265c0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80265c4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80265c8:	43db      	mvns	r3, r3
 80265ca:	b2db      	uxtb	r3, r3
 80265cc:	fb11 f10b 	smulbb	r1, r1, fp
 80265d0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80265d4:	fb00 1003 	mla	r0, r0, r3, r1
 80265d8:	fa5f fc8c 	uxtb.w	ip, ip
 80265dc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80265e0:	b2d2      	uxtb	r2, r2
 80265e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80265e6:	b280      	uxth	r0, r0
 80265e8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80265ec:	fb1c fc0b 	smulbb	ip, ip, fp
 80265f0:	fa5f fe8e 	uxtb.w	lr, lr
 80265f4:	fb12 fb0b 	smulbb	fp, r2, fp
 80265f8:	fb01 cc03 	mla	ip, r1, r3, ip
 80265fc:	fb0e bb03 	mla	fp, lr, r3, fp
 8026600:	1c43      	adds	r3, r0, #1
 8026602:	fa1f fc8c 	uxth.w	ip, ip
 8026606:	fa1f fb8b 	uxth.w	fp, fp
 802660a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802660e:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8026612:	f10c 0101 	add.w	r1, ip, #1
 8026616:	f10b 0001 	add.w	r0, fp, #1
 802661a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802661e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026622:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026626:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802662a:	4318      	orrs	r0, r3
 802662c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026630:	ea40 000c 	orr.w	r0, r0, ip
 8026634:	f8a8 0000 	strh.w	r0, [r8]
 8026638:	e734      	b.n	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802663a:	f113 0b01 	adds.w	fp, r3, #1
 802663e:	f53f af31 	bmi.w	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026642:	45dc      	cmp	ip, fp
 8026644:	f6ff af2e 	blt.w	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026648:	f110 0b01 	adds.w	fp, r0, #1
 802664c:	f53f af2a 	bmi.w	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026650:	45de      	cmp	lr, fp
 8026652:	f6ff af27 	blt.w	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8026656:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8026658:	9302      	str	r3, [sp, #8]
 802665a:	fa0f f38e 	sxth.w	r3, lr
 802665e:	9301      	str	r3, [sp, #4]
 8026660:	fa0f f38c 	sxth.w	r3, ip
 8026664:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026668:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802666c:	9300      	str	r3, [sp, #0]
 802666e:	463a      	mov	r2, r7
 8026670:	4653      	mov	r3, sl
 8026672:	4641      	mov	r1, r8
 8026674:	9815      	ldr	r0, [sp, #84]	; 0x54
 8026676:	f7ff fd4d 	bl	8026114 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802667a:	e713      	b.n	80264a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802667c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802667e:	1422      	asrs	r2, r4, #16
 8026680:	1433      	asrs	r3, r6, #16
 8026682:	fb05 2303 	mla	r3, r5, r3, r2
 8026686:	085a      	lsrs	r2, r3, #1
 8026688:	07dd      	lsls	r5, r3, #31
 802668a:	5cba      	ldrb	r2, [r7, r2]
 802668c:	bf54      	ite	pl
 802668e:	f002 020f 	andpl.w	r2, r2, #15
 8026692:	1112      	asrmi	r2, r2, #4
 8026694:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026698:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802669c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80266a0:	b2d2      	uxtb	r2, r2
 80266a2:	2900      	cmp	r1, #0
 80266a4:	d076      	beq.n	8026794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80266a6:	f103 0e01 	add.w	lr, r3, #1
 80266aa:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80266ae:	f01e 0f01 	tst.w	lr, #1
 80266b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80266b6:	bf0c      	ite	eq
 80266b8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80266bc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80266c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80266c4:	fa5f f58c 	uxtb.w	r5, ip
 80266c8:	9512      	str	r5, [sp, #72]	; 0x48
 80266ca:	b300      	cbz	r0, 802670e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80266cc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80266ce:	442b      	add	r3, r5
 80266d0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80266d4:	07dd      	lsls	r5, r3, #31
 80266d6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80266da:	bf54      	ite	pl
 80266dc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80266e0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80266e4:	3301      	adds	r3, #1
 80266e6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80266ea:	fa5f f58c 	uxtb.w	r5, ip
 80266ee:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80266f2:	950c      	str	r5, [sp, #48]	; 0x30
 80266f4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80266f8:	07dd      	lsls	r5, r3, #31
 80266fa:	bf54      	ite	pl
 80266fc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026700:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026704:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026708:	fa5f f38c 	uxtb.w	r3, ip
 802670c:	9313      	str	r3, [sp, #76]	; 0x4c
 802670e:	b289      	uxth	r1, r1
 8026710:	b280      	uxth	r0, r0
 8026712:	fb01 f300 	mul.w	r3, r1, r0
 8026716:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802671a:	0109      	lsls	r1, r1, #4
 802671c:	b280      	uxth	r0, r0
 802671e:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8026722:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8026724:	1ac9      	subs	r1, r1, r3
 8026726:	ebac 0c00 	sub.w	ip, ip, r0
 802672a:	b289      	uxth	r1, r1
 802672c:	4369      	muls	r1, r5
 802672e:	fa1f fc8c 	uxth.w	ip, ip
 8026732:	fb02 120c 	mla	r2, r2, ip, r1
 8026736:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026738:	fb00 2001 	mla	r0, r0, r1, r2
 802673c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802673e:	fb03 0302 	mla	r3, r3, r2, r0
 8026742:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026746:	b1d3      	cbz	r3, 802677e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8026748:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802674a:	4353      	muls	r3, r2
 802674c:	1c5a      	adds	r2, r3, #1
 802674e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8026752:	4a0f      	ldr	r2, [pc, #60]	; (8026790 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8026754:	121b      	asrs	r3, r3, #8
 8026756:	6812      	ldr	r2, [r2, #0]
 8026758:	2bff      	cmp	r3, #255	; 0xff
 802675a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802675e:	d12d      	bne.n	80267bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8026760:	0953      	lsrs	r3, r2, #5
 8026762:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8026766:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802676a:	f02c 0c07 	bic.w	ip, ip, #7
 802676e:	ea43 0c0c 	orr.w	ip, r3, ip
 8026772:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026776:	ea4c 0202 	orr.w	r2, ip, r2
 802677a:	f8a8 2000 	strh.w	r2, [r8]
 802677e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8026780:	441c      	add	r4, r3
 8026782:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026784:	f108 0802 	add.w	r8, r8, #2
 8026788:	441e      	add	r6, r3
 802678a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802678e:	e6ba      	b.n	8026506 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8026790:	200137fc 	.word	0x200137fc
 8026794:	2800      	cmp	r0, #0
 8026796:	d0ba      	beq.n	802670e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8026798:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802679a:	442b      	add	r3, r5
 802679c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80267a0:	07db      	lsls	r3, r3, #31
 80267a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80267a6:	bf54      	ite	pl
 80267a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80267ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80267b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80267b4:	fa5f f38c 	uxtb.w	r3, ip
 80267b8:	930c      	str	r3, [sp, #48]	; 0x30
 80267ba:	e7a8      	b.n	802670e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80267bc:	f8b8 e000 	ldrh.w	lr, [r8]
 80267c0:	fa1f fa83 	uxth.w	sl, r3
 80267c4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80267c8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80267cc:	43db      	mvns	r3, r3
 80267ce:	b2db      	uxtb	r3, r3
 80267d0:	fb11 f10a 	smulbb	r1, r1, sl
 80267d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80267d8:	fb00 1003 	mla	r0, r0, r3, r1
 80267dc:	b2d2      	uxtb	r2, r2
 80267de:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80267e2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80267e6:	fa5f fe8e 	uxtb.w	lr, lr
 80267ea:	fb12 f20a 	smulbb	r2, r2, sl
 80267ee:	fb0e 2203 	mla	r2, lr, r3, r2
 80267f2:	fa5f fc8c 	uxtb.w	ip, ip
 80267f6:	b280      	uxth	r0, r0
 80267f8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80267fc:	b292      	uxth	r2, r2
 80267fe:	fb1c fc0a 	smulbb	ip, ip, sl
 8026802:	fb01 cc03 	mla	ip, r1, r3, ip
 8026806:	1c43      	adds	r3, r0, #1
 8026808:	1c51      	adds	r1, r2, #1
 802680a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802680e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026812:	fa1f fc8c 	uxth.w	ip, ip
 8026816:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802681a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802681e:	4308      	orrs	r0, r1
 8026820:	f10c 0101 	add.w	r1, ip, #1
 8026824:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026828:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802682c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8026830:	ea40 000c 	orr.w	r0, r0, ip
 8026834:	f8a8 0000 	strh.w	r0, [r8]
 8026838:	e7a1      	b.n	802677e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802683a:	b017      	add	sp, #92	; 0x5c
 802683c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026840 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8026840:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026844:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8026848:	2d00      	cmp	r5, #0
 802684a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802684e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8026852:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8026856:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802685a:	fb05 0e03 	mla	lr, r5, r3, r0
 802685e:	f2c0 80b0 	blt.w	80269c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026862:	45a9      	cmp	r9, r5
 8026864:	f340 80ad 	ble.w	80269c2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8026868:	2800      	cmp	r0, #0
 802686a:	f2c0 80a8 	blt.w	80269be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802686e:	4580      	cmp	r8, r0
 8026870:	f340 80a5 	ble.w	80269be <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8026874:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8026878:	f01e 0f01 	tst.w	lr, #1
 802687c:	5d16      	ldrb	r6, [r2, r4]
 802687e:	bf0c      	ite	eq
 8026880:	f006 060f 	andeq.w	r6, r6, #15
 8026884:	1136      	asrne	r6, r6, #4
 8026886:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802688a:	b2f6      	uxtb	r6, r6
 802688c:	1c44      	adds	r4, r0, #1
 802688e:	f100 809b 	bmi.w	80269c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026892:	45a0      	cmp	r8, r4
 8026894:	f340 8098 	ble.w	80269c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026898:	2f00      	cmp	r7, #0
 802689a:	f000 8097 	beq.w	80269cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802689e:	f10e 0a01 	add.w	sl, lr, #1
 80268a2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80268a6:	f01a 0f01 	tst.w	sl, #1
 80268aa:	5d14      	ldrb	r4, [r2, r4]
 80268ac:	bf0c      	ite	eq
 80268ae:	f004 040f 	andeq.w	r4, r4, #15
 80268b2:	1124      	asrne	r4, r4, #4
 80268b4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80268b8:	b2e4      	uxtb	r4, r4
 80268ba:	3501      	adds	r5, #1
 80268bc:	f100 808a 	bmi.w	80269d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80268c0:	45a9      	cmp	r9, r5
 80268c2:	f340 8087 	ble.w	80269d4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80268c6:	f1bc 0f00 	cmp.w	ip, #0
 80268ca:	f000 8086 	beq.w	80269da <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80268ce:	2800      	cmp	r0, #0
 80268d0:	db7e      	blt.n	80269d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80268d2:	4580      	cmp	r8, r0
 80268d4:	dd7c      	ble.n	80269d0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80268d6:	eb03 090e 	add.w	r9, r3, lr
 80268da:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80268de:	f019 0f01 	tst.w	r9, #1
 80268e2:	5d55      	ldrb	r5, [r2, r5]
 80268e4:	bf0c      	ite	eq
 80268e6:	f005 050f 	andeq.w	r5, r5, #15
 80268ea:	112d      	asrne	r5, r5, #4
 80268ec:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80268f0:	b2ed      	uxtb	r5, r5
 80268f2:	3001      	adds	r0, #1
 80268f4:	d474      	bmi.n	80269e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80268f6:	4580      	cmp	r8, r0
 80268f8:	dd72      	ble.n	80269e0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80268fa:	2f00      	cmp	r7, #0
 80268fc:	d072      	beq.n	80269e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80268fe:	3301      	adds	r3, #1
 8026900:	449e      	add	lr, r3
 8026902:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026906:	f01e 0f01 	tst.w	lr, #1
 802690a:	5cd0      	ldrb	r0, [r2, r3]
 802690c:	bf0c      	ite	eq
 802690e:	f000 000f 	andeq.w	r0, r0, #15
 8026912:	1100      	asrne	r0, r0, #4
 8026914:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026918:	b2c3      	uxtb	r3, r0
 802691a:	b2ba      	uxth	r2, r7
 802691c:	fa1f fc8c 	uxth.w	ip, ip
 8026920:	fb02 f00c 	mul.w	r0, r2, ip
 8026924:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026928:	0112      	lsls	r2, r2, #4
 802692a:	fa1f fc8c 	uxth.w	ip, ip
 802692e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8026932:	1a12      	subs	r2, r2, r0
 8026934:	eba7 070c 	sub.w	r7, r7, ip
 8026938:	b292      	uxth	r2, r2
 802693a:	b2bf      	uxth	r7, r7
 802693c:	4362      	muls	r2, r4
 802693e:	fb06 2207 	mla	r2, r6, r7, r2
 8026942:	fb0c 2505 	mla	r5, ip, r5, r2
 8026946:	fb00 5303 	mla	r3, r0, r3, r5
 802694a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802694e:	b3a3      	cbz	r3, 80269ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8026950:	4a25      	ldr	r2, [pc, #148]	; (80269e8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8026952:	880e      	ldrh	r6, [r1, #0]
 8026954:	6815      	ldr	r5, [r2, #0]
 8026956:	1234      	asrs	r4, r6, #8
 8026958:	b29a      	uxth	r2, r3
 802695a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802695e:	43db      	mvns	r3, r3
 8026960:	b2db      	uxtb	r3, r3
 8026962:	fb10 f002 	smulbb	r0, r0, r2
 8026966:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802696a:	fb04 0403 	mla	r4, r4, r3, r0
 802696e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8026972:	10f0      	asrs	r0, r6, #3
 8026974:	b2ed      	uxtb	r5, r5
 8026976:	00f6      	lsls	r6, r6, #3
 8026978:	fb17 f702 	smulbb	r7, r7, r2
 802697c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8026980:	fb15 f202 	smulbb	r2, r5, r2
 8026984:	b2f6      	uxtb	r6, r6
 8026986:	b2a4      	uxth	r4, r4
 8026988:	fb00 7003 	mla	r0, r0, r3, r7
 802698c:	fb06 2303 	mla	r3, r6, r3, r2
 8026990:	b29a      	uxth	r2, r3
 8026992:	1c63      	adds	r3, r4, #1
 8026994:	b280      	uxth	r0, r0
 8026996:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802699a:	1c53      	adds	r3, r2, #1
 802699c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80269a0:	1c42      	adds	r2, r0, #1
 80269a2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80269a6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80269aa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80269ae:	0940      	lsrs	r0, r0, #5
 80269b0:	4323      	orrs	r3, r4
 80269b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80269b6:	4303      	orrs	r3, r0
 80269b8:	800b      	strh	r3, [r1, #0]
 80269ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80269be:	2600      	movs	r6, #0
 80269c0:	e764      	b.n	802688c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 80269c2:	2400      	movs	r4, #0
 80269c4:	4626      	mov	r6, r4
 80269c6:	e778      	b.n	80268ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80269c8:	2400      	movs	r4, #0
 80269ca:	e776      	b.n	80268ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80269cc:	463c      	mov	r4, r7
 80269ce:	e774      	b.n	80268ba <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 80269d0:	2500      	movs	r5, #0
 80269d2:	e78e      	b.n	80268f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 80269d4:	2300      	movs	r3, #0
 80269d6:	461d      	mov	r5, r3
 80269d8:	e79f      	b.n	802691a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80269da:	4663      	mov	r3, ip
 80269dc:	4665      	mov	r5, ip
 80269de:	e79c      	b.n	802691a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80269e0:	2300      	movs	r3, #0
 80269e2:	e79a      	b.n	802691a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80269e4:	463b      	mov	r3, r7
 80269e6:	e798      	b.n	802691a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 80269e8:	200137fc 	.word	0x200137fc

080269ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80269ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80269f0:	b093      	sub	sp, #76	; 0x4c
 80269f2:	461d      	mov	r5, r3
 80269f4:	920c      	str	r2, [sp, #48]	; 0x30
 80269f6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80269f8:	9107      	str	r1, [sp, #28]
 80269fa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80269fe:	9011      	str	r0, [sp, #68]	; 0x44
 8026a00:	6850      	ldr	r0, [r2, #4]
 8026a02:	6812      	ldr	r2, [r2, #0]
 8026a04:	fb00 1303 	mla	r3, r0, r3, r1
 8026a08:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8026a0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a0e:	689b      	ldr	r3, [r3, #8]
 8026a10:	3301      	adds	r3, #1
 8026a12:	f023 0301 	bic.w	r3, r3, #1
 8026a16:	9306      	str	r3, [sp, #24]
 8026a18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a1a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8026a1e:	681f      	ldr	r7, [r3, #0]
 8026a20:	9b07      	ldr	r3, [sp, #28]
 8026a22:	2b00      	cmp	r3, #0
 8026a24:	dc03      	bgt.n	8026a2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026a26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026a28:	2b00      	cmp	r3, #0
 8026a2a:	f340 8267 	ble.w	8026efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026a2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a30:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026a34:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026a38:	1e48      	subs	r0, r1, #1
 8026a3a:	f102 3cff 	add.w	ip, r2, #4294967295
 8026a3e:	2d00      	cmp	r5, #0
 8026a40:	f340 80b8 	ble.w	8026bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8026a44:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8026a48:	ea4f 4326 	mov.w	r3, r6, asr #16
 8026a4c:	d406      	bmi.n	8026a5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026a4e:	4586      	cmp	lr, r0
 8026a50:	da04      	bge.n	8026a5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026a52:	2b00      	cmp	r3, #0
 8026a54:	db02      	blt.n	8026a5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8026a56:	4563      	cmp	r3, ip
 8026a58:	f2c0 80ad 	blt.w	8026bb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8026a5c:	f11e 0e01 	adds.w	lr, lr, #1
 8026a60:	f100 80a0 	bmi.w	8026ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026a64:	4571      	cmp	r1, lr
 8026a66:	f2c0 809d 	blt.w	8026ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026a6a:	3301      	adds	r3, #1
 8026a6c:	f100 809a 	bmi.w	8026ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026a70:	429a      	cmp	r2, r3
 8026a72:	f2c0 8097 	blt.w	8026ba4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8026a76:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8026a7a:	9509      	str	r5, [sp, #36]	; 0x24
 8026a7c:	46c8      	mov	r8, r9
 8026a7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a80:	2b00      	cmp	r3, #0
 8026a82:	f340 80b6 	ble.w	8026bf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8026a86:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8026a8a:	9308      	str	r3, [sp, #32]
 8026a8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8026a8e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026a92:	1423      	asrs	r3, r4, #16
 8026a94:	ea4f 4026 	mov.w	r0, r6, asr #16
 8026a98:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8026a9c:	f100 813e 	bmi.w	8026d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026aa0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8026aa4:	455b      	cmp	r3, fp
 8026aa6:	f280 8139 	bge.w	8026d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026aaa:	2800      	cmp	r0, #0
 8026aac:	f2c0 8136 	blt.w	8026d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026ab0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8026ab4:	4558      	cmp	r0, fp
 8026ab6:	f280 8131 	bge.w	8026d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026aba:	9a06      	ldr	r2, [sp, #24]
 8026abc:	fb00 3302 	mla	r3, r0, r2, r3
 8026ac0:	0858      	lsrs	r0, r3, #1
 8026ac2:	07da      	lsls	r2, r3, #31
 8026ac4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026ac8:	9a08      	ldr	r2, [sp, #32]
 8026aca:	bf54      	ite	pl
 8026acc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026ad0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026ad4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026ad8:	fa5f fc8c 	uxtb.w	ip, ip
 8026adc:	2a00      	cmp	r2, #0
 8026ade:	f000 80cb 	beq.w	8026c78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8026ae2:	1c58      	adds	r0, r3, #1
 8026ae4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026ae8:	07c0      	lsls	r0, r0, #31
 8026aea:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026aee:	bf54      	ite	pl
 8026af0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8026af4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026af8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026afc:	fa5f fe8e 	uxtb.w	lr, lr
 8026b00:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8026b04:	b1b9      	cbz	r1, 8026b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026b06:	4453      	add	r3, sl
 8026b08:	0858      	lsrs	r0, r3, #1
 8026b0a:	07da      	lsls	r2, r3, #31
 8026b0c:	5c38      	ldrb	r0, [r7, r0]
 8026b0e:	bf54      	ite	pl
 8026b10:	f000 000f 	andpl.w	r0, r0, #15
 8026b14:	1100      	asrmi	r0, r0, #4
 8026b16:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026b1a:	b2c0      	uxtb	r0, r0
 8026b1c:	900a      	str	r0, [sp, #40]	; 0x28
 8026b1e:	1c58      	adds	r0, r3, #1
 8026b20:	0843      	lsrs	r3, r0, #1
 8026b22:	07c2      	lsls	r2, r0, #31
 8026b24:	5cfb      	ldrb	r3, [r7, r3]
 8026b26:	bf54      	ite	pl
 8026b28:	f003 030f 	andpl.w	r3, r3, #15
 8026b2c:	111b      	asrmi	r3, r3, #4
 8026b2e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026b32:	b2db      	uxtb	r3, r3
 8026b34:	930e      	str	r3, [sp, #56]	; 0x38
 8026b36:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8026b3a:	b289      	uxth	r1, r1
 8026b3c:	fb02 f301 	mul.w	r3, r2, r1
 8026b40:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8026b44:	0112      	lsls	r2, r2, #4
 8026b46:	b289      	uxth	r1, r1
 8026b48:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8026b4c:	1a40      	subs	r0, r0, r1
 8026b4e:	fa1f fe80 	uxth.w	lr, r0
 8026b52:	1ad2      	subs	r2, r2, r3
 8026b54:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026b56:	b292      	uxth	r2, r2
 8026b58:	4342      	muls	r2, r0
 8026b5a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8026b5e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8026b60:	fb01 c102 	mla	r1, r1, r2, ip
 8026b64:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026b66:	fb03 1302 	mla	r3, r3, r2, r1
 8026b6a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026b6e:	2bff      	cmp	r3, #255	; 0xff
 8026b70:	f040 8093 	bne.w	8026c9a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8026b74:	4bbe      	ldr	r3, [pc, #760]	; (8026e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026b76:	681a      	ldr	r2, [r3, #0]
 8026b78:	4bbe      	ldr	r3, [pc, #760]	; (8026e74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026b7a:	0951      	lsrs	r1, r2, #5
 8026b7c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026b80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026b84:	430b      	orrs	r3, r1
 8026b86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026b8a:	4313      	orrs	r3, r2
 8026b8c:	f8a8 3000 	strh.w	r3, [r8]
 8026b90:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026b92:	441c      	add	r4, r3
 8026b94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026b96:	441e      	add	r6, r3
 8026b98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b9a:	3b01      	subs	r3, #1
 8026b9c:	f108 0802 	add.w	r8, r8, #2
 8026ba0:	9309      	str	r3, [sp, #36]	; 0x24
 8026ba2:	e76c      	b.n	8026a7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026ba4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026ba6:	441c      	add	r4, r3
 8026ba8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026baa:	3d01      	subs	r5, #1
 8026bac:	441e      	add	r6, r3
 8026bae:	f109 0902 	add.w	r9, r9, #2
 8026bb2:	e744      	b.n	8026a3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8026bb4:	d021      	beq.n	8026bfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8026bb6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8026bb8:	1e6b      	subs	r3, r5, #1
 8026bba:	fb00 4003 	mla	r0, r0, r3, r4
 8026bbe:	1400      	asrs	r0, r0, #16
 8026bc0:	f53f af59 	bmi.w	8026a76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026bc4:	3901      	subs	r1, #1
 8026bc6:	4288      	cmp	r0, r1
 8026bc8:	f6bf af55 	bge.w	8026a76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026bcc:	9920      	ldr	r1, [sp, #128]	; 0x80
 8026bce:	fb01 6303 	mla	r3, r1, r3, r6
 8026bd2:	141b      	asrs	r3, r3, #16
 8026bd4:	f53f af4f 	bmi.w	8026a76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026bd8:	3a01      	subs	r2, #1
 8026bda:	4293      	cmp	r3, r2
 8026bdc:	f6bf af4b 	bge.w	8026a76 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026be0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8026be4:	9308      	str	r3, [sp, #32]
 8026be6:	46a8      	mov	r8, r5
 8026be8:	46ce      	mov	lr, r9
 8026bea:	f1b8 0f00 	cmp.w	r8, #0
 8026bee:	f300 80b5 	bgt.w	8026d5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8026bf2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026bf6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026bfa:	9b07      	ldr	r3, [sp, #28]
 8026bfc:	2b00      	cmp	r3, #0
 8026bfe:	f340 817d 	ble.w	8026efc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8026c02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026c06:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026c0a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026c0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026c14:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026c18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026c1c:	eef0 6a62 	vmov.f32	s13, s5
 8026c20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026c24:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026c28:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026c2c:	ee16 4a90 	vmov	r4, s13
 8026c30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026c34:	eef0 6a43 	vmov.f32	s13, s6
 8026c38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026c3c:	ee12 2a90 	vmov	r2, s5
 8026c40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026c44:	fb92 f3f3 	sdiv	r3, r2, r3
 8026c48:	ee13 2a10 	vmov	r2, s6
 8026c4c:	931f      	str	r3, [sp, #124]	; 0x7c
 8026c4e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c50:	fb92 f3f3 	sdiv	r3, r2, r3
 8026c54:	9320      	str	r3, [sp, #128]	; 0x80
 8026c56:	9b07      	ldr	r3, [sp, #28]
 8026c58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8026c5a:	3b01      	subs	r3, #1
 8026c5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026c60:	9307      	str	r3, [sp, #28]
 8026c62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8026c64:	ee16 6a90 	vmov	r6, s13
 8026c68:	bf14      	ite	ne
 8026c6a:	461d      	movne	r5, r3
 8026c6c:	4615      	moveq	r5, r2
 8026c6e:	eeb0 3a67 	vmov.f32	s6, s15
 8026c72:	eef0 2a47 	vmov.f32	s5, s14
 8026c76:	e6d3      	b.n	8026a20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8026c78:	2900      	cmp	r1, #0
 8026c7a:	f43f af5c 	beq.w	8026b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026c7e:	eb0a 0003 	add.w	r0, sl, r3
 8026c82:	0843      	lsrs	r3, r0, #1
 8026c84:	07c0      	lsls	r0, r0, #31
 8026c86:	5cfb      	ldrb	r3, [r7, r3]
 8026c88:	bf54      	ite	pl
 8026c8a:	f003 030f 	andpl.w	r3, r3, #15
 8026c8e:	111b      	asrmi	r3, r3, #4
 8026c90:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026c94:	b2db      	uxtb	r3, r3
 8026c96:	930a      	str	r3, [sp, #40]	; 0x28
 8026c98:	e74d      	b.n	8026b36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8026c9a:	2b00      	cmp	r3, #0
 8026c9c:	f43f af78 	beq.w	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026ca0:	4a73      	ldr	r2, [pc, #460]	; (8026e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026ca2:	f8b8 c000 	ldrh.w	ip, [r8]
 8026ca6:	6810      	ldr	r0, [r2, #0]
 8026ca8:	fa1f fe83 	uxth.w	lr, r3
 8026cac:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026cb0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026cb4:	43db      	mvns	r3, r3
 8026cb6:	b2db      	uxtb	r3, r3
 8026cb8:	fb12 f20e 	smulbb	r2, r2, lr
 8026cbc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026cc0:	fb01 2103 	mla	r1, r1, r3, r2
 8026cc4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026cc8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026ccc:	b2c0      	uxtb	r0, r0
 8026cce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026cd2:	fb1b fb0e 	smulbb	fp, fp, lr
 8026cd6:	b289      	uxth	r1, r1
 8026cd8:	fb10 fe0e 	smulbb	lr, r0, lr
 8026cdc:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026ce0:	fa5f fc8c 	uxtb.w	ip, ip
 8026ce4:	fb02 b203 	mla	r2, r2, r3, fp
 8026ce8:	1c48      	adds	r0, r1, #1
 8026cea:	fb0c e303 	mla	r3, ip, r3, lr
 8026cee:	b292      	uxth	r2, r2
 8026cf0:	b29b      	uxth	r3, r3
 8026cf2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026cf6:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8026cfa:	f102 0b01 	add.w	fp, r2, #1
 8026cfe:	1c59      	adds	r1, r3, #1
 8026d00:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026d04:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026d08:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8026d0c:	0952      	lsrs	r2, r2, #5
 8026d0e:	4301      	orrs	r1, r0
 8026d10:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026d14:	4311      	orrs	r1, r2
 8026d16:	f8a8 1000 	strh.w	r1, [r8]
 8026d1a:	e739      	b.n	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d1c:	f113 0b01 	adds.w	fp, r3, #1
 8026d20:	f53f af36 	bmi.w	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d24:	45dc      	cmp	ip, fp
 8026d26:	f6ff af33 	blt.w	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d2a:	f110 0b01 	adds.w	fp, r0, #1
 8026d2e:	f53f af2f 	bmi.w	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d32:	45de      	cmp	lr, fp
 8026d34:	f6ff af2c 	blt.w	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d38:	9a08      	ldr	r2, [sp, #32]
 8026d3a:	9302      	str	r3, [sp, #8]
 8026d3c:	fa0f f38e 	sxth.w	r3, lr
 8026d40:	9301      	str	r3, [sp, #4]
 8026d42:	fa0f f38c 	sxth.w	r3, ip
 8026d46:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8026d4a:	9105      	str	r1, [sp, #20]
 8026d4c:	9300      	str	r3, [sp, #0]
 8026d4e:	463a      	mov	r2, r7
 8026d50:	4653      	mov	r3, sl
 8026d52:	4641      	mov	r1, r8
 8026d54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8026d56:	f7ff fd73 	bl	8026840 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8026d5a:	e719      	b.n	8026b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8026d5c:	9906      	ldr	r1, [sp, #24]
 8026d5e:	1422      	asrs	r2, r4, #16
 8026d60:	1433      	asrs	r3, r6, #16
 8026d62:	fb01 2303 	mla	r3, r1, r3, r2
 8026d66:	085a      	lsrs	r2, r3, #1
 8026d68:	07d9      	lsls	r1, r3, #31
 8026d6a:	5cba      	ldrb	r2, [r7, r2]
 8026d6c:	bf54      	ite	pl
 8026d6e:	f002 020f 	andpl.w	r2, r2, #15
 8026d72:	1112      	asrmi	r2, r2, #4
 8026d74:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8026d78:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8026d7c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8026d80:	b2d2      	uxtb	r2, r2
 8026d82:	2800      	cmp	r0, #0
 8026d84:	d062      	beq.n	8026e4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8026d86:	f103 0a01 	add.w	sl, r3, #1
 8026d8a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8026d8e:	f01a 0f01 	tst.w	sl, #1
 8026d92:	5c79      	ldrb	r1, [r7, r1]
 8026d94:	bf0c      	ite	eq
 8026d96:	f001 010f 	andeq.w	r1, r1, #15
 8026d9a:	1109      	asrne	r1, r1, #4
 8026d9c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026da0:	b2c9      	uxtb	r1, r1
 8026da2:	910f      	str	r1, [sp, #60]	; 0x3c
 8026da4:	f1bc 0f00 	cmp.w	ip, #0
 8026da8:	d019      	beq.n	8026dde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026daa:	9908      	ldr	r1, [sp, #32]
 8026dac:	440b      	add	r3, r1
 8026dae:	0859      	lsrs	r1, r3, #1
 8026db0:	f013 0f01 	tst.w	r3, #1
 8026db4:	5c79      	ldrb	r1, [r7, r1]
 8026db6:	bf0c      	ite	eq
 8026db8:	f001 010f 	andeq.w	r1, r1, #15
 8026dbc:	1109      	asrne	r1, r1, #4
 8026dbe:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026dc2:	b2c9      	uxtb	r1, r1
 8026dc4:	3301      	adds	r3, #1
 8026dc6:	910b      	str	r1, [sp, #44]	; 0x2c
 8026dc8:	0859      	lsrs	r1, r3, #1
 8026dca:	07db      	lsls	r3, r3, #31
 8026dcc:	5c79      	ldrb	r1, [r7, r1]
 8026dce:	bf54      	ite	pl
 8026dd0:	f001 010f 	andpl.w	r1, r1, #15
 8026dd4:	1109      	asrmi	r1, r1, #4
 8026dd6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026dda:	b2c9      	uxtb	r1, r1
 8026ddc:	9110      	str	r1, [sp, #64]	; 0x40
 8026dde:	b280      	uxth	r0, r0
 8026de0:	fa1f fc8c 	uxth.w	ip, ip
 8026de4:	fb00 f30c 	mul.w	r3, r0, ip
 8026de8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8026dec:	0100      	lsls	r0, r0, #4
 8026dee:	fa1f fc8c 	uxth.w	ip, ip
 8026df2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8026df6:	eba1 010c 	sub.w	r1, r1, ip
 8026dfa:	fa1f fa81 	uxth.w	sl, r1
 8026dfe:	1ac0      	subs	r0, r0, r3
 8026e00:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8026e02:	b280      	uxth	r0, r0
 8026e04:	4348      	muls	r0, r1
 8026e06:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8026e08:	fb02 020a 	mla	r2, r2, sl, r0
 8026e0c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8026e10:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8026e12:	fb03 c302 	mla	r3, r3, r2, ip
 8026e16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026e1a:	2bff      	cmp	r3, #255	; 0xff
 8026e1c:	d12c      	bne.n	8026e78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8026e1e:	4b14      	ldr	r3, [pc, #80]	; (8026e70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8026e20:	681a      	ldr	r2, [r3, #0]
 8026e22:	4b14      	ldr	r3, [pc, #80]	; (8026e74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026e24:	0951      	lsrs	r1, r2, #5
 8026e26:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026e2a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026e2e:	430b      	orrs	r3, r1
 8026e30:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026e34:	4313      	orrs	r3, r2
 8026e36:	f8ae 3000 	strh.w	r3, [lr]
 8026e3a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8026e3c:	441c      	add	r4, r3
 8026e3e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8026e40:	f10e 0e02 	add.w	lr, lr, #2
 8026e44:	441e      	add	r6, r3
 8026e46:	f108 38ff 	add.w	r8, r8, #4294967295
 8026e4a:	e6ce      	b.n	8026bea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8026e4c:	f1bc 0f00 	cmp.w	ip, #0
 8026e50:	d0c5      	beq.n	8026dde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026e52:	9908      	ldr	r1, [sp, #32]
 8026e54:	440b      	add	r3, r1
 8026e56:	0859      	lsrs	r1, r3, #1
 8026e58:	07db      	lsls	r3, r3, #31
 8026e5a:	5c79      	ldrb	r1, [r7, r1]
 8026e5c:	bf54      	ite	pl
 8026e5e:	f001 010f 	andpl.w	r1, r1, #15
 8026e62:	1109      	asrmi	r1, r1, #4
 8026e64:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026e68:	b2c9      	uxtb	r1, r1
 8026e6a:	910b      	str	r1, [sp, #44]	; 0x2c
 8026e6c:	e7b7      	b.n	8026dde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8026e6e:	bf00      	nop
 8026e70:	200137fc 	.word	0x200137fc
 8026e74:	fffff800 	.word	0xfffff800
 8026e78:	2b00      	cmp	r3, #0
 8026e7a:	d0de      	beq.n	8026e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026e7c:	4a21      	ldr	r2, [pc, #132]	; (8026f04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8026e7e:	f8be c000 	ldrh.w	ip, [lr]
 8026e82:	6810      	ldr	r0, [r2, #0]
 8026e84:	fa1f fa83 	uxth.w	sl, r3
 8026e88:	ea4f 212c 	mov.w	r1, ip, asr #8
 8026e8c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026e90:	43db      	mvns	r3, r3
 8026e92:	b2db      	uxtb	r3, r3
 8026e94:	fb12 f20a 	smulbb	r2, r2, sl
 8026e98:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026e9c:	fb01 2103 	mla	r1, r1, r3, r2
 8026ea0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026ea4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026ea8:	b2c0      	uxtb	r0, r0
 8026eaa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026eae:	fa5f fc8c 	uxtb.w	ip, ip
 8026eb2:	fb10 f00a 	smulbb	r0, r0, sl
 8026eb6:	fb0c 0003 	mla	r0, ip, r3, r0
 8026eba:	b289      	uxth	r1, r1
 8026ebc:	fb1b fb0a 	smulbb	fp, fp, sl
 8026ec0:	b280      	uxth	r0, r0
 8026ec2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026ec6:	fb02 b203 	mla	r2, r2, r3, fp
 8026eca:	1c4b      	adds	r3, r1, #1
 8026ecc:	f100 0b01 	add.w	fp, r0, #1
 8026ed0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026ed4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026ed8:	b292      	uxth	r2, r2
 8026eda:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026ede:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8026ee2:	ea4b 0101 	orr.w	r1, fp, r1
 8026ee6:	f102 0b01 	add.w	fp, r2, #1
 8026eea:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026eee:	0952      	lsrs	r2, r2, #5
 8026ef0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026ef4:	4311      	orrs	r1, r2
 8026ef6:	f8ae 1000 	strh.w	r1, [lr]
 8026efa:	e79e      	b.n	8026e3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8026efc:	b013      	add	sp, #76	; 0x4c
 8026efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f02:	bf00      	nop
 8026f04:	200137fc 	.word	0x200137fc

08026f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026f08:	b570      	push	{r4, r5, r6, lr}
 8026f0a:	1208      	asrs	r0, r1, #8
 8026f0c:	b29e      	uxth	r6, r3
 8026f0e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026f12:	1213      	asrs	r3, r2, #8
 8026f14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026f18:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8026f1c:	fb13 f305 	smulbb	r3, r3, r5
 8026f20:	fb10 f006 	smulbb	r0, r0, r6
 8026f24:	4418      	add	r0, r3
 8026f26:	10cc      	asrs	r4, r1, #3
 8026f28:	10d3      	asrs	r3, r2, #3
 8026f2a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8026f2e:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8026f32:	fb13 f305 	smulbb	r3, r3, r5
 8026f36:	fb14 f406 	smulbb	r4, r4, r6
 8026f3a:	00c9      	lsls	r1, r1, #3
 8026f3c:	00d2      	lsls	r2, r2, #3
 8026f3e:	441c      	add	r4, r3
 8026f40:	b2d2      	uxtb	r2, r2
 8026f42:	b2cb      	uxtb	r3, r1
 8026f44:	fb12 f205 	smulbb	r2, r2, r5
 8026f48:	b280      	uxth	r0, r0
 8026f4a:	fb13 f306 	smulbb	r3, r3, r6
 8026f4e:	4413      	add	r3, r2
 8026f50:	1c42      	adds	r2, r0, #1
 8026f52:	b29b      	uxth	r3, r3
 8026f54:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026f58:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8026f5c:	1c58      	adds	r0, r3, #1
 8026f5e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026f62:	b2a4      	uxth	r4, r4
 8026f64:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026f68:	4310      	orrs	r0, r2
 8026f6a:	1c62      	adds	r2, r4, #1
 8026f6c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026f70:	0964      	lsrs	r4, r4, #5
 8026f72:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8026f76:	4320      	orrs	r0, r4
 8026f78:	bd70      	pop	{r4, r5, r6, pc}
	...

08026f7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f80:	b08f      	sub	sp, #60	; 0x3c
 8026f82:	461c      	mov	r4, r3
 8026f84:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8026f88:	9004      	str	r0, [sp, #16]
 8026f8a:	460d      	mov	r5, r1
 8026f8c:	4616      	mov	r6, r2
 8026f8e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8026f90:	2f00      	cmp	r7, #0
 8026f92:	f000 80f6 	beq.w	8027182 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026f96:	6820      	ldr	r0, [r4, #0]
 8026f98:	6861      	ldr	r1, [r4, #4]
 8026f9a:	aa0a      	add	r2, sp, #40	; 0x28
 8026f9c:	c203      	stmia	r2!, {r0, r1}
 8026f9e:	6818      	ldr	r0, [r3, #0]
 8026fa0:	6859      	ldr	r1, [r3, #4]
 8026fa2:	aa0c      	add	r2, sp, #48	; 0x30
 8026fa4:	c203      	stmia	r2!, {r0, r1}
 8026fa6:	a80a      	add	r0, sp, #40	; 0x28
 8026fa8:	f7ef fa5e 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026fac:	4621      	mov	r1, r4
 8026fae:	a80c      	add	r0, sp, #48	; 0x30
 8026fb0:	f7ef fa9e 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026fb4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8026fb8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8026fbc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8026fc0:	f002 0301 	and.w	r3, r2, #1
 8026fc4:	9306      	str	r3, [sp, #24]
 8026fc6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8026fca:	f003 0101 	and.w	r1, r3, #1
 8026fce:	9105      	str	r1, [sp, #20]
 8026fd0:	9805      	ldr	r0, [sp, #20]
 8026fd2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8026fd6:	4403      	add	r3, r0
 8026fd8:	fb01 2303 	mla	r3, r1, r3, r2
 8026fdc:	f04f 0802 	mov.w	r8, #2
 8026fe0:	fb93 f3f8 	sdiv	r3, r3, r8
 8026fe4:	441d      	add	r5, r3
 8026fe6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8026fea:	441a      	add	r2, r3
 8026fec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8026ff0:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8026ff4:	4419      	add	r1, r3
 8026ff6:	4b64      	ldr	r3, [pc, #400]	; (8027188 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026ff8:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8026ffc:	6818      	ldr	r0, [r3, #0]
 8026ffe:	6803      	ldr	r3, [r0, #0]
 8027000:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8027002:	4798      	blx	r3
 8027004:	4a61      	ldr	r2, [pc, #388]	; (802718c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8027006:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802700a:	8813      	ldrh	r3, [r2, #0]
 802700c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8027010:	2fff      	cmp	r7, #255	; 0xff
 8027012:	fb03 a404 	mla	r4, r3, r4, sl
 8027016:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802701a:	f106 0604 	add.w	r6, r6, #4
 802701e:	4611      	mov	r1, r2
 8027020:	fb03 fb0b 	mul.w	fp, r3, fp
 8027024:	d06b      	beq.n	80270fe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8027026:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802702a:	9303      	str	r3, [sp, #12]
 802702c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8027030:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027034:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8027038:	9b07      	ldr	r3, [sp, #28]
 802703a:	42a3      	cmp	r3, r4
 802703c:	f240 809c 	bls.w	8027178 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027040:	9b06      	ldr	r3, [sp, #24]
 8027042:	2b00      	cmp	r3, #0
 8027044:	d039      	beq.n	80270ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8027046:	782b      	ldrb	r3, [r5, #0]
 8027048:	8822      	ldrh	r2, [r4, #0]
 802704a:	9804      	ldr	r0, [sp, #16]
 802704c:	f003 030f 	and.w	r3, r3, #15
 8027050:	f105 0801 	add.w	r8, r5, #1
 8027054:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8027058:	9b03      	ldr	r3, [sp, #12]
 802705a:	9300      	str	r3, [sp, #0]
 802705c:	463b      	mov	r3, r7
 802705e:	f7ff ff53 	bl	8026f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027062:	f824 0b02 	strh.w	r0, [r4], #2
 8027066:	f109 3bff 	add.w	fp, r9, #4294967295
 802706a:	f1bb 0f01 	cmp.w	fp, #1
 802706e:	46a2      	mov	sl, r4
 8027070:	f104 0404 	add.w	r4, r4, #4
 8027074:	dd24      	ble.n	80270c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8027076:	f898 3000 	ldrb.w	r3, [r8]
 802707a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802707e:	9804      	ldr	r0, [sp, #16]
 8027080:	091b      	lsrs	r3, r3, #4
 8027082:	f1ab 0b02 	sub.w	fp, fp, #2
 8027086:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802708a:	9b03      	ldr	r3, [sp, #12]
 802708c:	9300      	str	r3, [sp, #0]
 802708e:	463b      	mov	r3, r7
 8027090:	f7ff ff3a 	bl	8026f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8027094:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027098:	f818 3b01 	ldrb.w	r3, [r8], #1
 802709c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80270a0:	9804      	ldr	r0, [sp, #16]
 80270a2:	f003 030f 	and.w	r3, r3, #15
 80270a6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80270aa:	9b03      	ldr	r3, [sp, #12]
 80270ac:	9300      	str	r3, [sp, #0]
 80270ae:	463b      	mov	r3, r7
 80270b0:	f7ff ff2a 	bl	8026f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80270b4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80270b8:	e7d7      	b.n	802706a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80270ba:	46a8      	mov	r8, r5
 80270bc:	46cb      	mov	fp, r9
 80270be:	e7d4      	b.n	802706a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80270c0:	d10e      	bne.n	80270e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80270c2:	f898 3000 	ldrb.w	r3, [r8]
 80270c6:	f8ba 2000 	ldrh.w	r2, [sl]
 80270ca:	9804      	ldr	r0, [sp, #16]
 80270cc:	091b      	lsrs	r3, r3, #4
 80270ce:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80270d2:	9b03      	ldr	r3, [sp, #12]
 80270d4:	9300      	str	r3, [sp, #0]
 80270d6:	463b      	mov	r3, r7
 80270d8:	f7ff ff16 	bl	8026f08 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80270dc:	f82a 0b02 	strh.w	r0, [sl], #2
 80270e0:	9b08      	ldr	r3, [sp, #32]
 80270e2:	9a05      	ldr	r2, [sp, #20]
 80270e4:	881c      	ldrh	r4, [r3, #0]
 80270e6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80270ea:	eba4 0409 	sub.w	r4, r4, r9
 80270ee:	4413      	add	r3, r2
 80270f0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80270f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80270f6:	fb93 f3f2 	sdiv	r3, r3, r2
 80270fa:	441d      	add	r5, r3
 80270fc:	e79c      	b.n	8027038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80270fe:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8027102:	45a3      	cmp	fp, r4
 8027104:	d938      	bls.n	8027178 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8027106:	9b06      	ldr	r3, [sp, #24]
 8027108:	b1f3      	cbz	r3, 8027148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802710a:	782b      	ldrb	r3, [r5, #0]
 802710c:	f003 030f 	and.w	r3, r3, #15
 8027110:	1c6a      	adds	r2, r5, #1
 8027112:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027116:	8023      	strh	r3, [r4, #0]
 8027118:	f109 30ff 	add.w	r0, r9, #4294967295
 802711c:	3402      	adds	r4, #2
 802711e:	2801      	cmp	r0, #1
 8027120:	4623      	mov	r3, r4
 8027122:	f104 0404 	add.w	r4, r4, #4
 8027126:	dd12      	ble.n	802714e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8027128:	7813      	ldrb	r3, [r2, #0]
 802712a:	091b      	lsrs	r3, r3, #4
 802712c:	3802      	subs	r0, #2
 802712e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027132:	f824 3c04 	strh.w	r3, [r4, #-4]
 8027136:	f812 3b01 	ldrb.w	r3, [r2], #1
 802713a:	f003 030f 	and.w	r3, r3, #15
 802713e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8027142:	f824 3c02 	strh.w	r3, [r4, #-2]
 8027146:	e7ea      	b.n	802711e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8027148:	462a      	mov	r2, r5
 802714a:	4648      	mov	r0, r9
 802714c:	e7e7      	b.n	802711e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802714e:	d106      	bne.n	802715e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8027150:	7812      	ldrb	r2, [r2, #0]
 8027152:	0912      	lsrs	r2, r2, #4
 8027154:	3302      	adds	r3, #2
 8027156:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802715a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802715e:	880c      	ldrh	r4, [r1, #0]
 8027160:	9a05      	ldr	r2, [sp, #20]
 8027162:	eba4 0409 	sub.w	r4, r4, r9
 8027166:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802716a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802716e:	4413      	add	r3, r2
 8027170:	fb93 f3f8 	sdiv	r3, r3, r8
 8027174:	441d      	add	r5, r3
 8027176:	e7c4      	b.n	8027102 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8027178:	4b03      	ldr	r3, [pc, #12]	; (8027188 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802717a:	6818      	ldr	r0, [r3, #0]
 802717c:	6803      	ldr	r3, [r0, #0]
 802717e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027180:	4798      	blx	r3
 8027182:	b00f      	add	sp, #60	; 0x3c
 8027184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027188:	200137ec 	.word	0x200137ec
 802718c:	200137e6 	.word	0x200137e6

08027190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8027190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027192:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8027196:	2dff      	cmp	r5, #255	; 0xff
 8027198:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802719c:	d10c      	bne.n	80271b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802719e:	2bff      	cmp	r3, #255	; 0xff
 80271a0:	d10a      	bne.n	80271b8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80271a2:	4b25      	ldr	r3, [pc, #148]	; (8027238 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80271a4:	0948      	lsrs	r0, r1, #5
 80271a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80271aa:	403b      	ands	r3, r7
 80271ac:	4318      	orrs	r0, r3
 80271ae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80271b2:	4308      	orrs	r0, r1
 80271b4:	b280      	uxth	r0, r0
 80271b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80271b8:	fb15 f503 	smulbb	r5, r5, r3
 80271bc:	b2ab      	uxth	r3, r5
 80271be:	1c5d      	adds	r5, r3, #1
 80271c0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80271c4:	1214      	asrs	r4, r2, #8
 80271c6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80271ca:	fa1f fc85 	uxth.w	ip, r5
 80271ce:	10d6      	asrs	r6, r2, #3
 80271d0:	00d0      	lsls	r0, r2, #3
 80271d2:	43ed      	mvns	r5, r5
 80271d4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80271d8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80271dc:	b2eb      	uxtb	r3, r5
 80271de:	b2c0      	uxtb	r0, r0
 80271e0:	fb12 f20c 	smulbb	r2, r2, ip
 80271e4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80271e8:	fb04 2403 	mla	r4, r4, r3, r2
 80271ec:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80271f0:	b2c8      	uxtb	r0, r1
 80271f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80271f6:	b2fd      	uxtb	r5, r7
 80271f8:	fb10 f00c 	smulbb	r0, r0, ip
 80271fc:	b2a4      	uxth	r4, r4
 80271fe:	fb02 0003 	mla	r0, r2, r3, r0
 8027202:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8027206:	fb15 f50c 	smulbb	r5, r5, ip
 802720a:	fb06 5503 	mla	r5, r6, r3, r5
 802720e:	b283      	uxth	r3, r0
 8027210:	1c60      	adds	r0, r4, #1
 8027212:	b2ad      	uxth	r5, r5
 8027214:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8027218:	1c58      	adds	r0, r3, #1
 802721a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802721e:	1c6b      	adds	r3, r5, #1
 8027220:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8027224:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8027228:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802722c:	096d      	lsrs	r5, r5, #5
 802722e:	4320      	orrs	r0, r4
 8027230:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027234:	4328      	orrs	r0, r5
 8027236:	e7be      	b.n	80271b6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8027238:	00fff800 	.word	0x00fff800

0802723c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802723c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027240:	461c      	mov	r4, r3
 8027242:	b08d      	sub	sp, #52	; 0x34
 8027244:	460d      	mov	r5, r1
 8027246:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8027248:	6861      	ldr	r1, [r4, #4]
 802724a:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 802724e:	4680      	mov	r8, r0
 8027250:	6820      	ldr	r0, [r4, #0]
 8027252:	4616      	mov	r6, r2
 8027254:	aa08      	add	r2, sp, #32
 8027256:	c203      	stmia	r2!, {r0, r1}
 8027258:	6818      	ldr	r0, [r3, #0]
 802725a:	6859      	ldr	r1, [r3, #4]
 802725c:	aa0a      	add	r2, sp, #40	; 0x28
 802725e:	c203      	stmia	r2!, {r0, r1}
 8027260:	a808      	add	r0, sp, #32
 8027262:	f7ef f901 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027266:	4621      	mov	r1, r4
 8027268:	a80a      	add	r0, sp, #40	; 0x28
 802726a:	f7ef f941 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802726e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8027272:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8027276:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802727a:	f002 0301 	and.w	r3, r2, #1
 802727e:	9303      	str	r3, [sp, #12]
 8027280:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8027284:	f003 0101 	and.w	r1, r3, #1
 8027288:	9102      	str	r1, [sp, #8]
 802728a:	9802      	ldr	r0, [sp, #8]
 802728c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8027290:	4403      	add	r3, r0
 8027292:	fb01 2303 	mla	r3, r1, r3, r2
 8027296:	f04f 0a02 	mov.w	sl, #2
 802729a:	fb93 f3fa 	sdiv	r3, r3, sl
 802729e:	441d      	add	r5, r3
 80272a0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80272a4:	441a      	add	r2, r3
 80272a6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80272aa:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80272ae:	4a3f      	ldr	r2, [pc, #252]	; (80273ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80272b0:	9205      	str	r2, [sp, #20]
 80272b2:	4419      	add	r1, r3
 80272b4:	6810      	ldr	r0, [r2, #0]
 80272b6:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80272ba:	6803      	ldr	r3, [r0, #0]
 80272bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80272be:	4798      	blx	r3
 80272c0:	4b3b      	ldr	r3, [pc, #236]	; (80273b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80272c2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80272c6:	8819      	ldrh	r1, [r3, #0]
 80272c8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80272cc:	fb01 c404 	mla	r4, r1, r4, ip
 80272d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80272d4:	434f      	muls	r7, r1
 80272d6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80272da:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80272de:	3604      	adds	r6, #4
 80272e0:	9204      	str	r2, [sp, #16]
 80272e2:	9b04      	ldr	r3, [sp, #16]
 80272e4:	429c      	cmp	r4, r3
 80272e6:	d258      	bcs.n	802739a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80272e8:	9b03      	ldr	r3, [sp, #12]
 80272ea:	2b00      	cmp	r3, #0
 80272ec:	d034      	beq.n	8027358 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80272ee:	782b      	ldrb	r3, [r5, #0]
 80272f0:	f003 030f 	and.w	r3, r3, #15
 80272f4:	1c6f      	adds	r7, r5, #1
 80272f6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80272fa:	0e0b      	lsrs	r3, r1, #24
 80272fc:	d006      	beq.n	802730c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80272fe:	8822      	ldrh	r2, [r4, #0]
 8027300:	9300      	str	r3, [sp, #0]
 8027302:	4640      	mov	r0, r8
 8027304:	464b      	mov	r3, r9
 8027306:	f7ff ff43 	bl	8027190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802730a:	8020      	strh	r0, [r4, #0]
 802730c:	3402      	adds	r4, #2
 802730e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8027312:	f1ba 0f01 	cmp.w	sl, #1
 8027316:	dd22      	ble.n	802735e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8027318:	783b      	ldrb	r3, [r7, #0]
 802731a:	091b      	lsrs	r3, r3, #4
 802731c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027320:	0e0b      	lsrs	r3, r1, #24
 8027322:	d006      	beq.n	8027332 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8027324:	8822      	ldrh	r2, [r4, #0]
 8027326:	9300      	str	r3, [sp, #0]
 8027328:	4640      	mov	r0, r8
 802732a:	464b      	mov	r3, r9
 802732c:	f7ff ff30 	bl	8027190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027330:	8020      	strh	r0, [r4, #0]
 8027332:	f817 3b01 	ldrb.w	r3, [r7], #1
 8027336:	f003 030f 	and.w	r3, r3, #15
 802733a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802733e:	0e0b      	lsrs	r3, r1, #24
 8027340:	d006      	beq.n	8027350 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8027342:	8862      	ldrh	r2, [r4, #2]
 8027344:	9300      	str	r3, [sp, #0]
 8027346:	4640      	mov	r0, r8
 8027348:	464b      	mov	r3, r9
 802734a:	f7ff ff21 	bl	8027190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802734e:	8060      	strh	r0, [r4, #2]
 8027350:	3404      	adds	r4, #4
 8027352:	f1aa 0a02 	sub.w	sl, sl, #2
 8027356:	e7dc      	b.n	8027312 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8027358:	462f      	mov	r7, r5
 802735a:	46da      	mov	sl, fp
 802735c:	e7d9      	b.n	8027312 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802735e:	d10d      	bne.n	802737c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8027360:	783b      	ldrb	r3, [r7, #0]
 8027362:	091b      	lsrs	r3, r3, #4
 8027364:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8027368:	0e0b      	lsrs	r3, r1, #24
 802736a:	d006      	beq.n	802737a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802736c:	8822      	ldrh	r2, [r4, #0]
 802736e:	9300      	str	r3, [sp, #0]
 8027370:	4640      	mov	r0, r8
 8027372:	464b      	mov	r3, r9
 8027374:	f7ff ff0c 	bl	8027190 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8027378:	8020      	strh	r0, [r4, #0]
 802737a:	3402      	adds	r4, #2
 802737c:	9b06      	ldr	r3, [sp, #24]
 802737e:	9a02      	ldr	r2, [sp, #8]
 8027380:	881b      	ldrh	r3, [r3, #0]
 8027382:	eba3 030b 	sub.w	r3, r3, fp
 8027386:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802738a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802738e:	4413      	add	r3, r2
 8027390:	9a07      	ldr	r2, [sp, #28]
 8027392:	fb93 f3f2 	sdiv	r3, r3, r2
 8027396:	441d      	add	r5, r3
 8027398:	e7a3      	b.n	80272e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802739a:	9b05      	ldr	r3, [sp, #20]
 802739c:	6818      	ldr	r0, [r3, #0]
 802739e:	6803      	ldr	r3, [r0, #0]
 80273a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80273a2:	4798      	blx	r3
 80273a4:	b00d      	add	sp, #52	; 0x34
 80273a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80273aa:	bf00      	nop
 80273ac:	200137ec 	.word	0x200137ec
 80273b0:	200137e6 	.word	0x200137e6

080273b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80273b4:	b570      	push	{r4, r5, r6, lr}
 80273b6:	1214      	asrs	r4, r2, #8
 80273b8:	788d      	ldrb	r5, [r1, #2]
 80273ba:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80273be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80273c2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80273c6:	fb15 f503 	smulbb	r5, r5, r3
 80273ca:	fb04 5506 	mla	r5, r4, r6, r5
 80273ce:	10d0      	asrs	r0, r2, #3
 80273d0:	784c      	ldrb	r4, [r1, #1]
 80273d2:	7809      	ldrb	r1, [r1, #0]
 80273d4:	00d2      	lsls	r2, r2, #3
 80273d6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80273da:	b2d2      	uxtb	r2, r2
 80273dc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80273e0:	fb14 f403 	smulbb	r4, r4, r3
 80273e4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80273e8:	fb11 f303 	smulbb	r3, r1, r3
 80273ec:	fb00 4406 	mla	r4, r0, r6, r4
 80273f0:	fb02 3306 	mla	r3, r2, r6, r3
 80273f4:	b2ad      	uxth	r5, r5
 80273f6:	b29b      	uxth	r3, r3
 80273f8:	b2a4      	uxth	r4, r4
 80273fa:	1c68      	adds	r0, r5, #1
 80273fc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8027400:	1c62      	adds	r2, r4, #1
 8027402:	1c58      	adds	r0, r3, #1
 8027404:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8027408:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802740c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8027410:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8027414:	0964      	lsrs	r4, r4, #5
 8027416:	4328      	orrs	r0, r5
 8027418:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802741c:	4320      	orrs	r0, r4
 802741e:	bd70      	pop	{r4, r5, r6, pc}

08027420 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8027420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027424:	b08f      	sub	sp, #60	; 0x3c
 8027426:	461c      	mov	r4, r3
 8027428:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802742c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802742e:	4682      	mov	sl, r0
 8027430:	460e      	mov	r6, r1
 8027432:	4615      	mov	r5, r2
 8027434:	2f00      	cmp	r7, #0
 8027436:	f000 8142 	beq.w	80276be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802743a:	6820      	ldr	r0, [r4, #0]
 802743c:	6861      	ldr	r1, [r4, #4]
 802743e:	aa0a      	add	r2, sp, #40	; 0x28
 8027440:	c203      	stmia	r2!, {r0, r1}
 8027442:	6818      	ldr	r0, [r3, #0]
 8027444:	6859      	ldr	r1, [r3, #4]
 8027446:	aa0c      	add	r2, sp, #48	; 0x30
 8027448:	c203      	stmia	r2!, {r0, r1}
 802744a:	a80a      	add	r0, sp, #40	; 0x28
 802744c:	f7ef f80c 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027450:	4621      	mov	r1, r4
 8027452:	a80c      	add	r0, sp, #48	; 0x30
 8027454:	f7ef f84c 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027458:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802745c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8027460:	f002 0301 	and.w	r3, r2, #1
 8027464:	9306      	str	r3, [sp, #24]
 8027466:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802746a:	f003 0101 	and.w	r1, r3, #1
 802746e:	9105      	str	r1, [sp, #20]
 8027470:	9805      	ldr	r0, [sp, #20]
 8027472:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8027476:	4403      	add	r3, r0
 8027478:	fb01 2303 	mla	r3, r1, r3, r2
 802747c:	f04f 0802 	mov.w	r8, #2
 8027480:	fb93 f3f8 	sdiv	r3, r3, r8
 8027484:	441e      	add	r6, r3
 8027486:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802748a:	441a      	add	r2, r3
 802748c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8027490:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8027494:	4419      	add	r1, r3
 8027496:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802749a:	9303      	str	r3, [sp, #12]
 802749c:	4b89      	ldr	r3, [pc, #548]	; (80276c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802749e:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80274a2:	6818      	ldr	r0, [r3, #0]
 80274a4:	6803      	ldr	r3, [r0, #0]
 80274a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80274a8:	4798      	blx	r3
 80274aa:	4a87      	ldr	r2, [pc, #540]	; (80276c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80274ac:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80274b0:	8813      	ldrh	r3, [r2, #0]
 80274b2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80274b6:	2fff      	cmp	r7, #255	; 0xff
 80274b8:	fb03 9404 	mla	r4, r3, r4, r9
 80274bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80274c0:	f105 0504 	add.w	r5, r5, #4
 80274c4:	4694      	mov	ip, r2
 80274c6:	fb03 f30b 	mul.w	r3, r3, fp
 80274ca:	d071      	beq.n	80275b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80274cc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80274d0:	43f9      	mvns	r1, r7
 80274d2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80274d6:	b2c9      	uxtb	r1, r1
 80274d8:	9104      	str	r1, [sp, #16]
 80274da:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80274de:	9b07      	ldr	r3, [sp, #28]
 80274e0:	42a3      	cmp	r3, r4
 80274e2:	f240 80e7 	bls.w	80276b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80274e6:	9b06      	ldr	r3, [sp, #24]
 80274e8:	2b00      	cmp	r3, #0
 80274ea:	d03d      	beq.n	8027568 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80274ec:	7831      	ldrb	r1, [r6, #0]
 80274ee:	9b04      	ldr	r3, [sp, #16]
 80274f0:	8822      	ldrh	r2, [r4, #0]
 80274f2:	9300      	str	r3, [sp, #0]
 80274f4:	f001 010f 	and.w	r1, r1, #15
 80274f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80274fc:	463b      	mov	r3, r7
 80274fe:	4429      	add	r1, r5
 8027500:	4650      	mov	r0, sl
 8027502:	f7ff ff57 	bl	80273b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027506:	9b03      	ldr	r3, [sp, #12]
 8027508:	f824 0b02 	strh.w	r0, [r4], #2
 802750c:	f106 0801 	add.w	r8, r6, #1
 8027510:	f103 3bff 	add.w	fp, r3, #4294967295
 8027514:	f1bb 0f01 	cmp.w	fp, #1
 8027518:	46a1      	mov	r9, r4
 802751a:	f104 0404 	add.w	r4, r4, #4
 802751e:	dd27      	ble.n	8027570 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8027520:	f898 1000 	ldrb.w	r1, [r8]
 8027524:	9b04      	ldr	r3, [sp, #16]
 8027526:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802752a:	9300      	str	r3, [sp, #0]
 802752c:	0909      	lsrs	r1, r1, #4
 802752e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027532:	463b      	mov	r3, r7
 8027534:	4429      	add	r1, r5
 8027536:	4650      	mov	r0, sl
 8027538:	f7ff ff3c 	bl	80273b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802753c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8027540:	f818 1b01 	ldrb.w	r1, [r8], #1
 8027544:	9b04      	ldr	r3, [sp, #16]
 8027546:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802754a:	9300      	str	r3, [sp, #0]
 802754c:	f001 010f 	and.w	r1, r1, #15
 8027550:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027554:	463b      	mov	r3, r7
 8027556:	4429      	add	r1, r5
 8027558:	4650      	mov	r0, sl
 802755a:	f7ff ff2b 	bl	80273b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802755e:	f1ab 0b02 	sub.w	fp, fp, #2
 8027562:	f824 0c02 	strh.w	r0, [r4, #-2]
 8027566:	e7d5      	b.n	8027514 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027568:	46b0      	mov	r8, r6
 802756a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802756e:	e7d1      	b.n	8027514 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8027570:	d10f      	bne.n	8027592 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8027572:	f898 1000 	ldrb.w	r1, [r8]
 8027576:	9b04      	ldr	r3, [sp, #16]
 8027578:	f8b9 2000 	ldrh.w	r2, [r9]
 802757c:	9300      	str	r3, [sp, #0]
 802757e:	0909      	lsrs	r1, r1, #4
 8027580:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8027584:	463b      	mov	r3, r7
 8027586:	4429      	add	r1, r5
 8027588:	4650      	mov	r0, sl
 802758a:	f7ff ff13 	bl	80273b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802758e:	f829 0b02 	strh.w	r0, [r9], #2
 8027592:	9b08      	ldr	r3, [sp, #32]
 8027594:	9a05      	ldr	r2, [sp, #20]
 8027596:	881c      	ldrh	r4, [r3, #0]
 8027598:	9b03      	ldr	r3, [sp, #12]
 802759a:	1ae4      	subs	r4, r4, r3
 802759c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80275a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80275a4:	4413      	add	r3, r2
 80275a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80275a8:	fb93 f3f2 	sdiv	r3, r3, r2
 80275ac:	441e      	add	r6, r3
 80275ae:	e796      	b.n	80274de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80275b0:	4f46      	ldr	r7, [pc, #280]	; (80276cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80275b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80275b6:	42a3      	cmp	r3, r4
 80275b8:	d97c      	bls.n	80276b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80275ba:	9a06      	ldr	r2, [sp, #24]
 80275bc:	2a00      	cmp	r2, #0
 80275be:	d054      	beq.n	802766a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80275c0:	7830      	ldrb	r0, [r6, #0]
 80275c2:	f000 000f 	and.w	r0, r0, #15
 80275c6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80275ca:	eb05 0e00 	add.w	lr, r5, r0
 80275ce:	5c28      	ldrb	r0, [r5, r0]
 80275d0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80275d4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80275d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80275dc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80275e0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80275e4:	ea42 020e 	orr.w	r2, r2, lr
 80275e8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80275ec:	f824 2b02 	strh.w	r2, [r4], #2
 80275f0:	9a03      	ldr	r2, [sp, #12]
 80275f2:	1c71      	adds	r1, r6, #1
 80275f4:	f102 3eff 	add.w	lr, r2, #4294967295
 80275f8:	f1be 0f01 	cmp.w	lr, #1
 80275fc:	4620      	mov	r0, r4
 80275fe:	f104 0404 	add.w	r4, r4, #4
 8027602:	dd36      	ble.n	8027672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8027604:	7808      	ldrb	r0, [r1, #0]
 8027606:	0900      	lsrs	r0, r0, #4
 8027608:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802760c:	eb05 0a00 	add.w	sl, r5, r0
 8027610:	f1ae 0e02 	sub.w	lr, lr, #2
 8027614:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027618:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802761c:	00d2      	lsls	r2, r2, #3
 802761e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027622:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027626:	ea49 0202 	orr.w	r2, r9, r2
 802762a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802762e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027632:	f824 2c04 	strh.w	r2, [r4, #-4]
 8027636:	f811 0b01 	ldrb.w	r0, [r1], #1
 802763a:	f000 000f 	and.w	r0, r0, #15
 802763e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027642:	eb05 0a00 	add.w	sl, r5, r0
 8027646:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802764a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802764e:	00d2      	lsls	r2, r2, #3
 8027650:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8027654:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8027658:	ea49 0202 	orr.w	r2, r9, r2
 802765c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027660:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8027664:	f824 2c02 	strh.w	r2, [r4, #-2]
 8027668:	e7c6      	b.n	80275f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802766a:	4631      	mov	r1, r6
 802766c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8027670:	e7c2      	b.n	80275f8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8027672:	d111      	bne.n	8027698 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8027674:	7809      	ldrb	r1, [r1, #0]
 8027676:	0909      	lsrs	r1, r1, #4
 8027678:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802767c:	186c      	adds	r4, r5, r1
 802767e:	5c69      	ldrb	r1, [r5, r1]
 8027680:	78a2      	ldrb	r2, [r4, #2]
 8027682:	7864      	ldrb	r4, [r4, #1]
 8027684:	00e4      	lsls	r4, r4, #3
 8027686:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802768a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802768e:	4322      	orrs	r2, r4
 8027690:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8027694:	f820 2b02 	strh.w	r2, [r0], #2
 8027698:	9a03      	ldr	r2, [sp, #12]
 802769a:	f8bc 4000 	ldrh.w	r4, [ip]
 802769e:	9905      	ldr	r1, [sp, #20]
 80276a0:	1aa4      	subs	r4, r4, r2
 80276a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80276a6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80276aa:	440a      	add	r2, r1
 80276ac:	fb92 f2f8 	sdiv	r2, r2, r8
 80276b0:	4416      	add	r6, r2
 80276b2:	e780      	b.n	80275b6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80276b4:	4b03      	ldr	r3, [pc, #12]	; (80276c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80276b6:	6818      	ldr	r0, [r3, #0]
 80276b8:	6803      	ldr	r3, [r0, #0]
 80276ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80276bc:	4798      	blx	r3
 80276be:	b00f      	add	sp, #60	; 0x3c
 80276c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80276c4:	200137ec 	.word	0x200137ec
 80276c8:	200137e6 	.word	0x200137e6
 80276cc:	fffff800 	.word	0xfffff800

080276d0 <CRC_Lock>:
 80276d0:	b530      	push	{r4, r5, lr}
 80276d2:	4a20      	ldr	r2, [pc, #128]	; (8027754 <CRC_Lock+0x84>)
 80276d4:	6813      	ldr	r3, [r2, #0]
 80276d6:	f023 0301 	bic.w	r3, r3, #1
 80276da:	6013      	str	r3, [r2, #0]
 80276dc:	4b1e      	ldr	r3, [pc, #120]	; (8027758 <CRC_Lock+0x88>)
 80276de:	681a      	ldr	r2, [r3, #0]
 80276e0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80276e4:	4022      	ands	r2, r4
 80276e6:	f24c 2540 	movw	r5, #49728	; 0xc240
 80276ea:	42aa      	cmp	r2, r5
 80276ec:	d005      	beq.n	80276fa <CRC_Lock+0x2a>
 80276ee:	681b      	ldr	r3, [r3, #0]
 80276f0:	f24c 2270 	movw	r2, #49776	; 0xc270
 80276f4:	4023      	ands	r3, r4
 80276f6:	4293      	cmp	r3, r2
 80276f8:	d124      	bne.n	8027744 <CRC_Lock+0x74>
 80276fa:	4b18      	ldr	r3, [pc, #96]	; (802775c <CRC_Lock+0x8c>)
 80276fc:	681b      	ldr	r3, [r3, #0]
 80276fe:	bb0b      	cbnz	r3, 8027744 <CRC_Lock+0x74>
 8027700:	4b17      	ldr	r3, [pc, #92]	; (8027760 <CRC_Lock+0x90>)
 8027702:	681a      	ldr	r2, [r3, #0]
 8027704:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027708:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802770c:	d00d      	beq.n	802772a <CRC_Lock+0x5a>
 802770e:	681a      	ldr	r2, [r3, #0]
 8027710:	f240 4483 	movw	r4, #1155	; 0x483
 8027714:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027718:	42a2      	cmp	r2, r4
 802771a:	d006      	beq.n	802772a <CRC_Lock+0x5a>
 802771c:	681b      	ldr	r3, [r3, #0]
 802771e:	f240 4285 	movw	r2, #1157	; 0x485
 8027722:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027726:	4293      	cmp	r3, r2
 8027728:	d10c      	bne.n	8027744 <CRC_Lock+0x74>
 802772a:	4b0e      	ldr	r3, [pc, #56]	; (8027764 <CRC_Lock+0x94>)
 802772c:	2201      	movs	r2, #1
 802772e:	601a      	str	r2, [r3, #0]
 8027730:	681a      	ldr	r2, [r3, #0]
 8027732:	2a00      	cmp	r2, #0
 8027734:	d1fc      	bne.n	8027730 <CRC_Lock+0x60>
 8027736:	4b0c      	ldr	r3, [pc, #48]	; (8027768 <CRC_Lock+0x98>)
 8027738:	6018      	str	r0, [r3, #0]
 802773a:	6818      	ldr	r0, [r3, #0]
 802773c:	1a43      	subs	r3, r0, r1
 802773e:	4258      	negs	r0, r3
 8027740:	4158      	adcs	r0, r3
 8027742:	bd30      	pop	{r4, r5, pc}
 8027744:	4b09      	ldr	r3, [pc, #36]	; (802776c <CRC_Lock+0x9c>)
 8027746:	2201      	movs	r2, #1
 8027748:	601a      	str	r2, [r3, #0]
 802774a:	681a      	ldr	r2, [r3, #0]
 802774c:	2a00      	cmp	r2, #0
 802774e:	d1fc      	bne.n	802774a <CRC_Lock+0x7a>
 8027750:	4b07      	ldr	r3, [pc, #28]	; (8027770 <CRC_Lock+0xa0>)
 8027752:	e7f1      	b.n	8027738 <CRC_Lock+0x68>
 8027754:	e0002000 	.word	0xe0002000
 8027758:	e000ed00 	.word	0xe000ed00
 802775c:	e0042000 	.word	0xe0042000
 8027760:	5c001000 	.word	0x5c001000
 8027764:	58024c08 	.word	0x58024c08
 8027768:	58024c00 	.word	0x58024c00
 802776c:	40023008 	.word	0x40023008
 8027770:	40023000 	.word	0x40023000

08027774 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027774:	6101      	str	r1, [r0, #16]
 8027776:	4770      	bx	lr

08027778 <_ZN8touchgfx8Gestures4tickEv>:
 8027778:	7b83      	ldrb	r3, [r0, #14]
 802777a:	b14b      	cbz	r3, 8027790 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802777c:	8903      	ldrh	r3, [r0, #8]
 802777e:	3301      	adds	r3, #1
 8027780:	b29b      	uxth	r3, r3
 8027782:	2b07      	cmp	r3, #7
 8027784:	8103      	strh	r3, [r0, #8]
 8027786:	bf81      	itttt	hi
 8027788:	2300      	movhi	r3, #0
 802778a:	8143      	strhhi	r3, [r0, #10]
 802778c:	8183      	strhhi	r3, [r0, #12]
 802778e:	7383      	strbhi	r3, [r0, #14]
 8027790:	4770      	bx	lr
	...

08027794 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027794:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027798:	4698      	mov	r8, r3
 802779a:	8883      	ldrh	r3, [r0, #4]
 802779c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80277a0:	eba8 0303 	sub.w	r3, r8, r3
 80277a4:	b21b      	sxth	r3, r3
 80277a6:	4604      	mov	r4, r0
 80277a8:	2b00      	cmp	r3, #0
 80277aa:	4617      	mov	r7, r2
 80277ac:	4a18      	ldr	r2, [pc, #96]	; (8027810 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80277ae:	9200      	str	r2, [sp, #0]
 80277b0:	bfb8      	it	lt
 80277b2:	425b      	neglt	r3, r3
 80277b4:	8aa2      	ldrh	r2, [r4, #20]
 80277b6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80277ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 80277be:	b21b      	sxth	r3, r3
 80277c0:	460e      	mov	r6, r1
 80277c2:	4293      	cmp	r3, r2
 80277c4:	88c1      	ldrh	r1, [r0, #6]
 80277c6:	f8ad 1008 	strh.w	r1, [sp, #8]
 80277ca:	f04f 0000 	mov.w	r0, #0
 80277ce:	f88d 0004 	strb.w	r0, [sp, #4]
 80277d2:	f8ad 500c 	strh.w	r5, [sp, #12]
 80277d6:	dc07      	bgt.n	80277e8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80277d8:	1a69      	subs	r1, r5, r1
 80277da:	b209      	sxth	r1, r1
 80277dc:	2900      	cmp	r1, #0
 80277de:	bfb8      	it	lt
 80277e0:	4249      	neglt	r1, r1
 80277e2:	b209      	sxth	r1, r1
 80277e4:	428a      	cmp	r2, r1
 80277e6:	da10      	bge.n	802780a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80277e8:	6920      	ldr	r0, [r4, #16]
 80277ea:	6803      	ldr	r3, [r0, #0]
 80277ec:	4669      	mov	r1, sp
 80277ee:	685b      	ldr	r3, [r3, #4]
 80277f0:	4798      	blx	r3
 80277f2:	eba8 0606 	sub.w	r6, r8, r6
 80277f6:	2300      	movs	r3, #0
 80277f8:	1bef      	subs	r7, r5, r7
 80277fa:	2001      	movs	r0, #1
 80277fc:	8123      	strh	r3, [r4, #8]
 80277fe:	8166      	strh	r6, [r4, #10]
 8027800:	81a7      	strh	r7, [r4, #12]
 8027802:	f8a4 8004 	strh.w	r8, [r4, #4]
 8027806:	80e5      	strh	r5, [r4, #6]
 8027808:	73a0      	strb	r0, [r4, #14]
 802780a:	b004      	add	sp, #16
 802780c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027810:	0802fab0 	.word	0x0802fab0

08027814 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8027814:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027816:	461e      	mov	r6, r3
 8027818:	1e4b      	subs	r3, r1, #1
 802781a:	2b01      	cmp	r3, #1
 802781c:	b085      	sub	sp, #20
 802781e:	4604      	mov	r4, r0
 8027820:	460d      	mov	r5, r1
 8027822:	4617      	mov	r7, r2
 8027824:	d84b      	bhi.n	80278be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8027826:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802782a:	1cd3      	adds	r3, r2, #3
 802782c:	b29b      	uxth	r3, r3
 802782e:	2b06      	cmp	r3, #6
 8027830:	d916      	bls.n	8027860 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8027832:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80278d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027836:	f8cd c004 	str.w	ip, [sp, #4]
 802783a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802783e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8027842:	6900      	ldr	r0, [r0, #16]
 8027844:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027848:	f04f 0c00 	mov.w	ip, #0
 802784c:	f88d c008 	strb.w	ip, [sp, #8]
 8027850:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027854:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027858:	6803      	ldr	r3, [r0, #0]
 802785a:	a901      	add	r1, sp, #4
 802785c:	689b      	ldr	r3, [r3, #8]
 802785e:	4798      	blx	r3
 8027860:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027864:	1cd3      	adds	r3, r2, #3
 8027866:	b29b      	uxth	r3, r3
 8027868:	2b06      	cmp	r3, #6
 802786a:	d916      	bls.n	802789a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802786c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80278d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8027870:	f8cd c004 	str.w	ip, [sp, #4]
 8027874:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027878:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802787c:	6920      	ldr	r0, [r4, #16]
 802787e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027882:	f04f 0c01 	mov.w	ip, #1
 8027886:	f88d c008 	strb.w	ip, [sp, #8]
 802788a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802788e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027892:	6803      	ldr	r3, [r0, #0]
 8027894:	a901      	add	r1, sp, #4
 8027896:	689b      	ldr	r3, [r3, #8]
 8027898:	4798      	blx	r3
 802789a:	4b0d      	ldr	r3, [pc, #52]	; (80278d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802789c:	9301      	str	r3, [sp, #4]
 802789e:	6920      	ldr	r0, [r4, #16]
 80278a0:	f88d 5008 	strb.w	r5, [sp, #8]
 80278a4:	2300      	movs	r3, #0
 80278a6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80278aa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80278ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80278b2:	6803      	ldr	r3, [r0, #0]
 80278b4:	a901      	add	r1, sp, #4
 80278b6:	681b      	ldr	r3, [r3, #0]
 80278b8:	4798      	blx	r3
 80278ba:	b005      	add	sp, #20
 80278bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80278be:	2900      	cmp	r1, #0
 80278c0:	d1eb      	bne.n	802789a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80278c2:	80a2      	strh	r2, [r4, #4]
 80278c4:	80c6      	strh	r6, [r0, #6]
 80278c6:	60a1      	str	r1, [r4, #8]
 80278c8:	81a1      	strh	r1, [r4, #12]
 80278ca:	73a1      	strb	r1, [r4, #14]
 80278cc:	e7e5      	b.n	802789a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80278ce:	bf00      	nop
 80278d0:	0802fa9c 	.word	0x0802fa9c
 80278d4:	0802fac4 	.word	0x0802fac4

080278d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 80278d8:	10c9      	asrs	r1, r1, #3
 80278da:	2900      	cmp	r1, #0
 80278dc:	bfb8      	it	lt
 80278de:	4249      	neglt	r1, r1
 80278e0:	2801      	cmp	r0, #1
 80278e2:	d108      	bne.n	80278f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80278e4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80278e8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80278ec:	4601      	mov	r1, r0
 80278ee:	dd02      	ble.n	80278f6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80278f0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80278f4:	4770      	bx	lr
 80278f6:	29ff      	cmp	r1, #255	; 0xff
 80278f8:	bfa8      	it	ge
 80278fa:	21ff      	movge	r1, #255	; 0xff
 80278fc:	4608      	mov	r0, r1
 80278fe:	4770      	bx	lr

08027900 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8027900:	b410      	push	{r4}
 8027902:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8027906:	429c      	cmp	r4, r3
 8027908:	d803      	bhi.n	8027912 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802790a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802790e:	f7ed b8b1 	b.w	8014a74 <_ZN8touchgfx7Outline6lineToEii>
 8027912:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027916:	4770      	bx	lr

08027918 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8027918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802791c:	b08b      	sub	sp, #44	; 0x2c
 802791e:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8027922:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8027926:	9308      	str	r3, [sp, #32]
 8027928:	4606      	mov	r6, r0
 802792a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802792e:	9309      	str	r3, [sp, #36]	; 0x24
 8027930:	468a      	mov	sl, r1
 8027932:	f7ed fa0c 	bl	8014d4e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8027936:	68b5      	ldr	r5, [r6, #8]
 8027938:	4604      	mov	r4, r0
 802793a:	2d00      	cmp	r5, #0
 802793c:	d044      	beq.n	80279c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802793e:	6873      	ldr	r3, [r6, #4]
 8027940:	42ab      	cmp	r3, r5
 8027942:	d33d      	bcc.n	80279c0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8027944:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8027948:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802794c:	eb02 0b03 	add.w	fp, r2, r3
 8027950:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027954:	fb02 1203 	mla	r2, r2, r3, r1
 8027958:	9205      	str	r2, [sp, #20]
 802795a:	1e6a      	subs	r2, r5, #1
 802795c:	9204      	str	r2, [sp, #16]
 802795e:	f04f 0800 	mov.w	r8, #0
 8027962:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027966:	f9b4 7000 	ldrsh.w	r7, [r4]
 802796a:	454b      	cmp	r3, r9
 802796c:	463a      	mov	r2, r7
 802796e:	d008      	beq.n	8027982 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8027970:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8027974:	eb03 0b09 	add.w	fp, r3, r9
 8027978:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802797c:	fb03 1309 	mla	r3, r3, r9, r1
 8027980:	9305      	str	r3, [sp, #20]
 8027982:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027986:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802798a:	4498      	add	r8, r3
 802798c:	9b04      	ldr	r3, [sp, #16]
 802798e:	3b01      	subs	r3, #1
 8027990:	9304      	str	r3, [sp, #16]
 8027992:	9b04      	ldr	r3, [sp, #16]
 8027994:	3301      	adds	r3, #1
 8027996:	d015      	beq.n	80279c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027998:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802799c:	42bb      	cmp	r3, r7
 802799e:	d117      	bne.n	80279d0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 80279a0:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 80279a4:	9b04      	ldr	r3, [sp, #16]
 80279a6:	4548      	cmp	r0, r9
 80279a8:	f103 33ff 	add.w	r3, r3, #4294967295
 80279ac:	d17f      	bne.n	8027aae <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 80279ae:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 80279b2:	4401      	add	r1, r0
 80279b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80279b8:	4480      	add	r8, r0
 80279ba:	e7e9      	b.n	8027990 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 80279bc:	461f      	mov	r7, r3
 80279be:	e044      	b.n	8027a4a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 80279c0:	2000      	movs	r0, #0
 80279c2:	e002      	b.n	80279ca <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 80279c4:	2900      	cmp	r1, #0
 80279c6:	d16f      	bne.n	8027aa8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 80279c8:	2001      	movs	r0, #1
 80279ca:	b00b      	add	sp, #44	; 0x2c
 80279cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80279d0:	2900      	cmp	r1, #0
 80279d2:	d030      	beq.n	8027a36 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 80279d4:	2f00      	cmp	r7, #0
 80279d6:	db29      	blt.n	8027a2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80279d8:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80279dc:	42bb      	cmp	r3, r7
 80279de:	dd25      	ble.n	8027a2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80279e0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80279e4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80279e8:	f7ff ff76 	bl	80278d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80279ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80279ee:	fb10 f003 	smulbb	r0, r0, r3
 80279f2:	b280      	uxth	r0, r0
 80279f4:	1c41      	adds	r1, r0, #1
 80279f6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80279fa:	1209      	asrs	r1, r1, #8
 80279fc:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027a00:	d014      	beq.n	8027a2c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8027a02:	9808      	ldr	r0, [sp, #32]
 8027a04:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027a06:	b2c9      	uxtb	r1, r1
 8027a08:	b2ba      	uxth	r2, r7
 8027a0a:	9102      	str	r1, [sp, #8]
 8027a0c:	2101      	movs	r1, #1
 8027a0e:	4413      	add	r3, r2
 8027a10:	9101      	str	r1, [sp, #4]
 8027a12:	4402      	add	r2, r0
 8027a14:	fa0f f18b 	sxth.w	r1, fp
 8027a18:	f8da 0000 	ldr.w	r0, [sl]
 8027a1c:	9100      	str	r1, [sp, #0]
 8027a1e:	6941      	ldr	r1, [r0, #20]
 8027a20:	b21b      	sxth	r3, r3
 8027a22:	460d      	mov	r5, r1
 8027a24:	b212      	sxth	r2, r2
 8027a26:	9905      	ldr	r1, [sp, #20]
 8027a28:	4650      	mov	r0, sl
 8027a2a:	47a8      	blx	r5
 8027a2c:	9b04      	ldr	r3, [sp, #16]
 8027a2e:	3301      	adds	r3, #1
 8027a30:	f107 0201 	add.w	r2, r7, #1
 8027a34:	d0c8      	beq.n	80279c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027a36:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027a3a:	1abb      	subs	r3, r7, r2
 8027a3c:	2b00      	cmp	r3, #0
 8027a3e:	dd31      	ble.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027a40:	2a00      	cmp	r2, #0
 8027a42:	dabb      	bge.n	80279bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8027a44:	2f00      	cmp	r7, #0
 8027a46:	dd2d      	ble.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027a48:	2200      	movs	r2, #0
 8027a4a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8027a4e:	19d1      	adds	r1, r2, r7
 8027a50:	4299      	cmp	r1, r3
 8027a52:	db02      	blt.n	8027a5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8027a54:	1a9f      	subs	r7, r3, r2
 8027a56:	2f00      	cmp	r7, #0
 8027a58:	dd24      	ble.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027a5a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027a5e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8027a62:	f7ff ff39 	bl	80278d8 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8027a66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027a68:	fb10 f003 	smulbb	r0, r0, r3
 8027a6c:	b280      	uxth	r0, r0
 8027a6e:	1c41      	adds	r1, r0, #1
 8027a70:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8027a74:	1209      	asrs	r1, r1, #8
 8027a76:	f011 0fff 	tst.w	r1, #255	; 0xff
 8027a7a:	d013      	beq.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027a7c:	9808      	ldr	r0, [sp, #32]
 8027a7e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8027a80:	b292      	uxth	r2, r2
 8027a82:	b2c9      	uxtb	r1, r1
 8027a84:	4413      	add	r3, r2
 8027a86:	9102      	str	r1, [sp, #8]
 8027a88:	4402      	add	r2, r0
 8027a8a:	b23f      	sxth	r7, r7
 8027a8c:	f8da 0000 	ldr.w	r0, [sl]
 8027a90:	9701      	str	r7, [sp, #4]
 8027a92:	fa0f f18b 	sxth.w	r1, fp
 8027a96:	9100      	str	r1, [sp, #0]
 8027a98:	6947      	ldr	r7, [r0, #20]
 8027a9a:	9905      	ldr	r1, [sp, #20]
 8027a9c:	b21b      	sxth	r3, r3
 8027a9e:	b212      	sxth	r2, r2
 8027aa0:	4650      	mov	r0, sl
 8027aa2:	47b8      	blx	r7
 8027aa4:	464b      	mov	r3, r9
 8027aa6:	e75c      	b.n	8027962 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027aa8:	2f00      	cmp	r7, #0
 8027aaa:	da95      	bge.n	80279d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8027aac:	e78c      	b.n	80279c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027aae:	2900      	cmp	r1, #0
 8027ab0:	d0f8      	beq.n	8027aa4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027ab2:	e78f      	b.n	80279d4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08027ab4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8027ab4:	4b4b      	ldr	r3, [pc, #300]	; (8027be4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8027ab6:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8027aba:	2500      	movs	r5, #0
 8027abc:	f100 0620 	add.w	r6, r0, #32
 8027ac0:	4604      	mov	r4, r0
 8027ac2:	e9c0 3100 	strd	r3, r1, [r0]
 8027ac6:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8027aca:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8027ace:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8027ad2:	f100 0718 	add.w	r7, r0, #24
 8027ad6:	4630      	mov	r0, r6
 8027ad8:	4690      	mov	r8, r2
 8027ada:	f7ec fb03 	bl	80140e4 <_ZN8touchgfx7OutlineC1Ev>
 8027ade:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8027ae2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8027ae6:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8027aea:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8027aee:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8027af2:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8027af6:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8027afa:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8027afe:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8027b02:	f9b8 2000 	ldrsh.w	r2, [r8]
 8027b06:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8027b0a:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8027b0e:	9500      	str	r5, [sp, #0]
 8027b10:	4410      	add	r0, r2
 8027b12:	b280      	uxth	r0, r0
 8027b14:	fa0f fa80 	sxth.w	sl, r0
 8027b18:	45aa      	cmp	sl, r5
 8027b1a:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8027b1e:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8027b22:	dd5c      	ble.n	8027bde <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027b24:	4591      	cmp	r9, r2
 8027b26:	dd5a      	ble.n	8027bde <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027b28:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8027b2c:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8027b30:	440b      	add	r3, r1
 8027b32:	b29b      	uxth	r3, r3
 8027b34:	b21d      	sxth	r5, r3
 8027b36:	2d00      	cmp	r5, #0
 8027b38:	dd51      	ble.n	8027bde <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027b3a:	458e      	cmp	lr, r1
 8027b3c:	dd4f      	ble.n	8027bde <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8027b3e:	45d1      	cmp	r9, sl
 8027b40:	bfb8      	it	lt
 8027b42:	fa1f f089 	uxthlt.w	r0, r9
 8027b46:	45ae      	cmp	lr, r5
 8027b48:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8027b4c:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8027b50:	bfb8      	it	lt
 8027b52:	fa1f f38e 	uxthlt.w	r3, lr
 8027b56:	1a80      	subs	r0, r0, r2
 8027b58:	1a5b      	subs	r3, r3, r1
 8027b5a:	f8ad 0004 	strh.w	r0, [sp, #4]
 8027b5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027b62:	f8ad 2000 	strh.w	r2, [sp]
 8027b66:	f8ad 1002 	strh.w	r1, [sp, #2]
 8027b6a:	466d      	mov	r5, sp
 8027b6c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8027b70:	e887 0003 	stmia.w	r7, {r0, r1}
 8027b74:	f8dc 3000 	ldr.w	r3, [ip]
 8027b78:	4660      	mov	r0, ip
 8027b7a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027b7c:	4639      	mov	r1, r7
 8027b7e:	4798      	blx	r3
 8027b80:	6861      	ldr	r1, [r4, #4]
 8027b82:	4628      	mov	r0, r5
 8027b84:	3104      	adds	r1, #4
 8027b86:	f7ee fcb3 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8027b8a:	4638      	mov	r0, r7
 8027b8c:	f7ee fc6c 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8027b90:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027b94:	f8bd 2000 	ldrh.w	r2, [sp]
 8027b98:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8027b9c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8027ba0:	4630      	mov	r0, r6
 8027ba2:	f7ec fa83 	bl	80140ac <_ZN8touchgfx7Outline5resetEv>
 8027ba6:	f9bd 3000 	ldrsh.w	r3, [sp]
 8027baa:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8027bae:	015b      	lsls	r3, r3, #5
 8027bb0:	60a3      	str	r3, [r4, #8]
 8027bb2:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027bb6:	015b      	lsls	r3, r3, #5
 8027bb8:	60e3      	str	r3, [r4, #12]
 8027bba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8027bbe:	015b      	lsls	r3, r3, #5
 8027bc0:	6123      	str	r3, [r4, #16]
 8027bc2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027bc6:	015b      	lsls	r3, r3, #5
 8027bc8:	6163      	str	r3, [r4, #20]
 8027bca:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8027bce:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8027bd2:	4620      	mov	r0, r4
 8027bd4:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8027bd8:	b002      	add	sp, #8
 8027bda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027bde:	2300      	movs	r3, #0
 8027be0:	9301      	str	r3, [sp, #4]
 8027be2:	e7c2      	b.n	8027b6a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8027be4:	0802fde8 	.word	0x0802fde8

08027be8 <_ZN8touchgfx6Canvas5closeEv>:
 8027be8:	b538      	push	{r3, r4, r5, lr}
 8027bea:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027bee:	4604      	mov	r4, r0
 8027bf0:	b193      	cbz	r3, 8027c18 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027bf2:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8027bf6:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8027bfa:	4213      	tst	r3, r2
 8027bfc:	d10c      	bne.n	8027c18 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027bfe:	f100 0520 	add.w	r5, r0, #32
 8027c02:	b123      	cbz	r3, 8027c0e <_ZN8touchgfx6Canvas5closeEv+0x26>
 8027c04:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8027c08:	4628      	mov	r0, r5
 8027c0a:	f7ff fe79 	bl	8027900 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027c0e:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8027c12:	4628      	mov	r0, r5
 8027c14:	f7ff fe74 	bl	8027900 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027c18:	2300      	movs	r3, #0
 8027c1a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027c1e:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8027c22:	4298      	cmp	r0, r3
 8027c24:	bf34      	ite	cc
 8027c26:	2000      	movcc	r0, #0
 8027c28:	2001      	movcs	r0, #1
 8027c2a:	bd38      	pop	{r3, r4, r5, pc}

08027c2c <_ZN8touchgfx6Canvas6renderEh>:
 8027c2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027c30:	4604      	mov	r4, r0
 8027c32:	6840      	ldr	r0, [r0, #4]
 8027c34:	6803      	ldr	r3, [r0, #0]
 8027c36:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8027c38:	460d      	mov	r5, r1
 8027c3a:	4798      	blx	r3
 8027c3c:	fb10 f105 	smulbb	r1, r0, r5
 8027c40:	b289      	uxth	r1, r1
 8027c42:	1c4d      	adds	r5, r1, #1
 8027c44:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027c48:	122d      	asrs	r5, r5, #8
 8027c4a:	f000 809d 	beq.w	8027d88 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027c4e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8027c52:	2b00      	cmp	r3, #0
 8027c54:	f000 8098 	beq.w	8027d88 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8027c58:	4620      	mov	r0, r4
 8027c5a:	f7ff ffc5 	bl	8027be8 <_ZN8touchgfx6Canvas5closeEv>
 8027c5e:	4607      	mov	r7, r0
 8027c60:	2800      	cmp	r0, #0
 8027c62:	d048      	beq.n	8027cf6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027c64:	6863      	ldr	r3, [r4, #4]
 8027c66:	4e49      	ldr	r6, [pc, #292]	; (8027d8c <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8027c68:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027c6a:	6837      	ldr	r7, [r6, #0]
 8027c6c:	6803      	ldr	r3, [r0, #0]
 8027c6e:	689b      	ldr	r3, [r3, #8]
 8027c70:	4798      	blx	r3
 8027c72:	4601      	mov	r1, r0
 8027c74:	4638      	mov	r0, r7
 8027c76:	f7ea f9bb 	bl	8011ff0 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8027c7a:	4607      	mov	r7, r0
 8027c7c:	f7dc fde6 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8027c80:	6803      	ldr	r3, [r0, #0]
 8027c82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8027c84:	4798      	blx	r3
 8027c86:	4680      	mov	r8, r0
 8027c88:	f7dc fde0 	bl	800484c <_ZN8touchgfx3HAL3lcdEv>
 8027c8c:	6803      	ldr	r3, [r0, #0]
 8027c8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027c90:	4798      	blx	r3
 8027c92:	280b      	cmp	r0, #11
 8027c94:	d85d      	bhi.n	8027d52 <_ZN8touchgfx6Canvas6renderEh+0x126>
 8027c96:	e8df f000 	tbb	[pc, r0]
 8027c9a:	5e53      	.short	0x5e53
 8027c9c:	325c066e 	.word	0x325c066e
 8027ca0:	67676742 	.word	0x67676742
 8027ca4:	6767      	.short	0x6767
 8027ca6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027caa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027cae:	2208      	movs	r2, #8
 8027cb0:	fb91 f2f2 	sdiv	r2, r1, r2
 8027cb4:	fb08 2303 	mla	r3, r8, r3, r2
 8027cb8:	441f      	add	r7, r3
 8027cba:	424b      	negs	r3, r1
 8027cbc:	f003 0307 	and.w	r3, r3, #7
 8027cc0:	f001 0107 	and.w	r1, r1, #7
 8027cc4:	bf58      	it	pl
 8027cc6:	4259      	negpl	r1, r3
 8027cc8:	b2c9      	uxtb	r1, r1
 8027cca:	b2ed      	uxtb	r5, r5
 8027ccc:	e9cd 1500 	strd	r1, r5, [sp]
 8027cd0:	6860      	ldr	r0, [r4, #4]
 8027cd2:	463a      	mov	r2, r7
 8027cd4:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8027cd6:	fa0f f388 	sxth.w	r3, r8
 8027cda:	f104 0020 	add.w	r0, r4, #32
 8027cde:	f7ff fe1b 	bl	8027918 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027ce2:	6863      	ldr	r3, [r4, #4]
 8027ce4:	4607      	mov	r7, r0
 8027ce6:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8027ce8:	6803      	ldr	r3, [r0, #0]
 8027cea:	691b      	ldr	r3, [r3, #16]
 8027cec:	4798      	blx	r3
 8027cee:	6830      	ldr	r0, [r6, #0]
 8027cf0:	6803      	ldr	r3, [r0, #0]
 8027cf2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8027cf4:	4798      	blx	r3
 8027cf6:	4638      	mov	r0, r7
 8027cf8:	b002      	add	sp, #8
 8027cfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027cfe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d02:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027d06:	2204      	movs	r2, #4
 8027d08:	fb91 f2f2 	sdiv	r2, r1, r2
 8027d0c:	fb08 2303 	mla	r3, r8, r3, r2
 8027d10:	441f      	add	r7, r3
 8027d12:	424b      	negs	r3, r1
 8027d14:	f003 0303 	and.w	r3, r3, #3
 8027d18:	f001 0103 	and.w	r1, r1, #3
 8027d1c:	e7d2      	b.n	8027cc4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8027d1e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8027d22:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d26:	2900      	cmp	r1, #0
 8027d28:	f04f 0202 	mov.w	r2, #2
 8027d2c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027d30:	f001 0101 	and.w	r1, r1, #1
 8027d34:	fb08 2303 	mla	r3, r8, r3, r2
 8027d38:	441f      	add	r7, r3
 8027d3a:	bfb8      	it	lt
 8027d3c:	4249      	neglt	r1, r1
 8027d3e:	e7c3      	b.n	8027cc8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8027d40:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d44:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027d48:	fb08 f303 	mul.w	r3, r8, r3
 8027d4c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027d50:	441f      	add	r7, r3
 8027d52:	2100      	movs	r1, #0
 8027d54:	e7b9      	b.n	8027cca <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8027d56:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d5a:	fb08 f203 	mul.w	r2, r8, r3
 8027d5e:	8b23      	ldrh	r3, [r4, #24]
 8027d60:	2103      	movs	r1, #3
 8027d62:	fb13 2301 	smlabb	r3, r3, r1, r2
 8027d66:	e7f3      	b.n	8027d50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027d68:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d6c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027d70:	fb08 2303 	mla	r3, r8, r3, r2
 8027d74:	e7ec      	b.n	8027d50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027d76:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8027d7a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8027d7e:	fb08 f303 	mul.w	r3, r8, r3
 8027d82:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8027d86:	e7e3      	b.n	8027d50 <_ZN8touchgfx6Canvas6renderEh+0x124>
 8027d88:	2701      	movs	r7, #1
 8027d8a:	e7b4      	b.n	8027cf6 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8027d8c:	200137ec 	.word	0x200137ec

08027d90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8027d90:	b510      	push	{r4, lr}
 8027d92:	4b07      	ldr	r3, [pc, #28]	; (8027db0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8027d94:	781b      	ldrb	r3, [r3, #0]
 8027d96:	2b01      	cmp	r3, #1
 8027d98:	d108      	bne.n	8027dac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8027d9a:	6843      	ldr	r3, [r0, #4]
 8027d9c:	6814      	ldr	r4, [r2, #0]
 8027d9e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8027da2:	680b      	ldr	r3, [r1, #0]
 8027da4:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8027da8:	6013      	str	r3, [r2, #0]
 8027daa:	600c      	str	r4, [r1, #0]
 8027dac:	bd10      	pop	{r4, pc}
 8027dae:	bf00      	nop
 8027db0:	200137e4 	.word	0x200137e4

08027db4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8027db4:	b513      	push	{r0, r1, r4, lr}
 8027db6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8027dba:	4604      	mov	r4, r0
 8027dbc:	e9cd 2100 	strd	r2, r1, [sp]
 8027dc0:	b9a3      	cbnz	r3, 8027dec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027dc2:	466a      	mov	r2, sp
 8027dc4:	a901      	add	r1, sp, #4
 8027dc6:	4620      	mov	r0, r4
 8027dc8:	f7ff ffe2 	bl	8027d90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027dcc:	68a3      	ldr	r3, [r4, #8]
 8027dce:	9901      	ldr	r1, [sp, #4]
 8027dd0:	9a00      	ldr	r2, [sp, #0]
 8027dd2:	1ac9      	subs	r1, r1, r3
 8027dd4:	68e3      	ldr	r3, [r4, #12]
 8027dd6:	9101      	str	r1, [sp, #4]
 8027dd8:	1ad2      	subs	r2, r2, r3
 8027dda:	2a00      	cmp	r2, #0
 8027ddc:	9200      	str	r2, [sp, #0]
 8027dde:	da0b      	bge.n	8027df8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027de0:	2301      	movs	r3, #1
 8027de2:	2900      	cmp	r1, #0
 8027de4:	da0e      	bge.n	8027e04 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027de6:	f043 0304 	orr.w	r3, r3, #4
 8027dea:	e013      	b.n	8027e14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8027dec:	f7ff fefc 	bl	8027be8 <_ZN8touchgfx6Canvas5closeEv>
 8027df0:	2800      	cmp	r0, #0
 8027df2:	d1e6      	bne.n	8027dc2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027df4:	b002      	add	sp, #8
 8027df6:	bd10      	pop	{r4, pc}
 8027df8:	6963      	ldr	r3, [r4, #20]
 8027dfa:	429a      	cmp	r2, r3
 8027dfc:	bfac      	ite	ge
 8027dfe:	2302      	movge	r3, #2
 8027e00:	2300      	movlt	r3, #0
 8027e02:	e7ee      	b.n	8027de2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027e04:	6920      	ldr	r0, [r4, #16]
 8027e06:	4281      	cmp	r1, r0
 8027e08:	bfac      	ite	ge
 8027e0a:	2008      	movge	r0, #8
 8027e0c:	2000      	movlt	r0, #0
 8027e0e:	4318      	orrs	r0, r3
 8027e10:	b2c3      	uxtb	r3, r0
 8027e12:	b158      	cbz	r0, 8027e2c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027e14:	2200      	movs	r2, #0
 8027e16:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8027e1a:	9901      	ldr	r1, [sp, #4]
 8027e1c:	9a00      	ldr	r2, [sp, #0]
 8027e1e:	66a1      	str	r1, [r4, #104]	; 0x68
 8027e20:	66e2      	str	r2, [r4, #108]	; 0x6c
 8027e22:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8027e26:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8027e2a:	e7e3      	b.n	8027df4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8027e2c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027e30:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027e34:	4298      	cmp	r0, r3
 8027e36:	d803      	bhi.n	8027e40 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027e38:	f104 0020 	add.w	r0, r4, #32
 8027e3c:	f7ec fe34 	bl	8014aa8 <_ZN8touchgfx7Outline6moveToEii>
 8027e40:	2301      	movs	r3, #1
 8027e42:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027e46:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027e4a:	2300      	movs	r3, #0
 8027e4c:	e7e5      	b.n	8027e1a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8027e4e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027e50:	ab02      	add	r3, sp, #8
 8027e52:	4604      	mov	r4, r0
 8027e54:	f843 2d08 	str.w	r2, [r3, #-8]!
 8027e58:	9101      	str	r1, [sp, #4]
 8027e5a:	461a      	mov	r2, r3
 8027e5c:	a901      	add	r1, sp, #4
 8027e5e:	f7ff ff97 	bl	8027d90 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8027e62:	68a3      	ldr	r3, [r4, #8]
 8027e64:	9901      	ldr	r1, [sp, #4]
 8027e66:	9a00      	ldr	r2, [sp, #0]
 8027e68:	1ac9      	subs	r1, r1, r3
 8027e6a:	68e3      	ldr	r3, [r4, #12]
 8027e6c:	9101      	str	r1, [sp, #4]
 8027e6e:	1ad2      	subs	r2, r2, r3
 8027e70:	2a00      	cmp	r2, #0
 8027e72:	9200      	str	r2, [sp, #0]
 8027e74:	db1c      	blt.n	8027eb0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8027e76:	6963      	ldr	r3, [r4, #20]
 8027e78:	429a      	cmp	r2, r3
 8027e7a:	bfac      	ite	ge
 8027e7c:	2002      	movge	r0, #2
 8027e7e:	2000      	movlt	r0, #0
 8027e80:	2900      	cmp	r1, #0
 8027e82:	db17      	blt.n	8027eb4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8027e84:	6923      	ldr	r3, [r4, #16]
 8027e86:	4299      	cmp	r1, r3
 8027e88:	bfac      	ite	ge
 8027e8a:	2308      	movge	r3, #8
 8027e8c:	2300      	movlt	r3, #0
 8027e8e:	4303      	orrs	r3, r0
 8027e90:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8027e94:	b2dd      	uxtb	r5, r3
 8027e96:	b978      	cbnz	r0, 8027eb8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8027e98:	f104 0020 	add.w	r0, r4, #32
 8027e9c:	f7ff fd30 	bl	8027900 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027ea0:	9b01      	ldr	r3, [sp, #4]
 8027ea2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8027ea4:	9b00      	ldr	r3, [sp, #0]
 8027ea6:	6623      	str	r3, [r4, #96]	; 0x60
 8027ea8:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8027eac:	b002      	add	sp, #8
 8027eae:	bd70      	pop	{r4, r5, r6, pc}
 8027eb0:	2001      	movs	r0, #1
 8027eb2:	e7e5      	b.n	8027e80 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8027eb4:	2304      	movs	r3, #4
 8027eb6:	e7ea      	b.n	8027e8e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8027eb8:	b113      	cbz	r3, 8027ec0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8027eba:	ea10 0305 	ands.w	r3, r0, r5
 8027ebe:	d11c      	bne.n	8027efa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027ec0:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8027ec4:	f104 0620 	add.w	r6, r4, #32
 8027ec8:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8027ecc:	b98b      	cbnz	r3, 8027ef2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027ece:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8027ed2:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8027ed6:	4298      	cmp	r0, r3
 8027ed8:	d802      	bhi.n	8027ee0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027eda:	4630      	mov	r0, r6
 8027edc:	f7ec fde4 	bl	8014aa8 <_ZN8touchgfx7Outline6moveToEii>
 8027ee0:	2301      	movs	r3, #1
 8027ee2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8027ee6:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8027eea:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027eee:	4630      	mov	r0, r6
 8027ef0:	e7d4      	b.n	8027e9c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027ef2:	4630      	mov	r0, r6
 8027ef4:	f7ff fd04 	bl	8027900 <_ZN8touchgfx10Rasterizer6lineToEii>
 8027ef8:	e7f7      	b.n	8027eea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027efa:	461d      	mov	r5, r3
 8027efc:	e7d0      	b.n	8027ea0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027f00 <_ZN8touchgfx6CanvasD1Ev>:
 8027f00:	b510      	push	{r4, lr}
 8027f02:	4b04      	ldr	r3, [pc, #16]	; (8027f14 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027f04:	4604      	mov	r4, r0
 8027f06:	f840 3b20 	str.w	r3, [r0], #32
 8027f0a:	f7ec f8c7 	bl	801409c <_ZN8touchgfx7OutlineD1Ev>
 8027f0e:	4620      	mov	r0, r4
 8027f10:	bd10      	pop	{r4, pc}
 8027f12:	bf00      	nop
 8027f14:	0802fde8 	.word	0x0802fde8

08027f18 <_ZN8touchgfx6CanvasD0Ev>:
 8027f18:	b510      	push	{r4, lr}
 8027f1a:	4604      	mov	r4, r0
 8027f1c:	f7ff fff0 	bl	8027f00 <_ZN8touchgfx6CanvasD1Ev>
 8027f20:	4620      	mov	r0, r4
 8027f22:	2170      	movs	r1, #112	; 0x70
 8027f24:	f002 fd09 	bl	802a93a <_ZdlPvj>
 8027f28:	4620      	mov	r0, r4
 8027f2a:	bd10      	pop	{r4, pc}

08027f2c <_ZN8touchgfx6CircleD1Ev>:
 8027f2c:	4770      	bx	lr

08027f2e <_ZN8touchgfx6CircleD0Ev>:
 8027f2e:	b510      	push	{r4, lr}
 8027f30:	2148      	movs	r1, #72	; 0x48
 8027f32:	4604      	mov	r4, r0
 8027f34:	f002 fd01 	bl	802a93a <_ZdlPvj>
 8027f38:	4620      	mov	r0, r4
 8027f3a:	bd10      	pop	{r4, pc}

08027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8027f3c:	b508      	push	{r3, lr}
 8027f3e:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8027f42:	f7ea fbab 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027f46:	bd08      	pop	{r3, pc}

08027f48 <_ZN8touchgfx6CircleC1Ev>:
 8027f48:	b510      	push	{r4, lr}
 8027f4a:	4604      	mov	r4, r0
 8027f4c:	f7ea fa42 	bl	80123d4 <_ZN8touchgfx12CanvasWidgetC1Ev>
 8027f50:	4b08      	ldr	r3, [pc, #32]	; (8027f74 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8027f52:	6023      	str	r3, [r4, #0]
 8027f54:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 8027f58:	2300      	movs	r3, #0
 8027f5a:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8027f5e:	f24b 4205 	movw	r2, #46085	; 0xb405
 8027f62:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8027f66:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8027f6a:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8027f6e:	60a3      	str	r3, [r4, #8]
 8027f70:	4620      	mov	r0, r4
 8027f72:	bd10      	pop	{r4, pc}
 8027f74:	0802fdfc 	.word	0x0802fdfc

08027f78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 8027f78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027f7c:	428a      	cmp	r2, r1
 8027f7e:	4680      	mov	r8, r0
 8027f80:	4610      	mov	r0, r2
 8027f82:	4699      	mov	r9, r3
 8027f84:	bfa6      	itte	ge
 8027f86:	460a      	movge	r2, r1
 8027f88:	4603      	movge	r3, r0
 8027f8a:	460b      	movlt	r3, r1
 8027f8c:	1a99      	subs	r1, r3, r2
 8027f8e:	b085      	sub	sp, #20
 8027f90:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8027f94:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 8027f98:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8027f9a:	bfa4      	itt	ge
 8027f9c:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8027fa0:	2200      	movge	r2, #0
 8027fa2:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 8027fa6:	9300      	str	r3, [sp, #0]
 8027fa8:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 8027fac:	f102 0b01 	add.w	fp, r2, #1
 8027fb0:	2c00      	cmp	r4, #0
 8027fb2:	f040 80af 	bne.w	8028114 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 8027fb6:	4610      	mov	r0, r2
 8027fb8:	9201      	str	r2, [sp, #4]
 8027fba:	f7ea fb6f 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8027fbe:	a903      	add	r1, sp, #12
 8027fc0:	9003      	str	r0, [sp, #12]
 8027fc2:	4650      	mov	r0, sl
 8027fc4:	f7ea fa32 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027fc8:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8027fcc:	9a01      	ldr	r2, [sp, #4]
 8027fce:	4408      	add	r0, r1
 8027fd0:	f8d9 1000 	ldr.w	r1, [r9]
 8027fd4:	4281      	cmp	r1, r0
 8027fd6:	bfc8      	it	gt
 8027fd8:	f8c9 0000 	strgt.w	r0, [r9]
 8027fdc:	6839      	ldr	r1, [r7, #0]
 8027fde:	4288      	cmp	r0, r1
 8027fe0:	bfc8      	it	gt
 8027fe2:	6038      	strgt	r0, [r7, #0]
 8027fe4:	4610      	mov	r0, r2
 8027fe6:	f7ff ffa9 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8027fea:	a903      	add	r1, sp, #12
 8027fec:	9003      	str	r0, [sp, #12]
 8027fee:	4650      	mov	r0, sl
 8027ff0:	f7ea fa1c 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8027ff4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8027ff8:	1a10      	subs	r0, r2, r0
 8027ffa:	6832      	ldr	r2, [r6, #0]
 8027ffc:	4282      	cmp	r2, r0
 8027ffe:	bfc8      	it	gt
 8028000:	6030      	strgt	r0, [r6, #0]
 8028002:	682a      	ldr	r2, [r5, #0]
 8028004:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 8028008:	4290      	cmp	r0, r2
 802800a:	fb9b f2f1 	sdiv	r2, fp, r1
 802800e:	fb01 b212 	mls	r2, r1, r2, fp
 8028012:	eba1 0202 	sub.w	r2, r1, r2
 8028016:	bfc8      	it	gt
 8028018:	6028      	strgt	r0, [r5, #0]
 802801a:	fb92 f0f1 	sdiv	r0, r2, r1
 802801e:	fb01 2210 	mls	r2, r1, r0, r2
 8028022:	4493      	add	fp, r2
 8028024:	9b00      	ldr	r3, [sp, #0]
 8028026:	455b      	cmp	r3, fp
 8028028:	db2a      	blt.n	8028080 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802802a:	4658      	mov	r0, fp
 802802c:	f7ea fb36 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028030:	a903      	add	r1, sp, #12
 8028032:	9003      	str	r0, [sp, #12]
 8028034:	4650      	mov	r0, sl
 8028036:	f7ea f9f9 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802803a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802803e:	4410      	add	r0, r2
 8028040:	f8d9 2000 	ldr.w	r2, [r9]
 8028044:	4282      	cmp	r2, r0
 8028046:	bfc8      	it	gt
 8028048:	f8c9 0000 	strgt.w	r0, [r9]
 802804c:	683a      	ldr	r2, [r7, #0]
 802804e:	4290      	cmp	r0, r2
 8028050:	bfc8      	it	gt
 8028052:	6038      	strgt	r0, [r7, #0]
 8028054:	4658      	mov	r0, fp
 8028056:	f7ff ff71 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802805a:	a903      	add	r1, sp, #12
 802805c:	9003      	str	r0, [sp, #12]
 802805e:	4650      	mov	r0, sl
 8028060:	f7ea f9e4 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028064:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028068:	1a10      	subs	r0, r2, r0
 802806a:	6832      	ldr	r2, [r6, #0]
 802806c:	4282      	cmp	r2, r0
 802806e:	bfc8      	it	gt
 8028070:	6030      	strgt	r0, [r6, #0]
 8028072:	682a      	ldr	r2, [r5, #0]
 8028074:	4290      	cmp	r0, r2
 8028076:	bfc8      	it	gt
 8028078:	6028      	strgt	r0, [r5, #0]
 802807a:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802807e:	e7d1      	b.n	8028024 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8028080:	9b00      	ldr	r3, [sp, #0]
 8028082:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028086:	455b      	cmp	r3, fp
 8028088:	dd27      	ble.n	80280da <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802808a:	4618      	mov	r0, r3
 802808c:	f7ea fb06 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028090:	a903      	add	r1, sp, #12
 8028092:	9003      	str	r0, [sp, #12]
 8028094:	4650      	mov	r0, sl
 8028096:	f7ea f9c9 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802809a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802809e:	4410      	add	r0, r2
 80280a0:	f8d9 2000 	ldr.w	r2, [r9]
 80280a4:	4282      	cmp	r2, r0
 80280a6:	bfc8      	it	gt
 80280a8:	f8c9 0000 	strgt.w	r0, [r9]
 80280ac:	683a      	ldr	r2, [r7, #0]
 80280ae:	4290      	cmp	r0, r2
 80280b0:	bfc8      	it	gt
 80280b2:	6038      	strgt	r0, [r7, #0]
 80280b4:	9800      	ldr	r0, [sp, #0]
 80280b6:	f7ff ff41 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80280ba:	a903      	add	r1, sp, #12
 80280bc:	9003      	str	r0, [sp, #12]
 80280be:	4650      	mov	r0, sl
 80280c0:	f7ea f9b4 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80280c4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80280c8:	1a10      	subs	r0, r2, r0
 80280ca:	6832      	ldr	r2, [r6, #0]
 80280cc:	4282      	cmp	r2, r0
 80280ce:	bfc8      	it	gt
 80280d0:	6030      	strgt	r0, [r6, #0]
 80280d2:	682a      	ldr	r2, [r5, #0]
 80280d4:	4290      	cmp	r0, r2
 80280d6:	bfc8      	it	gt
 80280d8:	6028      	strgt	r0, [r5, #0]
 80280da:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80280de:	f8d9 1000 	ldr.w	r1, [r9]
 80280e2:	4291      	cmp	r1, r2
 80280e4:	bfc8      	it	gt
 80280e6:	f8c9 2000 	strgt.w	r2, [r9]
 80280ea:	683a      	ldr	r2, [r7, #0]
 80280ec:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80280f0:	429a      	cmp	r2, r3
 80280f2:	bfb8      	it	lt
 80280f4:	603b      	strlt	r3, [r7, #0]
 80280f6:	6832      	ldr	r2, [r6, #0]
 80280f8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80280fc:	429a      	cmp	r2, r3
 80280fe:	bfc8      	it	gt
 8028100:	6033      	strgt	r3, [r6, #0]
 8028102:	682a      	ldr	r2, [r5, #0]
 8028104:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8028108:	429a      	cmp	r2, r3
 802810a:	da00      	bge.n	802810e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802810c:	602b      	str	r3, [r5, #0]
 802810e:	b005      	add	sp, #20
 8028110:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028114:	2002      	movs	r0, #2
 8028116:	3401      	adds	r4, #1
 8028118:	fb94 f4f0 	sdiv	r4, r4, r0
 802811c:	4610      	mov	r0, r2
 802811e:	9201      	str	r2, [sp, #4]
 8028120:	f7ea fabc 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028124:	a903      	add	r1, sp, #12
 8028126:	9003      	str	r0, [sp, #12]
 8028128:	4650      	mov	r0, sl
 802812a:	f7ea f97f 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802812e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8028132:	9a01      	ldr	r2, [sp, #4]
 8028134:	4408      	add	r0, r1
 8028136:	f8d9 1000 	ldr.w	r1, [r9]
 802813a:	1b03      	subs	r3, r0, r4
 802813c:	4299      	cmp	r1, r3
 802813e:	bfc8      	it	gt
 8028140:	f8c9 3000 	strgt.w	r3, [r9]
 8028144:	6839      	ldr	r1, [r7, #0]
 8028146:	428b      	cmp	r3, r1
 8028148:	bfc8      	it	gt
 802814a:	603b      	strgt	r3, [r7, #0]
 802814c:	f8d9 1000 	ldr.w	r1, [r9]
 8028150:	4420      	add	r0, r4
 8028152:	4281      	cmp	r1, r0
 8028154:	bfc8      	it	gt
 8028156:	f8c9 0000 	strgt.w	r0, [r9]
 802815a:	6839      	ldr	r1, [r7, #0]
 802815c:	4288      	cmp	r0, r1
 802815e:	bfc8      	it	gt
 8028160:	6038      	strgt	r0, [r7, #0]
 8028162:	4610      	mov	r0, r2
 8028164:	f7ff feea 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028168:	a903      	add	r1, sp, #12
 802816a:	9003      	str	r0, [sp, #12]
 802816c:	4650      	mov	r0, sl
 802816e:	f7ea f95d 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028172:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028176:	1a10      	subs	r0, r2, r0
 8028178:	6832      	ldr	r2, [r6, #0]
 802817a:	1b01      	subs	r1, r0, r4
 802817c:	428a      	cmp	r2, r1
 802817e:	bfc8      	it	gt
 8028180:	6031      	strgt	r1, [r6, #0]
 8028182:	682a      	ldr	r2, [r5, #0]
 8028184:	4291      	cmp	r1, r2
 8028186:	bfc8      	it	gt
 8028188:	6029      	strgt	r1, [r5, #0]
 802818a:	6832      	ldr	r2, [r6, #0]
 802818c:	4420      	add	r0, r4
 802818e:	4282      	cmp	r2, r0
 8028190:	bfc8      	it	gt
 8028192:	6030      	strgt	r0, [r6, #0]
 8028194:	682a      	ldr	r2, [r5, #0]
 8028196:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802819a:	4290      	cmp	r0, r2
 802819c:	fb9b f2f1 	sdiv	r2, fp, r1
 80281a0:	fb01 b212 	mls	r2, r1, r2, fp
 80281a4:	eba1 0202 	sub.w	r2, r1, r2
 80281a8:	bfc8      	it	gt
 80281aa:	6028      	strgt	r0, [r5, #0]
 80281ac:	fb92 f0f1 	sdiv	r0, r2, r1
 80281b0:	fb01 2210 	mls	r2, r1, r0, r2
 80281b4:	4493      	add	fp, r2
 80281b6:	9b00      	ldr	r3, [sp, #0]
 80281b8:	455b      	cmp	r3, fp
 80281ba:	db40      	blt.n	802823e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80281bc:	4658      	mov	r0, fp
 80281be:	f7ea fa6d 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80281c2:	a903      	add	r1, sp, #12
 80281c4:	9003      	str	r0, [sp, #12]
 80281c6:	4650      	mov	r0, sl
 80281c8:	f7ea f930 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80281cc:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80281d0:	4410      	add	r0, r2
 80281d2:	f8d9 2000 	ldr.w	r2, [r9]
 80281d6:	1b01      	subs	r1, r0, r4
 80281d8:	428a      	cmp	r2, r1
 80281da:	bfc8      	it	gt
 80281dc:	f8c9 1000 	strgt.w	r1, [r9]
 80281e0:	683a      	ldr	r2, [r7, #0]
 80281e2:	4291      	cmp	r1, r2
 80281e4:	bfc8      	it	gt
 80281e6:	6039      	strgt	r1, [r7, #0]
 80281e8:	f8d9 2000 	ldr.w	r2, [r9]
 80281ec:	4420      	add	r0, r4
 80281ee:	4282      	cmp	r2, r0
 80281f0:	bfc8      	it	gt
 80281f2:	f8c9 0000 	strgt.w	r0, [r9]
 80281f6:	683a      	ldr	r2, [r7, #0]
 80281f8:	4290      	cmp	r0, r2
 80281fa:	bfc8      	it	gt
 80281fc:	6038      	strgt	r0, [r7, #0]
 80281fe:	4658      	mov	r0, fp
 8028200:	f7ff fe9c 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028204:	a903      	add	r1, sp, #12
 8028206:	9003      	str	r0, [sp, #12]
 8028208:	4650      	mov	r0, sl
 802820a:	f7ea f90f 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802820e:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8028212:	1a10      	subs	r0, r2, r0
 8028214:	6832      	ldr	r2, [r6, #0]
 8028216:	1b01      	subs	r1, r0, r4
 8028218:	428a      	cmp	r2, r1
 802821a:	bfc8      	it	gt
 802821c:	6031      	strgt	r1, [r6, #0]
 802821e:	682a      	ldr	r2, [r5, #0]
 8028220:	4291      	cmp	r1, r2
 8028222:	bfc8      	it	gt
 8028224:	6029      	strgt	r1, [r5, #0]
 8028226:	6832      	ldr	r2, [r6, #0]
 8028228:	4420      	add	r0, r4
 802822a:	4282      	cmp	r2, r0
 802822c:	bfc8      	it	gt
 802822e:	6030      	strgt	r0, [r6, #0]
 8028230:	682a      	ldr	r2, [r5, #0]
 8028232:	4290      	cmp	r0, r2
 8028234:	bfc8      	it	gt
 8028236:	6028      	strgt	r0, [r5, #0]
 8028238:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 802823c:	e7bb      	b.n	80281b6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 802823e:	9b00      	ldr	r3, [sp, #0]
 8028240:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8028244:	455b      	cmp	r3, fp
 8028246:	f77f af62 	ble.w	802810e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802824a:	4618      	mov	r0, r3
 802824c:	f7ea fa26 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028250:	a903      	add	r1, sp, #12
 8028252:	9003      	str	r0, [sp, #12]
 8028254:	4650      	mov	r0, sl
 8028256:	f7ea f8e9 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802825a:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 802825e:	4410      	add	r0, r2
 8028260:	f8d9 2000 	ldr.w	r2, [r9]
 8028264:	1b01      	subs	r1, r0, r4
 8028266:	428a      	cmp	r2, r1
 8028268:	bfc8      	it	gt
 802826a:	f8c9 1000 	strgt.w	r1, [r9]
 802826e:	683a      	ldr	r2, [r7, #0]
 8028270:	4291      	cmp	r1, r2
 8028272:	bfc8      	it	gt
 8028274:	6039      	strgt	r1, [r7, #0]
 8028276:	f8d9 2000 	ldr.w	r2, [r9]
 802827a:	4420      	add	r0, r4
 802827c:	4282      	cmp	r2, r0
 802827e:	bfc8      	it	gt
 8028280:	f8c9 0000 	strgt.w	r0, [r9]
 8028284:	683b      	ldr	r3, [r7, #0]
 8028286:	4298      	cmp	r0, r3
 8028288:	bfc8      	it	gt
 802828a:	6038      	strgt	r0, [r7, #0]
 802828c:	9800      	ldr	r0, [sp, #0]
 802828e:	f7ff fe55 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028292:	a903      	add	r1, sp, #12
 8028294:	9003      	str	r0, [sp, #12]
 8028296:	4650      	mov	r0, sl
 8028298:	f7ea f8c8 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802829c:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80282a0:	6832      	ldr	r2, [r6, #0]
 80282a2:	1a18      	subs	r0, r3, r0
 80282a4:	1b03      	subs	r3, r0, r4
 80282a6:	429a      	cmp	r2, r3
 80282a8:	bfc8      	it	gt
 80282aa:	6033      	strgt	r3, [r6, #0]
 80282ac:	682a      	ldr	r2, [r5, #0]
 80282ae:	4293      	cmp	r3, r2
 80282b0:	bfc8      	it	gt
 80282b2:	602b      	strgt	r3, [r5, #0]
 80282b4:	6833      	ldr	r3, [r6, #0]
 80282b6:	4404      	add	r4, r0
 80282b8:	42a3      	cmp	r3, r4
 80282ba:	bfc8      	it	gt
 80282bc:	6034      	strgt	r4, [r6, #0]
 80282be:	682b      	ldr	r3, [r5, #0]
 80282c0:	429c      	cmp	r4, r3
 80282c2:	bfc8      	it	gt
 80282c4:	602c      	strgt	r4, [r5, #0]
 80282c6:	e722      	b.n	802810e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080282c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80282c8:	b530      	push	{r4, r5, lr}
 80282ca:	4604      	mov	r4, r0
 80282cc:	4608      	mov	r0, r1
 80282ce:	4611      	mov	r1, r2
 80282d0:	461a      	mov	r2, r3
 80282d2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80282d6:	b089      	sub	sp, #36	; 0x24
 80282d8:	015b      	lsls	r3, r3, #5
 80282da:	9304      	str	r3, [sp, #16]
 80282dc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80282e0:	2500      	movs	r5, #0
 80282e2:	015b      	lsls	r3, r3, #5
 80282e4:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80282e8:	ab07      	add	r3, sp, #28
 80282ea:	9302      	str	r3, [sp, #8]
 80282ec:	ab06      	add	r3, sp, #24
 80282ee:	9301      	str	r3, [sp, #4]
 80282f0:	ab05      	add	r3, sp, #20
 80282f2:	9300      	str	r3, [sp, #0]
 80282f4:	ab04      	add	r3, sp, #16
 80282f6:	9505      	str	r5, [sp, #20]
 80282f8:	f7ff fe3e 	bl	8027f78 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80282fc:	2520      	movs	r5, #32
 80282fe:	9a04      	ldr	r2, [sp, #16]
 8028300:	9805      	ldr	r0, [sp, #20]
 8028302:	fb92 f2f5 	sdiv	r2, r2, r5
 8028306:	fb90 f0f5 	sdiv	r0, r0, r5
 802830a:	b292      	uxth	r2, r2
 802830c:	3002      	adds	r0, #2
 802830e:	1a80      	subs	r0, r0, r2
 8028310:	9b06      	ldr	r3, [sp, #24]
 8028312:	9907      	ldr	r1, [sp, #28]
 8028314:	fb93 f3f5 	sdiv	r3, r3, r5
 8028318:	fb91 f1f5 	sdiv	r1, r1, r5
 802831c:	b29b      	uxth	r3, r3
 802831e:	3102      	adds	r1, #2
 8028320:	1ac9      	subs	r1, r1, r3
 8028322:	3a01      	subs	r2, #1
 8028324:	3b01      	subs	r3, #1
 8028326:	80a0      	strh	r0, [r4, #4]
 8028328:	4620      	mov	r0, r4
 802832a:	8022      	strh	r2, [r4, #0]
 802832c:	8063      	strh	r3, [r4, #2]
 802832e:	80e1      	strh	r1, [r4, #6]
 8028330:	b009      	add	sp, #36	; 0x24
 8028332:	bd30      	pop	{r4, r5, pc}

08028334 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8028334:	b510      	push	{r4, lr}
 8028336:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802833a:	4604      	mov	r4, r0
 802833c:	f7ff ffc4 	bl	80282c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028340:	4620      	mov	r0, r4
 8028342:	bd10      	pop	{r4, pc}

08028344 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8028344:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028346:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802834a:	4606      	mov	r6, r0
 802834c:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8028350:	6813      	ldr	r3, [r2, #0]
 8028352:	42a5      	cmp	r5, r4
 8028354:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8028358:	da2b      	bge.n	80283b2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802835a:	42a3      	cmp	r3, r4
 802835c:	dd14      	ble.n	8028388 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 802835e:	b168      	cbz	r0, 802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8028360:	4267      	negs	r7, r4
 8028362:	fb97 f2f0 	sdiv	r2, r7, r0
 8028366:	fb00 7212 	mls	r2, r0, r2, r7
 802836a:	1a82      	subs	r2, r0, r2
 802836c:	fb92 f7f0 	sdiv	r7, r2, r0
 8028370:	fb00 2017 	mls	r0, r0, r7, r2
 8028374:	1a24      	subs	r4, r4, r0
 8028376:	42ac      	cmp	r4, r5
 8028378:	bfb8      	it	lt
 802837a:	462c      	movlt	r4, r5
 802837c:	4630      	mov	r0, r6
 802837e:	4622      	mov	r2, r4
 8028380:	f7ff ffa2 	bl	80282c8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8028384:	4630      	mov	r0, r6
 8028386:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028388:	42ab      	cmp	r3, r5
 802838a:	dd0e      	ble.n	80283aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802838c:	b168      	cbz	r0, 80283aa <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 802838e:	425f      	negs	r7, r3
 8028390:	fb97 f2f0 	sdiv	r2, r7, r0
 8028394:	fb00 7212 	mls	r2, r0, r2, r7
 8028398:	1a82      	subs	r2, r0, r2
 802839a:	fb92 f7f0 	sdiv	r7, r2, r0
 802839e:	fb00 2017 	mls	r0, r0, r7, r2
 80283a2:	1a1b      	subs	r3, r3, r0
 80283a4:	42ab      	cmp	r3, r5
 80283a6:	bfb8      	it	lt
 80283a8:	462b      	movlt	r3, r5
 80283aa:	4622      	mov	r2, r4
 80283ac:	461c      	mov	r4, r3
 80283ae:	4613      	mov	r3, r2
 80283b0:	e7e4      	b.n	802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80283b2:	42a3      	cmp	r3, r4
 80283b4:	da10      	bge.n	80283d8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80283b6:	b148      	cbz	r0, 80283cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80283b8:	fb94 f2f0 	sdiv	r2, r4, r0
 80283bc:	fb00 4212 	mls	r2, r0, r2, r4
 80283c0:	1a82      	subs	r2, r0, r2
 80283c2:	fb92 f7f0 	sdiv	r7, r2, r0
 80283c6:	fb00 2017 	mls	r0, r0, r7, r2
 80283ca:	4404      	add	r4, r0
 80283cc:	42a5      	cmp	r5, r4
 80283ce:	bfa8      	it	ge
 80283d0:	4625      	movge	r5, r4
 80283d2:	461c      	mov	r4, r3
 80283d4:	462b      	mov	r3, r5
 80283d6:	e7d1      	b.n	802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80283d8:	42ab      	cmp	r3, r5
 80283da:	dacf      	bge.n	802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80283dc:	2800      	cmp	r0, #0
 80283de:	d0cd      	beq.n	802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80283e0:	fb93 f2f0 	sdiv	r2, r3, r0
 80283e4:	fb00 3212 	mls	r2, r0, r2, r3
 80283e8:	1a82      	subs	r2, r0, r2
 80283ea:	fb92 f7f0 	sdiv	r7, r2, r0
 80283ee:	fb00 2017 	mls	r0, r0, r7, r2
 80283f2:	4403      	add	r3, r0
 80283f4:	42ab      	cmp	r3, r5
 80283f6:	bfa8      	it	ge
 80283f8:	462b      	movge	r3, r5
 80283fa:	e7bf      	b.n	802837c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080283fc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80283fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028400:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 8028404:	42ae      	cmp	r6, r5
 8028406:	bfa2      	ittt	ge
 8028408:	4633      	movge	r3, r6
 802840a:	462e      	movge	r6, r5
 802840c:	461d      	movge	r5, r3
 802840e:	1bab      	subs	r3, r5, r6
 8028410:	468b      	mov	fp, r1
 8028412:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8028414:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 8028418:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 802841c:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028420:	f04f 0220 	mov.w	r2, #32
 8028424:	b0ab      	sub	sp, #172	; 0xac
 8028426:	4604      	mov	r4, r0
 8028428:	bfa4      	itt	ge
 802842a:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 802842e:	2600      	movge	r6, #0
 8028430:	fb99 f9f2 	sdiv	r9, r9, r2
 8028434:	fb9a faf2 	sdiv	sl, sl, r2
 8028438:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802843a:	2900      	cmp	r1, #0
 802843c:	f000 80f5 	beq.w	802862a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8028440:	f9bb 0000 	ldrsh.w	r0, [fp]
 8028444:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 8028448:	eba9 0700 	sub.w	r7, r9, r0
 802844c:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8028450:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8028454:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 8028458:	ebaa 0802 	sub.w	r8, sl, r2
 802845c:	4407      	add	r7, r0
 802845e:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8028462:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8028466:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802846a:	b23f      	sxth	r7, r7
 802846c:	4490      	add	r8, r2
 802846e:	eba9 0707 	sub.w	r7, r9, r7
 8028472:	fa0f f888 	sxth.w	r8, r8
 8028476:	ebaa 0808 	sub.w	r8, sl, r8
 802847a:	2f00      	cmp	r7, #0
 802847c:	bfb8      	it	lt
 802847e:	427f      	neglt	r7, r7
 8028480:	f1b8 0f00 	cmp.w	r8, #0
 8028484:	bfb8      	it	lt
 8028486:	f1c8 0800 	rsblt	r8, r8, #0
 802848a:	45bc      	cmp	ip, r7
 802848c:	bfcc      	ite	gt
 802848e:	f10c 0701 	addgt.w	r7, ip, #1
 8028492:	3701      	addle	r7, #1
 8028494:	4540      	cmp	r0, r8
 8028496:	bfc8      	it	gt
 8028498:	f100 0801 	addgt.w	r8, r0, #1
 802849c:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 80284a0:	f100 0001 	add.w	r0, r0, #1
 80284a4:	ea4f 0060 	mov.w	r0, r0, asr #1
 80284a8:	f04f 0202 	mov.w	r2, #2
 80284ac:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80284b0:	fb91 f1f2 	sdiv	r1, r1, r2
 80284b4:	eba3 0301 	sub.w	r3, r3, r1
 80284b8:	bfd8      	it	le
 80284ba:	f108 0801 	addle.w	r8, r8, #1
 80284be:	9201      	str	r2, [sp, #4]
 80284c0:	930d      	str	r3, [sp, #52]	; 0x34
 80284c2:	f7ea f8cb 	bl	801265c <_ZN8touchgfx7CWRUtil4sineEi>
 80284c6:	a92a      	add	r1, sp, #168	; 0xa8
 80284c8:	fb08 f808 	mul.w	r8, r8, r8
 80284cc:	f841 0d70 	str.w	r0, [r1, #-112]!
 80284d0:	a80d      	add	r0, sp, #52	; 0x34
 80284d2:	f7e9 ffab 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80284d6:	fb07 8707 	mla	r7, r7, r7, r8
 80284da:	f04f 0c20 	mov.w	ip, #32
 80284de:	fb90 f0fc 	sdiv	r0, r0, ip
 80284e2:	4340      	muls	r0, r0
 80284e4:	4287      	cmp	r7, r0
 80284e6:	9a01      	ldr	r2, [sp, #4]
 80284e8:	da04      	bge.n	80284f4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80284ea:	2401      	movs	r4, #1
 80284ec:	4620      	mov	r0, r4
 80284ee:	b02b      	add	sp, #172	; 0xac
 80284f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80284f4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80284f6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80284f8:	fb91 f3f2 	sdiv	r3, r1, r2
 80284fc:	4403      	add	r3, r0
 80284fe:	fb93 f3fc 	sdiv	r3, r3, ip
 8028502:	f9bb 1000 	ldrsh.w	r1, [fp]
 8028506:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 802850a:	440a      	add	r2, r1
 802850c:	b212      	sxth	r2, r2
 802850e:	454a      	cmp	r2, r9
 8028510:	bfa8      	it	ge
 8028512:	464a      	movge	r2, r9
 8028514:	428a      	cmp	r2, r1
 8028516:	bfac      	ite	ge
 8028518:	eba9 0902 	subge.w	r9, r9, r2
 802851c:	eba9 0901 	sublt.w	r9, r9, r1
 8028520:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8028524:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8028528:	440a      	add	r2, r1
 802852a:	b212      	sxth	r2, r2
 802852c:	4552      	cmp	r2, sl
 802852e:	bfa8      	it	ge
 8028530:	4652      	movge	r2, sl
 8028532:	428a      	cmp	r2, r1
 8028534:	bfac      	ite	ge
 8028536:	ebaa 0a02 	subge.w	sl, sl, r2
 802853a:	ebaa 0a01 	sublt.w	sl, sl, r1
 802853e:	3301      	adds	r3, #1
 8028540:	fb0a fa0a 	mul.w	sl, sl, sl
 8028544:	fb09 a909 	mla	r9, r9, r9, sl
 8028548:	435b      	muls	r3, r3
 802854a:	4599      	cmp	r9, r3
 802854c:	dccd      	bgt.n	80284ea <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 802854e:	465a      	mov	r2, fp
 8028550:	4621      	mov	r1, r4
 8028552:	a80e      	add	r0, sp, #56	; 0x38
 8028554:	f7ff faae 	bl	8027ab4 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8028558:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802855a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802855c:	9209      	str	r2, [sp, #36]	; 0x24
 802855e:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8028562:	930a      	str	r3, [sp, #40]	; 0x28
 8028564:	dd07      	ble.n	8028576 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 8028566:	2102      	movs	r1, #2
 8028568:	fb93 f3f1 	sdiv	r3, r3, r1
 802856c:	4413      	add	r3, r2
 802856e:	930a      	str	r3, [sp, #40]	; 0x28
 8028570:	fb93 f3f1 	sdiv	r3, r3, r1
 8028574:	9309      	str	r3, [sp, #36]	; 0x24
 8028576:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802857a:	4630      	mov	r0, r6
 802857c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8028580:	930b      	str	r3, [sp, #44]	; 0x2c
 8028582:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 8028586:	f7ea f889 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802858a:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 802858e:	f04f 0a02 	mov.w	sl, #2
 8028592:	f849 0d74 	str.w	r0, [r9, #-116]!
 8028596:	a80b      	add	r0, sp, #44	; 0x2c
 8028598:	4649      	mov	r1, r9
 802859a:	f7e9 ff47 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802859e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80285a0:	fb90 f0fa 	sdiv	r0, r0, sl
 80285a4:	eb00 0b03 	add.w	fp, r0, r3
 80285a8:	4630      	mov	r0, r6
 80285aa:	f7ff fcc7 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80285ae:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80285b2:	017f      	lsls	r7, r7, #5
 80285b4:	f848 0d78 	str.w	r0, [r8, #-120]!
 80285b8:	a80b      	add	r0, sp, #44	; 0x2c
 80285ba:	4641      	mov	r1, r8
 80285bc:	f7e9 ff36 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285c0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80285c2:	fb90 f0fa 	sdiv	r0, r0, sl
 80285c6:	4659      	mov	r1, fp
 80285c8:	1a12      	subs	r2, r2, r0
 80285ca:	a80e      	add	r0, sp, #56	; 0x38
 80285cc:	f7ff fbf2 	bl	8027db4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80285d0:	f106 0a20 	add.w	sl, r6, #32
 80285d4:	bb67      	cbnz	r7, 8028630 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80285d6:	46b3      	mov	fp, r6
 80285d8:	45aa      	cmp	sl, r5
 80285da:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80285dc:	dc33      	bgt.n	8028646 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80285de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80285e0:	4650      	mov	r0, sl
 80285e2:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80285e6:	920b      	str	r2, [sp, #44]	; 0x2c
 80285e8:	f7ea f858 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80285ec:	4641      	mov	r1, r8
 80285ee:	900c      	str	r0, [sp, #48]	; 0x30
 80285f0:	a80b      	add	r0, sp, #44	; 0x2c
 80285f2:	f7e9 ff1b 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80285f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80285f8:	2302      	movs	r3, #2
 80285fa:	fb90 f0f3 	sdiv	r0, r0, r3
 80285fe:	eb00 0b02 	add.w	fp, r0, r2
 8028602:	4650      	mov	r0, sl
 8028604:	f7ff fc9a 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028608:	4649      	mov	r1, r9
 802860a:	900d      	str	r0, [sp, #52]	; 0x34
 802860c:	a80b      	add	r0, sp, #44	; 0x2c
 802860e:	f7e9 ff0d 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028612:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028614:	2302      	movs	r3, #2
 8028616:	4659      	mov	r1, fp
 8028618:	fb90 f0f3 	sdiv	r0, r0, r3
 802861c:	1a12      	subs	r2, r2, r0
 802861e:	a80e      	add	r0, sp, #56	; 0x38
 8028620:	46d3      	mov	fp, sl
 8028622:	f7ff fc14 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028626:	44ba      	add	sl, r7
 8028628:	e7d6      	b.n	80285d8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 802862a:	fb93 f3f2 	sdiv	r3, r3, r2
 802862e:	e768      	b.n	8028502 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8028630:	fb9a f2f7 	sdiv	r2, sl, r7
 8028634:	fb07 a212 	mls	r2, r7, r2, sl
 8028638:	1aba      	subs	r2, r7, r2
 802863a:	fb92 f1f7 	sdiv	r1, r2, r7
 802863e:	fb07 2211 	mls	r2, r7, r1, r2
 8028642:	4492      	add	sl, r2
 8028644:	e7c7      	b.n	80285d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8028646:	45ab      	cmp	fp, r5
 8028648:	da23      	bge.n	8028692 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 802864a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802864c:	4628      	mov	r0, r5
 802864e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8028652:	920b      	str	r2, [sp, #44]	; 0x2c
 8028654:	f7ea f822 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028658:	4641      	mov	r1, r8
 802865a:	900c      	str	r0, [sp, #48]	; 0x30
 802865c:	a80b      	add	r0, sp, #44	; 0x2c
 802865e:	f7e9 fee5 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028662:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028664:	f04f 0a02 	mov.w	sl, #2
 8028668:	fb90 f0fa 	sdiv	r0, r0, sl
 802866c:	4403      	add	r3, r0
 802866e:	4628      	mov	r0, r5
 8028670:	9301      	str	r3, [sp, #4]
 8028672:	f7ff fc63 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028676:	4649      	mov	r1, r9
 8028678:	900d      	str	r0, [sp, #52]	; 0x34
 802867a:	a80b      	add	r0, sp, #44	; 0x2c
 802867c:	f7e9 fed6 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028680:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028682:	9b01      	ldr	r3, [sp, #4]
 8028684:	fb90 f0fa 	sdiv	r0, r0, sl
 8028688:	4619      	mov	r1, r3
 802868a:	1a12      	subs	r2, r2, r0
 802868c:	a80e      	add	r0, sp, #56	; 0x38
 802868e:	f7ff fbde 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028692:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8028694:	b99b      	cbnz	r3, 80286be <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8028696:	1bad      	subs	r5, r5, r6
 8028698:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 802869c:	da04      	bge.n	80286a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802869e:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 80286a2:	a80e      	add	r0, sp, #56	; 0x38
 80286a4:	f7ff fbd3 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80286a8:	21ff      	movs	r1, #255	; 0xff
 80286aa:	a80e      	add	r0, sp, #56	; 0x38
 80286ac:	f7ff fabe 	bl	8027c2c <_ZN8touchgfx6Canvas6renderEh>
 80286b0:	4604      	mov	r4, r0
 80286b2:	4b8a      	ldr	r3, [pc, #552]	; (80288dc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 80286b4:	930e      	str	r3, [sp, #56]	; 0x38
 80286b6:	a816      	add	r0, sp, #88	; 0x58
 80286b8:	f7eb fcf0 	bl	801409c <_ZN8touchgfx7OutlineD1Ev>
 80286bc:	e716      	b.n	80284ec <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 80286be:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 80286c2:	429a      	cmp	r2, r3
 80286c4:	f0c0 8107 	bcc.w	80288d6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 80286c8:	1bab      	subs	r3, r5, r6
 80286ca:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 80286ce:	9301      	str	r3, [sp, #4]
 80286d0:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 80286d4:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 80286d8:	da43      	bge.n	8028762 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 80286da:	4628      	mov	r0, r5
 80286dc:	f7e9 ffde 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80286e0:	4649      	mov	r1, r9
 80286e2:	900d      	str	r0, [sp, #52]	; 0x34
 80286e4:	a809      	add	r0, sp, #36	; 0x24
 80286e6:	f7e9 fea1 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80286ea:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80286ec:	18c3      	adds	r3, r0, r3
 80286ee:	4628      	mov	r0, r5
 80286f0:	9303      	str	r3, [sp, #12]
 80286f2:	f7ff fc23 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80286f6:	4649      	mov	r1, r9
 80286f8:	900d      	str	r0, [sp, #52]	; 0x34
 80286fa:	a809      	add	r0, sp, #36	; 0x24
 80286fc:	f7e9 fe96 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028700:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8028702:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8028706:	1a1b      	subs	r3, r3, r0
 8028708:	9302      	str	r3, [sp, #8]
 802870a:	9204      	str	r2, [sp, #16]
 802870c:	eb0a 0305 	add.w	r3, sl, r5
 8028710:	9a04      	ldr	r2, [sp, #16]
 8028712:	4293      	cmp	r3, r2
 8028714:	da25      	bge.n	8028762 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8028716:	4618      	mov	r0, r3
 8028718:	9306      	str	r3, [sp, #24]
 802871a:	f7e9 ffbf 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802871e:	4649      	mov	r1, r9
 8028720:	900d      	str	r0, [sp, #52]	; 0x34
 8028722:	a80a      	add	r0, sp, #40	; 0x28
 8028724:	f7e9 fe82 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028728:	9b03      	ldr	r3, [sp, #12]
 802872a:	2202      	movs	r2, #2
 802872c:	fb90 f0f2 	sdiv	r0, r0, r2
 8028730:	18c3      	adds	r3, r0, r3
 8028732:	9305      	str	r3, [sp, #20]
 8028734:	9b06      	ldr	r3, [sp, #24]
 8028736:	9207      	str	r2, [sp, #28]
 8028738:	4618      	mov	r0, r3
 802873a:	f7ff fbff 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802873e:	a92a      	add	r1, sp, #168	; 0xa8
 8028740:	f841 0d78 	str.w	r0, [r1, #-120]!
 8028744:	a80a      	add	r0, sp, #40	; 0x28
 8028746:	f7e9 fe71 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802874a:	9b02      	ldr	r3, [sp, #8]
 802874c:	9a07      	ldr	r2, [sp, #28]
 802874e:	9905      	ldr	r1, [sp, #20]
 8028750:	fb90 f2f2 	sdiv	r2, r0, r2
 8028754:	a80e      	add	r0, sp, #56	; 0x38
 8028756:	1a9a      	subs	r2, r3, r2
 8028758:	f7ff fb79 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 802875c:	9b06      	ldr	r3, [sp, #24]
 802875e:	4453      	add	r3, sl
 8028760:	e7d6      	b.n	8028710 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8028762:	45ab      	cmp	fp, r5
 8028764:	da25      	bge.n	80287b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8028766:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802876a:	4628      	mov	r0, r5
 802876c:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028770:	930b      	str	r3, [sp, #44]	; 0x2c
 8028772:	f7e9 ff93 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028776:	4641      	mov	r1, r8
 8028778:	900c      	str	r0, [sp, #48]	; 0x30
 802877a:	a80b      	add	r0, sp, #44	; 0x2c
 802877c:	f7e9 fe56 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028780:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028782:	2202      	movs	r2, #2
 8028784:	fb90 f0f2 	sdiv	r0, r0, r2
 8028788:	eb00 0903 	add.w	r9, r0, r3
 802878c:	4628      	mov	r0, r5
 802878e:	9202      	str	r2, [sp, #8]
 8028790:	f7ff fbd4 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028794:	a92a      	add	r1, sp, #168	; 0xa8
 8028796:	f841 0d74 	str.w	r0, [r1, #-116]!
 802879a:	a80b      	add	r0, sp, #44	; 0x2c
 802879c:	f7e9 fe46 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287a0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80287a2:	9a02      	ldr	r2, [sp, #8]
 80287a4:	fb90 f2f2 	sdiv	r2, r0, r2
 80287a8:	4649      	mov	r1, r9
 80287aa:	1a9a      	subs	r2, r3, r2
 80287ac:	a80e      	add	r0, sp, #56	; 0x38
 80287ae:	f7ff fb4e 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80287b2:	46d9      	mov	r9, fp
 80287b4:	2502      	movs	r5, #2
 80287b6:	45b1      	cmp	r9, r6
 80287b8:	db25      	blt.n	8028806 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 80287ba:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80287be:	4648      	mov	r0, r9
 80287c0:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 80287c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80287c6:	f7e9 ff69 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80287ca:	4641      	mov	r1, r8
 80287cc:	900c      	str	r0, [sp, #48]	; 0x30
 80287ce:	a80b      	add	r0, sp, #44	; 0x2c
 80287d0:	f7e9 fe2c 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80287d6:	fb90 f0f5 	sdiv	r0, r0, r5
 80287da:	eb00 0b03 	add.w	fp, r0, r3
 80287de:	4648      	mov	r0, r9
 80287e0:	f7ff fbac 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80287e4:	a90d      	add	r1, sp, #52	; 0x34
 80287e6:	900d      	str	r0, [sp, #52]	; 0x34
 80287e8:	a80b      	add	r0, sp, #44	; 0x2c
 80287ea:	f7e9 fe1f 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80287ee:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80287f0:	fb90 f0f5 	sdiv	r0, r0, r5
 80287f4:	4659      	mov	r1, fp
 80287f6:	1a12      	subs	r2, r2, r0
 80287f8:	a80e      	add	r0, sp, #56	; 0x38
 80287fa:	46cb      	mov	fp, r9
 80287fc:	f7ff fb27 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028800:	eba9 0907 	sub.w	r9, r9, r7
 8028804:	e7d7      	b.n	80287b6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8028806:	455e      	cmp	r6, fp
 8028808:	da22      	bge.n	8028850 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 802880a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802880e:	4630      	mov	r0, r6
 8028810:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8028814:	930b      	str	r3, [sp, #44]	; 0x2c
 8028816:	f7e9 ff41 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802881a:	4641      	mov	r1, r8
 802881c:	900c      	str	r0, [sp, #48]	; 0x30
 802881e:	a80b      	add	r0, sp, #44	; 0x2c
 8028820:	f7e9 fe04 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028824:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8028826:	2502      	movs	r5, #2
 8028828:	fb90 f0f5 	sdiv	r0, r0, r5
 802882c:	4407      	add	r7, r0
 802882e:	4630      	mov	r0, r6
 8028830:	f7ff fb84 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8028834:	a92a      	add	r1, sp, #168	; 0xa8
 8028836:	f841 0d74 	str.w	r0, [r1, #-116]!
 802883a:	a80b      	add	r0, sp, #44	; 0x2c
 802883c:	f7e9 fdf6 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028840:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8028842:	fb90 f0f5 	sdiv	r0, r0, r5
 8028846:	4639      	mov	r1, r7
 8028848:	1a12      	subs	r2, r2, r0
 802884a:	a80e      	add	r0, sp, #56	; 0x38
 802884c:	f7ff faff 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8028850:	9b01      	ldr	r3, [sp, #4]
 8028852:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8028856:	f6bf af27 	bge.w	80286a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802885a:	4630      	mov	r0, r6
 802885c:	f7e9 ff1e 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8028860:	ad2a      	add	r5, sp, #168	; 0xa8
 8028862:	f04f 0b02 	mov.w	fp, #2
 8028866:	f845 0d74 	str.w	r0, [r5, #-116]!
 802886a:	a809      	add	r0, sp, #36	; 0x24
 802886c:	4629      	mov	r1, r5
 802886e:	f7e9 fddd 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028872:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8028874:	eb00 0903 	add.w	r9, r0, r3
 8028878:	4630      	mov	r0, r6
 802887a:	f7ff fb5f 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802887e:	4629      	mov	r1, r5
 8028880:	900d      	str	r0, [sp, #52]	; 0x34
 8028882:	a809      	add	r0, sp, #36	; 0x24
 8028884:	f7e9 fdd2 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8028888:	6b23      	ldr	r3, [r4, #48]	; 0x30
 802888a:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 802888e:	eba3 0800 	sub.w	r8, r3, r0
 8028892:	4454      	add	r4, sl
 8028894:	42a6      	cmp	r6, r4
 8028896:	f77f af07 	ble.w	80286a8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 802889a:	4620      	mov	r0, r4
 802889c:	f7e9 fefe 	bl	801269c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80288a0:	4629      	mov	r1, r5
 80288a2:	900d      	str	r0, [sp, #52]	; 0x34
 80288a4:	a80a      	add	r0, sp, #40	; 0x28
 80288a6:	f7e9 fdc1 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80288aa:	fb90 f0fb 	sdiv	r0, r0, fp
 80288ae:	eb00 0709 	add.w	r7, r0, r9
 80288b2:	4620      	mov	r0, r4
 80288b4:	f7ff fb42 	bl	8027f3c <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80288b8:	a90c      	add	r1, sp, #48	; 0x30
 80288ba:	900c      	str	r0, [sp, #48]	; 0x30
 80288bc:	a80a      	add	r0, sp, #40	; 0x28
 80288be:	f7e9 fdb5 	bl	801242c <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80288c2:	4639      	mov	r1, r7
 80288c4:	fb90 f2fb 	sdiv	r2, r0, fp
 80288c8:	a80e      	add	r0, sp, #56	; 0x38
 80288ca:	eba8 0202 	sub.w	r2, r8, r2
 80288ce:	f7ff fabe 	bl	8027e4e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80288d2:	4454      	add	r4, sl
 80288d4:	e7de      	b.n	8028894 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 80288d6:	2400      	movs	r4, #0
 80288d8:	e6eb      	b.n	80286b2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 80288da:	bf00      	nop
 80288dc:	0802fde8 	.word	0x0802fde8

080288e0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80288e0:	b570      	push	{r4, r5, r6, lr}
 80288e2:	790b      	ldrb	r3, [r1, #4]
 80288e4:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80288e8:	2b00      	cmp	r3, #0
 80288ea:	bf0c      	ite	eq
 80288ec:	2301      	moveq	r3, #1
 80288ee:	2300      	movne	r3, #0
 80288f0:	4604      	mov	r4, r0
 80288f2:	460e      	mov	r6, r1
 80288f4:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80288f8:	d109      	bne.n	802890e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80288fa:	b14d      	cbz	r5, 8028910 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80288fc:	7933      	ldrb	r3, [r6, #4]
 80288fe:	2b01      	cmp	r3, #1
 8028900:	d10c      	bne.n	802891c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028902:	6823      	ldr	r3, [r4, #0]
 8028904:	4620      	mov	r0, r4
 8028906:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8028908:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802890c:	4718      	bx	r3
 802890e:	b12d      	cbz	r5, 802891c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8028910:	6823      	ldr	r3, [r4, #0]
 8028912:	4620      	mov	r0, r4
 8028914:	695b      	ldr	r3, [r3, #20]
 8028916:	4798      	blx	r3
 8028918:	2d00      	cmp	r5, #0
 802891a:	d1ef      	bne.n	80288fc <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 802891c:	bd70      	pop	{r4, r5, r6, pc}

0802891e <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 802891e:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8028922:	4770      	bx	lr

08028924 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8028924:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8028928:	4770      	bx	lr

0802892a <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 802892a:	6802      	ldr	r2, [r0, #0]
 802892c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028930:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028932:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028936:	4710      	bx	r2

08028938 <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8028938:	6802      	ldr	r2, [r0, #0]
 802893a:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 802893e:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028940:	eef0 0a40 	vmov.f32	s1, s0
 8028944:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028948:	4710      	bx	r2

0802894a <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 802894a:	6802      	ldr	r2, [r0, #0]
 802894c:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028950:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8028952:	eeb0 1a40 	vmov.f32	s2, s0
 8028956:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802895a:	4710      	bx	r2

0802895c <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 802895c:	6802      	ldr	r2, [r0, #0]
 802895e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028962:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028964:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028968:	4710      	bx	r2

0802896a <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 802896a:	6802      	ldr	r2, [r0, #0]
 802896c:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8028970:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028972:	eef0 0a40 	vmov.f32	s1, s0
 8028976:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802897a:	4710      	bx	r2

0802897c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 802897c:	6802      	ldr	r2, [r0, #0]
 802897e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8028982:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8028984:	eeb0 1a40 	vmov.f32	s2, s0
 8028988:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 802898c:	4710      	bx	r2

0802898e <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 802898e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8028992:	4770      	bx	lr

08028994 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8028994:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8028998:	4770      	bx	lr

0802899a <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 802899a:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 802899e:	4770      	bx	lr

080289a0 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 80289a0:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 80289a4:	4770      	bx	lr

080289a6 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 80289a6:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 80289aa:	4770      	bx	lr

080289ac <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 80289ac:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 80289b0:	4770      	bx	lr

080289b2 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 80289b2:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 80289b6:	4770      	bx	lr

080289b8 <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 80289b8:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 80289bc:	4770      	bx	lr

080289be <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 80289be:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 80289c2:	4770      	bx	lr

080289c4 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 80289c4:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 80289c8:	4770      	bx	lr

080289ca <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 80289ca:	ee07 2a90 	vmov	s15, r2
 80289ce:	6803      	ldr	r3, [r0, #0]
 80289d0:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 80289d4:	ee07 1a90 	vmov	s15, r1
 80289d8:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80289dc:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80289e0:	4718      	bx	r3

080289e2 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 80289e2:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 80289e6:	4770      	bx	lr

080289e8 <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 80289e8:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 80289ec:	4770      	bx	lr

080289ee <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 80289ee:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 80289f2:	4770      	bx	lr

080289f4 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 80289f4:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 80289f8:	4770      	bx	lr

080289fa <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80289fa:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 80289fe:	4770      	bx	lr

08028a00 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8028a00:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8028a04:	4770      	bx	lr

08028a06 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8028a06:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8028a0a:	4770      	bx	lr

08028a0c <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8028a0c:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8028a10:	4770      	bx	lr

08028a12 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8028a12:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8028a16:	4770      	bx	lr

08028a18 <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8028a18:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8028a1c:	4770      	bx	lr

08028a1e <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8028a1e:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8028a22:	4770      	bx	lr

08028a24 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8028a24:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8028a28:	4770      	bx	lr

08028a2a <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8028a2a:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8028a2e:	4770      	bx	lr

08028a30 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8028a30:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8028a34:	4770      	bx	lr

08028a36 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8028a36:	b510      	push	{r4, lr}
 8028a38:	ed2d 8b04 	vpush	{d8-d9}
 8028a3c:	6803      	ldr	r3, [r0, #0]
 8028a3e:	4604      	mov	r4, r0
 8028a40:	699b      	ldr	r3, [r3, #24]
 8028a42:	eeb0 8a40 	vmov.f32	s16, s0
 8028a46:	eef0 8a60 	vmov.f32	s17, s1
 8028a4a:	eeb0 9a41 	vmov.f32	s18, s2
 8028a4e:	4798      	blx	r3
 8028a50:	6823      	ldr	r3, [r4, #0]
 8028a52:	4620      	mov	r0, r4
 8028a54:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8028a56:	eeb0 1a49 	vmov.f32	s2, s18
 8028a5a:	eef0 0a68 	vmov.f32	s1, s17
 8028a5e:	eeb0 0a48 	vmov.f32	s0, s16
 8028a62:	4798      	blx	r3
 8028a64:	ecbd 8b04 	vpop	{d8-d9}
 8028a68:	6823      	ldr	r3, [r4, #0]
 8028a6a:	4620      	mov	r0, r4
 8028a6c:	699b      	ldr	r3, [r3, #24]
 8028a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028a72:	4718      	bx	r3

08028a74 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8028a74:	b510      	push	{r4, lr}
 8028a76:	ed2d 8b02 	vpush	{d8}
 8028a7a:	6803      	ldr	r3, [r0, #0]
 8028a7c:	4604      	mov	r4, r0
 8028a7e:	699b      	ldr	r3, [r3, #24]
 8028a80:	eeb0 8a40 	vmov.f32	s16, s0
 8028a84:	4798      	blx	r3
 8028a86:	6823      	ldr	r3, [r4, #0]
 8028a88:	4620      	mov	r0, r4
 8028a8a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8028a8e:	eeb0 0a48 	vmov.f32	s0, s16
 8028a92:	4798      	blx	r3
 8028a94:	ecbd 8b02 	vpop	{d8}
 8028a98:	6823      	ldr	r3, [r4, #0]
 8028a9a:	4620      	mov	r0, r4
 8028a9c:	699b      	ldr	r3, [r3, #24]
 8028a9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028aa2:	4718      	bx	r3

08028aa4 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8028aa4:	2200      	movs	r2, #0
 8028aa6:	8002      	strh	r2, [r0, #0]
 8028aa8:	8042      	strh	r2, [r0, #2]
 8028aaa:	8082      	strh	r2, [r0, #4]
 8028aac:	80c2      	strh	r2, [r0, #6]
 8028aae:	4770      	bx	lr

08028ab0 <_ZN8touchgfx13TextureMapperD1Ev>:
 8028ab0:	4770      	bx	lr

08028ab2 <_ZN8touchgfx13TextureMapperD0Ev>:
 8028ab2:	b510      	push	{r4, lr}
 8028ab4:	2190      	movs	r1, #144	; 0x90
 8028ab6:	4604      	mov	r4, r0
 8028ab8:	f001 ff3f 	bl	802a93a <_ZdlPvj>
 8028abc:	4620      	mov	r0, r4
 8028abe:	bd10      	pop	{r4, pc}

08028ac0 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8028ac0:	b538      	push	{r3, r4, r5, lr}
 8028ac2:	2500      	movs	r5, #0
 8028ac4:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8028ac8:	2301      	movs	r3, #1
 8028aca:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8028ace:	4b1f      	ldr	r3, [pc, #124]	; (8028b4c <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8028ad0:	8085      	strh	r5, [r0, #4]
 8028ad2:	80c5      	strh	r5, [r0, #6]
 8028ad4:	8105      	strh	r5, [r0, #8]
 8028ad6:	8145      	strh	r5, [r0, #10]
 8028ad8:	8185      	strh	r5, [r0, #12]
 8028ada:	81c5      	strh	r5, [r0, #14]
 8028adc:	8205      	strh	r5, [r0, #16]
 8028ade:	8245      	strh	r5, [r0, #18]
 8028ae0:	61c5      	str	r5, [r0, #28]
 8028ae2:	8405      	strh	r5, [r0, #32]
 8028ae4:	8445      	strh	r5, [r0, #34]	; 0x22
 8028ae6:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8028aea:	6003      	str	r3, [r0, #0]
 8028aec:	880b      	ldrh	r3, [r1, #0]
 8028aee:	84c3      	strh	r3, [r0, #38]	; 0x26
 8028af0:	23ff      	movs	r3, #255	; 0xff
 8028af2:	4604      	mov	r4, r0
 8028af4:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8028af8:	f7eb f96b 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028afc:	4b14      	ldr	r3, [pc, #80]	; (8028b50 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8028afe:	6023      	str	r3, [r4, #0]
 8028b00:	2300      	movs	r3, #0
 8028b02:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8028b06:	4913      	ldr	r1, [pc, #76]	; (8028b54 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8028b08:	62e3      	str	r3, [r4, #44]	; 0x2c
 8028b0a:	6323      	str	r3, [r4, #48]	; 0x30
 8028b0c:	6363      	str	r3, [r4, #52]	; 0x34
 8028b0e:	63a3      	str	r3, [r4, #56]	; 0x38
 8028b10:	63e3      	str	r3, [r4, #60]	; 0x3c
 8028b12:	6463      	str	r3, [r4, #68]	; 0x44
 8028b14:	64a3      	str	r3, [r4, #72]	; 0x48
 8028b16:	6523      	str	r3, [r4, #80]	; 0x50
 8028b18:	6563      	str	r3, [r4, #84]	; 0x54
 8028b1a:	65e3      	str	r3, [r4, #92]	; 0x5c
 8028b1c:	6623      	str	r3, [r4, #96]	; 0x60
 8028b1e:	66a3      	str	r3, [r4, #104]	; 0x68
 8028b20:	66e3      	str	r3, [r4, #108]	; 0x6c
 8028b22:	6763      	str	r3, [r4, #116]	; 0x74
 8028b24:	67a3      	str	r3, [r4, #120]	; 0x78
 8028b26:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8028b2a:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8028b2e:	230c      	movs	r3, #12
 8028b30:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8028b34:	6422      	str	r2, [r4, #64]	; 0x40
 8028b36:	64e1      	str	r1, [r4, #76]	; 0x4c
 8028b38:	65a1      	str	r1, [r4, #88]	; 0x58
 8028b3a:	6662      	str	r2, [r4, #100]	; 0x64
 8028b3c:	6722      	str	r2, [r4, #112]	; 0x70
 8028b3e:	67e2      	str	r2, [r4, #124]	; 0x7c
 8028b40:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8028b44:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8028b48:	4620      	mov	r0, r4
 8028b4a:	bd38      	pop	{r3, r4, r5, pc}
 8028b4c:	0802f890 	.word	0x0802f890
 8028b50:	0802fe74 	.word	0x0802fe74
 8028b54:	447a0000 	.word	0x447a0000

08028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8028b58:	b570      	push	{r4, r5, r6, lr}
 8028b5a:	ed2d 8b04 	vpush	{d8-d9}
 8028b5e:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8028b62:	add0      	add	r5, sp, #832	; 0x340
 8028b64:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8028b66:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8028b6a:	4604      	mov	r4, r0
 8028b6c:	4628      	mov	r0, r5
 8028b6e:	f7f1 fa7f 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8028b72:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8028b74:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8028b78:	4606      	mov	r6, r0
 8028b7a:	4628      	mov	r0, r5
 8028b7c:	f7f1 faac 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8028b80:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8028b84:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8028b88:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8028b8a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8028b8e:	9312      	str	r3, [sp, #72]	; 0x48
 8028b90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8028b94:	1c72      	adds	r2, r6, #1
 8028b96:	3001      	adds	r0, #1
 8028b98:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8028b9c:	ee07 2a90 	vmov	s15, r2
 8028ba0:	ee06 0a90 	vmov	s13, r0
 8028ba4:	ee36 6a47 	vsub.f32	s12, s12, s14
 8028ba8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028bac:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8028bb0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8028bb4:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8028bb8:	9316      	str	r3, [sp, #88]	; 0x58
 8028bba:	931a      	str	r3, [sp, #104]	; 0x68
 8028bbc:	931e      	str	r3, [sp, #120]	; 0x78
 8028bbe:	2300      	movs	r3, #0
 8028bc0:	9320      	str	r3, [sp, #128]	; 0x80
 8028bc2:	9321      	str	r3, [sp, #132]	; 0x84
 8028bc4:	9322      	str	r3, [sp, #136]	; 0x88
 8028bc6:	9324      	str	r3, [sp, #144]	; 0x90
 8028bc8:	9325      	str	r3, [sp, #148]	; 0x94
 8028bca:	9326      	str	r3, [sp, #152]	; 0x98
 8028bcc:	9328      	str	r3, [sp, #160]	; 0xa0
 8028bce:	9329      	str	r3, [sp, #164]	; 0xa4
 8028bd0:	932a      	str	r3, [sp, #168]	; 0xa8
 8028bd2:	932c      	str	r3, [sp, #176]	; 0xb0
 8028bd4:	932d      	str	r3, [sp, #180]	; 0xb4
 8028bd6:	932e      	str	r3, [sp, #184]	; 0xb8
 8028bd8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8028bdc:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8028be0:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8028be4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8028be8:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8028bec:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8028bf0:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8028bf4:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8028bf8:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8028bfc:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8028c00:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8028c04:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8028c08:	a830      	add	r0, sp, #192	; 0xc0
 8028c0a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8028c0e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8028c12:	f000 fc43 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c16:	eeb1 0a49 	vneg.f32	s0, s18
 8028c1a:	a830      	add	r0, sp, #192	; 0xc0
 8028c1c:	f000 fd12 	bl	8029644 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028c20:	eeb1 0a68 	vneg.f32	s0, s17
 8028c24:	f000 fd1c 	bl	8029660 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028c28:	eeb1 0a48 	vneg.f32	s0, s16
 8028c2c:	f000 fd27 	bl	802967e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028c30:	a840      	add	r0, sp, #256	; 0x100
 8028c32:	f000 fc33 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c36:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 8028c3a:	a840      	add	r0, sp, #256	; 0x100
 8028c3c:	f000 fc86 	bl	802954c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8028c40:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8028c44:	f000 fcac 	bl	80295a0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 8028c48:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8028c4c:	f000 fcd1 	bl	80295f2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8028c50:	a850      	add	r0, sp, #320	; 0x140
 8028c52:	f000 fc23 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c56:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028c5a:	a850      	add	r0, sp, #320	; 0x140
 8028c5c:	f000 fd1e 	bl	802969c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8028c60:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028c64:	f000 fd26 	bl	80296b4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8028c68:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8028c6c:	f000 fd2f 	bl	80296ce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8028c70:	a860      	add	r0, sp, #384	; 0x180
 8028c72:	f000 fc13 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028c76:	eeb0 0a49 	vmov.f32	s0, s18
 8028c7a:	a860      	add	r0, sp, #384	; 0x180
 8028c7c:	f000 fce2 	bl	8029644 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028c80:	eeb0 0a68 	vmov.f32	s0, s17
 8028c84:	f000 fcec 	bl	8029660 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028c88:	eeb0 0a48 	vmov.f32	s0, s16
 8028c8c:	f000 fcf7 	bl	802967e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8028c90:	aa50      	add	r2, sp, #320	; 0x140
 8028c92:	a960      	add	r1, sp, #384	; 0x180
 8028c94:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028c96:	f000 fc1b 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028c9a:	4628      	mov	r0, r5
 8028c9c:	aa40      	add	r2, sp, #256	; 0x100
 8028c9e:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028ca0:	f000 fc16 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028ca4:	4629      	mov	r1, r5
 8028ca6:	aa30      	add	r2, sp, #192	; 0xc0
 8028ca8:	a870      	add	r0, sp, #448	; 0x1c0
 8028caa:	f000 fc11 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028cae:	a880      	add	r0, sp, #512	; 0x200
 8028cb0:	f000 fbf4 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028cb4:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028cb8:	a880      	add	r0, sp, #512	; 0x200
 8028cba:	eeb1 0a40 	vneg.f32	s0, s0
 8028cbe:	f000 fcc1 	bl	8029644 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028cc2:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028cc6:	a880      	add	r0, sp, #512	; 0x200
 8028cc8:	eeb1 0a40 	vneg.f32	s0, s0
 8028ccc:	f000 fcc8 	bl	8029660 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028cd0:	a890      	add	r0, sp, #576	; 0x240
 8028cd2:	f000 fbe3 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028cd6:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8028cda:	a890      	add	r0, sp, #576	; 0x240
 8028cdc:	f000 fc26 	bl	802952c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8028ce0:	a8a0      	add	r0, sp, #640	; 0x280
 8028ce2:	f000 fbdb 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 8028ce6:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8028cea:	a8a0      	add	r0, sp, #640	; 0x280
 8028cec:	f000 fcaa 	bl	8029644 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8028cf0:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 8028cf4:	f000 fcb4 	bl	8029660 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8028cf8:	aa90      	add	r2, sp, #576	; 0x240
 8028cfa:	a9a0      	add	r1, sp, #640	; 0x280
 8028cfc:	a8b0      	add	r0, sp, #704	; 0x2c0
 8028cfe:	f000 fbe7 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d02:	4628      	mov	r0, r5
 8028d04:	aa80      	add	r2, sp, #512	; 0x200
 8028d06:	a9b0      	add	r1, sp, #704	; 0x2c0
 8028d08:	f000 fbe2 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d0c:	4629      	mov	r1, r5
 8028d0e:	aa70      	add	r2, sp, #448	; 0x1c0
 8028d10:	4668      	mov	r0, sp
 8028d12:	466d      	mov	r5, sp
 8028d14:	f000 fbdc 	bl	80294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8028d18:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028d1a:	ae70      	add	r6, sp, #448	; 0x1c0
 8028d1c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028d1e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028d20:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028d22:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8028d24:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8028d26:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8028d2a:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8028d2e:	2500      	movs	r5, #0
 8028d30:	0129      	lsls	r1, r5, #4
 8028d32:	ab20      	add	r3, sp, #128	; 0x80
 8028d34:	185e      	adds	r6, r3, r1
 8028d36:	ab10      	add	r3, sp, #64	; 0x40
 8028d38:	4419      	add	r1, r3
 8028d3a:	a870      	add	r0, sp, #448	; 0x1c0
 8028d3c:	f000 fb7e 	bl	802943c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8028d40:	3501      	adds	r5, #1
 8028d42:	2d04      	cmp	r5, #4
 8028d44:	ed86 0a00 	vstr	s0, [r6]
 8028d48:	edc6 0a01 	vstr	s1, [r6, #4]
 8028d4c:	ed86 1a02 	vstr	s2, [r6, #8]
 8028d50:	edc6 1a03 	vstr	s3, [r6, #12]
 8028d54:	d1ec      	bne.n	8028d30 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 8028d56:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8028d5a:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8028d5e:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8028d62:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028d66:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8028d6a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028d6e:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8028d72:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 8028d76:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028d7a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028d7e:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8028d82:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8028d86:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8028d8a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028d8e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8028d92:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028d96:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8028d9a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8028d9e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028da2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028da6:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8028daa:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8028dae:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 8028db2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028db6:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8028dba:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028dbe:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 8028dc2:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 8028dc6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028dca:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028dce:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 8028dd2:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 8028dd6:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8028dda:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8028dde:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 8028de2:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8028de6:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8028dea:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8028dee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8028df2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8028df6:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 8028dfa:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 8028dfe:	ecbd 8b04 	vpop	{d8-d9}
 8028e02:	bd70      	pop	{r4, r5, r6, pc}

08028e04 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 8028e04:	b510      	push	{r4, lr}
 8028e06:	4604      	mov	r4, r0
 8028e08:	f7ea ffe3 	bl	8013dd2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8028e0c:	4620      	mov	r0, r4
 8028e0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8028e12:	f7ff bea1 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e16 <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 8028e16:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 8028e1a:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8028e1e:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8028e22:	f7ff be99 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e26 <_ZN8touchgfx13TextureMapper8setScaleEf>:
 8028e26:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 8028e2a:	f7ff be95 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e2e <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8028e2e:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8028e32:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 8028e36:	f7ff be8f 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e3a <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 8028e3a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8028e3e:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028e42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e46:	bfd8      	it	le
 8028e48:	eeb0 0a67 	vmovle.f32	s0, s15
 8028e4c:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8028e50:	f7ff be82 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e54 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8028e54:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8028e58:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8028e5c:	f7ff be7c 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e60 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8028e60:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028e64:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028e68:	f7ff be76 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e6c <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8028e6c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8028e70:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8028e74:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8028e78:	f7ff be6e 	b.w	8028b58 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08028e7c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8028e7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028e80:	ed2d 8b04 	vpush	{d8-d9}
 8028e84:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8028e88:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8028e8c:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8028e90:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8028e94:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028e9c:	bf54      	ite	pl
 8028e9e:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028ea2:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028ea6:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028eaa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028eae:	bfd8      	it	le
 8028eb0:	eeb0 0a49 	vmovle.f32	s0, s18
 8028eb4:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028eb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ebc:	bfd8      	it	le
 8028ebe:	eeb0 0a68 	vmovle.f32	s0, s17
 8028ec2:	460c      	mov	r4, r1
 8028ec4:	4607      	mov	r7, r0
 8028ec6:	f001 fe4f 	bl	802ab68 <floorf>
 8028eca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028ece:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ed2:	bf58      	it	pl
 8028ed4:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028ed8:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028edc:	bf56      	itet	pl
 8028ede:	ee10 3a10 	vmovpl	r3, s0
 8028ee2:	2600      	movmi	r6, #0
 8028ee4:	b21e      	sxthpl	r6, r3
 8028ee6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028eea:	bfd8      	it	le
 8028eec:	eeb0 8a69 	vmovle.f32	s16, s19
 8028ef0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028ef4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028ef8:	bf58      	it	pl
 8028efa:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028efe:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028f02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f06:	bf54      	ite	pl
 8028f08:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028f0c:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028f10:	f001 fde8 	bl	802aae4 <ceilf>
 8028f14:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 8028f18:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8028f1c:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8028f20:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8028f24:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 8028f28:	ee07 8a90 	vmov	s15, r8
 8028f2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028f30:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028f34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f38:	bfd8      	it	le
 8028f3a:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028f3e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028f42:	bfdc      	itt	le
 8028f44:	ee10 3a10 	vmovle	r3, s0
 8028f48:	fa0f f883 	sxthle.w	r8, r3
 8028f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f50:	bf54      	ite	pl
 8028f52:	eeb0 0a69 	vmovpl.f32	s0, s19
 8028f56:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028f5a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8028f5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f62:	bfd8      	it	le
 8028f64:	eeb0 0a49 	vmovle.f32	s0, s18
 8028f68:	eef4 8ac0 	vcmpe.f32	s17, s0
 8028f6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f70:	bfd8      	it	le
 8028f72:	eeb0 0a68 	vmovle.f32	s0, s17
 8028f76:	f001 fdf7 	bl	802ab68 <floorf>
 8028f7a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f82:	bf58      	it	pl
 8028f84:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8028f88:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8028f8c:	bf56      	itet	pl
 8028f8e:	ee10 3a10 	vmovpl	r3, s0
 8028f92:	2500      	movmi	r5, #0
 8028f94:	b21d      	sxthpl	r5, r3
 8028f96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f9a:	bfd8      	it	le
 8028f9c:	eeb0 8a69 	vmovle.f32	s16, s19
 8028fa0:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8028fa4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fa8:	bf58      	it	pl
 8028faa:	eeb0 8a49 	vmovpl.f32	s16, s18
 8028fae:	eef4 8ac8 	vcmpe.f32	s17, s16
 8028fb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fb6:	bf54      	ite	pl
 8028fb8:	eeb0 0a68 	vmovpl.f32	s0, s17
 8028fbc:	eeb0 0a48 	vmovmi.f32	s0, s16
 8028fc0:	f001 fd90 	bl	802aae4 <ceilf>
 8028fc4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8028fc8:	803e      	strh	r6, [r7, #0]
 8028fca:	ee07 3a90 	vmov	s15, r3
 8028fce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8028fd2:	807d      	strh	r5, [r7, #2]
 8028fd4:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8028fd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fdc:	bfd8      	it	le
 8028fde:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8028fe2:	eba8 0606 	sub.w	r6, r8, r6
 8028fe6:	bfdc      	itt	le
 8028fe8:	ee10 3a10 	vmovle	r3, s0
 8028fec:	b21b      	sxthle	r3, r3
 8028fee:	1b5d      	subs	r5, r3, r5
 8028ff0:	80be      	strh	r6, [r7, #4]
 8028ff2:	80fd      	strh	r5, [r7, #6]
 8028ff4:	ecbd 8b04 	vpop	{d8-d9}
 8028ff8:	4638      	mov	r0, r7
 8028ffa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08028ffe <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 8028ffe:	b513      	push	{r0, r1, r4, lr}
 8029000:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8029004:	4604      	mov	r4, r0
 8029006:	b143      	cbz	r3, 802901a <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 8029008:	4601      	mov	r1, r0
 802900a:	4668      	mov	r0, sp
 802900c:	f7ff ff36 	bl	8028e7c <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8029010:	6823      	ldr	r3, [r4, #0]
 8029012:	4669      	mov	r1, sp
 8029014:	691b      	ldr	r3, [r3, #16]
 8029016:	4620      	mov	r0, r4
 8029018:	4798      	blx	r3
 802901a:	b002      	add	sp, #8
 802901c:	bd10      	pop	{r4, pc}

0802901e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 802901e:	4603      	mov	r3, r0
 8029020:	3026      	adds	r0, #38	; 0x26
 8029022:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8029026:	b90b      	cbnz	r3, 802902c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 8029028:	f7ee bdfa 	b.w	8017c20 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 802902c:	f7ee be08 	b.w	8017c40 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08029030 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8029030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029034:	ed2d 8b04 	vpush	{d8-d9}
 8029038:	4604      	mov	r4, r0
 802903a:	469b      	mov	fp, r3
 802903c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8029040:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8029044:	f9b1 6000 	ldrsh.w	r6, [r1]
 8029048:	8888      	ldrh	r0, [r1, #4]
 802904a:	b0b3      	sub	sp, #204	; 0xcc
 802904c:	4430      	add	r0, r6
 802904e:	b280      	uxth	r0, r0
 8029050:	9206      	str	r2, [sp, #24]
 8029052:	fa0f fe80 	sxth.w	lr, r0
 8029056:	2200      	movs	r2, #0
 8029058:	4596      	cmp	lr, r2
 802905a:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 802905e:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8029062:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 8029066:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8029068:	9211      	str	r2, [sp, #68]	; 0x44
 802906a:	f340 8129 	ble.w	80292c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802906e:	45b4      	cmp	ip, r6
 8029070:	f340 8126 	ble.w	80292c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029074:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8029078:	88ca      	ldrh	r2, [r1, #6]
 802907a:	442a      	add	r2, r5
 802907c:	b292      	uxth	r2, r2
 802907e:	b211      	sxth	r1, r2
 8029080:	2900      	cmp	r1, #0
 8029082:	f340 811d 	ble.w	80292c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8029086:	42ab      	cmp	r3, r5
 8029088:	f340 811a 	ble.w	80292c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802908c:	45f4      	cmp	ip, lr
 802908e:	bfb8      	it	lt
 8029090:	fa1f f08c 	uxthlt.w	r0, ip
 8029094:	428b      	cmp	r3, r1
 8029096:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802909a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802909e:	bfb8      	it	lt
 80290a0:	b29a      	uxthlt	r2, r3
 80290a2:	1b80      	subs	r0, r0, r6
 80290a4:	1b52      	subs	r2, r2, r5
 80290a6:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 80290aa:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80290ae:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80290b2:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80290b6:	ab11      	add	r3, sp, #68	; 0x44
 80290b8:	e893 0003 	ldmia.w	r3, {r0, r1}
 80290bc:	6822      	ldr	r2, [r4, #0]
 80290be:	9307      	str	r3, [sp, #28]
 80290c0:	ad13      	add	r5, sp, #76	; 0x4c
 80290c2:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80290c4:	e885 0003 	stmia.w	r5, {r0, r1}
 80290c8:	4629      	mov	r1, r5
 80290ca:	4620      	mov	r0, r4
 80290cc:	4790      	blx	r2
 80290ce:	4621      	mov	r1, r4
 80290d0:	a815      	add	r0, sp, #84	; 0x54
 80290d2:	f7ee fd01 	bl	8017ad8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80290d6:	a815      	add	r0, sp, #84	; 0x54
 80290d8:	f7ed f9c6 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80290dc:	9b07      	ldr	r3, [sp, #28]
 80290de:	1d26      	adds	r6, r4, #4
 80290e0:	4618      	mov	r0, r3
 80290e2:	4631      	mov	r1, r6
 80290e4:	f7ed fa04 	bl	80164f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80290e8:	4628      	mov	r0, r5
 80290ea:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80290ee:	f7ed f9bb 	bl	8016468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80290f2:	4628      	mov	r0, r5
 80290f4:	f7f1 f8a8 	bl	801a248 <_ZNK8touchgfx6Bitmap7getDataEv>
 80290f8:	9007      	str	r0, [sp, #28]
 80290fa:	2800      	cmp	r0, #0
 80290fc:	f000 80db 	beq.w	80292b6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 8029100:	f8db 2000 	ldr.w	r2, [fp]
 8029104:	9209      	str	r2, [sp, #36]	; 0x24
 8029106:	f8db 2004 	ldr.w	r2, [fp, #4]
 802910a:	920a      	str	r2, [sp, #40]	; 0x28
 802910c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8029110:	920b      	str	r2, [sp, #44]	; 0x2c
 8029112:	f8db 200c 	ldr.w	r2, [fp, #12]
 8029116:	920c      	str	r2, [sp, #48]	; 0x30
 8029118:	f8da 2000 	ldr.w	r2, [sl]
 802911c:	920d      	str	r2, [sp, #52]	; 0x34
 802911e:	f8da 2004 	ldr.w	r2, [sl, #4]
 8029122:	920e      	str	r2, [sp, #56]	; 0x38
 8029124:	f8da 2008 	ldr.w	r2, [sl, #8]
 8029128:	920f      	str	r2, [sp, #60]	; 0x3c
 802912a:	f8da 200c 	ldr.w	r2, [sl, #12]
 802912e:	9210      	str	r2, [sp, #64]	; 0x40
 8029130:	a90d      	add	r1, sp, #52	; 0x34
 8029132:	4632      	mov	r2, r6
 8029134:	a809      	add	r0, sp, #36	; 0x24
 8029136:	f7ed f9bf 	bl	80164b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802913a:	4632      	mov	r2, r6
 802913c:	a90e      	add	r1, sp, #56	; 0x38
 802913e:	a80a      	add	r0, sp, #40	; 0x28
 8029140:	f7ed f9ba 	bl	80164b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029144:	4632      	mov	r2, r6
 8029146:	a90f      	add	r1, sp, #60	; 0x3c
 8029148:	a80b      	add	r0, sp, #44	; 0x2c
 802914a:	f7ed f9b5 	bl	80164b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802914e:	4632      	mov	r2, r6
 8029150:	a910      	add	r1, sp, #64	; 0x40
 8029152:	a80c      	add	r0, sp, #48	; 0x30
 8029154:	f7ed f9b0 	bl	80164b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8029158:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 802915c:	edd7 4a00 	vldr	s9, [r7]
 8029160:	edd7 5a01 	vldr	s11, [r7, #4]
 8029164:	ed98 4a00 	vldr	s8, [r8]
 8029168:	ed98 5a01 	vldr	s10, [r8, #4]
 802916c:	ed99 9a00 	vldr	s18, [r9]
 8029170:	ed99 8a01 	vldr	s16, [r9, #4]
 8029174:	edd9 8a02 	vldr	s17, [r9, #8]
 8029178:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 802917c:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8029180:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8029184:	eef0 6a67 	vmov.f32	s13, s15
 8029188:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 802918c:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8029190:	eeb0 7a67 	vmov.f32	s14, s15
 8029194:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8029198:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 802919c:	eeb0 6a67 	vmov.f32	s12, s15
 80291a0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80291a4:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80291a8:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80291ac:	ee16 6a10 	vmov	r6, s12
 80291b0:	eeb0 6a67 	vmov.f32	s12, s15
 80291b4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80291b8:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80291bc:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80291c0:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80291c4:	68ff      	ldr	r7, [r7, #12]
 80291c6:	9624      	str	r6, [sp, #144]	; 0x90
 80291c8:	ee16 0a10 	vmov	r0, s12
 80291cc:	eeb0 6a67 	vmov.f32	s12, s15
 80291d0:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80291d4:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80291d8:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80291dc:	ee16 1a10 	vmov	r1, s12
 80291e0:	eeb0 6a67 	vmov.f32	s12, s15
 80291e4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80291e8:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80291ec:	ee16 2a10 	vmov	r2, s12
 80291f0:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80291f4:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80291f8:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80291fc:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8029200:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8029204:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8029208:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 802920c:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8029210:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8029214:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8029218:	922d      	str	r2, [sp, #180]	; 0xb4
 802921a:	4a2b      	ldr	r2, [pc, #172]	; (80292c8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 802921c:	9b06      	ldr	r3, [sp, #24]
 802921e:	8812      	ldrh	r2, [r2, #0]
 8029220:	9317      	str	r3, [sp, #92]	; 0x5c
 8029222:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8029226:	9b07      	ldr	r3, [sp, #28]
 8029228:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 802922c:	4628      	mov	r0, r5
 802922e:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8029232:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8029236:	9218      	str	r2, [sp, #96]	; 0x60
 8029238:	9319      	str	r3, [sp, #100]	; 0x64
 802923a:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 802923e:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8029242:	9731      	str	r7, [sp, #196]	; 0xc4
 8029244:	f7f1 f830 	bl	801a2a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8029248:	901a      	str	r0, [sp, #104]	; 0x68
 802924a:	4628      	mov	r0, r5
 802924c:	f7f0 ff10 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029250:	901b      	str	r0, [sp, #108]	; 0x6c
 8029252:	4628      	mov	r0, r5
 8029254:	f7f0 ff40 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8029258:	901c      	str	r0, [sp, #112]	; 0x70
 802925a:	4628      	mov	r0, r5
 802925c:	f7f0 ff08 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8029260:	eeb4 9a48 	vcmp.f32	s18, s16
 8029264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029268:	901d      	str	r0, [sp, #116]	; 0x74
 802926a:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 802926e:	d107      	bne.n	8029280 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8029270:	eeb4 8a68 	vcmp.f32	s16, s17
 8029274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029278:	f64f 73ff 	movw	r3, #65535	; 0xffff
 802927c:	bf08      	it	eq
 802927e:	461e      	moveq	r6, r3
 8029280:	4b12      	ldr	r3, [pc, #72]	; (80292cc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8029282:	681b      	ldr	r3, [r3, #0]
 8029284:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8029288:	b10a      	cbz	r2, 802928e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802928a:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 802928c:	b905      	cbnz	r5, 8029290 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 802928e:	689d      	ldr	r5, [r3, #8]
 8029290:	682b      	ldr	r3, [r5, #0]
 8029292:	4620      	mov	r0, r4
 8029294:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8029296:	f7ff fec2 	bl	802901e <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802929a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 802929e:	9604      	str	r6, [sp, #16]
 80292a0:	e9cd 0302 	strd	r0, r3, [sp, #8]
 80292a4:	ab13      	add	r3, sp, #76	; 0x4c
 80292a6:	9301      	str	r3, [sp, #4]
 80292a8:	ab15      	add	r3, sp, #84	; 0x54
 80292aa:	9300      	str	r3, [sp, #0]
 80292ac:	aa1e      	add	r2, sp, #120	; 0x78
 80292ae:	ab19      	add	r3, sp, #100	; 0x64
 80292b0:	a917      	add	r1, sp, #92	; 0x5c
 80292b2:	4628      	mov	r0, r5
 80292b4:	47b8      	blx	r7
 80292b6:	b033      	add	sp, #204	; 0xcc
 80292b8:	ecbd 8b04 	vpop	{d8-d9}
 80292bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80292c0:	2300      	movs	r3, #0
 80292c2:	9312      	str	r3, [sp, #72]	; 0x48
 80292c4:	e6f7      	b.n	80290b6 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80292c6:	bf00      	nop
 80292c8:	200137e6 	.word	0x200137e6
 80292cc:	200137ec 	.word	0x200137ec

080292d0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80292d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80292d4:	ed2d 8b02 	vpush	{d8}
 80292d8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80292dc:	b098      	sub	sp, #96	; 0x60
 80292de:	4604      	mov	r4, r0
 80292e0:	4688      	mov	r8, r1
 80292e2:	2b00      	cmp	r3, #0
 80292e4:	d077      	beq.n	80293d6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80292e6:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80292ea:	4628      	mov	r0, r5
 80292ec:	f7f0 fec0 	bl	801a070 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80292f0:	ee07 0a90 	vmov	s15, r0
 80292f4:	4628      	mov	r0, r5
 80292f6:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80292fa:	f7f0 feed 	bl	801a0d8 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80292fe:	4b4e      	ldr	r3, [pc, #312]	; (8029438 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8029300:	781b      	ldrb	r3, [r3, #0]
 8029302:	ee07 0a90 	vmov	s15, r0
 8029306:	2b01      	cmp	r3, #1
 8029308:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802930c:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8029310:	d066      	beq.n	80293e0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8029312:	eeb0 6a47 	vmov.f32	s12, s14
 8029316:	ee17 3a10 	vmov	r3, s14
 802931a:	eeb0 4a48 	vmov.f32	s8, s16
 802931e:	eeb0 7a48 	vmov.f32	s14, s16
 8029322:	eef0 4a67 	vmov.f32	s9, s15
 8029326:	eeb0 8a67 	vmov.f32	s16, s15
 802932a:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 802932e:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8029332:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8029336:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802933a:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 802933e:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8029342:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8029344:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8029346:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8029348:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 802934c:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8029350:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8029354:	ee73 1a65 	vsub.f32	s3, s6, s11
 8029358:	ee72 6ac5 	vsub.f32	s13, s5, s10
 802935c:	ee32 1a45 	vsub.f32	s2, s4, s10
 8029360:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8029364:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8029368:	eee1 6a21 	vfma.f32	s13, s2, s3
 802936c:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8029370:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029374:	dd3d      	ble.n	80293f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8029376:	ed8d 5a04 	vstr	s10, [sp, #16]
 802937a:	ed8d 2a05 	vstr	s4, [sp, #20]
 802937e:	edcd 2a06 	vstr	s5, [sp, #24]
 8029382:	f8cd c01c 	str.w	ip, [sp, #28]
 8029386:	edcd 5a08 	vstr	s11, [sp, #32]
 802938a:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 802938e:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8029392:	970b      	str	r7, [sp, #44]	; 0x2c
 8029394:	960c      	str	r6, [sp, #48]	; 0x30
 8029396:	950d      	str	r5, [sp, #52]	; 0x34
 8029398:	920e      	str	r2, [sp, #56]	; 0x38
 802939a:	900f      	str	r0, [sp, #60]	; 0x3c
 802939c:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 80293a0:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 80293a4:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 80293a8:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80293ac:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80293b0:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80293b4:	9316      	str	r3, [sp, #88]	; 0x58
 80293b6:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80293ba:	ab14      	add	r3, sp, #80	; 0x50
 80293bc:	9303      	str	r3, [sp, #12]
 80293be:	ab10      	add	r3, sp, #64	; 0x40
 80293c0:	9302      	str	r3, [sp, #8]
 80293c2:	ab0c      	add	r3, sp, #48	; 0x30
 80293c4:	9301      	str	r3, [sp, #4]
 80293c6:	ab08      	add	r3, sp, #32
 80293c8:	9300      	str	r3, [sp, #0]
 80293ca:	2200      	movs	r2, #0
 80293cc:	ab04      	add	r3, sp, #16
 80293ce:	4641      	mov	r1, r8
 80293d0:	4620      	mov	r0, r4
 80293d2:	f7ff fe2d 	bl	8029030 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80293d6:	b018      	add	sp, #96	; 0x60
 80293d8:	ecbd 8b02 	vpop	{d8}
 80293dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80293e0:	eeb0 6a48 	vmov.f32	s12, s16
 80293e4:	eef0 4a47 	vmov.f32	s9, s14
 80293e8:	ee17 3a90 	vmov	r3, s15
 80293ec:	eeb0 4a67 	vmov.f32	s8, s15
 80293f0:	e79b      	b.n	802932a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80293f2:	ed8d 5a05 	vstr	s10, [sp, #20]
 80293f6:	ed8d 2a04 	vstr	s4, [sp, #16]
 80293fa:	f8cd c018 	str.w	ip, [sp, #24]
 80293fe:	edcd 2a07 	vstr	s5, [sp, #28]
 8029402:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8029406:	ed8d 3a08 	vstr	s6, [sp, #32]
 802940a:	970a      	str	r7, [sp, #40]	; 0x28
 802940c:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8029410:	960d      	str	r6, [sp, #52]	; 0x34
 8029412:	950c      	str	r5, [sp, #48]	; 0x30
 8029414:	900e      	str	r0, [sp, #56]	; 0x38
 8029416:	920f      	str	r2, [sp, #60]	; 0x3c
 8029418:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 802941c:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8029420:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8029424:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8029428:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 802942c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8029430:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8029434:	9317      	str	r3, [sp, #92]	; 0x5c
 8029436:	e7c0      	b.n	80293ba <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8029438:	200137e4 	.word	0x200137e4

0802943c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 802943c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802943e:	b08d      	sub	sp, #52	; 0x34
 8029440:	2300      	movs	r3, #0
 8029442:	9304      	str	r3, [sp, #16]
 8029444:	9305      	str	r3, [sp, #20]
 8029446:	9306      	str	r3, [sp, #24]
 8029448:	aa04      	add	r2, sp, #16
 802944a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 802944e:	9307      	str	r3, [sp, #28]
 8029450:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8029454:	4613      	mov	r3, r2
 8029456:	f101 0710 	add.w	r7, r1, #16
 802945a:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029498 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 802945e:	460c      	mov	r4, r1
 8029460:	4605      	mov	r5, r0
 8029462:	ecb4 7a01 	vldmia	r4!, {s14}
 8029466:	ecf5 6a01 	vldmia	r5!, {s13}
 802946a:	42bc      	cmp	r4, r7
 802946c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029470:	d1f7      	bne.n	8029462 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8029472:	3010      	adds	r0, #16
 8029474:	42b0      	cmp	r0, r6
 8029476:	ece2 7a01 	vstmia	r2!, {s15}
 802947a:	d1ee      	bne.n	802945a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 802947c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 802947e:	ac0c      	add	r4, sp, #48	; 0x30
 8029480:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8029484:	ed9d 0a08 	vldr	s0, [sp, #32]
 8029488:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 802948c:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8029490:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8029494:	b00d      	add	sp, #52	; 0x34
 8029496:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029498:	00000000 	.word	0x00000000

0802949c <_ZN8touchgfx9Matrix4x4C1Ev>:
 802949c:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80294cc <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 80294a0:	2300      	movs	r3, #0
 80294a2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80294a6:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 80294aa:	2200      	movs	r2, #0
 80294ac:	4293      	cmp	r3, r2
 80294ae:	f102 0201 	add.w	r2, r2, #1
 80294b2:	bf14      	ite	ne
 80294b4:	eef0 6a47 	vmovne.f32	s13, s14
 80294b8:	eef0 6a67 	vmoveq.f32	s13, s15
 80294bc:	2a04      	cmp	r2, #4
 80294be:	ece1 6a01 	vstmia	r1!, {s13}
 80294c2:	d1f3      	bne.n	80294ac <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80294c4:	3301      	adds	r3, #1
 80294c6:	2b04      	cmp	r3, #4
 80294c8:	d1ed      	bne.n	80294a6 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80294ca:	4770      	bx	lr
 80294cc:	00000000 	.word	0x00000000

080294d0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80294d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80294d4:	460c      	mov	r4, r1
 80294d6:	4605      	mov	r5, r0
 80294d8:	4690      	mov	r8, r2
 80294da:	f7ff ffdf 	bl	802949c <_ZN8touchgfx9Matrix4x4C1Ev>
 80294de:	4628      	mov	r0, r5
 80294e0:	4621      	mov	r1, r4
 80294e2:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80294e6:	2300      	movs	r3, #0
 80294e8:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8029528 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80294ec:	eb08 0603 	add.w	r6, r8, r3
 80294f0:	460f      	mov	r7, r1
 80294f2:	2400      	movs	r4, #0
 80294f4:	4632      	mov	r2, r6
 80294f6:	ecf7 6a01 	vldmia	r7!, {s13}
 80294fa:	ed92 7a00 	vldr	s14, [r2]
 80294fe:	3401      	adds	r4, #1
 8029500:	2c04      	cmp	r4, #4
 8029502:	f106 0610 	add.w	r6, r6, #16
 8029506:	eee6 7a87 	vfma.f32	s15, s13, s14
 802950a:	d1f3      	bne.n	80294f4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 802950c:	18c2      	adds	r2, r0, r3
 802950e:	3304      	adds	r3, #4
 8029510:	2b10      	cmp	r3, #16
 8029512:	edc2 7a00 	vstr	s15, [r2]
 8029516:	d1e7      	bne.n	80294e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8029518:	3110      	adds	r1, #16
 802951a:	4561      	cmp	r1, ip
 802951c:	f100 0010 	add.w	r0, r0, #16
 8029520:	d1e1      	bne.n	80294e6 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8029522:	4628      	mov	r0, r5
 8029524:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8029528:	00000000 	.word	0x00000000

0802952c <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 802952c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8029530:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8029534:	f100 0320 	add.w	r3, r0, #32
 8029538:	3030      	adds	r0, #48	; 0x30
 802953a:	ecf3 7a01 	vldmia	r3!, {s15}
 802953e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029542:	4283      	cmp	r3, r0
 8029544:	edc3 7a03 	vstr	s15, [r3, #12]
 8029548:	d1f7      	bne.n	802953a <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802954a:	4770      	bx	lr

0802954c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 802954c:	b510      	push	{r4, lr}
 802954e:	ed2d 8b02 	vpush	{d8}
 8029552:	4604      	mov	r4, r0
 8029554:	eef0 8a40 	vmov.f32	s17, s0
 8029558:	f001 fa7a 	bl	802aa50 <sinf>
 802955c:	eeb0 8a40 	vmov.f32	s16, s0
 8029560:	eeb0 0a68 	vmov.f32	s0, s17
 8029564:	f001 fa30 	bl	802a9c8 <cosf>
 8029568:	f104 0310 	add.w	r3, r4, #16
 802956c:	f104 0220 	add.w	r2, r4, #32
 8029570:	eeb1 6a48 	vneg.f32	s12, s16
 8029574:	edd3 7a04 	vldr	s15, [r3, #16]
 8029578:	edd3 6a00 	vldr	s13, [r3]
 802957c:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029580:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029584:	eea6 7a80 	vfma.f32	s14, s13, s0
 8029588:	eee6 7a88 	vfma.f32	s15, s13, s16
 802958c:	eca3 7a01 	vstmia	r3!, {s14}
 8029590:	429a      	cmp	r2, r3
 8029592:	edc3 7a03 	vstr	s15, [r3, #12]
 8029596:	d1ed      	bne.n	8029574 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8029598:	ecbd 8b02 	vpop	{d8}
 802959c:	4620      	mov	r0, r4
 802959e:	bd10      	pop	{r4, pc}

080295a0 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 80295a0:	b510      	push	{r4, lr}
 80295a2:	ed2d 8b02 	vpush	{d8}
 80295a6:	4604      	mov	r4, r0
 80295a8:	eef0 8a40 	vmov.f32	s17, s0
 80295ac:	f001 fa50 	bl	802aa50 <sinf>
 80295b0:	eeb0 8a40 	vmov.f32	s16, s0
 80295b4:	eeb0 0a68 	vmov.f32	s0, s17
 80295b8:	f001 fa06 	bl	802a9c8 <cosf>
 80295bc:	4623      	mov	r3, r4
 80295be:	f104 0210 	add.w	r2, r4, #16
 80295c2:	eeb1 6a48 	vneg.f32	s12, s16
 80295c6:	edd3 7a08 	vldr	s15, [r3, #32]
 80295ca:	edd3 6a00 	vldr	s13, [r3]
 80295ce:	ee27 7a88 	vmul.f32	s14, s15, s16
 80295d2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80295d6:	eea6 7a80 	vfma.f32	s14, s13, s0
 80295da:	eee6 7a26 	vfma.f32	s15, s12, s13
 80295de:	eca3 7a01 	vstmia	r3!, {s14}
 80295e2:	429a      	cmp	r2, r3
 80295e4:	edc3 7a07 	vstr	s15, [r3, #28]
 80295e8:	d1ed      	bne.n	80295c6 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80295ea:	ecbd 8b02 	vpop	{d8}
 80295ee:	4620      	mov	r0, r4
 80295f0:	bd10      	pop	{r4, pc}

080295f2 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80295f2:	b510      	push	{r4, lr}
 80295f4:	ed2d 8b02 	vpush	{d8}
 80295f8:	4604      	mov	r4, r0
 80295fa:	eef0 8a40 	vmov.f32	s17, s0
 80295fe:	f001 fa27 	bl	802aa50 <sinf>
 8029602:	eeb0 8a40 	vmov.f32	s16, s0
 8029606:	eeb0 0a68 	vmov.f32	s0, s17
 802960a:	f001 f9dd 	bl	802a9c8 <cosf>
 802960e:	4623      	mov	r3, r4
 8029610:	f104 0210 	add.w	r2, r4, #16
 8029614:	eeb1 6a48 	vneg.f32	s12, s16
 8029618:	edd3 7a04 	vldr	s15, [r3, #16]
 802961c:	edd3 6a00 	vldr	s13, [r3]
 8029620:	ee26 7a27 	vmul.f32	s14, s12, s15
 8029624:	ee67 7a80 	vmul.f32	s15, s15, s0
 8029628:	eea6 7a80 	vfma.f32	s14, s13, s0
 802962c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8029630:	eca3 7a01 	vstmia	r3!, {s14}
 8029634:	429a      	cmp	r2, r3
 8029636:	edc3 7a03 	vstr	s15, [r3, #12]
 802963a:	d1ed      	bne.n	8029618 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 802963c:	ecbd 8b02 	vpop	{d8}
 8029640:	4620      	mov	r0, r4
 8029642:	bd10      	pop	{r4, pc}

08029644 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8029644:	4603      	mov	r3, r0
 8029646:	f100 0210 	add.w	r2, r0, #16
 802964a:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 802964e:	edd3 7a00 	vldr	s15, [r3]
 8029652:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029656:	ece3 7a01 	vstmia	r3!, {s15}
 802965a:	4293      	cmp	r3, r2
 802965c:	d1f5      	bne.n	802964a <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 802965e:	4770      	bx	lr

08029660 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8029660:	f100 0310 	add.w	r3, r0, #16
 8029664:	f100 0220 	add.w	r2, r0, #32
 8029668:	ed93 7a08 	vldr	s14, [r3, #32]
 802966c:	edd3 7a00 	vldr	s15, [r3]
 8029670:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029674:	ece3 7a01 	vstmia	r3!, {s15}
 8029678:	4293      	cmp	r3, r2
 802967a:	d1f5      	bne.n	8029668 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 802967c:	4770      	bx	lr

0802967e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 802967e:	f100 0320 	add.w	r3, r0, #32
 8029682:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8029686:	ed93 7a04 	vldr	s14, [r3, #16]
 802968a:	edd3 7a00 	vldr	s15, [r3]
 802968e:	eee7 7a00 	vfma.f32	s15, s14, s0
 8029692:	ece3 7a01 	vstmia	r3!, {s15}
 8029696:	4293      	cmp	r3, r2
 8029698:	d1f5      	bne.n	8029686 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 802969a:	4770      	bx	lr

0802969c <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 802969c:	4603      	mov	r3, r0
 802969e:	f100 0210 	add.w	r2, r0, #16
 80296a2:	edd3 7a00 	vldr	s15, [r3]
 80296a6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80296aa:	ece3 7a01 	vstmia	r3!, {s15}
 80296ae:	4293      	cmp	r3, r2
 80296b0:	d1f7      	bne.n	80296a2 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 80296b2:	4770      	bx	lr

080296b4 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 80296b4:	f100 0310 	add.w	r3, r0, #16
 80296b8:	f100 0220 	add.w	r2, r0, #32
 80296bc:	edd3 7a00 	vldr	s15, [r3]
 80296c0:	ee67 7a80 	vmul.f32	s15, s15, s0
 80296c4:	ece3 7a01 	vstmia	r3!, {s15}
 80296c8:	4293      	cmp	r3, r2
 80296ca:	d1f7      	bne.n	80296bc <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 80296cc:	4770      	bx	lr

080296ce <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 80296ce:	f100 0320 	add.w	r3, r0, #32
 80296d2:	f100 0230 	add.w	r2, r0, #48	; 0x30
 80296d6:	edd3 7a00 	vldr	s15, [r3]
 80296da:	ee67 7a80 	vmul.f32	s15, s15, s0
 80296de:	ece3 7a01 	vstmia	r3!, {s15}
 80296e2:	4293      	cmp	r3, r2
 80296e4:	d1f7      	bne.n	80296d6 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 80296e6:	4770      	bx	lr

080296e8 <arm_max_f32>:
 80296e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80296ec:	1e4f      	subs	r7, r1, #1
 80296ee:	ea5f 0897 	movs.w	r8, r7, lsr #2
 80296f2:	f100 0e04 	add.w	lr, r0, #4
 80296f6:	edd0 7a00 	vldr	s15, [r0]
 80296fa:	d058      	beq.n	80297ae <arm_max_f32+0xc6>
 80296fc:	3014      	adds	r0, #20
 80296fe:	46c4      	mov	ip, r8
 8029700:	2604      	movs	r6, #4
 8029702:	2400      	movs	r4, #0
 8029704:	ed10 6a04 	vldr	s12, [r0, #-16]
 8029708:	ed50 6a03 	vldr	s13, [r0, #-12]
 802970c:	ed10 7a02 	vldr	s14, [r0, #-8]
 8029710:	ed50 5a01 	vldr	s11, [r0, #-4]
 8029714:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8029718:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802971c:	bfc8      	it	gt
 802971e:	eef0 7a46 	vmovgt.f32	s15, s12
 8029722:	f1a6 0503 	sub.w	r5, r6, #3
 8029726:	eef4 7ae6 	vcmpe.f32	s15, s13
 802972a:	bfc8      	it	gt
 802972c:	462c      	movgt	r4, r5
 802972e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029732:	bf48      	it	mi
 8029734:	eef0 7a66 	vmovmi.f32	s15, s13
 8029738:	f1a6 0502 	sub.w	r5, r6, #2
 802973c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8029740:	bf48      	it	mi
 8029742:	462c      	movmi	r4, r5
 8029744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029748:	bf48      	it	mi
 802974a:	eef0 7a47 	vmovmi.f32	s15, s14
 802974e:	f106 35ff 	add.w	r5, r6, #4294967295
 8029752:	eef4 7ae5 	vcmpe.f32	s15, s11
 8029756:	bf48      	it	mi
 8029758:	462c      	movmi	r4, r5
 802975a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802975e:	bf48      	it	mi
 8029760:	4634      	movmi	r4, r6
 8029762:	bf48      	it	mi
 8029764:	eef0 7a65 	vmovmi.f32	s15, s11
 8029768:	f1bc 0c01 	subs.w	ip, ip, #1
 802976c:	f106 0604 	add.w	r6, r6, #4
 8029770:	f100 0010 	add.w	r0, r0, #16
 8029774:	d1c6      	bne.n	8029704 <arm_max_f32+0x1c>
 8029776:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 802977a:	f017 0003 	ands.w	r0, r7, #3
 802977e:	d018      	beq.n	80297b2 <arm_max_f32+0xca>
 8029780:	1a08      	subs	r0, r1, r0
 8029782:	ecbe 7a01 	vldmia	lr!, {s14}
 8029786:	eeb4 7ae7 	vcmpe.f32	s14, s15
 802978a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802978e:	bfc8      	it	gt
 8029790:	4604      	movgt	r4, r0
 8029792:	f100 0001 	add.w	r0, r0, #1
 8029796:	bfd8      	it	le
 8029798:	eeb0 7a67 	vmovle.f32	s14, s15
 802979c:	4288      	cmp	r0, r1
 802979e:	eef0 7a47 	vmov.f32	s15, s14
 80297a2:	d1ee      	bne.n	8029782 <arm_max_f32+0x9a>
 80297a4:	ed82 7a00 	vstr	s14, [r2]
 80297a8:	601c      	str	r4, [r3, #0]
 80297aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80297ae:	4644      	mov	r4, r8
 80297b0:	e7e3      	b.n	802977a <arm_max_f32+0x92>
 80297b2:	eeb0 7a67 	vmov.f32	s14, s15
 80297b6:	e7f5      	b.n	80297a4 <arm_max_f32+0xbc>

080297b8 <arm_rfft_fast_init_f32>:
 80297b8:	084b      	lsrs	r3, r1, #1
 80297ba:	2b80      	cmp	r3, #128	; 0x80
 80297bc:	b410      	push	{r4}
 80297be:	8201      	strh	r1, [r0, #16]
 80297c0:	8003      	strh	r3, [r0, #0]
 80297c2:	d047      	beq.n	8029854 <arm_rfft_fast_init_f32+0x9c>
 80297c4:	d917      	bls.n	80297f6 <arm_rfft_fast_init_f32+0x3e>
 80297c6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80297ca:	d03d      	beq.n	8029848 <arm_rfft_fast_init_f32+0x90>
 80297cc:	d929      	bls.n	8029822 <arm_rfft_fast_init_f32+0x6a>
 80297ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80297d2:	d020      	beq.n	8029816 <arm_rfft_fast_init_f32+0x5e>
 80297d4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80297d8:	d113      	bne.n	8029802 <arm_rfft_fast_init_f32+0x4a>
 80297da:	4921      	ldr	r1, [pc, #132]	; (8029860 <arm_rfft_fast_init_f32+0xa8>)
 80297dc:	4a21      	ldr	r2, [pc, #132]	; (8029864 <arm_rfft_fast_init_f32+0xac>)
 80297de:	4b22      	ldr	r3, [pc, #136]	; (8029868 <arm_rfft_fast_init_f32+0xb0>)
 80297e0:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 80297e4:	8184      	strh	r4, [r0, #12]
 80297e6:	6081      	str	r1, [r0, #8]
 80297e8:	6042      	str	r2, [r0, #4]
 80297ea:	6143      	str	r3, [r0, #20]
 80297ec:	2000      	movs	r0, #0
 80297ee:	b240      	sxtb	r0, r0
 80297f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80297f4:	4770      	bx	lr
 80297f6:	2b20      	cmp	r3, #32
 80297f8:	d01c      	beq.n	8029834 <arm_rfft_fast_init_f32+0x7c>
 80297fa:	2b40      	cmp	r3, #64	; 0x40
 80297fc:	d006      	beq.n	802980c <arm_rfft_fast_init_f32+0x54>
 80297fe:	2b10      	cmp	r3, #16
 8029800:	d01d      	beq.n	802983e <arm_rfft_fast_init_f32+0x86>
 8029802:	20ff      	movs	r0, #255	; 0xff
 8029804:	b240      	sxtb	r0, r0
 8029806:	f85d 4b04 	ldr.w	r4, [sp], #4
 802980a:	4770      	bx	lr
 802980c:	2438      	movs	r4, #56	; 0x38
 802980e:	4917      	ldr	r1, [pc, #92]	; (802986c <arm_rfft_fast_init_f32+0xb4>)
 8029810:	4a17      	ldr	r2, [pc, #92]	; (8029870 <arm_rfft_fast_init_f32+0xb8>)
 8029812:	4b18      	ldr	r3, [pc, #96]	; (8029874 <arm_rfft_fast_init_f32+0xbc>)
 8029814:	e7e6      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 8029816:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 802981a:	4917      	ldr	r1, [pc, #92]	; (8029878 <arm_rfft_fast_init_f32+0xc0>)
 802981c:	4a17      	ldr	r2, [pc, #92]	; (802987c <arm_rfft_fast_init_f32+0xc4>)
 802981e:	4b18      	ldr	r3, [pc, #96]	; (8029880 <arm_rfft_fast_init_f32+0xc8>)
 8029820:	e7e0      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 8029822:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8029826:	d1ec      	bne.n	8029802 <arm_rfft_fast_init_f32+0x4a>
 8029828:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 802982c:	4915      	ldr	r1, [pc, #84]	; (8029884 <arm_rfft_fast_init_f32+0xcc>)
 802982e:	4a16      	ldr	r2, [pc, #88]	; (8029888 <arm_rfft_fast_init_f32+0xd0>)
 8029830:	4b16      	ldr	r3, [pc, #88]	; (802988c <arm_rfft_fast_init_f32+0xd4>)
 8029832:	e7d7      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 8029834:	2430      	movs	r4, #48	; 0x30
 8029836:	4916      	ldr	r1, [pc, #88]	; (8029890 <arm_rfft_fast_init_f32+0xd8>)
 8029838:	4a16      	ldr	r2, [pc, #88]	; (8029894 <arm_rfft_fast_init_f32+0xdc>)
 802983a:	4b17      	ldr	r3, [pc, #92]	; (8029898 <arm_rfft_fast_init_f32+0xe0>)
 802983c:	e7d2      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 802983e:	2414      	movs	r4, #20
 8029840:	4916      	ldr	r1, [pc, #88]	; (802989c <arm_rfft_fast_init_f32+0xe4>)
 8029842:	4a17      	ldr	r2, [pc, #92]	; (80298a0 <arm_rfft_fast_init_f32+0xe8>)
 8029844:	4b17      	ldr	r3, [pc, #92]	; (80298a4 <arm_rfft_fast_init_f32+0xec>)
 8029846:	e7cd      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 8029848:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 802984c:	4916      	ldr	r1, [pc, #88]	; (80298a8 <arm_rfft_fast_init_f32+0xf0>)
 802984e:	4a17      	ldr	r2, [pc, #92]	; (80298ac <arm_rfft_fast_init_f32+0xf4>)
 8029850:	4b17      	ldr	r3, [pc, #92]	; (80298b0 <arm_rfft_fast_init_f32+0xf8>)
 8029852:	e7c7      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 8029854:	24d0      	movs	r4, #208	; 0xd0
 8029856:	4917      	ldr	r1, [pc, #92]	; (80298b4 <arm_rfft_fast_init_f32+0xfc>)
 8029858:	4a17      	ldr	r2, [pc, #92]	; (80298b8 <arm_rfft_fast_init_f32+0x100>)
 802985a:	4b18      	ldr	r3, [pc, #96]	; (80298bc <arm_rfft_fast_init_f32+0x104>)
 802985c:	e7c2      	b.n	80297e4 <arm_rfft_fast_init_f32+0x2c>
 802985e:	bf00      	nop
 8029860:	0803ed88 	.word	0x0803ed88
 8029864:	0802ff80 	.word	0x0802ff80
 8029868:	080360f0 	.word	0x080360f0
 802986c:	08034080 	.word	0x08034080
 8029870:	08040b48 	.word	0x08040b48
 8029874:	08043038 	.word	0x08043038
 8029878:	0803ca70 	.word	0x0803ca70
 802987c:	0803a970 	.word	0x0803a970
 8029880:	080340f0 	.word	0x080340f0
 8029884:	08042cc8 	.word	0x08042cc8
 8029888:	0803a0f0 	.word	0x0803a0f0
 802988c:	08040d48 	.word	0x08040d48
 8029890:	0803d928 	.word	0x0803d928
 8029894:	0803c970 	.word	0x0803c970
 8029898:	08033f80 	.word	0x08033f80
 802989c:	0803d880 	.word	0x0803d880
 80298a0:	0803a8f0 	.word	0x0803a8f0
 80298a4:	0803d8a8 	.word	0x0803d8a8
 80298a8:	08041548 	.word	0x08041548
 80298ac:	0803dd88 	.word	0x0803dd88
 80298b0:	080418c8 	.word	0x080418c8
 80298b4:	08043238 	.word	0x08043238
 80298b8:	0803d988 	.word	0x0803d988
 80298bc:	080428c8 	.word	0x080428c8

080298c0 <arm_rfft_fast_f32>:
 80298c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80298c4:	8a06      	ldrh	r6, [r0, #16]
 80298c6:	0876      	lsrs	r6, r6, #1
 80298c8:	4607      	mov	r7, r0
 80298ca:	4615      	mov	r5, r2
 80298cc:	8006      	strh	r6, [r0, #0]
 80298ce:	460c      	mov	r4, r1
 80298d0:	2b00      	cmp	r3, #0
 80298d2:	d15c      	bne.n	802998e <arm_rfft_fast_f32+0xce>
 80298d4:	461a      	mov	r2, r3
 80298d6:	2301      	movs	r3, #1
 80298d8:	f000 fbe6 	bl	802a0a8 <arm_cfft_f32>
 80298dc:	edd4 7a00 	vldr	s15, [r4]
 80298e0:	ed94 7a01 	vldr	s14, [r4, #4]
 80298e4:	883e      	ldrh	r6, [r7, #0]
 80298e6:	6978      	ldr	r0, [r7, #20]
 80298e8:	ee37 7a07 	vadd.f32	s14, s14, s14
 80298ec:	ee77 7aa7 	vadd.f32	s15, s15, s15
 80298f0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80298f4:	ee77 6a87 	vadd.f32	s13, s15, s14
 80298f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80298fc:	3e01      	subs	r6, #1
 80298fe:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8029902:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029906:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 802990a:	ed85 7a00 	vstr	s14, [r5]
 802990e:	edc5 7a01 	vstr	s15, [r5, #4]
 8029912:	3010      	adds	r0, #16
 8029914:	f105 0210 	add.w	r2, r5, #16
 8029918:	3b08      	subs	r3, #8
 802991a:	f104 0110 	add.w	r1, r4, #16
 802991e:	ed51 4a02 	vldr	s9, [r1, #-8]
 8029922:	ed93 5a02 	vldr	s10, [r3, #8]
 8029926:	ed11 7a01 	vldr	s14, [r1, #-4]
 802992a:	ed10 6a02 	vldr	s12, [r0, #-8]
 802992e:	edd3 5a03 	vldr	s11, [r3, #12]
 8029932:	ed50 6a01 	vldr	s13, [r0, #-4]
 8029936:	ee75 7a64 	vsub.f32	s15, s10, s9
 802993a:	ee35 4a87 	vadd.f32	s8, s11, s14
 802993e:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029942:	ee77 5a65 	vsub.f32	s11, s14, s11
 8029946:	ee66 4a27 	vmul.f32	s9, s12, s15
 802994a:	ee26 7aa7 	vmul.f32	s14, s13, s15
 802994e:	ee34 5a85 	vadd.f32	s10, s9, s10
 8029952:	ee26 6a04 	vmul.f32	s12, s12, s8
 8029956:	ee66 6a84 	vmul.f32	s13, s13, s8
 802995a:	ee77 7a25 	vadd.f32	s15, s14, s11
 802995e:	ee76 6a85 	vadd.f32	s13, s13, s10
 8029962:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029966:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802996a:	ee67 7aa3 	vmul.f32	s15, s15, s7
 802996e:	3e01      	subs	r6, #1
 8029970:	ed42 6a02 	vstr	s13, [r2, #-8]
 8029974:	ed42 7a01 	vstr	s15, [r2, #-4]
 8029978:	f1a3 0308 	sub.w	r3, r3, #8
 802997c:	f101 0108 	add.w	r1, r1, #8
 8029980:	f100 0008 	add.w	r0, r0, #8
 8029984:	f102 0208 	add.w	r2, r2, #8
 8029988:	d1c9      	bne.n	802991e <arm_rfft_fast_f32+0x5e>
 802998a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802998e:	edd1 7a00 	vldr	s15, [r1]
 8029992:	edd1 6a01 	vldr	s13, [r1, #4]
 8029996:	6941      	ldr	r1, [r0, #20]
 8029998:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802999c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80299a0:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 80299a4:	ee27 7a23 	vmul.f32	s14, s14, s7
 80299a8:	ee67 7aa3 	vmul.f32	s15, s15, s7
 80299ac:	3e01      	subs	r6, #1
 80299ae:	ed82 7a00 	vstr	s14, [r2]
 80299b2:	edc2 7a01 	vstr	s15, [r2, #4]
 80299b6:	00f0      	lsls	r0, r6, #3
 80299b8:	b3ee      	cbz	r6, 8029a36 <arm_rfft_fast_f32+0x176>
 80299ba:	3808      	subs	r0, #8
 80299bc:	f101 0e10 	add.w	lr, r1, #16
 80299c0:	4420      	add	r0, r4
 80299c2:	f104 0110 	add.w	r1, r4, #16
 80299c6:	f102 0c10 	add.w	ip, r2, #16
 80299ca:	ed90 7a02 	vldr	s14, [r0, #8]
 80299ce:	ed51 6a02 	vldr	s13, [r1, #-8]
 80299d2:	ed1e 6a02 	vldr	s12, [lr, #-8]
 80299d6:	ed90 4a03 	vldr	s8, [r0, #12]
 80299da:	ed11 5a01 	vldr	s10, [r1, #-4]
 80299de:	ed5e 5a01 	vldr	s11, [lr, #-4]
 80299e2:	ee76 7ac7 	vsub.f32	s15, s13, s14
 80299e6:	ee74 4a05 	vadd.f32	s9, s8, s10
 80299ea:	ee26 3a27 	vmul.f32	s6, s12, s15
 80299ee:	ee77 6a26 	vadd.f32	s13, s14, s13
 80299f2:	ee35 5a44 	vsub.f32	s10, s10, s8
 80299f6:	ee25 7aa7 	vmul.f32	s14, s11, s15
 80299fa:	ee76 6ac3 	vsub.f32	s13, s13, s6
 80299fe:	ee77 7a05 	vadd.f32	s15, s14, s10
 8029a02:	ee26 6a24 	vmul.f32	s12, s12, s9
 8029a06:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8029a0a:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8029a0e:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8029a12:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8029a16:	ee27 7a23 	vmul.f32	s14, s14, s7
 8029a1a:	3e01      	subs	r6, #1
 8029a1c:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8029a20:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8029a24:	f1a0 0008 	sub.w	r0, r0, #8
 8029a28:	f101 0108 	add.w	r1, r1, #8
 8029a2c:	f10e 0e08 	add.w	lr, lr, #8
 8029a30:	f10c 0c08 	add.w	ip, ip, #8
 8029a34:	d1c9      	bne.n	80299ca <arm_rfft_fast_f32+0x10a>
 8029a36:	4638      	mov	r0, r7
 8029a38:	4629      	mov	r1, r5
 8029a3a:	461a      	mov	r2, r3
 8029a3c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029a40:	2301      	movs	r3, #1
 8029a42:	f000 bb31 	b.w	802a0a8 <arm_cfft_f32>
 8029a46:	bf00      	nop

08029a48 <arm_cfft_radix8by2_f32>:
 8029a48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029a4c:	ed2d 8b08 	vpush	{d8-d11}
 8029a50:	f8b0 e000 	ldrh.w	lr, [r0]
 8029a54:	6842      	ldr	r2, [r0, #4]
 8029a56:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8029a5a:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8029a5e:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8029a62:	4607      	mov	r7, r0
 8029a64:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8029a68:	f000 80af 	beq.w	8029bca <arm_cfft_radix8by2_f32+0x182>
 8029a6c:	3310      	adds	r3, #16
 8029a6e:	18ce      	adds	r6, r1, r3
 8029a70:	3210      	adds	r2, #16
 8029a72:	4443      	add	r3, r8
 8029a74:	f101 0510 	add.w	r5, r1, #16
 8029a78:	f108 0410 	add.w	r4, r8, #16
 8029a7c:	ed54 1a04 	vldr	s3, [r4, #-16]
 8029a80:	ed13 4a04 	vldr	s8, [r3, #-16]
 8029a84:	ed53 3a03 	vldr	s7, [r3, #-12]
 8029a88:	ed53 5a02 	vldr	s11, [r3, #-8]
 8029a8c:	ed13 5a01 	vldr	s10, [r3, #-4]
 8029a90:	ed54 6a03 	vldr	s13, [r4, #-12]
 8029a94:	ed14 0a02 	vldr	s0, [r4, #-8]
 8029a98:	ed16 2a04 	vldr	s4, [r6, #-16]
 8029a9c:	ed56 2a03 	vldr	s5, [r6, #-12]
 8029aa0:	ed15 6a03 	vldr	s12, [r5, #-12]
 8029aa4:	ed15 7a01 	vldr	s14, [r5, #-4]
 8029aa8:	ed15 3a04 	vldr	s6, [r5, #-16]
 8029aac:	ed54 7a01 	vldr	s15, [r4, #-4]
 8029ab0:	ed56 0a02 	vldr	s1, [r6, #-8]
 8029ab4:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029ab8:	ed55 4a02 	vldr	s9, [r5, #-8]
 8029abc:	ee73 ba21 	vadd.f32	s23, s6, s3
 8029ac0:	ee36 ba26 	vadd.f32	s22, s12, s13
 8029ac4:	ee37 aa27 	vadd.f32	s20, s14, s15
 8029ac8:	ee72 9a04 	vadd.f32	s19, s4, s8
 8029acc:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8029ad0:	ee31 8a05 	vadd.f32	s16, s2, s10
 8029ad4:	ee74 aa80 	vadd.f32	s21, s9, s0
 8029ad8:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8029adc:	ed45 ba04 	vstr	s23, [r5, #-16]
 8029ae0:	ed05 ba03 	vstr	s22, [r5, #-12]
 8029ae4:	ed45 aa02 	vstr	s21, [r5, #-8]
 8029ae8:	ed05 aa01 	vstr	s20, [r5, #-4]
 8029aec:	ed06 8a01 	vstr	s16, [r6, #-4]
 8029af0:	ed46 9a04 	vstr	s19, [r6, #-16]
 8029af4:	ed06 9a03 	vstr	s18, [r6, #-12]
 8029af8:	ed46 8a02 	vstr	s17, [r6, #-8]
 8029afc:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029b00:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8029b04:	ed12 6a03 	vldr	s12, [r2, #-12]
 8029b08:	ed52 2a04 	vldr	s5, [r2, #-16]
 8029b0c:	ee33 3a61 	vsub.f32	s6, s6, s3
 8029b10:	ee34 4a42 	vsub.f32	s8, s8, s4
 8029b14:	ee26 8a86 	vmul.f32	s16, s13, s12
 8029b18:	ee24 2a06 	vmul.f32	s4, s8, s12
 8029b1c:	ee63 1a22 	vmul.f32	s3, s6, s5
 8029b20:	ee24 4a22 	vmul.f32	s8, s8, s5
 8029b24:	ee23 3a06 	vmul.f32	s6, s6, s12
 8029b28:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8029b2c:	ee23 6a86 	vmul.f32	s12, s7, s12
 8029b30:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029b34:	ee36 6a04 	vadd.f32	s12, s12, s8
 8029b38:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8029b3c:	ee72 3a63 	vsub.f32	s7, s4, s7
 8029b40:	ee71 2a88 	vadd.f32	s5, s3, s16
 8029b44:	ed44 6a03 	vstr	s13, [r4, #-12]
 8029b48:	ed44 2a04 	vstr	s5, [r4, #-16]
 8029b4c:	ed43 3a04 	vstr	s7, [r3, #-16]
 8029b50:	ed03 6a03 	vstr	s12, [r3, #-12]
 8029b54:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029b58:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8029b5c:	ed12 7a01 	vldr	s14, [r2, #-4]
 8029b60:	ed52 5a02 	vldr	s11, [r2, #-8]
 8029b64:	ee35 6a41 	vsub.f32	s12, s10, s2
 8029b68:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8029b6c:	ee67 3a87 	vmul.f32	s7, s15, s14
 8029b70:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029b74:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8029b78:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8029b7c:	ee64 4a87 	vmul.f32	s9, s9, s14
 8029b80:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8029b84:	ee26 7a07 	vmul.f32	s14, s12, s14
 8029b88:	ee26 6a25 	vmul.f32	s12, s12, s11
 8029b8c:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8029b90:	ee74 5a23 	vadd.f32	s11, s8, s7
 8029b94:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029b98:	ee37 7a26 	vadd.f32	s14, s14, s13
 8029b9c:	f1be 0e01 	subs.w	lr, lr, #1
 8029ba0:	ed44 5a02 	vstr	s11, [r4, #-8]
 8029ba4:	f105 0510 	add.w	r5, r5, #16
 8029ba8:	ed44 7a01 	vstr	s15, [r4, #-4]
 8029bac:	f106 0610 	add.w	r6, r6, #16
 8029bb0:	ed03 6a02 	vstr	s12, [r3, #-8]
 8029bb4:	ed03 7a01 	vstr	s14, [r3, #-4]
 8029bb8:	f102 0210 	add.w	r2, r2, #16
 8029bbc:	f104 0410 	add.w	r4, r4, #16
 8029bc0:	f103 0310 	add.w	r3, r3, #16
 8029bc4:	f47f af5a 	bne.w	8029a7c <arm_cfft_radix8by2_f32+0x34>
 8029bc8:	687a      	ldr	r2, [r7, #4]
 8029bca:	fa1f f48c 	uxth.w	r4, ip
 8029bce:	4608      	mov	r0, r1
 8029bd0:	2302      	movs	r3, #2
 8029bd2:	4621      	mov	r1, r4
 8029bd4:	f000 fbca 	bl	802a36c <arm_radix8_butterfly_f32>
 8029bd8:	ecbd 8b08 	vpop	{d8-d11}
 8029bdc:	4640      	mov	r0, r8
 8029bde:	4621      	mov	r1, r4
 8029be0:	687a      	ldr	r2, [r7, #4]
 8029be2:	2302      	movs	r3, #2
 8029be4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029be8:	f000 bbc0 	b.w	802a36c <arm_radix8_butterfly_f32>

08029bec <arm_cfft_radix8by4_f32>:
 8029bec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029bf0:	ed2d 8b0a 	vpush	{d8-d12}
 8029bf4:	8802      	ldrh	r2, [r0, #0]
 8029bf6:	ed91 6a00 	vldr	s12, [r1]
 8029bfa:	b08f      	sub	sp, #60	; 0x3c
 8029bfc:	460f      	mov	r7, r1
 8029bfe:	0852      	lsrs	r2, r2, #1
 8029c00:	0093      	lsls	r3, r2, #2
 8029c02:	900c      	str	r0, [sp, #48]	; 0x30
 8029c04:	9103      	str	r1, [sp, #12]
 8029c06:	6841      	ldr	r1, [r0, #4]
 8029c08:	ed97 7a01 	vldr	s14, [r7, #4]
 8029c0c:	4638      	mov	r0, r7
 8029c0e:	4418      	add	r0, r3
 8029c10:	4606      	mov	r6, r0
 8029c12:	9009      	str	r0, [sp, #36]	; 0x24
 8029c14:	4418      	add	r0, r3
 8029c16:	edd0 6a00 	vldr	s13, [r0]
 8029c1a:	edd6 3a00 	vldr	s7, [r6]
 8029c1e:	edd6 2a01 	vldr	s5, [r6, #4]
 8029c22:	edd0 7a01 	vldr	s15, [r0, #4]
 8029c26:	900a      	str	r0, [sp, #40]	; 0x28
 8029c28:	ee76 5a26 	vadd.f32	s11, s12, s13
 8029c2c:	4604      	mov	r4, r0
 8029c2e:	4625      	mov	r5, r4
 8029c30:	441c      	add	r4, r3
 8029c32:	ed94 4a00 	vldr	s8, [r4]
 8029c36:	ed94 5a01 	vldr	s10, [r4, #4]
 8029c3a:	9401      	str	r4, [sp, #4]
 8029c3c:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8029c40:	4630      	mov	r0, r6
 8029c42:	ee74 4a24 	vadd.f32	s9, s8, s9
 8029c46:	463e      	mov	r6, r7
 8029c48:	ee14 ea90 	vmov	lr, s9
 8029c4c:	ee76 6a66 	vsub.f32	s13, s12, s13
 8029c50:	f846 eb08 	str.w	lr, [r6], #8
 8029c54:	ee37 6a27 	vadd.f32	s12, s14, s15
 8029c58:	edd0 4a01 	vldr	s9, [r0, #4]
 8029c5c:	9604      	str	r6, [sp, #16]
 8029c5e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029c62:	9e01      	ldr	r6, [sp, #4]
 8029c64:	ee32 3aa6 	vadd.f32	s6, s5, s13
 8029c68:	ed96 2a01 	vldr	s4, [r6, #4]
 8029c6c:	ee36 7a24 	vadd.f32	s14, s12, s9
 8029c70:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8029c74:	ee77 4ae3 	vsub.f32	s9, s15, s7
 8029c78:	ee36 6a62 	vsub.f32	s12, s12, s5
 8029c7c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8029c80:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8029c84:	ee73 3a45 	vsub.f32	s7, s6, s10
 8029c88:	4604      	mov	r4, r0
 8029c8a:	ee36 6a45 	vsub.f32	s12, s12, s10
 8029c8e:	ee75 6a26 	vadd.f32	s13, s10, s13
 8029c92:	46a3      	mov	fp, r4
 8029c94:	ee37 7a02 	vadd.f32	s14, s14, s4
 8029c98:	ee34 5a84 	vadd.f32	s10, s9, s8
 8029c9c:	ee13 8a90 	vmov	r8, s7
 8029ca0:	46a4      	mov	ip, r4
 8029ca2:	ee75 5ac4 	vsub.f32	s11, s11, s8
 8029ca6:	ed87 7a01 	vstr	s14, [r7, #4]
 8029caa:	f84b 8b08 	str.w	r8, [fp], #8
 8029cae:	f1ac 0704 	sub.w	r7, ip, #4
 8029cb2:	ed8c 5a01 	vstr	s10, [ip, #4]
 8029cb6:	f101 0c08 	add.w	ip, r1, #8
 8029cba:	462c      	mov	r4, r5
 8029cbc:	f8cd c014 	str.w	ip, [sp, #20]
 8029cc0:	ee15 ca90 	vmov	ip, s11
 8029cc4:	f844 cb08 	str.w	ip, [r4], #8
 8029cc8:	9407      	str	r4, [sp, #28]
 8029cca:	f101 0410 	add.w	r4, r1, #16
 8029cce:	ed85 6a01 	vstr	s12, [r5, #4]
 8029cd2:	0852      	lsrs	r2, r2, #1
 8029cd4:	9402      	str	r4, [sp, #8]
 8029cd6:	462c      	mov	r4, r5
 8029cd8:	f101 0518 	add.w	r5, r1, #24
 8029cdc:	920b      	str	r2, [sp, #44]	; 0x2c
 8029cde:	46b2      	mov	sl, r6
 8029ce0:	9506      	str	r5, [sp, #24]
 8029ce2:	ee77 7ac4 	vsub.f32	s15, s15, s8
 8029ce6:	3a02      	subs	r2, #2
 8029ce8:	ee16 5a90 	vmov	r5, s13
 8029cec:	46b6      	mov	lr, r6
 8029cee:	4630      	mov	r0, r6
 8029cf0:	0852      	lsrs	r2, r2, #1
 8029cf2:	f84a 5b08 	str.w	r5, [sl], #8
 8029cf6:	f1a0 0604 	sub.w	r6, r0, #4
 8029cfa:	edce 7a01 	vstr	s15, [lr, #4]
 8029cfe:	9208      	str	r2, [sp, #32]
 8029d00:	f000 8130 	beq.w	8029f64 <arm_cfft_radix8by4_f32+0x378>
 8029d04:	4691      	mov	r9, r2
 8029d06:	9a03      	ldr	r2, [sp, #12]
 8029d08:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8029d0c:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8029d10:	3b08      	subs	r3, #8
 8029d12:	f102 0510 	add.w	r5, r2, #16
 8029d16:	f101 0c20 	add.w	ip, r1, #32
 8029d1a:	f1a4 020c 	sub.w	r2, r4, #12
 8029d1e:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8029d22:	4433      	add	r3, r6
 8029d24:	3410      	adds	r4, #16
 8029d26:	4650      	mov	r0, sl
 8029d28:	4659      	mov	r1, fp
 8029d2a:	ed55 3a02 	vldr	s7, [r5, #-8]
 8029d2e:	ed14 5a02 	vldr	s10, [r4, #-8]
 8029d32:	ed91 7a00 	vldr	s14, [r1]
 8029d36:	edd0 7a00 	vldr	s15, [r0]
 8029d3a:	ed15 4a01 	vldr	s8, [r5, #-4]
 8029d3e:	ed54 5a01 	vldr	s11, [r4, #-4]
 8029d42:	edd0 6a01 	vldr	s13, [r0, #4]
 8029d46:	ed91 6a01 	vldr	s12, [r1, #4]
 8029d4a:	ee33 8a85 	vadd.f32	s16, s7, s10
 8029d4e:	ee34 0a25 	vadd.f32	s0, s8, s11
 8029d52:	ee78 4a07 	vadd.f32	s9, s16, s14
 8029d56:	ee74 5a65 	vsub.f32	s11, s8, s11
 8029d5a:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8029d5e:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8029d62:	ed45 4a02 	vstr	s9, [r5, #-8]
 8029d66:	edd1 4a01 	vldr	s9, [r1, #4]
 8029d6a:	ed90 4a01 	vldr	s8, [r0, #4]
 8029d6e:	ee70 4a24 	vadd.f32	s9, s0, s9
 8029d72:	ee76 aa05 	vadd.f32	s21, s12, s10
 8029d76:	ee74 4a84 	vadd.f32	s9, s9, s8
 8029d7a:	ee35 aac7 	vsub.f32	s20, s11, s14
 8029d7e:	ed45 4a01 	vstr	s9, [r5, #-4]
 8029d82:	edd6 1a00 	vldr	s3, [r6]
 8029d86:	edd7 0a00 	vldr	s1, [r7]
 8029d8a:	ed92 4a02 	vldr	s8, [r2, #8]
 8029d8e:	edd3 3a02 	vldr	s7, [r3, #8]
 8029d92:	ed93 2a01 	vldr	s4, [r3, #4]
 8029d96:	ed16 1a01 	vldr	s2, [r6, #-4]
 8029d9a:	edd2 2a01 	vldr	s5, [r2, #4]
 8029d9e:	ed57 9a01 	vldr	s19, [r7, #-4]
 8029da2:	ee70 4aa1 	vadd.f32	s9, s1, s3
 8029da6:	ee39 3a81 	vadd.f32	s6, s19, s2
 8029daa:	ee74 8a84 	vadd.f32	s17, s9, s8
 8029dae:	ee70 1ae1 	vsub.f32	s3, s1, s3
 8029db2:	ee73 8aa8 	vadd.f32	s17, s7, s17
 8029db6:	ee7a aae6 	vsub.f32	s21, s21, s13
 8029dba:	ee18 aa90 	vmov	sl, s17
 8029dbe:	f847 a908 	str.w	sl, [r7], #-8
 8029dc2:	edd2 8a01 	vldr	s17, [r2, #4]
 8029dc6:	ed93 9a01 	vldr	s18, [r3, #4]
 8029dca:	ee73 8a28 	vadd.f32	s17, s6, s17
 8029dce:	ee3a aa27 	vadd.f32	s20, s20, s15
 8029dd2:	ee78 8a89 	vadd.f32	s17, s17, s18
 8029dd6:	ee74 0a63 	vsub.f32	s1, s8, s7
 8029dda:	edc7 8a01 	vstr	s17, [r7, #4]
 8029dde:	ed18 ba02 	vldr	s22, [r8, #-8]
 8029de2:	ed58 8a01 	vldr	s17, [r8, #-4]
 8029de6:	ee39 1ac1 	vsub.f32	s2, s19, s2
 8029dea:	ee6a ba28 	vmul.f32	s23, s20, s17
 8029dee:	ee2a ca8b 	vmul.f32	s24, s21, s22
 8029df2:	ee71 9ae2 	vsub.f32	s19, s3, s5
 8029df6:	ee30 9a81 	vadd.f32	s18, s1, s2
 8029dfa:	ee79 9a82 	vadd.f32	s19, s19, s4
 8029dfe:	ee3c ca2b 	vadd.f32	s24, s24, s23
 8029e02:	ee6a aaa8 	vmul.f32	s21, s21, s17
 8029e06:	ee69 baa8 	vmul.f32	s23, s19, s17
 8029e0a:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8029e0e:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8029e12:	ee69 8a28 	vmul.f32	s17, s18, s17
 8029e16:	ee29 ba0b 	vmul.f32	s22, s18, s22
 8029e1a:	ee1c aa10 	vmov	sl, s24
 8029e1e:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8029e22:	f841 ab08 	str.w	sl, [r1], #8
 8029e26:	ee3a aa6a 	vsub.f32	s20, s20, s21
 8029e2a:	ee3b bacb 	vsub.f32	s22, s23, s22
 8029e2e:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8029e32:	ee33 3a62 	vsub.f32	s6, s6, s5
 8029e36:	ed01 aa01 	vstr	s20, [r1, #-4]
 8029e3a:	edc2 8a01 	vstr	s17, [r2, #4]
 8029e3e:	ed82 ba02 	vstr	s22, [r2, #8]
 8029e42:	ed5c 4a04 	vldr	s9, [ip, #-16]
 8029e46:	ee74 3a63 	vsub.f32	s7, s8, s7
 8029e4a:	ee38 8a47 	vsub.f32	s16, s16, s14
 8029e4e:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8029e52:	ee30 0a46 	vsub.f32	s0, s0, s12
 8029e56:	ee33 3a42 	vsub.f32	s6, s6, s4
 8029e5a:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029e5e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8029e62:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 8029e66:	ee63 8a04 	vmul.f32	s17, s6, s8
 8029e6a:	ee28 aa24 	vmul.f32	s20, s16, s9
 8029e6e:	ee60 9a04 	vmul.f32	s19, s0, s8
 8029e72:	ee28 8a04 	vmul.f32	s16, s16, s8
 8029e76:	ee20 0a24 	vmul.f32	s0, s0, s9
 8029e7a:	ee63 3a84 	vmul.f32	s7, s7, s8
 8029e7e:	ee39 4a68 	vsub.f32	s8, s18, s17
 8029e82:	ee7a 9a29 	vadd.f32	s19, s20, s19
 8029e86:	ee14 aa10 	vmov	sl, s8
 8029e8a:	ee30 0a48 	vsub.f32	s0, s0, s16
 8029e8e:	ee63 4a24 	vmul.f32	s9, s6, s9
 8029e92:	ed44 9a02 	vstr	s19, [r4, #-8]
 8029e96:	ee73 3ae4 	vsub.f32	s7, s7, s9
 8029e9a:	ed04 0a01 	vstr	s0, [r4, #-4]
 8029e9e:	f846 a908 	str.w	sl, [r6], #-8
 8029ea2:	ee35 6a46 	vsub.f32	s12, s10, s12
 8029ea6:	ee35 7a87 	vadd.f32	s14, s11, s14
 8029eaa:	edc6 3a01 	vstr	s7, [r6, #4]
 8029eae:	ee76 6a86 	vadd.f32	s13, s13, s12
 8029eb2:	ee77 7a67 	vsub.f32	s15, s14, s15
 8029eb6:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 8029eba:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 8029ebe:	ee67 5a86 	vmul.f32	s11, s15, s12
 8029ec2:	ee26 5a87 	vmul.f32	s10, s13, s14
 8029ec6:	ee72 2a62 	vsub.f32	s5, s4, s5
 8029eca:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029ece:	ee72 2ae1 	vsub.f32	s5, s5, s3
 8029ed2:	ee75 5a25 	vadd.f32	s11, s10, s11
 8029ed6:	ee62 0a86 	vmul.f32	s1, s5, s12
 8029eda:	ee66 6a86 	vmul.f32	s13, s13, s12
 8029ede:	ee67 7a87 	vmul.f32	s15, s15, s14
 8029ee2:	ee21 6a06 	vmul.f32	s12, s2, s12
 8029ee6:	ee62 2a87 	vmul.f32	s5, s5, s14
 8029eea:	ee21 1a07 	vmul.f32	s2, s2, s14
 8029eee:	ee15 aa90 	vmov	sl, s11
 8029ef2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029ef6:	f840 ab08 	str.w	sl, [r0], #8
 8029efa:	ee30 1ac1 	vsub.f32	s2, s1, s2
 8029efe:	ee76 2a22 	vadd.f32	s5, s12, s5
 8029f02:	f1b9 0901 	subs.w	r9, r9, #1
 8029f06:	ed40 7a01 	vstr	s15, [r0, #-4]
 8029f0a:	f105 0508 	add.w	r5, r5, #8
 8029f0e:	ed83 1a02 	vstr	s2, [r3, #8]
 8029f12:	edc3 2a01 	vstr	s5, [r3, #4]
 8029f16:	f108 0808 	add.w	r8, r8, #8
 8029f1a:	f1a2 0208 	sub.w	r2, r2, #8
 8029f1e:	f10c 0c10 	add.w	ip, ip, #16
 8029f22:	f104 0408 	add.w	r4, r4, #8
 8029f26:	f10e 0e18 	add.w	lr, lr, #24
 8029f2a:	f1a3 0308 	sub.w	r3, r3, #8
 8029f2e:	f47f aefc 	bne.w	8029d2a <arm_cfft_radix8by4_f32+0x13e>
 8029f32:	9908      	ldr	r1, [sp, #32]
 8029f34:	9802      	ldr	r0, [sp, #8]
 8029f36:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 8029f3a:	00cb      	lsls	r3, r1, #3
 8029f3c:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8029f40:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8029f44:	9102      	str	r1, [sp, #8]
 8029f46:	9904      	ldr	r1, [sp, #16]
 8029f48:	4419      	add	r1, r3
 8029f4a:	9104      	str	r1, [sp, #16]
 8029f4c:	9905      	ldr	r1, [sp, #20]
 8029f4e:	4419      	add	r1, r3
 8029f50:	9105      	str	r1, [sp, #20]
 8029f52:	9907      	ldr	r1, [sp, #28]
 8029f54:	449b      	add	fp, r3
 8029f56:	4419      	add	r1, r3
 8029f58:	449a      	add	sl, r3
 8029f5a:	9b06      	ldr	r3, [sp, #24]
 8029f5c:	9107      	str	r1, [sp, #28]
 8029f5e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8029f62:	9306      	str	r3, [sp, #24]
 8029f64:	9a04      	ldr	r2, [sp, #16]
 8029f66:	9807      	ldr	r0, [sp, #28]
 8029f68:	edd2 3a00 	vldr	s7, [r2]
 8029f6c:	ed90 4a00 	vldr	s8, [r0]
 8029f70:	eddb 7a00 	vldr	s15, [fp]
 8029f74:	ed9a 3a00 	vldr	s6, [sl]
 8029f78:	edd2 4a01 	vldr	s9, [r2, #4]
 8029f7c:	ed90 7a01 	vldr	s14, [r0, #4]
 8029f80:	ed9b 2a01 	vldr	s4, [fp, #4]
 8029f84:	edda 5a01 	vldr	s11, [sl, #4]
 8029f88:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8029f8c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8029f8e:	ee73 6a84 	vadd.f32	s13, s7, s8
 8029f92:	ee34 6a87 	vadd.f32	s12, s9, s14
 8029f96:	ee36 5aa7 	vadd.f32	s10, s13, s15
 8029f9a:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8029f9e:	ee33 5a05 	vadd.f32	s10, s6, s10
 8029fa2:	ee33 4ac4 	vsub.f32	s8, s7, s8
 8029fa6:	ed82 5a00 	vstr	s10, [r2]
 8029faa:	ed9b 5a01 	vldr	s10, [fp, #4]
 8029fae:	edda 4a01 	vldr	s9, [sl, #4]
 8029fb2:	ee36 5a05 	vadd.f32	s10, s12, s10
 8029fb6:	ee72 3a04 	vadd.f32	s7, s4, s8
 8029fba:	ee35 5a24 	vadd.f32	s10, s10, s9
 8029fbe:	ee77 4a67 	vsub.f32	s9, s14, s15
 8029fc2:	ed82 5a01 	vstr	s10, [r2, #4]
 8029fc6:	9a05      	ldr	r2, [sp, #20]
 8029fc8:	ee34 5a83 	vadd.f32	s10, s9, s6
 8029fcc:	edd2 1a00 	vldr	s3, [r2]
 8029fd0:	edd2 2a01 	vldr	s5, [r2, #4]
 8029fd4:	9a02      	ldr	r2, [sp, #8]
 8029fd6:	ee73 3ae5 	vsub.f32	s7, s7, s11
 8029fda:	ee36 6a42 	vsub.f32	s12, s12, s4
 8029fde:	ee63 4aa1 	vmul.f32	s9, s7, s3
 8029fe2:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8029fe6:	ee65 2a22 	vmul.f32	s5, s10, s5
 8029fea:	ee25 5a21 	vmul.f32	s10, s10, s3
 8029fee:	ee74 2aa2 	vadd.f32	s5, s9, s5
 8029ff2:	ee35 5a63 	vsub.f32	s10, s10, s7
 8029ff6:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8029ffa:	edcb 2a00 	vstr	s5, [fp]
 8029ffe:	ed8b 5a01 	vstr	s10, [fp, #4]
 802a002:	edd2 3a01 	vldr	s7, [r2, #4]
 802a006:	ed92 5a00 	vldr	s10, [r2]
 802a00a:	9a06      	ldr	r2, [sp, #24]
 802a00c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 802a010:	ee36 6a65 	vsub.f32	s12, s12, s11
 802a014:	ee66 4a85 	vmul.f32	s9, s13, s10
 802a018:	ee26 5a05 	vmul.f32	s10, s12, s10
 802a01c:	ee66 6aa3 	vmul.f32	s13, s13, s7
 802a020:	ee26 6a23 	vmul.f32	s12, s12, s7
 802a024:	ee75 6a66 	vsub.f32	s13, s10, s13
 802a028:	ee34 6a86 	vadd.f32	s12, s9, s12
 802a02c:	ee34 4a42 	vsub.f32	s8, s8, s4
 802a030:	ee37 7a27 	vadd.f32	s14, s14, s15
 802a034:	edc0 6a01 	vstr	s13, [r0, #4]
 802a038:	ed80 6a00 	vstr	s12, [r0]
 802a03c:	ed92 6a01 	vldr	s12, [r2, #4]
 802a040:	9803      	ldr	r0, [sp, #12]
 802a042:	ee77 7a43 	vsub.f32	s15, s14, s6
 802a046:	ee75 5a84 	vadd.f32	s11, s11, s8
 802a04a:	ed92 7a00 	vldr	s14, [r2]
 802a04e:	ee65 6a87 	vmul.f32	s13, s11, s14
 802a052:	ee27 7a87 	vmul.f32	s14, s15, s14
 802a056:	ee65 5a86 	vmul.f32	s11, s11, s12
 802a05a:	ee67 7a86 	vmul.f32	s15, s15, s12
 802a05e:	ee77 5a65 	vsub.f32	s11, s14, s11
 802a062:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802a066:	edca 5a01 	vstr	s11, [sl, #4]
 802a06a:	edca 7a00 	vstr	s15, [sl]
 802a06e:	6872      	ldr	r2, [r6, #4]
 802a070:	4621      	mov	r1, r4
 802a072:	2304      	movs	r3, #4
 802a074:	f000 f97a 	bl	802a36c <arm_radix8_butterfly_f32>
 802a078:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a07a:	6872      	ldr	r2, [r6, #4]
 802a07c:	4621      	mov	r1, r4
 802a07e:	2304      	movs	r3, #4
 802a080:	f000 f974 	bl	802a36c <arm_radix8_butterfly_f32>
 802a084:	980a      	ldr	r0, [sp, #40]	; 0x28
 802a086:	6872      	ldr	r2, [r6, #4]
 802a088:	4621      	mov	r1, r4
 802a08a:	2304      	movs	r3, #4
 802a08c:	f000 f96e 	bl	802a36c <arm_radix8_butterfly_f32>
 802a090:	9801      	ldr	r0, [sp, #4]
 802a092:	6872      	ldr	r2, [r6, #4]
 802a094:	4621      	mov	r1, r4
 802a096:	2304      	movs	r3, #4
 802a098:	b00f      	add	sp, #60	; 0x3c
 802a09a:	ecbd 8b0a 	vpop	{d8-d12}
 802a09e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a0a2:	f000 b963 	b.w	802a36c <arm_radix8_butterfly_f32>
 802a0a6:	bf00      	nop

0802a0a8 <arm_cfft_f32>:
 802a0a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a0ac:	2a01      	cmp	r2, #1
 802a0ae:	4606      	mov	r6, r0
 802a0b0:	4617      	mov	r7, r2
 802a0b2:	460c      	mov	r4, r1
 802a0b4:	4698      	mov	r8, r3
 802a0b6:	8805      	ldrh	r5, [r0, #0]
 802a0b8:	d054      	beq.n	802a164 <arm_cfft_f32+0xbc>
 802a0ba:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a0be:	d04c      	beq.n	802a15a <arm_cfft_f32+0xb2>
 802a0c0:	d916      	bls.n	802a0f0 <arm_cfft_f32+0x48>
 802a0c2:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 802a0c6:	d01a      	beq.n	802a0fe <arm_cfft_f32+0x56>
 802a0c8:	d95c      	bls.n	802a184 <arm_cfft_f32+0xdc>
 802a0ca:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 802a0ce:	d044      	beq.n	802a15a <arm_cfft_f32+0xb2>
 802a0d0:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 802a0d4:	d105      	bne.n	802a0e2 <arm_cfft_f32+0x3a>
 802a0d6:	4620      	mov	r0, r4
 802a0d8:	4629      	mov	r1, r5
 802a0da:	6872      	ldr	r2, [r6, #4]
 802a0dc:	2301      	movs	r3, #1
 802a0de:	f000 f945 	bl	802a36c <arm_radix8_butterfly_f32>
 802a0e2:	f1b8 0f00 	cmp.w	r8, #0
 802a0e6:	d111      	bne.n	802a10c <arm_cfft_f32+0x64>
 802a0e8:	2f01      	cmp	r7, #1
 802a0ea:	d016      	beq.n	802a11a <arm_cfft_f32+0x72>
 802a0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a0f0:	2d20      	cmp	r5, #32
 802a0f2:	d032      	beq.n	802a15a <arm_cfft_f32+0xb2>
 802a0f4:	d94a      	bls.n	802a18c <arm_cfft_f32+0xe4>
 802a0f6:	2d40      	cmp	r5, #64	; 0x40
 802a0f8:	d0ed      	beq.n	802a0d6 <arm_cfft_f32+0x2e>
 802a0fa:	2d80      	cmp	r5, #128	; 0x80
 802a0fc:	d1f1      	bne.n	802a0e2 <arm_cfft_f32+0x3a>
 802a0fe:	4630      	mov	r0, r6
 802a100:	4621      	mov	r1, r4
 802a102:	f7ff fca1 	bl	8029a48 <arm_cfft_radix8by2_f32>
 802a106:	f1b8 0f00 	cmp.w	r8, #0
 802a10a:	d0ed      	beq.n	802a0e8 <arm_cfft_f32+0x40>
 802a10c:	4620      	mov	r0, r4
 802a10e:	89b1      	ldrh	r1, [r6, #12]
 802a110:	68b2      	ldr	r2, [r6, #8]
 802a112:	f7d6 f86d 	bl	80001f0 <arm_bitreversal_32>
 802a116:	2f01      	cmp	r7, #1
 802a118:	d1e8      	bne.n	802a0ec <arm_cfft_f32+0x44>
 802a11a:	ee07 5a90 	vmov	s15, r5
 802a11e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 802a122:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802a126:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802a12a:	2d00      	cmp	r5, #0
 802a12c:	d0de      	beq.n	802a0ec <arm_cfft_f32+0x44>
 802a12e:	f104 0108 	add.w	r1, r4, #8
 802a132:	2300      	movs	r3, #0
 802a134:	3301      	adds	r3, #1
 802a136:	429d      	cmp	r5, r3
 802a138:	f101 0108 	add.w	r1, r1, #8
 802a13c:	ed11 7a04 	vldr	s14, [r1, #-16]
 802a140:	ed51 7a03 	vldr	s15, [r1, #-12]
 802a144:	ee27 7a26 	vmul.f32	s14, s14, s13
 802a148:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802a14c:	ed01 7a04 	vstr	s14, [r1, #-16]
 802a150:	ed41 7a03 	vstr	s15, [r1, #-12]
 802a154:	d1ee      	bne.n	802a134 <arm_cfft_f32+0x8c>
 802a156:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a15a:	4630      	mov	r0, r6
 802a15c:	4621      	mov	r1, r4
 802a15e:	f7ff fd45 	bl	8029bec <arm_cfft_radix8by4_f32>
 802a162:	e7be      	b.n	802a0e2 <arm_cfft_f32+0x3a>
 802a164:	b1ad      	cbz	r5, 802a192 <arm_cfft_f32+0xea>
 802a166:	f101 030c 	add.w	r3, r1, #12
 802a16a:	2200      	movs	r2, #0
 802a16c:	ed53 7a02 	vldr	s15, [r3, #-8]
 802a170:	3201      	adds	r2, #1
 802a172:	eef1 7a67 	vneg.f32	s15, s15
 802a176:	4295      	cmp	r5, r2
 802a178:	ed43 7a02 	vstr	s15, [r3, #-8]
 802a17c:	f103 0308 	add.w	r3, r3, #8
 802a180:	d1f4      	bne.n	802a16c <arm_cfft_f32+0xc4>
 802a182:	e79a      	b.n	802a0ba <arm_cfft_f32+0x12>
 802a184:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802a188:	d0a5      	beq.n	802a0d6 <arm_cfft_f32+0x2e>
 802a18a:	e7aa      	b.n	802a0e2 <arm_cfft_f32+0x3a>
 802a18c:	2d10      	cmp	r5, #16
 802a18e:	d0b6      	beq.n	802a0fe <arm_cfft_f32+0x56>
 802a190:	e7a7      	b.n	802a0e2 <arm_cfft_f32+0x3a>
 802a192:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802a196:	d894      	bhi.n	802a0c2 <arm_cfft_f32+0x1a>
 802a198:	e7aa      	b.n	802a0f0 <arm_cfft_f32+0x48>
 802a19a:	bf00      	nop

0802a19c <arm_cmplx_mag_f32>:
 802a19c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a1a0:	ea5f 0892 	movs.w	r8, r2, lsr #2
 802a1a4:	b084      	sub	sp, #16
 802a1a6:	d07f      	beq.n	802a2a8 <arm_cmplx_mag_f32+0x10c>
 802a1a8:	2700      	movs	r7, #0
 802a1aa:	f100 0420 	add.w	r4, r0, #32
 802a1ae:	f101 0510 	add.w	r5, r1, #16
 802a1b2:	4646      	mov	r6, r8
 802a1b4:	e05a      	b.n	802a26c <arm_cmplx_mag_f32+0xd0>
 802a1b6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a1ba:	eeb4 0a40 	vcmp.f32	s0, s0
 802a1be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1c2:	f040 80a4 	bne.w	802a30e <arm_cmplx_mag_f32+0x172>
 802a1c6:	ed05 0a04 	vstr	s0, [r5, #-16]
 802a1ca:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 802a1ce:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 802a1d2:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a1d6:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a1da:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a1de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a1e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1e6:	f2c0 808f 	blt.w	802a308 <arm_cmplx_mag_f32+0x16c>
 802a1ea:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a1ee:	eeb4 0a40 	vcmp.f32	s0, s0
 802a1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a1f6:	f040 80af 	bne.w	802a358 <arm_cmplx_mag_f32+0x1bc>
 802a1fa:	ed05 0a03 	vstr	s0, [r5, #-12]
 802a1fe:	ed54 7a04 	vldr	s15, [r4, #-16]
 802a202:	ed14 0a03 	vldr	s0, [r4, #-12]
 802a206:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a20a:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a20e:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a212:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a216:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a21a:	db72      	blt.n	802a302 <arm_cmplx_mag_f32+0x166>
 802a21c:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a220:	eeb4 0a40 	vcmp.f32	s0, s0
 802a224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a228:	f040 808c 	bne.w	802a344 <arm_cmplx_mag_f32+0x1a8>
 802a22c:	ed05 0a02 	vstr	s0, [r5, #-8]
 802a230:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a234:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a238:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a23c:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a240:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a244:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a248:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a24c:	db20      	blt.n	802a290 <arm_cmplx_mag_f32+0xf4>
 802a24e:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a252:	eeb4 0a40 	vcmp.f32	s0, s0
 802a256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a25a:	d169      	bne.n	802a330 <arm_cmplx_mag_f32+0x194>
 802a25c:	3e01      	subs	r6, #1
 802a25e:	ed05 0a01 	vstr	s0, [r5, #-4]
 802a262:	f104 0420 	add.w	r4, r4, #32
 802a266:	f105 0510 	add.w	r5, r5, #16
 802a26a:	d019      	beq.n	802a2a0 <arm_cmplx_mag_f32+0x104>
 802a26c:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 802a270:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 802a274:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a278:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a27c:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a280:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a284:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a288:	da95      	bge.n	802a1b6 <arm_cmplx_mag_f32+0x1a>
 802a28a:	f845 7c10 	str.w	r7, [r5, #-16]
 802a28e:	e79c      	b.n	802a1ca <arm_cmplx_mag_f32+0x2e>
 802a290:	3e01      	subs	r6, #1
 802a292:	f845 7c04 	str.w	r7, [r5, #-4]
 802a296:	f104 0420 	add.w	r4, r4, #32
 802a29a:	f105 0510 	add.w	r5, r5, #16
 802a29e:	d1e5      	bne.n	802a26c <arm_cmplx_mag_f32+0xd0>
 802a2a0:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 802a2a4:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802a2a8:	f012 0503 	ands.w	r5, r2, #3
 802a2ac:	d026      	beq.n	802a2fc <arm_cmplx_mag_f32+0x160>
 802a2ae:	2600      	movs	r6, #0
 802a2b0:	f100 0408 	add.w	r4, r0, #8
 802a2b4:	e00c      	b.n	802a2d0 <arm_cmplx_mag_f32+0x134>
 802a2b6:	eeb1 0ae7 	vsqrt.f32	s0, s15
 802a2ba:	eeb4 0a40 	vcmp.f32	s0, s0
 802a2be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2c2:	d12e      	bne.n	802a322 <arm_cmplx_mag_f32+0x186>
 802a2c4:	3d01      	subs	r5, #1
 802a2c6:	ed01 0a01 	vstr	s0, [r1, #-4]
 802a2ca:	f104 0408 	add.w	r4, r4, #8
 802a2ce:	d015      	beq.n	802a2fc <arm_cmplx_mag_f32+0x160>
 802a2d0:	ed54 7a02 	vldr	s15, [r4, #-8]
 802a2d4:	ed14 0a01 	vldr	s0, [r4, #-4]
 802a2d8:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802a2dc:	ee20 0a00 	vmul.f32	s0, s0, s0
 802a2e0:	3104      	adds	r1, #4
 802a2e2:	ee77 7a80 	vadd.f32	s15, s15, s0
 802a2e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802a2ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a2ee:	dae2      	bge.n	802a2b6 <arm_cmplx_mag_f32+0x11a>
 802a2f0:	3d01      	subs	r5, #1
 802a2f2:	f841 6c04 	str.w	r6, [r1, #-4]
 802a2f6:	f104 0408 	add.w	r4, r4, #8
 802a2fa:	d1e9      	bne.n	802a2d0 <arm_cmplx_mag_f32+0x134>
 802a2fc:	b004      	add	sp, #16
 802a2fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a302:	f845 7c08 	str.w	r7, [r5, #-8]
 802a306:	e793      	b.n	802a230 <arm_cmplx_mag_f32+0x94>
 802a308:	f845 7c0c 	str.w	r7, [r5, #-12]
 802a30c:	e777      	b.n	802a1fe <arm_cmplx_mag_f32+0x62>
 802a30e:	eeb0 0a67 	vmov.f32	s0, s15
 802a312:	9203      	str	r2, [sp, #12]
 802a314:	9102      	str	r1, [sp, #8]
 802a316:	9001      	str	r0, [sp, #4]
 802a318:	f000 fb38 	bl	802a98c <sqrtf>
 802a31c:	a801      	add	r0, sp, #4
 802a31e:	c807      	ldmia	r0, {r0, r1, r2}
 802a320:	e751      	b.n	802a1c6 <arm_cmplx_mag_f32+0x2a>
 802a322:	eeb0 0a67 	vmov.f32	s0, s15
 802a326:	9101      	str	r1, [sp, #4]
 802a328:	f000 fb30 	bl	802a98c <sqrtf>
 802a32c:	9901      	ldr	r1, [sp, #4]
 802a32e:	e7c9      	b.n	802a2c4 <arm_cmplx_mag_f32+0x128>
 802a330:	eeb0 0a67 	vmov.f32	s0, s15
 802a334:	9203      	str	r2, [sp, #12]
 802a336:	9102      	str	r1, [sp, #8]
 802a338:	9001      	str	r0, [sp, #4]
 802a33a:	f000 fb27 	bl	802a98c <sqrtf>
 802a33e:	a801      	add	r0, sp, #4
 802a340:	c807      	ldmia	r0, {r0, r1, r2}
 802a342:	e78b      	b.n	802a25c <arm_cmplx_mag_f32+0xc0>
 802a344:	eeb0 0a67 	vmov.f32	s0, s15
 802a348:	9203      	str	r2, [sp, #12]
 802a34a:	9102      	str	r1, [sp, #8]
 802a34c:	9001      	str	r0, [sp, #4]
 802a34e:	f000 fb1d 	bl	802a98c <sqrtf>
 802a352:	a801      	add	r0, sp, #4
 802a354:	c807      	ldmia	r0, {r0, r1, r2}
 802a356:	e769      	b.n	802a22c <arm_cmplx_mag_f32+0x90>
 802a358:	eeb0 0a67 	vmov.f32	s0, s15
 802a35c:	9203      	str	r2, [sp, #12]
 802a35e:	9102      	str	r1, [sp, #8]
 802a360:	9001      	str	r0, [sp, #4]
 802a362:	f000 fb13 	bl	802a98c <sqrtf>
 802a366:	a801      	add	r0, sp, #4
 802a368:	c807      	ldmia	r0, {r0, r1, r2}
 802a36a:	e746      	b.n	802a1fa <arm_cmplx_mag_f32+0x5e>

0802a36c <arm_radix8_butterfly_f32>:
 802a36c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a370:	ed2d 8b10 	vpush	{d8-d15}
 802a374:	b09d      	sub	sp, #116	; 0x74
 802a376:	461c      	mov	r4, r3
 802a378:	ed9f bac8 	vldr	s22, [pc, #800]	; 802a69c <arm_radix8_butterfly_f32+0x330>
 802a37c:	921a      	str	r2, [sp, #104]	; 0x68
 802a37e:	1d03      	adds	r3, r0, #4
 802a380:	4682      	mov	sl, r0
 802a382:	4689      	mov	r9, r1
 802a384:	468b      	mov	fp, r1
 802a386:	931b      	str	r3, [sp, #108]	; 0x6c
 802a388:	9400      	str	r4, [sp, #0]
 802a38a:	469e      	mov	lr, r3
 802a38c:	ea4f 03db 	mov.w	r3, fp, lsr #3
 802a390:	005a      	lsls	r2, r3, #1
 802a392:	18d6      	adds	r6, r2, r3
 802a394:	18f5      	adds	r5, r6, r3
 802a396:	9203      	str	r2, [sp, #12]
 802a398:	195a      	adds	r2, r3, r5
 802a39a:	18d0      	adds	r0, r2, r3
 802a39c:	00df      	lsls	r7, r3, #3
 802a39e:	1819      	adds	r1, r3, r0
 802a3a0:	463c      	mov	r4, r7
 802a3a2:	9701      	str	r7, [sp, #4]
 802a3a4:	4457      	add	r7, sl
 802a3a6:	930c      	str	r3, [sp, #48]	; 0x30
 802a3a8:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 802a3ac:	011b      	lsls	r3, r3, #4
 802a3ae:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 802a3b2:	eb07 0c04 	add.w	ip, r7, r4
 802a3b6:	9c00      	ldr	r4, [sp, #0]
 802a3b8:	9302      	str	r3, [sp, #8]
 802a3ba:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 802a3be:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 802a3c2:	3204      	adds	r2, #4
 802a3c4:	3104      	adds	r1, #4
 802a3c6:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 802a3ca:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 802a3ce:	f04f 0800 	mov.w	r8, #0
 802a3d2:	eddc 7a00 	vldr	s15, [ip]
 802a3d6:	edd7 6a00 	vldr	s13, [r7]
 802a3da:	edd6 3a00 	vldr	s7, [r6]
 802a3de:	ed5e aa01 	vldr	s21, [lr, #-4]
 802a3e2:	edd5 4a00 	vldr	s9, [r5]
 802a3e6:	ed90 2a00 	vldr	s4, [r0]
 802a3ea:	ed12 7a01 	vldr	s14, [r2, #-4]
 802a3ee:	ed51 0a01 	vldr	s1, [r1, #-4]
 802a3f2:	ee77 8a82 	vadd.f32	s17, s15, s4
 802a3f6:	ee33 4aa0 	vadd.f32	s8, s7, s1
 802a3fa:	ee76 1a87 	vadd.f32	s3, s13, s14
 802a3fe:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 802a402:	ee31 6a84 	vadd.f32	s12, s3, s8
 802a406:	ee33 5a28 	vadd.f32	s10, s6, s17
 802a40a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 802a40e:	ee75 6a06 	vadd.f32	s13, s10, s12
 802a412:	ee35 5a46 	vsub.f32	s10, s10, s12
 802a416:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802a41a:	ed85 5a00 	vstr	s10, [r5]
 802a41e:	ed96 1a01 	vldr	s2, [r6, #4]
 802a422:	edd7 5a01 	vldr	s11, [r7, #4]
 802a426:	ed92 aa00 	vldr	s20, [r2]
 802a42a:	ed91 6a00 	vldr	s12, [r1]
 802a42e:	ed9e 9a00 	vldr	s18, [lr]
 802a432:	ed95 5a01 	vldr	s10, [r5, #4]
 802a436:	eddc 6a01 	vldr	s13, [ip, #4]
 802a43a:	edd0 9a01 	vldr	s19, [r0, #4]
 802a43e:	ee73 0ae0 	vsub.f32	s1, s7, s1
 802a442:	ee71 2a46 	vsub.f32	s5, s2, s12
 802a446:	ee75 3aca 	vsub.f32	s7, s11, s20
 802a44a:	ee37 0a60 	vsub.f32	s0, s14, s1
 802a44e:	ee33 8aa2 	vadd.f32	s16, s7, s5
 802a452:	ee37 7a20 	vadd.f32	s14, s14, s1
 802a456:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802a45a:	ee37 2ac2 	vsub.f32	s4, s15, s4
 802a45e:	ee79 3a05 	vadd.f32	s7, s18, s10
 802a462:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802a466:	ee39 5a45 	vsub.f32	s10, s18, s10
 802a46a:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 802a46e:	ee36 9aa9 	vadd.f32	s18, s13, s19
 802a472:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802a476:	ee31 6a06 	vadd.f32	s12, s2, s12
 802a47a:	ee76 6ae9 	vsub.f32	s13, s13, s19
 802a47e:	ee28 8a0b 	vmul.f32	s16, s16, s22
 802a482:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802a486:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802a48a:	ee33 3a68 	vsub.f32	s6, s6, s17
 802a48e:	ee36 0a88 	vadd.f32	s0, s13, s16
 802a492:	ee75 8a86 	vadd.f32	s17, s11, s12
 802a496:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802a49a:	ee71 1ac4 	vsub.f32	s3, s3, s8
 802a49e:	ee75 6a62 	vsub.f32	s13, s10, s5
 802a4a2:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802a4a6:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802a4aa:	ee33 1a89 	vadd.f32	s2, s7, s18
 802a4ae:	ee74 5ae0 	vsub.f32	s11, s9, s1
 802a4b2:	ee74 3aa0 	vadd.f32	s7, s9, s1
 802a4b6:	ee75 4a22 	vadd.f32	s9, s10, s5
 802a4ba:	ee32 5a27 	vadd.f32	s10, s4, s15
 802a4be:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a4c2:	ee33 8a06 	vadd.f32	s16, s6, s12
 802a4c6:	ee75 2a87 	vadd.f32	s5, s11, s14
 802a4ca:	ee31 9a28 	vadd.f32	s18, s2, s17
 802a4ce:	ee33 6a46 	vsub.f32	s12, s6, s12
 802a4d2:	ee74 0a61 	vsub.f32	s1, s8, s3
 802a4d6:	ee33 2a80 	vadd.f32	s4, s7, s0
 802a4da:	ee35 7ac7 	vsub.f32	s14, s11, s14
 802a4de:	ee34 3ac5 	vsub.f32	s6, s9, s10
 802a4e2:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802a4e6:	ee31 1a68 	vsub.f32	s2, s2, s17
 802a4ea:	ee34 4a21 	vadd.f32	s8, s8, s3
 802a4ee:	ee73 3ac0 	vsub.f32	s7, s7, s0
 802a4f2:	ee74 4a85 	vadd.f32	s9, s9, s10
 802a4f6:	ee76 6aa7 	vadd.f32	s13, s13, s15
 802a4fa:	44d8      	add	r8, fp
 802a4fc:	45c1      	cmp	r9, r8
 802a4fe:	ed8e 9a00 	vstr	s18, [lr]
 802a502:	ed85 1a01 	vstr	s2, [r5, #4]
 802a506:	449e      	add	lr, r3
 802a508:	ed8c 8a00 	vstr	s16, [ip]
 802a50c:	441d      	add	r5, r3
 802a50e:	ed80 6a00 	vstr	s12, [r0]
 802a512:	edcc 0a01 	vstr	s1, [ip, #4]
 802a516:	ed80 4a01 	vstr	s8, [r0, #4]
 802a51a:	449c      	add	ip, r3
 802a51c:	ed87 2a00 	vstr	s4, [r7]
 802a520:	4418      	add	r0, r3
 802a522:	ed41 3a01 	vstr	s7, [r1, #-4]
 802a526:	ed42 2a01 	vstr	s5, [r2, #-4]
 802a52a:	ed86 7a00 	vstr	s14, [r6]
 802a52e:	ed87 3a01 	vstr	s6, [r7, #4]
 802a532:	edc1 4a00 	vstr	s9, [r1]
 802a536:	441f      	add	r7, r3
 802a538:	edc2 5a00 	vstr	s11, [r2]
 802a53c:	4419      	add	r1, r3
 802a53e:	edc6 6a01 	vstr	s13, [r6, #4]
 802a542:	441a      	add	r2, r3
 802a544:	441e      	add	r6, r3
 802a546:	f63f af44 	bhi.w	802a3d2 <arm_radix8_butterfly_f32+0x66>
 802a54a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a54c:	2907      	cmp	r1, #7
 802a54e:	4620      	mov	r0, r4
 802a550:	f240 81e9 	bls.w	802a926 <arm_radix8_butterfly_f32+0x5ba>
 802a554:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802a558:	193e      	adds	r6, r7, r4
 802a55a:	1935      	adds	r5, r6, r4
 802a55c:	9c03      	ldr	r4, [sp, #12]
 802a55e:	9000      	str	r0, [sp, #0]
 802a560:	4622      	mov	r2, r4
 802a562:	3201      	adds	r2, #1
 802a564:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802a568:	9900      	ldr	r1, [sp, #0]
 802a56a:	1828      	adds	r0, r5, r0
 802a56c:	eb00 0e01 	add.w	lr, r0, r1
 802a570:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a572:	440a      	add	r2, r1
 802a574:	eb04 0c01 	add.w	ip, r4, r1
 802a578:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 802a57c:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 802a580:	9a00      	ldr	r2, [sp, #0]
 802a582:	940f      	str	r4, [sp, #60]	; 0x3c
 802a584:	00ed      	lsls	r5, r5, #3
 802a586:	9511      	str	r5, [sp, #68]	; 0x44
 802a588:	00d5      	lsls	r5, r2, #3
 802a58a:	950d      	str	r5, [sp, #52]	; 0x34
 802a58c:	9d01      	ldr	r5, [sp, #4]
 802a58e:	3508      	adds	r5, #8
 802a590:	9516      	str	r5, [sp, #88]	; 0x58
 802a592:	9d02      	ldr	r5, [sp, #8]
 802a594:	3508      	adds	r5, #8
 802a596:	0114      	lsls	r4, r2, #4
 802a598:	9517      	str	r5, [sp, #92]	; 0x5c
 802a59a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802a59c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802a59e:	940e      	str	r4, [sp, #56]	; 0x38
 802a5a0:	00c0      	lsls	r0, r0, #3
 802a5a2:	9010      	str	r0, [sp, #64]	; 0x40
 802a5a4:	18aa      	adds	r2, r5, r2
 802a5a6:	9207      	str	r2, [sp, #28]
 802a5a8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a5aa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a5ac:	18aa      	adds	r2, r5, r2
 802a5ae:	9208      	str	r2, [sp, #32]
 802a5b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802a5b2:	18aa      	adds	r2, r5, r2
 802a5b4:	9209      	str	r2, [sp, #36]	; 0x24
 802a5b6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 802a5ba:	f10e 0204 	add.w	r2, lr, #4
 802a5be:	920a      	str	r2, [sp, #40]	; 0x28
 802a5c0:	00c9      	lsls	r1, r1, #3
 802a5c2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802a5c4:	310c      	adds	r1, #12
 802a5c6:	00f6      	lsls	r6, r6, #3
 802a5c8:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 802a5cc:	9114      	str	r1, [sp, #80]	; 0x50
 802a5ce:	18a9      	adds	r1, r5, r2
 802a5d0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802a5d2:	9612      	str	r6, [sp, #72]	; 0x48
 802a5d4:	00ff      	lsls	r7, r7, #3
 802a5d6:	19ae      	adds	r6, r5, r6
 802a5d8:	3008      	adds	r0, #8
 802a5da:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 802a5de:	9606      	str	r6, [sp, #24]
 802a5e0:	9019      	str	r0, [sp, #100]	; 0x64
 802a5e2:	18aa      	adds	r2, r5, r2
 802a5e4:	0164      	lsls	r4, r4, #5
 802a5e6:	19ee      	adds	r6, r5, r7
 802a5e8:	f10c 000c 	add.w	r0, ip, #12
 802a5ec:	9713      	str	r7, [sp, #76]	; 0x4c
 802a5ee:	9604      	str	r6, [sp, #16]
 802a5f0:	9015      	str	r0, [sp, #84]	; 0x54
 802a5f2:	9103      	str	r1, [sp, #12]
 802a5f4:	9205      	str	r2, [sp, #20]
 802a5f6:	f104 0208 	add.w	r2, r4, #8
 802a5fa:	9218      	str	r2, [sp, #96]	; 0x60
 802a5fc:	f04f 0801 	mov.w	r8, #1
 802a600:	2200      	movs	r2, #0
 802a602:	f102 0108 	add.w	r1, r2, #8
 802a606:	460f      	mov	r7, r1
 802a608:	910b      	str	r1, [sp, #44]	; 0x2c
 802a60a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802a60c:	188e      	adds	r6, r1, r2
 802a60e:	9916      	ldr	r1, [sp, #88]	; 0x58
 802a610:	188d      	adds	r5, r1, r2
 802a612:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802a614:	188c      	adds	r4, r1, r2
 802a616:	9919      	ldr	r1, [sp, #100]	; 0x64
 802a618:	1888      	adds	r0, r1, r2
 802a61a:	9914      	ldr	r1, [sp, #80]	; 0x50
 802a61c:	eb01 0c02 	add.w	ip, r1, r2
 802a620:	9915      	ldr	r1, [sp, #84]	; 0x54
 802a622:	440a      	add	r2, r1
 802a624:	9903      	ldr	r1, [sp, #12]
 802a626:	edd1 fa00 	vldr	s31, [r1]
 802a62a:	9905      	ldr	r1, [sp, #20]
 802a62c:	ed91 fa00 	vldr	s30, [r1]
 802a630:	9904      	ldr	r1, [sp, #16]
 802a632:	edd1 ea00 	vldr	s29, [r1]
 802a636:	9906      	ldr	r1, [sp, #24]
 802a638:	ed91 ea00 	vldr	s28, [r1]
 802a63c:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a63e:	edd1 da00 	vldr	s27, [r1]
 802a642:	9908      	ldr	r1, [sp, #32]
 802a644:	ed91 da00 	vldr	s26, [r1]
 802a648:	9907      	ldr	r1, [sp, #28]
 802a64a:	edd1 ca00 	vldr	s25, [r1]
 802a64e:	9903      	ldr	r1, [sp, #12]
 802a650:	ed91 ca01 	vldr	s24, [r1, #4]
 802a654:	9905      	ldr	r1, [sp, #20]
 802a656:	edd1 ba01 	vldr	s23, [r1, #4]
 802a65a:	9904      	ldr	r1, [sp, #16]
 802a65c:	edd1 aa01 	vldr	s21, [r1, #4]
 802a660:	9906      	ldr	r1, [sp, #24]
 802a662:	ed91 aa01 	vldr	s20, [r1, #4]
 802a666:	9909      	ldr	r1, [sp, #36]	; 0x24
 802a668:	edd1 7a01 	vldr	s15, [r1, #4]
 802a66c:	9908      	ldr	r1, [sp, #32]
 802a66e:	edcd 7a00 	vstr	s15, [sp]
 802a672:	edd1 7a01 	vldr	s15, [r1, #4]
 802a676:	9907      	ldr	r1, [sp, #28]
 802a678:	edcd 7a01 	vstr	s15, [sp, #4]
 802a67c:	edd1 7a01 	vldr	s15, [r1, #4]
 802a680:	eb0a 0e07 	add.w	lr, sl, r7
 802a684:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802a686:	edcd 7a02 	vstr	s15, [sp, #8]
 802a68a:	eb0c 010a 	add.w	r1, ip, sl
 802a68e:	4456      	add	r6, sl
 802a690:	4455      	add	r5, sl
 802a692:	4454      	add	r4, sl
 802a694:	4450      	add	r0, sl
 802a696:	4452      	add	r2, sl
 802a698:	46c4      	mov	ip, r8
 802a69a:	e001      	b.n	802a6a0 <arm_radix8_butterfly_f32+0x334>
 802a69c:	3f3504f3 	.word	0x3f3504f3
 802a6a0:	ed96 5a00 	vldr	s10, [r6]
 802a6a4:	ed52 9a01 	vldr	s19, [r2, #-4]
 802a6a8:	ed11 6a01 	vldr	s12, [r1, #-4]
 802a6ac:	edd0 7a00 	vldr	s15, [r0]
 802a6b0:	ed17 7a01 	vldr	s14, [r7, #-4]
 802a6b4:	edde 3a00 	vldr	s7, [lr]
 802a6b8:	ed94 3a00 	vldr	s6, [r4]
 802a6bc:	ed95 2a00 	vldr	s4, [r5]
 802a6c0:	ed9e 0a01 	vldr	s0, [lr, #4]
 802a6c4:	ee33 8a85 	vadd.f32	s16, s7, s10
 802a6c8:	ee32 1a06 	vadd.f32	s2, s4, s12
 802a6cc:	ee33 4a29 	vadd.f32	s8, s6, s19
 802a6d0:	ee77 4a87 	vadd.f32	s9, s15, s14
 802a6d4:	ee78 1a04 	vadd.f32	s3, s16, s8
 802a6d8:	ee71 6a24 	vadd.f32	s13, s2, s9
 802a6dc:	ee32 2a46 	vsub.f32	s4, s4, s12
 802a6e0:	ee31 6aa6 	vadd.f32	s12, s3, s13
 802a6e4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802a6e8:	ed8e 6a00 	vstr	s12, [lr]
 802a6ec:	edd0 8a01 	vldr	s17, [r0, #4]
 802a6f0:	ed95 9a01 	vldr	s18, [r5, #4]
 802a6f4:	edd1 2a00 	vldr	s5, [r1]
 802a6f8:	ed97 7a00 	vldr	s14, [r7]
 802a6fc:	edd4 0a01 	vldr	s1, [r4, #4]
 802a700:	ed96 6a01 	vldr	s12, [r6, #4]
 802a704:	edd2 5a00 	vldr	s11, [r2]
 802a708:	ee73 3ac5 	vsub.f32	s7, s7, s10
 802a70c:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a710:	ee39 5a62 	vsub.f32	s10, s18, s5
 802a714:	ee78 9ac7 	vsub.f32	s19, s17, s14
 802a718:	ee38 4a44 	vsub.f32	s8, s16, s8
 802a71c:	ee38 7a87 	vadd.f32	s14, s17, s14
 802a720:	ee30 8aa5 	vadd.f32	s16, s1, s11
 802a724:	ee79 2a22 	vadd.f32	s5, s18, s5
 802a728:	ee75 8a69 	vsub.f32	s17, s10, s19
 802a72c:	ee32 9a27 	vadd.f32	s18, s4, s15
 802a730:	ee35 5a29 	vadd.f32	s10, s10, s19
 802a734:	ee72 7a67 	vsub.f32	s15, s4, s15
 802a738:	ee30 2a06 	vadd.f32	s4, s0, s12
 802a73c:	ee69 9a0b 	vmul.f32	s19, s18, s22
 802a740:	ee70 5ae5 	vsub.f32	s11, s1, s11
 802a744:	ee32 9a08 	vadd.f32	s18, s4, s16
 802a748:	ee68 8a8b 	vmul.f32	s17, s17, s22
 802a74c:	ee32 2a48 	vsub.f32	s4, s4, s16
 802a750:	ee71 4a64 	vsub.f32	s9, s2, s9
 802a754:	ee25 5a0b 	vmul.f32	s10, s10, s22
 802a758:	ee32 1a87 	vadd.f32	s2, s5, s14
 802a75c:	ee67 7a8b 	vmul.f32	s15, s15, s22
 802a760:	ee72 2ac7 	vsub.f32	s5, s5, s14
 802a764:	ee30 6a46 	vsub.f32	s12, s0, s12
 802a768:	ee73 0a29 	vadd.f32	s1, s6, s19
 802a76c:	ee36 0a28 	vadd.f32	s0, s12, s17
 802a770:	ee33 3a69 	vsub.f32	s6, s6, s19
 802a774:	ee32 7a64 	vsub.f32	s14, s4, s9
 802a778:	ee73 9aa7 	vadd.f32	s19, s7, s15
 802a77c:	ee36 6a68 	vsub.f32	s12, s12, s17
 802a780:	ee73 7ae7 	vsub.f32	s15, s7, s15
 802a784:	ee75 8a85 	vadd.f32	s17, s11, s10
 802a788:	ee74 3a22 	vadd.f32	s7, s8, s5
 802a78c:	ee35 5ac5 	vsub.f32	s10, s11, s10
 802a790:	ee71 6ae6 	vsub.f32	s13, s3, s13
 802a794:	ee79 1a41 	vsub.f32	s3, s18, s2
 802a798:	ee39 8aa8 	vadd.f32	s16, s19, s17
 802a79c:	ee76 5a43 	vsub.f32	s11, s12, s6
 802a7a0:	ee74 2a62 	vsub.f32	s5, s8, s5
 802a7a4:	ee72 4a24 	vadd.f32	s9, s4, s9
 802a7a8:	ee30 4a60 	vsub.f32	s8, s0, s1
 802a7ac:	ee79 8ae8 	vsub.f32	s17, s19, s17
 802a7b0:	ee30 0a20 	vadd.f32	s0, s0, s1
 802a7b4:	ee77 9a85 	vadd.f32	s19, s15, s10
 802a7b8:	ee36 6a03 	vadd.f32	s12, s12, s6
 802a7bc:	ee77 7ac5 	vsub.f32	s15, s15, s10
 802a7c0:	ee2e 2a21 	vmul.f32	s4, s28, s3
 802a7c4:	ee2e 5a26 	vmul.f32	s10, s28, s13
 802a7c8:	ee6f 0a23 	vmul.f32	s1, s30, s7
 802a7cc:	ee2a 3a21 	vmul.f32	s6, s20, s3
 802a7d0:	ee39 1a01 	vadd.f32	s2, s18, s2
 802a7d4:	ee6a 6a26 	vmul.f32	s13, s20, s13
 802a7d8:	ee2b 9a87 	vmul.f32	s18, s23, s14
 802a7dc:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 802a7e0:	ee2f 7a07 	vmul.f32	s14, s30, s14
 802a7e4:	ee6f 1a84 	vmul.f32	s3, s31, s8
 802a7e8:	ee35 3a03 	vadd.f32	s6, s10, s6
 802a7ec:	ee72 6a66 	vsub.f32	s13, s4, s13
 802a7f0:	ee2c 5a04 	vmul.f32	s10, s24, s8
 802a7f4:	ee2f 2a88 	vmul.f32	s4, s31, s16
 802a7f8:	ed9d 4a02 	vldr	s8, [sp, #8]
 802a7fc:	ed8e 1a01 	vstr	s2, [lr, #4]
 802a800:	ee77 3a63 	vsub.f32	s7, s14, s7
 802a804:	ee2c 8a08 	vmul.f32	s16, s24, s16
 802a808:	ed9d 7a01 	vldr	s14, [sp, #4]
 802a80c:	ed86 3a00 	vstr	s6, [r6]
 802a810:	ee30 9a89 	vadd.f32	s18, s1, s18
 802a814:	ee32 2a05 	vadd.f32	s4, s4, s10
 802a818:	ee6d 0a22 	vmul.f32	s1, s26, s5
 802a81c:	ee31 8ac8 	vsub.f32	s16, s3, s16
 802a820:	ee67 2a22 	vmul.f32	s5, s14, s5
 802a824:	ee64 1a00 	vmul.f32	s3, s8, s0
 802a828:	ee27 7a24 	vmul.f32	s14, s14, s9
 802a82c:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 802a830:	ee6d 4a24 	vmul.f32	s9, s26, s9
 802a834:	ee64 8a28 	vmul.f32	s17, s8, s17
 802a838:	ed9d 4a00 	vldr	s8, [sp]
 802a83c:	edc6 6a01 	vstr	s13, [r6, #4]
 802a840:	ee74 2ae2 	vsub.f32	s5, s9, s5
 802a844:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 802a848:	ee64 9a29 	vmul.f32	s19, s8, s19
 802a84c:	ee24 4a25 	vmul.f32	s8, s8, s11
 802a850:	ee30 7a87 	vadd.f32	s14, s1, s14
 802a854:	ee74 4a84 	vadd.f32	s9, s9, s8
 802a858:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 802a85c:	ee2a 4a86 	vmul.f32	s8, s21, s12
 802a860:	ee2c 0a80 	vmul.f32	s0, s25, s0
 802a864:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 802a868:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 802a86c:	ee2e 6a86 	vmul.f32	s12, s29, s12
 802a870:	ee75 1a21 	vadd.f32	s3, s10, s3
 802a874:	ee30 0a68 	vsub.f32	s0, s0, s17
 802a878:	ee75 9ae9 	vsub.f32	s19, s11, s19
 802a87c:	ee70 0a84 	vadd.f32	s1, s1, s8
 802a880:	ee36 6a67 	vsub.f32	s12, s12, s15
 802a884:	44dc      	add	ip, fp
 802a886:	45e1      	cmp	r9, ip
 802a888:	ed84 9a00 	vstr	s18, [r4]
 802a88c:	edc4 3a01 	vstr	s7, [r4, #4]
 802a890:	449e      	add	lr, r3
 802a892:	ed02 7a01 	vstr	s14, [r2, #-4]
 802a896:	edc2 2a00 	vstr	s5, [r2]
 802a89a:	441e      	add	r6, r3
 802a89c:	ed85 2a00 	vstr	s4, [r5]
 802a8a0:	ed85 8a01 	vstr	s16, [r5, #4]
 802a8a4:	441c      	add	r4, r3
 802a8a6:	ed47 1a01 	vstr	s3, [r7, #-4]
 802a8aa:	ed87 0a00 	vstr	s0, [r7]
 802a8ae:	441a      	add	r2, r3
 802a8b0:	ed41 4a01 	vstr	s9, [r1, #-4]
 802a8b4:	edc1 9a00 	vstr	s19, [r1]
 802a8b8:	441d      	add	r5, r3
 802a8ba:	edc0 0a00 	vstr	s1, [r0]
 802a8be:	441f      	add	r7, r3
 802a8c0:	ed80 6a01 	vstr	s12, [r0, #4]
 802a8c4:	4419      	add	r1, r3
 802a8c6:	4418      	add	r0, r3
 802a8c8:	f63f aeea 	bhi.w	802a6a0 <arm_radix8_butterfly_f32+0x334>
 802a8cc:	9a03      	ldr	r2, [sp, #12]
 802a8ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 802a8d0:	440a      	add	r2, r1
 802a8d2:	9203      	str	r2, [sp, #12]
 802a8d4:	990e      	ldr	r1, [sp, #56]	; 0x38
 802a8d6:	9a05      	ldr	r2, [sp, #20]
 802a8d8:	440a      	add	r2, r1
 802a8da:	9205      	str	r2, [sp, #20]
 802a8dc:	9913      	ldr	r1, [sp, #76]	; 0x4c
 802a8de:	9a04      	ldr	r2, [sp, #16]
 802a8e0:	440a      	add	r2, r1
 802a8e2:	9204      	str	r2, [sp, #16]
 802a8e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 802a8e6:	9a06      	ldr	r2, [sp, #24]
 802a8e8:	440a      	add	r2, r1
 802a8ea:	9206      	str	r2, [sp, #24]
 802a8ec:	9911      	ldr	r1, [sp, #68]	; 0x44
 802a8ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a8f0:	440a      	add	r2, r1
 802a8f2:	9209      	str	r2, [sp, #36]	; 0x24
 802a8f4:	9910      	ldr	r1, [sp, #64]	; 0x40
 802a8f6:	9a08      	ldr	r2, [sp, #32]
 802a8f8:	440a      	add	r2, r1
 802a8fa:	9208      	str	r2, [sp, #32]
 802a8fc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802a8fe:	9a07      	ldr	r2, [sp, #28]
 802a900:	440a      	add	r2, r1
 802a902:	9207      	str	r2, [sp, #28]
 802a904:	990c      	ldr	r1, [sp, #48]	; 0x30
 802a906:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802a908:	f108 0801 	add.w	r8, r8, #1
 802a90c:	3208      	adds	r2, #8
 802a90e:	4588      	cmp	r8, r1
 802a910:	920a      	str	r2, [sp, #40]	; 0x28
 802a912:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802a914:	f47f ae75 	bne.w	802a602 <arm_radix8_butterfly_f32+0x296>
 802a918:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 802a91c:	9300      	str	r3, [sp, #0]
 802a91e:	46c3      	mov	fp, r8
 802a920:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 802a924:	e532      	b.n	802a38c <arm_radix8_butterfly_f32+0x20>
 802a926:	b01d      	add	sp, #116	; 0x74
 802a928:	ecbd 8b10 	vpop	{d8-d15}
 802a92c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802a930 <__aeabi_atexit>:
 802a930:	460b      	mov	r3, r1
 802a932:	4601      	mov	r1, r0
 802a934:	4618      	mov	r0, r3
 802a936:	f000 bef3 	b.w	802b720 <__cxa_atexit>

0802a93a <_ZdlPvj>:
 802a93a:	f000 b812 	b.w	802a962 <_ZdlPv>

0802a93e <__cxa_guard_acquire>:
 802a93e:	6803      	ldr	r3, [r0, #0]
 802a940:	07db      	lsls	r3, r3, #31
 802a942:	d406      	bmi.n	802a952 <__cxa_guard_acquire+0x14>
 802a944:	7843      	ldrb	r3, [r0, #1]
 802a946:	b103      	cbz	r3, 802a94a <__cxa_guard_acquire+0xc>
 802a948:	deff      	udf	#255	; 0xff
 802a94a:	2301      	movs	r3, #1
 802a94c:	7043      	strb	r3, [r0, #1]
 802a94e:	4618      	mov	r0, r3
 802a950:	4770      	bx	lr
 802a952:	2000      	movs	r0, #0
 802a954:	4770      	bx	lr

0802a956 <__cxa_guard_release>:
 802a956:	2301      	movs	r3, #1
 802a958:	6003      	str	r3, [r0, #0]
 802a95a:	4770      	bx	lr

0802a95c <__cxa_pure_virtual>:
 802a95c:	b508      	push	{r3, lr}
 802a95e:	f000 f80f 	bl	802a980 <_ZSt9terminatev>

0802a962 <_ZdlPv>:
 802a962:	f000 be29 	b.w	802b5b8 <free>

0802a966 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802a966:	b508      	push	{r3, lr}
 802a968:	4780      	blx	r0
 802a96a:	f000 fdf1 	bl	802b550 <abort>
	...

0802a970 <_ZSt13get_terminatev>:
 802a970:	4b02      	ldr	r3, [pc, #8]	; (802a97c <_ZSt13get_terminatev+0xc>)
 802a972:	6818      	ldr	r0, [r3, #0]
 802a974:	f3bf 8f5b 	dmb	ish
 802a978:	4770      	bx	lr
 802a97a:	bf00      	nop
 802a97c:	20000104 	.word	0x20000104

0802a980 <_ZSt9terminatev>:
 802a980:	b508      	push	{r3, lr}
 802a982:	f7ff fff5 	bl	802a970 <_ZSt13get_terminatev>
 802a986:	f7ff ffee 	bl	802a966 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0802a98c <sqrtf>:
 802a98c:	b508      	push	{r3, lr}
 802a98e:	ed2d 8b02 	vpush	{d8}
 802a992:	eeb0 8a40 	vmov.f32	s16, s0
 802a996:	f000 f8a1 	bl	802aadc <__ieee754_sqrtf>
 802a99a:	eeb4 8a48 	vcmp.f32	s16, s16
 802a99e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9a2:	d60c      	bvs.n	802a9be <sqrtf+0x32>
 802a9a4:	eddf 8a07 	vldr	s17, [pc, #28]	; 802a9c4 <sqrtf+0x38>
 802a9a8:	eeb4 8ae8 	vcmpe.f32	s16, s17
 802a9ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802a9b0:	d505      	bpl.n	802a9be <sqrtf+0x32>
 802a9b2:	f001 f8d3 	bl	802bb5c <__errno>
 802a9b6:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 802a9ba:	2321      	movs	r3, #33	; 0x21
 802a9bc:	6003      	str	r3, [r0, #0]
 802a9be:	ecbd 8b02 	vpop	{d8}
 802a9c2:	bd08      	pop	{r3, pc}
 802a9c4:	00000000 	.word	0x00000000

0802a9c8 <cosf>:
 802a9c8:	ee10 3a10 	vmov	r3, s0
 802a9cc:	b507      	push	{r0, r1, r2, lr}
 802a9ce:	4a1e      	ldr	r2, [pc, #120]	; (802aa48 <cosf+0x80>)
 802a9d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802a9d4:	4293      	cmp	r3, r2
 802a9d6:	dc06      	bgt.n	802a9e6 <cosf+0x1e>
 802a9d8:	eddf 0a1c 	vldr	s1, [pc, #112]	; 802aa4c <cosf+0x84>
 802a9dc:	b003      	add	sp, #12
 802a9de:	f85d eb04 	ldr.w	lr, [sp], #4
 802a9e2:	f000 b903 	b.w	802abec <__kernel_cosf>
 802a9e6:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802a9ea:	db04      	blt.n	802a9f6 <cosf+0x2e>
 802a9ec:	ee30 0a40 	vsub.f32	s0, s0, s0
 802a9f0:	b003      	add	sp, #12
 802a9f2:	f85d fb04 	ldr.w	pc, [sp], #4
 802a9f6:	4668      	mov	r0, sp
 802a9f8:	f000 f99e 	bl	802ad38 <__ieee754_rem_pio2f>
 802a9fc:	f000 0003 	and.w	r0, r0, #3
 802aa00:	2801      	cmp	r0, #1
 802aa02:	d009      	beq.n	802aa18 <cosf+0x50>
 802aa04:	2802      	cmp	r0, #2
 802aa06:	d010      	beq.n	802aa2a <cosf+0x62>
 802aa08:	b9b0      	cbnz	r0, 802aa38 <cosf+0x70>
 802aa0a:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa0e:	ed9d 0a00 	vldr	s0, [sp]
 802aa12:	f000 f8eb 	bl	802abec <__kernel_cosf>
 802aa16:	e7eb      	b.n	802a9f0 <cosf+0x28>
 802aa18:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa1c:	ed9d 0a00 	vldr	s0, [sp]
 802aa20:	f000 f942 	bl	802aca8 <__kernel_sinf>
 802aa24:	eeb1 0a40 	vneg.f32	s0, s0
 802aa28:	e7e2      	b.n	802a9f0 <cosf+0x28>
 802aa2a:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa2e:	ed9d 0a00 	vldr	s0, [sp]
 802aa32:	f000 f8db 	bl	802abec <__kernel_cosf>
 802aa36:	e7f5      	b.n	802aa24 <cosf+0x5c>
 802aa38:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa3c:	ed9d 0a00 	vldr	s0, [sp]
 802aa40:	2001      	movs	r0, #1
 802aa42:	f000 f931 	bl	802aca8 <__kernel_sinf>
 802aa46:	e7d3      	b.n	802a9f0 <cosf+0x28>
 802aa48:	3f490fd8 	.word	0x3f490fd8
 802aa4c:	00000000 	.word	0x00000000

0802aa50 <sinf>:
 802aa50:	ee10 3a10 	vmov	r3, s0
 802aa54:	b507      	push	{r0, r1, r2, lr}
 802aa56:	4a1f      	ldr	r2, [pc, #124]	; (802aad4 <sinf+0x84>)
 802aa58:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802aa5c:	4293      	cmp	r3, r2
 802aa5e:	dc07      	bgt.n	802aa70 <sinf+0x20>
 802aa60:	eddf 0a1d 	vldr	s1, [pc, #116]	; 802aad8 <sinf+0x88>
 802aa64:	2000      	movs	r0, #0
 802aa66:	b003      	add	sp, #12
 802aa68:	f85d eb04 	ldr.w	lr, [sp], #4
 802aa6c:	f000 b91c 	b.w	802aca8 <__kernel_sinf>
 802aa70:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 802aa74:	db04      	blt.n	802aa80 <sinf+0x30>
 802aa76:	ee30 0a40 	vsub.f32	s0, s0, s0
 802aa7a:	b003      	add	sp, #12
 802aa7c:	f85d fb04 	ldr.w	pc, [sp], #4
 802aa80:	4668      	mov	r0, sp
 802aa82:	f000 f959 	bl	802ad38 <__ieee754_rem_pio2f>
 802aa86:	f000 0003 	and.w	r0, r0, #3
 802aa8a:	2801      	cmp	r0, #1
 802aa8c:	d00a      	beq.n	802aaa4 <sinf+0x54>
 802aa8e:	2802      	cmp	r0, #2
 802aa90:	d00f      	beq.n	802aab2 <sinf+0x62>
 802aa92:	b9c0      	cbnz	r0, 802aac6 <sinf+0x76>
 802aa94:	eddd 0a01 	vldr	s1, [sp, #4]
 802aa98:	ed9d 0a00 	vldr	s0, [sp]
 802aa9c:	2001      	movs	r0, #1
 802aa9e:	f000 f903 	bl	802aca8 <__kernel_sinf>
 802aaa2:	e7ea      	b.n	802aa7a <sinf+0x2a>
 802aaa4:	eddd 0a01 	vldr	s1, [sp, #4]
 802aaa8:	ed9d 0a00 	vldr	s0, [sp]
 802aaac:	f000 f89e 	bl	802abec <__kernel_cosf>
 802aab0:	e7e3      	b.n	802aa7a <sinf+0x2a>
 802aab2:	eddd 0a01 	vldr	s1, [sp, #4]
 802aab6:	ed9d 0a00 	vldr	s0, [sp]
 802aaba:	2001      	movs	r0, #1
 802aabc:	f000 f8f4 	bl	802aca8 <__kernel_sinf>
 802aac0:	eeb1 0a40 	vneg.f32	s0, s0
 802aac4:	e7d9      	b.n	802aa7a <sinf+0x2a>
 802aac6:	eddd 0a01 	vldr	s1, [sp, #4]
 802aaca:	ed9d 0a00 	vldr	s0, [sp]
 802aace:	f000 f88d 	bl	802abec <__kernel_cosf>
 802aad2:	e7f5      	b.n	802aac0 <sinf+0x70>
 802aad4:	3f490fd8 	.word	0x3f490fd8
 802aad8:	00000000 	.word	0x00000000

0802aadc <__ieee754_sqrtf>:
 802aadc:	eeb1 0ac0 	vsqrt.f32	s0, s0
 802aae0:	4770      	bx	lr
	...

0802aae4 <ceilf>:
 802aae4:	ee10 3a10 	vmov	r3, s0
 802aae8:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802aaec:	3a7f      	subs	r2, #127	; 0x7f
 802aaee:	2a16      	cmp	r2, #22
 802aaf0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802aaf4:	dc2a      	bgt.n	802ab4c <ceilf+0x68>
 802aaf6:	2a00      	cmp	r2, #0
 802aaf8:	da11      	bge.n	802ab1e <ceilf+0x3a>
 802aafa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802ab60 <ceilf+0x7c>
 802aafe:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ab02:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ab06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab0a:	dd05      	ble.n	802ab18 <ceilf+0x34>
 802ab0c:	2b00      	cmp	r3, #0
 802ab0e:	db23      	blt.n	802ab58 <ceilf+0x74>
 802ab10:	2900      	cmp	r1, #0
 802ab12:	bf18      	it	ne
 802ab14:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802ab18:	ee00 3a10 	vmov	s0, r3
 802ab1c:	4770      	bx	lr
 802ab1e:	4911      	ldr	r1, [pc, #68]	; (802ab64 <ceilf+0x80>)
 802ab20:	4111      	asrs	r1, r2
 802ab22:	420b      	tst	r3, r1
 802ab24:	d0fa      	beq.n	802ab1c <ceilf+0x38>
 802ab26:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802ab60 <ceilf+0x7c>
 802ab2a:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ab2e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ab32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab36:	ddef      	ble.n	802ab18 <ceilf+0x34>
 802ab38:	2b00      	cmp	r3, #0
 802ab3a:	bfc2      	ittt	gt
 802ab3c:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 802ab40:	fa40 f202 	asrgt.w	r2, r0, r2
 802ab44:	189b      	addgt	r3, r3, r2
 802ab46:	ea23 0301 	bic.w	r3, r3, r1
 802ab4a:	e7e5      	b.n	802ab18 <ceilf+0x34>
 802ab4c:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802ab50:	d3e4      	bcc.n	802ab1c <ceilf+0x38>
 802ab52:	ee30 0a00 	vadd.f32	s0, s0, s0
 802ab56:	4770      	bx	lr
 802ab58:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 802ab5c:	e7dc      	b.n	802ab18 <ceilf+0x34>
 802ab5e:	bf00      	nop
 802ab60:	7149f2ca 	.word	0x7149f2ca
 802ab64:	007fffff 	.word	0x007fffff

0802ab68 <floorf>:
 802ab68:	ee10 3a10 	vmov	r3, s0
 802ab6c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802ab70:	3a7f      	subs	r2, #127	; 0x7f
 802ab72:	2a16      	cmp	r2, #22
 802ab74:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802ab78:	dc2a      	bgt.n	802abd0 <floorf+0x68>
 802ab7a:	2a00      	cmp	r2, #0
 802ab7c:	da11      	bge.n	802aba2 <floorf+0x3a>
 802ab7e:	eddf 7a18 	vldr	s15, [pc, #96]	; 802abe0 <floorf+0x78>
 802ab82:	ee30 0a27 	vadd.f32	s0, s0, s15
 802ab86:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802ab8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802ab8e:	dd05      	ble.n	802ab9c <floorf+0x34>
 802ab90:	2b00      	cmp	r3, #0
 802ab92:	da23      	bge.n	802abdc <floorf+0x74>
 802ab94:	4a13      	ldr	r2, [pc, #76]	; (802abe4 <floorf+0x7c>)
 802ab96:	2900      	cmp	r1, #0
 802ab98:	bf18      	it	ne
 802ab9a:	4613      	movne	r3, r2
 802ab9c:	ee00 3a10 	vmov	s0, r3
 802aba0:	4770      	bx	lr
 802aba2:	4911      	ldr	r1, [pc, #68]	; (802abe8 <floorf+0x80>)
 802aba4:	4111      	asrs	r1, r2
 802aba6:	420b      	tst	r3, r1
 802aba8:	d0fa      	beq.n	802aba0 <floorf+0x38>
 802abaa:	eddf 7a0d 	vldr	s15, [pc, #52]	; 802abe0 <floorf+0x78>
 802abae:	ee30 0a27 	vadd.f32	s0, s0, s15
 802abb2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802abb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802abba:	ddef      	ble.n	802ab9c <floorf+0x34>
 802abbc:	2b00      	cmp	r3, #0
 802abbe:	bfbe      	ittt	lt
 802abc0:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 802abc4:	fa40 f202 	asrlt.w	r2, r0, r2
 802abc8:	189b      	addlt	r3, r3, r2
 802abca:	ea23 0301 	bic.w	r3, r3, r1
 802abce:	e7e5      	b.n	802ab9c <floorf+0x34>
 802abd0:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 802abd4:	d3e4      	bcc.n	802aba0 <floorf+0x38>
 802abd6:	ee30 0a00 	vadd.f32	s0, s0, s0
 802abda:	4770      	bx	lr
 802abdc:	2300      	movs	r3, #0
 802abde:	e7dd      	b.n	802ab9c <floorf+0x34>
 802abe0:	7149f2ca 	.word	0x7149f2ca
 802abe4:	bf800000 	.word	0xbf800000
 802abe8:	007fffff 	.word	0x007fffff

0802abec <__kernel_cosf>:
 802abec:	ee10 3a10 	vmov	r3, s0
 802abf0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802abf4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802abf8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802abfc:	da05      	bge.n	802ac0a <__kernel_cosf+0x1e>
 802abfe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802ac02:	ee17 2a90 	vmov	r2, s15
 802ac06:	2a00      	cmp	r2, #0
 802ac08:	d03b      	beq.n	802ac82 <__kernel_cosf+0x96>
 802ac0a:	ee20 7a00 	vmul.f32	s14, s0, s0
 802ac0e:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802ac88 <__kernel_cosf+0x9c>
 802ac12:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 802ac8c <__kernel_cosf+0xa0>
 802ac16:	4a1e      	ldr	r2, [pc, #120]	; (802ac90 <__kernel_cosf+0xa4>)
 802ac18:	eea7 6a27 	vfma.f32	s12, s14, s15
 802ac1c:	4293      	cmp	r3, r2
 802ac1e:	eddf 7a1d 	vldr	s15, [pc, #116]	; 802ac94 <__kernel_cosf+0xa8>
 802ac22:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ac26:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802ac98 <__kernel_cosf+0xac>
 802ac2a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ac2e:	eddf 7a1b 	vldr	s15, [pc, #108]	; 802ac9c <__kernel_cosf+0xb0>
 802ac32:	eee6 7a07 	vfma.f32	s15, s12, s14
 802ac36:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 802aca0 <__kernel_cosf+0xb4>
 802ac3a:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ac3e:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 802ac42:	ee26 6a07 	vmul.f32	s12, s12, s14
 802ac46:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ac4a:	eee7 0a06 	vfma.f32	s1, s14, s12
 802ac4e:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ac52:	dc04      	bgt.n	802ac5e <__kernel_cosf+0x72>
 802ac54:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ac58:	ee36 0ae7 	vsub.f32	s0, s13, s15
 802ac5c:	4770      	bx	lr
 802ac5e:	4a11      	ldr	r2, [pc, #68]	; (802aca4 <__kernel_cosf+0xb8>)
 802ac60:	4293      	cmp	r3, r2
 802ac62:	bfda      	itte	le
 802ac64:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802ac68:	ee07 3a10 	vmovle	s14, r3
 802ac6c:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 802ac70:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ac74:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802ac78:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802ac7c:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ac80:	4770      	bx	lr
 802ac82:	eeb0 0a66 	vmov.f32	s0, s13
 802ac86:	4770      	bx	lr
 802ac88:	ad47d74e 	.word	0xad47d74e
 802ac8c:	310f74f6 	.word	0x310f74f6
 802ac90:	3e999999 	.word	0x3e999999
 802ac94:	b493f27c 	.word	0xb493f27c
 802ac98:	37d00d01 	.word	0x37d00d01
 802ac9c:	bab60b61 	.word	0xbab60b61
 802aca0:	3d2aaaab 	.word	0x3d2aaaab
 802aca4:	3f480000 	.word	0x3f480000

0802aca8 <__kernel_sinf>:
 802aca8:	ee10 3a10 	vmov	r3, s0
 802acac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802acb0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802acb4:	da04      	bge.n	802acc0 <__kernel_sinf+0x18>
 802acb6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 802acba:	ee17 3a90 	vmov	r3, s15
 802acbe:	b35b      	cbz	r3, 802ad18 <__kernel_sinf+0x70>
 802acc0:	ee20 7a00 	vmul.f32	s14, s0, s0
 802acc4:	eddf 7a15 	vldr	s15, [pc, #84]	; 802ad1c <__kernel_sinf+0x74>
 802acc8:	ed9f 6a15 	vldr	s12, [pc, #84]	; 802ad20 <__kernel_sinf+0x78>
 802accc:	eea7 6a27 	vfma.f32	s12, s14, s15
 802acd0:	eddf 7a14 	vldr	s15, [pc, #80]	; 802ad24 <__kernel_sinf+0x7c>
 802acd4:	eee6 7a07 	vfma.f32	s15, s12, s14
 802acd8:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802ad28 <__kernel_sinf+0x80>
 802acdc:	eea7 6a87 	vfma.f32	s12, s15, s14
 802ace0:	eddf 7a12 	vldr	s15, [pc, #72]	; 802ad2c <__kernel_sinf+0x84>
 802ace4:	ee60 6a07 	vmul.f32	s13, s0, s14
 802ace8:	eee6 7a07 	vfma.f32	s15, s12, s14
 802acec:	b930      	cbnz	r0, 802acfc <__kernel_sinf+0x54>
 802acee:	ed9f 6a10 	vldr	s12, [pc, #64]	; 802ad30 <__kernel_sinf+0x88>
 802acf2:	eea7 6a27 	vfma.f32	s12, s14, s15
 802acf6:	eea6 0a26 	vfma.f32	s0, s12, s13
 802acfa:	4770      	bx	lr
 802acfc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 802ad00:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 802ad04:	eee0 7a86 	vfma.f32	s15, s1, s12
 802ad08:	eed7 0a87 	vfnms.f32	s1, s15, s14
 802ad0c:	eddf 7a09 	vldr	s15, [pc, #36]	; 802ad34 <__kernel_sinf+0x8c>
 802ad10:	eee6 0aa7 	vfma.f32	s1, s13, s15
 802ad14:	ee30 0a60 	vsub.f32	s0, s0, s1
 802ad18:	4770      	bx	lr
 802ad1a:	bf00      	nop
 802ad1c:	2f2ec9d3 	.word	0x2f2ec9d3
 802ad20:	b2d72f34 	.word	0xb2d72f34
 802ad24:	3638ef1b 	.word	0x3638ef1b
 802ad28:	b9500d01 	.word	0xb9500d01
 802ad2c:	3c088889 	.word	0x3c088889
 802ad30:	be2aaaab 	.word	0xbe2aaaab
 802ad34:	3e2aaaab 	.word	0x3e2aaaab

0802ad38 <__ieee754_rem_pio2f>:
 802ad38:	b5f0      	push	{r4, r5, r6, r7, lr}
 802ad3a:	ee10 6a10 	vmov	r6, s0
 802ad3e:	4b86      	ldr	r3, [pc, #536]	; (802af58 <__ieee754_rem_pio2f+0x220>)
 802ad40:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 802ad44:	429d      	cmp	r5, r3
 802ad46:	b087      	sub	sp, #28
 802ad48:	4604      	mov	r4, r0
 802ad4a:	dc05      	bgt.n	802ad58 <__ieee754_rem_pio2f+0x20>
 802ad4c:	2300      	movs	r3, #0
 802ad4e:	ed80 0a00 	vstr	s0, [r0]
 802ad52:	6043      	str	r3, [r0, #4]
 802ad54:	2000      	movs	r0, #0
 802ad56:	e020      	b.n	802ad9a <__ieee754_rem_pio2f+0x62>
 802ad58:	4b80      	ldr	r3, [pc, #512]	; (802af5c <__ieee754_rem_pio2f+0x224>)
 802ad5a:	429d      	cmp	r5, r3
 802ad5c:	dc38      	bgt.n	802add0 <__ieee754_rem_pio2f+0x98>
 802ad5e:	2e00      	cmp	r6, #0
 802ad60:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 802af60 <__ieee754_rem_pio2f+0x228>
 802ad64:	4b7f      	ldr	r3, [pc, #508]	; (802af64 <__ieee754_rem_pio2f+0x22c>)
 802ad66:	f025 050f 	bic.w	r5, r5, #15
 802ad6a:	dd18      	ble.n	802ad9e <__ieee754_rem_pio2f+0x66>
 802ad6c:	429d      	cmp	r5, r3
 802ad6e:	ee70 7a47 	vsub.f32	s15, s0, s14
 802ad72:	bf09      	itett	eq
 802ad74:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802af68 <__ieee754_rem_pio2f+0x230>
 802ad78:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 802af6c <__ieee754_rem_pio2f+0x234>
 802ad7c:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 802ad80:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 802af70 <__ieee754_rem_pio2f+0x238>
 802ad84:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802ad88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802ad8c:	edc0 6a00 	vstr	s13, [r0]
 802ad90:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802ad94:	edc0 7a01 	vstr	s15, [r0, #4]
 802ad98:	2001      	movs	r0, #1
 802ad9a:	b007      	add	sp, #28
 802ad9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802ad9e:	429d      	cmp	r5, r3
 802ada0:	ee70 7a07 	vadd.f32	s15, s0, s14
 802ada4:	bf09      	itett	eq
 802ada6:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802af68 <__ieee754_rem_pio2f+0x230>
 802adaa:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 802af6c <__ieee754_rem_pio2f+0x234>
 802adae:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 802adb2:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 802af70 <__ieee754_rem_pio2f+0x238>
 802adb6:	ee77 6a87 	vadd.f32	s13, s15, s14
 802adba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802adbe:	edc0 6a00 	vstr	s13, [r0]
 802adc2:	ee77 7a87 	vadd.f32	s15, s15, s14
 802adc6:	edc0 7a01 	vstr	s15, [r0, #4]
 802adca:	f04f 30ff 	mov.w	r0, #4294967295
 802adce:	e7e4      	b.n	802ad9a <__ieee754_rem_pio2f+0x62>
 802add0:	4b68      	ldr	r3, [pc, #416]	; (802af74 <__ieee754_rem_pio2f+0x23c>)
 802add2:	429d      	cmp	r5, r3
 802add4:	dc71      	bgt.n	802aeba <__ieee754_rem_pio2f+0x182>
 802add6:	f000 f8db 	bl	802af90 <fabsf>
 802adda:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802af78 <__ieee754_rem_pio2f+0x240>
 802adde:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802ade2:	eee0 7a07 	vfma.f32	s15, s0, s14
 802ade6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802adea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 802adee:	ee17 0a90 	vmov	r0, s15
 802adf2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802af60 <__ieee754_rem_pio2f+0x228>
 802adf6:	eea7 0a67 	vfms.f32	s0, s14, s15
 802adfa:	281f      	cmp	r0, #31
 802adfc:	eddf 7a5b 	vldr	s15, [pc, #364]	; 802af6c <__ieee754_rem_pio2f+0x234>
 802ae00:	ee67 7a27 	vmul.f32	s15, s14, s15
 802ae04:	eeb1 6a47 	vneg.f32	s12, s14
 802ae08:	ee70 6a67 	vsub.f32	s13, s0, s15
 802ae0c:	ee16 2a90 	vmov	r2, s13
 802ae10:	dc1c      	bgt.n	802ae4c <__ieee754_rem_pio2f+0x114>
 802ae12:	495a      	ldr	r1, [pc, #360]	; (802af7c <__ieee754_rem_pio2f+0x244>)
 802ae14:	1e47      	subs	r7, r0, #1
 802ae16:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802ae1a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802ae1e:	428b      	cmp	r3, r1
 802ae20:	d014      	beq.n	802ae4c <__ieee754_rem_pio2f+0x114>
 802ae22:	6022      	str	r2, [r4, #0]
 802ae24:	ed94 7a00 	vldr	s14, [r4]
 802ae28:	ee30 0a47 	vsub.f32	s0, s0, s14
 802ae2c:	2e00      	cmp	r6, #0
 802ae2e:	ee30 0a67 	vsub.f32	s0, s0, s15
 802ae32:	ed84 0a01 	vstr	s0, [r4, #4]
 802ae36:	dab0      	bge.n	802ad9a <__ieee754_rem_pio2f+0x62>
 802ae38:	eeb1 7a47 	vneg.f32	s14, s14
 802ae3c:	eeb1 0a40 	vneg.f32	s0, s0
 802ae40:	ed84 7a00 	vstr	s14, [r4]
 802ae44:	ed84 0a01 	vstr	s0, [r4, #4]
 802ae48:	4240      	negs	r0, r0
 802ae4a:	e7a6      	b.n	802ad9a <__ieee754_rem_pio2f+0x62>
 802ae4c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ae50:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 802ae54:	2908      	cmp	r1, #8
 802ae56:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802ae5a:	dde2      	ble.n	802ae22 <__ieee754_rem_pio2f+0xea>
 802ae5c:	eddf 5a42 	vldr	s11, [pc, #264]	; 802af68 <__ieee754_rem_pio2f+0x230>
 802ae60:	eef0 6a40 	vmov.f32	s13, s0
 802ae64:	eee6 6a25 	vfma.f32	s13, s12, s11
 802ae68:	ee70 7a66 	vsub.f32	s15, s0, s13
 802ae6c:	eee6 7a25 	vfma.f32	s15, s12, s11
 802ae70:	eddf 5a3f 	vldr	s11, [pc, #252]	; 802af70 <__ieee754_rem_pio2f+0x238>
 802ae74:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802ae78:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802ae7c:	ee15 2a90 	vmov	r2, s11
 802ae80:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 802ae84:	1a5b      	subs	r3, r3, r1
 802ae86:	2b19      	cmp	r3, #25
 802ae88:	dc04      	bgt.n	802ae94 <__ieee754_rem_pio2f+0x15c>
 802ae8a:	edc4 5a00 	vstr	s11, [r4]
 802ae8e:	eeb0 0a66 	vmov.f32	s0, s13
 802ae92:	e7c7      	b.n	802ae24 <__ieee754_rem_pio2f+0xec>
 802ae94:	eddf 5a3a 	vldr	s11, [pc, #232]	; 802af80 <__ieee754_rem_pio2f+0x248>
 802ae98:	eeb0 0a66 	vmov.f32	s0, s13
 802ae9c:	eea6 0a25 	vfma.f32	s0, s12, s11
 802aea0:	ee76 7ac0 	vsub.f32	s15, s13, s0
 802aea4:	eddf 6a37 	vldr	s13, [pc, #220]	; 802af84 <__ieee754_rem_pio2f+0x24c>
 802aea8:	eee6 7a25 	vfma.f32	s15, s12, s11
 802aeac:	eed7 7a26 	vfnms.f32	s15, s14, s13
 802aeb0:	ee30 7a67 	vsub.f32	s14, s0, s15
 802aeb4:	ed84 7a00 	vstr	s14, [r4]
 802aeb8:	e7b4      	b.n	802ae24 <__ieee754_rem_pio2f+0xec>
 802aeba:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 802aebe:	db06      	blt.n	802aece <__ieee754_rem_pio2f+0x196>
 802aec0:	ee70 7a40 	vsub.f32	s15, s0, s0
 802aec4:	edc0 7a01 	vstr	s15, [r0, #4]
 802aec8:	edc0 7a00 	vstr	s15, [r0]
 802aecc:	e742      	b.n	802ad54 <__ieee754_rem_pio2f+0x1c>
 802aece:	15ea      	asrs	r2, r5, #23
 802aed0:	3a86      	subs	r2, #134	; 0x86
 802aed2:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 802aed6:	ee07 3a90 	vmov	s15, r3
 802aeda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802aede:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802af88 <__ieee754_rem_pio2f+0x250>
 802aee2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802aee6:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aeea:	ed8d 7a03 	vstr	s14, [sp, #12]
 802aeee:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802aef2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802aef6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 802aefa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802aefe:	ed8d 7a04 	vstr	s14, [sp, #16]
 802af02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802af06:	eef5 7a40 	vcmp.f32	s15, #0.0
 802af0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af0e:	edcd 7a05 	vstr	s15, [sp, #20]
 802af12:	d11e      	bne.n	802af52 <__ieee754_rem_pio2f+0x21a>
 802af14:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802af18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802af1c:	bf14      	ite	ne
 802af1e:	2302      	movne	r3, #2
 802af20:	2301      	moveq	r3, #1
 802af22:	491a      	ldr	r1, [pc, #104]	; (802af8c <__ieee754_rem_pio2f+0x254>)
 802af24:	9101      	str	r1, [sp, #4]
 802af26:	2102      	movs	r1, #2
 802af28:	9100      	str	r1, [sp, #0]
 802af2a:	a803      	add	r0, sp, #12
 802af2c:	4621      	mov	r1, r4
 802af2e:	f000 f89d 	bl	802b06c <__kernel_rem_pio2f>
 802af32:	2e00      	cmp	r6, #0
 802af34:	f6bf af31 	bge.w	802ad9a <__ieee754_rem_pio2f+0x62>
 802af38:	edd4 7a00 	vldr	s15, [r4]
 802af3c:	eef1 7a67 	vneg.f32	s15, s15
 802af40:	edc4 7a00 	vstr	s15, [r4]
 802af44:	edd4 7a01 	vldr	s15, [r4, #4]
 802af48:	eef1 7a67 	vneg.f32	s15, s15
 802af4c:	edc4 7a01 	vstr	s15, [r4, #4]
 802af50:	e77a      	b.n	802ae48 <__ieee754_rem_pio2f+0x110>
 802af52:	2303      	movs	r3, #3
 802af54:	e7e5      	b.n	802af22 <__ieee754_rem_pio2f+0x1ea>
 802af56:	bf00      	nop
 802af58:	3f490fd8 	.word	0x3f490fd8
 802af5c:	4016cbe3 	.word	0x4016cbe3
 802af60:	3fc90f80 	.word	0x3fc90f80
 802af64:	3fc90fd0 	.word	0x3fc90fd0
 802af68:	37354400 	.word	0x37354400
 802af6c:	37354443 	.word	0x37354443
 802af70:	2e85a308 	.word	0x2e85a308
 802af74:	43490f80 	.word	0x43490f80
 802af78:	3f22f984 	.word	0x3f22f984
 802af7c:	080433d8 	.word	0x080433d8
 802af80:	2e85a300 	.word	0x2e85a300
 802af84:	248d3132 	.word	0x248d3132
 802af88:	43800000 	.word	0x43800000
 802af8c:	08043458 	.word	0x08043458

0802af90 <fabsf>:
 802af90:	ee10 3a10 	vmov	r3, s0
 802af94:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802af98:	ee00 3a10 	vmov	s0, r3
 802af9c:	4770      	bx	lr
	...

0802afa0 <scalbnf>:
 802afa0:	ee10 3a10 	vmov	r3, s0
 802afa4:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802afa8:	d02b      	beq.n	802b002 <scalbnf+0x62>
 802afaa:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 802afae:	d302      	bcc.n	802afb6 <scalbnf+0x16>
 802afb0:	ee30 0a00 	vadd.f32	s0, s0, s0
 802afb4:	4770      	bx	lr
 802afb6:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 802afba:	d123      	bne.n	802b004 <scalbnf+0x64>
 802afbc:	4b24      	ldr	r3, [pc, #144]	; (802b050 <scalbnf+0xb0>)
 802afbe:	eddf 7a25 	vldr	s15, [pc, #148]	; 802b054 <scalbnf+0xb4>
 802afc2:	4298      	cmp	r0, r3
 802afc4:	ee20 0a27 	vmul.f32	s0, s0, s15
 802afc8:	db17      	blt.n	802affa <scalbnf+0x5a>
 802afca:	ee10 3a10 	vmov	r3, s0
 802afce:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 802afd2:	3a19      	subs	r2, #25
 802afd4:	f24c 3150 	movw	r1, #50000	; 0xc350
 802afd8:	4288      	cmp	r0, r1
 802afda:	dd15      	ble.n	802b008 <scalbnf+0x68>
 802afdc:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802b058 <scalbnf+0xb8>
 802afe0:	eddf 6a1e 	vldr	s13, [pc, #120]	; 802b05c <scalbnf+0xbc>
 802afe4:	ee10 3a10 	vmov	r3, s0
 802afe8:	eeb0 7a67 	vmov.f32	s14, s15
 802afec:	2b00      	cmp	r3, #0
 802afee:	bfb8      	it	lt
 802aff0:	eef0 7a66 	vmovlt.f32	s15, s13
 802aff4:	ee27 0a87 	vmul.f32	s0, s15, s14
 802aff8:	4770      	bx	lr
 802affa:	eddf 7a19 	vldr	s15, [pc, #100]	; 802b060 <scalbnf+0xc0>
 802affe:	ee27 0a80 	vmul.f32	s0, s15, s0
 802b002:	4770      	bx	lr
 802b004:	0dd2      	lsrs	r2, r2, #23
 802b006:	e7e5      	b.n	802afd4 <scalbnf+0x34>
 802b008:	4410      	add	r0, r2
 802b00a:	28fe      	cmp	r0, #254	; 0xfe
 802b00c:	dce6      	bgt.n	802afdc <scalbnf+0x3c>
 802b00e:	2800      	cmp	r0, #0
 802b010:	dd06      	ble.n	802b020 <scalbnf+0x80>
 802b012:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b016:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b01a:	ee00 3a10 	vmov	s0, r3
 802b01e:	4770      	bx	lr
 802b020:	f110 0f16 	cmn.w	r0, #22
 802b024:	da09      	bge.n	802b03a <scalbnf+0x9a>
 802b026:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b060 <scalbnf+0xc0>
 802b02a:	eddf 6a0e 	vldr	s13, [pc, #56]	; 802b064 <scalbnf+0xc4>
 802b02e:	ee10 3a10 	vmov	r3, s0
 802b032:	eeb0 7a67 	vmov.f32	s14, s15
 802b036:	2b00      	cmp	r3, #0
 802b038:	e7d9      	b.n	802afee <scalbnf+0x4e>
 802b03a:	3019      	adds	r0, #25
 802b03c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802b040:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802b044:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802b068 <scalbnf+0xc8>
 802b048:	ee07 3a90 	vmov	s15, r3
 802b04c:	e7d7      	b.n	802affe <scalbnf+0x5e>
 802b04e:	bf00      	nop
 802b050:	ffff3cb0 	.word	0xffff3cb0
 802b054:	4c000000 	.word	0x4c000000
 802b058:	7149f2ca 	.word	0x7149f2ca
 802b05c:	f149f2ca 	.word	0xf149f2ca
 802b060:	0da24260 	.word	0x0da24260
 802b064:	8da24260 	.word	0x8da24260
 802b068:	33000000 	.word	0x33000000

0802b06c <__kernel_rem_pio2f>:
 802b06c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b070:	ed2d 8b04 	vpush	{d8-d9}
 802b074:	b0d9      	sub	sp, #356	; 0x164
 802b076:	4688      	mov	r8, r1
 802b078:	9002      	str	r0, [sp, #8]
 802b07a:	49b8      	ldr	r1, [pc, #736]	; (802b35c <__kernel_rem_pio2f+0x2f0>)
 802b07c:	9866      	ldr	r0, [sp, #408]	; 0x198
 802b07e:	9301      	str	r3, [sp, #4]
 802b080:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 802b084:	9901      	ldr	r1, [sp, #4]
 802b086:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802b088:	f101 3bff 	add.w	fp, r1, #4294967295
 802b08c:	1d11      	adds	r1, r2, #4
 802b08e:	db25      	blt.n	802b0dc <__kernel_rem_pio2f+0x70>
 802b090:	1ed0      	subs	r0, r2, #3
 802b092:	bf48      	it	mi
 802b094:	1d10      	addmi	r0, r2, #4
 802b096:	10c0      	asrs	r0, r0, #3
 802b098:	1c45      	adds	r5, r0, #1
 802b09a:	00e9      	lsls	r1, r5, #3
 802b09c:	eba0 070b 	sub.w	r7, r0, fp
 802b0a0:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b0a4:	9103      	str	r1, [sp, #12]
 802b0a6:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802b0aa:	eb0a 0c0b 	add.w	ip, sl, fp
 802b0ae:	ae1c      	add	r6, sp, #112	; 0x70
 802b0b0:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 802b0b4:	2400      	movs	r4, #0
 802b0b6:	4564      	cmp	r4, ip
 802b0b8:	dd12      	ble.n	802b0e0 <__kernel_rem_pio2f+0x74>
 802b0ba:	9901      	ldr	r1, [sp, #4]
 802b0bc:	ac1c      	add	r4, sp, #112	; 0x70
 802b0be:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 802b0c2:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 802b0c6:	f04f 0c00 	mov.w	ip, #0
 802b0ca:	45d4      	cmp	ip, sl
 802b0cc:	dc27      	bgt.n	802b11e <__kernel_rem_pio2f+0xb2>
 802b0ce:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b0d2:	eddf 7aa6 	vldr	s15, [pc, #664]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b0d6:	4627      	mov	r7, r4
 802b0d8:	2600      	movs	r6, #0
 802b0da:	e016      	b.n	802b10a <__kernel_rem_pio2f+0x9e>
 802b0dc:	2000      	movs	r0, #0
 802b0de:	e7db      	b.n	802b098 <__kernel_rem_pio2f+0x2c>
 802b0e0:	42e7      	cmn	r7, r4
 802b0e2:	bf5d      	ittte	pl
 802b0e4:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 802b0e8:	ee07 1a90 	vmovpl	s15, r1
 802b0ec:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 802b0f0:	eef0 7a47 	vmovmi.f32	s15, s14
 802b0f4:	ece6 7a01 	vstmia	r6!, {s15}
 802b0f8:	3401      	adds	r4, #1
 802b0fa:	e7dc      	b.n	802b0b6 <__kernel_rem_pio2f+0x4a>
 802b0fc:	ecfe 6a01 	vldmia	lr!, {s13}
 802b100:	ed97 7a00 	vldr	s14, [r7]
 802b104:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b108:	3601      	adds	r6, #1
 802b10a:	455e      	cmp	r6, fp
 802b10c:	f1a7 0704 	sub.w	r7, r7, #4
 802b110:	ddf4      	ble.n	802b0fc <__kernel_rem_pio2f+0x90>
 802b112:	ece9 7a01 	vstmia	r9!, {s15}
 802b116:	f10c 0c01 	add.w	ip, ip, #1
 802b11a:	3404      	adds	r4, #4
 802b11c:	e7d5      	b.n	802b0ca <__kernel_rem_pio2f+0x5e>
 802b11e:	a908      	add	r1, sp, #32
 802b120:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 802b124:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802b128:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802b368 <__kernel_rem_pio2f+0x2fc>
 802b12c:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 802b364 <__kernel_rem_pio2f+0x2f8>
 802b130:	9105      	str	r1, [sp, #20]
 802b132:	9304      	str	r3, [sp, #16]
 802b134:	4656      	mov	r6, sl
 802b136:	00b3      	lsls	r3, r6, #2
 802b138:	9306      	str	r3, [sp, #24]
 802b13a:	ab58      	add	r3, sp, #352	; 0x160
 802b13c:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b140:	ac08      	add	r4, sp, #32
 802b142:	ab44      	add	r3, sp, #272	; 0x110
 802b144:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802b148:	46a4      	mov	ip, r4
 802b14a:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 802b14e:	4637      	mov	r7, r6
 802b150:	2f00      	cmp	r7, #0
 802b152:	f1a0 0004 	sub.w	r0, r0, #4
 802b156:	dc4a      	bgt.n	802b1ee <__kernel_rem_pio2f+0x182>
 802b158:	4628      	mov	r0, r5
 802b15a:	9207      	str	r2, [sp, #28]
 802b15c:	f7ff ff20 	bl	802afa0 <scalbnf>
 802b160:	eeb0 8a40 	vmov.f32	s16, s0
 802b164:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802b168:	ee28 0a00 	vmul.f32	s0, s16, s0
 802b16c:	f7ff fcfc 	bl	802ab68 <floorf>
 802b170:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802b174:	eea0 8a67 	vfms.f32	s16, s0, s15
 802b178:	2d00      	cmp	r5, #0
 802b17a:	9a07      	ldr	r2, [sp, #28]
 802b17c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 802b180:	ee17 9a90 	vmov	r9, s15
 802b184:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b188:	ee38 8a67 	vsub.f32	s16, s16, s15
 802b18c:	dd41      	ble.n	802b212 <__kernel_rem_pio2f+0x1a6>
 802b18e:	f106 3cff 	add.w	ip, r6, #4294967295
 802b192:	ab08      	add	r3, sp, #32
 802b194:	f1c5 0e08 	rsb	lr, r5, #8
 802b198:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 802b19c:	fa47 f00e 	asr.w	r0, r7, lr
 802b1a0:	4481      	add	r9, r0
 802b1a2:	fa00 f00e 	lsl.w	r0, r0, lr
 802b1a6:	1a3f      	subs	r7, r7, r0
 802b1a8:	f1c5 0007 	rsb	r0, r5, #7
 802b1ac:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 802b1b0:	4107      	asrs	r7, r0
 802b1b2:	2f00      	cmp	r7, #0
 802b1b4:	dd3c      	ble.n	802b230 <__kernel_rem_pio2f+0x1c4>
 802b1b6:	f04f 0e00 	mov.w	lr, #0
 802b1ba:	f109 0901 	add.w	r9, r9, #1
 802b1be:	4671      	mov	r1, lr
 802b1c0:	4576      	cmp	r6, lr
 802b1c2:	dc67      	bgt.n	802b294 <__kernel_rem_pio2f+0x228>
 802b1c4:	2d00      	cmp	r5, #0
 802b1c6:	dd03      	ble.n	802b1d0 <__kernel_rem_pio2f+0x164>
 802b1c8:	2d01      	cmp	r5, #1
 802b1ca:	d074      	beq.n	802b2b6 <__kernel_rem_pio2f+0x24a>
 802b1cc:	2d02      	cmp	r5, #2
 802b1ce:	d07b      	beq.n	802b2c8 <__kernel_rem_pio2f+0x25c>
 802b1d0:	2f02      	cmp	r7, #2
 802b1d2:	d12d      	bne.n	802b230 <__kernel_rem_pio2f+0x1c4>
 802b1d4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b1d8:	ee30 8a48 	vsub.f32	s16, s0, s16
 802b1dc:	b341      	cbz	r1, 802b230 <__kernel_rem_pio2f+0x1c4>
 802b1de:	4628      	mov	r0, r5
 802b1e0:	9207      	str	r2, [sp, #28]
 802b1e2:	f7ff fedd 	bl	802afa0 <scalbnf>
 802b1e6:	9a07      	ldr	r2, [sp, #28]
 802b1e8:	ee38 8a40 	vsub.f32	s16, s16, s0
 802b1ec:	e020      	b.n	802b230 <__kernel_rem_pio2f+0x1c4>
 802b1ee:	ee60 7a28 	vmul.f32	s15, s0, s17
 802b1f2:	3f01      	subs	r7, #1
 802b1f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b1f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b1fc:	eea7 0ac9 	vfms.f32	s0, s15, s18
 802b200:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b204:	ecac 0a01 	vstmia	ip!, {s0}
 802b208:	ed90 0a00 	vldr	s0, [r0]
 802b20c:	ee37 0a80 	vadd.f32	s0, s15, s0
 802b210:	e79e      	b.n	802b150 <__kernel_rem_pio2f+0xe4>
 802b212:	d105      	bne.n	802b220 <__kernel_rem_pio2f+0x1b4>
 802b214:	1e70      	subs	r0, r6, #1
 802b216:	ab08      	add	r3, sp, #32
 802b218:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 802b21c:	11ff      	asrs	r7, r7, #7
 802b21e:	e7c8      	b.n	802b1b2 <__kernel_rem_pio2f+0x146>
 802b220:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802b224:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802b228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b22c:	da30      	bge.n	802b290 <__kernel_rem_pio2f+0x224>
 802b22e:	2700      	movs	r7, #0
 802b230:	eeb5 8a40 	vcmp.f32	s16, #0.0
 802b234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b238:	f040 809a 	bne.w	802b370 <__kernel_rem_pio2f+0x304>
 802b23c:	1e74      	subs	r4, r6, #1
 802b23e:	46a4      	mov	ip, r4
 802b240:	2100      	movs	r1, #0
 802b242:	45d4      	cmp	ip, sl
 802b244:	da47      	bge.n	802b2d6 <__kernel_rem_pio2f+0x26a>
 802b246:	2900      	cmp	r1, #0
 802b248:	d063      	beq.n	802b312 <__kernel_rem_pio2f+0x2a6>
 802b24a:	ab08      	add	r3, sp, #32
 802b24c:	3d08      	subs	r5, #8
 802b24e:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 802b252:	2b00      	cmp	r3, #0
 802b254:	d07f      	beq.n	802b356 <__kernel_rem_pio2f+0x2ea>
 802b256:	4628      	mov	r0, r5
 802b258:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802b25c:	f7ff fea0 	bl	802afa0 <scalbnf>
 802b260:	1c63      	adds	r3, r4, #1
 802b262:	aa44      	add	r2, sp, #272	; 0x110
 802b264:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802b368 <__kernel_rem_pio2f+0x2fc>
 802b268:	0099      	lsls	r1, r3, #2
 802b26a:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 802b26e:	4623      	mov	r3, r4
 802b270:	2b00      	cmp	r3, #0
 802b272:	f280 80ad 	bge.w	802b3d0 <__kernel_rem_pio2f+0x364>
 802b276:	4623      	mov	r3, r4
 802b278:	2b00      	cmp	r3, #0
 802b27a:	f2c0 80cb 	blt.w	802b414 <__kernel_rem_pio2f+0x3a8>
 802b27e:	aa44      	add	r2, sp, #272	; 0x110
 802b280:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 802b284:	4e36      	ldr	r6, [pc, #216]	; (802b360 <__kernel_rem_pio2f+0x2f4>)
 802b286:	eddf 7a39 	vldr	s15, [pc, #228]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b28a:	2000      	movs	r0, #0
 802b28c:	1ae2      	subs	r2, r4, r3
 802b28e:	e0b6      	b.n	802b3fe <__kernel_rem_pio2f+0x392>
 802b290:	2702      	movs	r7, #2
 802b292:	e790      	b.n	802b1b6 <__kernel_rem_pio2f+0x14a>
 802b294:	6820      	ldr	r0, [r4, #0]
 802b296:	b949      	cbnz	r1, 802b2ac <__kernel_rem_pio2f+0x240>
 802b298:	b118      	cbz	r0, 802b2a2 <__kernel_rem_pio2f+0x236>
 802b29a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802b29e:	6020      	str	r0, [r4, #0]
 802b2a0:	2001      	movs	r0, #1
 802b2a2:	f10e 0e01 	add.w	lr, lr, #1
 802b2a6:	3404      	adds	r4, #4
 802b2a8:	4601      	mov	r1, r0
 802b2aa:	e789      	b.n	802b1c0 <__kernel_rem_pio2f+0x154>
 802b2ac:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 802b2b0:	6020      	str	r0, [r4, #0]
 802b2b2:	4608      	mov	r0, r1
 802b2b4:	e7f5      	b.n	802b2a2 <__kernel_rem_pio2f+0x236>
 802b2b6:	1e74      	subs	r4, r6, #1
 802b2b8:	ab08      	add	r3, sp, #32
 802b2ba:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b2be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 802b2c2:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 802b2c6:	e783      	b.n	802b1d0 <__kernel_rem_pio2f+0x164>
 802b2c8:	1e74      	subs	r4, r6, #1
 802b2ca:	ab08      	add	r3, sp, #32
 802b2cc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 802b2d0:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 802b2d4:	e7f5      	b.n	802b2c2 <__kernel_rem_pio2f+0x256>
 802b2d6:	ab08      	add	r3, sp, #32
 802b2d8:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 802b2dc:	f10c 3cff 	add.w	ip, ip, #4294967295
 802b2e0:	4301      	orrs	r1, r0
 802b2e2:	e7ae      	b.n	802b242 <__kernel_rem_pio2f+0x1d6>
 802b2e4:	3001      	adds	r0, #1
 802b2e6:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 802b2ea:	2f00      	cmp	r7, #0
 802b2ec:	d0fa      	beq.n	802b2e4 <__kernel_rem_pio2f+0x278>
 802b2ee:	9b06      	ldr	r3, [sp, #24]
 802b2f0:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 802b2f4:	eb0d 0403 	add.w	r4, sp, r3
 802b2f8:	9b01      	ldr	r3, [sp, #4]
 802b2fa:	18f7      	adds	r7, r6, r3
 802b2fc:	ab1c      	add	r3, sp, #112	; 0x70
 802b2fe:	f106 0c01 	add.w	ip, r6, #1
 802b302:	3c4c      	subs	r4, #76	; 0x4c
 802b304:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 802b308:	4430      	add	r0, r6
 802b30a:	4560      	cmp	r0, ip
 802b30c:	da04      	bge.n	802b318 <__kernel_rem_pio2f+0x2ac>
 802b30e:	4606      	mov	r6, r0
 802b310:	e711      	b.n	802b136 <__kernel_rem_pio2f+0xca>
 802b312:	9c05      	ldr	r4, [sp, #20]
 802b314:	2001      	movs	r0, #1
 802b316:	e7e6      	b.n	802b2e6 <__kernel_rem_pio2f+0x27a>
 802b318:	9b04      	ldr	r3, [sp, #16]
 802b31a:	f8dd e008 	ldr.w	lr, [sp, #8]
 802b31e:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 802b322:	9306      	str	r3, [sp, #24]
 802b324:	ee07 3a90 	vmov	s15, r3
 802b328:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b32c:	2600      	movs	r6, #0
 802b32e:	ece7 7a01 	vstmia	r7!, {s15}
 802b332:	eddf 7a0e 	vldr	s15, [pc, #56]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b336:	46b9      	mov	r9, r7
 802b338:	455e      	cmp	r6, fp
 802b33a:	dd04      	ble.n	802b346 <__kernel_rem_pio2f+0x2da>
 802b33c:	ece4 7a01 	vstmia	r4!, {s15}
 802b340:	f10c 0c01 	add.w	ip, ip, #1
 802b344:	e7e1      	b.n	802b30a <__kernel_rem_pio2f+0x29e>
 802b346:	ecfe 6a01 	vldmia	lr!, {s13}
 802b34a:	ed39 7a01 	vldmdb	r9!, {s14}
 802b34e:	3601      	adds	r6, #1
 802b350:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b354:	e7f0      	b.n	802b338 <__kernel_rem_pio2f+0x2cc>
 802b356:	3c01      	subs	r4, #1
 802b358:	e777      	b.n	802b24a <__kernel_rem_pio2f+0x1de>
 802b35a:	bf00      	nop
 802b35c:	0804379c 	.word	0x0804379c
 802b360:	08043770 	.word	0x08043770
 802b364:	43800000 	.word	0x43800000
 802b368:	3b800000 	.word	0x3b800000
 802b36c:	00000000 	.word	0x00000000
 802b370:	9b03      	ldr	r3, [sp, #12]
 802b372:	eeb0 0a48 	vmov.f32	s0, s16
 802b376:	1a98      	subs	r0, r3, r2
 802b378:	f7ff fe12 	bl	802afa0 <scalbnf>
 802b37c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 802b364 <__kernel_rem_pio2f+0x2f8>
 802b380:	eeb4 0ac7 	vcmpe.f32	s0, s14
 802b384:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802b388:	db19      	blt.n	802b3be <__kernel_rem_pio2f+0x352>
 802b38a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802b368 <__kernel_rem_pio2f+0x2fc>
 802b38e:	ee60 7a27 	vmul.f32	s15, s0, s15
 802b392:	aa08      	add	r2, sp, #32
 802b394:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b398:	1c74      	adds	r4, r6, #1
 802b39a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b39e:	3508      	adds	r5, #8
 802b3a0:	eea7 0ac7 	vfms.f32	s0, s15, s14
 802b3a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802b3a8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b3ac:	ee10 3a10 	vmov	r3, s0
 802b3b0:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b3b4:	ee17 3a90 	vmov	r3, s15
 802b3b8:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802b3bc:	e74b      	b.n	802b256 <__kernel_rem_pio2f+0x1ea>
 802b3be:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802b3c2:	aa08      	add	r2, sp, #32
 802b3c4:	ee10 3a10 	vmov	r3, s0
 802b3c8:	4634      	mov	r4, r6
 802b3ca:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 802b3ce:	e742      	b.n	802b256 <__kernel_rem_pio2f+0x1ea>
 802b3d0:	a808      	add	r0, sp, #32
 802b3d2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 802b3d6:	9001      	str	r0, [sp, #4]
 802b3d8:	ee07 0a90 	vmov	s15, r0
 802b3dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802b3e0:	3b01      	subs	r3, #1
 802b3e2:	ee67 7a80 	vmul.f32	s15, s15, s0
 802b3e6:	ee20 0a07 	vmul.f32	s0, s0, s14
 802b3ea:	ed62 7a01 	vstmdb	r2!, {s15}
 802b3ee:	e73f      	b.n	802b270 <__kernel_rem_pio2f+0x204>
 802b3f0:	ecf6 6a01 	vldmia	r6!, {s13}
 802b3f4:	ecb5 7a01 	vldmia	r5!, {s14}
 802b3f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 802b3fc:	3001      	adds	r0, #1
 802b3fe:	4550      	cmp	r0, sl
 802b400:	dc01      	bgt.n	802b406 <__kernel_rem_pio2f+0x39a>
 802b402:	4290      	cmp	r0, r2
 802b404:	ddf4      	ble.n	802b3f0 <__kernel_rem_pio2f+0x384>
 802b406:	a858      	add	r0, sp, #352	; 0x160
 802b408:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 802b40c:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 802b410:	3b01      	subs	r3, #1
 802b412:	e731      	b.n	802b278 <__kernel_rem_pio2f+0x20c>
 802b414:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b416:	2b02      	cmp	r3, #2
 802b418:	dc09      	bgt.n	802b42e <__kernel_rem_pio2f+0x3c2>
 802b41a:	2b00      	cmp	r3, #0
 802b41c:	dc2b      	bgt.n	802b476 <__kernel_rem_pio2f+0x40a>
 802b41e:	d044      	beq.n	802b4aa <__kernel_rem_pio2f+0x43e>
 802b420:	f009 0007 	and.w	r0, r9, #7
 802b424:	b059      	add	sp, #356	; 0x164
 802b426:	ecbd 8b04 	vpop	{d8-d9}
 802b42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b42e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802b430:	2b03      	cmp	r3, #3
 802b432:	d1f5      	bne.n	802b420 <__kernel_rem_pio2f+0x3b4>
 802b434:	aa30      	add	r2, sp, #192	; 0xc0
 802b436:	1f0b      	subs	r3, r1, #4
 802b438:	4413      	add	r3, r2
 802b43a:	461a      	mov	r2, r3
 802b43c:	4620      	mov	r0, r4
 802b43e:	2800      	cmp	r0, #0
 802b440:	f1a2 0204 	sub.w	r2, r2, #4
 802b444:	dc52      	bgt.n	802b4ec <__kernel_rem_pio2f+0x480>
 802b446:	4622      	mov	r2, r4
 802b448:	2a01      	cmp	r2, #1
 802b44a:	f1a3 0304 	sub.w	r3, r3, #4
 802b44e:	dc5d      	bgt.n	802b50c <__kernel_rem_pio2f+0x4a0>
 802b450:	ab30      	add	r3, sp, #192	; 0xc0
 802b452:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b456:	440b      	add	r3, r1
 802b458:	2c01      	cmp	r4, #1
 802b45a:	dc67      	bgt.n	802b52c <__kernel_rem_pio2f+0x4c0>
 802b45c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802b460:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 802b464:	2f00      	cmp	r7, #0
 802b466:	d167      	bne.n	802b538 <__kernel_rem_pio2f+0x4cc>
 802b468:	edc8 6a00 	vstr	s13, [r8]
 802b46c:	ed88 7a01 	vstr	s14, [r8, #4]
 802b470:	edc8 7a02 	vstr	s15, [r8, #8]
 802b474:	e7d4      	b.n	802b420 <__kernel_rem_pio2f+0x3b4>
 802b476:	ab30      	add	r3, sp, #192	; 0xc0
 802b478:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b47c:	440b      	add	r3, r1
 802b47e:	4622      	mov	r2, r4
 802b480:	2a00      	cmp	r2, #0
 802b482:	da24      	bge.n	802b4ce <__kernel_rem_pio2f+0x462>
 802b484:	b34f      	cbz	r7, 802b4da <__kernel_rem_pio2f+0x46e>
 802b486:	eef1 7a47 	vneg.f32	s15, s14
 802b48a:	edc8 7a00 	vstr	s15, [r8]
 802b48e:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 802b492:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b496:	aa31      	add	r2, sp, #196	; 0xc4
 802b498:	2301      	movs	r3, #1
 802b49a:	429c      	cmp	r4, r3
 802b49c:	da20      	bge.n	802b4e0 <__kernel_rem_pio2f+0x474>
 802b49e:	b10f      	cbz	r7, 802b4a4 <__kernel_rem_pio2f+0x438>
 802b4a0:	eef1 7a67 	vneg.f32	s15, s15
 802b4a4:	edc8 7a01 	vstr	s15, [r8, #4]
 802b4a8:	e7ba      	b.n	802b420 <__kernel_rem_pio2f+0x3b4>
 802b4aa:	ab30      	add	r3, sp, #192	; 0xc0
 802b4ac:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 802b36c <__kernel_rem_pio2f+0x300>
 802b4b0:	440b      	add	r3, r1
 802b4b2:	2c00      	cmp	r4, #0
 802b4b4:	da05      	bge.n	802b4c2 <__kernel_rem_pio2f+0x456>
 802b4b6:	b10f      	cbz	r7, 802b4bc <__kernel_rem_pio2f+0x450>
 802b4b8:	eef1 7a67 	vneg.f32	s15, s15
 802b4bc:	edc8 7a00 	vstr	s15, [r8]
 802b4c0:	e7ae      	b.n	802b420 <__kernel_rem_pio2f+0x3b4>
 802b4c2:	ed33 7a01 	vldmdb	r3!, {s14}
 802b4c6:	3c01      	subs	r4, #1
 802b4c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b4cc:	e7f1      	b.n	802b4b2 <__kernel_rem_pio2f+0x446>
 802b4ce:	ed73 7a01 	vldmdb	r3!, {s15}
 802b4d2:	3a01      	subs	r2, #1
 802b4d4:	ee37 7a27 	vadd.f32	s14, s14, s15
 802b4d8:	e7d2      	b.n	802b480 <__kernel_rem_pio2f+0x414>
 802b4da:	eef0 7a47 	vmov.f32	s15, s14
 802b4de:	e7d4      	b.n	802b48a <__kernel_rem_pio2f+0x41e>
 802b4e0:	ecb2 7a01 	vldmia	r2!, {s14}
 802b4e4:	3301      	adds	r3, #1
 802b4e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b4ea:	e7d6      	b.n	802b49a <__kernel_rem_pio2f+0x42e>
 802b4ec:	edd2 7a00 	vldr	s15, [r2]
 802b4f0:	edd2 6a01 	vldr	s13, [r2, #4]
 802b4f4:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b4f8:	3801      	subs	r0, #1
 802b4fa:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b4fe:	ed82 7a00 	vstr	s14, [r2]
 802b502:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b506:	edc2 7a01 	vstr	s15, [r2, #4]
 802b50a:	e798      	b.n	802b43e <__kernel_rem_pio2f+0x3d2>
 802b50c:	edd3 7a00 	vldr	s15, [r3]
 802b510:	edd3 6a01 	vldr	s13, [r3, #4]
 802b514:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802b518:	3a01      	subs	r2, #1
 802b51a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802b51e:	ed83 7a00 	vstr	s14, [r3]
 802b522:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802b526:	edc3 7a01 	vstr	s15, [r3, #4]
 802b52a:	e78d      	b.n	802b448 <__kernel_rem_pio2f+0x3dc>
 802b52c:	ed33 7a01 	vldmdb	r3!, {s14}
 802b530:	3c01      	subs	r4, #1
 802b532:	ee77 7a87 	vadd.f32	s15, s15, s14
 802b536:	e78f      	b.n	802b458 <__kernel_rem_pio2f+0x3ec>
 802b538:	eef1 6a66 	vneg.f32	s13, s13
 802b53c:	eeb1 7a47 	vneg.f32	s14, s14
 802b540:	edc8 6a00 	vstr	s13, [r8]
 802b544:	ed88 7a01 	vstr	s14, [r8, #4]
 802b548:	eef1 7a67 	vneg.f32	s15, s15
 802b54c:	e790      	b.n	802b470 <__kernel_rem_pio2f+0x404>
 802b54e:	bf00      	nop

0802b550 <abort>:
 802b550:	b508      	push	{r3, lr}
 802b552:	2006      	movs	r0, #6
 802b554:	f000 fa3a 	bl	802b9cc <raise>
 802b558:	2001      	movs	r0, #1
 802b55a:	f7d6 fb07 	bl	8001b6c <_exit>
	...

0802b560 <__assert_func>:
 802b560:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802b562:	4614      	mov	r4, r2
 802b564:	461a      	mov	r2, r3
 802b566:	4b09      	ldr	r3, [pc, #36]	; (802b58c <__assert_func+0x2c>)
 802b568:	681b      	ldr	r3, [r3, #0]
 802b56a:	4605      	mov	r5, r0
 802b56c:	68d8      	ldr	r0, [r3, #12]
 802b56e:	b14c      	cbz	r4, 802b584 <__assert_func+0x24>
 802b570:	4b07      	ldr	r3, [pc, #28]	; (802b590 <__assert_func+0x30>)
 802b572:	9100      	str	r1, [sp, #0]
 802b574:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802b578:	4906      	ldr	r1, [pc, #24]	; (802b594 <__assert_func+0x34>)
 802b57a:	462b      	mov	r3, r5
 802b57c:	f000 f982 	bl	802b884 <fiprintf>
 802b580:	f7ff ffe6 	bl	802b550 <abort>
 802b584:	4b04      	ldr	r3, [pc, #16]	; (802b598 <__assert_func+0x38>)
 802b586:	461c      	mov	r4, r3
 802b588:	e7f3      	b.n	802b572 <__assert_func+0x12>
 802b58a:	bf00      	nop
 802b58c:	20000160 	.word	0x20000160
 802b590:	080437a8 	.word	0x080437a8
 802b594:	080437b5 	.word	0x080437b5
 802b598:	080437e3 	.word	0x080437e3

0802b59c <atexit>:
 802b59c:	2300      	movs	r3, #0
 802b59e:	4601      	mov	r1, r0
 802b5a0:	461a      	mov	r2, r3
 802b5a2:	4618      	mov	r0, r3
 802b5a4:	f000 bb16 	b.w	802bbd4 <__register_exitproc>

0802b5a8 <malloc>:
 802b5a8:	4b02      	ldr	r3, [pc, #8]	; (802b5b4 <malloc+0xc>)
 802b5aa:	4601      	mov	r1, r0
 802b5ac:	6818      	ldr	r0, [r3, #0]
 802b5ae:	f000 b82b 	b.w	802b608 <_malloc_r>
 802b5b2:	bf00      	nop
 802b5b4:	20000160 	.word	0x20000160

0802b5b8 <free>:
 802b5b8:	4b02      	ldr	r3, [pc, #8]	; (802b5c4 <free+0xc>)
 802b5ba:	4601      	mov	r1, r0
 802b5bc:	6818      	ldr	r0, [r3, #0]
 802b5be:	f000 bb67 	b.w	802bc90 <_free_r>
 802b5c2:	bf00      	nop
 802b5c4:	20000160 	.word	0x20000160

0802b5c8 <sbrk_aligned>:
 802b5c8:	b570      	push	{r4, r5, r6, lr}
 802b5ca:	4e0e      	ldr	r6, [pc, #56]	; (802b604 <sbrk_aligned+0x3c>)
 802b5cc:	460c      	mov	r4, r1
 802b5ce:	6831      	ldr	r1, [r6, #0]
 802b5d0:	4605      	mov	r5, r0
 802b5d2:	b911      	cbnz	r1, 802b5da <sbrk_aligned+0x12>
 802b5d4:	f000 faa0 	bl	802bb18 <_sbrk_r>
 802b5d8:	6030      	str	r0, [r6, #0]
 802b5da:	4621      	mov	r1, r4
 802b5dc:	4628      	mov	r0, r5
 802b5de:	f000 fa9b 	bl	802bb18 <_sbrk_r>
 802b5e2:	1c43      	adds	r3, r0, #1
 802b5e4:	d00a      	beq.n	802b5fc <sbrk_aligned+0x34>
 802b5e6:	1cc4      	adds	r4, r0, #3
 802b5e8:	f024 0403 	bic.w	r4, r4, #3
 802b5ec:	42a0      	cmp	r0, r4
 802b5ee:	d007      	beq.n	802b600 <sbrk_aligned+0x38>
 802b5f0:	1a21      	subs	r1, r4, r0
 802b5f2:	4628      	mov	r0, r5
 802b5f4:	f000 fa90 	bl	802bb18 <_sbrk_r>
 802b5f8:	3001      	adds	r0, #1
 802b5fa:	d101      	bne.n	802b600 <sbrk_aligned+0x38>
 802b5fc:	f04f 34ff 	mov.w	r4, #4294967295
 802b600:	4620      	mov	r0, r4
 802b602:	bd70      	pop	{r4, r5, r6, pc}
 802b604:	20014144 	.word	0x20014144

0802b608 <_malloc_r>:
 802b608:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b60c:	1ccd      	adds	r5, r1, #3
 802b60e:	f025 0503 	bic.w	r5, r5, #3
 802b612:	3508      	adds	r5, #8
 802b614:	2d0c      	cmp	r5, #12
 802b616:	bf38      	it	cc
 802b618:	250c      	movcc	r5, #12
 802b61a:	2d00      	cmp	r5, #0
 802b61c:	4607      	mov	r7, r0
 802b61e:	db01      	blt.n	802b624 <_malloc_r+0x1c>
 802b620:	42a9      	cmp	r1, r5
 802b622:	d905      	bls.n	802b630 <_malloc_r+0x28>
 802b624:	230c      	movs	r3, #12
 802b626:	603b      	str	r3, [r7, #0]
 802b628:	2600      	movs	r6, #0
 802b62a:	4630      	mov	r0, r6
 802b62c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b630:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 802b704 <_malloc_r+0xfc>
 802b634:	f000 f868 	bl	802b708 <__malloc_lock>
 802b638:	f8d8 3000 	ldr.w	r3, [r8]
 802b63c:	461c      	mov	r4, r3
 802b63e:	bb5c      	cbnz	r4, 802b698 <_malloc_r+0x90>
 802b640:	4629      	mov	r1, r5
 802b642:	4638      	mov	r0, r7
 802b644:	f7ff ffc0 	bl	802b5c8 <sbrk_aligned>
 802b648:	1c43      	adds	r3, r0, #1
 802b64a:	4604      	mov	r4, r0
 802b64c:	d155      	bne.n	802b6fa <_malloc_r+0xf2>
 802b64e:	f8d8 4000 	ldr.w	r4, [r8]
 802b652:	4626      	mov	r6, r4
 802b654:	2e00      	cmp	r6, #0
 802b656:	d145      	bne.n	802b6e4 <_malloc_r+0xdc>
 802b658:	2c00      	cmp	r4, #0
 802b65a:	d048      	beq.n	802b6ee <_malloc_r+0xe6>
 802b65c:	6823      	ldr	r3, [r4, #0]
 802b65e:	4631      	mov	r1, r6
 802b660:	4638      	mov	r0, r7
 802b662:	eb04 0903 	add.w	r9, r4, r3
 802b666:	f000 fa57 	bl	802bb18 <_sbrk_r>
 802b66a:	4581      	cmp	r9, r0
 802b66c:	d13f      	bne.n	802b6ee <_malloc_r+0xe6>
 802b66e:	6821      	ldr	r1, [r4, #0]
 802b670:	1a6d      	subs	r5, r5, r1
 802b672:	4629      	mov	r1, r5
 802b674:	4638      	mov	r0, r7
 802b676:	f7ff ffa7 	bl	802b5c8 <sbrk_aligned>
 802b67a:	3001      	adds	r0, #1
 802b67c:	d037      	beq.n	802b6ee <_malloc_r+0xe6>
 802b67e:	6823      	ldr	r3, [r4, #0]
 802b680:	442b      	add	r3, r5
 802b682:	6023      	str	r3, [r4, #0]
 802b684:	f8d8 3000 	ldr.w	r3, [r8]
 802b688:	2b00      	cmp	r3, #0
 802b68a:	d038      	beq.n	802b6fe <_malloc_r+0xf6>
 802b68c:	685a      	ldr	r2, [r3, #4]
 802b68e:	42a2      	cmp	r2, r4
 802b690:	d12b      	bne.n	802b6ea <_malloc_r+0xe2>
 802b692:	2200      	movs	r2, #0
 802b694:	605a      	str	r2, [r3, #4]
 802b696:	e00f      	b.n	802b6b8 <_malloc_r+0xb0>
 802b698:	6822      	ldr	r2, [r4, #0]
 802b69a:	1b52      	subs	r2, r2, r5
 802b69c:	d41f      	bmi.n	802b6de <_malloc_r+0xd6>
 802b69e:	2a0b      	cmp	r2, #11
 802b6a0:	d917      	bls.n	802b6d2 <_malloc_r+0xca>
 802b6a2:	1961      	adds	r1, r4, r5
 802b6a4:	42a3      	cmp	r3, r4
 802b6a6:	6025      	str	r5, [r4, #0]
 802b6a8:	bf18      	it	ne
 802b6aa:	6059      	strne	r1, [r3, #4]
 802b6ac:	6863      	ldr	r3, [r4, #4]
 802b6ae:	bf08      	it	eq
 802b6b0:	f8c8 1000 	streq.w	r1, [r8]
 802b6b4:	5162      	str	r2, [r4, r5]
 802b6b6:	604b      	str	r3, [r1, #4]
 802b6b8:	4638      	mov	r0, r7
 802b6ba:	f104 060b 	add.w	r6, r4, #11
 802b6be:	f000 f829 	bl	802b714 <__malloc_unlock>
 802b6c2:	f026 0607 	bic.w	r6, r6, #7
 802b6c6:	1d23      	adds	r3, r4, #4
 802b6c8:	1af2      	subs	r2, r6, r3
 802b6ca:	d0ae      	beq.n	802b62a <_malloc_r+0x22>
 802b6cc:	1b9b      	subs	r3, r3, r6
 802b6ce:	50a3      	str	r3, [r4, r2]
 802b6d0:	e7ab      	b.n	802b62a <_malloc_r+0x22>
 802b6d2:	42a3      	cmp	r3, r4
 802b6d4:	6862      	ldr	r2, [r4, #4]
 802b6d6:	d1dd      	bne.n	802b694 <_malloc_r+0x8c>
 802b6d8:	f8c8 2000 	str.w	r2, [r8]
 802b6dc:	e7ec      	b.n	802b6b8 <_malloc_r+0xb0>
 802b6de:	4623      	mov	r3, r4
 802b6e0:	6864      	ldr	r4, [r4, #4]
 802b6e2:	e7ac      	b.n	802b63e <_malloc_r+0x36>
 802b6e4:	4634      	mov	r4, r6
 802b6e6:	6876      	ldr	r6, [r6, #4]
 802b6e8:	e7b4      	b.n	802b654 <_malloc_r+0x4c>
 802b6ea:	4613      	mov	r3, r2
 802b6ec:	e7cc      	b.n	802b688 <_malloc_r+0x80>
 802b6ee:	230c      	movs	r3, #12
 802b6f0:	603b      	str	r3, [r7, #0]
 802b6f2:	4638      	mov	r0, r7
 802b6f4:	f000 f80e 	bl	802b714 <__malloc_unlock>
 802b6f8:	e797      	b.n	802b62a <_malloc_r+0x22>
 802b6fa:	6025      	str	r5, [r4, #0]
 802b6fc:	e7dc      	b.n	802b6b8 <_malloc_r+0xb0>
 802b6fe:	605b      	str	r3, [r3, #4]
 802b700:	deff      	udf	#255	; 0xff
 802b702:	bf00      	nop
 802b704:	20014140 	.word	0x20014140

0802b708 <__malloc_lock>:
 802b708:	4801      	ldr	r0, [pc, #4]	; (802b710 <__malloc_lock+0x8>)
 802b70a:	f000 ba52 	b.w	802bbb2 <__retarget_lock_acquire_recursive>
 802b70e:	bf00      	nop
 802b710:	20014289 	.word	0x20014289

0802b714 <__malloc_unlock>:
 802b714:	4801      	ldr	r0, [pc, #4]	; (802b71c <__malloc_unlock+0x8>)
 802b716:	f000 ba4d 	b.w	802bbb4 <__retarget_lock_release_recursive>
 802b71a:	bf00      	nop
 802b71c:	20014289 	.word	0x20014289

0802b720 <__cxa_atexit>:
 802b720:	b510      	push	{r4, lr}
 802b722:	4c05      	ldr	r4, [pc, #20]	; (802b738 <__cxa_atexit+0x18>)
 802b724:	4613      	mov	r3, r2
 802b726:	b12c      	cbz	r4, 802b734 <__cxa_atexit+0x14>
 802b728:	460a      	mov	r2, r1
 802b72a:	4601      	mov	r1, r0
 802b72c:	2002      	movs	r0, #2
 802b72e:	f000 fa51 	bl	802bbd4 <__register_exitproc>
 802b732:	bd10      	pop	{r4, pc}
 802b734:	4620      	mov	r0, r4
 802b736:	e7fc      	b.n	802b732 <__cxa_atexit+0x12>
 802b738:	0802bbd5 	.word	0x0802bbd5

0802b73c <std>:
 802b73c:	2300      	movs	r3, #0
 802b73e:	b510      	push	{r4, lr}
 802b740:	4604      	mov	r4, r0
 802b742:	e9c0 3300 	strd	r3, r3, [r0]
 802b746:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802b74a:	6083      	str	r3, [r0, #8]
 802b74c:	8181      	strh	r1, [r0, #12]
 802b74e:	6643      	str	r3, [r0, #100]	; 0x64
 802b750:	81c2      	strh	r2, [r0, #14]
 802b752:	6183      	str	r3, [r0, #24]
 802b754:	4619      	mov	r1, r3
 802b756:	2208      	movs	r2, #8
 802b758:	305c      	adds	r0, #92	; 0x5c
 802b75a:	f000 f906 	bl	802b96a <memset>
 802b75e:	4b0d      	ldr	r3, [pc, #52]	; (802b794 <std+0x58>)
 802b760:	6263      	str	r3, [r4, #36]	; 0x24
 802b762:	4b0d      	ldr	r3, [pc, #52]	; (802b798 <std+0x5c>)
 802b764:	62a3      	str	r3, [r4, #40]	; 0x28
 802b766:	4b0d      	ldr	r3, [pc, #52]	; (802b79c <std+0x60>)
 802b768:	62e3      	str	r3, [r4, #44]	; 0x2c
 802b76a:	4b0d      	ldr	r3, [pc, #52]	; (802b7a0 <std+0x64>)
 802b76c:	6323      	str	r3, [r4, #48]	; 0x30
 802b76e:	4b0d      	ldr	r3, [pc, #52]	; (802b7a4 <std+0x68>)
 802b770:	6224      	str	r4, [r4, #32]
 802b772:	429c      	cmp	r4, r3
 802b774:	d006      	beq.n	802b784 <std+0x48>
 802b776:	f103 0268 	add.w	r2, r3, #104	; 0x68
 802b77a:	4294      	cmp	r4, r2
 802b77c:	d002      	beq.n	802b784 <std+0x48>
 802b77e:	33d0      	adds	r3, #208	; 0xd0
 802b780:	429c      	cmp	r4, r3
 802b782:	d105      	bne.n	802b790 <std+0x54>
 802b784:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802b788:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b78c:	f000 ba10 	b.w	802bbb0 <__retarget_lock_init_recursive>
 802b790:	bd10      	pop	{r4, pc}
 802b792:	bf00      	nop
 802b794:	0802b8e5 	.word	0x0802b8e5
 802b798:	0802b907 	.word	0x0802b907
 802b79c:	0802b93f 	.word	0x0802b93f
 802b7a0:	0802b963 	.word	0x0802b963
 802b7a4:	20014148 	.word	0x20014148

0802b7a8 <stdio_exit_handler>:
 802b7a8:	4a02      	ldr	r2, [pc, #8]	; (802b7b4 <stdio_exit_handler+0xc>)
 802b7aa:	4903      	ldr	r1, [pc, #12]	; (802b7b8 <stdio_exit_handler+0x10>)
 802b7ac:	4803      	ldr	r0, [pc, #12]	; (802b7bc <stdio_exit_handler+0x14>)
 802b7ae:	f000 b87b 	b.w	802b8a8 <_fwalk_sglue>
 802b7b2:	bf00      	nop
 802b7b4:	20000108 	.word	0x20000108
 802b7b8:	0802c3dd 	.word	0x0802c3dd
 802b7bc:	20000114 	.word	0x20000114

0802b7c0 <cleanup_stdio>:
 802b7c0:	6841      	ldr	r1, [r0, #4]
 802b7c2:	4b0c      	ldr	r3, [pc, #48]	; (802b7f4 <cleanup_stdio+0x34>)
 802b7c4:	4299      	cmp	r1, r3
 802b7c6:	b510      	push	{r4, lr}
 802b7c8:	4604      	mov	r4, r0
 802b7ca:	d001      	beq.n	802b7d0 <cleanup_stdio+0x10>
 802b7cc:	f000 fe06 	bl	802c3dc <_fflush_r>
 802b7d0:	68a1      	ldr	r1, [r4, #8]
 802b7d2:	4b09      	ldr	r3, [pc, #36]	; (802b7f8 <cleanup_stdio+0x38>)
 802b7d4:	4299      	cmp	r1, r3
 802b7d6:	d002      	beq.n	802b7de <cleanup_stdio+0x1e>
 802b7d8:	4620      	mov	r0, r4
 802b7da:	f000 fdff 	bl	802c3dc <_fflush_r>
 802b7de:	68e1      	ldr	r1, [r4, #12]
 802b7e0:	4b06      	ldr	r3, [pc, #24]	; (802b7fc <cleanup_stdio+0x3c>)
 802b7e2:	4299      	cmp	r1, r3
 802b7e4:	d004      	beq.n	802b7f0 <cleanup_stdio+0x30>
 802b7e6:	4620      	mov	r0, r4
 802b7e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b7ec:	f000 bdf6 	b.w	802c3dc <_fflush_r>
 802b7f0:	bd10      	pop	{r4, pc}
 802b7f2:	bf00      	nop
 802b7f4:	20014148 	.word	0x20014148
 802b7f8:	200141b0 	.word	0x200141b0
 802b7fc:	20014218 	.word	0x20014218

0802b800 <global_stdio_init.part.0>:
 802b800:	b510      	push	{r4, lr}
 802b802:	4b0b      	ldr	r3, [pc, #44]	; (802b830 <global_stdio_init.part.0+0x30>)
 802b804:	4c0b      	ldr	r4, [pc, #44]	; (802b834 <global_stdio_init.part.0+0x34>)
 802b806:	4a0c      	ldr	r2, [pc, #48]	; (802b838 <global_stdio_init.part.0+0x38>)
 802b808:	601a      	str	r2, [r3, #0]
 802b80a:	4620      	mov	r0, r4
 802b80c:	2200      	movs	r2, #0
 802b80e:	2104      	movs	r1, #4
 802b810:	f7ff ff94 	bl	802b73c <std>
 802b814:	f104 0068 	add.w	r0, r4, #104	; 0x68
 802b818:	2201      	movs	r2, #1
 802b81a:	2109      	movs	r1, #9
 802b81c:	f7ff ff8e 	bl	802b73c <std>
 802b820:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 802b824:	2202      	movs	r2, #2
 802b826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b82a:	2112      	movs	r1, #18
 802b82c:	f7ff bf86 	b.w	802b73c <std>
 802b830:	20014280 	.word	0x20014280
 802b834:	20014148 	.word	0x20014148
 802b838:	0802b7a9 	.word	0x0802b7a9

0802b83c <__sfp_lock_acquire>:
 802b83c:	4801      	ldr	r0, [pc, #4]	; (802b844 <__sfp_lock_acquire+0x8>)
 802b83e:	f000 b9b8 	b.w	802bbb2 <__retarget_lock_acquire_recursive>
 802b842:	bf00      	nop
 802b844:	2001428a 	.word	0x2001428a

0802b848 <__sfp_lock_release>:
 802b848:	4801      	ldr	r0, [pc, #4]	; (802b850 <__sfp_lock_release+0x8>)
 802b84a:	f000 b9b3 	b.w	802bbb4 <__retarget_lock_release_recursive>
 802b84e:	bf00      	nop
 802b850:	2001428a 	.word	0x2001428a

0802b854 <__sinit>:
 802b854:	b510      	push	{r4, lr}
 802b856:	4604      	mov	r4, r0
 802b858:	f7ff fff0 	bl	802b83c <__sfp_lock_acquire>
 802b85c:	6a23      	ldr	r3, [r4, #32]
 802b85e:	b11b      	cbz	r3, 802b868 <__sinit+0x14>
 802b860:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802b864:	f7ff bff0 	b.w	802b848 <__sfp_lock_release>
 802b868:	4b04      	ldr	r3, [pc, #16]	; (802b87c <__sinit+0x28>)
 802b86a:	6223      	str	r3, [r4, #32]
 802b86c:	4b04      	ldr	r3, [pc, #16]	; (802b880 <__sinit+0x2c>)
 802b86e:	681b      	ldr	r3, [r3, #0]
 802b870:	2b00      	cmp	r3, #0
 802b872:	d1f5      	bne.n	802b860 <__sinit+0xc>
 802b874:	f7ff ffc4 	bl	802b800 <global_stdio_init.part.0>
 802b878:	e7f2      	b.n	802b860 <__sinit+0xc>
 802b87a:	bf00      	nop
 802b87c:	0802b7c1 	.word	0x0802b7c1
 802b880:	20014280 	.word	0x20014280

0802b884 <fiprintf>:
 802b884:	b40e      	push	{r1, r2, r3}
 802b886:	b503      	push	{r0, r1, lr}
 802b888:	4601      	mov	r1, r0
 802b88a:	ab03      	add	r3, sp, #12
 802b88c:	4805      	ldr	r0, [pc, #20]	; (802b8a4 <fiprintf+0x20>)
 802b88e:	f853 2b04 	ldr.w	r2, [r3], #4
 802b892:	6800      	ldr	r0, [r0, #0]
 802b894:	9301      	str	r3, [sp, #4]
 802b896:	f000 fa71 	bl	802bd7c <_vfiprintf_r>
 802b89a:	b002      	add	sp, #8
 802b89c:	f85d eb04 	ldr.w	lr, [sp], #4
 802b8a0:	b003      	add	sp, #12
 802b8a2:	4770      	bx	lr
 802b8a4:	20000160 	.word	0x20000160

0802b8a8 <_fwalk_sglue>:
 802b8a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802b8ac:	4607      	mov	r7, r0
 802b8ae:	4688      	mov	r8, r1
 802b8b0:	4614      	mov	r4, r2
 802b8b2:	2600      	movs	r6, #0
 802b8b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802b8b8:	f1b9 0901 	subs.w	r9, r9, #1
 802b8bc:	d505      	bpl.n	802b8ca <_fwalk_sglue+0x22>
 802b8be:	6824      	ldr	r4, [r4, #0]
 802b8c0:	2c00      	cmp	r4, #0
 802b8c2:	d1f7      	bne.n	802b8b4 <_fwalk_sglue+0xc>
 802b8c4:	4630      	mov	r0, r6
 802b8c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802b8ca:	89ab      	ldrh	r3, [r5, #12]
 802b8cc:	2b01      	cmp	r3, #1
 802b8ce:	d907      	bls.n	802b8e0 <_fwalk_sglue+0x38>
 802b8d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802b8d4:	3301      	adds	r3, #1
 802b8d6:	d003      	beq.n	802b8e0 <_fwalk_sglue+0x38>
 802b8d8:	4629      	mov	r1, r5
 802b8da:	4638      	mov	r0, r7
 802b8dc:	47c0      	blx	r8
 802b8de:	4306      	orrs	r6, r0
 802b8e0:	3568      	adds	r5, #104	; 0x68
 802b8e2:	e7e9      	b.n	802b8b8 <_fwalk_sglue+0x10>

0802b8e4 <__sread>:
 802b8e4:	b510      	push	{r4, lr}
 802b8e6:	460c      	mov	r4, r1
 802b8e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b8ec:	f000 f8ee 	bl	802bacc <_read_r>
 802b8f0:	2800      	cmp	r0, #0
 802b8f2:	bfab      	itete	ge
 802b8f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802b8f6:	89a3      	ldrhlt	r3, [r4, #12]
 802b8f8:	181b      	addge	r3, r3, r0
 802b8fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802b8fe:	bfac      	ite	ge
 802b900:	6563      	strge	r3, [r4, #84]	; 0x54
 802b902:	81a3      	strhlt	r3, [r4, #12]
 802b904:	bd10      	pop	{r4, pc}

0802b906 <__swrite>:
 802b906:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802b90a:	461f      	mov	r7, r3
 802b90c:	898b      	ldrh	r3, [r1, #12]
 802b90e:	05db      	lsls	r3, r3, #23
 802b910:	4605      	mov	r5, r0
 802b912:	460c      	mov	r4, r1
 802b914:	4616      	mov	r6, r2
 802b916:	d505      	bpl.n	802b924 <__swrite+0x1e>
 802b918:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b91c:	2302      	movs	r3, #2
 802b91e:	2200      	movs	r2, #0
 802b920:	f000 f8c2 	bl	802baa8 <_lseek_r>
 802b924:	89a3      	ldrh	r3, [r4, #12]
 802b926:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802b92a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802b92e:	81a3      	strh	r3, [r4, #12]
 802b930:	4632      	mov	r2, r6
 802b932:	463b      	mov	r3, r7
 802b934:	4628      	mov	r0, r5
 802b936:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802b93a:	f000 b8fd 	b.w	802bb38 <_write_r>

0802b93e <__sseek>:
 802b93e:	b510      	push	{r4, lr}
 802b940:	460c      	mov	r4, r1
 802b942:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b946:	f000 f8af 	bl	802baa8 <_lseek_r>
 802b94a:	1c43      	adds	r3, r0, #1
 802b94c:	89a3      	ldrh	r3, [r4, #12]
 802b94e:	bf15      	itete	ne
 802b950:	6560      	strne	r0, [r4, #84]	; 0x54
 802b952:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802b956:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802b95a:	81a3      	strheq	r3, [r4, #12]
 802b95c:	bf18      	it	ne
 802b95e:	81a3      	strhne	r3, [r4, #12]
 802b960:	bd10      	pop	{r4, pc}

0802b962 <__sclose>:
 802b962:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802b966:	f000 b839 	b.w	802b9dc <_close_r>

0802b96a <memset>:
 802b96a:	4402      	add	r2, r0
 802b96c:	4603      	mov	r3, r0
 802b96e:	4293      	cmp	r3, r2
 802b970:	d100      	bne.n	802b974 <memset+0xa>
 802b972:	4770      	bx	lr
 802b974:	f803 1b01 	strb.w	r1, [r3], #1
 802b978:	e7f9      	b.n	802b96e <memset+0x4>

0802b97a <_raise_r>:
 802b97a:	291f      	cmp	r1, #31
 802b97c:	b538      	push	{r3, r4, r5, lr}
 802b97e:	4604      	mov	r4, r0
 802b980:	460d      	mov	r5, r1
 802b982:	d904      	bls.n	802b98e <_raise_r+0x14>
 802b984:	2316      	movs	r3, #22
 802b986:	6003      	str	r3, [r0, #0]
 802b988:	f04f 30ff 	mov.w	r0, #4294967295
 802b98c:	bd38      	pop	{r3, r4, r5, pc}
 802b98e:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 802b990:	b112      	cbz	r2, 802b998 <_raise_r+0x1e>
 802b992:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802b996:	b94b      	cbnz	r3, 802b9ac <_raise_r+0x32>
 802b998:	4620      	mov	r0, r4
 802b99a:	f000 f8bb 	bl	802bb14 <_getpid_r>
 802b99e:	462a      	mov	r2, r5
 802b9a0:	4601      	mov	r1, r0
 802b9a2:	4620      	mov	r0, r4
 802b9a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802b9a8:	f000 b8a2 	b.w	802baf0 <_kill_r>
 802b9ac:	2b01      	cmp	r3, #1
 802b9ae:	d00a      	beq.n	802b9c6 <_raise_r+0x4c>
 802b9b0:	1c59      	adds	r1, r3, #1
 802b9b2:	d103      	bne.n	802b9bc <_raise_r+0x42>
 802b9b4:	2316      	movs	r3, #22
 802b9b6:	6003      	str	r3, [r0, #0]
 802b9b8:	2001      	movs	r0, #1
 802b9ba:	e7e7      	b.n	802b98c <_raise_r+0x12>
 802b9bc:	2400      	movs	r4, #0
 802b9be:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802b9c2:	4628      	mov	r0, r5
 802b9c4:	4798      	blx	r3
 802b9c6:	2000      	movs	r0, #0
 802b9c8:	e7e0      	b.n	802b98c <_raise_r+0x12>
	...

0802b9cc <raise>:
 802b9cc:	4b02      	ldr	r3, [pc, #8]	; (802b9d8 <raise+0xc>)
 802b9ce:	4601      	mov	r1, r0
 802b9d0:	6818      	ldr	r0, [r3, #0]
 802b9d2:	f7ff bfd2 	b.w	802b97a <_raise_r>
 802b9d6:	bf00      	nop
 802b9d8:	20000160 	.word	0x20000160

0802b9dc <_close_r>:
 802b9dc:	b538      	push	{r3, r4, r5, lr}
 802b9de:	4d06      	ldr	r5, [pc, #24]	; (802b9f8 <_close_r+0x1c>)
 802b9e0:	2300      	movs	r3, #0
 802b9e2:	4604      	mov	r4, r0
 802b9e4:	4608      	mov	r0, r1
 802b9e6:	602b      	str	r3, [r5, #0]
 802b9e8:	f7d6 f8e2 	bl	8001bb0 <_close>
 802b9ec:	1c43      	adds	r3, r0, #1
 802b9ee:	d102      	bne.n	802b9f6 <_close_r+0x1a>
 802b9f0:	682b      	ldr	r3, [r5, #0]
 802b9f2:	b103      	cbz	r3, 802b9f6 <_close_r+0x1a>
 802b9f4:	6023      	str	r3, [r4, #0]
 802b9f6:	bd38      	pop	{r3, r4, r5, pc}
 802b9f8:	20014284 	.word	0x20014284

0802b9fc <_reclaim_reent>:
 802b9fc:	4b29      	ldr	r3, [pc, #164]	; (802baa4 <_reclaim_reent+0xa8>)
 802b9fe:	681b      	ldr	r3, [r3, #0]
 802ba00:	4283      	cmp	r3, r0
 802ba02:	b570      	push	{r4, r5, r6, lr}
 802ba04:	4604      	mov	r4, r0
 802ba06:	d04b      	beq.n	802baa0 <_reclaim_reent+0xa4>
 802ba08:	69c3      	ldr	r3, [r0, #28]
 802ba0a:	b143      	cbz	r3, 802ba1e <_reclaim_reent+0x22>
 802ba0c:	68db      	ldr	r3, [r3, #12]
 802ba0e:	2b00      	cmp	r3, #0
 802ba10:	d144      	bne.n	802ba9c <_reclaim_reent+0xa0>
 802ba12:	69e3      	ldr	r3, [r4, #28]
 802ba14:	6819      	ldr	r1, [r3, #0]
 802ba16:	b111      	cbz	r1, 802ba1e <_reclaim_reent+0x22>
 802ba18:	4620      	mov	r0, r4
 802ba1a:	f000 f939 	bl	802bc90 <_free_r>
 802ba1e:	6961      	ldr	r1, [r4, #20]
 802ba20:	b111      	cbz	r1, 802ba28 <_reclaim_reent+0x2c>
 802ba22:	4620      	mov	r0, r4
 802ba24:	f000 f934 	bl	802bc90 <_free_r>
 802ba28:	69e1      	ldr	r1, [r4, #28]
 802ba2a:	b111      	cbz	r1, 802ba32 <_reclaim_reent+0x36>
 802ba2c:	4620      	mov	r0, r4
 802ba2e:	f000 f92f 	bl	802bc90 <_free_r>
 802ba32:	6b21      	ldr	r1, [r4, #48]	; 0x30
 802ba34:	b111      	cbz	r1, 802ba3c <_reclaim_reent+0x40>
 802ba36:	4620      	mov	r0, r4
 802ba38:	f000 f92a 	bl	802bc90 <_free_r>
 802ba3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ba3e:	b111      	cbz	r1, 802ba46 <_reclaim_reent+0x4a>
 802ba40:	4620      	mov	r0, r4
 802ba42:	f000 f925 	bl	802bc90 <_free_r>
 802ba46:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802ba48:	b111      	cbz	r1, 802ba50 <_reclaim_reent+0x54>
 802ba4a:	4620      	mov	r0, r4
 802ba4c:	f000 f920 	bl	802bc90 <_free_r>
 802ba50:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802ba52:	b111      	cbz	r1, 802ba5a <_reclaim_reent+0x5e>
 802ba54:	4620      	mov	r0, r4
 802ba56:	f000 f91b 	bl	802bc90 <_free_r>
 802ba5a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 802ba5c:	b111      	cbz	r1, 802ba64 <_reclaim_reent+0x68>
 802ba5e:	4620      	mov	r0, r4
 802ba60:	f000 f916 	bl	802bc90 <_free_r>
 802ba64:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 802ba66:	b111      	cbz	r1, 802ba6e <_reclaim_reent+0x72>
 802ba68:	4620      	mov	r0, r4
 802ba6a:	f000 f911 	bl	802bc90 <_free_r>
 802ba6e:	6a23      	ldr	r3, [r4, #32]
 802ba70:	b1b3      	cbz	r3, 802baa0 <_reclaim_reent+0xa4>
 802ba72:	4620      	mov	r0, r4
 802ba74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802ba78:	4718      	bx	r3
 802ba7a:	5949      	ldr	r1, [r1, r5]
 802ba7c:	b941      	cbnz	r1, 802ba90 <_reclaim_reent+0x94>
 802ba7e:	3504      	adds	r5, #4
 802ba80:	69e3      	ldr	r3, [r4, #28]
 802ba82:	2d80      	cmp	r5, #128	; 0x80
 802ba84:	68d9      	ldr	r1, [r3, #12]
 802ba86:	d1f8      	bne.n	802ba7a <_reclaim_reent+0x7e>
 802ba88:	4620      	mov	r0, r4
 802ba8a:	f000 f901 	bl	802bc90 <_free_r>
 802ba8e:	e7c0      	b.n	802ba12 <_reclaim_reent+0x16>
 802ba90:	680e      	ldr	r6, [r1, #0]
 802ba92:	4620      	mov	r0, r4
 802ba94:	f000 f8fc 	bl	802bc90 <_free_r>
 802ba98:	4631      	mov	r1, r6
 802ba9a:	e7ef      	b.n	802ba7c <_reclaim_reent+0x80>
 802ba9c:	2500      	movs	r5, #0
 802ba9e:	e7ef      	b.n	802ba80 <_reclaim_reent+0x84>
 802baa0:	bd70      	pop	{r4, r5, r6, pc}
 802baa2:	bf00      	nop
 802baa4:	20000160 	.word	0x20000160

0802baa8 <_lseek_r>:
 802baa8:	b538      	push	{r3, r4, r5, lr}
 802baaa:	4d07      	ldr	r5, [pc, #28]	; (802bac8 <_lseek_r+0x20>)
 802baac:	4604      	mov	r4, r0
 802baae:	4608      	mov	r0, r1
 802bab0:	4611      	mov	r1, r2
 802bab2:	2200      	movs	r2, #0
 802bab4:	602a      	str	r2, [r5, #0]
 802bab6:	461a      	mov	r2, r3
 802bab8:	f7d6 f886 	bl	8001bc8 <_lseek>
 802babc:	1c43      	adds	r3, r0, #1
 802babe:	d102      	bne.n	802bac6 <_lseek_r+0x1e>
 802bac0:	682b      	ldr	r3, [r5, #0]
 802bac2:	b103      	cbz	r3, 802bac6 <_lseek_r+0x1e>
 802bac4:	6023      	str	r3, [r4, #0]
 802bac6:	bd38      	pop	{r3, r4, r5, pc}
 802bac8:	20014284 	.word	0x20014284

0802bacc <_read_r>:
 802bacc:	b538      	push	{r3, r4, r5, lr}
 802bace:	4d07      	ldr	r5, [pc, #28]	; (802baec <_read_r+0x20>)
 802bad0:	4604      	mov	r4, r0
 802bad2:	4608      	mov	r0, r1
 802bad4:	4611      	mov	r1, r2
 802bad6:	2200      	movs	r2, #0
 802bad8:	602a      	str	r2, [r5, #0]
 802bada:	461a      	mov	r2, r3
 802badc:	f7d6 f84c 	bl	8001b78 <_read>
 802bae0:	1c43      	adds	r3, r0, #1
 802bae2:	d102      	bne.n	802baea <_read_r+0x1e>
 802bae4:	682b      	ldr	r3, [r5, #0]
 802bae6:	b103      	cbz	r3, 802baea <_read_r+0x1e>
 802bae8:	6023      	str	r3, [r4, #0]
 802baea:	bd38      	pop	{r3, r4, r5, pc}
 802baec:	20014284 	.word	0x20014284

0802baf0 <_kill_r>:
 802baf0:	b538      	push	{r3, r4, r5, lr}
 802baf2:	4d07      	ldr	r5, [pc, #28]	; (802bb10 <_kill_r+0x20>)
 802baf4:	2300      	movs	r3, #0
 802baf6:	4604      	mov	r4, r0
 802baf8:	4608      	mov	r0, r1
 802bafa:	4611      	mov	r1, r2
 802bafc:	602b      	str	r3, [r5, #0]
 802bafe:	f7d6 f82d 	bl	8001b5c <_kill>
 802bb02:	1c43      	adds	r3, r0, #1
 802bb04:	d102      	bne.n	802bb0c <_kill_r+0x1c>
 802bb06:	682b      	ldr	r3, [r5, #0]
 802bb08:	b103      	cbz	r3, 802bb0c <_kill_r+0x1c>
 802bb0a:	6023      	str	r3, [r4, #0]
 802bb0c:	bd38      	pop	{r3, r4, r5, pc}
 802bb0e:	bf00      	nop
 802bb10:	20014284 	.word	0x20014284

0802bb14 <_getpid_r>:
 802bb14:	f7d6 b820 	b.w	8001b58 <_getpid>

0802bb18 <_sbrk_r>:
 802bb18:	b538      	push	{r3, r4, r5, lr}
 802bb1a:	4d06      	ldr	r5, [pc, #24]	; (802bb34 <_sbrk_r+0x1c>)
 802bb1c:	2300      	movs	r3, #0
 802bb1e:	4604      	mov	r4, r0
 802bb20:	4608      	mov	r0, r1
 802bb22:	602b      	str	r3, [r5, #0]
 802bb24:	f7d6 f852 	bl	8001bcc <_sbrk>
 802bb28:	1c43      	adds	r3, r0, #1
 802bb2a:	d102      	bne.n	802bb32 <_sbrk_r+0x1a>
 802bb2c:	682b      	ldr	r3, [r5, #0]
 802bb2e:	b103      	cbz	r3, 802bb32 <_sbrk_r+0x1a>
 802bb30:	6023      	str	r3, [r4, #0]
 802bb32:	bd38      	pop	{r3, r4, r5, pc}
 802bb34:	20014284 	.word	0x20014284

0802bb38 <_write_r>:
 802bb38:	b538      	push	{r3, r4, r5, lr}
 802bb3a:	4d07      	ldr	r5, [pc, #28]	; (802bb58 <_write_r+0x20>)
 802bb3c:	4604      	mov	r4, r0
 802bb3e:	4608      	mov	r0, r1
 802bb40:	4611      	mov	r1, r2
 802bb42:	2200      	movs	r2, #0
 802bb44:	602a      	str	r2, [r5, #0]
 802bb46:	461a      	mov	r2, r3
 802bb48:	f7d6 f824 	bl	8001b94 <_write>
 802bb4c:	1c43      	adds	r3, r0, #1
 802bb4e:	d102      	bne.n	802bb56 <_write_r+0x1e>
 802bb50:	682b      	ldr	r3, [r5, #0]
 802bb52:	b103      	cbz	r3, 802bb56 <_write_r+0x1e>
 802bb54:	6023      	str	r3, [r4, #0]
 802bb56:	bd38      	pop	{r3, r4, r5, pc}
 802bb58:	20014284 	.word	0x20014284

0802bb5c <__errno>:
 802bb5c:	4b01      	ldr	r3, [pc, #4]	; (802bb64 <__errno+0x8>)
 802bb5e:	6818      	ldr	r0, [r3, #0]
 802bb60:	4770      	bx	lr
 802bb62:	bf00      	nop
 802bb64:	20000160 	.word	0x20000160

0802bb68 <__libc_init_array>:
 802bb68:	b570      	push	{r4, r5, r6, lr}
 802bb6a:	4d0d      	ldr	r5, [pc, #52]	; (802bba0 <__libc_init_array+0x38>)
 802bb6c:	4c0d      	ldr	r4, [pc, #52]	; (802bba4 <__libc_init_array+0x3c>)
 802bb6e:	1b64      	subs	r4, r4, r5
 802bb70:	10a4      	asrs	r4, r4, #2
 802bb72:	2600      	movs	r6, #0
 802bb74:	42a6      	cmp	r6, r4
 802bb76:	d109      	bne.n	802bb8c <__libc_init_array+0x24>
 802bb78:	4d0b      	ldr	r5, [pc, #44]	; (802bba8 <__libc_init_array+0x40>)
 802bb7a:	4c0c      	ldr	r4, [pc, #48]	; (802bbac <__libc_init_array+0x44>)
 802bb7c:	f000 fd70 	bl	802c660 <_init>
 802bb80:	1b64      	subs	r4, r4, r5
 802bb82:	10a4      	asrs	r4, r4, #2
 802bb84:	2600      	movs	r6, #0
 802bb86:	42a6      	cmp	r6, r4
 802bb88:	d105      	bne.n	802bb96 <__libc_init_array+0x2e>
 802bb8a:	bd70      	pop	{r4, r5, r6, pc}
 802bb8c:	f855 3b04 	ldr.w	r3, [r5], #4
 802bb90:	4798      	blx	r3
 802bb92:	3601      	adds	r6, #1
 802bb94:	e7ee      	b.n	802bb74 <__libc_init_array+0xc>
 802bb96:	f855 3b04 	ldr.w	r3, [r5], #4
 802bb9a:	4798      	blx	r3
 802bb9c:	3601      	adds	r6, #1
 802bb9e:	e7f2      	b.n	802bb86 <__libc_init_array+0x1e>
 802bba0:	080cced8 	.word	0x080cced8
 802bba4:	080cced8 	.word	0x080cced8
 802bba8:	080cced8 	.word	0x080cced8
 802bbac:	080cceec 	.word	0x080cceec

0802bbb0 <__retarget_lock_init_recursive>:
 802bbb0:	4770      	bx	lr

0802bbb2 <__retarget_lock_acquire_recursive>:
 802bbb2:	4770      	bx	lr

0802bbb4 <__retarget_lock_release_recursive>:
 802bbb4:	4770      	bx	lr

0802bbb6 <memcpy>:
 802bbb6:	440a      	add	r2, r1
 802bbb8:	4291      	cmp	r1, r2
 802bbba:	f100 33ff 	add.w	r3, r0, #4294967295
 802bbbe:	d100      	bne.n	802bbc2 <memcpy+0xc>
 802bbc0:	4770      	bx	lr
 802bbc2:	b510      	push	{r4, lr}
 802bbc4:	f811 4b01 	ldrb.w	r4, [r1], #1
 802bbc8:	f803 4f01 	strb.w	r4, [r3, #1]!
 802bbcc:	4291      	cmp	r1, r2
 802bbce:	d1f9      	bne.n	802bbc4 <memcpy+0xe>
 802bbd0:	bd10      	pop	{r4, pc}
	...

0802bbd4 <__register_exitproc>:
 802bbd4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802bbd8:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802bc8c <__register_exitproc+0xb8>
 802bbdc:	4606      	mov	r6, r0
 802bbde:	f8d8 0000 	ldr.w	r0, [r8]
 802bbe2:	461f      	mov	r7, r3
 802bbe4:	460d      	mov	r5, r1
 802bbe6:	4691      	mov	r9, r2
 802bbe8:	f7ff ffe3 	bl	802bbb2 <__retarget_lock_acquire_recursive>
 802bbec:	4b23      	ldr	r3, [pc, #140]	; (802bc7c <__register_exitproc+0xa8>)
 802bbee:	681c      	ldr	r4, [r3, #0]
 802bbf0:	b934      	cbnz	r4, 802bc00 <__register_exitproc+0x2c>
 802bbf2:	4c23      	ldr	r4, [pc, #140]	; (802bc80 <__register_exitproc+0xac>)
 802bbf4:	601c      	str	r4, [r3, #0]
 802bbf6:	4b23      	ldr	r3, [pc, #140]	; (802bc84 <__register_exitproc+0xb0>)
 802bbf8:	b113      	cbz	r3, 802bc00 <__register_exitproc+0x2c>
 802bbfa:	681b      	ldr	r3, [r3, #0]
 802bbfc:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802bc00:	6863      	ldr	r3, [r4, #4]
 802bc02:	2b1f      	cmp	r3, #31
 802bc04:	dd07      	ble.n	802bc16 <__register_exitproc+0x42>
 802bc06:	f8d8 0000 	ldr.w	r0, [r8]
 802bc0a:	f7ff ffd3 	bl	802bbb4 <__retarget_lock_release_recursive>
 802bc0e:	f04f 30ff 	mov.w	r0, #4294967295
 802bc12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802bc16:	b32e      	cbz	r6, 802bc64 <__register_exitproc+0x90>
 802bc18:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802bc1c:	b968      	cbnz	r0, 802bc3a <__register_exitproc+0x66>
 802bc1e:	4b1a      	ldr	r3, [pc, #104]	; (802bc88 <__register_exitproc+0xb4>)
 802bc20:	2b00      	cmp	r3, #0
 802bc22:	d0f0      	beq.n	802bc06 <__register_exitproc+0x32>
 802bc24:	f44f 7084 	mov.w	r0, #264	; 0x108
 802bc28:	f7ff fcbe 	bl	802b5a8 <malloc>
 802bc2c:	2800      	cmp	r0, #0
 802bc2e:	d0ea      	beq.n	802bc06 <__register_exitproc+0x32>
 802bc30:	2300      	movs	r3, #0
 802bc32:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802bc36:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802bc3a:	6863      	ldr	r3, [r4, #4]
 802bc3c:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802bc40:	2201      	movs	r2, #1
 802bc42:	409a      	lsls	r2, r3
 802bc44:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802bc48:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802bc4c:	4313      	orrs	r3, r2
 802bc4e:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802bc52:	2e02      	cmp	r6, #2
 802bc54:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802bc58:	bf02      	ittt	eq
 802bc5a:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802bc5e:	4313      	orreq	r3, r2
 802bc60:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802bc64:	6863      	ldr	r3, [r4, #4]
 802bc66:	f8d8 0000 	ldr.w	r0, [r8]
 802bc6a:	1c5a      	adds	r2, r3, #1
 802bc6c:	3302      	adds	r3, #2
 802bc6e:	6062      	str	r2, [r4, #4]
 802bc70:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802bc74:	f7ff ff9e 	bl	802bbb4 <__retarget_lock_release_recursive>
 802bc78:	2000      	movs	r0, #0
 802bc7a:	e7ca      	b.n	802bc12 <__register_exitproc+0x3e>
 802bc7c:	20014318 	.word	0x20014318
 802bc80:	2001428c 	.word	0x2001428c
 802bc84:	080437e4 	.word	0x080437e4
 802bc88:	0802b5a9 	.word	0x0802b5a9
 802bc8c:	20000164 	.word	0x20000164

0802bc90 <_free_r>:
 802bc90:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802bc92:	2900      	cmp	r1, #0
 802bc94:	d044      	beq.n	802bd20 <_free_r+0x90>
 802bc96:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802bc9a:	9001      	str	r0, [sp, #4]
 802bc9c:	2b00      	cmp	r3, #0
 802bc9e:	f1a1 0404 	sub.w	r4, r1, #4
 802bca2:	bfb8      	it	lt
 802bca4:	18e4      	addlt	r4, r4, r3
 802bca6:	f7ff fd2f 	bl	802b708 <__malloc_lock>
 802bcaa:	4a1e      	ldr	r2, [pc, #120]	; (802bd24 <_free_r+0x94>)
 802bcac:	9801      	ldr	r0, [sp, #4]
 802bcae:	6813      	ldr	r3, [r2, #0]
 802bcb0:	b933      	cbnz	r3, 802bcc0 <_free_r+0x30>
 802bcb2:	6063      	str	r3, [r4, #4]
 802bcb4:	6014      	str	r4, [r2, #0]
 802bcb6:	b003      	add	sp, #12
 802bcb8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802bcbc:	f7ff bd2a 	b.w	802b714 <__malloc_unlock>
 802bcc0:	42a3      	cmp	r3, r4
 802bcc2:	d908      	bls.n	802bcd6 <_free_r+0x46>
 802bcc4:	6825      	ldr	r5, [r4, #0]
 802bcc6:	1961      	adds	r1, r4, r5
 802bcc8:	428b      	cmp	r3, r1
 802bcca:	bf01      	itttt	eq
 802bccc:	6819      	ldreq	r1, [r3, #0]
 802bcce:	685b      	ldreq	r3, [r3, #4]
 802bcd0:	1949      	addeq	r1, r1, r5
 802bcd2:	6021      	streq	r1, [r4, #0]
 802bcd4:	e7ed      	b.n	802bcb2 <_free_r+0x22>
 802bcd6:	461a      	mov	r2, r3
 802bcd8:	685b      	ldr	r3, [r3, #4]
 802bcda:	b10b      	cbz	r3, 802bce0 <_free_r+0x50>
 802bcdc:	42a3      	cmp	r3, r4
 802bcde:	d9fa      	bls.n	802bcd6 <_free_r+0x46>
 802bce0:	6811      	ldr	r1, [r2, #0]
 802bce2:	1855      	adds	r5, r2, r1
 802bce4:	42a5      	cmp	r5, r4
 802bce6:	d10b      	bne.n	802bd00 <_free_r+0x70>
 802bce8:	6824      	ldr	r4, [r4, #0]
 802bcea:	4421      	add	r1, r4
 802bcec:	1854      	adds	r4, r2, r1
 802bcee:	42a3      	cmp	r3, r4
 802bcf0:	6011      	str	r1, [r2, #0]
 802bcf2:	d1e0      	bne.n	802bcb6 <_free_r+0x26>
 802bcf4:	681c      	ldr	r4, [r3, #0]
 802bcf6:	685b      	ldr	r3, [r3, #4]
 802bcf8:	6053      	str	r3, [r2, #4]
 802bcfa:	440c      	add	r4, r1
 802bcfc:	6014      	str	r4, [r2, #0]
 802bcfe:	e7da      	b.n	802bcb6 <_free_r+0x26>
 802bd00:	d902      	bls.n	802bd08 <_free_r+0x78>
 802bd02:	230c      	movs	r3, #12
 802bd04:	6003      	str	r3, [r0, #0]
 802bd06:	e7d6      	b.n	802bcb6 <_free_r+0x26>
 802bd08:	6825      	ldr	r5, [r4, #0]
 802bd0a:	1961      	adds	r1, r4, r5
 802bd0c:	428b      	cmp	r3, r1
 802bd0e:	bf04      	itt	eq
 802bd10:	6819      	ldreq	r1, [r3, #0]
 802bd12:	685b      	ldreq	r3, [r3, #4]
 802bd14:	6063      	str	r3, [r4, #4]
 802bd16:	bf04      	itt	eq
 802bd18:	1949      	addeq	r1, r1, r5
 802bd1a:	6021      	streq	r1, [r4, #0]
 802bd1c:	6054      	str	r4, [r2, #4]
 802bd1e:	e7ca      	b.n	802bcb6 <_free_r+0x26>
 802bd20:	b003      	add	sp, #12
 802bd22:	bd30      	pop	{r4, r5, pc}
 802bd24:	20014140 	.word	0x20014140

0802bd28 <__sfputc_r>:
 802bd28:	6893      	ldr	r3, [r2, #8]
 802bd2a:	3b01      	subs	r3, #1
 802bd2c:	2b00      	cmp	r3, #0
 802bd2e:	b410      	push	{r4}
 802bd30:	6093      	str	r3, [r2, #8]
 802bd32:	da08      	bge.n	802bd46 <__sfputc_r+0x1e>
 802bd34:	6994      	ldr	r4, [r2, #24]
 802bd36:	42a3      	cmp	r3, r4
 802bd38:	db01      	blt.n	802bd3e <__sfputc_r+0x16>
 802bd3a:	290a      	cmp	r1, #10
 802bd3c:	d103      	bne.n	802bd46 <__sfputc_r+0x1e>
 802bd3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bd42:	f000 bb73 	b.w	802c42c <__swbuf_r>
 802bd46:	6813      	ldr	r3, [r2, #0]
 802bd48:	1c58      	adds	r0, r3, #1
 802bd4a:	6010      	str	r0, [r2, #0]
 802bd4c:	7019      	strb	r1, [r3, #0]
 802bd4e:	4608      	mov	r0, r1
 802bd50:	f85d 4b04 	ldr.w	r4, [sp], #4
 802bd54:	4770      	bx	lr

0802bd56 <__sfputs_r>:
 802bd56:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802bd58:	4606      	mov	r6, r0
 802bd5a:	460f      	mov	r7, r1
 802bd5c:	4614      	mov	r4, r2
 802bd5e:	18d5      	adds	r5, r2, r3
 802bd60:	42ac      	cmp	r4, r5
 802bd62:	d101      	bne.n	802bd68 <__sfputs_r+0x12>
 802bd64:	2000      	movs	r0, #0
 802bd66:	e007      	b.n	802bd78 <__sfputs_r+0x22>
 802bd68:	f814 1b01 	ldrb.w	r1, [r4], #1
 802bd6c:	463a      	mov	r2, r7
 802bd6e:	4630      	mov	r0, r6
 802bd70:	f7ff ffda 	bl	802bd28 <__sfputc_r>
 802bd74:	1c43      	adds	r3, r0, #1
 802bd76:	d1f3      	bne.n	802bd60 <__sfputs_r+0xa>
 802bd78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802bd7c <_vfiprintf_r>:
 802bd7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bd80:	460d      	mov	r5, r1
 802bd82:	b09d      	sub	sp, #116	; 0x74
 802bd84:	4614      	mov	r4, r2
 802bd86:	4698      	mov	r8, r3
 802bd88:	4606      	mov	r6, r0
 802bd8a:	b118      	cbz	r0, 802bd94 <_vfiprintf_r+0x18>
 802bd8c:	6a03      	ldr	r3, [r0, #32]
 802bd8e:	b90b      	cbnz	r3, 802bd94 <_vfiprintf_r+0x18>
 802bd90:	f7ff fd60 	bl	802b854 <__sinit>
 802bd94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bd96:	07d9      	lsls	r1, r3, #31
 802bd98:	d405      	bmi.n	802bda6 <_vfiprintf_r+0x2a>
 802bd9a:	89ab      	ldrh	r3, [r5, #12]
 802bd9c:	059a      	lsls	r2, r3, #22
 802bd9e:	d402      	bmi.n	802bda6 <_vfiprintf_r+0x2a>
 802bda0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bda2:	f7ff ff06 	bl	802bbb2 <__retarget_lock_acquire_recursive>
 802bda6:	89ab      	ldrh	r3, [r5, #12]
 802bda8:	071b      	lsls	r3, r3, #28
 802bdaa:	d501      	bpl.n	802bdb0 <_vfiprintf_r+0x34>
 802bdac:	692b      	ldr	r3, [r5, #16]
 802bdae:	b99b      	cbnz	r3, 802bdd8 <_vfiprintf_r+0x5c>
 802bdb0:	4629      	mov	r1, r5
 802bdb2:	4630      	mov	r0, r6
 802bdb4:	f000 fb78 	bl	802c4a8 <__swsetup_r>
 802bdb8:	b170      	cbz	r0, 802bdd8 <_vfiprintf_r+0x5c>
 802bdba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bdbc:	07dc      	lsls	r4, r3, #31
 802bdbe:	d504      	bpl.n	802bdca <_vfiprintf_r+0x4e>
 802bdc0:	f04f 30ff 	mov.w	r0, #4294967295
 802bdc4:	b01d      	add	sp, #116	; 0x74
 802bdc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bdca:	89ab      	ldrh	r3, [r5, #12]
 802bdcc:	0598      	lsls	r0, r3, #22
 802bdce:	d4f7      	bmi.n	802bdc0 <_vfiprintf_r+0x44>
 802bdd0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bdd2:	f7ff feef 	bl	802bbb4 <__retarget_lock_release_recursive>
 802bdd6:	e7f3      	b.n	802bdc0 <_vfiprintf_r+0x44>
 802bdd8:	2300      	movs	r3, #0
 802bdda:	9309      	str	r3, [sp, #36]	; 0x24
 802bddc:	2320      	movs	r3, #32
 802bdde:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802bde2:	f8cd 800c 	str.w	r8, [sp, #12]
 802bde6:	2330      	movs	r3, #48	; 0x30
 802bde8:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802bf9c <_vfiprintf_r+0x220>
 802bdec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802bdf0:	f04f 0901 	mov.w	r9, #1
 802bdf4:	4623      	mov	r3, r4
 802bdf6:	469a      	mov	sl, r3
 802bdf8:	f813 2b01 	ldrb.w	r2, [r3], #1
 802bdfc:	b10a      	cbz	r2, 802be02 <_vfiprintf_r+0x86>
 802bdfe:	2a25      	cmp	r2, #37	; 0x25
 802be00:	d1f9      	bne.n	802bdf6 <_vfiprintf_r+0x7a>
 802be02:	ebba 0b04 	subs.w	fp, sl, r4
 802be06:	d00b      	beq.n	802be20 <_vfiprintf_r+0xa4>
 802be08:	465b      	mov	r3, fp
 802be0a:	4622      	mov	r2, r4
 802be0c:	4629      	mov	r1, r5
 802be0e:	4630      	mov	r0, r6
 802be10:	f7ff ffa1 	bl	802bd56 <__sfputs_r>
 802be14:	3001      	adds	r0, #1
 802be16:	f000 80a9 	beq.w	802bf6c <_vfiprintf_r+0x1f0>
 802be1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802be1c:	445a      	add	r2, fp
 802be1e:	9209      	str	r2, [sp, #36]	; 0x24
 802be20:	f89a 3000 	ldrb.w	r3, [sl]
 802be24:	2b00      	cmp	r3, #0
 802be26:	f000 80a1 	beq.w	802bf6c <_vfiprintf_r+0x1f0>
 802be2a:	2300      	movs	r3, #0
 802be2c:	f04f 32ff 	mov.w	r2, #4294967295
 802be30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802be34:	f10a 0a01 	add.w	sl, sl, #1
 802be38:	9304      	str	r3, [sp, #16]
 802be3a:	9307      	str	r3, [sp, #28]
 802be3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802be40:	931a      	str	r3, [sp, #104]	; 0x68
 802be42:	4654      	mov	r4, sl
 802be44:	2205      	movs	r2, #5
 802be46:	f814 1b01 	ldrb.w	r1, [r4], #1
 802be4a:	4854      	ldr	r0, [pc, #336]	; (802bf9c <_vfiprintf_r+0x220>)
 802be4c:	f7d4 fa30 	bl	80002b0 <memchr>
 802be50:	9a04      	ldr	r2, [sp, #16]
 802be52:	b9d8      	cbnz	r0, 802be8c <_vfiprintf_r+0x110>
 802be54:	06d1      	lsls	r1, r2, #27
 802be56:	bf44      	itt	mi
 802be58:	2320      	movmi	r3, #32
 802be5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802be5e:	0713      	lsls	r3, r2, #28
 802be60:	bf44      	itt	mi
 802be62:	232b      	movmi	r3, #43	; 0x2b
 802be64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802be68:	f89a 3000 	ldrb.w	r3, [sl]
 802be6c:	2b2a      	cmp	r3, #42	; 0x2a
 802be6e:	d015      	beq.n	802be9c <_vfiprintf_r+0x120>
 802be70:	9a07      	ldr	r2, [sp, #28]
 802be72:	4654      	mov	r4, sl
 802be74:	2000      	movs	r0, #0
 802be76:	f04f 0c0a 	mov.w	ip, #10
 802be7a:	4621      	mov	r1, r4
 802be7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 802be80:	3b30      	subs	r3, #48	; 0x30
 802be82:	2b09      	cmp	r3, #9
 802be84:	d94d      	bls.n	802bf22 <_vfiprintf_r+0x1a6>
 802be86:	b1b0      	cbz	r0, 802beb6 <_vfiprintf_r+0x13a>
 802be88:	9207      	str	r2, [sp, #28]
 802be8a:	e014      	b.n	802beb6 <_vfiprintf_r+0x13a>
 802be8c:	eba0 0308 	sub.w	r3, r0, r8
 802be90:	fa09 f303 	lsl.w	r3, r9, r3
 802be94:	4313      	orrs	r3, r2
 802be96:	9304      	str	r3, [sp, #16]
 802be98:	46a2      	mov	sl, r4
 802be9a:	e7d2      	b.n	802be42 <_vfiprintf_r+0xc6>
 802be9c:	9b03      	ldr	r3, [sp, #12]
 802be9e:	1d19      	adds	r1, r3, #4
 802bea0:	681b      	ldr	r3, [r3, #0]
 802bea2:	9103      	str	r1, [sp, #12]
 802bea4:	2b00      	cmp	r3, #0
 802bea6:	bfbb      	ittet	lt
 802bea8:	425b      	neglt	r3, r3
 802beaa:	f042 0202 	orrlt.w	r2, r2, #2
 802beae:	9307      	strge	r3, [sp, #28]
 802beb0:	9307      	strlt	r3, [sp, #28]
 802beb2:	bfb8      	it	lt
 802beb4:	9204      	strlt	r2, [sp, #16]
 802beb6:	7823      	ldrb	r3, [r4, #0]
 802beb8:	2b2e      	cmp	r3, #46	; 0x2e
 802beba:	d10c      	bne.n	802bed6 <_vfiprintf_r+0x15a>
 802bebc:	7863      	ldrb	r3, [r4, #1]
 802bebe:	2b2a      	cmp	r3, #42	; 0x2a
 802bec0:	d134      	bne.n	802bf2c <_vfiprintf_r+0x1b0>
 802bec2:	9b03      	ldr	r3, [sp, #12]
 802bec4:	1d1a      	adds	r2, r3, #4
 802bec6:	681b      	ldr	r3, [r3, #0]
 802bec8:	9203      	str	r2, [sp, #12]
 802beca:	2b00      	cmp	r3, #0
 802becc:	bfb8      	it	lt
 802bece:	f04f 33ff 	movlt.w	r3, #4294967295
 802bed2:	3402      	adds	r4, #2
 802bed4:	9305      	str	r3, [sp, #20]
 802bed6:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802bfac <_vfiprintf_r+0x230>
 802beda:	7821      	ldrb	r1, [r4, #0]
 802bedc:	2203      	movs	r2, #3
 802bede:	4650      	mov	r0, sl
 802bee0:	f7d4 f9e6 	bl	80002b0 <memchr>
 802bee4:	b138      	cbz	r0, 802bef6 <_vfiprintf_r+0x17a>
 802bee6:	9b04      	ldr	r3, [sp, #16]
 802bee8:	eba0 000a 	sub.w	r0, r0, sl
 802beec:	2240      	movs	r2, #64	; 0x40
 802beee:	4082      	lsls	r2, r0
 802bef0:	4313      	orrs	r3, r2
 802bef2:	3401      	adds	r4, #1
 802bef4:	9304      	str	r3, [sp, #16]
 802bef6:	f814 1b01 	ldrb.w	r1, [r4], #1
 802befa:	4829      	ldr	r0, [pc, #164]	; (802bfa0 <_vfiprintf_r+0x224>)
 802befc:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802bf00:	2206      	movs	r2, #6
 802bf02:	f7d4 f9d5 	bl	80002b0 <memchr>
 802bf06:	2800      	cmp	r0, #0
 802bf08:	d03f      	beq.n	802bf8a <_vfiprintf_r+0x20e>
 802bf0a:	4b26      	ldr	r3, [pc, #152]	; (802bfa4 <_vfiprintf_r+0x228>)
 802bf0c:	bb1b      	cbnz	r3, 802bf56 <_vfiprintf_r+0x1da>
 802bf0e:	9b03      	ldr	r3, [sp, #12]
 802bf10:	3307      	adds	r3, #7
 802bf12:	f023 0307 	bic.w	r3, r3, #7
 802bf16:	3308      	adds	r3, #8
 802bf18:	9303      	str	r3, [sp, #12]
 802bf1a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802bf1c:	443b      	add	r3, r7
 802bf1e:	9309      	str	r3, [sp, #36]	; 0x24
 802bf20:	e768      	b.n	802bdf4 <_vfiprintf_r+0x78>
 802bf22:	fb0c 3202 	mla	r2, ip, r2, r3
 802bf26:	460c      	mov	r4, r1
 802bf28:	2001      	movs	r0, #1
 802bf2a:	e7a6      	b.n	802be7a <_vfiprintf_r+0xfe>
 802bf2c:	2300      	movs	r3, #0
 802bf2e:	3401      	adds	r4, #1
 802bf30:	9305      	str	r3, [sp, #20]
 802bf32:	4619      	mov	r1, r3
 802bf34:	f04f 0c0a 	mov.w	ip, #10
 802bf38:	4620      	mov	r0, r4
 802bf3a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802bf3e:	3a30      	subs	r2, #48	; 0x30
 802bf40:	2a09      	cmp	r2, #9
 802bf42:	d903      	bls.n	802bf4c <_vfiprintf_r+0x1d0>
 802bf44:	2b00      	cmp	r3, #0
 802bf46:	d0c6      	beq.n	802bed6 <_vfiprintf_r+0x15a>
 802bf48:	9105      	str	r1, [sp, #20]
 802bf4a:	e7c4      	b.n	802bed6 <_vfiprintf_r+0x15a>
 802bf4c:	fb0c 2101 	mla	r1, ip, r1, r2
 802bf50:	4604      	mov	r4, r0
 802bf52:	2301      	movs	r3, #1
 802bf54:	e7f0      	b.n	802bf38 <_vfiprintf_r+0x1bc>
 802bf56:	ab03      	add	r3, sp, #12
 802bf58:	9300      	str	r3, [sp, #0]
 802bf5a:	462a      	mov	r2, r5
 802bf5c:	4b12      	ldr	r3, [pc, #72]	; (802bfa8 <_vfiprintf_r+0x22c>)
 802bf5e:	a904      	add	r1, sp, #16
 802bf60:	4630      	mov	r0, r6
 802bf62:	f3af 8000 	nop.w
 802bf66:	4607      	mov	r7, r0
 802bf68:	1c78      	adds	r0, r7, #1
 802bf6a:	d1d6      	bne.n	802bf1a <_vfiprintf_r+0x19e>
 802bf6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802bf6e:	07d9      	lsls	r1, r3, #31
 802bf70:	d405      	bmi.n	802bf7e <_vfiprintf_r+0x202>
 802bf72:	89ab      	ldrh	r3, [r5, #12]
 802bf74:	059a      	lsls	r2, r3, #22
 802bf76:	d402      	bmi.n	802bf7e <_vfiprintf_r+0x202>
 802bf78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802bf7a:	f7ff fe1b 	bl	802bbb4 <__retarget_lock_release_recursive>
 802bf7e:	89ab      	ldrh	r3, [r5, #12]
 802bf80:	065b      	lsls	r3, r3, #25
 802bf82:	f53f af1d 	bmi.w	802bdc0 <_vfiprintf_r+0x44>
 802bf86:	9809      	ldr	r0, [sp, #36]	; 0x24
 802bf88:	e71c      	b.n	802bdc4 <_vfiprintf_r+0x48>
 802bf8a:	ab03      	add	r3, sp, #12
 802bf8c:	9300      	str	r3, [sp, #0]
 802bf8e:	462a      	mov	r2, r5
 802bf90:	4b05      	ldr	r3, [pc, #20]	; (802bfa8 <_vfiprintf_r+0x22c>)
 802bf92:	a904      	add	r1, sp, #16
 802bf94:	4630      	mov	r0, r6
 802bf96:	f000 f879 	bl	802c08c <_printf_i>
 802bf9a:	e7e4      	b.n	802bf66 <_vfiprintf_r+0x1ea>
 802bf9c:	080437e8 	.word	0x080437e8
 802bfa0:	080437f2 	.word	0x080437f2
 802bfa4:	00000000 	.word	0x00000000
 802bfa8:	0802bd57 	.word	0x0802bd57
 802bfac:	080437ee 	.word	0x080437ee

0802bfb0 <_printf_common>:
 802bfb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802bfb4:	4616      	mov	r6, r2
 802bfb6:	4699      	mov	r9, r3
 802bfb8:	688a      	ldr	r2, [r1, #8]
 802bfba:	690b      	ldr	r3, [r1, #16]
 802bfbc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802bfc0:	4293      	cmp	r3, r2
 802bfc2:	bfb8      	it	lt
 802bfc4:	4613      	movlt	r3, r2
 802bfc6:	6033      	str	r3, [r6, #0]
 802bfc8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802bfcc:	4607      	mov	r7, r0
 802bfce:	460c      	mov	r4, r1
 802bfd0:	b10a      	cbz	r2, 802bfd6 <_printf_common+0x26>
 802bfd2:	3301      	adds	r3, #1
 802bfd4:	6033      	str	r3, [r6, #0]
 802bfd6:	6823      	ldr	r3, [r4, #0]
 802bfd8:	0699      	lsls	r1, r3, #26
 802bfda:	bf42      	ittt	mi
 802bfdc:	6833      	ldrmi	r3, [r6, #0]
 802bfde:	3302      	addmi	r3, #2
 802bfe0:	6033      	strmi	r3, [r6, #0]
 802bfe2:	6825      	ldr	r5, [r4, #0]
 802bfe4:	f015 0506 	ands.w	r5, r5, #6
 802bfe8:	d106      	bne.n	802bff8 <_printf_common+0x48>
 802bfea:	f104 0a19 	add.w	sl, r4, #25
 802bfee:	68e3      	ldr	r3, [r4, #12]
 802bff0:	6832      	ldr	r2, [r6, #0]
 802bff2:	1a9b      	subs	r3, r3, r2
 802bff4:	42ab      	cmp	r3, r5
 802bff6:	dc26      	bgt.n	802c046 <_printf_common+0x96>
 802bff8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802bffc:	1e13      	subs	r3, r2, #0
 802bffe:	6822      	ldr	r2, [r4, #0]
 802c000:	bf18      	it	ne
 802c002:	2301      	movne	r3, #1
 802c004:	0692      	lsls	r2, r2, #26
 802c006:	d42b      	bmi.n	802c060 <_printf_common+0xb0>
 802c008:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802c00c:	4649      	mov	r1, r9
 802c00e:	4638      	mov	r0, r7
 802c010:	47c0      	blx	r8
 802c012:	3001      	adds	r0, #1
 802c014:	d01e      	beq.n	802c054 <_printf_common+0xa4>
 802c016:	6823      	ldr	r3, [r4, #0]
 802c018:	6922      	ldr	r2, [r4, #16]
 802c01a:	f003 0306 	and.w	r3, r3, #6
 802c01e:	2b04      	cmp	r3, #4
 802c020:	bf02      	ittt	eq
 802c022:	68e5      	ldreq	r5, [r4, #12]
 802c024:	6833      	ldreq	r3, [r6, #0]
 802c026:	1aed      	subeq	r5, r5, r3
 802c028:	68a3      	ldr	r3, [r4, #8]
 802c02a:	bf0c      	ite	eq
 802c02c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802c030:	2500      	movne	r5, #0
 802c032:	4293      	cmp	r3, r2
 802c034:	bfc4      	itt	gt
 802c036:	1a9b      	subgt	r3, r3, r2
 802c038:	18ed      	addgt	r5, r5, r3
 802c03a:	2600      	movs	r6, #0
 802c03c:	341a      	adds	r4, #26
 802c03e:	42b5      	cmp	r5, r6
 802c040:	d11a      	bne.n	802c078 <_printf_common+0xc8>
 802c042:	2000      	movs	r0, #0
 802c044:	e008      	b.n	802c058 <_printf_common+0xa8>
 802c046:	2301      	movs	r3, #1
 802c048:	4652      	mov	r2, sl
 802c04a:	4649      	mov	r1, r9
 802c04c:	4638      	mov	r0, r7
 802c04e:	47c0      	blx	r8
 802c050:	3001      	adds	r0, #1
 802c052:	d103      	bne.n	802c05c <_printf_common+0xac>
 802c054:	f04f 30ff 	mov.w	r0, #4294967295
 802c058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c05c:	3501      	adds	r5, #1
 802c05e:	e7c6      	b.n	802bfee <_printf_common+0x3e>
 802c060:	18e1      	adds	r1, r4, r3
 802c062:	1c5a      	adds	r2, r3, #1
 802c064:	2030      	movs	r0, #48	; 0x30
 802c066:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802c06a:	4422      	add	r2, r4
 802c06c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802c070:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802c074:	3302      	adds	r3, #2
 802c076:	e7c7      	b.n	802c008 <_printf_common+0x58>
 802c078:	2301      	movs	r3, #1
 802c07a:	4622      	mov	r2, r4
 802c07c:	4649      	mov	r1, r9
 802c07e:	4638      	mov	r0, r7
 802c080:	47c0      	blx	r8
 802c082:	3001      	adds	r0, #1
 802c084:	d0e6      	beq.n	802c054 <_printf_common+0xa4>
 802c086:	3601      	adds	r6, #1
 802c088:	e7d9      	b.n	802c03e <_printf_common+0x8e>
	...

0802c08c <_printf_i>:
 802c08c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802c090:	7e0f      	ldrb	r7, [r1, #24]
 802c092:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c094:	2f78      	cmp	r7, #120	; 0x78
 802c096:	4691      	mov	r9, r2
 802c098:	4680      	mov	r8, r0
 802c09a:	460c      	mov	r4, r1
 802c09c:	469a      	mov	sl, r3
 802c09e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802c0a2:	d807      	bhi.n	802c0b4 <_printf_i+0x28>
 802c0a4:	2f62      	cmp	r7, #98	; 0x62
 802c0a6:	d80a      	bhi.n	802c0be <_printf_i+0x32>
 802c0a8:	2f00      	cmp	r7, #0
 802c0aa:	f000 80d4 	beq.w	802c256 <_printf_i+0x1ca>
 802c0ae:	2f58      	cmp	r7, #88	; 0x58
 802c0b0:	f000 80c0 	beq.w	802c234 <_printf_i+0x1a8>
 802c0b4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c0b8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802c0bc:	e03a      	b.n	802c134 <_printf_i+0xa8>
 802c0be:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802c0c2:	2b15      	cmp	r3, #21
 802c0c4:	d8f6      	bhi.n	802c0b4 <_printf_i+0x28>
 802c0c6:	a101      	add	r1, pc, #4	; (adr r1, 802c0cc <_printf_i+0x40>)
 802c0c8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802c0cc:	0802c125 	.word	0x0802c125
 802c0d0:	0802c139 	.word	0x0802c139
 802c0d4:	0802c0b5 	.word	0x0802c0b5
 802c0d8:	0802c0b5 	.word	0x0802c0b5
 802c0dc:	0802c0b5 	.word	0x0802c0b5
 802c0e0:	0802c0b5 	.word	0x0802c0b5
 802c0e4:	0802c139 	.word	0x0802c139
 802c0e8:	0802c0b5 	.word	0x0802c0b5
 802c0ec:	0802c0b5 	.word	0x0802c0b5
 802c0f0:	0802c0b5 	.word	0x0802c0b5
 802c0f4:	0802c0b5 	.word	0x0802c0b5
 802c0f8:	0802c23d 	.word	0x0802c23d
 802c0fc:	0802c165 	.word	0x0802c165
 802c100:	0802c1f7 	.word	0x0802c1f7
 802c104:	0802c0b5 	.word	0x0802c0b5
 802c108:	0802c0b5 	.word	0x0802c0b5
 802c10c:	0802c25f 	.word	0x0802c25f
 802c110:	0802c0b5 	.word	0x0802c0b5
 802c114:	0802c165 	.word	0x0802c165
 802c118:	0802c0b5 	.word	0x0802c0b5
 802c11c:	0802c0b5 	.word	0x0802c0b5
 802c120:	0802c1ff 	.word	0x0802c1ff
 802c124:	682b      	ldr	r3, [r5, #0]
 802c126:	1d1a      	adds	r2, r3, #4
 802c128:	681b      	ldr	r3, [r3, #0]
 802c12a:	602a      	str	r2, [r5, #0]
 802c12c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802c130:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802c134:	2301      	movs	r3, #1
 802c136:	e09f      	b.n	802c278 <_printf_i+0x1ec>
 802c138:	6820      	ldr	r0, [r4, #0]
 802c13a:	682b      	ldr	r3, [r5, #0]
 802c13c:	0607      	lsls	r7, r0, #24
 802c13e:	f103 0104 	add.w	r1, r3, #4
 802c142:	6029      	str	r1, [r5, #0]
 802c144:	d501      	bpl.n	802c14a <_printf_i+0xbe>
 802c146:	681e      	ldr	r6, [r3, #0]
 802c148:	e003      	b.n	802c152 <_printf_i+0xc6>
 802c14a:	0646      	lsls	r6, r0, #25
 802c14c:	d5fb      	bpl.n	802c146 <_printf_i+0xba>
 802c14e:	f9b3 6000 	ldrsh.w	r6, [r3]
 802c152:	2e00      	cmp	r6, #0
 802c154:	da03      	bge.n	802c15e <_printf_i+0xd2>
 802c156:	232d      	movs	r3, #45	; 0x2d
 802c158:	4276      	negs	r6, r6
 802c15a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c15e:	485a      	ldr	r0, [pc, #360]	; (802c2c8 <_printf_i+0x23c>)
 802c160:	230a      	movs	r3, #10
 802c162:	e012      	b.n	802c18a <_printf_i+0xfe>
 802c164:	682b      	ldr	r3, [r5, #0]
 802c166:	6820      	ldr	r0, [r4, #0]
 802c168:	1d19      	adds	r1, r3, #4
 802c16a:	6029      	str	r1, [r5, #0]
 802c16c:	0605      	lsls	r5, r0, #24
 802c16e:	d501      	bpl.n	802c174 <_printf_i+0xe8>
 802c170:	681e      	ldr	r6, [r3, #0]
 802c172:	e002      	b.n	802c17a <_printf_i+0xee>
 802c174:	0641      	lsls	r1, r0, #25
 802c176:	d5fb      	bpl.n	802c170 <_printf_i+0xe4>
 802c178:	881e      	ldrh	r6, [r3, #0]
 802c17a:	4853      	ldr	r0, [pc, #332]	; (802c2c8 <_printf_i+0x23c>)
 802c17c:	2f6f      	cmp	r7, #111	; 0x6f
 802c17e:	bf0c      	ite	eq
 802c180:	2308      	moveq	r3, #8
 802c182:	230a      	movne	r3, #10
 802c184:	2100      	movs	r1, #0
 802c186:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802c18a:	6865      	ldr	r5, [r4, #4]
 802c18c:	60a5      	str	r5, [r4, #8]
 802c18e:	2d00      	cmp	r5, #0
 802c190:	bfa2      	ittt	ge
 802c192:	6821      	ldrge	r1, [r4, #0]
 802c194:	f021 0104 	bicge.w	r1, r1, #4
 802c198:	6021      	strge	r1, [r4, #0]
 802c19a:	b90e      	cbnz	r6, 802c1a0 <_printf_i+0x114>
 802c19c:	2d00      	cmp	r5, #0
 802c19e:	d04b      	beq.n	802c238 <_printf_i+0x1ac>
 802c1a0:	4615      	mov	r5, r2
 802c1a2:	fbb6 f1f3 	udiv	r1, r6, r3
 802c1a6:	fb03 6711 	mls	r7, r3, r1, r6
 802c1aa:	5dc7      	ldrb	r7, [r0, r7]
 802c1ac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802c1b0:	4637      	mov	r7, r6
 802c1b2:	42bb      	cmp	r3, r7
 802c1b4:	460e      	mov	r6, r1
 802c1b6:	d9f4      	bls.n	802c1a2 <_printf_i+0x116>
 802c1b8:	2b08      	cmp	r3, #8
 802c1ba:	d10b      	bne.n	802c1d4 <_printf_i+0x148>
 802c1bc:	6823      	ldr	r3, [r4, #0]
 802c1be:	07de      	lsls	r6, r3, #31
 802c1c0:	d508      	bpl.n	802c1d4 <_printf_i+0x148>
 802c1c2:	6923      	ldr	r3, [r4, #16]
 802c1c4:	6861      	ldr	r1, [r4, #4]
 802c1c6:	4299      	cmp	r1, r3
 802c1c8:	bfde      	ittt	le
 802c1ca:	2330      	movle	r3, #48	; 0x30
 802c1cc:	f805 3c01 	strble.w	r3, [r5, #-1]
 802c1d0:	f105 35ff 	addle.w	r5, r5, #4294967295
 802c1d4:	1b52      	subs	r2, r2, r5
 802c1d6:	6122      	str	r2, [r4, #16]
 802c1d8:	f8cd a000 	str.w	sl, [sp]
 802c1dc:	464b      	mov	r3, r9
 802c1de:	aa03      	add	r2, sp, #12
 802c1e0:	4621      	mov	r1, r4
 802c1e2:	4640      	mov	r0, r8
 802c1e4:	f7ff fee4 	bl	802bfb0 <_printf_common>
 802c1e8:	3001      	adds	r0, #1
 802c1ea:	d14a      	bne.n	802c282 <_printf_i+0x1f6>
 802c1ec:	f04f 30ff 	mov.w	r0, #4294967295
 802c1f0:	b004      	add	sp, #16
 802c1f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c1f6:	6823      	ldr	r3, [r4, #0]
 802c1f8:	f043 0320 	orr.w	r3, r3, #32
 802c1fc:	6023      	str	r3, [r4, #0]
 802c1fe:	4833      	ldr	r0, [pc, #204]	; (802c2cc <_printf_i+0x240>)
 802c200:	2778      	movs	r7, #120	; 0x78
 802c202:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802c206:	6823      	ldr	r3, [r4, #0]
 802c208:	6829      	ldr	r1, [r5, #0]
 802c20a:	061f      	lsls	r7, r3, #24
 802c20c:	f851 6b04 	ldr.w	r6, [r1], #4
 802c210:	d402      	bmi.n	802c218 <_printf_i+0x18c>
 802c212:	065f      	lsls	r7, r3, #25
 802c214:	bf48      	it	mi
 802c216:	b2b6      	uxthmi	r6, r6
 802c218:	07df      	lsls	r7, r3, #31
 802c21a:	bf48      	it	mi
 802c21c:	f043 0320 	orrmi.w	r3, r3, #32
 802c220:	6029      	str	r1, [r5, #0]
 802c222:	bf48      	it	mi
 802c224:	6023      	strmi	r3, [r4, #0]
 802c226:	b91e      	cbnz	r6, 802c230 <_printf_i+0x1a4>
 802c228:	6823      	ldr	r3, [r4, #0]
 802c22a:	f023 0320 	bic.w	r3, r3, #32
 802c22e:	6023      	str	r3, [r4, #0]
 802c230:	2310      	movs	r3, #16
 802c232:	e7a7      	b.n	802c184 <_printf_i+0xf8>
 802c234:	4824      	ldr	r0, [pc, #144]	; (802c2c8 <_printf_i+0x23c>)
 802c236:	e7e4      	b.n	802c202 <_printf_i+0x176>
 802c238:	4615      	mov	r5, r2
 802c23a:	e7bd      	b.n	802c1b8 <_printf_i+0x12c>
 802c23c:	682b      	ldr	r3, [r5, #0]
 802c23e:	6826      	ldr	r6, [r4, #0]
 802c240:	6961      	ldr	r1, [r4, #20]
 802c242:	1d18      	adds	r0, r3, #4
 802c244:	6028      	str	r0, [r5, #0]
 802c246:	0635      	lsls	r5, r6, #24
 802c248:	681b      	ldr	r3, [r3, #0]
 802c24a:	d501      	bpl.n	802c250 <_printf_i+0x1c4>
 802c24c:	6019      	str	r1, [r3, #0]
 802c24e:	e002      	b.n	802c256 <_printf_i+0x1ca>
 802c250:	0670      	lsls	r0, r6, #25
 802c252:	d5fb      	bpl.n	802c24c <_printf_i+0x1c0>
 802c254:	8019      	strh	r1, [r3, #0]
 802c256:	2300      	movs	r3, #0
 802c258:	6123      	str	r3, [r4, #16]
 802c25a:	4615      	mov	r5, r2
 802c25c:	e7bc      	b.n	802c1d8 <_printf_i+0x14c>
 802c25e:	682b      	ldr	r3, [r5, #0]
 802c260:	1d1a      	adds	r2, r3, #4
 802c262:	602a      	str	r2, [r5, #0]
 802c264:	681d      	ldr	r5, [r3, #0]
 802c266:	6862      	ldr	r2, [r4, #4]
 802c268:	2100      	movs	r1, #0
 802c26a:	4628      	mov	r0, r5
 802c26c:	f7d4 f820 	bl	80002b0 <memchr>
 802c270:	b108      	cbz	r0, 802c276 <_printf_i+0x1ea>
 802c272:	1b40      	subs	r0, r0, r5
 802c274:	6060      	str	r0, [r4, #4]
 802c276:	6863      	ldr	r3, [r4, #4]
 802c278:	6123      	str	r3, [r4, #16]
 802c27a:	2300      	movs	r3, #0
 802c27c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802c280:	e7aa      	b.n	802c1d8 <_printf_i+0x14c>
 802c282:	6923      	ldr	r3, [r4, #16]
 802c284:	462a      	mov	r2, r5
 802c286:	4649      	mov	r1, r9
 802c288:	4640      	mov	r0, r8
 802c28a:	47d0      	blx	sl
 802c28c:	3001      	adds	r0, #1
 802c28e:	d0ad      	beq.n	802c1ec <_printf_i+0x160>
 802c290:	6823      	ldr	r3, [r4, #0]
 802c292:	079b      	lsls	r3, r3, #30
 802c294:	d413      	bmi.n	802c2be <_printf_i+0x232>
 802c296:	68e0      	ldr	r0, [r4, #12]
 802c298:	9b03      	ldr	r3, [sp, #12]
 802c29a:	4298      	cmp	r0, r3
 802c29c:	bfb8      	it	lt
 802c29e:	4618      	movlt	r0, r3
 802c2a0:	e7a6      	b.n	802c1f0 <_printf_i+0x164>
 802c2a2:	2301      	movs	r3, #1
 802c2a4:	4632      	mov	r2, r6
 802c2a6:	4649      	mov	r1, r9
 802c2a8:	4640      	mov	r0, r8
 802c2aa:	47d0      	blx	sl
 802c2ac:	3001      	adds	r0, #1
 802c2ae:	d09d      	beq.n	802c1ec <_printf_i+0x160>
 802c2b0:	3501      	adds	r5, #1
 802c2b2:	68e3      	ldr	r3, [r4, #12]
 802c2b4:	9903      	ldr	r1, [sp, #12]
 802c2b6:	1a5b      	subs	r3, r3, r1
 802c2b8:	42ab      	cmp	r3, r5
 802c2ba:	dcf2      	bgt.n	802c2a2 <_printf_i+0x216>
 802c2bc:	e7eb      	b.n	802c296 <_printf_i+0x20a>
 802c2be:	2500      	movs	r5, #0
 802c2c0:	f104 0619 	add.w	r6, r4, #25
 802c2c4:	e7f5      	b.n	802c2b2 <_printf_i+0x226>
 802c2c6:	bf00      	nop
 802c2c8:	080437f9 	.word	0x080437f9
 802c2cc:	0804380a 	.word	0x0804380a

0802c2d0 <__sflush_r>:
 802c2d0:	898a      	ldrh	r2, [r1, #12]
 802c2d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802c2d6:	4605      	mov	r5, r0
 802c2d8:	0710      	lsls	r0, r2, #28
 802c2da:	460c      	mov	r4, r1
 802c2dc:	d458      	bmi.n	802c390 <__sflush_r+0xc0>
 802c2de:	684b      	ldr	r3, [r1, #4]
 802c2e0:	2b00      	cmp	r3, #0
 802c2e2:	dc05      	bgt.n	802c2f0 <__sflush_r+0x20>
 802c2e4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802c2e6:	2b00      	cmp	r3, #0
 802c2e8:	dc02      	bgt.n	802c2f0 <__sflush_r+0x20>
 802c2ea:	2000      	movs	r0, #0
 802c2ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802c2f0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c2f2:	2e00      	cmp	r6, #0
 802c2f4:	d0f9      	beq.n	802c2ea <__sflush_r+0x1a>
 802c2f6:	2300      	movs	r3, #0
 802c2f8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802c2fc:	682f      	ldr	r7, [r5, #0]
 802c2fe:	6a21      	ldr	r1, [r4, #32]
 802c300:	602b      	str	r3, [r5, #0]
 802c302:	d032      	beq.n	802c36a <__sflush_r+0x9a>
 802c304:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802c306:	89a3      	ldrh	r3, [r4, #12]
 802c308:	075a      	lsls	r2, r3, #29
 802c30a:	d505      	bpl.n	802c318 <__sflush_r+0x48>
 802c30c:	6863      	ldr	r3, [r4, #4]
 802c30e:	1ac0      	subs	r0, r0, r3
 802c310:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802c312:	b10b      	cbz	r3, 802c318 <__sflush_r+0x48>
 802c314:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802c316:	1ac0      	subs	r0, r0, r3
 802c318:	2300      	movs	r3, #0
 802c31a:	4602      	mov	r2, r0
 802c31c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802c31e:	6a21      	ldr	r1, [r4, #32]
 802c320:	4628      	mov	r0, r5
 802c322:	47b0      	blx	r6
 802c324:	1c43      	adds	r3, r0, #1
 802c326:	89a3      	ldrh	r3, [r4, #12]
 802c328:	d106      	bne.n	802c338 <__sflush_r+0x68>
 802c32a:	6829      	ldr	r1, [r5, #0]
 802c32c:	291d      	cmp	r1, #29
 802c32e:	d82b      	bhi.n	802c388 <__sflush_r+0xb8>
 802c330:	4a29      	ldr	r2, [pc, #164]	; (802c3d8 <__sflush_r+0x108>)
 802c332:	410a      	asrs	r2, r1
 802c334:	07d6      	lsls	r6, r2, #31
 802c336:	d427      	bmi.n	802c388 <__sflush_r+0xb8>
 802c338:	2200      	movs	r2, #0
 802c33a:	6062      	str	r2, [r4, #4]
 802c33c:	04d9      	lsls	r1, r3, #19
 802c33e:	6922      	ldr	r2, [r4, #16]
 802c340:	6022      	str	r2, [r4, #0]
 802c342:	d504      	bpl.n	802c34e <__sflush_r+0x7e>
 802c344:	1c42      	adds	r2, r0, #1
 802c346:	d101      	bne.n	802c34c <__sflush_r+0x7c>
 802c348:	682b      	ldr	r3, [r5, #0]
 802c34a:	b903      	cbnz	r3, 802c34e <__sflush_r+0x7e>
 802c34c:	6560      	str	r0, [r4, #84]	; 0x54
 802c34e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c350:	602f      	str	r7, [r5, #0]
 802c352:	2900      	cmp	r1, #0
 802c354:	d0c9      	beq.n	802c2ea <__sflush_r+0x1a>
 802c356:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c35a:	4299      	cmp	r1, r3
 802c35c:	d002      	beq.n	802c364 <__sflush_r+0x94>
 802c35e:	4628      	mov	r0, r5
 802c360:	f7ff fc96 	bl	802bc90 <_free_r>
 802c364:	2000      	movs	r0, #0
 802c366:	6360      	str	r0, [r4, #52]	; 0x34
 802c368:	e7c0      	b.n	802c2ec <__sflush_r+0x1c>
 802c36a:	2301      	movs	r3, #1
 802c36c:	4628      	mov	r0, r5
 802c36e:	47b0      	blx	r6
 802c370:	1c41      	adds	r1, r0, #1
 802c372:	d1c8      	bne.n	802c306 <__sflush_r+0x36>
 802c374:	682b      	ldr	r3, [r5, #0]
 802c376:	2b00      	cmp	r3, #0
 802c378:	d0c5      	beq.n	802c306 <__sflush_r+0x36>
 802c37a:	2b1d      	cmp	r3, #29
 802c37c:	d001      	beq.n	802c382 <__sflush_r+0xb2>
 802c37e:	2b16      	cmp	r3, #22
 802c380:	d101      	bne.n	802c386 <__sflush_r+0xb6>
 802c382:	602f      	str	r7, [r5, #0]
 802c384:	e7b1      	b.n	802c2ea <__sflush_r+0x1a>
 802c386:	89a3      	ldrh	r3, [r4, #12]
 802c388:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c38c:	81a3      	strh	r3, [r4, #12]
 802c38e:	e7ad      	b.n	802c2ec <__sflush_r+0x1c>
 802c390:	690f      	ldr	r7, [r1, #16]
 802c392:	2f00      	cmp	r7, #0
 802c394:	d0a9      	beq.n	802c2ea <__sflush_r+0x1a>
 802c396:	0793      	lsls	r3, r2, #30
 802c398:	680e      	ldr	r6, [r1, #0]
 802c39a:	bf08      	it	eq
 802c39c:	694b      	ldreq	r3, [r1, #20]
 802c39e:	600f      	str	r7, [r1, #0]
 802c3a0:	bf18      	it	ne
 802c3a2:	2300      	movne	r3, #0
 802c3a4:	eba6 0807 	sub.w	r8, r6, r7
 802c3a8:	608b      	str	r3, [r1, #8]
 802c3aa:	f1b8 0f00 	cmp.w	r8, #0
 802c3ae:	dd9c      	ble.n	802c2ea <__sflush_r+0x1a>
 802c3b0:	6a21      	ldr	r1, [r4, #32]
 802c3b2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802c3b4:	4643      	mov	r3, r8
 802c3b6:	463a      	mov	r2, r7
 802c3b8:	4628      	mov	r0, r5
 802c3ba:	47b0      	blx	r6
 802c3bc:	2800      	cmp	r0, #0
 802c3be:	dc06      	bgt.n	802c3ce <__sflush_r+0xfe>
 802c3c0:	89a3      	ldrh	r3, [r4, #12]
 802c3c2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802c3c6:	81a3      	strh	r3, [r4, #12]
 802c3c8:	f04f 30ff 	mov.w	r0, #4294967295
 802c3cc:	e78e      	b.n	802c2ec <__sflush_r+0x1c>
 802c3ce:	4407      	add	r7, r0
 802c3d0:	eba8 0800 	sub.w	r8, r8, r0
 802c3d4:	e7e9      	b.n	802c3aa <__sflush_r+0xda>
 802c3d6:	bf00      	nop
 802c3d8:	dfbffffe 	.word	0xdfbffffe

0802c3dc <_fflush_r>:
 802c3dc:	b538      	push	{r3, r4, r5, lr}
 802c3de:	690b      	ldr	r3, [r1, #16]
 802c3e0:	4605      	mov	r5, r0
 802c3e2:	460c      	mov	r4, r1
 802c3e4:	b913      	cbnz	r3, 802c3ec <_fflush_r+0x10>
 802c3e6:	2500      	movs	r5, #0
 802c3e8:	4628      	mov	r0, r5
 802c3ea:	bd38      	pop	{r3, r4, r5, pc}
 802c3ec:	b118      	cbz	r0, 802c3f6 <_fflush_r+0x1a>
 802c3ee:	6a03      	ldr	r3, [r0, #32]
 802c3f0:	b90b      	cbnz	r3, 802c3f6 <_fflush_r+0x1a>
 802c3f2:	f7ff fa2f 	bl	802b854 <__sinit>
 802c3f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c3fa:	2b00      	cmp	r3, #0
 802c3fc:	d0f3      	beq.n	802c3e6 <_fflush_r+0xa>
 802c3fe:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802c400:	07d0      	lsls	r0, r2, #31
 802c402:	d404      	bmi.n	802c40e <_fflush_r+0x32>
 802c404:	0599      	lsls	r1, r3, #22
 802c406:	d402      	bmi.n	802c40e <_fflush_r+0x32>
 802c408:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c40a:	f7ff fbd2 	bl	802bbb2 <__retarget_lock_acquire_recursive>
 802c40e:	4628      	mov	r0, r5
 802c410:	4621      	mov	r1, r4
 802c412:	f7ff ff5d 	bl	802c2d0 <__sflush_r>
 802c416:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802c418:	07da      	lsls	r2, r3, #31
 802c41a:	4605      	mov	r5, r0
 802c41c:	d4e4      	bmi.n	802c3e8 <_fflush_r+0xc>
 802c41e:	89a3      	ldrh	r3, [r4, #12]
 802c420:	059b      	lsls	r3, r3, #22
 802c422:	d4e1      	bmi.n	802c3e8 <_fflush_r+0xc>
 802c424:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802c426:	f7ff fbc5 	bl	802bbb4 <__retarget_lock_release_recursive>
 802c42a:	e7dd      	b.n	802c3e8 <_fflush_r+0xc>

0802c42c <__swbuf_r>:
 802c42c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c42e:	460e      	mov	r6, r1
 802c430:	4614      	mov	r4, r2
 802c432:	4605      	mov	r5, r0
 802c434:	b118      	cbz	r0, 802c43e <__swbuf_r+0x12>
 802c436:	6a03      	ldr	r3, [r0, #32]
 802c438:	b90b      	cbnz	r3, 802c43e <__swbuf_r+0x12>
 802c43a:	f7ff fa0b 	bl	802b854 <__sinit>
 802c43e:	69a3      	ldr	r3, [r4, #24]
 802c440:	60a3      	str	r3, [r4, #8]
 802c442:	89a3      	ldrh	r3, [r4, #12]
 802c444:	071a      	lsls	r2, r3, #28
 802c446:	d525      	bpl.n	802c494 <__swbuf_r+0x68>
 802c448:	6923      	ldr	r3, [r4, #16]
 802c44a:	b31b      	cbz	r3, 802c494 <__swbuf_r+0x68>
 802c44c:	6823      	ldr	r3, [r4, #0]
 802c44e:	6922      	ldr	r2, [r4, #16]
 802c450:	1a98      	subs	r0, r3, r2
 802c452:	6963      	ldr	r3, [r4, #20]
 802c454:	b2f6      	uxtb	r6, r6
 802c456:	4283      	cmp	r3, r0
 802c458:	4637      	mov	r7, r6
 802c45a:	dc04      	bgt.n	802c466 <__swbuf_r+0x3a>
 802c45c:	4621      	mov	r1, r4
 802c45e:	4628      	mov	r0, r5
 802c460:	f7ff ffbc 	bl	802c3dc <_fflush_r>
 802c464:	b9e0      	cbnz	r0, 802c4a0 <__swbuf_r+0x74>
 802c466:	68a3      	ldr	r3, [r4, #8]
 802c468:	3b01      	subs	r3, #1
 802c46a:	60a3      	str	r3, [r4, #8]
 802c46c:	6823      	ldr	r3, [r4, #0]
 802c46e:	1c5a      	adds	r2, r3, #1
 802c470:	6022      	str	r2, [r4, #0]
 802c472:	701e      	strb	r6, [r3, #0]
 802c474:	6962      	ldr	r2, [r4, #20]
 802c476:	1c43      	adds	r3, r0, #1
 802c478:	429a      	cmp	r2, r3
 802c47a:	d004      	beq.n	802c486 <__swbuf_r+0x5a>
 802c47c:	89a3      	ldrh	r3, [r4, #12]
 802c47e:	07db      	lsls	r3, r3, #31
 802c480:	d506      	bpl.n	802c490 <__swbuf_r+0x64>
 802c482:	2e0a      	cmp	r6, #10
 802c484:	d104      	bne.n	802c490 <__swbuf_r+0x64>
 802c486:	4621      	mov	r1, r4
 802c488:	4628      	mov	r0, r5
 802c48a:	f7ff ffa7 	bl	802c3dc <_fflush_r>
 802c48e:	b938      	cbnz	r0, 802c4a0 <__swbuf_r+0x74>
 802c490:	4638      	mov	r0, r7
 802c492:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802c494:	4621      	mov	r1, r4
 802c496:	4628      	mov	r0, r5
 802c498:	f000 f806 	bl	802c4a8 <__swsetup_r>
 802c49c:	2800      	cmp	r0, #0
 802c49e:	d0d5      	beq.n	802c44c <__swbuf_r+0x20>
 802c4a0:	f04f 37ff 	mov.w	r7, #4294967295
 802c4a4:	e7f4      	b.n	802c490 <__swbuf_r+0x64>
	...

0802c4a8 <__swsetup_r>:
 802c4a8:	b538      	push	{r3, r4, r5, lr}
 802c4aa:	4b2a      	ldr	r3, [pc, #168]	; (802c554 <__swsetup_r+0xac>)
 802c4ac:	4605      	mov	r5, r0
 802c4ae:	6818      	ldr	r0, [r3, #0]
 802c4b0:	460c      	mov	r4, r1
 802c4b2:	b118      	cbz	r0, 802c4bc <__swsetup_r+0x14>
 802c4b4:	6a03      	ldr	r3, [r0, #32]
 802c4b6:	b90b      	cbnz	r3, 802c4bc <__swsetup_r+0x14>
 802c4b8:	f7ff f9cc 	bl	802b854 <__sinit>
 802c4bc:	89a3      	ldrh	r3, [r4, #12]
 802c4be:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c4c2:	0718      	lsls	r0, r3, #28
 802c4c4:	d422      	bmi.n	802c50c <__swsetup_r+0x64>
 802c4c6:	06d9      	lsls	r1, r3, #27
 802c4c8:	d407      	bmi.n	802c4da <__swsetup_r+0x32>
 802c4ca:	2309      	movs	r3, #9
 802c4cc:	602b      	str	r3, [r5, #0]
 802c4ce:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802c4d2:	81a3      	strh	r3, [r4, #12]
 802c4d4:	f04f 30ff 	mov.w	r0, #4294967295
 802c4d8:	e034      	b.n	802c544 <__swsetup_r+0x9c>
 802c4da:	0758      	lsls	r0, r3, #29
 802c4dc:	d512      	bpl.n	802c504 <__swsetup_r+0x5c>
 802c4de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802c4e0:	b141      	cbz	r1, 802c4f4 <__swsetup_r+0x4c>
 802c4e2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802c4e6:	4299      	cmp	r1, r3
 802c4e8:	d002      	beq.n	802c4f0 <__swsetup_r+0x48>
 802c4ea:	4628      	mov	r0, r5
 802c4ec:	f7ff fbd0 	bl	802bc90 <_free_r>
 802c4f0:	2300      	movs	r3, #0
 802c4f2:	6363      	str	r3, [r4, #52]	; 0x34
 802c4f4:	89a3      	ldrh	r3, [r4, #12]
 802c4f6:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802c4fa:	81a3      	strh	r3, [r4, #12]
 802c4fc:	2300      	movs	r3, #0
 802c4fe:	6063      	str	r3, [r4, #4]
 802c500:	6923      	ldr	r3, [r4, #16]
 802c502:	6023      	str	r3, [r4, #0]
 802c504:	89a3      	ldrh	r3, [r4, #12]
 802c506:	f043 0308 	orr.w	r3, r3, #8
 802c50a:	81a3      	strh	r3, [r4, #12]
 802c50c:	6923      	ldr	r3, [r4, #16]
 802c50e:	b94b      	cbnz	r3, 802c524 <__swsetup_r+0x7c>
 802c510:	89a3      	ldrh	r3, [r4, #12]
 802c512:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802c516:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802c51a:	d003      	beq.n	802c524 <__swsetup_r+0x7c>
 802c51c:	4621      	mov	r1, r4
 802c51e:	4628      	mov	r0, r5
 802c520:	f000 f840 	bl	802c5a4 <__smakebuf_r>
 802c524:	89a0      	ldrh	r0, [r4, #12]
 802c526:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802c52a:	f010 0301 	ands.w	r3, r0, #1
 802c52e:	d00a      	beq.n	802c546 <__swsetup_r+0x9e>
 802c530:	2300      	movs	r3, #0
 802c532:	60a3      	str	r3, [r4, #8]
 802c534:	6963      	ldr	r3, [r4, #20]
 802c536:	425b      	negs	r3, r3
 802c538:	61a3      	str	r3, [r4, #24]
 802c53a:	6923      	ldr	r3, [r4, #16]
 802c53c:	b943      	cbnz	r3, 802c550 <__swsetup_r+0xa8>
 802c53e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802c542:	d1c4      	bne.n	802c4ce <__swsetup_r+0x26>
 802c544:	bd38      	pop	{r3, r4, r5, pc}
 802c546:	0781      	lsls	r1, r0, #30
 802c548:	bf58      	it	pl
 802c54a:	6963      	ldrpl	r3, [r4, #20]
 802c54c:	60a3      	str	r3, [r4, #8]
 802c54e:	e7f4      	b.n	802c53a <__swsetup_r+0x92>
 802c550:	2000      	movs	r0, #0
 802c552:	e7f7      	b.n	802c544 <__swsetup_r+0x9c>
 802c554:	20000160 	.word	0x20000160

0802c558 <__swhatbuf_r>:
 802c558:	b570      	push	{r4, r5, r6, lr}
 802c55a:	460c      	mov	r4, r1
 802c55c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802c560:	2900      	cmp	r1, #0
 802c562:	b096      	sub	sp, #88	; 0x58
 802c564:	4615      	mov	r5, r2
 802c566:	461e      	mov	r6, r3
 802c568:	da0d      	bge.n	802c586 <__swhatbuf_r+0x2e>
 802c56a:	89a3      	ldrh	r3, [r4, #12]
 802c56c:	f013 0f80 	tst.w	r3, #128	; 0x80
 802c570:	f04f 0100 	mov.w	r1, #0
 802c574:	bf0c      	ite	eq
 802c576:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802c57a:	2340      	movne	r3, #64	; 0x40
 802c57c:	2000      	movs	r0, #0
 802c57e:	6031      	str	r1, [r6, #0]
 802c580:	602b      	str	r3, [r5, #0]
 802c582:	b016      	add	sp, #88	; 0x58
 802c584:	bd70      	pop	{r4, r5, r6, pc}
 802c586:	466a      	mov	r2, sp
 802c588:	f000 f848 	bl	802c61c <_fstat_r>
 802c58c:	2800      	cmp	r0, #0
 802c58e:	dbec      	blt.n	802c56a <__swhatbuf_r+0x12>
 802c590:	9901      	ldr	r1, [sp, #4]
 802c592:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802c596:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802c59a:	4259      	negs	r1, r3
 802c59c:	4159      	adcs	r1, r3
 802c59e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802c5a2:	e7eb      	b.n	802c57c <__swhatbuf_r+0x24>

0802c5a4 <__smakebuf_r>:
 802c5a4:	898b      	ldrh	r3, [r1, #12]
 802c5a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802c5a8:	079d      	lsls	r5, r3, #30
 802c5aa:	4606      	mov	r6, r0
 802c5ac:	460c      	mov	r4, r1
 802c5ae:	d507      	bpl.n	802c5c0 <__smakebuf_r+0x1c>
 802c5b0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802c5b4:	6023      	str	r3, [r4, #0]
 802c5b6:	6123      	str	r3, [r4, #16]
 802c5b8:	2301      	movs	r3, #1
 802c5ba:	6163      	str	r3, [r4, #20]
 802c5bc:	b002      	add	sp, #8
 802c5be:	bd70      	pop	{r4, r5, r6, pc}
 802c5c0:	ab01      	add	r3, sp, #4
 802c5c2:	466a      	mov	r2, sp
 802c5c4:	f7ff ffc8 	bl	802c558 <__swhatbuf_r>
 802c5c8:	9900      	ldr	r1, [sp, #0]
 802c5ca:	4605      	mov	r5, r0
 802c5cc:	4630      	mov	r0, r6
 802c5ce:	f7ff f81b 	bl	802b608 <_malloc_r>
 802c5d2:	b948      	cbnz	r0, 802c5e8 <__smakebuf_r+0x44>
 802c5d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802c5d8:	059a      	lsls	r2, r3, #22
 802c5da:	d4ef      	bmi.n	802c5bc <__smakebuf_r+0x18>
 802c5dc:	f023 0303 	bic.w	r3, r3, #3
 802c5e0:	f043 0302 	orr.w	r3, r3, #2
 802c5e4:	81a3      	strh	r3, [r4, #12]
 802c5e6:	e7e3      	b.n	802c5b0 <__smakebuf_r+0xc>
 802c5e8:	89a3      	ldrh	r3, [r4, #12]
 802c5ea:	6020      	str	r0, [r4, #0]
 802c5ec:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802c5f0:	81a3      	strh	r3, [r4, #12]
 802c5f2:	9b00      	ldr	r3, [sp, #0]
 802c5f4:	6163      	str	r3, [r4, #20]
 802c5f6:	9b01      	ldr	r3, [sp, #4]
 802c5f8:	6120      	str	r0, [r4, #16]
 802c5fa:	b15b      	cbz	r3, 802c614 <__smakebuf_r+0x70>
 802c5fc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802c600:	4630      	mov	r0, r6
 802c602:	f000 f81d 	bl	802c640 <_isatty_r>
 802c606:	b128      	cbz	r0, 802c614 <__smakebuf_r+0x70>
 802c608:	89a3      	ldrh	r3, [r4, #12]
 802c60a:	f023 0303 	bic.w	r3, r3, #3
 802c60e:	f043 0301 	orr.w	r3, r3, #1
 802c612:	81a3      	strh	r3, [r4, #12]
 802c614:	89a3      	ldrh	r3, [r4, #12]
 802c616:	431d      	orrs	r5, r3
 802c618:	81a5      	strh	r5, [r4, #12]
 802c61a:	e7cf      	b.n	802c5bc <__smakebuf_r+0x18>

0802c61c <_fstat_r>:
 802c61c:	b538      	push	{r3, r4, r5, lr}
 802c61e:	4d07      	ldr	r5, [pc, #28]	; (802c63c <_fstat_r+0x20>)
 802c620:	2300      	movs	r3, #0
 802c622:	4604      	mov	r4, r0
 802c624:	4608      	mov	r0, r1
 802c626:	4611      	mov	r1, r2
 802c628:	602b      	str	r3, [r5, #0]
 802c62a:	f7d5 fac5 	bl	8001bb8 <_fstat>
 802c62e:	1c43      	adds	r3, r0, #1
 802c630:	d102      	bne.n	802c638 <_fstat_r+0x1c>
 802c632:	682b      	ldr	r3, [r5, #0]
 802c634:	b103      	cbz	r3, 802c638 <_fstat_r+0x1c>
 802c636:	6023      	str	r3, [r4, #0]
 802c638:	bd38      	pop	{r3, r4, r5, pc}
 802c63a:	bf00      	nop
 802c63c:	20014284 	.word	0x20014284

0802c640 <_isatty_r>:
 802c640:	b538      	push	{r3, r4, r5, lr}
 802c642:	4d06      	ldr	r5, [pc, #24]	; (802c65c <_isatty_r+0x1c>)
 802c644:	2300      	movs	r3, #0
 802c646:	4604      	mov	r4, r0
 802c648:	4608      	mov	r0, r1
 802c64a:	602b      	str	r3, [r5, #0]
 802c64c:	f7d5 faba 	bl	8001bc4 <_isatty>
 802c650:	1c43      	adds	r3, r0, #1
 802c652:	d102      	bne.n	802c65a <_isatty_r+0x1a>
 802c654:	682b      	ldr	r3, [r5, #0]
 802c656:	b103      	cbz	r3, 802c65a <_isatty_r+0x1a>
 802c658:	6023      	str	r3, [r4, #0]
 802c65a:	bd38      	pop	{r3, r4, r5, pc}
 802c65c:	20014284 	.word	0x20014284

0802c660 <_init>:
 802c660:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c662:	bf00      	nop
 802c664:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c666:	bc08      	pop	{r3}
 802c668:	469e      	mov	lr, r3
 802c66a:	4770      	bx	lr

0802c66c <_fini>:
 802c66c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802c66e:	bf00      	nop
 802c670:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802c672:	bc08      	pop	{r3}
 802c674:	469e      	mov	lr, r3
 802c676:	4770      	bx	lr

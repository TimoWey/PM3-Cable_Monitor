
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002a8bc  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00017558  0802aa6c  0802aa6c  0003aa6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00002d3e  08041fc4  08041fc4  00051fc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000170  08044d04  08044d04  00054d04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000674  08044e74  08044e74  00054e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 00119030  080454e8  080454e8  000554e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0815e518  0815e518  00170168  2**0
                  CONTENTS
  8 .ARM          00000008  0815e518  0815e518  0016e518  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0815e520  0815e520  00170168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  0815e520  0815e520  0016e520  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000004  0815e534  0815e534  0016e534  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  0815e538  00170000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013884  20000168  0815e6a0  00170168  2**3
                  ALLOC
 14 ._user_heap_stack 00001404  200139ec  0815e6a0  001739ec  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  00170168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00180000  2**2
                  ALLOC
 17 .comment      00000132  00000000  00000000  00170198  2**0
                  CONTENTS, READONLY
 18 .debug_line   0009984b  00000000  00000000  001702ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000093  00000000  00000000  00209b15  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_info   002918ef  00000000  00000000  00209ba8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_abbrev 0003263b  00000000  00000000  0049b497  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_aranges 00004708  00000000  00000000  004cdad8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    0011f462  00000000  00000000  004d21e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_rnglists 00007f19  00000000  00000000  005f1642  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 00030ade  00000000  00000000  005f955b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_macro  0003c25e  00000000  00000000  0062a039  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_frame  0000d024  00000000  00000000  00666298  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_loc    00003378  00000000  00000000  006732bc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_ranges 00000140  00000000  00000000  00676634  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802aa54 	.word	0x0802aa54

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802aa54 	.word	0x0802aa54

080001f0 <arm_bitreversal_32>:
 80001f0:	1c4b      	adds	r3, r1, #1
 80001f2:	2b01      	cmp	r3, #1
 80001f4:	bf98      	it	ls
 80001f6:	4770      	bxls	lr
 80001f8:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 80001fc:	1c91      	adds	r1, r2, #2
 80001fe:	089b      	lsrs	r3, r3, #2

08000200 <arm_bitreversal_32_0>:
 8000200:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8000204:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000208:	880a      	ldrh	r2, [r1, #0]
 800020a:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 800020e:	4480      	add	r8, r0
 8000210:	4481      	add	r9, r0
 8000212:	4402      	add	r2, r0
 8000214:	4484      	add	ip, r0
 8000216:	f8d9 7000 	ldr.w	r7, [r9]
 800021a:	f8d8 6000 	ldr.w	r6, [r8]
 800021e:	6815      	ldr	r5, [r2, #0]
 8000220:	f8dc 4000 	ldr.w	r4, [ip]
 8000224:	f8c9 6000 	str.w	r6, [r9]
 8000228:	f8c8 7000 	str.w	r7, [r8]
 800022c:	f8cc 5000 	str.w	r5, [ip]
 8000230:	6014      	str	r4, [r2, #0]
 8000232:	f8d9 7004 	ldr.w	r7, [r9, #4]
 8000236:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800023a:	6855      	ldr	r5, [r2, #4]
 800023c:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8000240:	f8c9 6004 	str.w	r6, [r9, #4]
 8000244:	f8c8 7004 	str.w	r7, [r8, #4]
 8000248:	f8cc 5004 	str.w	r5, [ip, #4]
 800024c:	6054      	str	r4, [r2, #4]
 800024e:	3108      	adds	r1, #8
 8000250:	3b01      	subs	r3, #1
 8000252:	d1d5      	bne.n	8000200 <arm_bitreversal_32_0>
 8000254:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000258:	4770      	bx	lr

0800025a <arm_bitreversal_16>:
 800025a:	1c4b      	adds	r3, r1, #1
 800025c:	2b01      	cmp	r3, #1
 800025e:	bf98      	it	ls
 8000260:	4770      	bxls	lr
 8000262:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000266:	1c91      	adds	r1, r2, #2
 8000268:	089b      	lsrs	r3, r3, #2

0800026a <arm_bitreversal_16_0>:
 800026a:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 800026e:	f8b1 9002 	ldrh.w	r9, [r1, #2]
 8000272:	880a      	ldrh	r2, [r1, #0]
 8000274:	f831 cc02 	ldrh.w	ip, [r1, #-2]
 8000278:	eb00 0858 	add.w	r8, r0, r8, lsr #1
 800027c:	eb00 0959 	add.w	r9, r0, r9, lsr #1
 8000280:	eb00 0252 	add.w	r2, r0, r2, lsr #1
 8000284:	eb00 0c5c 	add.w	ip, r0, ip, lsr #1
 8000288:	f8d9 7000 	ldr.w	r7, [r9]
 800028c:	f8d8 6000 	ldr.w	r6, [r8]
 8000290:	6815      	ldr	r5, [r2, #0]
 8000292:	f8dc 4000 	ldr.w	r4, [ip]
 8000296:	f8c9 6000 	str.w	r6, [r9]
 800029a:	f8c8 7000 	str.w	r7, [r8]
 800029e:	f8cc 5000 	str.w	r5, [ip]
 80002a2:	6014      	str	r4, [r2, #0]
 80002a4:	3108      	adds	r1, #8
 80002a6:	3b01      	subs	r3, #1
 80002a8:	d1df      	bne.n	800026a <arm_bitreversal_16_0>
 80002aa:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 80002ae:	4770      	bx	lr

080002b0 <memchr>:
 80002b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002b4:	2a10      	cmp	r2, #16
 80002b6:	db2b      	blt.n	8000310 <memchr+0x60>
 80002b8:	f010 0f07 	tst.w	r0, #7
 80002bc:	d008      	beq.n	80002d0 <memchr+0x20>
 80002be:	f810 3b01 	ldrb.w	r3, [r0], #1
 80002c2:	3a01      	subs	r2, #1
 80002c4:	428b      	cmp	r3, r1
 80002c6:	d02d      	beq.n	8000324 <memchr+0x74>
 80002c8:	f010 0f07 	tst.w	r0, #7
 80002cc:	b342      	cbz	r2, 8000320 <memchr+0x70>
 80002ce:	d1f6      	bne.n	80002be <memchr+0xe>
 80002d0:	b4f0      	push	{r4, r5, r6, r7}
 80002d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80002d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80002da:	f022 0407 	bic.w	r4, r2, #7
 80002de:	f07f 0700 	mvns.w	r7, #0
 80002e2:	2300      	movs	r3, #0
 80002e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80002e8:	3c08      	subs	r4, #8
 80002ea:	ea85 0501 	eor.w	r5, r5, r1
 80002ee:	ea86 0601 	eor.w	r6, r6, r1
 80002f2:	fa85 f547 	uadd8	r5, r5, r7
 80002f6:	faa3 f587 	sel	r5, r3, r7
 80002fa:	fa86 f647 	uadd8	r6, r6, r7
 80002fe:	faa5 f687 	sel	r6, r5, r7
 8000302:	b98e      	cbnz	r6, 8000328 <memchr+0x78>
 8000304:	d1ee      	bne.n	80002e4 <memchr+0x34>
 8000306:	bcf0      	pop	{r4, r5, r6, r7}
 8000308:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800030c:	f002 0207 	and.w	r2, r2, #7
 8000310:	b132      	cbz	r2, 8000320 <memchr+0x70>
 8000312:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000316:	3a01      	subs	r2, #1
 8000318:	ea83 0301 	eor.w	r3, r3, r1
 800031c:	b113      	cbz	r3, 8000324 <memchr+0x74>
 800031e:	d1f8      	bne.n	8000312 <memchr+0x62>
 8000320:	2000      	movs	r0, #0
 8000322:	4770      	bx	lr
 8000324:	3801      	subs	r0, #1
 8000326:	4770      	bx	lr
 8000328:	2d00      	cmp	r5, #0
 800032a:	bf06      	itte	eq
 800032c:	4635      	moveq	r5, r6
 800032e:	3803      	subeq	r0, #3
 8000330:	3807      	subne	r0, #7
 8000332:	f015 0f01 	tst.w	r5, #1
 8000336:	d107      	bne.n	8000348 <memchr+0x98>
 8000338:	3001      	adds	r0, #1
 800033a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800033e:	bf02      	ittt	eq
 8000340:	3001      	addeq	r0, #1
 8000342:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000346:	3001      	addeq	r0, #1
 8000348:	bcf0      	pop	{r4, r5, r6, r7}
 800034a:	3801      	subs	r0, #1
 800034c:	4770      	bx	lr
 800034e:	bf00      	nop

08000350 <__aeabi_uldivmod>:
 8000350:	b953      	cbnz	r3, 8000368 <__aeabi_uldivmod+0x18>
 8000352:	b94a      	cbnz	r2, 8000368 <__aeabi_uldivmod+0x18>
 8000354:	2900      	cmp	r1, #0
 8000356:	bf08      	it	eq
 8000358:	2800      	cmpeq	r0, #0
 800035a:	bf1c      	itt	ne
 800035c:	f04f 31ff 	movne.w	r1, #4294967295
 8000360:	f04f 30ff 	movne.w	r0, #4294967295
 8000364:	f000 b970 	b.w	8000648 <__aeabi_idiv0>
 8000368:	f1ad 0c08 	sub.w	ip, sp, #8
 800036c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000370:	f000 f806 	bl	8000380 <__udivmoddi4>
 8000374:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000378:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800037c:	b004      	add	sp, #16
 800037e:	4770      	bx	lr

08000380 <__udivmoddi4>:
 8000380:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000384:	9e08      	ldr	r6, [sp, #32]
 8000386:	460d      	mov	r5, r1
 8000388:	4604      	mov	r4, r0
 800038a:	460f      	mov	r7, r1
 800038c:	2b00      	cmp	r3, #0
 800038e:	d14a      	bne.n	8000426 <__udivmoddi4+0xa6>
 8000390:	428a      	cmp	r2, r1
 8000392:	4694      	mov	ip, r2
 8000394:	d965      	bls.n	8000462 <__udivmoddi4+0xe2>
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	b143      	cbz	r3, 80003ae <__udivmoddi4+0x2e>
 800039c:	fa02 fc03 	lsl.w	ip, r2, r3
 80003a0:	f1c3 0220 	rsb	r2, r3, #32
 80003a4:	409f      	lsls	r7, r3
 80003a6:	fa20 f202 	lsr.w	r2, r0, r2
 80003aa:	4317      	orrs	r7, r2
 80003ac:	409c      	lsls	r4, r3
 80003ae:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80003b2:	fa1f f58c 	uxth.w	r5, ip
 80003b6:	fbb7 f1fe 	udiv	r1, r7, lr
 80003ba:	0c22      	lsrs	r2, r4, #16
 80003bc:	fb0e 7711 	mls	r7, lr, r1, r7
 80003c0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80003c4:	fb01 f005 	mul.w	r0, r1, r5
 80003c8:	4290      	cmp	r0, r2
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x62>
 80003cc:	eb1c 0202 	adds.w	r2, ip, r2
 80003d0:	f101 37ff 	add.w	r7, r1, #4294967295
 80003d4:	f080 811c 	bcs.w	8000610 <__udivmoddi4+0x290>
 80003d8:	4290      	cmp	r0, r2
 80003da:	f240 8119 	bls.w	8000610 <__udivmoddi4+0x290>
 80003de:	3902      	subs	r1, #2
 80003e0:	4462      	add	r2, ip
 80003e2:	1a12      	subs	r2, r2, r0
 80003e4:	b2a4      	uxth	r4, r4
 80003e6:	fbb2 f0fe 	udiv	r0, r2, lr
 80003ea:	fb0e 2210 	mls	r2, lr, r0, r2
 80003ee:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003f2:	fb00 f505 	mul.w	r5, r0, r5
 80003f6:	42a5      	cmp	r5, r4
 80003f8:	d90a      	bls.n	8000410 <__udivmoddi4+0x90>
 80003fa:	eb1c 0404 	adds.w	r4, ip, r4
 80003fe:	f100 32ff 	add.w	r2, r0, #4294967295
 8000402:	f080 8107 	bcs.w	8000614 <__udivmoddi4+0x294>
 8000406:	42a5      	cmp	r5, r4
 8000408:	f240 8104 	bls.w	8000614 <__udivmoddi4+0x294>
 800040c:	4464      	add	r4, ip
 800040e:	3802      	subs	r0, #2
 8000410:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000414:	1b64      	subs	r4, r4, r5
 8000416:	2100      	movs	r1, #0
 8000418:	b11e      	cbz	r6, 8000422 <__udivmoddi4+0xa2>
 800041a:	40dc      	lsrs	r4, r3
 800041c:	2300      	movs	r3, #0
 800041e:	e9c6 4300 	strd	r4, r3, [r6]
 8000422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000426:	428b      	cmp	r3, r1
 8000428:	d908      	bls.n	800043c <__udivmoddi4+0xbc>
 800042a:	2e00      	cmp	r6, #0
 800042c:	f000 80ed 	beq.w	800060a <__udivmoddi4+0x28a>
 8000430:	2100      	movs	r1, #0
 8000432:	e9c6 0500 	strd	r0, r5, [r6]
 8000436:	4608      	mov	r0, r1
 8000438:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800043c:	fab3 f183 	clz	r1, r3
 8000440:	2900      	cmp	r1, #0
 8000442:	d149      	bne.n	80004d8 <__udivmoddi4+0x158>
 8000444:	42ab      	cmp	r3, r5
 8000446:	d302      	bcc.n	800044e <__udivmoddi4+0xce>
 8000448:	4282      	cmp	r2, r0
 800044a:	f200 80f8 	bhi.w	800063e <__udivmoddi4+0x2be>
 800044e:	1a84      	subs	r4, r0, r2
 8000450:	eb65 0203 	sbc.w	r2, r5, r3
 8000454:	2001      	movs	r0, #1
 8000456:	4617      	mov	r7, r2
 8000458:	2e00      	cmp	r6, #0
 800045a:	d0e2      	beq.n	8000422 <__udivmoddi4+0xa2>
 800045c:	e9c6 4700 	strd	r4, r7, [r6]
 8000460:	e7df      	b.n	8000422 <__udivmoddi4+0xa2>
 8000462:	b902      	cbnz	r2, 8000466 <__udivmoddi4+0xe6>
 8000464:	deff      	udf	#255	; 0xff
 8000466:	fab2 f382 	clz	r3, r2
 800046a:	2b00      	cmp	r3, #0
 800046c:	f040 8090 	bne.w	8000590 <__udivmoddi4+0x210>
 8000470:	1a8a      	subs	r2, r1, r2
 8000472:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000476:	fa1f fe8c 	uxth.w	lr, ip
 800047a:	2101      	movs	r1, #1
 800047c:	fbb2 f5f7 	udiv	r5, r2, r7
 8000480:	fb07 2015 	mls	r0, r7, r5, r2
 8000484:	0c22      	lsrs	r2, r4, #16
 8000486:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800048a:	fb0e f005 	mul.w	r0, lr, r5
 800048e:	4290      	cmp	r0, r2
 8000490:	d908      	bls.n	80004a4 <__udivmoddi4+0x124>
 8000492:	eb1c 0202 	adds.w	r2, ip, r2
 8000496:	f105 38ff 	add.w	r8, r5, #4294967295
 800049a:	d202      	bcs.n	80004a2 <__udivmoddi4+0x122>
 800049c:	4290      	cmp	r0, r2
 800049e:	f200 80cb 	bhi.w	8000638 <__udivmoddi4+0x2b8>
 80004a2:	4645      	mov	r5, r8
 80004a4:	1a12      	subs	r2, r2, r0
 80004a6:	b2a4      	uxth	r4, r4
 80004a8:	fbb2 f0f7 	udiv	r0, r2, r7
 80004ac:	fb07 2210 	mls	r2, r7, r0, r2
 80004b0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80004b4:	fb0e fe00 	mul.w	lr, lr, r0
 80004b8:	45a6      	cmp	lr, r4
 80004ba:	d908      	bls.n	80004ce <__udivmoddi4+0x14e>
 80004bc:	eb1c 0404 	adds.w	r4, ip, r4
 80004c0:	f100 32ff 	add.w	r2, r0, #4294967295
 80004c4:	d202      	bcs.n	80004cc <__udivmoddi4+0x14c>
 80004c6:	45a6      	cmp	lr, r4
 80004c8:	f200 80bb 	bhi.w	8000642 <__udivmoddi4+0x2c2>
 80004cc:	4610      	mov	r0, r2
 80004ce:	eba4 040e 	sub.w	r4, r4, lr
 80004d2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80004d6:	e79f      	b.n	8000418 <__udivmoddi4+0x98>
 80004d8:	f1c1 0720 	rsb	r7, r1, #32
 80004dc:	408b      	lsls	r3, r1
 80004de:	fa22 fc07 	lsr.w	ip, r2, r7
 80004e2:	ea4c 0c03 	orr.w	ip, ip, r3
 80004e6:	fa05 f401 	lsl.w	r4, r5, r1
 80004ea:	fa20 f307 	lsr.w	r3, r0, r7
 80004ee:	40fd      	lsrs	r5, r7
 80004f0:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004f4:	4323      	orrs	r3, r4
 80004f6:	fbb5 f8f9 	udiv	r8, r5, r9
 80004fa:	fa1f fe8c 	uxth.w	lr, ip
 80004fe:	fb09 5518 	mls	r5, r9, r8, r5
 8000502:	0c1c      	lsrs	r4, r3, #16
 8000504:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000508:	fb08 f50e 	mul.w	r5, r8, lr
 800050c:	42a5      	cmp	r5, r4
 800050e:	fa02 f201 	lsl.w	r2, r2, r1
 8000512:	fa00 f001 	lsl.w	r0, r0, r1
 8000516:	d90b      	bls.n	8000530 <__udivmoddi4+0x1b0>
 8000518:	eb1c 0404 	adds.w	r4, ip, r4
 800051c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000520:	f080 8088 	bcs.w	8000634 <__udivmoddi4+0x2b4>
 8000524:	42a5      	cmp	r5, r4
 8000526:	f240 8085 	bls.w	8000634 <__udivmoddi4+0x2b4>
 800052a:	f1a8 0802 	sub.w	r8, r8, #2
 800052e:	4464      	add	r4, ip
 8000530:	1b64      	subs	r4, r4, r5
 8000532:	b29d      	uxth	r5, r3
 8000534:	fbb4 f3f9 	udiv	r3, r4, r9
 8000538:	fb09 4413 	mls	r4, r9, r3, r4
 800053c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000540:	fb03 fe0e 	mul.w	lr, r3, lr
 8000544:	45a6      	cmp	lr, r4
 8000546:	d908      	bls.n	800055a <__udivmoddi4+0x1da>
 8000548:	eb1c 0404 	adds.w	r4, ip, r4
 800054c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000550:	d26c      	bcs.n	800062c <__udivmoddi4+0x2ac>
 8000552:	45a6      	cmp	lr, r4
 8000554:	d96a      	bls.n	800062c <__udivmoddi4+0x2ac>
 8000556:	3b02      	subs	r3, #2
 8000558:	4464      	add	r4, ip
 800055a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800055e:	fba3 9502 	umull	r9, r5, r3, r2
 8000562:	eba4 040e 	sub.w	r4, r4, lr
 8000566:	42ac      	cmp	r4, r5
 8000568:	46c8      	mov	r8, r9
 800056a:	46ae      	mov	lr, r5
 800056c:	d356      	bcc.n	800061c <__udivmoddi4+0x29c>
 800056e:	d053      	beq.n	8000618 <__udivmoddi4+0x298>
 8000570:	b156      	cbz	r6, 8000588 <__udivmoddi4+0x208>
 8000572:	ebb0 0208 	subs.w	r2, r0, r8
 8000576:	eb64 040e 	sbc.w	r4, r4, lr
 800057a:	fa04 f707 	lsl.w	r7, r4, r7
 800057e:	40ca      	lsrs	r2, r1
 8000580:	40cc      	lsrs	r4, r1
 8000582:	4317      	orrs	r7, r2
 8000584:	e9c6 7400 	strd	r7, r4, [r6]
 8000588:	4618      	mov	r0, r3
 800058a:	2100      	movs	r1, #0
 800058c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000590:	f1c3 0120 	rsb	r1, r3, #32
 8000594:	fa02 fc03 	lsl.w	ip, r2, r3
 8000598:	fa20 f201 	lsr.w	r2, r0, r1
 800059c:	fa25 f101 	lsr.w	r1, r5, r1
 80005a0:	409d      	lsls	r5, r3
 80005a2:	432a      	orrs	r2, r5
 80005a4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80005a8:	fa1f fe8c 	uxth.w	lr, ip
 80005ac:	fbb1 f0f7 	udiv	r0, r1, r7
 80005b0:	fb07 1510 	mls	r5, r7, r0, r1
 80005b4:	0c11      	lsrs	r1, r2, #16
 80005b6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80005ba:	fb00 f50e 	mul.w	r5, r0, lr
 80005be:	428d      	cmp	r5, r1
 80005c0:	fa04 f403 	lsl.w	r4, r4, r3
 80005c4:	d908      	bls.n	80005d8 <__udivmoddi4+0x258>
 80005c6:	eb1c 0101 	adds.w	r1, ip, r1
 80005ca:	f100 38ff 	add.w	r8, r0, #4294967295
 80005ce:	d22f      	bcs.n	8000630 <__udivmoddi4+0x2b0>
 80005d0:	428d      	cmp	r5, r1
 80005d2:	d92d      	bls.n	8000630 <__udivmoddi4+0x2b0>
 80005d4:	3802      	subs	r0, #2
 80005d6:	4461      	add	r1, ip
 80005d8:	1b49      	subs	r1, r1, r5
 80005da:	b292      	uxth	r2, r2
 80005dc:	fbb1 f5f7 	udiv	r5, r1, r7
 80005e0:	fb07 1115 	mls	r1, r7, r5, r1
 80005e4:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80005e8:	fb05 f10e 	mul.w	r1, r5, lr
 80005ec:	4291      	cmp	r1, r2
 80005ee:	d908      	bls.n	8000602 <__udivmoddi4+0x282>
 80005f0:	eb1c 0202 	adds.w	r2, ip, r2
 80005f4:	f105 38ff 	add.w	r8, r5, #4294967295
 80005f8:	d216      	bcs.n	8000628 <__udivmoddi4+0x2a8>
 80005fa:	4291      	cmp	r1, r2
 80005fc:	d914      	bls.n	8000628 <__udivmoddi4+0x2a8>
 80005fe:	3d02      	subs	r5, #2
 8000600:	4462      	add	r2, ip
 8000602:	1a52      	subs	r2, r2, r1
 8000604:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000608:	e738      	b.n	800047c <__udivmoddi4+0xfc>
 800060a:	4631      	mov	r1, r6
 800060c:	4630      	mov	r0, r6
 800060e:	e708      	b.n	8000422 <__udivmoddi4+0xa2>
 8000610:	4639      	mov	r1, r7
 8000612:	e6e6      	b.n	80003e2 <__udivmoddi4+0x62>
 8000614:	4610      	mov	r0, r2
 8000616:	e6fb      	b.n	8000410 <__udivmoddi4+0x90>
 8000618:	4548      	cmp	r0, r9
 800061a:	d2a9      	bcs.n	8000570 <__udivmoddi4+0x1f0>
 800061c:	ebb9 0802 	subs.w	r8, r9, r2
 8000620:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000624:	3b01      	subs	r3, #1
 8000626:	e7a3      	b.n	8000570 <__udivmoddi4+0x1f0>
 8000628:	4645      	mov	r5, r8
 800062a:	e7ea      	b.n	8000602 <__udivmoddi4+0x282>
 800062c:	462b      	mov	r3, r5
 800062e:	e794      	b.n	800055a <__udivmoddi4+0x1da>
 8000630:	4640      	mov	r0, r8
 8000632:	e7d1      	b.n	80005d8 <__udivmoddi4+0x258>
 8000634:	46d0      	mov	r8, sl
 8000636:	e77b      	b.n	8000530 <__udivmoddi4+0x1b0>
 8000638:	3d02      	subs	r5, #2
 800063a:	4462      	add	r2, ip
 800063c:	e732      	b.n	80004a4 <__udivmoddi4+0x124>
 800063e:	4608      	mov	r0, r1
 8000640:	e70a      	b.n	8000458 <__udivmoddi4+0xd8>
 8000642:	4464      	add	r4, ip
 8000644:	3802      	subs	r0, #2
 8000646:	e742      	b.n	80004ce <__udivmoddi4+0x14e>

08000648 <__aeabi_idiv0>:
 8000648:	4770      	bx	lr
 800064a:	bf00      	nop

0800064c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800064c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000684 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000650:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000652:	e003      	b.n	800065c <LoopCopyDataInit>

08000654 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000654:	4b0c      	ldr	r3, [pc, #48]	; (8000688 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000656:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000658:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800065a:	3104      	adds	r1, #4

0800065c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800065c:	480b      	ldr	r0, [pc, #44]	; (800068c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800065e:	4b0c      	ldr	r3, [pc, #48]	; (8000690 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000660:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000662:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000664:	d3f6      	bcc.n	8000654 <CopyDataInit>
  ldr  r2, =_sbss
 8000666:	4a0b      	ldr	r2, [pc, #44]	; (8000694 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000668:	e002      	b.n	8000670 <LoopFillZerobss>

0800066a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800066a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800066c:	f842 3b04 	str.w	r3, [r2], #4

08000670 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000670:	4b09      	ldr	r3, [pc, #36]	; (8000698 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000672:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000674:	d3f9      	bcc.n	800066a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000676:	f008 fccb 	bl	8009010 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800067a:	f029 fc6f 	bl	8029f5c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800067e:	f000 fed5 	bl	800142c <main>
  bx  lr    
 8000682:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8000684:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8000688:	0815e538 	.word	0x0815e538
  ldr  r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000690:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 8000694:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 8000698:	200139ec 	.word	0x200139ec

0800069c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800069c:	e7fe      	b.n	800069c <ADC_IRQHandler>
	...

080006a0 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 80006a4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 80006a6:	f000 fba9 	bl	8000dfc <touchgfx_components_init>
  touchgfx_init();
}
 80006aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 80006ae:	f000 bb33 	b.w	8000d18 <touchgfx_init>
 80006b2:	bf00      	nop

080006b4 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80006b4:	f000 bba4 	b.w	8000e00 <touchgfx_taskEntry>

080006b8 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006b8:	4770      	bx	lr

080006ba <_ZN20STM32TouchControllerD0Ev>:
 80006ba:	b510      	push	{r4, lr}
 80006bc:	2104      	movs	r1, #4
 80006be:	4604      	mov	r4, r0
 80006c0:	f028 fb35 	bl	8028d2e <_ZdlPvj>
 80006c4:	4620      	mov	r0, r4
 80006c6:	bd10      	pop	{r4, pc}

080006c8 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 80006c8:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 80006ca:	4b0c      	ldr	r3, [pc, #48]	; (80006fc <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006cc:	4c0c      	ldr	r4, [pc, #48]	; (8000700 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 80006ce:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 80006d0:	4b0c      	ldr	r3, [pc, #48]	; (8000704 <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d2:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 80006d4:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 80006d6:	6863      	ldr	r3, [r4, #4]
 80006d8:	4798      	blx	r3
 80006da:	f640 0311 	movw	r3, #2065	; 0x811
 80006de:	4298      	cmp	r0, r3
 80006e0:	d10a      	bne.n	80006f8 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80006e2:	4d09      	ldr	r5, [pc, #36]	; (8000708 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e4:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80006e6:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80006e8:	2082      	movs	r0, #130	; 0x82
 80006ea:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80006ec:	682b      	ldr	r3, [r5, #0]
 80006ee:	2082      	movs	r0, #130	; 0x82
 80006f0:	68db      	ldr	r3, [r3, #12]
 80006f2:	4798      	blx	r3
 80006f4:	2000      	movs	r0, #0
    }

    return ret;
}
 80006f6:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80006f8:	2001      	movs	r0, #1
 80006fa:	e7fc      	b.n	80006f6 <_Z11BSP_TS_Inittt+0x2e>
 80006fc:	20000184 	.word	0x20000184
 8000700:	20000050 	.word	0x20000050
 8000704:	20000186 	.word	0x20000186
 8000708:	20000188 	.word	0x20000188

0800070c <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 800070c:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000710:	20f0      	movs	r0, #240	; 0xf0
 8000712:	f7ff bfd9 	b.w	80006c8 <_Z11BSP_TS_Inittt>
	...

08000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000718:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 800071a:	4d33      	ldr	r5, [pc, #204]	; (80007e8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd0>)
 800071c:	682b      	ldr	r3, [r5, #0]
{
 800071e:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000720:	691b      	ldr	r3, [r3, #16]
 8000722:	2082      	movs	r0, #130	; 0x82
 8000724:	4798      	blx	r3
 8000726:	b280      	uxth	r0, r0
 8000728:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 800072a:	2800      	cmp	r0, #0
 800072c:	d04a      	beq.n	80007c4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xac>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 800072e:	682b      	ldr	r3, [r5, #0]
 8000730:	f10d 0206 	add.w	r2, sp, #6
 8000734:	695b      	ldr	r3, [r3, #20]
 8000736:	a901      	add	r1, sp, #4
 8000738:	2082      	movs	r0, #130	; 0x82
 800073a:	4798      	blx	r3

        //Ensures the coordinates is within the screen
        if (y > 3700)
 800073c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000740:	f640 6274 	movw	r2, #3700	; 0xe74
 8000744:	4293      	cmp	r3, r2
 8000746:	d93f      	bls.n	80007c8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb0>
        {
            y = 3700;
 8000748:	f8ad 2006 	strh.w	r2, [sp, #6]

        /* Y value first correction */
        y -= 180;

        /* Y value second correction */
        y = 3520 - y;
 800074c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000750:	1ad2      	subs	r2, r2, r3
 8000752:	b292      	uxth	r2, r2

        /* Y value third correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 8000754:	2a0a      	cmp	r2, #10
 8000756:	d93d      	bls.n	80007d4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>
        yr = y / 11;
 8000758:	230b      	movs	r3, #11
 800075a:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 800075e:	4b23      	ldr	r3, [pc, #140]	; (80007ec <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd4>)
 8000760:	881b      	ldrh	r3, [r3, #0]
 8000762:	429a      	cmp	r2, r3
 8000764:	d901      	bls.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
        {
            yr = TsYBoundary - 1;
 8000766:	3b01      	subs	r3, #1
 8000768:	b29a      	uxth	r2, r3
        {
        }
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 800076a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800076e:	f640 31b8 	movw	r1, #3000	; 0xbb8
 8000772:	428b      	cmp	r3, r1
 8000774:	d830      	bhi.n	80007d8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>
        {
            x = 3870 - x;
 8000776:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 800077a:	330e      	adds	r3, #14
 800077c:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 800077e:	210f      	movs	r1, #15
 8000780:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 8000784:	491a      	ldr	r1, [pc, #104]	; (80007f0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xd8>)
 8000786:	8809      	ldrh	r1, [r1, #0]
 8000788:	428b      	cmp	r3, r1
 800078a:	d901      	bls.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
        {
            xr = TsXBoundary - 1;
 800078c:	3901      	subs	r1, #1
 800078e:	b28b      	uxth	r3, r1
        else
        {
        }

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000790:	4e18      	ldr	r6, [pc, #96]	; (80007f4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xdc>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000792:	4d19      	ldr	r5, [pc, #100]	; (80007f8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xe0>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000794:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8000796:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8000798:	4283      	cmp	r3, r0
 800079a:	b281      	uxth	r1, r0
 800079c:	bf8c      	ite	hi
 800079e:	1a59      	subhi	r1, r3, r1
 80007a0:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007a2:	b2b8      	uxth	r0, r7
 80007a4:	42ba      	cmp	r2, r7
 80007a6:	bf8c      	ite	hi
 80007a8:	1a10      	subhi	r0, r2, r0
 80007aa:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80007ac:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80007ae:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80007b0:	4401      	add	r1, r0
 80007b2:	2905      	cmp	r1, #5
        {
            _x = x;
 80007b4:	bfc8      	it	gt
 80007b6:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80007b8:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80007ba:	bfc8      	it	gt
 80007bc:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80007be:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80007c0:	682b      	ldr	r3, [r5, #0]
 80007c2:	80a3      	strh	r3, [r4, #4]
    }
}
 80007c4:	b003      	add	sp, #12
 80007c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        else if (y < 180)
 80007c8:	2bb3      	cmp	r3, #179	; 0xb3
            y = 180;
 80007ca:	bf9c      	itt	ls
 80007cc:	23b4      	movls	r3, #180	; 0xb4
 80007ce:	f8ad 3006 	strhls.w	r3, [sp, #6]
 80007d2:	e7bb      	b.n	800074c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x34>
            yr = 0;
 80007d4:	2200      	movs	r2, #0
 80007d6:	e7c8      	b.n	800076a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x52>
            x = 3800 - x;
 80007d8:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80007dc:	3308      	adds	r3, #8
 80007de:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80007e0:	2b0e      	cmp	r3, #14
 80007e2:	d8cc      	bhi.n	800077e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x66>
            xr = 0;
 80007e4:	2300      	movs	r3, #0
 80007e6:	e7d3      	b.n	8000790 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x78>
 80007e8:	20000188 	.word	0x20000188
 80007ec:	20000186 	.word	0x20000186
 80007f0:	20000184 	.word	0x20000184
 80007f4:	2000018c 	.word	0x2000018c
 80007f8:	20000190 	.word	0x20000190

080007fc <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80007fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80007fe:	4668      	mov	r0, sp
{
 8000800:	460d      	mov	r5, r1
 8000802:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000804:	f7ff ff88 	bl	8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000808:	f8bd 0000 	ldrh.w	r0, [sp]
 800080c:	b148      	cbz	r0, 8000822 <_ZN20STM32TouchController11sampleTouchERlS0_+0x26>
        x = state.X;
 800080e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000812:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000814:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000818:	6023      	str	r3, [r4, #0]
        sleep_timeout_value = 60;
 800081a:	4b03      	ldr	r3, [pc, #12]	; (8000828 <_ZN20STM32TouchController11sampleTouchERlS0_+0x2c>)
 800081c:	223c      	movs	r2, #60	; 0x3c
 800081e:	601a      	str	r2, [r3, #0]
        return true;
 8000820:	2001      	movs	r0, #1
}
 8000822:	b003      	add	sp, #12
 8000824:	bd30      	pop	{r4, r5, pc}
 8000826:	bf00      	nop
 8000828:	20000014 	.word	0x20000014

0800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 800082c:	b110      	cbz	r0, 8000834 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 800082e:	2802      	cmp	r0, #2
 8000830:	d009      	beq.n	8000846 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 8000832:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000834:	4b07      	ldr	r3, [pc, #28]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000836:	681a      	ldr	r2, [r3, #0]
 8000838:	fab2 f282 	clz	r2, r2
 800083c:	0952      	lsrs	r2, r2, #5
 800083e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000840:	4805      	ldr	r0, [pc, #20]	; (8000858 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000842:	f008 bdfd 	b.w	8009440 <HAL_GPIO_WritePin>
 8000846:	4b03      	ldr	r3, [pc, #12]	; (8000854 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x28>)
 8000848:	689a      	ldr	r2, [r3, #8]
 800084a:	fab2 f282 	clz	r2, r2
 800084e:	0952      	lsrs	r2, r2, #5
 8000850:	2110      	movs	r1, #16
 8000852:	e7f5      	b.n	8000840 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x14>
 8000854:	20000194 	.word	0x20000194
 8000858:	40021000 	.word	0x40021000

0800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800085c:	b110      	cbz	r0, 8000864 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800085e:	2802      	cmp	r0, #2
 8000860:	d009      	beq.n	8000876 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000862:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000864:	4b07      	ldr	r3, [pc, #28]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000866:	681a      	ldr	r2, [r3, #0]
 8000868:	3a00      	subs	r2, #0
 800086a:	bf18      	it	ne
 800086c:	2201      	movne	r2, #1
 800086e:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000870:	4805      	ldr	r0, [pc, #20]	; (8000888 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000872:	f008 bde5 	b.w	8009440 <HAL_GPIO_WritePin>
 8000876:	4b03      	ldr	r3, [pc, #12]	; (8000884 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x28>)
 8000878:	689a      	ldr	r2, [r3, #8]
 800087a:	3a00      	subs	r2, #0
 800087c:	bf18      	it	ne
 800087e:	2201      	movne	r2, #1
 8000880:	2110      	movs	r1, #16
 8000882:	e7f5      	b.n	8000870 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x14>
 8000884:	20000194 	.word	0x20000194
 8000888:	40021000 	.word	0x40021000

0800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800088c:	b110      	cbz	r0, 8000894 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 800088e:	2802      	cmp	r0, #2
 8000890:	d004      	beq.n	800089c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 8000892:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000894:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000896:	4802      	ldr	r0, [pc, #8]	; (80008a0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x14>)
 8000898:	f008 bdd6 	b.w	8009448 <HAL_GPIO_TogglePin>
 800089c:	2110      	movs	r1, #16
 800089e:	e7fa      	b.n	8000896 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xa>
 80008a0:	40021000 	.word	0x40021000

080008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80008a4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80008a6:	b130      	cbz	r0, 80008b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80008a8:	2802      	cmp	r0, #2
 80008aa:	d009      	beq.n	80008c0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80008ac:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80008ae:	1e43      	subs	r3, r0, #1
 80008b0:	4258      	negs	r0, r3
 80008b2:	4158      	adcs	r0, r3
 80008b4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80008b6:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008b8:	4802      	ldr	r0, [pc, #8]	; (80008c4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x20>)
 80008ba:	f008 fdbb 	bl	8009434 <HAL_GPIO_ReadPin>
        break;
 80008be:	e7f6      	b.n	80008ae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80008c0:	2110      	movs	r1, #16
 80008c2:	e7f9      	b.n	80008b8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x14>
 80008c4:	40021000 	.word	0x40021000

080008c8 <_ZN8touchgfx4GPIO4initEv>:
{
 80008c8:	b570      	push	{r4, r5, r6, lr}
 80008ca:	4d08      	ldr	r5, [pc, #32]	; (80008ec <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80008cc:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80008ce:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80008d0:	b2e0      	uxtb	r0, r4
 80008d2:	f7ff ffe7 	bl	80008a4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80008d6:	b118      	cbz	r0, 80008e0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80008d8:	682b      	ldr	r3, [r5, #0]
 80008da:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80008dc:	bf18      	it	ne
 80008de:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80008e0:	3401      	adds	r4, #1
 80008e2:	2c05      	cmp	r4, #5
 80008e4:	f105 0504 	add.w	r5, r5, #4
 80008e8:	d1f2      	bne.n	80008d0 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80008ea:	bd70      	pop	{r4, r5, r6, pc}
 80008ec:	20000194 	.word	0x20000194

080008f0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80008f0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80008f2:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 80008f6:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 80008fa:	4770      	bx	lr

080008fc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80008fc:	2000      	movs	r0, #0
 80008fe:	4770      	bx	lr

08000900 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000900:	4b03      	ldr	r3, [pc, #12]	; (8000910 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000902:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000904:	3900      	subs	r1, #0
 8000906:	bf18      	it	ne
 8000908:	2101      	movne	r1, #1
 800090a:	7019      	strb	r1, [r3, #0]
    }
 800090c:	4770      	bx	lr
 800090e:	bf00      	nop
 8000910:	20012db3 	.word	0x20012db3

08000914 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000914:	2000      	movs	r0, #0
 8000916:	4770      	bx	lr

08000918 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000918:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800091a:	b10b      	cbz	r3, 8000920 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 800091c:	4608      	mov	r0, r1
 800091e:	4718      	bx	r3
        }
    }
 8000920:	4770      	bx	lr

08000922 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000922:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000926:	4770      	bx	lr

08000928 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000928:	6840      	ldr	r0, [r0, #4]
 800092a:	6803      	ldr	r3, [r0, #0]
 800092c:	699b      	ldr	r3, [r3, #24]
 800092e:	4718      	bx	r3

08000930 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000930:	4770      	bx	lr

08000932 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000932:	4770      	bx	lr

08000934 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000934:	4770      	bx	lr
	...

08000938 <_ZN11TouchGFXHAL10initializeEv>:
LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");
}

void TouchGFXHAL::initialize()
{
 8000938:	b510      	push	{r4, lr}
 800093a:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800093c:	f000 fb4c 	bl	8000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // Add animation storage
    setAnimationStorage((void*)animationStorage);
 8000940:	6823      	ldr	r3, [r4, #0]
 8000942:	4903      	ldr	r1, [pc, #12]	; (8000950 <_ZN11TouchGFXHAL10initializeEv+0x18>)
 8000944:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000948:	4620      	mov	r0, r4
}
 800094a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    setAnimationStorage((void*)animationStorage);
 800094e:	4718      	bx	r3
 8000950:	d0000000 	.word	0xd0000000

08000954 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8000954:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000956:	6803      	ldr	r3, [r0, #0]
{
 8000958:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800095a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800095e:	4798      	blx	r3
    enableInterrupts();
 8000960:	6823      	ldr	r3, [r4, #0]
 8000962:	4620      	mov	r0, r4
 8000964:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000966:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8000968:	f000 f8ec 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 800096c:	6823      	ldr	r3, [r4, #0]
 800096e:	4620      	mov	r0, r4
 8000970:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000972:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8000974:	2029      	movs	r0, #41	; 0x29
 8000976:	f001 f825 	bl	80019c4 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800097a:	f000 f8e3 	bl	8000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800097e:	6823      	ldr	r3, [r4, #0]
 8000980:	4620      	mov	r0, r4
 8000982:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000984:	4798      	blx	r3
    for (;;)
 8000986:	e7f8      	b.n	800097a <_ZN11TouchGFXHAL9taskEntryEv+0x26>

08000988 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000988:	b510      	push	{r4, lr}
 800098a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800098c:	f00f feea 	bl	8010764 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000990:	6823      	ldr	r3, [r4, #0]
 8000992:	4620      	mov	r0, r4
 8000994:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000998:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800099c:	4718      	bx	r3

0800099e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800099e:	f000 bb0d 	b.w	8000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080009a2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80009a2:	f000 bb11 	b.w	8000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080009a6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80009a6:	f000 bb35 	b.w	8001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080009aa <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80009aa:	f000 badd 	b.w	8000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080009ae <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80009ae:	f000 bae3 	b.w	8000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080009b2 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80009b2:	f000 bb3b 	b.w	800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080009b6 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80009b6:	f000 bae7 	b.w	8000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080009ba <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80009ba:	f00f b93f 	b.w	800fc3c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080009be <_ZN11TouchGFXHALD0Ev>:
 80009be:	b510      	push	{r4, lr}
 80009c0:	217c      	movs	r1, #124	; 0x7c
 80009c2:	4604      	mov	r4, r0
 80009c4:	f028 f9b3 	bl	8028d2e <_ZdlPvj>
 80009c8:	4620      	mov	r0, r4
 80009ca:	bd10      	pop	{r4, pc}

080009cc <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80009cc:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 80009d0:	b11b      	cbz	r3, 80009da <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80009d2:	6840      	ldr	r0, [r0, #4]
 80009d4:	6803      	ldr	r3, [r0, #0]
 80009d6:	681b      	ldr	r3, [r3, #0]
 80009d8:	4718      	bx	r3
    }
 80009da:	4618      	mov	r0, r3
 80009dc:	4770      	bx	lr
	...

080009e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80009e0:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80009e2:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80009e6:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 80009ea:	4b0c      	ldr	r3, [pc, #48]	; (8000a1c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80009ec:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80009ee:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80009f0:	d009      	beq.n	8000a06 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80009f2:	b93a      	cbnz	r2, 8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f4:	4a0a      	ldr	r2, [pc, #40]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009f6:	490b      	ldr	r1, [pc, #44]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009f8:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 80009fa:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 80009fc:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 80009fe:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000a00:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000a02:	701a      	strb	r2, [r3, #0]
    }
 8000a04:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000a06:	2a00      	cmp	r2, #0
 8000a08:	d0fc      	beq.n	8000a04 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0a:	4a05      	ldr	r2, [pc, #20]	; (8000a20 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a0c:	4905      	ldr	r1, [pc, #20]	; (8000a24 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a0e:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000a10:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000a12:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000a14:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000a16:	2200      	movs	r2, #0
 8000a18:	e7f3      	b.n	8000a02 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000a1a:	bf00      	nop
 8000a1c:	20012dac 	.word	0x20012dac
 8000a20:	20012da8 	.word	0x20012da8
 8000a24:	20012daa 	.word	0x20012daa

08000a28 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000a28:	b570      	push	{r4, r5, r6, lr}
 8000a2a:	460d      	mov	r5, r1
 8000a2c:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000a2e:	b935      	cbnz	r5, 8000a3e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8000a30:	4b09      	ldr	r3, [pc, #36]	; (8000a58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8000a32:	4a0a      	ldr	r2, [pc, #40]	; (8000a5c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000a34:	480a      	ldr	r0, [pc, #40]	; (8000a60 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000a36:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000a3a:	f028 ff8b 	bl	8029954 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000a3e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000a42:	4b08      	ldr	r3, [pc, #32]	; (8000a64 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000a44:	3a00      	subs	r2, #0
 8000a46:	bf18      	it	ne
 8000a48:	2201      	movne	r2, #1
 8000a4a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000a4c:	6803      	ldr	r3, [r0, #0]
    }
 8000a4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8000a52:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000a56:	4718      	bx	r3
 8000a58:	0802aac4 	.word	0x0802aac4
 8000a5c:	0802aafc 	.word	0x0802aafc
 8000a60:	0802ab4a 	.word	0x0802ab4a
 8000a64:	20012db2 	.word	0x20012db2

08000a68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000a68:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000a6a:	4b09      	ldr	r3, [pc, #36]	; (8000a90 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000a6c:	881b      	ldrh	r3, [r3, #0]
 8000a6e:	428b      	cmp	r3, r1
 8000a70:	d803      	bhi.n	8000a7a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000a72:	4b08      	ldr	r3, [pc, #32]	; (8000a94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000a74:	881b      	ldrh	r3, [r3, #0]
 8000a76:	4293      	cmp	r3, r2
 8000a78:	d905      	bls.n	8000a86 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000a7a:	4b07      	ldr	r3, [pc, #28]	; (8000a98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000a7c:	4a07      	ldr	r2, [pc, #28]	; (8000a9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000a7e:	4808      	ldr	r0, [pc, #32]	; (8000aa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000a80:	219e      	movs	r1, #158	; 0x9e
 8000a82:	f028 ff67 	bl	8029954 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000a86:	4b07      	ldr	r3, [pc, #28]	; (8000aa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000a88:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000a8a:	4b07      	ldr	r3, [pc, #28]	; (8000aa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000a8c:	801a      	strh	r2, [r3, #0]
    }
 8000a8e:	bd08      	pop	{r3, pc}
 8000a90:	20012da8 	.word	0x20012da8
 8000a94:	20012daa 	.word	0x20012daa
 8000a98:	0802ab8f 	.word	0x0802ab8f
 8000a9c:	0802abf2 	.word	0x0802abf2
 8000aa0:	0802ab4a 	.word	0x0802ab4a
 8000aa4:	20012dae 	.word	0x20012dae
 8000aa8:	20012db0 	.word	0x20012db0

08000aac <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000aac:	2101      	movs	r1, #1
{
 8000aae:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	4608      	mov	r0, r1
 8000ab4:	f00b fecc 	bl	800c850 <osSemaphoreNew>
 8000ab8:	4b0a      	ldr	r3, [pc, #40]	; (8000ae4 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000aba:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000abc:	b928      	cbnz	r0, 8000aca <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000abe:	4b0a      	ldr	r3, [pc, #40]	; (8000ae8 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000ac0:	4a0a      	ldr	r2, [pc, #40]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ac2:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ac4:	480a      	ldr	r0, [pc, #40]	; (8000af0 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000ac6:	f028 ff45 	bl	8029954 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000aca:	2200      	movs	r2, #0
 8000acc:	2104      	movs	r1, #4
 8000ace:	2001      	movs	r0, #1
 8000ad0:	f00b ff72 	bl	800c9b8 <osMessageQueueNew>
 8000ad4:	4b07      	ldr	r3, [pc, #28]	; (8000af4 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000ad6:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000ad8:	b918      	cbnz	r0, 8000ae2 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000ada:	4b07      	ldr	r3, [pc, #28]	; (8000af8 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000adc:	4a03      	ldr	r2, [pc, #12]	; (8000aec <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000ade:	212c      	movs	r1, #44	; 0x2c
 8000ae0:	e7f0      	b.n	8000ac4 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000ae2:	bd08      	pop	{r3, pc}
 8000ae4:	200001a8 	.word	0x200001a8
 8000ae8:	0802ad10 	.word	0x0802ad10
 8000aec:	0802ad59 	.word	0x0802ad59
 8000af0:	0802ad88 	.word	0x0802ad88
 8000af4:	200001a4 	.word	0x200001a4
 8000af8:	0802ae02 	.word	0x0802ae02

08000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000afc:	4b02      	ldr	r3, [pc, #8]	; (8000b08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	6818      	ldr	r0, [r3, #0]
 8000b04:	f00b bef8 	b.w	800c8f8 <osSemaphoreAcquire>
 8000b08:	200001a8 	.word	0x200001a8

08000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000b0c:	4b01      	ldr	r3, [pc, #4]	; (8000b14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000b0e:	6818      	ldr	r0, [r3, #0]
 8000b10:	f00b bf26 	b.w	800c960 <osSemaphoreRelease>
 8000b14:	200001a8 	.word	0x200001a8

08000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000b18:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000b1a:	2100      	movs	r1, #0
 8000b1c:	6818      	ldr	r0, [r3, #0]
 8000b1e:	f00b beeb 	b.w	800c8f8 <osSemaphoreAcquire>
 8000b22:	bf00      	nop
 8000b24:	200001a8 	.word	0x200001a8

08000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000b28:	f7ff bff0 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000b2c:	4803      	ldr	r0, [pc, #12]	; (8000b3c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000b2e:	4904      	ldr	r1, [pc, #16]	; (8000b40 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000b30:	6800      	ldr	r0, [r0, #0]
 8000b32:	2300      	movs	r3, #0
 8000b34:	461a      	mov	r2, r3
 8000b36:	f00b bf79 	b.w	800ca2c <osMessageQueuePut>
 8000b3a:	bf00      	nop
 8000b3c:	200001a4 	.word	0x200001a4
 8000b40:	20000004 	.word	0x20000004

08000b44 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000b44:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000b46:	4c08      	ldr	r4, [pc, #32]	; (8000b68 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000b48:	2300      	movs	r3, #0
 8000b4a:	461a      	mov	r2, r3
 8000b4c:	a901      	add	r1, sp, #4
 8000b4e:	6820      	ldr	r0, [r4, #0]
 8000b50:	f00b ffa2 	bl	800ca98 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000b54:	6820      	ldr	r0, [r4, #0]
 8000b56:	f04f 33ff 	mov.w	r3, #4294967295
 8000b5a:	2200      	movs	r2, #0
 8000b5c:	a901      	add	r1, sp, #4
 8000b5e:	f00b ff9b 	bl	800ca98 <osMessageQueueGet>
}
 8000b62:	b002      	add	sp, #8
 8000b64:	bd10      	pop	{r4, pc}
 8000b66:	bf00      	nop
 8000b68:	200001a4 	.word	0x200001a4

08000b6c <_ZN8touchgfx13DMA_Interface10initializeEv>:
    }

    /** Perform initialization. Does nothing in this base class. */
    virtual void initialize()
    {
    }
 8000b6c:	4770      	bx	lr

08000b6e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
 8000b6e:	2000      	movs	r0, #0
 8000b70:	4770      	bx	lr

08000b72 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Does nothing.
     */
    virtual void signalDMAInterrupt()
    {
    }
 8000b72:	4770      	bx	lr

08000b74 <_ZN8STM32DMA5flushEv>:
     * @brief Block until all DMA transfers are complete. Since this particular DMA does not do
     * anything, return immediately.
     */
    virtual void flush()
    {
    }
 8000b74:	4770      	bx	lr

08000b76 <_ZN8STM32DMA11getBlitCapsEv>:
}

touchgfx::BlitOperations STM32DMA::getBlitCaps()
{
    return static_cast<touchgfx::BlitOperations>(0);
}
 8000b76:	2000      	movs	r0, #0
 8000b78:	4770      	bx	lr

08000b7a <_ZN8STM32DMAD1Ev>:
class STM32DMA : public touchgfx::DMA_Interface
 8000b7a:	4770      	bx	lr

08000b7c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32DMA::setupDataCopy(const touchgfx::BlitOp& blitOp)
{
 8000b7c:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b7e:	4a03      	ldr	r2, [pc, #12]	; (8000b8c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x10>)
 8000b80:	4b03      	ldr	r3, [pc, #12]	; (8000b90 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14>)
 8000b82:	4804      	ldr	r0, [pc, #16]	; (8000b94 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 8000b84:	2122      	movs	r1, #34	; 0x22
 8000b86:	f028 fee5 	bl	8029954 <__assert_func>
 8000b8a:	bf00      	nop
 8000b8c:	0802ae67 	.word	0x0802ae67
 8000b90:	0802ae44 	.word	0x0802ae44
 8000b94:	0802aea5 	.word	0x0802aea5

08000b98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
}

void STM32DMA::setupDataFill(const touchgfx::BlitOp& blitOp)
{
 8000b98:	b508      	push	{r3, lr}
    assert(0 && "DMA operation not supported");
 8000b9a:	4a03      	ldr	r2, [pc, #12]	; (8000ba8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10>)
 8000b9c:	4b03      	ldr	r3, [pc, #12]	; (8000bac <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x14>)
 8000b9e:	4804      	ldr	r0, [pc, #16]	; (8000bb0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 8000ba0:	2127      	movs	r1, #39	; 0x27
 8000ba2:	f028 fed7 	bl	8029954 <__assert_func>
 8000ba6:	bf00      	nop
 8000ba8:	0802af1d 	.word	0x0802af1d
 8000bac:	0802ae44 	.word	0x0802ae44
 8000bb0:	0802aea5 	.word	0x0802aea5

08000bb4 <_ZN8STM32DMAD0Ev>:
 8000bb4:	b510      	push	{r4, lr}
 8000bb6:	2144      	movs	r1, #68	; 0x44
 8000bb8:	4604      	mov	r4, r0
 8000bba:	f028 f8b8 	bl	8028d2e <_ZdlPvj>
 8000bbe:	4620      	mov	r0, r4
 8000bc0:	bd10      	pop	{r4, pc}
	...

08000bc4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000bc4:	b538      	push	{r3, r4, r5, lr}
 8000bc6:	4604      	mov	r4, r0
    : DMA_Interface(q), q(&b, 1)
 8000bc8:	4621      	mov	r1, r4
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000bca:	2500      	movs	r5, #0
 8000bcc:	4b06      	ldr	r3, [pc, #24]	; (8000be8 <_ZN8STM32DMAC1Ev+0x24>)
 8000bce:	7225      	strb	r5, [r4, #8]
 8000bd0:	300c      	adds	r0, #12
 8000bd2:	6060      	str	r0, [r4, #4]
 8000bd4:	7265      	strb	r5, [r4, #9]
 8000bd6:	2201      	movs	r2, #1
 8000bd8:	f841 3b20 	str.w	r3, [r1], #32
 8000bdc:	f00f ff1a 	bl	8010a14 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000be0:	62e5      	str	r5, [r4, #44]	; 0x2c
}
 8000be2:	4620      	mov	r0, r4
 8000be4:	bd38      	pop	{r3, r4, r5, pc}
 8000be6:	bf00      	nop
 8000be8:	0802af64 	.word	0x0802af64

08000bec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000bec:	2001      	movs	r0, #1
 8000bee:	4770      	bx	lr

08000bf0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000bf0:	2038      	movs	r0, #56	; 0x38
 8000bf2:	4770      	bx	lr

08000bf4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000bf4:	2338      	movs	r3, #56	; 0x38
 8000bf6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000bfa:	3008      	adds	r0, #8
 8000bfc:	4770      	bx	lr

08000bfe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000bfe:	2338      	movs	r3, #56	; 0x38
 8000c00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c04:	3008      	adds	r0, #8
 8000c06:	4770      	bx	lr

08000c08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c08:	2001      	movs	r0, #1
 8000c0a:	4770      	bx	lr

08000c0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c0c:	f241 30f8 	movw	r0, #5112	; 0x13f8
 8000c10:	4770      	bx	lr

08000c12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c12:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c1a:	3008      	adds	r0, #8
 8000c1c:	4770      	bx	lr

08000c1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c1e:	f241 33f8 	movw	r3, #5112	; 0x13f8
 8000c22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000c26:	3008      	adds	r0, #8
 8000c28:	4770      	bx	lr

08000c2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000c2a:	2001      	movs	r0, #1
 8000c2c:	4770      	bx	lr

08000c2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000c2e:	2010      	movs	r0, #16
 8000c30:	4770      	bx	lr

08000c32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c36:	3008      	adds	r0, #8
 8000c38:	4770      	bx	lr

08000c3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000c3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000c3e:	3008      	adds	r0, #8
 8000c40:	4770      	bx	lr

08000c42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoMeasurement_Single_Display_1PScreenNoTransition();
 8000c42:	4608      	mov	r0, r1
 8000c44:	f002 be96 	b.w	8003974 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>

08000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000c48:	b510      	push	{r4, lr}
 8000c4a:	4b03      	ldr	r3, [pc, #12]	; (8000c58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000c4c:	6003      	str	r3, [r0, #0]
 8000c4e:	4604      	mov	r4, r0
 8000c50:	f00e fb7d 	bl	800f34e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c54:	4620      	mov	r0, r4
 8000c56:	bd10      	pop	{r4, pc}
 8000c58:	0802b01c 	.word	0x0802b01c

08000c5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000c5c:	b510      	push	{r4, lr}
 8000c5e:	4604      	mov	r4, r0
 8000c60:	f7ff fff2 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000c64:	4620      	mov	r0, r4
 8000c66:	2140      	movs	r1, #64	; 0x40
 8000c68:	f028 f861 	bl	8028d2e <_ZdlPvj>
 8000c6c:	4620      	mov	r0, r4
 8000c6e:	bd10      	pop	{r4, pc}

08000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c70:	b510      	push	{r4, lr}
 8000c72:	4b03      	ldr	r3, [pc, #12]	; (8000c80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000c74:	6003      	str	r3, [r0, #0]
 8000c76:	4604      	mov	r4, r0
 8000c78:	f00e fb69 	bl	800f34e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000c7c:	4620      	mov	r0, r4
 8000c7e:	bd10      	pop	{r4, pc}
 8000c80:	0802afe8 	.word	0x0802afe8

08000c84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000c84:	b510      	push	{r4, lr}
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fff2 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8000c92:	f028 f84c 	bl	8028d2e <_ZdlPvj>
 8000c96:	4620      	mov	r0, r4
 8000c98:	bd10      	pop	{r4, pc}
	...

08000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000c9c:	b510      	push	{r4, lr}
 8000c9e:	4b03      	ldr	r3, [pc, #12]	; (8000cac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000ca0:	6003      	str	r3, [r0, #0]
 8000ca2:	4604      	mov	r4, r0
 8000ca4:	f00e fb53 	bl	800f34e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000ca8:	4620      	mov	r0, r4
 8000caa:	bd10      	pop	{r4, pc}
 8000cac:	0802afb4 	.word	0x0802afb4

08000cb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000cb0:	b510      	push	{r4, lr}
 8000cb2:	4604      	mov	r4, r0
 8000cb4:	f7ff fff2 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cb8:	4620      	mov	r0, r4
 8000cba:	2118      	movs	r1, #24
 8000cbc:	f028 f837 	bl	8028d2e <_ZdlPvj>
 8000cc0:	4620      	mov	r0, r4
 8000cc2:	bd10      	pop	{r4, pc}

08000cc4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b09      	ldr	r3, [pc, #36]	; (8000cec <_ZN12FrontendHeapD1Ev+0x28>)
 8000cc8:	6003      	str	r3, [r0, #0]
 8000cca:	4604      	mov	r4, r0
 8000ccc:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8000cd0:	300c      	adds	r0, #12
 8000cd2:	f7ff ffb9 	bl	8000c48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000cd6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000cda:	f7ff ffc9 	bl	8000c70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI33Measurement_Single_Display_1PViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000cde:	f104 0014 	add.w	r0, r4, #20
 8000ce2:	f7ff ffdb 	bl	8000c9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21Shutting_OffPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000ce6:	4620      	mov	r0, r4
 8000ce8:	bd10      	pop	{r4, pc}
 8000cea:	bf00      	nop
 8000cec:	0802b050 	.word	0x0802b050

08000cf0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000cf0:	b508      	push	{r3, lr}
 8000cf2:	4802      	ldr	r0, [pc, #8]	; (8000cfc <__tcf_0+0xc>)
 8000cf4:	f7ff ffe6 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000cf8:	bd08      	pop	{r3, pc}
 8000cfa:	bf00      	nop
 8000cfc:	200001b0 	.word	0x200001b0

08000d00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000d00:	b510      	push	{r4, lr}
 8000d02:	4604      	mov	r4, r0
 8000d04:	f7ff ffde 	bl	8000cc4 <_ZN12FrontendHeapD1Ev>
 8000d08:	4620      	mov	r0, r4
 8000d0a:	f241 51d0 	movw	r1, #5584	; 0x15d0
 8000d0e:	f028 f80e 	bl	8028d2e <_ZdlPvj>
 8000d12:	4620      	mov	r0, r4
 8000d14:	bd10      	pop	{r4, pc}
	...

08000d18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000d18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000d1c:	f001 fbdc 	bl	80024d8 <_ZN14BitmapDatabase11getInstanceEv>
 8000d20:	4605      	mov	r5, r0
 8000d22:	f001 fbdd 	bl	80024e0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000d26:	2400      	movs	r4, #0
 8000d28:	4601      	mov	r1, r0
 8000d2a:	4623      	mov	r3, r4
 8000d2c:	4628      	mov	r0, r5
 8000d2e:	4622      	mov	r2, r4
 8000d30:	9400      	str	r4, [sp, #0]
 8000d32:	f017 fb83 	bl	801843c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000d36:	4b26      	ldr	r3, [pc, #152]	; (8000dd0 <touchgfx_init+0xb8>)
 8000d38:	4a26      	ldr	r2, [pc, #152]	; (8000dd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000d3a:	4d27      	ldr	r5, [pc, #156]	; (8000dd8 <touchgfx_init+0xc0>)
 8000d3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000d3e:	4620      	mov	r0, r4
 8000d40:	f007 f9ba 	bl	80080b8 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000d44:	4825      	ldr	r0, [pc, #148]	; (8000ddc <touchgfx_init+0xc4>)
 8000d46:	f017 fae1 	bl	801830c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000d4a:	682b      	ldr	r3, [r5, #0]
 8000d4c:	f3bf 8f5b 	dmb	ish
 8000d50:	07db      	lsls	r3, r3, #31
 8000d52:	d437      	bmi.n	8000dc4 <touchgfx_init+0xac>
 8000d54:	4628      	mov	r0, r5
 8000d56:	f027 ffec 	bl	8028d32 <__cxa_guard_acquire>
 8000d5a:	b398      	cbz	r0, 8000dc4 <touchgfx_init+0xac>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8000d5c:	4c20      	ldr	r4, [pc, #128]	; (8000de0 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000d5e:	4b21      	ldr	r3, [pc, #132]	; (8000de4 <touchgfx_init+0xcc>)
 8000d60:	6023      	str	r3, [r4, #0]
 8000d62:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8000d66:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
          frontendApplication(app)
 8000d6a:	f500 56a3 	add.w	r6, r0, #5216	; 0x1460
          transitionStorage(tra),
 8000d6e:	f508 57a0 	add.w	r7, r8, #5120	; 0x1400
        : presenterStorage(pres),
 8000d72:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8000d74:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8000d78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8000d7a:	6126      	str	r6, [r4, #16]
 8000d7c:	f00e fae8 	bl	800f350 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d80:	4b19      	ldr	r3, [pc, #100]	; (8000de8 <touchgfx_init+0xd0>)
 8000d82:	6163      	str	r3, [r4, #20]
 8000d84:	4640      	mov	r0, r8
 8000d86:	f00e fae3 	bl	800f350 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d8a:	4b18      	ldr	r3, [pc, #96]	; (8000dec <touchgfx_init+0xd4>)
 8000d8c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000d8e:	4638      	mov	r0, r7
 8000d90:	f00e fade 	bl	800f350 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000d94:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8000d98:	4a15      	ldr	r2, [pc, #84]	; (8000df0 <touchgfx_init+0xd8>)
 8000d9a:	f8c3 242c 	str.w	r2, [r3, #1068]	; 0x42c
 8000d9e:	f203 406c 	addw	r0, r3, #1132	; 0x46c
 8000da2:	f007 fdf5 	bl	8008990 <_ZN5ModelC1Ev>
 8000da6:	4622      	mov	r2, r4
 8000da8:	f1a6 0108 	sub.w	r1, r6, #8
 8000dac:	4630      	mov	r0, r6
 8000dae:	f007 fadd 	bl	800836c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000db2:	4630      	mov	r0, r6
 8000db4:	f002 fdde 	bl	8003974 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>
        static FrontendHeap instance;
 8000db8:	480e      	ldr	r0, [pc, #56]	; (8000df4 <touchgfx_init+0xdc>)
 8000dba:	f028 fde9 	bl	8029990 <atexit>
 8000dbe:	4628      	mov	r0, r5
 8000dc0:	f027 ffc3 	bl	8028d4a <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000dc4:	480c      	ldr	r0, [pc, #48]	; (8000df8 <touchgfx_init+0xe0>)
}
 8000dc6:	b002      	add	sp, #8
 8000dc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000dcc:	f7ff bdb4 	b.w	8000938 <_ZN11TouchGFXHAL10initializeEv>
 8000dd0:	20012e18 	.word	0x20012e18
 8000dd4:	20001844 	.word	0x20001844
 8000dd8:	200001ac 	.word	0x200001ac
 8000ddc:	20000008 	.word	0x20000008
 8000de0:	200001b0 	.word	0x200001b0
 8000de4:	0802b050 	.word	0x0802b050
 8000de8:	0802afb4 	.word	0x0802afb4
 8000dec:	0802afe8 	.word	0x0802afe8
 8000df0:	0802b01c 	.word	0x0802b01c
 8000df4:	08000cf1 	.word	0x08000cf1
 8000df8:	200017c8 	.word	0x200017c8

08000dfc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8000dfc:	4770      	bx	lr
	...

08000e00 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000e00:	4801      	ldr	r0, [pc, #4]	; (8000e08 <touchgfx_taskEntry+0x8>)
 8000e02:	f7ff bda7 	b.w	8000954 <_ZN11TouchGFXHAL9taskEntryEv>
 8000e06:	bf00      	nop
 8000e08:	200017c8 	.word	0x200017c8

08000e0c <_GLOBAL__sub_I_touchgfx_init>:
}
 8000e0c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8000e0e:	4e22      	ldr	r6, [pc, #136]	; (8000e98 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8000e10:	4c22      	ldr	r4, [pc, #136]	; (8000e9c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8000e12:	4d23      	ldr	r5, [pc, #140]	; (8000ea0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000e14:	4b23      	ldr	r3, [pc, #140]	; (8000ea4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8000e16:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000e18:	4630      	mov	r0, r6
 8000e1a:	f7ff fed3 	bl	8000bc4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000e1e:	4628      	mov	r0, r5
 8000e20:	f01b fdd8 	bl	801c9d4 <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8000e24:	4b20      	ldr	r3, [pc, #128]	; (8000ea8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e26:	4821      	ldr	r0, [pc, #132]	; (8000eac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          touchController(touchCtrl),
 8000e28:	60dc      	str	r4, [r3, #12]
          mcuInstrumentation(0),
 8000e2a:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8000e2c:	f44f 7180 	mov.w	r1, #256	; 0x100
          auxiliaryLCD(0),
 8000e30:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8000e34:	491e      	ldr	r1, [pc, #120]	; (8000eb0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000e36:	861a      	strh	r2, [r3, #48]	; 0x30
          vSyncCompensationEnabled(false),
 8000e38:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8000e3c:	491d      	ldr	r1, [pc, #116]	; (8000eb4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8000e3e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8000e40:	491d      	ldr	r1, [pc, #116]	; (8000eb8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          useAuxiliaryLCD(false),
 8000e42:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8000e46:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e48:	21f0      	movs	r1, #240	; 0xf0
 8000e4a:	8001      	strh	r1, [r0, #0]
 8000e4c:	481b      	ldr	r0, [pc, #108]	; (8000ebc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastY(0),
 8000e4e:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000e50:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e52:	481b      	ldr	r0, [pc, #108]	; (8000ec0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          updateMCULoad(0),
 8000e54:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e58:	f44f 71a0 	mov.w	r1, #320	; 0x140
          buttonController(0),
 8000e5c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000e60:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000e64:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000e68:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8000e6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8000e70:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000e74:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8000e78:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
          cc_begin(0),
 8000e7c:	675a      	str	r2, [r3, #116]	; 0x74
          lcdRef(display),
 8000e7e:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000e82:	8001      	strh	r1, [r0, #0]
 8000e84:	480f      	ldr	r0, [pc, #60]	; (8000ec4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8000e86:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8000e88:	490f      	ldr	r1, [pc, #60]	; (8000ec8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000e8a:	700a      	strb	r2, [r1, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000e8c:	2201      	movs	r2, #1
 8000e8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000e92:	4a0e      	ldr	r2, [pc, #56]	; (8000ecc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000e94:	601a      	str	r2, [r3, #0]
}
 8000e96:	bd70      	pop	{r4, r5, r6, pc}
 8000e98:	20001784 	.word	0x20001784
 8000e9c:	20001780 	.word	0x20001780
 8000ea0:	20001848 	.word	0x20001848
 8000ea4:	0802aab4 	.word	0x0802aab4
 8000ea8:	200017c8 	.word	0x200017c8
 8000eac:	20012da8 	.word	0x20012da8
 8000eb0:	01000001 	.word	0x01000001
 8000eb4:	01010000 	.word	0x01010000
 8000eb8:	20012db4 	.word	0x20012db4
 8000ebc:	20012dae 	.word	0x20012dae
 8000ec0:	20012daa 	.word	0x20012daa
 8000ec4:	20012db0 	.word	0x20012db0
 8000ec8:	20012dac 	.word	0x20012dac
 8000ecc:	0802ac40 	.word	0x0802ac40

08000ed0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	4770      	bx	lr

08000ed4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8000ed4:	8081      	strh	r1, [r0, #4]
    }
 8000ed6:	4770      	bx	lr

08000ed8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8000ed8:	80c1      	strh	r1, [r0, #6]
    }
 8000eda:	4770      	bx	lr

08000edc <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8000edc:	8101      	strh	r1, [r0, #8]
    }
 8000ede:	4770      	bx	lr

08000ee0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8000ee0:	8141      	strh	r1, [r0, #10]
    }
 8000ee2:	4770      	bx	lr

08000ee4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8000ee4:	4770      	bx	lr

08000ee6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee6:	4770      	bx	lr

08000ee8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8000ee8:	4770      	bx	lr

08000eea <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8000eea:	4770      	bx	lr

08000eec <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8000eec:	4770      	bx	lr

08000eee <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8000eee:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8000ef0:	88c4      	ldrh	r4, [r0, #6]
 8000ef2:	6803      	ldr	r3, [r0, #0]
 8000ef4:	1b12      	subs	r2, r2, r4
 8000ef6:	8884      	ldrh	r4, [r0, #4]
 8000ef8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8000efa:	1b09      	subs	r1, r1, r4
 8000efc:	b212      	sxth	r2, r2
    }
 8000efe:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8000f02:	b209      	sxth	r1, r1
 8000f04:	4718      	bx	r3

08000f06 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8000f06:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000f0a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8000f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8000f10:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8000f12:	6813      	ldr	r3, [r2, #0]
 8000f14:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8000f16:	6010      	str	r0, [r2, #0]
    }
 8000f18:	4770      	bx	lr

08000f1a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8000f1a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8000f1e:	b11a      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8000f20:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8000f24:	b102      	cbz	r2, 8000f28 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8000f26:	6018      	str	r0, [r3, #0]
        }
    }
 8000f28:	4770      	bx	lr

08000f2a <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8000f2a:	2000      	movs	r0, #0
 8000f2c:	4770      	bx	lr

08000f2e <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8000f2e:	888b      	ldrh	r3, [r1, #4]
 8000f30:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8000f32:	2001      	movs	r0, #1
 8000f34:	4770      	bx	lr

08000f36 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8000f36:	4770      	bx	lr

08000f38 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8000f38:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8000f3c:	4770      	bx	lr

08000f3e <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8000f3e:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8000f42:	4770      	bx	lr

08000f44 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8000f44:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8000f46:	2200      	movs	r2, #0
        return rect.width;
 8000f48:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8000f4c:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8000f50:	8002      	strh	r2, [r0, #0]
 8000f52:	8042      	strh	r2, [r0, #2]
 8000f54:	8084      	strh	r4, [r0, #4]
 8000f56:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8000f58:	bd10      	pop	{r4, pc}

08000f5a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8000f5a:	2200      	movs	r2, #0
 8000f5c:	8002      	strh	r2, [r0, #0]
 8000f5e:	8042      	strh	r2, [r0, #2]
 8000f60:	8082      	strh	r2, [r0, #4]
 8000f62:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8000f64:	4770      	bx	lr
	...

08000f68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000f68:	4b02      	ldr	r3, [pc, #8]	; (8000f74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8000f6a:	2290      	movs	r2, #144	; 0x90
 8000f6c:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8000f70:	4770      	bx	lr
 8000f72:	bf00      	nop
 8000f74:	e000e100 	.word	0xe000e100

08000f78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000f78:	4b02      	ldr	r3, [pc, #8]	; (8000f84 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8000f7a:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8000f7e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(LTDC_IRQn);
}
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop
 8000f84:	e000e100 	.word	0xe000e100

08000f88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f88:	4a09      	ldr	r2, [pc, #36]	; (8000fb0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8000f8a:	490a      	ldr	r1, [pc, #40]	; (8000fb4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8000f8c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f8e:	480a      	ldr	r0, [pc, #40]	; (8000fb8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8000f90:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8000f94:	3b01      	subs	r3, #1
 8000f96:	b29b      	uxth	r3, r3
 8000f98:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8000f9a:	6911      	ldr	r1, [r2, #16]
 8000f9c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8000fa0:	3901      	subs	r1, #1
 8000fa2:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8000fa4:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8000fa6:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000fa8:	f043 0301 	orr.w	r3, r3, #1
 8000fac:	6353      	str	r3, [r2, #52]	; 0x34
}
 8000fae:	4770      	bx	lr
 8000fb0:	40016800 	.word	0x40016800
 8000fb4:	200018ce 	.word	0x200018ce
 8000fb8:	200018cc 	.word	0x200018cc

08000fbc <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8000fbc:	4b01      	ldr	r3, [pc, #4]	; (8000fc4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8000fbe:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8000fc2:	4770      	bx	lr
 8000fc4:	40016800 	.word	0x40016800

08000fc8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fc8:	4b02      	ldr	r3, [pc, #8]	; (8000fd4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fca:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8000fcc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000fd0:	625a      	str	r2, [r3, #36]	; 0x24
}
 8000fd2:	4770      	bx	lr
 8000fd4:	40016800 	.word	0x40016800

08000fd8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8000fd8:	b570      	push	{r4, r5, r6, lr}
 8000fda:	4604      	mov	r4, r0
    HAL::initialize();
 8000fdc:	f00e fe83 	bl	800fce6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8000fe0:	6823      	ldr	r3, [r4, #0]
 8000fe2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8000fe4:	f013 fe2c 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 8000fe8:	4601      	mov	r1, r0
 8000fea:	4620      	mov	r0, r4
 8000fec:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8000fee:	6823      	ldr	r3, [r4, #0]
 8000ff0:	4a05      	ldr	r2, [pc, #20]	; (8001008 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8000ff2:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8000ff6:	4620      	mov	r0, r4
 8000ff8:	46ac      	mov	ip, r5
 8000ffa:	2300      	movs	r3, #0
}
 8000ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001000:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001004:	4760      	bx	ip
 8001006:	bf00      	nop
 8001008:	d004b000 	.word	0xd004b000

0800100c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 800100c:	f00e be52 	b.w	800fcb4 <_ZN8touchgfx3HAL10beginFrameEv>

08001010 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
 8001010:	f00e be5c 	b.w	800fccc <_ZN8touchgfx3HAL8endFrameEv>

08001014 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001014:	f00e be18 	b.w	800fc48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001018 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001018:	f00e bf79 	b.w	800ff0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

0800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800101c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001020:	b112      	cbz	r2, 8001028 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001022:	6803      	ldr	r3, [r0, #0]
 8001024:	695b      	ldr	r3, [r3, #20]
 8001026:	4718      	bx	r3
    }
 8001028:	4770      	bx	lr
	...

0800102c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800102c:	4b04      	ldr	r3, [pc, #16]	; (8001040 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 800102e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001032:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001036:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800103a:	f3bf 8f6f 	isb	sy
}
 800103e:	4770      	bx	lr
 8001040:	e000e100 	.word	0xe000e100

08001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001044:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001046:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001048:	4e12      	ldr	r6, [pc, #72]	; (8001094 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 800104a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 800104c:	4b12      	ldr	r3, [pc, #72]	; (8001098 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 800104e:	6003      	str	r3, [r0, #0]
 8001050:	6833      	ldr	r3, [r6, #0]
 8001052:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001056:	4605      	mov	r5, r0
 8001058:	b10a      	cbz	r2, 800105e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 800105a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800105c:	b900      	cbnz	r0, 8001060 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 800105e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001060:	6803      	ldr	r3, [r0, #0]
 8001062:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001064:	4798      	blx	r3
        return auxiliaryLCD;
 8001066:	6833      	ldr	r3, [r6, #0]
 8001068:	fab0 f480 	clz	r4, r0
 800106c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800106e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001070:	b130      	cbz	r0, 8001080 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001072:	6803      	ldr	r3, [r0, #0]
 8001074:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001076:	4798      	blx	r3
 8001078:	2800      	cmp	r0, #0
 800107a:	bf08      	it	eq
 800107c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001080:	b92c      	cbnz	r4, 800108e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001082:	4b06      	ldr	r3, [pc, #24]	; (800109c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001084:	4a06      	ldr	r2, [pc, #24]	; (80010a0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001086:	4807      	ldr	r0, [pc, #28]	; (80010a4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001088:	212c      	movs	r1, #44	; 0x2c
 800108a:	f028 fc63 	bl	8029954 <__assert_func>
    }
 800108e:	4628      	mov	r0, r5
 8001090:	bd70      	pop	{r4, r5, r6, pc}
 8001092:	bf00      	nop
 8001094:	20012db4 	.word	0x20012db4
 8001098:	0802b160 	.word	0x0802b160
 800109c:	0802b05c 	.word	0x0802b05c
 80010a0:	0802b0ba 	.word	0x0802b0ba
 80010a4:	0802b0f3 	.word	0x0802b0f3

080010a8 <_ZN8touchgfx5paint8tearDownEv>:
    blendL8CLUT = data;
}

void tearDown()
{
}
 80010a8:	4770      	bx	lr
	...

080010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
{
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
}

void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 80010ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    uint16_t* framebuffer = ptr;
    const uint16_t* const lineEnd = framebuffer + count;
    if (alpha == 0xFF)
 80010b0:	2bff      	cmp	r3, #255	; 0xff
    {
        do
        {
            *framebuffer = color565;
 80010b2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
    const uint16_t* const lineEnd = framebuffer + count;
 80010b6:	eb00 0141 	add.w	r1, r0, r1, lsl #1
    if (alpha == 0xFF)
 80010ba:	d105      	bne.n	80010c8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x1c>
            *framebuffer = color565;
 80010bc:	f820 4b02 	strh.w	r4, [r0], #2
        } while (++framebuffer < lineEnd);
 80010c0:	4281      	cmp	r1, r0
 80010c2:	d8fb      	bhi.n	80010bc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>
        do
        {
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
        } while (++framebuffer < lineEnd);
    }
}
 80010c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 80010c8:	4f17      	ldr	r7, [pc, #92]	; (8001128 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x7c>)
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ca:	f404 66fc 	and.w	r6, r4, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010ce:	ea04 0c07 	and.w	ip, r4, r7
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010d2:	f004 041f 	and.w	r4, r4, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010d6:	fb03 fc0c 	mul.w	ip, r3, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010da:	435e      	muls	r6, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010dc:	435c      	muls	r4, r3
    const uint8_t ialpha = 0xFF - alpha;
 80010de:	43db      	mvns	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e0:	b2db      	uxtb	r3, r3
 80010e2:	25ff      	movs	r5, #255	; 0xff
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 80010e4:	f8b0 e000 	ldrh.w	lr, [r0]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010e8:	ea0e 0207 	and.w	r2, lr, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010ec:	f40e 68fc 	and.w	r8, lr, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010f0:	fb03 c202 	mla	r2, r3, r2, ip
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 80010f4:	fb03 6808 	mla	r8, r3, r8, r6
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 80010f8:	f00e 0e1f 	and.w	lr, lr, #31
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 80010fc:	fbb2 f2f5 	udiv	r2, r2, r5
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001100:	fbb8 f8f5 	udiv	r8, r8, r5
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 8001104:	403a      	ands	r2, r7
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 8001106:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800110a:	ea42 0208 	orr.w	r2, r2, r8
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800110e:	fb03 4e0e 	mla	lr, r3, lr, r4
 8001112:	fbbe fef5 	udiv	lr, lr, r5
 8001116:	f00e 0e1f 	and.w	lr, lr, #31
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800111a:	ea42 020e 	orr.w	r2, r2, lr
            *framebuffer = alphaBlend(color565, *framebuffer, alpha);
 800111e:	f820 2b02 	strh.w	r2, [r0], #2
        } while (++framebuffer < lineEnd);
 8001122:	4281      	cmp	r1, r0
 8001124:	d8de      	bhi.n	80010e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x38>
 8001126:	e7cd      	b.n	80010c4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x18>
 8001128:	fffff800 	.word	0xfffff800

0800112c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800112c:	b510      	push	{r4, lr}
        return instance;
 800112e:	4c14      	ldr	r4, [pc, #80]	; (8001180 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001130:	6823      	ldr	r3, [r4, #0]
 8001132:	b323      	cbz	r3, 800117e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001134:	4b13      	ldr	r3, [pc, #76]	; (8001184 <HAL_LTDC_LineEventCallback+0x58>)
 8001136:	4a14      	ldr	r2, [pc, #80]	; (8001188 <HAL_LTDC_LineEventCallback+0x5c>)
 8001138:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800113a:	8811      	ldrh	r1, [r2, #0]
 800113c:	428b      	cmp	r3, r1
 800113e:	d113      	bne.n	8001168 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001140:	4b12      	ldr	r3, [pc, #72]	; (800118c <HAL_LTDC_LineEventCallback+0x60>)
 8001142:	8819      	ldrh	r1, [r3, #0]
 8001144:	f009 ff98 	bl	800b078 <HAL_LTDC_ProgramLineEvent>
 8001148:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 800114a:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 800114e:	3301      	adds	r3, #1
 8001150:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001154:	f7ff fcea 	bl	8000b2c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001158:	6820      	ldr	r0, [r4, #0]
 800115a:	f00f fb03 	bl	8010764 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800115e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001162:	2000      	movs	r0, #0
 8001164:	f7ff bb62 	b.w	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001168:	f009 ff86 	bl	800b078 <HAL_LTDC_ProgramLineEvent>
        return instance;
 800116c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 800116e:	6803      	ldr	r3, [r0, #0]
 8001170:	6a1b      	ldr	r3, [r3, #32]
 8001172:	4798      	blx	r3
    }
 8001174:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001178:	2000      	movs	r0, #0
 800117a:	f7ff bb6f 	b.w	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 800117e:	bd10      	pop	{r4, pc}
 8001180:	20012db4 	.word	0x20012db4
 8001184:	40016800 	.word	0x40016800
 8001188:	200018ce 	.word	0x200018ce
 800118c:	200018cc 	.word	0x200018cc

08001190 <calculate_freq_and_signalstrength>:
 * @param Channel The channel number.
 * @param samples Pointer to the input samples array.
 * @param given_frequency The given frequency.
 * @return FFT structure containing the main frequency and signal strength.
 */
FFT calculate_freq_and_signalstrength(uint8_t Channel, uint32_t* samples, uint8_t given_frequency) {
 8001190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001194:	ed2d 8b02 	vpush	{d8}
 8001198:	b091      	sub	sp, #68	; 0x44
 800119a:	af00      	add	r7, sp, #0
 800119c:	4605      	mov	r5, r0
 800119e:	4688      	mov	r8, r1
 80011a0:	60fa      	str	r2, [r7, #12]
    // Perform FFT using CMSIS-DSP library
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011a2:	f000 fe19 	bl	8001dd8 <MEAS_get_num_of_samples>
    const uint32_t fft_size = buffer_size;
    // Convert the samples to the specific channel
    float32_t input_samples[buffer_size];
 80011a6:	b203      	sxth	r3, r0
 80011a8:	60bb      	str	r3, [r7, #8]
 80011aa:	009b      	lsls	r3, r3, #2
 80011ac:	607b      	str	r3, [r7, #4]
 80011ae:	3307      	adds	r3, #7
 80011b0:	f023 0307 	bic.w	r3, r3, #7
 80011b4:	ebad 0d03 	sub.w	sp, sp, r3
	uint8_t buffer_size = MEAS_get_num_of_samples();
 80011b8:	4604      	mov	r4, r0
    float32_t input_samples[buffer_size];
 80011ba:	46ea      	mov	sl, sp
    for (uint32_t i = 0; i < fft_size; i++) {
 80011bc:	b1f0      	cbz	r0, 80011fc <calculate_freq_and_signalstrength+0x6c>
 80011be:	3d01      	subs	r5, #1
 80011c0:	46d1      	mov	r9, sl
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c2:	46d3      	mov	fp, sl
    for (uint32_t i = 0; i < fft_size; i++) {
 80011c4:	2600      	movs	r6, #0
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011c6:	f000 fe05 	bl	8001dd4 <MEAS_get_num_of_chan>
 80011ca:	fb06 5000 	mla	r0, r6, r0, r5
 80011ce:	eb08 0380 	add.w	r3, r8, r0, lsl #2
 80011d2:	edd3 7a00 	vldr	s15, [r3]
    for (uint32_t i = 0; i < fft_size; i++) {
 80011d6:	3601      	adds	r6, #1
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011d8:	eef8 7a67 	vcvt.f32.u32	s15, s15
    for (uint32_t i = 0; i < fft_size; i++) {
 80011dc:	42b4      	cmp	r4, r6
        input_samples[i] = (float32_t)samples[i * MEAS_get_num_of_chan() + (Channel - 1)];
 80011de:	eceb 7a01 	vstmia	fp!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011e2:	d1f0      	bne.n	80011c6 <calculate_freq_and_signalstrength+0x36>
 80011e4:	687e      	ldr	r6, [r7, #4]
    }
    
    // remove DC component
    for (uint32_t i = 0; i < fft_size; i++) {
        input_samples[i] -= 2047.5;
 80011e6:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001294 <calculate_freq_and_signalstrength+0x104>
 80011ea:	4456      	add	r6, sl
 80011ec:	edd9 7a00 	vldr	s15, [r9]
 80011f0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80011f4:	ece9 7a01 	vstmia	r9!, {s15}
    for (uint32_t i = 0; i < fft_size; i++) {
 80011f8:	454e      	cmp	r6, r9
 80011fa:	d1f7      	bne.n	80011ec <calculate_freq_and_signalstrength+0x5c>
    }

    // Create an array for the FFT output
    float32_t fft_complex_output[2*buffer_size];
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	466a      	mov	r2, sp
 8001200:	eba2 03c3 	sub.w	r3, r2, r3, lsl #3
 8001204:	469d      	mov	sp, r3

    //calculate the index of the given frequency
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();

    //calculate the signal strength
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001206:	ee07 4a90 	vmov	s15, r4
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800120a:	68fb      	ldr	r3, [r7, #12]
    float32_t fft_complex_output[2*buffer_size];
 800120c:	466d      	mov	r5, sp
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800120e:	b2a1      	uxth	r1, r4
 8001210:	f107 0028 	add.w	r0, r7, #40	; 0x28
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001214:	eef8 8a67 	vcvt.f32.u32	s17, s15
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 8001218:	fb13 f904 	smulbb	r9, r3, r4
    arm_rfft_fast_init_f32(&fft_struct, fft_size);
 800121c:	f026 fcc6 	bl	8027bac <arm_rfft_fast_init_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001220:	0864      	lsrs	r4, r4, #1
    arm_rfft_fast_f32(&fft_struct, input_samples, fft_complex_output, 0);
 8001222:	2300      	movs	r3, #0
 8001224:	4651      	mov	r1, sl
 8001226:	f107 0028 	add.w	r0, r7, #40	; 0x28
 800122a:	462a      	mov	r2, r5
 800122c:	f026 fd42 	bl	8027cb4 <arm_rfft_fast_f32>
    arm_cmplx_mag_f32(fft_complex_output, fft_complex_output, fft_size / 2);
 8001230:	4622      	mov	r2, r4
 8001232:	4629      	mov	r1, r5
 8001234:	4628      	mov	r0, r5
 8001236:	f027 f9ab 	bl	8028590 <arm_cmplx_mag_f32>
    uint32_t index = (uint32_t)given_frequency * fft_size / MEAS_get_samp_freq();
 800123a:	f000 fdcf 	bl	8001ddc <MEAS_get_samp_freq>
 800123e:	fbb9 f9f0 	udiv	r9, r9, r0
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001242:	eb05 0989 	add.w	r9, r5, r9, lsl #2
 8001246:	edd9 7a00 	vldr	s15, [r9]
 800124a:	ee77 7aa7 	vadd.f32	s15, s15, s15

    // Find the index of the maximum magnitude in the first half of the array
    uint32_t maxIndex;
    float32_t maxValue;
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 800124e:	f107 0318 	add.w	r3, r7, #24
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 8001252:	eec7 0aa8 	vdiv.f32	s1, s15, s17
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001256:	f107 021c 	add.w	r2, r7, #28
 800125a:	4621      	mov	r1, r4
 800125c:	4628      	mov	r0, r5
    float signal_strength = 2* fft_complex_output[index] / fft_size;
 800125e:	edc7 0a03 	vstr	s1, [r7, #12]
    arm_max_f32(fft_complex_output, fft_size / 2, &maxValue, &maxIndex);
 8001262:	f026 fc3b 	bl	8027adc <arm_max_f32>

    // Calculate the main frequency
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001266:	edd7 7a06 	vldr	s15, [r7, #24]
 800126a:	eeb8 8a67 	vcvt.f32.u32	s16, s15
 800126e:	f000 fdb5 	bl	8001ddc <MEAS_get_samp_freq>
 8001272:	ee07 0a90 	vmov	s15, r0
 8001276:	eef8 7a67 	vcvt.f32.u32	s15, s15
    FFT fft;

    // return the calculated values
    fft.main_freq = main_frequency;
    fft.signal_strength = signal_strength;
    return fft;
 800127a:	edd7 0a03 	vldr	s1, [r7, #12]
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 800127e:	ee67 7a88 	vmul.f32	s15, s15, s16
}
 8001282:	3744      	adds	r7, #68	; 0x44
    float main_frequency = (float)maxIndex * ((float)MEAS_get_samp_freq()) / fft_size;
 8001284:	ee87 0aa8 	vdiv.f32	s0, s15, s17
}
 8001288:	46bd      	mov	sp, r7
 800128a:	ecbd 8b02 	vpop	{d8}
 800128e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001292:	bf00      	nop
 8001294:	44fff000 	.word	0x44fff000

08001298 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001298:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800129a:	2064      	movs	r0, #100	; 0x64
 800129c:	f00b faca 	bl	800c834 <osDelay>
  for(;;)
 80012a0:	e7fb      	b.n	800129a <StartDefaultTask+0x2>
 80012a2:	bf00      	nop

080012a4 <StartTimeoutTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartTimeoutTask */
void StartTimeoutTask(void *argument)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	4c10      	ldr	r4, [pc, #64]	; (80012e8 <StartTimeoutTask+0x44>)
 80012a8:	f8df 8048 	ldr.w	r8, [pc, #72]	; 80012f4 <StartTimeoutTask+0x50>
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);

	  if(sleep_timeout_value == 0)
	  {
		  sleep_timeout_value = 60;
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012ac:	4f0f      	ldr	r7, [pc, #60]	; (80012ec <StartTimeoutTask+0x48>)
	  }
	  if(sleep_timeout_value > 60 && sleep_timeout_value < 0)
		  sleep_timeout_value = 60;

	  // Toggle onboard LED as heartbeat visual feedback
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012ae:	4e10      	ldr	r6, [pc, #64]	; (80012f0 <StartTimeoutTask+0x4c>)
	  sleep_timeout_value--;
 80012b0:	6820      	ldr	r0, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012b2:	2300      	movs	r3, #0
 80012b4:	461a      	mov	r2, r3
 80012b6:	4621      	mov	r1, r4
	  sleep_timeout_value--;
 80012b8:	1e45      	subs	r5, r0, #1
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012ba:	f8d8 0000 	ldr.w	r0, [r8]
	  sleep_timeout_value--;
 80012be:	6025      	str	r5, [r4, #0]
	  osMessageQueuePut(TimeoutQueueHandle, &sleep_timeout_value, 0, 0);
 80012c0:	f00b fbb4 	bl	800ca2c <osMessageQueuePut>
	  if(sleep_timeout_value == 0)
 80012c4:	6822      	ldr	r2, [r4, #0]
		  sleep_timeout_value = 60;
 80012c6:	233c      	movs	r3, #60	; 0x3c
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012c8:	4638      	mov	r0, r7
 80012ca:	2120      	movs	r1, #32
	  if(sleep_timeout_value == 0)
 80012cc:	b912      	cbnz	r2, 80012d4 <StartTimeoutTask+0x30>
		  sleep_timeout_value = 60;
 80012ce:	6023      	str	r3, [r4, #0]
		  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);	//shut down device
 80012d0:	f008 f8b6 	bl	8009440 <HAL_GPIO_WritePin>
	  HAL_GPIO_TogglePin(GPIOG, GPIO_PIN_13);
 80012d4:	4630      	mov	r0, r6
 80012d6:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012da:	f008 f8b5 	bl	8009448 <HAL_GPIO_TogglePin>

	  osDelay(1000);
 80012de:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80012e2:	f00b faa7 	bl	800c834 <osDelay>
	  sleep_timeout_value--;
 80012e6:	e7e3      	b.n	80012b0 <StartTimeoutTask+0xc>
 80012e8:	20000014 	.word	0x20000014
 80012ec:	40021000 	.word	0x40021000
 80012f0:	40021800 	.word	0x40021800
 80012f4:	200018d8 	.word	0x200018d8

080012f8 <updateGUI_test>:
	return sleep_timeout_value;
 80012f8:	4b01      	ldr	r3, [pc, #4]	; (8001300 <updateGUI_test+0x8>)
}
 80012fa:	6818      	ldr	r0, [r3, #0]
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop
 8001300:	20000014 	.word	0x20000014

08001304 <gyro_disable>:
{
 8001304:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001306:	b083      	sub	sp, #12
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001308:	4e1f      	ldr	r6, [pc, #124]	; (8001388 <gyro_disable+0x84>)
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 800130a:	4d20      	ldr	r5, [pc, #128]	; (800138c <gyro_disable+0x88>)
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800130c:	4c20      	ldr	r4, [pc, #128]	; (8001390 <gyro_disable+0x8c>)
	__HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 800130e:	2700      	movs	r7, #0
 8001310:	9700      	str	r7, [sp, #0]
 8001312:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001314:	f043 0304 	orr.w	r3, r3, #4
 8001318:	6333      	str	r3, [r6, #48]	; 0x30
 800131a:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800131c:	f003 0304 	and.w	r3, r3, #4
 8001320:	9300      	str	r3, [sp, #0]
 8001322:	9b00      	ldr	r3, [sp, #0]
	GPIOC->MODER &= ~GPIO_MODER_MODER1_Msk;        // Reset mode for PC1
 8001324:	682b      	ldr	r3, [r5, #0]
 8001326:	f023 030c 	bic.w	r3, r3, #12
 800132a:	602b      	str	r3, [r5, #0]
	GPIOC->MODER |= 1UL << GPIO_MODER_MODER1_Pos;  // Set PC1 as output
 800132c:	682b      	ldr	r3, [r5, #0]
 800132e:	f043 0304 	orr.w	r3, r3, #4
 8001332:	602b      	str	r3, [r5, #0]
	GPIOC->BSRR |= GPIO_BSRR_BR1;  // Set GYRO (CS) to 0 for a short time
 8001334:	69ab      	ldr	r3, [r5, #24]
 8001336:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800133a:	61ab      	str	r3, [r5, #24]
	HAL_Delay(10);                 // Wait some time
 800133c:	200a      	movs	r0, #10
 800133e:	f007 fea1 	bl	8009084 <HAL_Delay>
	GPIOC->MODER |= 3UL << GPIO_MODER_MODER1_Pos;  // Analog PC1 = ADC123_IN11
 8001342:	682b      	ldr	r3, [r5, #0]
 8001344:	f043 030c 	orr.w	r3, r3, #12
 8001348:	602b      	str	r3, [r5, #0]
	__HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 800134a:	9701      	str	r7, [sp, #4]
 800134c:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800134e:	f043 0320 	orr.w	r3, r3, #32
 8001352:	6333      	str	r3, [r6, #48]	; 0x30
 8001354:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8001356:	f003 0320 	and.w	r3, r3, #32
 800135a:	9301      	str	r3, [sp, #4]
 800135c:	9b01      	ldr	r3, [sp, #4]
	GPIOF->OSPEEDR &= ~GPIO_OSPEEDR_OSPEED8_Msk;  // Reset speed of PF8
 800135e:	68a3      	ldr	r3, [r4, #8]
 8001360:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001364:	60a3      	str	r3, [r4, #8]
	GPIOF->AFR[1] &= ~GPIO_AFRH_AFSEL8_Msk;  // Reset alternate function of PF8
 8001366:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001368:	f023 030f 	bic.w	r3, r3, #15
 800136c:	6263      	str	r3, [r4, #36]	; 0x24
	GPIOF->PUPDR &= ~GPIO_PUPDR_PUPD8_Msk;   // Reset pulup/down of PF8
 800136e:	68e3      	ldr	r3, [r4, #12]
 8001370:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8001374:	60e3      	str	r3, [r4, #12]
	HAL_Delay(10);                           // Wait some time
 8001376:	200a      	movs	r0, #10
 8001378:	f007 fe84 	bl	8009084 <HAL_Delay>
	GPIOF->MODER |= 3UL << GPIO_MODER_MODER8_Pos;  // Analog mode PF8 = ADC3_IN4
 800137c:	6823      	ldr	r3, [r4, #0]
 800137e:	f443 3340 	orr.w	r3, r3, #196608	; 0x30000
 8001382:	6023      	str	r3, [r4, #0]
}
 8001384:	b003      	add	sp, #12
 8001386:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001388:	40023800 	.word	0x40023800
 800138c:	40020800 	.word	0x40020800
 8001390:	40021400 	.word	0x40021400

08001394 <SystemClock_Config>:
{
 8001394:	b530      	push	{r4, r5, lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001396:	2400      	movs	r4, #0
{
 8001398:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800139a:	e9cd 440a 	strd	r4, r4, [sp, #40]	; 0x28
 800139e:	e9cd 440c 	strd	r4, r4, [sp, #48]	; 0x30
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013a2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 80013a6:	e9cd 4405 	strd	r4, r4, [sp, #20]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013aa:	4a1e      	ldr	r2, [pc, #120]	; (8001424 <SystemClock_Config+0x90>)
 80013ac:	9401      	str	r4, [sp, #4]
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013ae:	9407      	str	r4, [sp, #28]
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b0:	6c11      	ldr	r1, [r2, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013b2:	4b1d      	ldr	r3, [pc, #116]	; (8001428 <SystemClock_Config+0x94>)
  __HAL_RCC_PWR_CLK_ENABLE();
 80013b4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80013b8:	6411      	str	r1, [r2, #64]	; 0x40
 80013ba:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80013bc:	f002 5280 	and.w	r2, r2, #268435456	; 0x10000000
 80013c0:	9201      	str	r2, [sp, #4]
 80013c2:	9a01      	ldr	r2, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013c4:	9402      	str	r4, [sp, #8]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013cc:	601a      	str	r2, [r3, #0]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80013d4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80013d6:	2201      	movs	r2, #1
 80013d8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80013dc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e0:	2308      	movs	r3, #8
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80013e2:	2502      	movs	r5, #2
  RCC_OscInitStruct.PLL.PLLM = 8;
 80013e4:	9310      	str	r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013e6:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013ea:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80013ee:	e9cd 520e 	strd	r5, r2, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80013f2:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013f4:	2202      	movs	r2, #2
 80013f6:	2304      	movs	r3, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80013f8:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80013fa:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013fe:	9902      	ldr	r1, [sp, #8]
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001400:	f009 fe5c 	bl	800b0bc <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001404:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001406:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800140a:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800140e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001412:	a803      	add	r0, sp, #12
 8001414:	2105      	movs	r1, #5
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001416:	e9cd 4205 	strd	r4, r2, [sp, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800141a:	9307      	str	r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800141c:	f00a f866 	bl	800b4ec <HAL_RCC_ClockConfig>
}
 8001420:	b015      	add	sp, #84	; 0x54
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	40023800 	.word	0x40023800
 8001428:	40007000 	.word	0x40007000

0800142c <main>:
{
 800142c:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001430:	2400      	movs	r4, #0
{
 8001432:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001434:	f007 fdfa 	bl	800902c <HAL_Init>
  SystemClock_Config();
 8001438:	f7ff ffac 	bl	8001394 <SystemClock_Config>
  gyro_disable();
 800143c:	f7ff ff62 	bl	8001304 <gyro_disable>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001440:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
 8001444:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001448:	4bbe      	ldr	r3, [pc, #760]	; (8001744 <main+0x318>)
 800144a:	9400      	str	r4, [sp, #0]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800144c:	9411      	str	r4, [sp, #68]	; 0x44
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800144e:	6b19      	ldr	r1, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 8001450:	48bd      	ldr	r0, [pc, #756]	; (8001748 <main+0x31c>)
  hi2c3.Instance = I2C3;
 8001452:	4dbe      	ldr	r5, [pc, #760]	; (800174c <main+0x320>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001454:	f041 0110 	orr.w	r1, r1, #16
 8001458:	6319      	str	r1, [r3, #48]	; 0x30
 800145a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800145c:	f001 0110 	and.w	r1, r1, #16
 8001460:	9100      	str	r1, [sp, #0]
 8001462:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001464:	9401      	str	r4, [sp, #4]
 8001466:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001468:	f041 0120 	orr.w	r1, r1, #32
 800146c:	6319      	str	r1, [r3, #48]	; 0x30
 800146e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001470:	f001 0120 	and.w	r1, r1, #32
 8001474:	9101      	str	r1, [sp, #4]
 8001476:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001478:	9402      	str	r4, [sp, #8]
 800147a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800147c:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8001480:	6319      	str	r1, [r3, #48]	; 0x30
 8001482:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001484:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8001488:	9102      	str	r1, [sp, #8]
 800148a:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800148c:	9403      	str	r4, [sp, #12]
 800148e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001490:	f041 0104 	orr.w	r1, r1, #4
 8001494:	6319      	str	r1, [r3, #48]	; 0x30
 8001496:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001498:	f001 0104 	and.w	r1, r1, #4
 800149c:	9103      	str	r1, [sp, #12]
 800149e:	9903      	ldr	r1, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014a0:	9404      	str	r4, [sp, #16]
 80014a2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014a4:	f041 0101 	orr.w	r1, r1, #1
 80014a8:	6319      	str	r1, [r3, #48]	; 0x30
 80014aa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014ac:	f001 0101 	and.w	r1, r1, #1
 80014b0:	9104      	str	r1, [sp, #16]
 80014b2:	9904      	ldr	r1, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014b4:	9405      	str	r4, [sp, #20]
 80014b6:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014b8:	f041 0102 	orr.w	r1, r1, #2
 80014bc:	6319      	str	r1, [r3, #48]	; 0x30
 80014be:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014c0:	f001 0102 	and.w	r1, r1, #2
 80014c4:	9105      	str	r1, [sp, #20]
 80014c6:	9905      	ldr	r1, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014c8:	9406      	str	r4, [sp, #24]
 80014ca:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014cc:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 80014d0:	6319      	str	r1, [r3, #48]	; 0x30
 80014d2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014d4:	f001 0140 	and.w	r1, r1, #64	; 0x40
 80014d8:	9106      	str	r1, [sp, #24]
 80014da:	9906      	ldr	r1, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014dc:	9407      	str	r4, [sp, #28]
 80014de:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80014e0:	f041 0108 	orr.w	r1, r1, #8
 80014e4:	6319      	str	r1, [r3, #48]	; 0x30
 80014e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014e8:	f003 0308 	and.w	r3, r3, #8
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014ec:	4622      	mov	r2, r4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014ee:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f0:	2114      	movs	r1, #20
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014f2:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|FRAME_RATE_Pin, GPIO_PIN_RESET);
 80014f4:	f007 ffa4 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(POWER_ON_DEVICE_GPIO_Port, POWER_ON_DEVICE_Pin, GPIO_PIN_SET);
 80014f8:	4893      	ldr	r0, [pc, #588]	; (8001748 <main+0x31c>)
 80014fa:	2120      	movs	r1, #32
 80014fc:	2201      	movs	r2, #1
 80014fe:	f007 ff9f 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|DEBUG_GPIO_Pin, GPIO_PIN_RESET);
 8001502:	4893      	ldr	r0, [pc, #588]	; (8001750 <main+0x324>)
 8001504:	4622      	mov	r2, r4
 8001506:	2114      	movs	r1, #20
 8001508:	f007 ff9a 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEBUG2_GPIO_GPIO_Port, DEBUG2_GPIO_Pin, GPIO_PIN_RESET);
 800150c:	4891      	ldr	r0, [pc, #580]	; (8001754 <main+0x328>)
 800150e:	4622      	mov	r2, r4
 8001510:	2180      	movs	r1, #128	; 0x80
 8001512:	f007 ff95 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001516:	4890      	ldr	r0, [pc, #576]	; (8001758 <main+0x32c>)
 8001518:	4622      	mov	r2, r4
 800151a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800151e:	f007 ff8f 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001522:	488e      	ldr	r0, [pc, #568]	; (800175c <main+0x330>)
 8001524:	4622      	mov	r2, r4
 8001526:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 800152a:	f007 ff89 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 800152e:	488c      	ldr	r0, [pc, #560]	; (8001760 <main+0x334>)
 8001530:	4622      	mov	r2, r4
 8001532:	2104      	movs	r1, #4
 8001534:	f007 ff84 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DEVICE_ON_GPIO_Port, DEVICE_ON_Pin, GPIO_PIN_SET);
 8001538:	2201      	movs	r2, #1
 800153a:	4889      	ldr	r0, [pc, #548]	; (8001760 <main+0x334>)
 800153c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001540:	f007 ff7e 	bl	8009440 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001544:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001546:	f04f 0903 	mov.w	r9, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin|FRAME_RATE_Pin;
 800154a:	2314      	movs	r3, #20
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800154c:	487e      	ldr	r0, [pc, #504]	; (8001748 <main+0x31c>)
 800154e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 8001550:	f04f 0808 	mov.w	r8, #8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001558:	e9cd 490f 	strd	r4, r9, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800155c:	f007 fe2c 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001560:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001564:	4878      	ldr	r0, [pc, #480]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001566:	930e      	str	r3, [sp, #56]	; 0x38
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001568:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEVICE_ON_OFF_TRIGGER_Pin;
 800156a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800156e:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(DEVICE_ON_OFF_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001570:	f007 fe22 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001574:	2320      	movs	r3, #32
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001576:	4874      	ldr	r0, [pc, #464]	; (8001748 <main+0x31c>)
  GPIO_InitStruct.Pin = POWER_ON_DEVICE_Pin;
 8001578:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 800157a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800157c:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800157e:	f04f 0b04 	mov.w	fp, #4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001582:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001586:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(POWER_ON_DEVICE_GPIO_Port, &GPIO_InitStruct);
 8001588:	f007 fe16 	bl	80091b8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800158c:	4870      	ldr	r0, [pc, #448]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 800158e:	f8cd b034 	str.w	fp, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001592:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001598:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800159a:	f007 fe0d 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 800159e:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a0:	486c      	ldr	r0, [pc, #432]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = DEBUG2_GPIO_Pin;
 80015a2:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015a4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015a6:	f04f 0a10 	mov.w	sl, #16
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015aa:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ae:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG2_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b0:	f007 fe02 	bl	80091b8 <HAL_GPIO_Init>
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b4:	4866      	ldr	r0, [pc, #408]	; (8001750 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015b6:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015b8:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015ba:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Pin = DEBUG_GPIO_Pin;
 80015be:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
  HAL_GPIO_Init(DEBUG_GPIO_GPIO_Port, &GPIO_InitStruct);
 80015c2:	f007 fdf9 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015c6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ca:	4863      	ldr	r0, [pc, #396]	; (8001758 <main+0x32c>)
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80015cc:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015ce:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d0:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015d4:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015d6:	f007 fdef 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015da:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015de:	485f      	ldr	r0, [pc, #380]	; (800175c <main+0x330>)
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80015e0:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015e2:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015e4:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e8:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ea:	f007 fde5 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015ee:	f242 0304 	movw	r3, #8196	; 0x2004
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f2:	485b      	ldr	r0, [pc, #364]	; (8001760 <main+0x334>)
  GPIO_InitStruct.Pin = GPIO_PIN_2|DEVICE_ON_Pin;
 80015f4:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015f6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015f8:	e9cd 640e 	strd	r6, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015fc:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015fe:	f007 fddb 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001602:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001606:	4853      	ldr	r0, [pc, #332]	; (8001754 <main+0x328>)
  GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001608:	930d      	str	r3, [sp, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800160a:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Alternate = GPIO_AF15_EVENTOUT;
 800160c:	230f      	movs	r3, #15
 800160e:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001610:	e9cd 740e 	strd	r7, r4, [sp, #56]	; 0x38
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001614:	9410      	str	r4, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001616:	f007 fdcf 	bl	80091b8 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(EXTI3_IRQn, 5, 0);
 800161a:	4622      	mov	r2, r4
 800161c:	2105      	movs	r1, #5
 800161e:	2009      	movs	r0, #9
 8001620:	f007 fd54 	bl	80090cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 8001624:	2009      	movs	r0, #9
 8001626:	f007 fd8f 	bl	8009148 <HAL_NVIC_EnableIRQ>
  hcrc.Instance = CRC;
 800162a:	484e      	ldr	r0, [pc, #312]	; (8001764 <main+0x338>)
 800162c:	4b4e      	ldr	r3, [pc, #312]	; (8001768 <main+0x33c>)
 800162e:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001630:	f007 fd98 	bl	8009164 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8001634:	494d      	ldr	r1, [pc, #308]	; (800176c <main+0x340>)
 8001636:	4b4e      	ldr	r3, [pc, #312]	; (8001770 <main+0x344>)
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001638:	4628      	mov	r0, r5
  hi2c3.Init.ClockSpeed = 100000;
 800163a:	e9c5 1300 	strd	r1, r3, [r5]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800163e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8001642:	612b      	str	r3, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8001644:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.OwnAddress2 = 0;
 8001648:	e9c5 4405 	strd	r4, r4, [r5, #20]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164c:	e9c5 4407 	strd	r4, r4, [r5, #28]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001650:	f008 f95c 	bl	800990c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001654:	4651      	mov	r1, sl
 8001656:	4628      	mov	r0, r5
 8001658:	f009 fb24 	bl	800aca4 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800165c:	4621      	mov	r1, r4
 800165e:	4628      	mov	r0, r5
 8001660:	f009 fb40 	bl	800ace4 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001664:	f8df c118 	ldr.w	ip, [pc, #280]	; 8001780 <main+0x354>
  hspi5.Instance = SPI5;
 8001668:	4842      	ldr	r0, [pc, #264]	; (8001774 <main+0x348>)
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800166a:	4d43      	ldr	r5, [pc, #268]	; (8001778 <main+0x34c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800166c:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8001672:	e9c0 c300 	strd	ip, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001676:	f44f 7e00 	mov.w	lr, #512	; 0x200
 800167a:	2318      	movs	r3, #24
 800167c:	e9c0 e306 	strd	lr, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001680:	230a      	movs	r3, #10
 8001682:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001684:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001688:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 800168c:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 8001690:	f00a fa1a 	bl	800bac8 <HAL_SPI_Init>
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001694:	2307      	movs	r3, #7
 8001696:	930e      	str	r3, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001698:	9310      	str	r3, [sp, #64]	; 0x40
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800169a:	4b38      	ldr	r3, [pc, #224]	; (800177c <main+0x350>)
 800169c:	602b      	str	r3, [r5, #0]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800169e:	2040      	movs	r0, #64	; 0x40
 80016a0:	f44f 73c0 	mov.w	r3, #384	; 0x180
 80016a4:	e9c5 0305 	strd	r0, r3, [r5, #20]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016a8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80016ac:	622b      	str	r3, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016ae:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016b0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016b4:	4628      	mov	r0, r5
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016b6:	62ab      	str	r3, [r5, #40]	; 0x28
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80016b8:	e9c5 6401 	strd	r6, r4, [r5, #4]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 80016bc:	e9c5 ba03 	strd	fp, sl, [r5, #12]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016c0:	61ec      	str	r4, [r5, #28]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016c2:	626c      	str	r4, [r5, #36]	; 0x24
  SdramTiming.SelfRefreshTime = 4;
 80016c4:	f8cd b03c 	str.w	fp, [sp, #60]	; 0x3c
  SdramTiming.RPDelay = 2;
 80016c8:	e9cd 9711 	strd	r9, r7, [sp, #68]	; 0x44
  SdramTiming.LoadToActiveDelay = 2;
 80016cc:	970d      	str	r7, [sp, #52]	; 0x34
  SdramTiming.RCDDelay = 2;
 80016ce:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d0:	f00a f908 	bl	800b8e4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016d4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016d8:	a909      	add	r1, sp, #36	; 0x24
 80016da:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016dc:	e9cd 6809 	strd	r6, r8, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80016e0:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
 __IO uint32_t tmpmrd =0;
 80016e4:	9408      	str	r4, [sp, #32]
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016e6:	f00a f91f 	bl	800b928 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80016ea:	4630      	mov	r0, r6
 80016ec:	f007 fcca 	bl	8009084 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f4:	a909      	add	r1, sp, #36	; 0x24
 80016f6:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 80016f8:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016fc:	e9cd 7809 	strd	r7, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001700:	f00a f912 	bl	800b928 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001704:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001708:	a909      	add	r1, sp, #36	; 0x24
 800170a:	4628      	mov	r0, r5
  Command->ModeRegisterDefinition  = 0;
 800170c:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001710:	e9cd 9809 	strd	r9, r8, [sp, #36]	; 0x24
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001714:	f00a f908 	bl	800b928 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8001718:	f44f 730c 	mov.w	r3, #560	; 0x230
 800171c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800171e:	9b08      	ldr	r3, [sp, #32]
 8001720:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001722:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001726:	a909      	add	r1, sp, #36	; 0x24
 8001728:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800172a:	e9cd b809 	strd	fp, r8, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800172e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001730:	f00a f8fa 	bl	800b928 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8001734:	4628      	mov	r0, r5
 8001736:	f240 516a 	movw	r1, #1386	; 0x56a
 800173a:	f00a f913 	bl	800b964 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800173e:	2234      	movs	r2, #52	; 0x34
 8001740:	e020      	b.n	8001784 <main+0x358>
 8001742:	bf00      	nop
 8001744:	40023800 	.word	0x40023800
 8001748:	40021000 	.word	0x40021000
 800174c:	200018ec 	.word	0x200018ec
 8001750:	40020800 	.word	0x40020800
 8001754:	40020000 	.word	0x40020000
 8001758:	40020400 	.word	0x40020400
 800175c:	40020c00 	.word	0x40020c00
 8001760:	40021800 	.word	0x40021800
 8001764:	200018e4 	.word	0x200018e4
 8001768:	40023000 	.word	0x40023000
 800176c:	40005c00 	.word	0x40005c00
 8001770:	000186a0 	.word	0x000186a0
 8001774:	20001a1c 	.word	0x20001a1c
 8001778:	200019e8 	.word	0x200019e8
 800177c:	a0000140 	.word	0xa0000140
 8001780:	40015000 	.word	0x40015000
  hltdc.Instance = LTDC;
 8001784:	4d3a      	ldr	r5, [pc, #232]	; (8001870 <main+0x444>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001786:	4621      	mov	r1, r4
 8001788:	eb0d 0002 	add.w	r0, sp, r2
 800178c:	f028 fae7 	bl	8029d5e <memset>
  hltdc.Instance = LTDC;
 8001790:	4b38      	ldr	r3, [pc, #224]	; (8001874 <main+0x448>)
 8001792:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 9;
 8001794:	2309      	movs	r3, #9
 8001796:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 8001798:	231d      	movs	r3, #29
 800179a:	61eb      	str	r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800179c:	f240 1b0d 	movw	fp, #269	; 0x10d
 80017a0:	f240 1343 	movw	r3, #323	; 0x143
 80017a4:	e9c5 b309 	strd	fp, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80017a8:	f240 1217 	movw	r2, #279	; 0x117
 80017ac:	f240 1347 	movw	r3, #327	; 0x147
  hltdc.Init.Backcolor.Blue = 0;
 80017b0:	86ac      	strh	r4, [r5, #52]	; 0x34
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017b2:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80017b4:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
  hltdc.Init.VerticalSync = 1;
 80017b8:	61ae      	str	r6, [r5, #24]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 80017ba:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017be:	e9c5 4403 	strd	r4, r4, [r5, #12]
  hltdc.Init.AccumulatedVBP = 3;
 80017c2:	f8c5 9020 	str.w	r9, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80017c6:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017ca:	f009 faaf 	bl	800ad2c <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 240;
 80017ce:	23f0      	movs	r3, #240	; 0xf0
 80017d0:	930e      	str	r3, [sp, #56]	; 0x38
  pLayerCfg.ImageWidth = 240;
 80017d2:	9317      	str	r3, [sp, #92]	; 0x5c
  pLayerCfg.WindowY1 = 320;
 80017d4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80017d8:	9310      	str	r3, [sp, #64]	; 0x40
  pLayerCfg.ImageHeight = 320;
 80017da:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.Alpha = 255;
 80017dc:	23ff      	movs	r3, #255	; 0xff
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017de:	a90d      	add	r1, sp, #52	; 0x34
 80017e0:	4622      	mov	r2, r4
 80017e2:	4628      	mov	r0, r5
  pLayerCfg.Alpha = 255;
 80017e4:	9312      	str	r3, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017e6:	f44f 6680 	mov.w	r6, #1024	; 0x400
 80017ea:	2305      	movs	r3, #5
  LcdDrv = &ili9341_drv;
 80017ec:	4d22      	ldr	r5, [pc, #136]	; (8001878 <main+0x44c>)
  pLayerCfg.WindowX0 = 0;
 80017ee:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017f0:	e9cd 6314 	strd	r6, r3, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80017f4:	940f      	str	r4, [sp, #60]	; 0x3c
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017f6:	9711      	str	r7, [sp, #68]	; 0x44
  pLayerCfg.Alpha0 = 0;
 80017f8:	9413      	str	r4, [sp, #76]	; 0x4c
  pLayerCfg.FBStartAdress = 0;
 80017fa:	9416      	str	r4, [sp, #88]	; 0x58
  pLayerCfg.Backcolor.Blue = 0;
 80017fc:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001800:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001804:	f009 fb68 	bl	800aed8 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001808:	4b1c      	ldr	r3, [pc, #112]	; (800187c <main+0x450>)
 800180a:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 800180c:	681b      	ldr	r3, [r3, #0]
 800180e:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001810:	682b      	ldr	r3, [r5, #0]
 8001812:	68db      	ldr	r3, [r3, #12]
 8001814:	4798      	blx	r3
  MX_TouchGFX_Init();
 8001816:	f7fe ff45 	bl	80006a4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800181a:	f7fe ff41 	bl	80006a0 <MX_TouchGFX_PreOSInit>
  gyro_disable();
 800181e:	f7ff fd71 	bl	8001304 <gyro_disable>
  MEAS_GPIO_analog_init();         // Configure GPIOs in analog mode
 8001822:	f000 f945 	bl	8001ab0 <MEAS_GPIO_analog_init>
  MEAS_timer_init();               // Configure the timer
 8001826:	f000 f977 	bl	8001b18 <MEAS_timer_init>
  osKernelInitialize();
 800182a:	f00a ff8b 	bl	800c744 <osKernelInitialize>
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800182e:	4a14      	ldr	r2, [pc, #80]	; (8001880 <main+0x454>)
 8001830:	4639      	mov	r1, r7
 8001832:	4650      	mov	r0, sl
 8001834:	f00b f8c0 	bl	800c9b8 <osMessageQueueNew>
 8001838:	4b12      	ldr	r3, [pc, #72]	; (8001884 <main+0x458>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800183a:	4a13      	ldr	r2, [pc, #76]	; (8001888 <main+0x45c>)
  TimeoutQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &TimeoutQueue_attributes);
 800183c:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800183e:	4621      	mov	r1, r4
 8001840:	4812      	ldr	r0, [pc, #72]	; (800188c <main+0x460>)
 8001842:	f00a ffab 	bl	800c79c <osThreadNew>
 8001846:	4b12      	ldr	r3, [pc, #72]	; (8001890 <main+0x464>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001848:	4a12      	ldr	r2, [pc, #72]	; (8001894 <main+0x468>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800184a:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800184c:	4621      	mov	r1, r4
 800184e:	4812      	ldr	r0, [pc, #72]	; (8001898 <main+0x46c>)
 8001850:	f00a ffa4 	bl	800c79c <osThreadNew>
 8001854:	4b11      	ldr	r3, [pc, #68]	; (800189c <main+0x470>)
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001856:	4a12      	ldr	r2, [pc, #72]	; (80018a0 <main+0x474>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8001858:	4605      	mov	r5, r0
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 800185a:	4621      	mov	r1, r4
 800185c:	4811      	ldr	r0, [pc, #68]	; (80018a4 <main+0x478>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800185e:	601d      	str	r5, [r3, #0]
  TimeoutTaskHandle = osThreadNew(StartTimeoutTask, NULL, &TimeoutTask_attributes);
 8001860:	f00a ff9c 	bl	800c79c <osThreadNew>
 8001864:	4b10      	ldr	r3, [pc, #64]	; (80018a8 <main+0x47c>)
 8001866:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8001868:	f00a ff7e 	bl	800c768 <osKernelStart>
  while (1)
 800186c:	e7fe      	b.n	800186c <main+0x440>
 800186e:	bf00      	nop
 8001870:	20001940 	.word	0x20001940
 8001874:	40016800 	.word	0x40016800
 8001878:	200018d4 	.word	0x200018d4
 800187c:	20000018 	.word	0x20000018
 8001880:	0802b1d0 	.word	0x0802b1d0
 8001884:	200018d8 	.word	0x200018d8
 8001888:	0802b20c 	.word	0x0802b20c
 800188c:	08001299 	.word	0x08001299
 8001890:	200018e0 	.word	0x200018e0
 8001894:	0802b1ac 	.word	0x0802b1ac
 8001898:	080006b5 	.word	0x080006b5
 800189c:	200018d0 	.word	0x200018d0
 80018a0:	0802b1e8 	.word	0x0802b1e8
 80018a4:	080012a5 	.word	0x080012a5
 80018a8:	200018dc 	.word	0x200018dc

080018ac <IOE_Init>:
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop

080018b0 <IOE_ITConfig>:
 80018b0:	4770      	bx	lr
 80018b2:	bf00      	nop

080018b4 <IOE_Write>:
{
 80018b4:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018b6:	4c09      	ldr	r4, [pc, #36]	; (80018dc <IOE_Write+0x28>)
{
 80018b8:	b086      	sub	sp, #24
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018ba:	6824      	ldr	r4, [r4, #0]
 80018bc:	9402      	str	r4, [sp, #8]
{
 80018be:	4614      	mov	r4, r2
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80018c0:	2301      	movs	r3, #1
 80018c2:	f88d 4017 	strb.w	r4, [sp, #23]
 80018c6:	f10d 0417 	add.w	r4, sp, #23
 80018ca:	460a      	mov	r2, r1
 80018cc:	9301      	str	r3, [sp, #4]
 80018ce:	4601      	mov	r1, r0
 80018d0:	9400      	str	r4, [sp, #0]
 80018d2:	4803      	ldr	r0, [pc, #12]	; (80018e0 <IOE_Write+0x2c>)
 80018d4:	f008 f8e2 	bl	8009a9c <HAL_I2C_Mem_Write>
}
 80018d8:	b006      	add	sp, #24
 80018da:	bd10      	pop	{r4, pc}
 80018dc:	2000000c 	.word	0x2000000c
 80018e0:	200018ec 	.word	0x200018ec

080018e4 <IOE_Read>:
{
 80018e4:	b500      	push	{lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018e6:	4b0b      	ldr	r3, [pc, #44]	; (8001914 <IOE_Read+0x30>)
{
 80018e8:	b087      	sub	sp, #28
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018ea:	681b      	ldr	r3, [r3, #0]
 80018ec:	9302      	str	r3, [sp, #8]
{
 80018ee:	4684      	mov	ip, r0
 80018f0:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018f2:	2301      	movs	r3, #1
 80018f4:	f10d 0117 	add.w	r1, sp, #23
  uint8_t value = 0;
 80018f8:	2000      	movs	r0, #0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 80018fa:	e9cd 1300 	strd	r1, r3, [sp]
  uint8_t value = 0;
 80018fe:	f88d 0017 	strb.w	r0, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001902:	4661      	mov	r1, ip
 8001904:	4804      	ldr	r0, [pc, #16]	; (8001918 <IOE_Read+0x34>)
 8001906:	f008 f9bb 	bl	8009c80 <HAL_I2C_Mem_Read>
}
 800190a:	f89d 0017 	ldrb.w	r0, [sp, #23]
 800190e:	b007      	add	sp, #28
 8001910:	f85d fb04 	ldr.w	pc, [sp], #4
 8001914:	2000000c 	.word	0x2000000c
 8001918:	200018ec 	.word	0x200018ec

0800191c <IOE_ReadMultiple>:
{
 800191c:	b510      	push	{r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 800191e:	4c09      	ldr	r4, [pc, #36]	; (8001944 <IOE_ReadMultiple+0x28>)
{
 8001920:	b084      	sub	sp, #16
 8001922:	4684      	mov	ip, r0
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001924:	6820      	ldr	r0, [r4, #0]
 8001926:	9002      	str	r0, [sp, #8]
 8001928:	e9cd 2300 	strd	r2, r3, [sp]
 800192c:	4806      	ldr	r0, [pc, #24]	; (8001948 <IOE_ReadMultiple+0x2c>)
 800192e:	460a      	mov	r2, r1
 8001930:	2301      	movs	r3, #1
 8001932:	4661      	mov	r1, ip
 8001934:	f008 f9a4 	bl	8009c80 <HAL_I2C_Mem_Read>
}
 8001938:	3800      	subs	r0, #0
 800193a:	bf18      	it	ne
 800193c:	2001      	movne	r0, #1
 800193e:	b004      	add	sp, #16
 8001940:	bd10      	pop	{r4, pc}
 8001942:	bf00      	nop
 8001944:	2000000c 	.word	0x2000000c
 8001948:	200018ec 	.word	0x200018ec

0800194c <IOE_Delay>:
 800194c:	f007 bb9a 	b.w	8009084 <HAL_Delay>

08001950 <LCD_IO_Init>:
{
 8001950:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001952:	4806      	ldr	r0, [pc, #24]	; (800196c <LCD_IO_Init+0x1c>)
 8001954:	2200      	movs	r2, #0
 8001956:	2104      	movs	r1, #4
 8001958:	f007 fd72 	bl	8009440 <HAL_GPIO_WritePin>
}
 800195c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001960:	4802      	ldr	r0, [pc, #8]	; (800196c <LCD_IO_Init+0x1c>)
 8001962:	2201      	movs	r2, #1
 8001964:	2104      	movs	r1, #4
 8001966:	f007 bd6b 	b.w	8009440 <HAL_GPIO_WritePin>
 800196a:	bf00      	nop
 800196c:	40020800 	.word	0x40020800

08001970 <LCD_IO_WriteData>:
{
 8001970:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001972:	4d10      	ldr	r5, [pc, #64]	; (80019b4 <LCD_IO_WriteData+0x44>)
{
 8001974:	b083      	sub	sp, #12
 8001976:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001978:	2201      	movs	r2, #1
 800197a:	480f      	ldr	r0, [pc, #60]	; (80019b8 <LCD_IO_WriteData+0x48>)
 800197c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001980:	f007 fd5e 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001984:	4628      	mov	r0, r5
 8001986:	2200      	movs	r2, #0
 8001988:	2104      	movs	r1, #4
 800198a:	f007 fd59 	bl	8009440 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800198e:	4b0b      	ldr	r3, [pc, #44]	; (80019bc <LCD_IO_WriteData+0x4c>)
 8001990:	480b      	ldr	r0, [pc, #44]	; (80019c0 <LCD_IO_WriteData+0x50>)
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	f8ad 4006 	strh.w	r4, [sp, #6]
 8001998:	f10d 0106 	add.w	r1, sp, #6
 800199c:	2201      	movs	r2, #1
 800199e:	f00a f8f5 	bl	800bb8c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019a2:	2201      	movs	r2, #1
 80019a4:	2104      	movs	r1, #4
 80019a6:	4628      	mov	r0, r5
}
 80019a8:	b003      	add	sp, #12
 80019aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019ae:	f007 bd47 	b.w	8009440 <HAL_GPIO_WritePin>
 80019b2:	bf00      	nop
 80019b4:	40020800 	.word	0x40020800
 80019b8:	40020c00 	.word	0x40020c00
 80019bc:	20000010 	.word	0x20000010
 80019c0:	20001a1c 	.word	0x20001a1c

080019c4 <LCD_IO_WriteReg>:
{
 80019c4:	b530      	push	{r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019c6:	4d10      	ldr	r5, [pc, #64]	; (8001a08 <LCD_IO_WriteReg+0x44>)
{
 80019c8:	b083      	sub	sp, #12
 80019ca:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80019cc:	2200      	movs	r2, #0
 80019ce:	480f      	ldr	r0, [pc, #60]	; (8001a0c <LCD_IO_WriteReg+0x48>)
 80019d0:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019d4:	f007 fd34 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d8:	4628      	mov	r0, r5
 80019da:	2200      	movs	r2, #0
 80019dc:	2104      	movs	r1, #4
 80019de:	f007 fd2f 	bl	8009440 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019e2:	4b0b      	ldr	r3, [pc, #44]	; (8001a10 <LCD_IO_WriteReg+0x4c>)
 80019e4:	480b      	ldr	r0, [pc, #44]	; (8001a14 <LCD_IO_WriteReg+0x50>)
 80019e6:	681b      	ldr	r3, [r3, #0]
  SPI5_Write(Reg);
 80019e8:	f8ad 4006 	strh.w	r4, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 80019ec:	f10d 0106 	add.w	r1, sp, #6
 80019f0:	2201      	movs	r2, #1
 80019f2:	f00a f8cb 	bl	800bb8c <HAL_SPI_Transmit>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f6:	2201      	movs	r2, #1
 80019f8:	2104      	movs	r1, #4
 80019fa:	4628      	mov	r0, r5
}
 80019fc:	b003      	add	sp, #12
 80019fe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a02:	f007 bd1d 	b.w	8009440 <HAL_GPIO_WritePin>
 8001a06:	bf00      	nop
 8001a08:	40020800 	.word	0x40020800
 8001a0c:	40020c00 	.word	0x40020c00
 8001a10:	20000010 	.word	0x20000010
 8001a14:	20001a1c 	.word	0x20001a1c

08001a18 <LCD_IO_ReadData>:
{
 8001a18:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1c:	4e19      	ldr	r6, [pc, #100]	; (8001a84 <LCD_IO_ReadData+0x6c>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a1e:	4f1a      	ldr	r7, [pc, #104]	; (8001a88 <LCD_IO_ReadData+0x70>)
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a20:	f8df 9068 	ldr.w	r9, [pc, #104]	; 8001a8c <LCD_IO_ReadData+0x74>
 8001a24:	f8df 8068 	ldr.w	r8, [pc, #104]	; 8001a90 <LCD_IO_ReadData+0x78>
{
 8001a28:	b083      	sub	sp, #12
 8001a2a:	460c      	mov	r4, r1
 8001a2c:	4605      	mov	r5, r0
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a2e:	2200      	movs	r2, #0
 8001a30:	4630      	mov	r0, r6
 8001a32:	2104      	movs	r1, #4
 8001a34:	f007 fd04 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a38:	4638      	mov	r0, r7
 8001a3a:	2200      	movs	r2, #0
 8001a3c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a40:	f007 fcfe 	bl	8009440 <HAL_GPIO_WritePin>
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001a44:	f8d9 3000 	ldr.w	r3, [r9]
 8001a48:	f8ad 5004 	strh.w	r5, [sp, #4]
 8001a4c:	a901      	add	r1, sp, #4
 8001a4e:	2201      	movs	r2, #1
 8001a50:	4640      	mov	r0, r8
 8001a52:	f00a f89b 	bl	800bb8c <HAL_SPI_Transmit>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a56:	f8d9 3000 	ldr.w	r3, [r9]
 8001a5a:	4622      	mov	r2, r4
 8001a5c:	a901      	add	r1, sp, #4
 8001a5e:	4640      	mov	r0, r8
 8001a60:	f00a fb3c 	bl	800c0dc <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a64:	4638      	mov	r0, r7
 8001a66:	2201      	movs	r2, #1
 8001a68:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a6c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a6e:	f007 fce7 	bl	8009440 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a72:	4630      	mov	r0, r6
 8001a74:	2201      	movs	r2, #1
 8001a76:	2104      	movs	r1, #4
 8001a78:	f007 fce2 	bl	8009440 <HAL_GPIO_WritePin>
}
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	b003      	add	sp, #12
 8001a80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001a84:	40020800 	.word	0x40020800
 8001a88:	40020c00 	.word	0x40020c00
 8001a8c:	20000010 	.word	0x20000010
 8001a90:	20001a1c 	.word	0x20001a1c

08001a94 <LCD_Delay>:
  HAL_Delay(Delay);
 8001a94:	f007 baf6 	b.w	8009084 <HAL_Delay>

08001a98 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8001a98:	4b03      	ldr	r3, [pc, #12]	; (8001aa8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 8001a9a:	6802      	ldr	r2, [r0, #0]
 8001a9c:	429a      	cmp	r2, r3
 8001a9e:	d000      	beq.n	8001aa2 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8001aa0:	4770      	bx	lr
    HAL_IncTick();
 8001aa2:	f007 badd 	b.w	8009060 <HAL_IncTick>
 8001aa6:	bf00      	nop
 8001aa8:	40001000 	.word	0x40001000

08001aac <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8001aac:	4770      	bx	lr
 8001aae:	bf00      	nop

08001ab0 <MEAS_GPIO_analog_init>:
 * - ADC3_IN4 = GPIO PF6 (Pad left)
 * - ADC123_IN13 = GPIO PC3 (Pad right)
 * - ADC3_IN6 = GPIO PF8 (Hall sensor Left)
 * - ADC123_IN11 = GPIO PC1 (Hall sensor Right)
 *****************************************************************************/
void MEAS_GPIO_analog_init(void) {
 8001ab0:	b410      	push	{r4}
 8001ab2:	b083      	sub	sp, #12
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001ab4:	4b15      	ldr	r3, [pc, #84]	; (8001b0c <MEAS_GPIO_analog_init+0x5c>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ab6:	4916      	ldr	r1, [pc, #88]	; (8001b10 <MEAS_GPIO_analog_init+0x60>)
    __HAL_RCC_GPIOF_CLK_ENABLE();  // Enable Clock for GPIO port F
 8001ab8:	2400      	movs	r4, #0
 8001aba:	9400      	str	r4, [sp, #0]
 8001abc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001abe:	f042 0220 	orr.w	r2, r2, #32
 8001ac2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ac4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ac6:	f002 0220 	and.w	r2, r2, #32
 8001aca:	9200      	str	r2, [sp, #0]
 8001acc:	9a00      	ldr	r2, [sp, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ace:	6808      	ldr	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001ad0:	4a10      	ldr	r2, [pc, #64]	; (8001b14 <MEAS_GPIO_analog_init+0x64>)
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER6_Pos);  // Analog PF6 = ADC3_IN4
 8001ad2:	f440 5040 	orr.w	r0, r0, #12288	; 0x3000
 8001ad6:	6008      	str	r0, [r1, #0]
    GPIOF->MODER |= (3UL << GPIO_MODER_MODER8_Pos);  // Analog PF8 = ADC3_IN6
 8001ad8:	6808      	ldr	r0, [r1, #0]
 8001ada:	f440 3040 	orr.w	r0, r0, #196608	; 0x30000
 8001ade:	6008      	str	r0, [r1, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();  // Enable Clock for GPIO port C
 8001ae0:	9401      	str	r4, [sp, #4]
 8001ae2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001ae4:	f041 0104 	orr.w	r1, r1, #4
 8001ae8:	6319      	str	r1, [r3, #48]	; 0x30
 8001aea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001aec:	f003 0304 	and.w	r3, r3, #4
 8001af0:	9301      	str	r3, [sp, #4]
 8001af2:	9b01      	ldr	r3, [sp, #4]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER3_Pos);  // Analog PC3 = ADC3_IN13
 8001af4:	6813      	ldr	r3, [r2, #0]
 8001af6:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 8001afa:	6013      	str	r3, [r2, #0]
    GPIOC->MODER |= (3UL << GPIO_MODER_MODER1_Pos);  // Analog PC1 = ADC3_IN11
 8001afc:	6813      	ldr	r3, [r2, #0]
 8001afe:	f043 030c 	orr.w	r3, r3, #12
 8001b02:	6013      	str	r3, [r2, #0]
}
 8001b04:	b003      	add	sp, #12
 8001b06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b0a:	4770      	bx	lr
 8001b0c:	40023800 	.word	0x40023800
 8001b10:	40021400 	.word	0x40021400
 8001b14:	40020800 	.word	0x40020800

08001b18 <MEAS_timer_init>:
/** ***************************************************************************
 * @brief Configure the timer to trigger the ADC(s)
 *
 * @note For debugging purposes the timer interrupt might be useful.
 *****************************************************************************/
void MEAS_timer_init(void) {
 8001b18:	b410      	push	{r4}
 8001b1a:	b083      	sub	sp, #12
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b1c:	4a0e      	ldr	r2, [pc, #56]	; (8001b58 <MEAS_timer_init+0x40>)
 8001b1e:	2000      	movs	r0, #0
 8001b20:	9001      	str	r0, [sp, #4]
 8001b22:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8001b24:	f041 0101 	orr.w	r1, r1, #1
 8001b28:	6411      	str	r1, [r2, #64]	; 0x40
 8001b2a:	6c12      	ldr	r2, [r2, #64]	; 0x40
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b2c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b30:	f002 0201 	and.w	r2, r2, #1
 8001b34:	9201      	str	r2, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b36:	f243 3144 	movw	r1, #13124	; 0x3344
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b3a:	2209      	movs	r2, #9
    __HAL_RCC_TIM2_CLK_ENABLE();  // Enable Clock for TIM2
 8001b3c:	9c01      	ldr	r4, [sp, #4]
    TIM2->PSC = TIM_PRESCALE;     // Prescaler for clock freq. = 1MHz
 8001b3e:	6299      	str	r1, [r3, #40]	; 0x28
    TIM2->ARR = TIM_TOP;          // Auto reload = counter top value
 8001b40:	62da      	str	r2, [r3, #44]	; 0x2c
    TIM2->CR2 |= TIM_CR2_MMS_1;   // TRGO on update
 8001b42:	685a      	ldr	r2, [r3, #4]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001b44:	4905      	ldr	r1, [pc, #20]	; (8001b5c <MEAS_timer_init+0x44>)
 8001b46:	f042 0220 	orr.w	r2, r2, #32
 8001b4a:	605a      	str	r2, [r3, #4]
 8001b4c:	f881 031c 	strb.w	r0, [r1, #796]	; 0x31c
//    NVIC_ClearPendingIRQ(TIM2_IRQn);  // Clear pending timer interrupt
//    NVIC_EnableIRQ(TIM2_IRQn);        // Enable timer interrupt in the NVIC
//    TIM2->DIER |= TIM_DIER_UIE; // Enable update interrupt
//    NVIC_SetPriority(TIM2_IRQn, 2); // Set priority to a suitable value

}
 8001b50:	b003      	add	sp, #12
 8001b52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001b56:	4770      	bx	lr
 8001b58:	40023800 	.word	0x40023800
 8001b5c:	e000e100 	.word	0xe000e100

08001b60 <TIM2_IRQHandler>:
//  /* USER CODE END TIM2_IRQn 0 */
////  HAL_TIM_IRQHandler(&htim2);
//  /* USER CODE BEGIN TIM2_IRQn 1 */
//  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
  /* USER CODE END TIM2_IRQn 1 */
}
 8001b60:	4770      	bx	lr
 8001b62:	bf00      	nop

08001b64 <MEAS_ADC3_scan_init>:
 * @n As each conversion triggers the DMA, the number of transfers is doubled.
 * @n The DMA triggers the transfer complete interrupt when all data is ready.
 * @n The inputs used are ADC3_IN4 = GPIO PF6 (Pad Right), ADC3_IN13 = GPIO PC3
 *(Pad Left), ADC_IN6 = GPIO PF8 (HS-Right), ADC3_IN11 = GPIO PC1 (HS-Left)
 *****************************************************************************/
void MEAS_ADC3_scan_init(void) {
 8001b64:	b410      	push	{r4}
 8001b66:	b083      	sub	sp, #12
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b68:	4a3b      	ldr	r2, [pc, #236]	; (8001c58 <MEAS_ADC3_scan_init+0xf4>)
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b6a:	4b3c      	ldr	r3, [pc, #240]	; (8001c5c <MEAS_ADC3_scan_init+0xf8>)
 8001b6c:	4c3c      	ldr	r4, [pc, #240]	; (8001c60 <MEAS_ADC3_scan_init+0xfc>)
    __HAL_RCC_ADC3_CLK_ENABLE();               // Enable Clock for ADC3
 8001b6e:	2000      	movs	r0, #0
 8001b70:	9000      	str	r0, [sp, #0]
 8001b72:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8001b74:	f441 6180 	orr.w	r1, r1, #1024	; 0x400
 8001b78:	6451      	str	r1, [r2, #68]	; 0x44
 8001b7a:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8001b7c:	f401 6180 	and.w	r1, r1, #1024	; 0x400
 8001b80:	9100      	str	r1, [sp, #0]
 8001b82:	9900      	ldr	r1, [sp, #0]
    ADC3->SQR1 |= (3UL << ADC_SQR1_L_Pos);     // Convert 4 inputs (4-1)
 8001b84:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001b86:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8001b8a:	62d9      	str	r1, [r3, #44]	; 0x2c
    ADC3->SQR3 |= (4UL << ADC_SQR3_SQ1_Pos);   // Input 4 = first conversion
 8001b8c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001b8e:	f041 0104 	orr.w	r1, r1, #4
 8001b92:	6359      	str	r1, [r3, #52]	; 0x34
    ADC3->SQR3 |= (13UL << ADC_SQR3_SQ2_Pos);  // Input 13 = second conversion
 8001b94:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001b96:	f441 71d0 	orr.w	r1, r1, #416	; 0x1a0
 8001b9a:	6359      	str	r1, [r3, #52]	; 0x34
    ADC3->SQR3 |= (6UL << ADC_SQR3_SQ3_Pos);   // Input 6 = third conversion
 8001b9c:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001b9e:	f441 51c0 	orr.w	r1, r1, #6144	; 0x1800
 8001ba2:	6359      	str	r1, [r3, #52]	; 0x34
    ADC3->SQR3 |= (11UL << ADC_SQR3_SQ4_Pos);  // Input 11 = fourth conversion
 8001ba4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001ba6:	f441 21b0 	orr.w	r1, r1, #360448	; 0x58000
 8001baa:	6359      	str	r1, [r3, #52]	; 0x34
    ADC3->CR1 |= ADC_CR1_SCAN;                 // Enable scan mode
 8001bac:	6859      	ldr	r1, [r3, #4]
 8001bae:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001bb2:	6059      	str	r1, [r3, #4]
    ADC3->CR2 |= (1UL << ADC_CR2_EXTEN_Pos);   // En. ext. trigger on rising e.
 8001bb4:	6899      	ldr	r1, [r3, #8]
 8001bb6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001bba:	6099      	str	r1, [r3, #8]
    ADC3->CR2 |= (6UL << ADC_CR2_EXTSEL_Pos);  // Timer 2 TRGO event
 8001bbc:	6899      	ldr	r1, [r3, #8]
 8001bbe:	f041 61c0 	orr.w	r1, r1, #100663296	; 0x6000000
 8001bc2:	6099      	str	r1, [r3, #8]
    ADC3->CR2 |= ADC_CR2_DMA;                  // Enable DMA mode
 8001bc4:	6899      	ldr	r1, [r3, #8]
 8001bc6:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001bca:	6099      	str	r1, [r3, #8]
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001bcc:	9001      	str	r0, [sp, #4]
 8001bce:	6b13      	ldr	r3, [r2, #48]	; 0x30
    // set DMA to highest priority
    NVIC_SetPriority(DMA2_Stream1_IRQn, 0);
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001bd0:	4924      	ldr	r1, [pc, #144]	; (8001c64 <MEAS_ADC3_scan_init+0x100>)
    __HAL_RCC_DMA2_CLK_ENABLE();               // Enable Clock for DMA2
 8001bd2:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001bd6:	6313      	str	r3, [r2, #48]	; 0x30
 8001bd8:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001bda:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8001bde:	9301      	str	r3, [sp, #4]
 8001be0:	9b01      	ldr	r3, [sp, #4]
 8001be2:	f884 0339 	strb.w	r0, [r4, #825]	; 0x339
    DMA2_Stream1->CR &= ~DMA_SxCR_EN;          // Disable the DMA stream 1
 8001be6:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8001be8:	f023 0301 	bic.w	r3, r3, #1
 8001bec:	628b      	str	r3, [r1, #40]	; 0x28
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001bee:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8001bf0:	07d8      	lsls	r0, r3, #31
 8001bf2:	d509      	bpl.n	8001c08 <MEAS_ADC3_scan_init+0xa4>
 8001bf4:	4c1c      	ldr	r4, [pc, #112]	; (8001c68 <MEAS_ADC3_scan_init+0x104>)
 8001bf6:	6823      	ldr	r3, [r4, #0]
 8001bf8:	3301      	adds	r3, #1
 8001bfa:	6a8a      	ldr	r2, [r1, #40]	; 0x28
 8001bfc:	07d2      	lsls	r2, r2, #31
    {
    	static int i = 0;
    	i++;
 8001bfe:	4618      	mov	r0, r3
    while (DMA2_Stream1->CR & DMA_SxCR_EN)
 8001c00:	f103 0301 	add.w	r3, r3, #1
 8001c04:	d4f9      	bmi.n	8001bfa <MEAS_ADC3_scan_init+0x96>
 8001c06:	6020      	str	r0, [r4, #0]
    }  // Wait for DMA to finish
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c08:	4b16      	ldr	r3, [pc, #88]	; (8001c64 <MEAS_ADC3_scan_init+0x100>)
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
    DMA2_Stream1->NDTR =
        INPUT_COUNT * ADC_NUMS;  // Number of data items to transfer
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c0a:	4818      	ldr	r0, [pc, #96]	; (8001c6c <MEAS_ADC3_scan_init+0x108>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c0c:	689a      	ldr	r2, [r3, #8]
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c0e:	4918      	ldr	r1, [pc, #96]	; (8001c70 <MEAS_ADC3_scan_init+0x10c>)
    DMA2->LIFCR |= DMA_LIFCR_CTCIF1;  // Clear transfer complete interrupt fl.
 8001c10:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001c14:	609a      	str	r2, [r3, #8]
    DMA2_Stream1->CR |= (2UL << DMA_SxCR_CHSEL_Pos);  // Select channel 2
 8001c16:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c18:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c1c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PL_0;                // Priority high
 8001c1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c20:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8001c24:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MSIZE_1;  // Memory data size = 32 bit
 8001c26:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c28:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001c2c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_PSIZE_1;  // Peripheral data size = 32 bit
 8001c2e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c30:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001c34:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_MINC;     // Increment memory address pointer
 8001c36:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8001c38:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001c3c:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c3e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c40:	f44f 7480 	mov.w	r4, #256	; 0x100
    DMA2_Stream1->CR |= DMA_SxCR_TCIE;     // Transfer complete interrupt enable
 8001c44:	f042 0210 	orr.w	r2, r2, #16
 8001c48:	629a      	str	r2, [r3, #40]	; 0x28
    DMA2_Stream1->NDTR =
 8001c4a:	62dc      	str	r4, [r3, #44]	; 0x2c
    DMA2_Stream1->PAR = (uint32_t)&ADC3->DR;     // Peripheral register address
 8001c4c:	6318      	str	r0, [r3, #48]	; 0x30
    DMA2_Stream1->M0AR = (uint32_t)ADC_samples;  // Buffer memory loc. address
 8001c4e:	6359      	str	r1, [r3, #52]	; 0x34


}
 8001c50:	b003      	add	sp, #12
 8001c52:	f85d 4b04 	ldr.w	r4, [sp], #4
 8001c56:	4770      	bx	lr
 8001c58:	40023800 	.word	0x40023800
 8001c5c:	40012200 	.word	0x40012200
 8001c60:	e000e100 	.word	0xe000e100
 8001c64:	40026400 	.word	0x40026400
 8001c68:	20001e7c 	.word	0x20001e7c
 8001c6c:	4001224c 	.word	0x4001224c
 8001c70:	20001a74 	.word	0x20001a74

08001c74 <DMA2_Stream1_IRQHandler>:
{
//	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_SET);
//	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4);

	static int debug = 0;
    debug++;
 8001c74:	4927      	ldr	r1, [pc, #156]	; (8001d14 <DMA2_Stream1_IRQHandler+0xa0>)

	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c76:	4a28      	ldr	r2, [pc, #160]	; (8001d18 <DMA2_Stream1_IRQHandler+0xa4>)
    debug++;
 8001c78:	680b      	ldr	r3, [r1, #0]
 8001c7a:	3301      	adds	r3, #1
 8001c7c:	600b      	str	r3, [r1, #0]
	if (DMA2->LISR & DMA_LISR_TCIF1) // Stream1 transfer compl. interrupt f.
 8001c7e:	6813      	ldr	r3, [r2, #0]
 8001c80:	051b      	lsls	r3, r3, #20
 8001c82:	d400      	bmi.n	8001c86 <DMA2_Stream1_IRQHandler+0x12>
 8001c84:	4770      	bx	lr
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c86:	4b25      	ldr	r3, [pc, #148]	; (8001d1c <DMA2_Stream1_IRQHandler+0xa8>)
 8001c88:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
{
 8001c8c:	b430      	push	{r4, r5}
 8001c8e:	f8c3 1084 	str.w	r1, [r3, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001c92:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c96:	f3bf 8f6f 	isb	sy
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c9a:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
    {
        // Disable DMA interrupt in the NVIC
    	NVIC_DisableIRQ(DMA2_Stream1_IRQn);
        NVIC_ClearPendingIRQ(DMA2_Stream1_IRQn);  // clr pending DMA interrupt
        DMA2_Stream1->CR &= ~DMA_SxCR_EN;         // Disable the DMA
 8001c9e:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001ca0:	f023 0301 	bic.w	r3, r3, #1
 8001ca4:	6293      	str	r3, [r2, #40]	; 0x28
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001ca6:	6a93      	ldr	r3, [r2, #40]	; 0x28
 8001ca8:	07d8      	lsls	r0, r3, #31
 8001caa:	d509      	bpl.n	8001cc0 <DMA2_Stream1_IRQHandler+0x4c>
 8001cac:	4c1c      	ldr	r4, [pc, #112]	; (8001d20 <DMA2_Stream1_IRQHandler+0xac>)
 8001cae:	6823      	ldr	r3, [r4, #0]
 8001cb0:	3301      	adds	r3, #1
 8001cb2:	6a91      	ldr	r1, [r2, #40]	; 0x28
 8001cb4:	07c9      	lsls	r1, r1, #31
        {
        	static int j = 0;
        	    j++;
 8001cb6:	4618      	mov	r0, r3
        while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001cb8:	f103 0301 	add.w	r3, r3, #1
 8001cbc:	d4f9      	bmi.n	8001cb2 <DMA2_Stream1_IRQHandler+0x3e>
 8001cbe:	6020      	str	r0, [r4, #0]
        }


        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cc0:	4815      	ldr	r0, [pc, #84]	; (8001d18 <DMA2_Stream1_IRQHandler+0xa4>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cc2:	4918      	ldr	r1, [pc, #96]	; (8001d24 <DMA2_Stream1_IRQHandler+0xb0>)
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001cc4:	6882      	ldr	r2, [r0, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode

        // copy data from DMA buffer to ADC_samples

        MEAS_ADC_reset();
        MEAS_data_ready = 1;
 8001cc6:	4c18      	ldr	r4, [pc, #96]	; (8001d28 <DMA2_Stream1_IRQHandler+0xb4>)
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cc8:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
        DMA2->LIFCR |= DMA_LIFCR_CTCIF1;// clr transfer complete interrupt fl.
 8001ccc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001cd0:	6082      	str	r2, [r0, #8]
        TIM2->CR1 &= ~TIM_CR1_CEN;   // Disable timer
 8001cd2:	681a      	ldr	r2, [r3, #0]
 8001cd4:	f022 0201 	bic.w	r2, r2, #1
 8001cd8:	601a      	str	r2, [r3, #0]
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cda:	6888      	ldr	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cdc:	4a13      	ldr	r2, [pc, #76]	; (8001d2c <DMA2_Stream1_IRQHandler+0xb8>)
        ADC3->CR2 &= ~ADC_CR2_ADON;  // Disable ADC3
 8001cde:	f020 0001 	bic.w	r0, r0, #1
 8001ce2:	6088      	str	r0, [r1, #8]
        ADC3->CR2 &= ~ADC_CR2_DMA;   // Disable DMA mode
 8001ce4:	6888      	ldr	r0, [r1, #8]
 8001ce6:	f420 7080 	bic.w	r0, r0, #256	; 0x100
 8001cea:	6088      	str	r0, [r1, #8]
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cec:	6a51      	ldr	r1, [r2, #36]	; 0x24
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4);
 8001cee:	4810      	ldr	r0, [pc, #64]	; (8001d30 <DMA2_Stream1_IRQHandler+0xbc>)
    RCC->APB2RSTR |= RCC_APB2RSTR_ADCRST;   // Reset ADCs
 8001cf0:	f441 7180 	orr.w	r1, r1, #256	; 0x100
 8001cf4:	6251      	str	r1, [r2, #36]	; 0x24
    RCC->APB2RSTR &= ~RCC_APB2RSTR_ADCRST;  // Release reset of ADCs
 8001cf6:	6a51      	ldr	r1, [r2, #36]	; 0x24
 8001cf8:	f421 7180 	bic.w	r1, r1, #256	; 0x100
 8001cfc:	6251      	str	r1, [r2, #36]	; 0x24
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001cfe:	681a      	ldr	r2, [r3, #0]
        MEAS_data_ready = 1;
 8001d00:	2501      	movs	r5, #1
    TIM2->CR1 &= ~TIM_CR1_CEN;              // Disable timer
 8001d02:	f022 0201 	bic.w	r2, r2, #1
 8001d06:	601a      	str	r2, [r3, #0]
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4);
 8001d08:	2110      	movs	r1, #16
        MEAS_data_ready = 1;
 8001d0a:	6025      	str	r5, [r4, #0]
    }
//	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_4, GPIO_PIN_RESET);
}
 8001d0c:	bc30      	pop	{r4, r5}
        HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_4);
 8001d0e:	f007 bb9b 	b.w	8009448 <HAL_GPIO_TogglePin>
 8001d12:	bf00      	nop
 8001d14:	20001e78 	.word	0x20001e78
 8001d18:	40026400 	.word	0x40026400
 8001d1c:	e000e100 	.word	0xe000e100
 8001d20:	20001e80 	.word	0x20001e80
 8001d24:	40012200 	.word	0x40012200
 8001d28:	20001e74 	.word	0x20001e74
 8001d2c:	40023800 	.word	0x40023800
 8001d30:	40020800 	.word	0x40020800

08001d34 <MEAS_start_measure>:
 *
 * @note The result is stored alternated e.g. every 4th is together.
 *****************************************************************************/
// Start the measurement procedure
uint32_t* MEAS_start_measure(void)
{
 8001d34:	b510      	push	{r4, lr}
        buffer[i] = 0;
 8001d36:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001d3a:	2100      	movs	r1, #0
 8001d3c:	481f      	ldr	r0, [pc, #124]	; (8001dbc <MEAS_start_measure+0x88>)
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d3e:	4c20      	ldr	r4, [pc, #128]	; (8001dc0 <MEAS_start_measure+0x8c>)
        buffer[i] = 0;
 8001d40:	f028 f80d 	bl	8029d5e <memset>

	//works
	MEAS_Buffer_reset(INPUT_COUNT, ADC_samples);

    //
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_SET);
 8001d44:	2201      	movs	r2, #1
 8001d46:	2104      	movs	r1, #4
 8001d48:	481e      	ldr	r0, [pc, #120]	; (8001dc4 <MEAS_start_measure+0x90>)
 8001d4a:	f007 fb79 	bl	8009440 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001d4e:	2001      	movs	r0, #1
 8001d50:	f007 f998 	bl	8009084 <HAL_Delay>
	MEAS_ADC3_scan_init();
 8001d54:	f7ff ff06 	bl	8001b64 <MEAS_ADC3_scan_init>
	HAL_GPIO_WritePin(GPIOG, GPIO_PIN_2, GPIO_PIN_RESET);
 8001d58:	481a      	ldr	r0, [pc, #104]	; (8001dc4 <MEAS_start_measure+0x90>)
 8001d5a:	2200      	movs	r2, #0
 8001d5c:	2104      	movs	r1, #4
 8001d5e:	f007 fb6f 	bl	8009440 <HAL_GPIO_WritePin>
	//


	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_SET);
 8001d62:	2201      	movs	r2, #1
 8001d64:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001d68:	4817      	ldr	r0, [pc, #92]	; (8001dc8 <MEAS_start_measure+0x94>)
 8001d6a:	f007 fb69 	bl	8009440 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8001d6e:	2001      	movs	r0, #1
 8001d70:	f007 f988 	bl	8009084 <HAL_Delay>
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d74:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001d76:	4a15      	ldr	r2, [pc, #84]	; (8001dcc <MEAS_start_measure+0x98>)
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d78:	4915      	ldr	r1, [pc, #84]	; (8001dd0 <MEAS_start_measure+0x9c>)
 8001d7a:	f04f 7000 	mov.w	r0, #33554432	; 0x2000000
    DMA2_Stream1->CR |= DMA_SxCR_EN;          // Enable DMA
 8001d7e:	f043 0301 	orr.w	r3, r3, #1
 8001d82:	62a3      	str	r3, [r4, #40]	; 0x28
 8001d84:	f8c2 0184 	str.w	r0, [r2, #388]	; 0x184
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d88:	6050      	str	r0, [r2, #4]
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d8a:	688b      	ldr	r3, [r1, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d8c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
    ADC3->CR2 |= ADC_CR2_ADON;          // Enable ADC3
 8001d90:	f043 0301 	orr.w	r3, r3, #1
 8001d94:	608b      	str	r3, [r1, #8]
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d96:	6813      	ldr	r3, [r2, #0]
    MEAS_ADC3_scan_start();
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001d98:	f100 5078 	add.w	r0, r0, #1040187392	; 0x3e000000
    TIM2->CR1 |= TIM_CR1_CEN;           // Enable timer
 8001d9c:	f043 0301 	orr.w	r3, r3, #1
 8001da0:	6013      	str	r3, [r2, #0]
    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001da2:	f500 3001 	add.w	r0, r0, #132096	; 0x20400
 8001da6:	2200      	movs	r2, #0
 8001da8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001dac:	f007 fb48 	bl	8009440 <HAL_GPIO_WritePin>

    while (DMA2_Stream1->CR & DMA_SxCR_EN)	  // Wait for DMA to finish
 8001db0:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8001db2:	07db      	lsls	r3, r3, #31
 8001db4:	d4fc      	bmi.n	8001db0 <MEAS_start_measure+0x7c>
	{

	}

     return ADC_samples;
}
 8001db6:	4801      	ldr	r0, [pc, #4]	; (8001dbc <MEAS_start_measure+0x88>)
 8001db8:	bd10      	pop	{r4, pc}
 8001dba:	bf00      	nop
 8001dbc:	20001a74 	.word	0x20001a74
 8001dc0:	40026400 	.word	0x40026400
 8001dc4:	40021800 	.word	0x40021800
 8001dc8:	40020400 	.word	0x40020400
 8001dcc:	e000e100 	.word	0xe000e100
 8001dd0:	40012200 	.word	0x40012200

08001dd4 <MEAS_get_num_of_chan>:
 * @return Number of channels
 *****************************************************************************/
uint8_t MEAS_get_num_of_chan(void)
{
	return INPUT_COUNT;
}
 8001dd4:	2004      	movs	r0, #4
 8001dd6:	4770      	bx	lr

08001dd8 <MEAS_get_num_of_samples>:
 * @return Number of samples
 *****************************************************************************/
uint8_t MEAS_get_num_of_samples(void)
{
	return ADC_NUMS;
}
 8001dd8:	2040      	movs	r0, #64	; 0x40
 8001dda:	4770      	bx	lr

08001ddc <MEAS_get_samp_freq>:
 * @return Sampling frequency
 *****************************************************************************/
uint16_t MEAS_get_samp_freq(void)
{
	return ADC_FS;
}
 8001ddc:	f44f 7020 	mov.w	r0, #640	; 0x280
 8001de0:	4770      	bx	lr
 8001de2:	bf00      	nop

08001de4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001de4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001de6:	4b0e      	ldr	r3, [pc, #56]	; (8001e20 <HAL_MspInit+0x3c>)
 8001de8:	2200      	movs	r2, #0
 8001dea:	9200      	str	r2, [sp, #0]
 8001dec:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001dee:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001df2:	6459      	str	r1, [r3, #68]	; 0x44
 8001df4:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8001df6:	f400 4080 	and.w	r0, r0, #16384	; 0x4000
 8001dfa:	9000      	str	r0, [sp, #0]
 8001dfc:	9800      	ldr	r0, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001dfe:	9201      	str	r2, [sp, #4]
 8001e00:	6c18      	ldr	r0, [r3, #64]	; 0x40
 8001e02:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8001e06:	6418      	str	r0, [r3, #64]	; 0x40
 8001e08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e0e:	9301      	str	r3, [sp, #4]
 8001e10:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e12:	210f      	movs	r1, #15
 8001e14:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001e18:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001e1a:	f007 b957 	b.w	80090cc <HAL_NVIC_SetPriority>
 8001e1e:	bf00      	nop
 8001e20:	40023800 	.word	0x40023800

08001e24 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001e24:	4b0b      	ldr	r3, [pc, #44]	; (8001e54 <HAL_CRC_MspInit+0x30>)
 8001e26:	6802      	ldr	r2, [r0, #0]
 8001e28:	429a      	cmp	r2, r3
 8001e2a:	d000      	beq.n	8001e2e <HAL_CRC_MspInit+0xa>
 8001e2c:	4770      	bx	lr
{
 8001e2e:	b082      	sub	sp, #8
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001e30:	2200      	movs	r2, #0
 8001e32:	9201      	str	r2, [sp, #4]
 8001e34:	f8d3 2830 	ldr.w	r2, [r3, #2096]	; 0x830
 8001e38:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001e3c:	f8c3 2830 	str.w	r2, [r3, #2096]	; 0x830
 8001e40:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8001e44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001e46:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001e4a:	9301      	str	r3, [sp, #4]
 8001e4c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001e4e:	b002      	add	sp, #8
 8001e50:	4770      	bx	lr
 8001e52:	bf00      	nop
 8001e54:	40023000 	.word	0x40023000

08001e58 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001e58:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hi2c->Instance==I2C3)
 8001e5c:	4b2e      	ldr	r3, [pc, #184]	; (8001f18 <HAL_I2C_MspInit+0xc0>)
 8001e5e:	6802      	ldr	r2, [r0, #0]
{
 8001e60:	b08a      	sub	sp, #40	; 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e62:	2400      	movs	r4, #0
  if(hi2c->Instance==I2C3)
 8001e64:	429a      	cmp	r2, r3
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e66:	e9cd 4404 	strd	r4, r4, [sp, #16]
 8001e6a:	e9cd 4406 	strd	r4, r4, [sp, #24]
 8001e6e:	9408      	str	r4, [sp, #32]
  if(hi2c->Instance==I2C3)
 8001e70:	d002      	beq.n	8001e78 <HAL_I2C_MspInit+0x20>
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e72:	b00a      	add	sp, #40	; 0x28
 8001e74:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e78:	4d28      	ldr	r5, [pc, #160]	; (8001f1c <HAL_I2C_MspInit+0xc4>)
 8001e7a:	9401      	str	r4, [sp, #4]
 8001e7c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e7e:	4828      	ldr	r0, [pc, #160]	; (8001f20 <HAL_I2C_MspInit+0xc8>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e80:	f043 0304 	orr.w	r3, r3, #4
 8001e84:	632b      	str	r3, [r5, #48]	; 0x30
 8001e86:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e88:	f003 0304 	and.w	r3, r3, #4
 8001e8c:	9301      	str	r3, [sp, #4]
 8001e8e:	9b01      	ldr	r3, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e90:	9402      	str	r4, [sp, #8]
 8001e92:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e94:	f043 0301 	orr.w	r3, r3, #1
 8001e98:	632b      	str	r3, [r5, #48]	; 0x30
 8001e9a:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 8001e9c:	f003 0301 	and.w	r3, r3, #1
 8001ea0:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001ea2:	f44f 7200 	mov.w	r2, #512	; 0x200
 8001ea6:	f04f 0801 	mov.w	r8, #1
 8001eaa:	f04f 0903 	mov.w	r9, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001eae:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001eb0:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001eb2:	2312      	movs	r3, #18
 8001eb4:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001eb8:	e9cd 8906 	strd	r8, r9, [sp, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ebc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ebe:	9608      	str	r6, [sp, #32]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ec0:	f007 f97a 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ec4:	a904      	add	r1, sp, #16
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ec6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8001eca:	2312      	movs	r3, #18
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ecc:	4815      	ldr	r0, [pc, #84]	; (8001f24 <HAL_I2C_MspInit+0xcc>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ece:	9608      	str	r6, [sp, #32]
    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001ed0:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8001ed4:	e9cd 8906 	strd	r8, r9, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ed8:	f007 f96e 	bl	80091b8 <HAL_GPIO_Init>
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001edc:	9403      	str	r4, [sp, #12]
 8001ede:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ee0:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001ee4:	642b      	str	r3, [r5, #64]	; 0x40
 8001ee6:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 8001ee8:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001eec:	4622      	mov	r2, r4
 8001eee:	2105      	movs	r1, #5
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef0:	9303      	str	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef2:	2048      	movs	r0, #72	; 0x48
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001ef4:	9b03      	ldr	r3, [sp, #12]
    HAL_NVIC_SetPriority(I2C3_EV_IRQn, 5, 0);
 8001ef6:	f007 f8e9 	bl	80090cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(I2C3_EV_IRQn);
 8001efa:	2048      	movs	r0, #72	; 0x48
 8001efc:	f007 f924 	bl	8009148 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_I2C3_FORCE_RESET();
 8001f00:	6a2b      	ldr	r3, [r5, #32]
 8001f02:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001f06:	622b      	str	r3, [r5, #32]
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001f08:	6a2b      	ldr	r3, [r5, #32]
 8001f0a:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001f0e:	622b      	str	r3, [r5, #32]
}
 8001f10:	b00a      	add	sp, #40	; 0x28
 8001f12:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8001f16:	bf00      	nop
 8001f18:	40005c00 	.word	0x40005c00
 8001f1c:	40023800 	.word	0x40023800
 8001f20:	40020800 	.word	0x40020800
 8001f24:	40020000 	.word	0x40020000

08001f28 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001f28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f2c:	4604      	mov	r4, r0
 8001f2e:	b09a      	sub	sp, #104	; 0x68
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f30:	2100      	movs	r1, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f32:	2230      	movs	r2, #48	; 0x30
 8001f34:	a80e      	add	r0, sp, #56	; 0x38
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f36:	e9cd 1108 	strd	r1, r1, [sp, #32]
 8001f3a:	e9cd 110a 	strd	r1, r1, [sp, #40]	; 0x28
 8001f3e:	910c      	str	r1, [sp, #48]	; 0x30
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001f40:	f027 ff0d 	bl	8029d5e <memset>
  if(hltdc->Instance==LTDC)
 8001f44:	4b67      	ldr	r3, [pc, #412]	; (80020e4 <HAL_LTDC_MspInit+0x1bc>)
 8001f46:	6822      	ldr	r2, [r4, #0]
 8001f48:	429a      	cmp	r2, r3
 8001f4a:	d002      	beq.n	8001f52 <HAL_LTDC_MspInit+0x2a>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001f4c:	b01a      	add	sp, #104	; 0x68
 8001f4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f52:	23c0      	movs	r3, #192	; 0xc0
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f54:	2108      	movs	r1, #8
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f56:	2204      	movs	r2, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001f58:	9312      	str	r3, [sp, #72]	; 0x48
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f5a:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f5c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001f60:	910e      	str	r1, [sp, #56]	; 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8001f62:	9214      	str	r2, [sp, #80]	; 0x50
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001f64:	9317      	str	r3, [sp, #92]	; 0x5c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f66:	f009 fb91 	bl	800b68c <HAL_RCCEx_PeriphCLKConfig>
 8001f6a:	2800      	cmp	r0, #0
 8001f6c:	f040 80b7 	bne.w	80020de <HAL_LTDC_MspInit+0x1b6>
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f70:	4b5d      	ldr	r3, [pc, #372]	; (80020e8 <HAL_LTDC_MspInit+0x1c0>)
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f72:	485e      	ldr	r0, [pc, #376]	; (80020ec <HAL_LTDC_MspInit+0x1c4>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001f74:	2400      	movs	r4, #0
 8001f76:	9401      	str	r4, [sp, #4]
 8001f78:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f7a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001f7e:	645a      	str	r2, [r3, #68]	; 0x44
 8001f80:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f82:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001f86:	9201      	str	r2, [sp, #4]
 8001f88:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f8a:	9402      	str	r4, [sp, #8]
 8001f8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f8e:	f042 0220 	orr.w	r2, r2, #32
 8001f92:	631a      	str	r2, [r3, #48]	; 0x30
 8001f94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f96:	f002 0220 	and.w	r2, r2, #32
 8001f9a:	9202      	str	r2, [sp, #8]
 8001f9c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001f9e:	9403      	str	r4, [sp, #12]
 8001fa0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fa2:	f042 0201 	orr.w	r2, r2, #1
 8001fa6:	631a      	str	r2, [r3, #48]	; 0x30
 8001fa8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001faa:	f002 0201 	and.w	r2, r2, #1
 8001fae:	9203      	str	r2, [sp, #12]
 8001fb0:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001fb2:	9404      	str	r4, [sp, #16]
 8001fb4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fb6:	f042 0202 	orr.w	r2, r2, #2
 8001fba:	631a      	str	r2, [r3, #48]	; 0x30
 8001fbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fbe:	f002 0202 	and.w	r2, r2, #2
 8001fc2:	9204      	str	r2, [sp, #16]
 8001fc4:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001fc6:	9405      	str	r4, [sp, #20]
 8001fc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fca:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001fce:	631a      	str	r2, [r3, #48]	; 0x30
 8001fd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fd2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001fd6:	9205      	str	r2, [sp, #20]
 8001fd8:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fda:	9406      	str	r4, [sp, #24]
 8001fdc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fde:	f042 0204 	orr.w	r2, r2, #4
 8001fe2:	631a      	str	r2, [r3, #48]	; 0x30
 8001fe4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001fe6:	f002 0204 	and.w	r2, r2, #4
 8001fea:	9206      	str	r2, [sp, #24]
 8001fec:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001fee:	9407      	str	r4, [sp, #28]
 8001ff0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ff2:	f042 0208 	orr.w	r2, r2, #8
 8001ff6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ff8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ffa:	f003 0308 	and.w	r3, r3, #8
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001ffe:	2600      	movs	r6, #0
 8002000:	2702      	movs	r7, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002002:	250e      	movs	r5, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002004:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002006:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002008:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800200c:	2302      	movs	r3, #2
 800200e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002012:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002016:	9b07      	ldr	r3, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002018:	950c      	str	r5, [sp, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800201a:	f007 f8cd 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800201e:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002020:	f641 0258 	movw	r2, #6232	; 0x1858
 8002024:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002026:	4832      	ldr	r0, [pc, #200]	; (80020f0 <HAL_LTDC_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002028:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 800202a:	e9cd 2308 	strd	r2, r3, [sp, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800202e:	f04f 0809 	mov.w	r8, #9
    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002032:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002036:	f007 f8bf 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800203a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 800203c:	2203      	movs	r2, #3
 800203e:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002040:	482c      	ldr	r0, [pc, #176]	; (80020f4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002042:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002046:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800204a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800204e:	f007 f8b3 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002052:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002054:	f44f 6270 	mov.w	r2, #3840	; 0xf00
 8002058:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800205a:	4826      	ldr	r0, [pc, #152]	; (80020f4 <HAL_LTDC_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800205c:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 800205e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002062:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002066:	f007 f8a7 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800206a:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 800206c:	f44f 620c 	mov.w	r2, #2240	; 0x8c0
 8002070:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002072:	4821      	ldr	r0, [pc, #132]	; (80020f8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002074:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002076:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800207a:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800207e:	f007 f89b 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002082:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002084:	22c0      	movs	r2, #192	; 0xc0
 8002086:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002088:	481c      	ldr	r0, [pc, #112]	; (80020fc <HAL_LTDC_MspInit+0x1d4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800208a:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800208c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002090:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002094:	f007 f890 	bl	80091b8 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002098:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800209a:	2208      	movs	r2, #8
 800209c:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800209e:	4818      	ldr	r0, [pc, #96]	; (8002100 <HAL_LTDC_MspInit+0x1d8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 80020a0:	950c      	str	r5, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80020a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020a6:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80020aa:	f007 f885 	bl	80091b8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020ae:	2302      	movs	r3, #2
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b0:	a908      	add	r1, sp, #32
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020b2:	f44f 52a0 	mov.w	r2, #5120	; 0x1400
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020b6:	4810      	ldr	r0, [pc, #64]	; (80020f8 <HAL_LTDC_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 80020b8:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 80020bc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80020c0:	e9cd 670a 	strd	r6, r7, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80020c4:	f007 f878 	bl	80091b8 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80020c8:	4622      	mov	r2, r4
 80020ca:	2105      	movs	r1, #5
 80020cc:	2058      	movs	r0, #88	; 0x58
 80020ce:	f006 fffd 	bl	80090cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80020d2:	2058      	movs	r0, #88	; 0x58
 80020d4:	f007 f838 	bl	8009148 <HAL_NVIC_EnableIRQ>
}
 80020d8:	b01a      	add	sp, #104	; 0x68
 80020da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      Error_Handler();
 80020de:	f7ff fce5 	bl	8001aac <Error_Handler>
 80020e2:	e745      	b.n	8001f70 <HAL_LTDC_MspInit+0x48>
 80020e4:	40016800 	.word	0x40016800
 80020e8:	40023800 	.word	0x40023800
 80020ec:	40021400 	.word	0x40021400
 80020f0:	40020000 	.word	0x40020000
 80020f4:	40020400 	.word	0x40020400
 80020f8:	40021800 	.word	0x40021800
 80020fc:	40020800 	.word	0x40020800
 8002100:	40020c00 	.word	0x40020c00
 8002104:	00000000 	.word	0x00000000

08002108 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002108:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
  if(hspi->Instance==SPI5)
 800210a:	4a1b      	ldr	r2, [pc, #108]	; (8002178 <HAL_SPI_MspInit+0x70>)
 800210c:	6801      	ldr	r1, [r0, #0]
{
 800210e:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002110:	2300      	movs	r3, #0
  if(hspi->Instance==SPI5)
 8002112:	4291      	cmp	r1, r2
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002114:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002118:	e9cd 3304 	strd	r3, r3, [sp, #16]
 800211c:	9306      	str	r3, [sp, #24]
  if(hspi->Instance==SPI5)
 800211e:	d001      	beq.n	8002124 <HAL_SPI_MspInit+0x1c>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002120:	b008      	add	sp, #32
 8002122:	bd10      	pop	{r4, pc}
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002124:	f502 4268 	add.w	r2, r2, #59392	; 0xe800
 8002128:	9300      	str	r3, [sp, #0]
 800212a:	6c50      	ldr	r0, [r2, #68]	; 0x44
 800212c:	f440 1080 	orr.w	r0, r0, #1048576	; 0x100000
 8002130:	6450      	str	r0, [r2, #68]	; 0x44
 8002132:	6c50      	ldr	r0, [r2, #68]	; 0x44
 8002134:	f400 1080 	and.w	r0, r0, #1048576	; 0x100000
 8002138:	9000      	str	r0, [sp, #0]
 800213a:	9800      	ldr	r0, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800213c:	9301      	str	r3, [sp, #4]
 800213e:	6b13      	ldr	r3, [r2, #48]	; 0x30
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002140:	480e      	ldr	r0, [pc, #56]	; (800217c <HAL_SPI_MspInit+0x74>)
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002142:	f043 0320 	orr.w	r3, r3, #32
 8002146:	6313      	str	r3, [r2, #48]	; 0x30
 8002148:	6b13      	ldr	r3, [r2, #48]	; 0x30
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800214a:	ed9f 7b09 	vldr	d7, [pc, #36]	; 8002170 <HAL_SPI_MspInit+0x68>
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800214e:	f003 0320 	and.w	r3, r3, #32
 8002152:	9301      	str	r3, [sp, #4]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002154:	2203      	movs	r2, #3
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002156:	2305      	movs	r3, #5
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002158:	a902      	add	r1, sp, #8
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 800215a:	ed8d 7b02 	vstr	d7, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800215e:	e9cd 2305 	strd	r2, r3, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002162:	9c01      	ldr	r4, [sp, #4]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002164:	f007 f828 	bl	80091b8 <HAL_GPIO_Init>
}
 8002168:	b008      	add	sp, #32
 800216a:	bd10      	pop	{r4, pc}
 800216c:	f3af 8000 	nop.w
 8002170:	00000380 	.word	0x00000380
 8002174:	00000002 	.word	0x00000002
 8002178:	40015000 	.word	0x40015000
 800217c:	40021400 	.word	0x40021400

08002180 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002180:	b500      	push	{lr}
  if(htim_base->Instance==TIM1)
 8002182:	4a21      	ldr	r2, [pc, #132]	; (8002208 <HAL_TIM_Base_MspInit+0x88>)
 8002184:	6803      	ldr	r3, [r0, #0]
 8002186:	4293      	cmp	r3, r2
{
 8002188:	b085      	sub	sp, #20
  if(htim_base->Instance==TIM1)
 800218a:	d008      	beq.n	800219e <HAL_TIM_Base_MspInit+0x1e>
    __HAL_RCC_TIM1_CLK_ENABLE();
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
  else if(htim_base->Instance==TIM2)
 800218c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002190:	d023      	beq.n	80021da <HAL_TIM_Base_MspInit+0x5a>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
  else if(htim_base->Instance==TIM3)
 8002192:	4a1e      	ldr	r2, [pc, #120]	; (800220c <HAL_TIM_Base_MspInit+0x8c>)
 8002194:	4293      	cmp	r3, r2
 8002196:	d011      	beq.n	80021bc <HAL_TIM_Base_MspInit+0x3c>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 8002198:	b005      	add	sp, #20
 800219a:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM1_CLK_ENABLE();
 800219e:	4b1c      	ldr	r3, [pc, #112]	; (8002210 <HAL_TIM_Base_MspInit+0x90>)
 80021a0:	2200      	movs	r2, #0
 80021a2:	9201      	str	r2, [sp, #4]
 80021a4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021a6:	f042 0201 	orr.w	r2, r2, #1
 80021aa:	645a      	str	r2, [r3, #68]	; 0x44
 80021ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021ae:	f003 0301 	and.w	r3, r3, #1
 80021b2:	9301      	str	r3, [sp, #4]
 80021b4:	9b01      	ldr	r3, [sp, #4]
}
 80021b6:	b005      	add	sp, #20
 80021b8:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM3_CLK_ENABLE();
 80021bc:	4b14      	ldr	r3, [pc, #80]	; (8002210 <HAL_TIM_Base_MspInit+0x90>)
 80021be:	2200      	movs	r2, #0
 80021c0:	9203      	str	r2, [sp, #12]
 80021c2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80021c4:	f042 0202 	orr.w	r2, r2, #2
 80021c8:	641a      	str	r2, [r3, #64]	; 0x40
 80021ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021cc:	f003 0302 	and.w	r3, r3, #2
 80021d0:	9303      	str	r3, [sp, #12]
 80021d2:	9b03      	ldr	r3, [sp, #12]
}
 80021d4:	b005      	add	sp, #20
 80021d6:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021da:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 80021de:	2200      	movs	r2, #0
 80021e0:	9202      	str	r2, [sp, #8]
 80021e2:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80021e4:	f041 0101 	orr.w	r1, r1, #1
 80021e8:	6419      	str	r1, [r3, #64]	; 0x40
 80021ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80021ec:	f003 0301 	and.w	r3, r3, #1
 80021f0:	9302      	str	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80021f2:	201c      	movs	r0, #28
 80021f4:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 80021f6:	9b02      	ldr	r3, [sp, #8]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 80021f8:	f006 ff68 	bl	80090cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80021fc:	201c      	movs	r0, #28
}
 80021fe:	b005      	add	sp, #20
 8002200:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002204:	f006 bfa0 	b.w	8009148 <HAL_NVIC_EnableIRQ>
 8002208:	40010000 	.word	0x40010000
 800220c:	40000400 	.word	0x40000400
 8002210:	40023800 	.word	0x40023800

08002214 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002214:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8002216:	4b2b      	ldr	r3, [pc, #172]	; (80022c4 <HAL_SDRAM_MspInit+0xb0>)
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002218:	b089      	sub	sp, #36	; 0x24
  if (FMC_Initialized) {
 800221a:	681c      	ldr	r4, [r3, #0]
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 800221c:	2200      	movs	r2, #0
 800221e:	9204      	str	r2, [sp, #16]
  if (FMC_Initialized) {
 8002220:	2c00      	cmp	r4, #0
 8002222:	d14c      	bne.n	80022be <HAL_SDRAM_MspInit+0xaa>
  FMC_Initialized = 1;
 8002224:	2701      	movs	r7, #1
  __HAL_RCC_FMC_CLK_ENABLE();
 8002226:	4a28      	ldr	r2, [pc, #160]	; (80022c8 <HAL_SDRAM_MspInit+0xb4>)
 8002228:	9401      	str	r4, [sp, #4]
  FMC_Initialized = 1;
 800222a:	601f      	str	r7, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 800222c:	6b93      	ldr	r3, [r2, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800222e:	4827      	ldr	r0, [pc, #156]	; (80022cc <HAL_SDRAM_MspInit+0xb8>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002230:	433b      	orrs	r3, r7
 8002232:	6393      	str	r3, [r2, #56]	; 0x38
 8002234:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002236:	403b      	ands	r3, r7
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002238:	2603      	movs	r6, #3
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800223a:	250c      	movs	r5, #12
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800223c:	f64f 023f 	movw	r2, #63551	; 0xf83f
  __HAL_RCC_FMC_CLK_ENABLE();
 8002240:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002242:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002244:	2302      	movs	r3, #2
 8002246:	e9cd 2302 	strd	r2, r3, [sp, #8]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800224a:	e9cd 6505 	strd	r6, r5, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 800224e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002250:	f006 ffb2 	bl	80091b8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002254:	481e      	ldr	r0, [pc, #120]	; (80022d0 <HAL_SDRAM_MspInit+0xbc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0;
 8002256:	9702      	str	r7, [sp, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002258:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800225a:	2702      	movs	r7, #2
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800225c:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002260:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002264:	f006 ffa8 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002268:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800226c:	4819      	ldr	r0, [pc, #100]	; (80022d4 <HAL_SDRAM_MspInit+0xc0>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 800226e:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002270:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002272:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002276:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800227a:	f006 ff9d 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800227e:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002282:	4815      	ldr	r0, [pc, #84]	; (80022d8 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002284:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002286:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002288:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800228c:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002290:	f006 ff92 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002294:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002298:	4810      	ldr	r0, [pc, #64]	; (80022dc <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800229a:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800229c:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800229e:	e9cd 7403 	strd	r7, r4, [sp, #12]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022a2:	e9cd 6505 	strd	r6, r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80022a6:	f006 ff87 	bl	80091b8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022aa:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ac:	480c      	ldr	r0, [pc, #48]	; (80022e0 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ae:	9703      	str	r7, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022b0:	a902      	add	r1, sp, #8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022b2:	e9cd 4604 	strd	r4, r6, [sp, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80022b6:	9506      	str	r5, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 80022b8:	9302      	str	r3, [sp, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022ba:	f006 ff7d 	bl	80091b8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80022be:	b009      	add	sp, #36	; 0x24
 80022c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80022c2:	bf00      	nop
 80022c4:	20001e84 	.word	0x20001e84
 80022c8:	40023800 	.word	0x40023800
 80022cc:	40021400 	.word	0x40021400
 80022d0:	40020800 	.word	0x40020800
 80022d4:	40021800 	.word	0x40021800
 80022d8:	40021000 	.word	0x40021000
 80022dc:	40020c00 	.word	0x40020c00
 80022e0:	40020400 	.word	0x40020400

080022e4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80022e4:	b570      	push	{r4, r5, r6, lr}
 80022e6:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80022e8:	4b23      	ldr	r3, [pc, #140]	; (8002378 <HAL_InitTick+0x94>)
 80022ea:	2200      	movs	r2, #0
 80022ec:	9202      	str	r2, [sp, #8]
 80022ee:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80022f0:	f042 0210 	orr.w	r2, r2, #16
 80022f4:	641a      	str	r2, [r3, #64]	; 0x40
 80022f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80022f8:	f003 0310 	and.w	r3, r3, #16
 80022fc:	9302      	str	r3, [sp, #8]
{
 80022fe:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002300:	a901      	add	r1, sp, #4
 8002302:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002304:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002306:	f009 f99f 	bl	800b648 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800230a:	9b06      	ldr	r3, [sp, #24]
 800230c:	b9d3      	cbnz	r3, 8002344 <HAL_InitTick+0x60>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800230e:	f009 f98b 	bl	800b628 <HAL_RCC_GetPCLK1Freq>
 8002312:	4603      	mov	r3, r0
  {
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
  }

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002314:	4a19      	ldr	r2, [pc, #100]	; (800237c <HAL_InitTick+0x98>)

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002316:	4c1a      	ldr	r4, [pc, #104]	; (8002380 <HAL_InitTick+0x9c>)
 8002318:	491a      	ldr	r1, [pc, #104]	; (8002384 <HAL_InitTick+0xa0>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800231a:	fba2 2303 	umull	r2, r3, r2, r3
 800231e:	0c9b      	lsrs	r3, r3, #18
 8002320:	3b01      	subs	r3, #1
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
  htim6.Init.Prescaler = uwPrescalerValue;
  htim6.Init.ClockDivision = 0;
 8002322:	2200      	movs	r2, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8002324:	e9c4 1300 	strd	r1, r3, [r4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002328:	4620      	mov	r0, r4
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 800232a:	f240 33e7 	movw	r3, #999	; 0x3e7
  htim6.Init.ClockDivision = 0;
 800232e:	6122      	str	r2, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002330:	60a2      	str	r2, [r4, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002332:	61a2      	str	r2, [r4, #24]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002334:	60e3      	str	r3, [r4, #12]
  status = HAL_TIM_Base_Init(&htim6);
 8002336:	f009 ffb7 	bl	800c2a8 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 800233a:	4606      	mov	r6, r0
 800233c:	b130      	cbz	r0, 800234c <HAL_InitTick+0x68>
    }
  }

 /* Return function status */
  return status;
}
 800233e:	4630      	mov	r0, r6
 8002340:	b008      	add	sp, #32
 8002342:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002344:	f009 f970 	bl	800b628 <HAL_RCC_GetPCLK1Freq>
 8002348:	0043      	lsls	r3, r0, #1
 800234a:	e7e3      	b.n	8002314 <HAL_InitTick+0x30>
    status = HAL_TIM_Base_Start_IT(&htim6);
 800234c:	4620      	mov	r0, r4
 800234e:	f00a f839 	bl	800c3c4 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002352:	4606      	mov	r6, r0
 8002354:	2800      	cmp	r0, #0
 8002356:	d1f2      	bne.n	800233e <HAL_InitTick+0x5a>
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002358:	2036      	movs	r0, #54	; 0x36
 800235a:	f006 fef5 	bl	8009148 <HAL_NVIC_EnableIRQ>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800235e:	2d0f      	cmp	r5, #15
 8002360:	d901      	bls.n	8002366 <HAL_InitTick+0x82>
        status = HAL_ERROR;
 8002362:	2601      	movs	r6, #1
 8002364:	e7eb      	b.n	800233e <HAL_InitTick+0x5a>
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002366:	4632      	mov	r2, r6
 8002368:	4629      	mov	r1, r5
 800236a:	2036      	movs	r0, #54	; 0x36
 800236c:	f006 feae 	bl	80090cc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002370:	4b05      	ldr	r3, [pc, #20]	; (8002388 <HAL_InitTick+0xa4>)
 8002372:	601d      	str	r5, [r3, #0]
 8002374:	e7e3      	b.n	800233e <HAL_InitTick+0x5a>
 8002376:	bf00      	nop
 8002378:	40023800 	.word	0x40023800
 800237c:	431bde83 	.word	0x431bde83
 8002380:	20001e88 	.word	0x20001e88
 8002384:	40001000 	.word	0x40001000
 8002388:	20000080 	.word	0x20000080

0800238c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800238c:	4770      	bx	lr
 800238e:	bf00      	nop

08002390 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002390:	e7fe      	b.n	8002390 <HardFault_Handler>
 8002392:	bf00      	nop

08002394 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002394:	e7fe      	b.n	8002394 <MemManage_Handler>
 8002396:	bf00      	nop

08002398 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002398:	e7fe      	b.n	8002398 <BusFault_Handler>
 800239a:	bf00      	nop

0800239c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800239c:	e7fe      	b.n	800239c <UsageFault_Handler>
 800239e:	bf00      	nop

080023a0 <DebugMon_Handler>:
 80023a0:	4770      	bx	lr
 80023a2:	bf00      	nop

080023a4 <EXTI3_IRQHandler>:

/**
  * @brief This function handles EXTI line3 interrupt.
  */
void EXTI3_IRQHandler(void)
{
 80023a4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN EXTI3_IRQn 0 */

  HAL_Delay(200);
 80023a6:	20c8      	movs	r0, #200	; 0xc8
 80023a8:	f006 fe6c 	bl	8009084 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 80023ac:	4804      	ldr	r0, [pc, #16]	; (80023c0 <EXTI3_IRQHandler+0x1c>)
 80023ae:	2200      	movs	r2, #0
 80023b0:	2120      	movs	r1, #32
 80023b2:	f007 f845 	bl	8009440 <HAL_GPIO_WritePin>
  /* USER CODE END EXTI3_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
  /* USER CODE BEGIN EXTI3_IRQn 1 */

  /* USER CODE END EXTI3_IRQn 1 */
}
 80023b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_EXTI_IRQHandler(DEVICE_ON_OFF_TRIGGER_Pin);
 80023ba:	2008      	movs	r0, #8
 80023bc:	f007 b850 	b.w	8009460 <HAL_GPIO_EXTI_IRQHandler>
 80023c0:	40021000 	.word	0x40021000

080023c4 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80023c4:	4801      	ldr	r0, [pc, #4]	; (80023cc <TIM6_DAC_IRQHandler+0x8>)
 80023c6:	f00a b841 	b.w	800c44c <HAL_TIM_IRQHandler>
 80023ca:	bf00      	nop
 80023cc:	20001e88 	.word	0x20001e88

080023d0 <I2C3_EV_IRQHandler>:
void I2C3_EV_IRQHandler(void)
{
  /* USER CODE BEGIN I2C3_EV_IRQn 0 */

  /* USER CODE END I2C3_EV_IRQn 0 */
  HAL_I2C_EV_IRQHandler(&hi2c3);
 80023d0:	4801      	ldr	r0, [pc, #4]	; (80023d8 <I2C3_EV_IRQHandler+0x8>)
 80023d2:	f007 bfa5 	b.w	800a320 <HAL_I2C_EV_IRQHandler>
 80023d6:	bf00      	nop
 80023d8:	200018ec 	.word	0x200018ec

080023dc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80023dc:	4801      	ldr	r0, [pc, #4]	; (80023e4 <LTDC_IRQHandler+0x8>)
 80023de:	f008 bd19 	b.w	800ae14 <HAL_LTDC_IRQHandler>
 80023e2:	bf00      	nop
 80023e4:	20001940 	.word	0x20001940

080023e8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80023e8:	2001      	movs	r0, #1
 80023ea:	4770      	bx	lr

080023ec <_kill>:

int _kill(int pid, int sig)
{
 80023ec:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023ee:	f027 fdaf 	bl	8029f50 <__errno>
 80023f2:	2316      	movs	r3, #22
 80023f4:	6003      	str	r3, [r0, #0]
	return -1;
}
 80023f6:	f04f 30ff 	mov.w	r0, #4294967295
 80023fa:	bd08      	pop	{r3, pc}

080023fc <_exit>:

void _exit (int status)
{
 80023fc:	b508      	push	{r3, lr}
	errno = EINVAL;
 80023fe:	f027 fda7 	bl	8029f50 <__errno>
 8002402:	2316      	movs	r3, #22
 8002404:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002406:	e7fe      	b.n	8002406 <_exit+0xa>

08002408 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002408:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800240a:	1e16      	subs	r6, r2, #0
 800240c:	dd07      	ble.n	800241e <_read+0x16>
 800240e:	460c      	mov	r4, r1
 8002410:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
 8002412:	f3af 8000 	nop.w
 8002416:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800241a:	42a5      	cmp	r5, r4
 800241c:	d1f9      	bne.n	8002412 <_read+0xa>
	}

return len;
}
 800241e:	4630      	mov	r0, r6
 8002420:	bd70      	pop	{r4, r5, r6, pc}
 8002422:	bf00      	nop

08002424 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002424:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002426:	1e16      	subs	r6, r2, #0
 8002428:	dd07      	ble.n	800243a <_write+0x16>
 800242a:	460c      	mov	r4, r1
 800242c:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
 800242e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8002432:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002436:	42ac      	cmp	r4, r5
 8002438:	d1f9      	bne.n	800242e <_write+0xa>
	}
	return len;
}
 800243a:	4630      	mov	r0, r6
 800243c:	bd70      	pop	{r4, r5, r6, pc}
 800243e:	bf00      	nop

08002440 <_close>:

int _close(int file)
{
	return -1;
}
 8002440:	f04f 30ff 	mov.w	r0, #4294967295
 8002444:	4770      	bx	lr
 8002446:	bf00      	nop

08002448 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002448:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800244c:	604b      	str	r3, [r1, #4]
	return 0;
}
 800244e:	2000      	movs	r0, #0
 8002450:	4770      	bx	lr
 8002452:	bf00      	nop

08002454 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002454:	2001      	movs	r0, #1
 8002456:	4770      	bx	lr

08002458 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002458:	2000      	movs	r0, #0
 800245a:	4770      	bx	lr

0800245c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800245c:	4a0b      	ldr	r2, [pc, #44]	; (800248c <_sbrk+0x30>)
{
 800245e:	b508      	push	{r3, lr}
 8002460:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002462:	6810      	ldr	r0, [r2, #0]
 8002464:	b128      	cbz	r0, 8002472 <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
 8002466:	4403      	add	r3, r0
 8002468:	4669      	mov	r1, sp
 800246a:	428b      	cmp	r3, r1
 800246c:	d807      	bhi.n	800247e <_sbrk+0x22>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
 800246e:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
 8002470:	bd08      	pop	{r3, pc}
		heap_end = &end;
 8002472:	4807      	ldr	r0, [pc, #28]	; (8002490 <_sbrk+0x34>)
 8002474:	6010      	str	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002476:	4403      	add	r3, r0
 8002478:	4669      	mov	r1, sp
 800247a:	428b      	cmp	r3, r1
 800247c:	d9f7      	bls.n	800246e <_sbrk+0x12>
		errno = ENOMEM;
 800247e:	f027 fd67 	bl	8029f50 <__errno>
 8002482:	230c      	movs	r3, #12
 8002484:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002486:	f04f 30ff 	mov.w	r0, #4294967295
}
 800248a:	bd08      	pop	{r3, pc}
 800248c:	20001ed0 	.word	0x20001ed0
 8002490:	200139f0 	.word	0x200139f0

08002494 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;     // verdana_10_4bpp
    static const touchgfx::FontId NORMAL_12 = 3; // verdana_12_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002494:	4770      	bx	lr

08002496 <_ZN23ApplicationFontProviderD0Ev>:
 8002496:	b510      	push	{r4, lr}
 8002498:	2104      	movs	r1, #4
 800249a:	4604      	mov	r4, r0
 800249c:	f026 fc47 	bl	8028d2e <_ZdlPvj>
 80024a0:	4620      	mov	r0, r4
 80024a2:	bd10      	pop	{r4, pc}

080024a4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80024a4:	b508      	push	{r3, lr}
    switch (typography)
 80024a6:	2903      	cmp	r1, #3
 80024a8:	d813      	bhi.n	80024d2 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80024aa:	e8df f001 	tbb	[pc, r1]
 80024ae:	0602      	.short	0x0602
 80024b0:	0e0a      	.short	0x0e0a
    {
    case Typography::DEFAULT:
        // verdana_19_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80024b2:	f005 fe4d 	bl	8008150 <_ZN17TypedTextDatabase8getFontsEv>
 80024b6:	6800      	ldr	r0, [r0, #0]
        // verdana_12_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    default:
        return 0;
    }
}
 80024b8:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80024ba:	f005 fe49 	bl	8008150 <_ZN17TypedTextDatabase8getFontsEv>
 80024be:	6840      	ldr	r0, [r0, #4]
 80024c0:	e7fa      	b.n	80024b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80024c2:	f005 fe45 	bl	8008150 <_ZN17TypedTextDatabase8getFontsEv>
 80024c6:	6880      	ldr	r0, [r0, #8]
 80024c8:	e7f6      	b.n	80024b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80024ca:	f005 fe41 	bl	8008150 <_ZN17TypedTextDatabase8getFontsEv>
 80024ce:	68c0      	ldr	r0, [r0, #12]
 80024d0:	e7f2      	b.n	80024b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
    switch (typography)
 80024d2:	2000      	movs	r0, #0
 80024d4:	e7f0      	b.n	80024b8 <_ZN23ApplicationFontProvider7getFontEt+0x14>
	...

080024d8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80024d8:	4800      	ldr	r0, [pc, #0]	; (80024dc <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80024da:	4770      	bx	lr
 80024dc:	0802b244 	.word	0x0802b244

080024e0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80024e0:	200d      	movs	r0, #13
 80024e2:	4770      	bx	lr

080024e4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80024e4:	b513      	push	{r0, r1, r4, lr}
 80024e6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80024e8:	b151      	cbz	r1, 8002500 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80024ea:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80024ec:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80024ee:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80024f2:	aa01      	add	r2, sp, #4
 80024f4:	689c      	ldr	r4, [r3, #8]
 80024f6:	f10d 0303 	add.w	r3, sp, #3
 80024fa:	47a0      	blx	r4
        return glyph;
    }
 80024fc:	b002      	add	sp, #8
 80024fe:	bd10      	pop	{r4, pc}
            return 0;
 8002500:	4608      	mov	r0, r1
 8002502:	e7fb      	b.n	80024fc <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002504 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002504:	89c0      	ldrh	r0, [r0, #14]
 8002506:	4770      	bx	lr

08002508 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002508:	8a00      	ldrh	r0, [r0, #16]
 800250a:	4770      	bx	lr

0800250c <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 800250c:	88c0      	ldrh	r0, [r0, #6]
 800250e:	4770      	bx	lr

08002510 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002510:	8880      	ldrh	r0, [r0, #4]
 8002512:	4770      	bx	lr

08002514 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002514:	7a80      	ldrb	r0, [r0, #10]
    }
 8002516:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800251a:	4770      	bx	lr

0800251c <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800251c:	7a80      	ldrb	r0, [r0, #10]
    }
 800251e:	09c0      	lsrs	r0, r0, #7
 8002520:	4770      	bx	lr

08002522 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002522:	4770      	bx	lr

08002524 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002524:	4770      	bx	lr

08002526 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002526:	4770      	bx	lr

08002528 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002528:	4770      	bx	lr

0800252a <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 800252a:	4770      	bx	lr

0800252c <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800252c:	4770      	bx	lr

0800252e <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800252e:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002530:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002532:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002534:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002536:	466d      	mov	r5, sp
 8002538:	4601      	mov	r1, r0
 800253a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800253e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002540:	4628      	mov	r0, r5
 8002542:	4798      	blx	r3
 8002544:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002548:	343c      	adds	r4, #60	; 0x3c
 800254a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800254e:	b005      	add	sp, #20
 8002550:	bd30      	pop	{r4, r5, pc}

08002552 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002552:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002554:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002556:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002558:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800255a:	466d      	mov	r5, sp
 800255c:	4601      	mov	r1, r0
 800255e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002562:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002564:	4628      	mov	r0, r5
 8002566:	4798      	blx	r3
 8002568:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800256c:	343c      	adds	r4, #60	; 0x3c
 800256e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002572:	b005      	add	sp, #20
 8002574:	bd30      	pop	{r4, r5, pc}

08002576 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002576:	2200      	movs	r2, #0
 8002578:	8002      	strh	r2, [r0, #0]
 800257a:	8042      	strh	r2, [r0, #2]
 800257c:	8082      	strh	r2, [r0, #4]
 800257e:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002580:	4770      	bx	lr

08002582 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002582:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002586:	4770      	bx	lr

08002588 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002588:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800258a:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800258c:	4604      	mov	r4, r0
        setX(x);
 800258e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002590:	4615      	mov	r5, r2
        setX(x);
 8002592:	4798      	blx	r3
        setBaselineY(baselineY);
 8002594:	6823      	ldr	r3, [r4, #0]
 8002596:	4629      	mov	r1, r5
 8002598:	4620      	mov	r0, r4
 800259a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 800259c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80025a0:	4718      	bx	r3

080025a2 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80025a2:	2000      	movs	r0, #0
 80025a4:	4770      	bx	lr

080025a6 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80025a6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80025a8:	4770      	bx	lr

080025aa <_ZN19CalibrationViewBase11setupScreenEv>:
}

void CalibrationViewBase::setupScreen()
{

}
 80025aa:	4770      	bx	lr

080025ac <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80025ac:	4770      	bx	lr

080025ae <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80025ae:	4770      	bx	lr

080025b0 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 80025b0:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 80025b2:	68c2      	ldr	r2, [r0, #12]
 80025b4:	6844      	ldr	r4, [r0, #4]
 80025b6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80025b8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80025ba:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80025be:	07d2      	lsls	r2, r2, #31
 80025c0:	bf48      	it	mi
 80025c2:	5962      	ldrmi	r2, [r4, r5]
 80025c4:	689b      	ldr	r3, [r3, #8]
    }
 80025c6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80025c8:	bf48      	it	mi
 80025ca:	58d3      	ldrmi	r3, [r2, r3]
 80025cc:	4718      	bx	r3

080025ce <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80025ce:	6843      	ldr	r3, [r0, #4]
 80025d0:	b12b      	cbz	r3, 80025de <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80025d2:	6883      	ldr	r3, [r0, #8]
 80025d4:	b92b      	cbnz	r3, 80025e2 <_ZNK8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80025d6:	68c0      	ldr	r0, [r0, #12]
 80025d8:	f000 0001 	and.w	r0, r0, #1
 80025dc:	4770      	bx	lr
 80025de:	4618      	mov	r0, r3
 80025e0:	4770      	bx	lr
 80025e2:	2001      	movs	r0, #1
    }
 80025e4:	4770      	bx	lr

080025e6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80025e6:	b510      	push	{r4, lr}
    }
 80025e8:	2108      	movs	r1, #8
    virtual ~TypedText()
 80025ea:	4604      	mov	r4, r0
    }
 80025ec:	f026 fb9f 	bl	8028d2e <_ZdlPvj>
 80025f0:	4620      	mov	r0, r4
 80025f2:	bd10      	pop	{r4, pc}

080025f4 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80025f4:	b510      	push	{r4, lr}
 80025f6:	214c      	movs	r1, #76	; 0x4c
 80025f8:	4604      	mov	r4, r0
 80025fa:	f026 fb98 	bl	8028d2e <_ZdlPvj>
 80025fe:	4620      	mov	r0, r4
 8002600:	bd10      	pop	{r4, pc}

08002602 <_ZN8touchgfx8CallbackI19CalibrationViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002602:	b510      	push	{r4, lr}
 8002604:	2110      	movs	r1, #16
 8002606:	4604      	mov	r4, r0
 8002608:	f026 fb91 	bl	8028d2e <_ZdlPvj>
 800260c:	4620      	mov	r0, r4
 800260e:	bd10      	pop	{r4, pc}

08002610 <_ZN19CalibrationViewBaseD1Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002610:	b510      	push	{r4, lr}
 8002612:	4b03      	ldr	r3, [pc, #12]	; (8002620 <_ZN19CalibrationViewBaseD1Ev+0x10>)
 8002614:	6003      	str	r3, [r0, #0]
 8002616:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002618:	f010 fe10 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800261c:	4620      	mov	r0, r4
 800261e:	bd10      	pop	{r4, pc}
 8002620:	0802b5b0 	.word	0x0802b5b0

08002624 <_ZN19CalibrationViewBaseD0Ev>:
CalibrationViewBase::~CalibrationViewBase()
 8002624:	b507      	push	{r0, r1, r2, lr}
 8002626:	4b07      	ldr	r3, [pc, #28]	; (8002644 <_ZN19CalibrationViewBaseD0Ev+0x20>)
 8002628:	6003      	str	r3, [r0, #0]
 800262a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800262c:	f010 fe06 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002630:	9801      	ldr	r0, [sp, #4]
 8002632:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8002636:	f026 fb7a 	bl	8028d2e <_ZdlPvj>
 800263a:	9801      	ldr	r0, [sp, #4]
 800263c:	b003      	add	sp, #12
 800263e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002642:	bf00      	nop
 8002644:	0802b5b0 	.word	0x0802b5b0

08002648 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002648:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800264a:	f7fe fce7 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800264e:	bd08      	pop	{r3, pc}

08002650 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002650:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002652:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002654:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002656:	4b12      	ldr	r3, [pc, #72]	; (80026a0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002658:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800265a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800265c:	b28d      	uxth	r5, r1
 800265e:	b92b      	cbnz	r3, 800266c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002660:	4b10      	ldr	r3, [pc, #64]	; (80026a4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002662:	4a11      	ldr	r2, [pc, #68]	; (80026a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002664:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002666:	4811      	ldr	r0, [pc, #68]	; (80026ac <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002668:	f027 f974 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800266c:	4910      	ldr	r1, [pc, #64]	; (80026b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 800266e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002670:	8809      	ldrh	r1, [r1, #0]
 8002672:	4291      	cmp	r1, r2
 8002674:	d803      	bhi.n	800267e <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002676:	4b0f      	ldr	r3, [pc, #60]	; (80026b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002678:	4a0b      	ldr	r2, [pc, #44]	; (80026a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 800267a:	216d      	movs	r1, #109	; 0x6d
 800267c:	e7f3      	b.n	8002666 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 800267e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002682:	4b0d      	ldr	r3, [pc, #52]	; (80026b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002684:	681b      	ldr	r3, [r3, #0]
 8002686:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800268a:	6803      	ldr	r3, [r0, #0]
 800268c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800268e:	4798      	blx	r3
 8002690:	1a28      	subs	r0, r5, r0
 8002692:	b201      	sxth	r1, r0
 8002694:	4633      	mov	r3, r6
 8002696:	4620      	mov	r0, r4
    }
 8002698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800269c:	4718      	bx	r3
 800269e:	bf00      	nop
 80026a0:	20012e0c 	.word	0x20012e0c
 80026a4:	0802b348 	.word	0x0802b348
 80026a8:	0802b38a 	.word	0x0802b38a
 80026ac:	0802b3c5 	.word	0x0802b3c5
 80026b0:	20012e10 	.word	0x20012e10
 80026b4:	0802b40c 	.word	0x0802b40c
 80026b8:	20012e14 	.word	0x20012e14

080026bc <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CalibrationViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80026bc:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 80026be:	f500 7310 	add.w	r3, r0, #576	; 0x240
 80026c2:	4299      	cmp	r1, r3
{
 80026c4:	4604      	mov	r4, r0
 80026c6:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 80026c8:	d103      	bne.n	80026d2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CalibrationViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80026ca:	f012 fab9 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 80026ce:	f001 f911 	bl	80038f4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 80026d2:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 80026d6:	429d      	cmp	r5, r3
 80026d8:	d103      	bne.n	80026e2 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80026da:	f012 fab1 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Calibration_Pad
        //Go to Calibration_Pad with screen transition towards East
        application().gotoCalibration_PadScreenWipeTransitionEast();
 80026de:	f001 f9d9 	bl	8003a94 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80026e2:	f504 7422 	add.w	r4, r4, #648	; 0x288
 80026e6:	42a5      	cmp	r5, r4
 80026e8:	d105      	bne.n	80026f6 <_ZN19CalibrationViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 80026ea:	f012 faa9 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Calibration_Hall
        //Go to Calibration_Hall with screen transition towards East
        application().gotoCalibration_HallScreenWipeTransitionEast();
    }
}
 80026ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCalibration_HallScreenWipeTransitionEast();
 80026f2:	f001 b9df 	b.w	8003ab4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>
}
 80026f6:	bd38      	pop	{r3, r4, r5, pc}

080026f8 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 80026f8:	2200      	movs	r2, #0
 80026fa:	f04f 31ff 	mov.w	r1, #4294967295
 80026fe:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002702:	6082      	str	r2, [r0, #8]
    }
 8002704:	4770      	bx	lr

08002706 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002706:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002708:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 800270a:	4604      	mov	r4, r0
        setX(x);
 800270c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 800270e:	4615      	mov	r5, r2
        setX(x);
 8002710:	4798      	blx	r3
        setY(y);
 8002712:	6823      	ldr	r3, [r4, #0]
 8002714:	4629      	mov	r1, r5
 8002716:	4620      	mov	r0, r4
 8002718:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 800271a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 800271e:	4718      	bx	r3

08002720 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002720:	b570      	push	{r4, r5, r6, lr}
 8002722:	4604      	mov	r4, r0
 8002724:	461d      	mov	r5, r3
 8002726:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 800272a:	f7ff ffec 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800272e:	6823      	ldr	r3, [r4, #0]
 8002730:	4629      	mov	r1, r5
 8002732:	4620      	mov	r0, r4
 8002734:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002736:	4798      	blx	r3
        setHeight(height);
 8002738:	6823      	ldr	r3, [r4, #0]
 800273a:	4631      	mov	r1, r6
 800273c:	4620      	mov	r0, r4
 800273e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002740:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002744:	4718      	bx	r3
	...

08002748 <_ZN8touchgfx6WidgetC1Ev>:
 8002748:	2200      	movs	r2, #0
 800274a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800274e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 8002752:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 8002756:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 800275a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800275e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002760:	4a01      	ldr	r2, [pc, #4]	; (8002768 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002762:	6002      	str	r2, [r0, #0]
 8002764:	4770      	bx	lr
 8002766:	bf00      	nop
 8002768:	0802b490 	.word	0x0802b490

0800276c <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 800276c:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800276e:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002770:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002772:	2100      	movs	r1, #0
 8002774:	f027 faf3 	bl	8029d5e <memset>
 8002778:	4620      	mov	r0, r4
 800277a:	f7ff ffe5 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 800277e:	4b0a      	ldr	r3, [pc, #40]	; (80027a8 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002780:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002782:	4b0a      	ldr	r3, [pc, #40]	; (80027ac <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002784:	62a3      	str	r3, [r4, #40]	; 0x28
 8002786:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800278a:	85a3      	strh	r3, [r4, #44]	; 0x2c
 800278c:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002790:	2300      	movs	r3, #0
 8002792:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002796:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 800279a:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800279e:	8723      	strh	r3, [r4, #56]	; 0x38
 80027a0:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80027a2:	4620      	mov	r0, r4
 80027a4:	bd10      	pop	{r4, pc}
 80027a6:	bf00      	nop
 80027a8:	0802dde0 	.word	0x0802dde0
 80027ac:	0802b4f8 	.word	0x0802b4f8

080027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80027b0:	4b1a      	ldr	r3, [pc, #104]	; (800281c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80027b2:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80027b4:	881b      	ldrh	r3, [r3, #0]
 80027b6:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80027b8:	428b      	cmp	r3, r1
    void updateTextPosition()
 80027ba:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80027bc:	d92b      	bls.n	8002816 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027be:	4b18      	ldr	r3, [pc, #96]	; (8002820 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	b92b      	cbnz	r3, 80027d0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80027c4:	4b17      	ldr	r3, [pc, #92]	; (8002824 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80027c6:	4a18      	ldr	r2, [pc, #96]	; (8002828 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 80027c8:	4818      	ldr	r0, [pc, #96]	; (800282c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 80027ca:	216c      	movs	r1, #108	; 0x6c
 80027cc:	f027 f8c2 	bl	8029954 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80027d0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 80027d4:	4b16      	ldr	r3, [pc, #88]	; (8002830 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 80027dc:	4b15      	ldr	r3, [pc, #84]	; (8002834 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 80027de:	6818      	ldr	r0, [r3, #0]
 80027e0:	f005 fca6 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 80027e4:	682b      	ldr	r3, [r5, #0]
 80027e6:	9001      	str	r0, [sp, #4]
 80027e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80027ea:	4628      	mov	r0, r5
 80027ec:	4798      	blx	r3
 80027ee:	682b      	ldr	r3, [r5, #0]
 80027f0:	9901      	ldr	r1, [sp, #4]
 80027f2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80027f4:	4604      	mov	r4, r0
 80027f6:	4628      	mov	r0, r5
 80027f8:	4798      	blx	r3
 80027fa:	682b      	ldr	r3, [r5, #0]
 80027fc:	9901      	ldr	r1, [sp, #4]
 80027fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002800:	fb14 f400 	smulbb	r4, r4, r0
 8002804:	4628      	mov	r0, r5
 8002806:	4798      	blx	r3
 8002808:	b2a4      	uxth	r4, r4
 800280a:	1823      	adds	r3, r4, r0
 800280c:	b21b      	sxth	r3, r3
 800280e:	f8a6 3046 	strh.w	r3, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002812:	b002      	add	sp, #8
 8002814:	bd70      	pop	{r4, r5, r6, pc}
 8002816:	2300      	movs	r3, #0
 8002818:	e7f9      	b.n	800280e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x5e>
 800281a:	bf00      	nop
 800281c:	20012e10 	.word	0x20012e10
 8002820:	20012e0c 	.word	0x20012e0c
 8002824:	0802b348 	.word	0x0802b348
 8002828:	0802b38a 	.word	0x0802b38a
 800282c:	0802b3c5 	.word	0x0802b3c5
 8002830:	20012e14 	.word	0x20012e14
 8002834:	20012e18 	.word	0x20012e18

08002838 <_ZN19CalibrationViewBaseC1Ev>:
CalibrationViewBase::CalibrationViewBase() :
 8002838:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800283c:	ed2d 8b06 	vpush	{d8-d10}
 8002840:	4604      	mov	r4, r0
 8002842:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &CalibrationViewBase::buttonCallbackHandler)
 8002844:	46a3      	mov	fp, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002846:	2500      	movs	r5, #0
 8002848:	f013 fe7a 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 800284c:	4b66      	ldr	r3, [pc, #408]	; (80029e8 <_ZN19CalibrationViewBaseC1Ev+0x1b0>)
 800284e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002850:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002854:	2226      	movs	r2, #38	; 0x26
 8002856:	4629      	mov	r1, r5
 8002858:	4658      	mov	r0, fp
 800285a:	f027 fa80 	bl	8029d5e <memset>
 800285e:	4658      	mov	r0, fp
 8002860:	f7ff ff72 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8002864:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002868:	26ff      	movs	r6, #255	; 0xff
 800286a:	4b60      	ldr	r3, [pc, #384]	; (80029ec <_ZN19CalibrationViewBaseC1Ev+0x1b4>)
 800286c:	6423      	str	r3, [r4, #64]	; 0x40
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 800286e:	2226      	movs	r2, #38	; 0x26
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002870:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002874:	4629      	mov	r1, r5
 8002876:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800287a:	4650      	mov	r0, sl
        : color(col)
 800287c:	66a5      	str	r5, [r4, #104]	; 0x68
 800287e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002882:	f027 fa6c 	bl	8029d5e <memset>
 8002886:	4650      	mov	r0, sl
 8002888:	f7ff ff5e 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 800288c:	4b58      	ldr	r3, [pc, #352]	; (80029f0 <_ZN19CalibrationViewBaseC1Ev+0x1b8>)
 800288e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002890:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002894:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
    {
        Image::setBitmap(bmp);
 8002898:	a90a      	add	r1, sp, #40	; 0x28
 800289a:	4650      	mov	r0, sl
 800289c:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80028a0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80028a4:	f00f fcc3 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80028a8:	4648      	mov	r0, r9
 80028aa:	f7ff ff5f 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80028ae:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80028b2:	4b50      	ldr	r3, [pc, #320]	; (80029f4 <_ZN19CalibrationViewBaseC1Ev+0x1bc>)
 80028b4:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80028b8:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80028bc:	4638      	mov	r0, r7
 80028be:	f00e fb7f 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 80028c2:	f504 73aa 	add.w	r3, r4, #340	; 0x154
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80028c6:	4618      	mov	r0, r3
 80028c8:	9303      	str	r3, [sp, #12]
 80028ca:	f7fe fbbb 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80028ce:	4b4a      	ldr	r3, [pc, #296]	; (80029f8 <_ZN19CalibrationViewBaseC1Ev+0x1c0>)
 80028d0:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80028d4:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80028d8:	3324      	adds	r3, #36	; 0x24
 80028da:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 80028de:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80028e2:	4640      	mov	r0, r8
 80028e4:	f7ff ff42 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80028e8:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80028ec:	4618      	mov	r0, r3
 80028ee:	ee08 3a10 	vmov	s16, r3
 80028f2:	f7ff ff3b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80028f6:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 80028fa:	4618      	mov	r0, r3
 80028fc:	ee08 3a90 	vmov	s17, r3
 8002900:	f7ff ff34 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8002904:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8002908:	4618      	mov	r0, r3
 800290a:	ee09 3a10 	vmov	s18, r3
 800290e:	f00f fdcf 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002912:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8002916:	4618      	mov	r0, r3
 8002918:	ee09 3a90 	vmov	s19, r3
 800291c:	f00f fdc8 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002920:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8002924:	4618      	mov	r0, r3
 8002926:	ee0a 3a10 	vmov	s20, r3
 800292a:	f00f fdc1 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800292e:	4a33      	ldr	r2, [pc, #204]	; (80029fc <_ZN19CalibrationViewBaseC1Ev+0x1c4>)
 8002930:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002934:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8002938:	4a31      	ldr	r2, [pc, #196]	; (8002a00 <_ZN19CalibrationViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800293a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800293e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8002942:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8002946:	f010 fc6f 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800294a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800294e:	462a      	mov	r2, r5
 8002950:	4658      	mov	r0, fp
 8002952:	9300      	str	r3, [sp, #0]
 8002954:	4629      	mov	r1, r5
 8002956:	23f0      	movs	r3, #240	; 0xf0
 8002958:	f7ff fee2 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800295c:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 800295e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002962:	66a3      	str	r3, [r4, #104]	; 0x68
 8002964:	4659      	mov	r1, fp
 8002966:	4630      	mov	r0, r6
 8002968:	f00c fed2 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800296c:	462a      	mov	r2, r5
 800296e:	4650      	mov	r0, sl
 8002970:	4629      	mov	r1, r5
 8002972:	f7ff fec8 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002976:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002978:	4650      	mov	r0, sl
 800297a:	a90a      	add	r1, sp, #40	; 0x28
 800297c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002980:	f00f fc55 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002984:	4651      	mov	r1, sl
 8002986:	4630      	mov	r0, r6
 8002988:	f00c fec2 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(89, 308);
 800298c:	f44f 729a 	mov.w	r2, #308	; 0x134
 8002990:	2159      	movs	r1, #89	; 0x59
 8002992:	4648      	mov	r0, r9
 8002994:	f7ff feb7 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002998:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 800299c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80029a0:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80029a4:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80029a8:	4650      	mov	r0, sl
 80029aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80029ae:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80029b2:	4649      	mov	r1, r9
 80029b4:	4798      	blx	r3
 80029b6:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80029ba:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80029be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80029c2:	4b10      	ldr	r3, [pc, #64]	; (8002a04 <_ZN19CalibrationViewBaseC1Ev+0x1cc>)
 80029c4:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_I8KB).getText());
 80029c6:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 80029ca:	b92b      	cbnz	r3, 80029d8 <_ZN19CalibrationViewBaseC1Ev+0x1a0>
 80029cc:	4b0e      	ldr	r3, [pc, #56]	; (8002a08 <_ZN19CalibrationViewBaseC1Ev+0x1d0>)
 80029ce:	4a0f      	ldr	r2, [pc, #60]	; (8002a0c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80029d0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029d2:	480f      	ldr	r0, [pc, #60]	; (8002a10 <_ZN19CalibrationViewBaseC1Ev+0x1d8>)
 80029d4:	f026 ffbe 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029d8:	4b0e      	ldr	r3, [pc, #56]	; (8002a14 <_ZN19CalibrationViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029da:	881b      	ldrh	r3, [r3, #0]
 80029dc:	2b14      	cmp	r3, #20
 80029de:	d81d      	bhi.n	8002a1c <_ZN19CalibrationViewBaseC1Ev+0x1e4>
 80029e0:	4b0d      	ldr	r3, [pc, #52]	; (8002a18 <_ZN19CalibrationViewBaseC1Ev+0x1e0>)
 80029e2:	4a0a      	ldr	r2, [pc, #40]	; (8002a0c <_ZN19CalibrationViewBaseC1Ev+0x1d4>)
 80029e4:	2161      	movs	r1, #97	; 0x61
 80029e6:	e7f4      	b.n	80029d2 <_ZN19CalibrationViewBaseC1Ev+0x19a>
 80029e8:	0802b5b0 	.word	0x0802b5b0
 80029ec:	0802de70 	.word	0x0802de70
 80029f0:	0802e038 	.word	0x0802e038
 80029f4:	0802b508 	.word	0x0802b508
 80029f8:	0802dba4 	.word	0x0802dba4
 80029fc:	0802b598 	.word	0x0802b598
 8002a00:	080026bd 	.word	0x080026bd
 8002a04:	20012e0c 	.word	0x20012e0c
 8002a08:	0802b348 	.word	0x0802b348
 8002a0c:	0802b44a 	.word	0x0802b44a
 8002a10:	0802b3c5 	.word	0x0802b3c5
 8002a14:	20012e10 	.word	0x20012e10
 8002a18:	0802b40c 	.word	0x0802b40c
        return texts->getText(typedTextId);
 8002a1c:	4b93      	ldr	r3, [pc, #588]	; (8002c6c <_ZN19CalibrationViewBaseC1Ev+0x434>)
 8002a1e:	2114      	movs	r1, #20
 8002a20:	6818      	ldr	r0, [r3, #0]
 8002a22:	f005 fb85 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8002a26:	4a92      	ldr	r2, [pc, #584]	; (8002c70 <_ZN19CalibrationViewBaseC1Ev+0x438>)
 8002a28:	4603      	mov	r3, r0
 8002a2a:	2104      	movs	r1, #4
 8002a2c:	4650      	mov	r0, sl
 8002a2e:	f015 fa77 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8002a32:	4648      	mov	r0, r9
        wc1 = value;
 8002a34:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8002a38:	f00e fffe 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8002a3c:	4b8d      	ldr	r3, [pc, #564]	; (8002c74 <_ZN19CalibrationViewBaseC1Ev+0x43c>)
 8002a3e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RBVT));
 8002a40:	a90a      	add	r1, sp, #40	; 0x28
 8002a42:	2315      	movs	r3, #21
 8002a44:	4648      	mov	r0, r9
 8002a46:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002a4a:	f00f f815 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002a4e:	4649      	mov	r1, r9
 8002a50:	4630      	mov	r0, r6
 8002a52:	f00c fe5d 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002a56:	230a      	movs	r3, #10
 8002a58:	9300      	str	r3, [sp, #0]
 8002a5a:	2232      	movs	r2, #50	; 0x32
 8002a5c:	23f0      	movs	r3, #240	; 0xf0
 8002a5e:	4629      	mov	r1, r5
 8002a60:	4638      	mov	r0, r7
 8002a62:	f7ff fe5d 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8002a66:	9b03      	ldr	r3, [sp, #12]
 8002a68:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002a6c:	22a0      	movs	r2, #160	; 0xa0
 8002a6e:	4611      	mov	r1, r2
 8002a70:	4638      	mov	r0, r7
 8002a72:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002a76:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8002a7a:	f00e fbb7 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002a7e:	22a0      	movs	r2, #160	; 0xa0
 8002a80:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002a84:	4638      	mov	r0, r7
 8002a86:	f00e fbbc 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 8002a8a:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8002a8e:	2b20      	cmp	r3, #32
 8002a90:	d005      	beq.n	8002a9e <_ZN19CalibrationViewBaseC1Ev+0x266>
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 8002a92:	2320      	movs	r3, #32
 8002a94:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120

        updateCachedShape();
 8002a98:	4638      	mov	r0, r7
 8002a9a:	f00e fab1 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002a9e:	4638      	mov	r0, r7
 8002aa0:	2101      	movs	r1, #1
 8002aa2:	f00e fbb9 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002aa6:	4639      	mov	r1, r7
 8002aa8:	4630      	mov	r0, r6
 8002aaa:	ad04      	add	r5, sp, #16
        color = newColor;
 8002aac:	f04f 37ff 	mov.w	r7, #4294967295
 8002ab0:	f00c fe2e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8002ab4:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(70, 60);
 8002ab8:	223c      	movs	r2, #60	; 0x3c
 8002aba:	4640      	mov	r0, r8
 8002abc:	2146      	movs	r1, #70	; 0x46
 8002abe:	f7ff fe22 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002ac2:	4641      	mov	r1, r8
 8002ac4:	4628      	mov	r0, r5
        color = newColor;
 8002ac6:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 8002aca:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 8002ace:	f00e fd39 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002ad2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ad6:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8002ada:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002ade:	f8df 9194 	ldr.w	r9, [pc, #404]	; 8002c74 <_ZN19CalibrationViewBaseC1Ev+0x43c>
 8002ae2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002ae6:	230d      	movs	r3, #13
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_05WF));
 8002ae8:	a90a      	add	r1, sp, #40	; 0x28
 8002aea:	4640      	mov	r0, r8
 8002aec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002af0:	f00e ffc2 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002af4:	4641      	mov	r1, r8
 8002af6:	4630      	mov	r0, r6
 8002af8:	f00c fe0a 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8002afc:	ee18 0a10 	vmov	r0, s16
 8002b00:	2223      	movs	r2, #35	; 0x23
 8002b02:	2145      	movs	r1, #69	; 0x45
 8002b04:	f7ff fdff 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002b08:	ee18 1a10 	vmov	r1, s16
 8002b0c:	4628      	mov	r0, r5
        color = newColor;
 8002b0e:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8002b12:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8002b16:	f00e fd15 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b1a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b1e:	ee18 3a10 	vmov	r3, s16
 8002b22:	333c      	adds	r3, #60	; 0x3c
 8002b24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b28:	234a      	movs	r3, #74	; 0x4a
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y01G));
 8002b2a:	ee18 0a10 	vmov	r0, s16
 8002b2e:	a90a      	add	r1, sp, #40	; 0x28
 8002b30:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b34:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b38:	f00e ff9e 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b3c:	ee18 1a10 	vmov	r1, s16
 8002b40:	4630      	mov	r0, r6
 8002b42:	f00c fde5 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002b46:	ee18 0a90 	vmov	r0, s17
 8002b4a:	220c      	movs	r2, #12
 8002b4c:	2136      	movs	r1, #54	; 0x36
 8002b4e:	f7ff fdda 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002b52:	ee18 1a90 	vmov	r1, s17
 8002b56:	4628      	mov	r0, r5
        color = newColor;
 8002b58:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8002b5c:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8002b60:	f00e fcf0 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002b64:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b68:	ee18 3a90 	vmov	r3, s17
 8002b6c:	333c      	adds	r3, #60	; 0x3c
 8002b6e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002b72:	2349      	movs	r3, #73	; 0x49
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2ABZ));
 8002b74:	ee18 0a90 	vmov	r0, s17
 8002b78:	a90a      	add	r1, sp, #40	; 0x28
 8002b7a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002b7e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8002b82:	f00e ff79 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002b86:	ee18 1a90 	vmov	r1, s17
 8002b8a:	4630      	mov	r0, r6
 8002b8c:	f00c fdc0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8002b90:	ee19 0a10 	vmov	r0, s18
 8002b94:	22f0      	movs	r2, #240	; 0xf0
 8002b96:	2121      	movs	r1, #33	; 0x21
 8002b98:	f7ff fdb5 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002b9c:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002ba0:	aa0a      	add	r2, sp, #40	; 0x28
 8002ba2:	f04f 0802 	mov.w	r8, #2
 8002ba6:	a909      	add	r1, sp, #36	; 0x24
 8002ba8:	ee19 0a10 	vmov	r0, s18
 8002bac:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002bb0:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8002bb4:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002bb8:	f00f f943 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8002bbc:	2348      	movs	r3, #72	; 0x48
 8002bbe:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8002bc2:	3510      	adds	r5, #16
        updateTextPosition();
 8002bc4:	ee19 0a10 	vmov	r0, s18
 8002bc8:	f7ff fdf2 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002bcc:	ee19 1a10 	vmov	r1, s18
 8002bd0:	4630      	mov	r0, r6
        colorPressed = col;
 8002bd2:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002bd6:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 8002bda:	f00c fd99 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8002bde:	ee19 0a90 	vmov	r0, s19
 8002be2:	22aa      	movs	r2, #170	; 0xaa
 8002be4:	2121      	movs	r1, #33	; 0x21
 8002be6:	f7ff fd8e 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002bea:	aa0a      	add	r2, sp, #40	; 0x28
 8002bec:	a909      	add	r1, sp, #36	; 0x24
 8002bee:	ee19 0a90 	vmov	r0, s19
 8002bf2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002bf6:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002bfa:	f00f f922 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002bfe:	2347      	movs	r3, #71	; 0x47
 8002c00:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8002c04:	ee19 0a90 	vmov	r0, s19
 8002c08:	f7ff fdd2 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c0c:	ee19 1a90 	vmov	r1, s19
 8002c10:	4630      	mov	r0, r6
        colorPressed = col;
 8002c12:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8002c16:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8002c1a:	f00c fd79 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8002c1e:	ee1a 0a10 	vmov	r0, s20
 8002c22:	2264      	movs	r2, #100	; 0x64
 8002c24:	2121      	movs	r1, #33	; 0x21
 8002c26:	f7ff fd6e 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002c2a:	aa0a      	add	r2, sp, #40	; 0x28
 8002c2c:	a909      	add	r1, sp, #36	; 0x24
 8002c2e:	ee1a 0a10 	vmov	r0, s20
 8002c32:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8002c36:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8002c3a:	f00f f902 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002c3e:	2346      	movs	r3, #70	; 0x46
        updateTextPosition();
 8002c40:	ee1a 0a10 	vmov	r0, s20
 8002c44:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8002c48:	f7ff fdb2 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8002c4c:	4630      	mov	r0, r6
        colorPressed = col;
 8002c4e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8002c52:	ee1a 1a10 	vmov	r1, s20
 8002c56:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8002c5a:	f00c fd59 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c5e:	4620      	mov	r0, r4
 8002c60:	b00d      	add	sp, #52	; 0x34
 8002c62:	ecbd 8b06 	vpop	{d8-d10}
 8002c66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c6a:	bf00      	nop
 8002c6c:	20012e18 	.word	0x20012e18
 8002c70:	0802b482 	.word	0x0802b482
 8002c74:	0802b4f8 	.word	0x0802b4f8

08002c78 <_ZN24Calibration_HallViewBase11setupScreenEv>:
}

void Calibration_HallViewBase::setupScreen()
{

}
 8002c78:	4770      	bx	lr

08002c7a <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c7a:	4770      	bx	lr

08002c7c <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002c7c:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c7e:	68c2      	ldr	r2, [r0, #12]
 8002c80:	6844      	ldr	r4, [r0, #4]
 8002c82:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002c84:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002c86:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002c8a:	07d2      	lsls	r2, r2, #31
 8002c8c:	bf48      	it	mi
 8002c8e:	5962      	ldrmi	r2, [r4, r5]
 8002c90:	689b      	ldr	r3, [r3, #8]
    }
 8002c92:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002c94:	bf48      	it	mi
 8002c96:	58d3      	ldrmi	r3, [r2, r3]
 8002c98:	4718      	bx	r3

08002c9a <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002c9a:	6843      	ldr	r3, [r0, #4]
 8002c9c:	b12b      	cbz	r3, 8002caa <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002c9e:	6883      	ldr	r3, [r0, #8]
 8002ca0:	b92b      	cbnz	r3, 8002cae <_ZNK8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002ca2:	68c0      	ldr	r0, [r0, #12]
 8002ca4:	f000 0001 	and.w	r0, r0, #1
 8002ca8:	4770      	bx	lr
 8002caa:	4618      	mov	r0, r3
 8002cac:	4770      	bx	lr
 8002cae:	2001      	movs	r0, #1
    }
 8002cb0:	4770      	bx	lr

08002cb2 <_ZN8touchgfx8CallbackI24Calibration_HallViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cb2:	b510      	push	{r4, lr}
 8002cb4:	2110      	movs	r1, #16
 8002cb6:	4604      	mov	r4, r0
 8002cb8:	f026 f839 	bl	8028d2e <_ZdlPvj>
 8002cbc:	4620      	mov	r0, r4
 8002cbe:	bd10      	pop	{r4, pc}

08002cc0 <_ZN24Calibration_HallViewBaseD1Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002cc0:	b510      	push	{r4, lr}
 8002cc2:	4b03      	ldr	r3, [pc, #12]	; (8002cd0 <_ZN24Calibration_HallViewBaseD1Ev+0x10>)
 8002cc4:	6003      	str	r3, [r0, #0]
 8002cc6:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002cc8:	f010 fab8 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ccc:	4620      	mov	r0, r4
 8002cce:	bd10      	pop	{r4, pc}
 8002cd0:	0802b5fc 	.word	0x0802b5fc

08002cd4 <_ZN24Calibration_HallViewBaseD0Ev>:
Calibration_HallViewBase::~Calibration_HallViewBase()
 8002cd4:	b507      	push	{r0, r1, r2, lr}
 8002cd6:	4b07      	ldr	r3, [pc, #28]	; (8002cf4 <_ZN24Calibration_HallViewBaseD0Ev+0x20>)
 8002cd8:	6003      	str	r3, [r0, #0]
 8002cda:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8002cdc:	f010 faae 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8002ce0:	9801      	ldr	r0, [sp, #4]
 8002ce2:	f241 015c 	movw	r1, #4188	; 0x105c
 8002ce6:	f026 f822 	bl	8028d2e <_ZdlPvj>
 8002cea:	9801      	ldr	r0, [sp, #4]
 8002cec:	b003      	add	sp, #12
 8002cee:	f85d fb04 	ldr.w	pc, [sp], #4
 8002cf2:	bf00      	nop
 8002cf4:	0802b5fc 	.word	0x0802b5fc

08002cf8 <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_HallViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8002cf8:	3098      	adds	r0, #152	; 0x98
 8002cfa:	4288      	cmp	r0, r1
{
 8002cfc:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8002cfe:	d105      	bne.n	8002d0c <_ZN24Calibration_HallViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_HallViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d00:	f011 ff9e 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8002d04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8002d08:	f000 beb4 	b.w	8003a74 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 8002d0c:	bd08      	pop	{r3, pc}
	...

08002d10 <_ZN24Calibration_HallViewBaseC1Ev>:
Calibration_HallViewBase::Calibration_HallViewBase() :
 8002d10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d14:	ed2d 8b02 	vpush	{d8}
 8002d18:	4604      	mov	r4, r0
 8002d1a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_HallViewBase::buttonCallbackHandler)
 8002d1c:	46a1      	mov	r9, r4
 8002d1e:	2500      	movs	r5, #0
 8002d20:	f013 fc0e 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8002d24:	4ba5      	ldr	r3, [pc, #660]	; (8002fbc <_ZN24Calibration_HallViewBaseC1Ev+0x2ac>)
 8002d26:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d28:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8002d2c:	2226      	movs	r2, #38	; 0x26
 8002d2e:	4629      	mov	r1, r5
 8002d30:	4648      	mov	r0, r9
 8002d32:	f027 f814 	bl	8029d5e <memset>
 8002d36:	4648      	mov	r0, r9
 8002d38:	f7ff fd06 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8002d3c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8002d40:	26ff      	movs	r6, #255	; 0xff
 8002d42:	4b9f      	ldr	r3, [pc, #636]	; (8002fc0 <_ZN24Calibration_HallViewBaseC1Ev+0x2b0>)
 8002d44:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8002d46:	2226      	movs	r2, #38	; 0x26
 8002d48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d4c:	4629      	mov	r1, r5
 8002d4e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8002d52:	4640      	mov	r0, r8
 8002d54:	66a5      	str	r5, [r4, #104]	; 0x68
 8002d56:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002d5a:	f027 f800 	bl	8029d5e <memset>
 8002d5e:	4640      	mov	r0, r8
 8002d60:	f7ff fcf2 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8002d64:	4b97      	ldr	r3, [pc, #604]	; (8002fc4 <_ZN24Calibration_HallViewBaseC1Ev+0x2b4>)
 8002d66:	66e3      	str	r3, [r4, #108]	; 0x6c
 8002d68:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8002d6c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8002d70:	a90a      	add	r1, sp, #40	; 0x28
 8002d72:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8002d76:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8002d78:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8002d7c:	f00f fa57 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002d80:	4658      	mov	r0, fp
 8002d82:	f00f fb95 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002d86:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8002d8a:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8002d8e:	4618      	mov	r0, r3
 8002d90:	ee08 3a90 	vmov	s17, r3
 8002d94:	f7ff fcea 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8002d98:	4638      	mov	r0, r7
 8002d9a:	f00e f911 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 8002d9e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8002da2:	4618      	mov	r0, r3
 8002da4:	9303      	str	r3, [sp, #12]
 8002da6:	f7fe f94d 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8002daa:	4b87      	ldr	r3, [pc, #540]	; (8002fc8 <_ZN24Calibration_HallViewBaseC1Ev+0x2b8>)
 8002dac:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8002db0:	3324      	adds	r3, #36	; 0x24
 8002db2:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8002db6:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8002dba:	4618      	mov	r0, r3
 8002dbc:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8002dc0:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8002dc4:	ee08 3a10 	vmov	s16, r3
 8002dc8:	f7ff fcd0 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8002dcc:	4650      	mov	r0, sl
 8002dce:	f7ff fccd 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002dd2:	4a7e      	ldr	r2, [pc, #504]	; (8002fcc <_ZN24Calibration_HallViewBaseC1Ev+0x2bc>)
 8002dd4:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8002dd8:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 8002ddc:	4a7c      	ldr	r2, [pc, #496]	; (8002fd0 <_ZN24Calibration_HallViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8002dde:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8002de2:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8002de6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8002dea:	f010 fa1d 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8002dee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002df2:	462a      	mov	r2, r5
 8002df4:	4648      	mov	r0, r9
 8002df6:	9300      	str	r3, [sp, #0]
 8002df8:	4629      	mov	r1, r5
 8002dfa:	23f0      	movs	r3, #240	; 0xf0
 8002dfc:	f7ff fc90 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002e00:	1d26      	adds	r6, r4, #4
        color = newColor;
 8002e02:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e06:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e08:	4649      	mov	r1, r9
 8002e0a:	4630      	mov	r0, r6
 8002e0c:	f00c fc80 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8002e10:	462a      	mov	r2, r5
 8002e12:	4640      	mov	r0, r8
 8002e14:	4629      	mov	r1, r5
 8002e16:	f7ff fc76 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002e1a:	f04f 0909 	mov.w	r9, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8002e1e:	4640      	mov	r0, r8
 8002e20:	a90a      	add	r1, sp, #40	; 0x28
 8002e22:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8002e26:	f00f fa02 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002e2a:	4641      	mov	r1, r8
 8002e2c:	4630      	mov	r0, r6
 8002e2e:	f00c fc6f 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8002e32:	4658      	mov	r0, fp
 8002e34:	f240 1201 	movw	r2, #257	; 0x101
 8002e38:	2121      	movs	r1, #33	; 0x21
 8002e3a:	f7ff fc64 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002e3e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8002e40:	aa0a      	add	r2, sp, #40	; 0x28
 8002e42:	a909      	add	r1, sp, #36	; 0x24
 8002e44:	4658      	mov	r0, fp
 8002e46:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002e4a:	2302      	movs	r3, #2
 8002e4c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002e50:	f00e fff7 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8002e54:	4658      	mov	r0, fp
 8002e56:	f8a4 90d0 	strh.w	r9, [r4, #208]	; 0xd0
 8002e5a:	f7ff fca9 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8002e5e:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8002e62:	330c      	adds	r3, #12
        color = col;
 8002e64:	f04f 39ff 	mov.w	r9, #4294967295
 8002e68:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8002e6c:	4659      	mov	r1, fp
 8002e6e:	4630      	mov	r0, r6
        colorPressed = col;
 8002e70:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 8002e74:	f00c fc4c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8002e78:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(32, 60);
 8002e7c:	223c      	movs	r2, #60	; 0x3c
 8002e7e:	ee18 0a90 	vmov	r0, s17
 8002e82:	2120      	movs	r1, #32
 8002e84:	f7ff fc3f 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002e88:	ee18 1a90 	vmov	r1, s17
 8002e8c:	4640      	mov	r0, r8
        color = newColor;
 8002e8e:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8002e92:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8002e96:	f00e fb55 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002e9a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002e9e:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8002ea2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8002ea6:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8002fd4 <_ZN24Calibration_HallViewBaseC1Ev+0x2c4>
 8002eaa:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002eae:	230a      	movs	r3, #10
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQKY));
 8002eb0:	ee18 0a90 	vmov	r0, s17
 8002eb4:	a90a      	add	r1, sp, #40	; 0x28
 8002eb6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002eba:	f00e fddd 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002ebe:	ee18 1a90 	vmov	r1, s17
 8002ec2:	4630      	mov	r0, r6
 8002ec4:	f00c fc24 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8002ec8:	230a      	movs	r3, #10
 8002eca:	9300      	str	r3, [sp, #0]
 8002ecc:	2232      	movs	r2, #50	; 0x32
 8002ece:	23f0      	movs	r3, #240	; 0xf0
 8002ed0:	4629      	mov	r1, r5
 8002ed2:	4638      	mov	r0, r7
 8002ed4:	f7ff fc24 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8002ed8:	9b03      	ldr	r3, [sp, #12]
 8002eda:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ede:	22a0      	movs	r2, #160	; 0xa0
 8002ee0:	4611      	mov	r1, r2
 8002ee2:	4638      	mov	r0, r7
 8002ee4:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8002ee8:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 8002eec:	f00e f97e 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8002ef0:	22a0      	movs	r2, #160	; 0xa0
 8002ef2:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8002ef6:	4638      	mov	r0, r7
 8002ef8:	f00e f983 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8002efc:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8002f00:	2b20      	cmp	r3, #32
 8002f02:	d005      	beq.n	8002f10 <_ZN24Calibration_HallViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8002f04:	2320      	movs	r3, #32
 8002f06:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8002f0a:	4638      	mov	r0, r7
 8002f0c:	f00e f878 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8002f10:	4638      	mov	r0, r7
 8002f12:	2101      	movs	r1, #1
 8002f14:	f00e f980 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8002f18:	4639      	mov	r1, r7
 8002f1a:	4630      	mov	r0, r6
 8002f1c:	f00c fbf8 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8002f20:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8002f24:	ee18 0a10 	vmov	r0, s16
 8002f28:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8002f2a:	2500      	movs	r5, #0
 8002f2c:	2145      	movs	r1, #69	; 0x45
 8002f2e:	f7ff fbea 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8002f32:	ee18 1a10 	vmov	r1, s16
 8002f36:	4640      	mov	r0, r8
        color = newColor;
 8002f38:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8002f3c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8002f40:	f00e fb00 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f44:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f48:	ee18 3a10 	vmov	r3, s16
 8002f4c:	333c      	adds	r3, #60	; 0x3c
 8002f4e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002f52:	230b      	movs	r3, #11
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4V7Y));
 8002f54:	ee18 0a10 	vmov	r0, s16
 8002f58:	a90a      	add	r1, sp, #40	; 0x28
 8002f5a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002f5e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002f62:	f00e fd89 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f66:	ee18 1a10 	vmov	r1, s16
 8002f6a:	4630      	mov	r0, r6
 8002f6c:	f00c fbd0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8002f70:	220c      	movs	r2, #12
 8002f72:	4650      	mov	r0, sl
 8002f74:	2136      	movs	r1, #54	; 0x36
 8002f76:	f7ff fbc6 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8002f7a:	4651      	mov	r1, sl
 8002f7c:	4640      	mov	r0, r8
        color = newColor;
 8002f7e:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 8002f82:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8002f86:	f00e fadd 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8002f8a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8002f8e:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8002f92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8002f96:	230c      	movs	r3, #12
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TVZ0));
 8002f98:	a90a      	add	r1, sp, #40	; 0x28
 8002f9a:	4650      	mov	r0, sl
 8002f9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8002fa0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8002fa4:	f00e fd68 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002fa8:	4630      	mov	r0, r6
 8002faa:	4651      	mov	r1, sl
 8002fac:	f00c fbb0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002fb0:	4620      	mov	r0, r4
 8002fb2:	b00d      	add	sp, #52	; 0x34
 8002fb4:	ecbd 8b02 	vpop	{d8}
 8002fb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fbc:	0802b5fc 	.word	0x0802b5fc
 8002fc0:	0802de70 	.word	0x0802de70
 8002fc4:	0802e038 	.word	0x0802e038
 8002fc8:	0802dba4 	.word	0x0802dba4
 8002fcc:	0802b5e4 	.word	0x0802b5e4
 8002fd0:	08002cf9 	.word	0x08002cf9
 8002fd4:	0802b4f8 	.word	0x0802b4f8

08002fd8 <_ZN23Calibration_PadViewBase11setupScreenEv>:
}

void Calibration_PadViewBase::setupScreen()
{

}
 8002fd8:	4770      	bx	lr

08002fda <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fda:	4770      	bx	lr

08002fdc <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002fdc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002fde:	68c2      	ldr	r2, [r0, #12]
 8002fe0:	6844      	ldr	r4, [r0, #4]
 8002fe2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002fe4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002fe6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002fea:	07d2      	lsls	r2, r2, #31
 8002fec:	bf48      	it	mi
 8002fee:	5962      	ldrmi	r2, [r4, r5]
 8002ff0:	689b      	ldr	r3, [r3, #8]
    }
 8002ff2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ff4:	bf48      	it	mi
 8002ff6:	58d3      	ldrmi	r3, [r2, r3]
 8002ff8:	4718      	bx	r3

08002ffa <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002ffa:	6843      	ldr	r3, [r0, #4]
 8002ffc:	b12b      	cbz	r3, 800300a <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002ffe:	6883      	ldr	r3, [r0, #8]
 8003000:	b92b      	cbnz	r3, 800300e <_ZNK8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003002:	68c0      	ldr	r0, [r0, #12]
 8003004:	f000 0001 	and.w	r0, r0, #1
 8003008:	4770      	bx	lr
 800300a:	4618      	mov	r0, r3
 800300c:	4770      	bx	lr
 800300e:	2001      	movs	r0, #1
    }
 8003010:	4770      	bx	lr

08003012 <_ZN8touchgfx8CallbackI23Calibration_PadViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003012:	b510      	push	{r4, lr}
 8003014:	2110      	movs	r1, #16
 8003016:	4604      	mov	r4, r0
 8003018:	f025 fe89 	bl	8028d2e <_ZdlPvj>
 800301c:	4620      	mov	r0, r4
 800301e:	bd10      	pop	{r4, pc}

08003020 <_ZN23Calibration_PadViewBaseD1Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003020:	b510      	push	{r4, lr}
 8003022:	4b03      	ldr	r3, [pc, #12]	; (8003030 <_ZN23Calibration_PadViewBaseD1Ev+0x10>)
 8003024:	6003      	str	r3, [r0, #0]
 8003026:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8003028:	f010 f908 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800302c:	4620      	mov	r0, r4
 800302e:	bd10      	pop	{r4, pc}
 8003030:	0802b648 	.word	0x0802b648

08003034 <_ZN23Calibration_PadViewBaseD0Ev>:
Calibration_PadViewBase::~Calibration_PadViewBase()
 8003034:	b507      	push	{r0, r1, r2, lr}
 8003036:	4b07      	ldr	r3, [pc, #28]	; (8003054 <_ZN23Calibration_PadViewBaseD0Ev+0x20>)
 8003038:	6003      	str	r3, [r0, #0]
 800303a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800303c:	f010 f8fe 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8003040:	9801      	ldr	r0, [sp, #4]
 8003042:	f241 015c 	movw	r1, #4188	; 0x105c
 8003046:	f025 fe72 	bl	8028d2e <_ZdlPvj>
 800304a:	9801      	ldr	r0, [sp, #4]
 800304c:	b003      	add	sp, #12
 800304e:	f85d fb04 	ldr.w	pc, [sp], #4
 8003052:	bf00      	nop
 8003054:	0802b648 	.word	0x0802b648

08003058 <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Calibration_PadViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8003058:	3098      	adds	r0, #152	; 0x98
 800305a:	4288      	cmp	r0, r1
{
 800305c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800305e:	d105      	bne.n	800306c <_ZN23Calibration_PadViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Calibration_PadViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003060:	f011 fdee 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Calibration
        //Go to Calibration with screen transition towards West
        application().gotoCalibrationScreenWipeTransitionWest();
    }
}
 8003064:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoCalibrationScreenWipeTransitionWest();
 8003068:	f000 bd04 	b.w	8003a74 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>
}
 800306c:	bd08      	pop	{r3, pc}
	...

08003070 <_ZN23Calibration_PadViewBaseC1Ev>:
Calibration_PadViewBase::Calibration_PadViewBase() :
 8003070:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003074:	ed2d 8b02 	vpush	{d8}
 8003078:	4604      	mov	r4, r0
 800307a:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Calibration_PadViewBase::buttonCallbackHandler)
 800307c:	46a1      	mov	r9, r4
 800307e:	2500      	movs	r5, #0
 8003080:	f013 fa5e 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8003084:	4ba5      	ldr	r3, [pc, #660]	; (800331c <_ZN23Calibration_PadViewBaseC1Ev+0x2ac>)
 8003086:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003088:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 800308c:	2226      	movs	r2, #38	; 0x26
 800308e:	4629      	mov	r1, r5
 8003090:	4648      	mov	r0, r9
 8003092:	f026 fe64 	bl	8029d5e <memset>
 8003096:	4648      	mov	r0, r9
 8003098:	f7ff fb56 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 800309c:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80030a0:	26ff      	movs	r6, #255	; 0xff
 80030a2:	4b9f      	ldr	r3, [pc, #636]	; (8003320 <_ZN23Calibration_PadViewBaseC1Ev+0x2b0>)
 80030a4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80030a6:	2226      	movs	r2, #38	; 0x26
 80030a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80030ac:	4629      	mov	r1, r5
 80030ae:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80030b2:	4640      	mov	r0, r8
 80030b4:	66a5      	str	r5, [r4, #104]	; 0x68
 80030b6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80030ba:	f026 fe50 	bl	8029d5e <memset>
 80030be:	4640      	mov	r0, r8
 80030c0:	f7ff fb42 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80030c4:	4b97      	ldr	r3, [pc, #604]	; (8003324 <_ZN23Calibration_PadViewBaseC1Ev+0x2b4>)
 80030c6:	66e3      	str	r3, [r4, #108]	; 0x6c
 80030c8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80030cc:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80030d0:	a90a      	add	r1, sp, #40	; 0x28
 80030d2:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 80030d6:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80030d8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80030dc:	f00f f8a7 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80030e0:	4658      	mov	r0, fp
 80030e2:	f00f f9e5 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80030e6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80030ea:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80030ee:	4618      	mov	r0, r3
 80030f0:	ee08 3a90 	vmov	s17, r3
 80030f4:	f7ff fb3a 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80030f8:	4638      	mov	r0, r7
 80030fa:	f00d ff61 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 80030fe:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003102:	4618      	mov	r0, r3
 8003104:	9303      	str	r3, [sp, #12]
 8003106:	f7fd ff9d 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800310a:	4b87      	ldr	r3, [pc, #540]	; (8003328 <_ZN23Calibration_PadViewBaseC1Ev+0x2b8>)
 800310c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8003110:	3324      	adds	r3, #36	; 0x24
 8003112:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 8003116:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 800311a:	4618      	mov	r0, r3
 800311c:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 8003120:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8003124:	ee08 3a10 	vmov	s16, r3
 8003128:	f7ff fb20 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 800312c:	4650      	mov	r0, sl
 800312e:	f7ff fb1d 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003132:	4a7e      	ldr	r2, [pc, #504]	; (800332c <_ZN23Calibration_PadViewBaseC1Ev+0x2bc>)
 8003134:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003138:	e9c3 2413 	strd	r2, r4, [r3, #76]	; 0x4c
 800313c:	4a7c      	ldr	r2, [pc, #496]	; (8003330 <_ZN23Calibration_PadViewBaseC1Ev+0x2c0>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800313e:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8003142:	e9c3 2515 	strd	r2, r5, [r3, #84]	; 0x54
 8003146:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 800314a:	f010 f86d 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800314e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003152:	462a      	mov	r2, r5
 8003154:	4648      	mov	r0, r9
 8003156:	9300      	str	r3, [sp, #0]
 8003158:	4629      	mov	r1, r5
 800315a:	23f0      	movs	r3, #240	; 0xf0
 800315c:	f7ff fae0 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003160:	1d26      	adds	r6, r4, #4
        color = newColor;
 8003162:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003166:	66a3      	str	r3, [r4, #104]	; 0x68
 8003168:	4649      	mov	r1, r9
 800316a:	4630      	mov	r0, r6
 800316c:	f00c fad0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8003170:	462a      	mov	r2, r5
 8003172:	4640      	mov	r0, r8
 8003174:	4629      	mov	r1, r5
 8003176:	f7ff fac6 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800317a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800317c:	4640      	mov	r0, r8
 800317e:	a90a      	add	r1, sp, #40	; 0x28
 8003180:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003184:	f00f f853 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003188:	4641      	mov	r1, r8
 800318a:	4630      	mov	r0, r6
 800318c:	f00c fac0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8003190:	4658      	mov	r0, fp
 8003192:	f240 1201 	movw	r2, #257	; 0x101
 8003196:	2121      	movs	r1, #33	; 0x21
 8003198:	f7ff fab5 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800319c:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800319e:	aa0a      	add	r2, sp, #40	; 0x28
 80031a0:	a909      	add	r1, sp, #36	; 0x24
 80031a2:	4658      	mov	r0, fp
 80031a4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80031a8:	2302      	movs	r3, #2
 80031aa:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031ae:	f00e fe48 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80031b2:	230f      	movs	r3, #15
        updateTextPosition();
 80031b4:	4658      	mov	r0, fp
 80031b6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80031ba:	f7ff faf9 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80031be:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 80031c2:	330c      	adds	r3, #12
        color = col;
 80031c4:	f04f 39ff 	mov.w	r9, #4294967295
 80031c8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80031cc:	4659      	mov	r1, fp
 80031ce:	4630      	mov	r0, r6
        colorPressed = col;
 80031d0:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80031d4:	f00c fa9c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80031d8:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(58, 60);
 80031dc:	223c      	movs	r2, #60	; 0x3c
 80031de:	ee18 0a90 	vmov	r0, s17
 80031e2:	213a      	movs	r1, #58	; 0x3a
 80031e4:	f7ff fa8f 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80031e8:	ee18 1a90 	vmov	r1, s17
 80031ec:	4640      	mov	r0, r8
        color = newColor;
 80031ee:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 80031f2:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80031f6:	f00e f9a5 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031fa:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80031fe:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8003202:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003206:	f8df b12c 	ldr.w	fp, [pc, #300]	; 8003334 <_ZN23Calibration_PadViewBaseC1Ev+0x2c4>
 800320a:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800320e:	230e      	movs	r3, #14
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X786));
 8003210:	ee18 0a90 	vmov	r0, s17
 8003214:	a90a      	add	r1, sp, #40	; 0x28
 8003216:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800321a:	f00e fc2d 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800321e:	ee18 1a90 	vmov	r1, s17
 8003222:	4630      	mov	r0, r6
 8003224:	f00c fa74 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8003228:	230a      	movs	r3, #10
 800322a:	9300      	str	r3, [sp, #0]
 800322c:	2232      	movs	r2, #50	; 0x32
 800322e:	23f0      	movs	r3, #240	; 0xf0
 8003230:	4629      	mov	r1, r5
 8003232:	4638      	mov	r0, r7
 8003234:	f7ff fa74 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003238:	9b03      	ldr	r3, [sp, #12]
 800323a:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800323e:	22a0      	movs	r2, #160	; 0xa0
 8003240:	4611      	mov	r1, r2
 8003242:	4638      	mov	r0, r7
 8003244:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003248:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800324c:	f00d ffce 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8003250:	22a0      	movs	r2, #160	; 0xa0
 8003252:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8003256:	4638      	mov	r0, r7
 8003258:	f00d ffd3 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800325c:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8003260:	2b20      	cmp	r3, #32
 8003262:	d005      	beq.n	8003270 <_ZN23Calibration_PadViewBaseC1Ev+0x200>
        lineWidthQ5 = widthQ5;
 8003264:	2320      	movs	r3, #32
 8003266:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 800326a:	4638      	mov	r0, r7
 800326c:	f00d fec8 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8003270:	4638      	mov	r0, r7
 8003272:	2101      	movs	r1, #1
 8003274:	f00d ffd0 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8003278:	4639      	mov	r1, r7
 800327a:	4630      	mov	r0, r6
 800327c:	f00c fa48 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003280:	f04f 37ff 	mov.w	r7, #4294967295
    textArea2.setXY(69, 35);
 8003284:	ee18 0a10 	vmov	r0, s16
 8003288:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 800328a:	2500      	movs	r5, #0
 800328c:	2145      	movs	r1, #69	; 0x45
 800328e:	f7ff fa3a 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8003292:	ee18 1a10 	vmov	r1, s16
 8003296:	4640      	mov	r0, r8
        color = newColor;
 8003298:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 800329c:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80032a0:	f00e f950 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80032a4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80032a8:	ee18 3a10 	vmov	r3, s16
 80032ac:	333c      	adds	r3, #60	; 0x3c
 80032ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80032b2:	2310      	movs	r3, #16
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FJID));
 80032b4:	ee18 0a10 	vmov	r0, s16
 80032b8:	a90a      	add	r1, sp, #40	; 0x28
 80032ba:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032be:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80032c2:	f00e fbd9 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80032c6:	ee18 1a10 	vmov	r1, s16
 80032ca:	4630      	mov	r0, r6
 80032cc:	f00c fa20 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80032d0:	220c      	movs	r2, #12
 80032d2:	4650      	mov	r0, sl
 80032d4:	2136      	movs	r1, #54	; 0x36
 80032d6:	f7ff fa16 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80032da:	4651      	mov	r1, sl
 80032dc:	4640      	mov	r0, r8
        color = newColor;
 80032de:	f8c4 7224 	str.w	r7, [r4, #548]	; 0x224
        linespace = space;
 80032e2:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80032e6:	f00e f92d 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80032ea:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80032ee:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 80032f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80032f6:	2311      	movs	r3, #17
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EAAK));
 80032f8:	a90a      	add	r1, sp, #40	; 0x28
 80032fa:	4650      	mov	r0, sl
 80032fc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003300:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8003304:	f00e fbb8 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003308:	4630      	mov	r0, r6
 800330a:	4651      	mov	r1, sl
 800330c:	f00c fa00 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003310:	4620      	mov	r0, r4
 8003312:	b00d      	add	sp, #52	; 0x34
 8003314:	ecbd 8b02 	vpop	{d8}
 8003318:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800331c:	0802b648 	.word	0x0802b648
 8003320:	0802de70 	.word	0x0802de70
 8003324:	0802e038 	.word	0x0802e038
 8003328:	0802dba4 	.word	0x0802dba4
 800332c:	0802b630 	.word	0x0802b630
 8003330:	08003059 	.word	0x08003059
 8003334:	0802b4f8 	.word	0x0802b4f8

08003338 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003338:	4770      	bx	lr

0800333a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800333a:	4770      	bx	lr

0800333c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800333c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003340:	6808      	ldr	r0, [r1, #0]
 8003342:	6849      	ldr	r1, [r1, #4]
 8003344:	c303      	stmia	r3!, {r0, r1}
    }
 8003346:	4770      	bx	lr

08003348 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003348:	4770      	bx	lr

0800334a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800334a:	4770      	bx	lr

0800334c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800334c:	6041      	str	r1, [r0, #4]
    }
 800334e:	4770      	bx	lr

08003350 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003350:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003352:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003354:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003358:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800335c:	8002      	strh	r2, [r0, #0]
 800335e:	8042      	strh	r2, [r0, #2]
 8003360:	8084      	strh	r4, [r0, #4]
 8003362:	80c1      	strh	r1, [r0, #6]
        }
 8003364:	bd10      	pop	{r4, pc}

08003366 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003366:	4770      	bx	lr

08003368 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003368:	4770      	bx	lr
	...

0800336c <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800336c:	4b06      	ldr	r3, [pc, #24]	; (8003388 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800336e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003372:	2300      	movs	r3, #0
 8003374:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Measurement_Single_Display_1P

void FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMeasurement_Single_Display_1PScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003378:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800337c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003380:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoMeasurement_Single_Display_1PScreenNoTransition();
    }
 8003384:	4770      	bx	lr
 8003386:	bf00      	nop
 8003388:	08003729 	.word	0x08003729

0800338c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800338c:	2301      	movs	r3, #1
 800338e:	7203      	strb	r3, [r0, #8]
    }
 8003390:	4770      	bx	lr

08003392 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003392:	4770      	bx	lr

08003394 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003394:	4770      	bx	lr

08003396 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 8003396:	4770      	bx	lr

08003398 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003398:	4770      	bx	lr

0800339a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 800339a:	4770      	bx	lr

0800339c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 800339c:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 800339e:	6840      	ldr	r0, [r0, #4]
 80033a0:	6803      	ldr	r3, [r0, #0]
 80033a2:	3110      	adds	r1, #16
 80033a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80033a6:	4718      	bx	r3

080033a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE4initEv>:
    }

    virtual void init()
 80033a8:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80033aa:	6840      	ldr	r0, [r0, #4]
 80033ac:	6803      	ldr	r3, [r0, #0]
 80033ae:	3110      	adds	r1, #16
 80033b0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80033b2:	4718      	bx	r3

080033b4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80033b4:	4770      	bx	lr

080033b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
    virtual void tearDown()
 80033b6:	4601      	mov	r1, r0
        screenContainer->remove(solid);
 80033b8:	6840      	ldr	r0, [r0, #4]
 80033ba:	6803      	ldr	r3, [r0, #0]
 80033bc:	3110      	adds	r1, #16
 80033be:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80033c0:	4718      	bx	r3

080033c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    virtual void init()
 80033c2:	4601      	mov	r1, r0
        screenContainer->add(solid);
 80033c4:	6840      	ldr	r0, [r0, #4]
 80033c6:	6803      	ldr	r3, [r0, #0]
 80033c8:	3110      	adds	r1, #16
 80033ca:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80033cc:	4718      	bx	r3

080033ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
    }
 80033ce:	4770      	bx	lr

080033d0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80033d0:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80033d2:	68c2      	ldr	r2, [r0, #12]
 80033d4:	6841      	ldr	r1, [r0, #4]
 80033d6:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80033d8:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80033da:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80033de:	07d2      	lsls	r2, r2, #31
 80033e0:	bf48      	it	mi
 80033e2:	590a      	ldrmi	r2, [r1, r4]
 80033e4:	689b      	ldr	r3, [r3, #8]
    }
 80033e6:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80033ea:	bf48      	it	mi
 80033ec:	58d3      	ldrmi	r3, [r2, r3]
 80033ee:	4718      	bx	r3

080033f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80033f0:	6843      	ldr	r3, [r0, #4]
 80033f2:	b12b      	cbz	r3, 8003400 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80033f4:	6883      	ldr	r3, [r0, #8]
 80033f6:	b92b      	cbnz	r3, 8003404 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80033f8:	68c0      	ldr	r0, [r0, #12]
 80033fa:	f000 0001 	and.w	r0, r0, #1
 80033fe:	4770      	bx	lr
 8003400:	4618      	mov	r0, r3
 8003402:	4770      	bx	lr
 8003404:	2001      	movs	r0, #1
    }
 8003406:	4770      	bx	lr

08003408 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003408:	b510      	push	{r4, lr}
 800340a:	210c      	movs	r1, #12
 800340c:	4604      	mov	r4, r0
 800340e:	f025 fc8e 	bl	8028d2e <_ZdlPvj>
 8003412:	4620      	mov	r0, r4
 8003414:	bd10      	pop	{r4, pc}

08003416 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003416:	b510      	push	{r4, lr}
 8003418:	2110      	movs	r1, #16
 800341a:	4604      	mov	r4, r0
 800341c:	f025 fc87 	bl	8028d2e <_ZdlPvj>
 8003420:	4620      	mov	r0, r4
 8003422:	bd10      	pop	{r4, pc}

08003424 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003424:	b510      	push	{r4, lr}
 8003426:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800342a:	4604      	mov	r4, r0
 800342c:	f025 fc7f 	bl	8028d2e <_ZdlPvj>
 8003430:	4620      	mov	r0, r4
 8003432:	bd10      	pop	{r4, pc}

08003434 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EED0Ev>:
class WipeTransition : public Transition
 8003434:	b510      	push	{r4, lr}
 8003436:	2138      	movs	r1, #56	; 0x38
 8003438:	4604      	mov	r4, r0
 800343a:	f025 fc78 	bl	8028d2e <_ZdlPvj>
 800343e:	4620      	mov	r0, r4
 8003440:	bd10      	pop	{r4, pc}

08003442 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003442:	b510      	push	{r4, lr}
 8003444:	2128      	movs	r1, #40	; 0x28
 8003446:	4604      	mov	r4, r0
 8003448:	f025 fc71 	bl	8028d2e <_ZdlPvj>
 800344c:	4620      	mov	r0, r4
 800344e:	bd10      	pop	{r4, pc}

08003450 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
 8003450:	b510      	push	{r4, lr}
 8003452:	2138      	movs	r1, #56	; 0x38
 8003454:	4604      	mov	r4, r0
 8003456:	f025 fc6a 	bl	8028d2e <_ZdlPvj>
 800345a:	4620      	mov	r0, r4
 800345c:	bd10      	pop	{r4, pc}

0800345e <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800345e:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003460:	f011 fbee 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 8003464:	6803      	ldr	r3, [r0, #0]
    }
 8003466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 800346a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800346c:	4718      	bx	r3
	...

08003470 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003470:	b513      	push	{r0, r1, r4, lr}
 8003472:	4604      	mov	r4, r0
        animationCounter++;
 8003474:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8003476:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003478:	3001      	adds	r0, #1
 800347a:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800347c:	4298      	cmp	r0, r3
        animationCounter++;
 800347e:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003480:	d905      	bls.n	800348e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1e>
            done = true;
 8003482:	2301      	movs	r3, #1
 8003484:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003486:	2300      	movs	r3, #0
 8003488:	72a3      	strb	r3, [r4, #10]
    }
 800348a:	b002      	add	sp, #8
 800348c:	bd10      	pop	{r4, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800348e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003492:	2100      	movs	r1, #0
 8003494:	f013 fa06 	bl	80168a4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003498:	f010 0201 	ands.w	r2, r0, #1
 800349c:	b283      	uxth	r3, r0
 800349e:	d12a      	bne.n	80034f6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x86>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80034a0:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80034a2:	4a19      	ldr	r2, [pc, #100]	; (8003508 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x98>)
 80034a4:	f9b4 000e 	ldrsh.w	r0, [r4, #14]
 80034a8:	89e3      	ldrh	r3, [r4, #14]
 80034aa:	8812      	ldrh	r2, [r2, #0]
        return rect.x;
 80034ac:	f9b4 1014 	ldrsh.w	r1, [r4, #20]
        rect.x = x;
 80034b0:	82a0      	strh	r0, [r4, #20]
 80034b2:	2000      	movs	r0, #0
 80034b4:	1ad2      	subs	r2, r2, r3
 80034b6:	f8ad 0002 	strh.w	r0, [sp, #2]
                screenContainer->invalidateRect(r);
 80034ba:	6860      	ldr	r0, [r4, #4]
        rect.width = width;
 80034bc:	8322      	strh	r2, [r4, #24]
                const uint16_t delta = calculatedValue - prevSolidPos;
 80034be:	1a5b      	subs	r3, r3, r1
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80034c0:	4a12      	ldr	r2, [pc, #72]	; (800350c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x9c>)
 80034c2:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80034c6:	6803      	ldr	r3, [r0, #0]
                Rect r(prevSolidPos, 0, delta, HAL::DISPLAY_HEIGHT);
 80034c8:	f9b2 2000 	ldrsh.w	r2, [r2]
                screenContainer->invalidateRect(r);
 80034cc:	691b      	ldr	r3, [r3, #16]
 80034ce:	f8ad 1000 	strh.w	r1, [sp]
 80034d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80034d6:	4669      	mov	r1, sp
 80034d8:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80034da:	7aa3      	ldrb	r3, [r4, #10]
 80034dc:	2b01      	cmp	r3, #1
 80034de:	d1d4      	bne.n	800348a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
 80034e0:	4b0b      	ldr	r3, [pc, #44]	; (8003510 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0xa0>)
 80034e2:	781b      	ldrb	r3, [r3, #0]
 80034e4:	2b00      	cmp	r3, #0
 80034e6:	d0d0      	beq.n	800348a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034e8:	f011 fbaa 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80034ec:	b002      	add	sp, #8
 80034ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80034f2:	f011 bbab 	b.w	8014c4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80034f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80034fa:	2800      	cmp	r0, #0
 80034fc:	bfd8      	it	le
 80034fe:	460a      	movle	r2, r1
 8003500:	4413      	add	r3, r2
 8003502:	81e3      	strh	r3, [r4, #14]
 8003504:	e7cd      	b.n	80034a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EE15handleTickEventEv+0x32>
 8003506:	bf00      	nop
 8003508:	20012da8 	.word	0x20012da8
 800350c:	20012daa 	.word	0x20012daa
 8003510:	20012db2 	.word	0x20012db2

08003514 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003514:	b510      	push	{r4, lr}
 8003516:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003518:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800351c:	b158      	cbz	r0, 8003536 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800351e:	6803      	ldr	r3, [r0, #0]
 8003520:	68db      	ldr	r3, [r3, #12]
 8003522:	4798      	blx	r3
 8003524:	b138      	cbz	r0, 8003536 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003526:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800352a:	6803      	ldr	r3, [r0, #0]
 800352c:	689b      	ldr	r3, [r3, #8]
 800352e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003530:	2300      	movs	r3, #0
 8003532:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003536:	bd10      	pop	{r4, pc}

08003538 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoShutting_OffScreenNoTransitionImpl()
{
 8003538:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Shutting_OffView, Shutting_OffPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800353c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003540:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003542:	68a8      	ldr	r0, [r5, #8]
 8003544:	6803      	ldr	r3, [r0, #0]
 8003546:	6a1b      	ldr	r3, [r3, #32]
 8003548:	4798      	blx	r3
 800354a:	2897      	cmp	r0, #151	; 0x97
 800354c:	d805      	bhi.n	800355a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x22>
 800354e:	4b46      	ldr	r3, [pc, #280]	; (8003668 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x130>)
 8003550:	4a46      	ldr	r2, [pc, #280]	; (800366c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 8003552:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003554:	4846      	ldr	r0, [pc, #280]	; (8003670 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x138>)
 8003556:	f026 f9fd 	bl	8029954 <__assert_func>
 800355a:	6868      	ldr	r0, [r5, #4]
 800355c:	6803      	ldr	r3, [r0, #0]
 800355e:	6a1b      	ldr	r3, [r3, #32]
 8003560:	4798      	blx	r3
 8003562:	280f      	cmp	r0, #15
 8003564:	d803      	bhi.n	800356e <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x36>
 8003566:	4b43      	ldr	r3, [pc, #268]	; (8003674 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x13c>)
 8003568:	4a40      	ldr	r2, [pc, #256]	; (800366c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800356a:	21a4      	movs	r1, #164	; 0xa4
 800356c:	e7f2      	b.n	8003554 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800356e:	68e8      	ldr	r0, [r5, #12]
 8003570:	6803      	ldr	r3, [r0, #0]
 8003572:	6a1b      	ldr	r3, [r3, #32]
 8003574:	4798      	blx	r3
 8003576:	280b      	cmp	r0, #11
 8003578:	d803      	bhi.n	8003582 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x4a>
 800357a:	4b3f      	ldr	r3, [pc, #252]	; (8003678 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x140>)
 800357c:	4a3b      	ldr	r2, [pc, #236]	; (800366c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x134>)
 800357e:	21a5      	movs	r1, #165	; 0xa5
 8003580:	e7e8      	b.n	8003554 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003582:	f011 fb5d 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003586:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003680 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 800358a:	3004      	adds	r0, #4
 800358c:	f011 fbbe 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003590:	f8d9 0000 	ldr.w	r0, [r9]
 8003594:	b110      	cbz	r0, 800359c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8003596:	6803      	ldr	r3, [r0, #0]
 8003598:	68db      	ldr	r3, [r3, #12]
 800359a:	4798      	blx	r3
    if (*currentTrans)
 800359c:	f8d9 0000 	ldr.w	r0, [r9]
 80035a0:	b110      	cbz	r0, 80035a8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80035a2:	6803      	ldr	r3, [r0, #0]
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	4798      	blx	r3
    if (*currentScreen)
 80035a8:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003684 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x14c>
 80035ac:	f8d8 0000 	ldr.w	r0, [r8]
 80035b0:	b110      	cbz	r0, 80035b8 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80035b2:	6803      	ldr	r3, [r0, #0]
 80035b4:	695b      	ldr	r3, [r3, #20]
 80035b6:	4798      	blx	r3
    if (*currentPresenter)
 80035b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80035bc:	b110      	cbz	r0, 80035c4 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80035be:	6803      	ldr	r3, [r0, #0]
 80035c0:	685b      	ldr	r3, [r3, #4]
 80035c2:	4798      	blx	r3
    if (*currentScreen)
 80035c4:	f8d8 0000 	ldr.w	r0, [r8]
 80035c8:	b110      	cbz	r0, 80035d0 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80035ca:	6803      	ldr	r3, [r0, #0]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	4798      	blx	r3
    if (*currentPresenter)
 80035d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80035d4:	b110      	cbz	r0, 80035dc <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80035d6:	6803      	ldr	r3, [r0, #0]
 80035d8:	689b      	ldr	r3, [r3, #8]
 80035da:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80035dc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80035de:	6803      	ldr	r3, [r0, #0]
 80035e0:	2100      	movs	r1, #0
 80035e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035e4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80035e6:	f04f 0b00 	mov.w	fp, #0
 80035ea:	4b24      	ldr	r3, [pc, #144]	; (800367c <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x144>)
 80035ec:	6003      	str	r3, [r0, #0]
 80035ee:	4604      	mov	r4, r0
 80035f0:	f8c0 b004 	str.w	fp, [r0, #4]
 80035f4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80035f8:	68a8      	ldr	r0, [r5, #8]
 80035fa:	6803      	ldr	r3, [r0, #0]
 80035fc:	4659      	mov	r1, fp
 80035fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003600:	4798      	blx	r3
 8003602:	4606      	mov	r6, r0
 8003604:	f005 fa76 	bl	8008af4 <_ZN16Shutting_OffViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003608:	6868      	ldr	r0, [r5, #4]
 800360a:	6803      	ldr	r3, [r0, #0]
 800360c:	4659      	mov	r1, fp
 800360e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003610:	4798      	blx	r3
 8003612:	4631      	mov	r1, r6
 8003614:	4605      	mov	r5, r0
 8003616:	f005 fa49 	bl	8008aac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>
    *currentTrans = newTransition;
 800361a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800361e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003622:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003626:	b1e5      	cbz	r5, 8003662 <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0x12a>
 8003628:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800362a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800362e:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003630:	f8c5 a008 	str.w	sl, [r5, #8]
 8003634:	4630      	mov	r0, r6
 8003636:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003638:	63f5      	str	r5, [r6, #60]	; 0x3c
 800363a:	4798      	blx	r3
    newPresenter->activate();
 800363c:	682b      	ldr	r3, [r5, #0]
 800363e:	4628      	mov	r0, r5
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003644:	4621      	mov	r1, r4
 8003646:	4630      	mov	r0, r6
 8003648:	f013 f926 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800364c:	6823      	ldr	r3, [r4, #0]
 800364e:	4620      	mov	r0, r4
 8003650:	691b      	ldr	r3, [r3, #16]
 8003652:	4798      	blx	r3
    newTransition->invalidate();
 8003654:	6823      	ldr	r3, [r4, #0]
 8003656:	695b      	ldr	r3, [r3, #20]
 8003658:	4620      	mov	r0, r4
}
 800365a:	b001      	add	sp, #4
 800365c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003660:	4718      	bx	r3
    model->bind(newPresenter);
 8003662:	462b      	mov	r3, r5
 8003664:	e7e1      	b.n	800362a <_ZN23FrontendApplicationBase38gotoShutting_OffScreenNoTransitionImplEv+0xf2>
 8003666:	bf00      	nop
 8003668:	0802b674 	.word	0x0802b674
 800366c:	0802b702 	.word	0x0802b702
 8003670:	0802b810 	.word	0x0802b810
 8003674:	0802b857 	.word	0x0802b857
 8003678:	0802b8fa 	.word	0x0802b8fa
 800367c:	0802cd40 	.word	0x0802cd40
 8003680:	20012dfc 	.word	0x20012dfc
 8003684:	20012df8 	.word	0x20012df8

08003688 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003688:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800368a:	4604      	mov	r4, r0
        animationCounter++;
 800368c:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 800368e:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8003690:	3001      	adds	r0, #1
 8003692:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003694:	4298      	cmp	r0, r3
        animationCounter++;
 8003696:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 8003698:	d905      	bls.n	80036a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800369a:	2301      	movs	r3, #1
 800369c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800369e:	2300      	movs	r3, #0
 80036a0:	72a3      	strb	r3, [r4, #10]
    }
 80036a2:	b003      	add	sp, #12
 80036a4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80036a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80036aa:	2100      	movs	r1, #0
 80036ac:	f013 f8fa 	bl	80168a4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80036b0:	f010 0201 	ands.w	r2, r0, #1
 80036b4:	b283      	uxth	r3, r0
 80036b6:	d128      	bne.n	800370a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80036b8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80036ba:	4b18      	ldr	r3, [pc, #96]	; (800371c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80036bc:	4818      	ldr	r0, [pc, #96]	; (8003720 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80036be:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80036c0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80036c2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80036c4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80036c8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80036cc:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80036ce:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80036d0:	442b      	add	r3, r5
 80036d2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80036d4:	b212      	sxth	r2, r2
 80036d6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80036da:	6803      	ldr	r3, [r0, #0]
 80036dc:	8322      	strh	r2, [r4, #24]
 80036de:	f8ad 2000 	strh.w	r2, [sp]
 80036e2:	2200      	movs	r2, #0
 80036e4:	691b      	ldr	r3, [r3, #16]
 80036e6:	f8ad 2002 	strh.w	r2, [sp, #2]
 80036ea:	4669      	mov	r1, sp
 80036ec:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80036ee:	7aa3      	ldrb	r3, [r4, #10]
 80036f0:	2b01      	cmp	r3, #1
 80036f2:	d1d6      	bne.n	80036a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80036f4:	4b0b      	ldr	r3, [pc, #44]	; (8003724 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80036f6:	781b      	ldrb	r3, [r3, #0]
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	d0d2      	beq.n	80036a2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80036fc:	f011 faa0 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003700:	b003      	add	sp, #12
 8003702:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8003706:	f011 baa1 	b.w	8014c4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800370a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800370e:	2800      	cmp	r0, #0
 8003710:	bfd8      	it	le
 8003712:	460a      	movle	r2, r1
 8003714:	4413      	add	r3, r2
 8003716:	81e3      	strh	r3, [r4, #14]
 8003718:	e7cf      	b.n	80036ba <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800371a:	bf00      	nop
 800371c:	20012da8 	.word	0x20012da8
 8003720:	20012daa 	.word	0x20012daa
 8003724:	20012db2 	.word	0x20012db2

08003728 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv>:
{
 8003728:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800372c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003730:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003732:	68a8      	ldr	r0, [r5, #8]
 8003734:	6803      	ldr	r3, [r0, #0]
 8003736:	6a1b      	ldr	r3, [r3, #32]
 8003738:	4798      	blx	r3
 800373a:	f241 33f7 	movw	r3, #5111	; 0x13f7
 800373e:	4298      	cmp	r0, r3
 8003740:	d805      	bhi.n	800374e <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x26>
 8003742:	4b46      	ldr	r3, [pc, #280]	; (800385c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x134>)
 8003744:	4a46      	ldr	r2, [pc, #280]	; (8003860 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 8003746:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003748:	4846      	ldr	r0, [pc, #280]	; (8003864 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x13c>)
 800374a:	f026 f903 	bl	8029954 <__assert_func>
 800374e:	6868      	ldr	r0, [r5, #4]
 8003750:	6803      	ldr	r3, [r0, #0]
 8003752:	6a1b      	ldr	r3, [r3, #32]
 8003754:	4798      	blx	r3
 8003756:	280f      	cmp	r0, #15
 8003758:	d803      	bhi.n	8003762 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x3a>
 800375a:	4b43      	ldr	r3, [pc, #268]	; (8003868 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x140>)
 800375c:	4a40      	ldr	r2, [pc, #256]	; (8003860 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 800375e:	21a4      	movs	r1, #164	; 0xa4
 8003760:	e7f2      	b.n	8003748 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003762:	68e8      	ldr	r0, [r5, #12]
 8003764:	6803      	ldr	r3, [r0, #0]
 8003766:	6a1b      	ldr	r3, [r3, #32]
 8003768:	4798      	blx	r3
 800376a:	280b      	cmp	r0, #11
 800376c:	d803      	bhi.n	8003776 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x4e>
 800376e:	4b3f      	ldr	r3, [pc, #252]	; (800386c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x144>)
 8003770:	4a3b      	ldr	r2, [pc, #236]	; (8003860 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x138>)
 8003772:	21a5      	movs	r1, #165	; 0xa5
 8003774:	e7e8      	b.n	8003748 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003776:	f011 fa63 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800377a:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8003874 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x14c>
 800377e:	3004      	adds	r0, #4
 8003780:	f011 fac4 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003784:	f8d9 0000 	ldr.w	r0, [r9]
 8003788:	b110      	cbz	r0, 8003790 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800378a:	6803      	ldr	r3, [r0, #0]
 800378c:	68db      	ldr	r3, [r3, #12]
 800378e:	4798      	blx	r3
    if (*currentTrans)
 8003790:	f8d9 0000 	ldr.w	r0, [r9]
 8003794:	b110      	cbz	r0, 800379c <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 8003796:	6803      	ldr	r3, [r0, #0]
 8003798:	681b      	ldr	r3, [r3, #0]
 800379a:	4798      	blx	r3
    if (*currentScreen)
 800379c:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003878 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x150>
 80037a0:	f8d8 0000 	ldr.w	r0, [r8]
 80037a4:	b110      	cbz	r0, 80037ac <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80037a6:	6803      	ldr	r3, [r0, #0]
 80037a8:	695b      	ldr	r3, [r3, #20]
 80037aa:	4798      	blx	r3
    if (*currentPresenter)
 80037ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80037b0:	b110      	cbz	r0, 80037b8 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80037b2:	6803      	ldr	r3, [r0, #0]
 80037b4:	685b      	ldr	r3, [r3, #4]
 80037b6:	4798      	blx	r3
    if (*currentScreen)
 80037b8:	f8d8 0000 	ldr.w	r0, [r8]
 80037bc:	b110      	cbz	r0, 80037c4 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80037be:	6803      	ldr	r3, [r0, #0]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	4798      	blx	r3
    if (*currentPresenter)
 80037c4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80037c8:	b110      	cbz	r0, 80037d0 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80037ca:	6803      	ldr	r3, [r0, #0]
 80037cc:	689b      	ldr	r3, [r3, #8]
 80037ce:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80037d0:	68e8      	ldr	r0, [r5, #12]
 80037d2:	6803      	ldr	r3, [r0, #0]
 80037d4:	2100      	movs	r1, #0
 80037d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037d8:	4798      	blx	r3
 80037da:	f04f 0b00 	mov.w	fp, #0
 80037de:	4b24      	ldr	r3, [pc, #144]	; (8003870 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x148>)
 80037e0:	6003      	str	r3, [r0, #0]
 80037e2:	4604      	mov	r4, r0
 80037e4:	f8c0 b004 	str.w	fp, [r0, #4]
 80037e8:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80037ec:	68a8      	ldr	r0, [r5, #8]
 80037ee:	6803      	ldr	r3, [r0, #0]
 80037f0:	4659      	mov	r1, fp
 80037f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80037f4:	4798      	blx	r3
 80037f6:	4606      	mov	r6, r0
 80037f8:	f005 f81e 	bl	8008838 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80037fc:	6868      	ldr	r0, [r5, #4]
 80037fe:	6803      	ldr	r3, [r0, #0]
 8003800:	4659      	mov	r1, fp
 8003802:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003804:	4798      	blx	r3
 8003806:	4631      	mov	r1, r6
 8003808:	4605      	mov	r5, r0
 800380a:	f004 ffef 	bl	80087ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 800380e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003812:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003816:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800381a:	b1e5      	cbz	r5, 8003856 <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0x12e>
 800381c:	1d2b      	adds	r3, r5, #4
 800381e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003822:	6833      	ldr	r3, [r6, #0]
 8003824:	f8c5 a008 	str.w	sl, [r5, #8]
 8003828:	4630      	mov	r0, r6
 800382a:	68db      	ldr	r3, [r3, #12]
 800382c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800382e:	4798      	blx	r3
    newPresenter->activate();
 8003830:	682b      	ldr	r3, [r5, #0]
 8003832:	4628      	mov	r0, r5
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003838:	4621      	mov	r1, r4
 800383a:	4630      	mov	r0, r6
 800383c:	f013 f82c 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003840:	6823      	ldr	r3, [r4, #0]
 8003842:	4620      	mov	r0, r4
 8003844:	691b      	ldr	r3, [r3, #16]
 8003846:	4798      	blx	r3
    newTransition->invalidate();
 8003848:	6823      	ldr	r3, [r4, #0]
 800384a:	695b      	ldr	r3, [r3, #20]
 800384c:	4620      	mov	r0, r4
}
 800384e:	b001      	add	sp, #4
 8003850:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003854:	4718      	bx	r3
    model->bind(newPresenter);
 8003856:	462b      	mov	r3, r5
 8003858:	e7e1      	b.n	800381e <_ZN23FrontendApplicationBase55gotoMeasurement_Single_Display_1PScreenNoTransitionImplEv+0xf6>
 800385a:	bf00      	nop
 800385c:	0802b674 	.word	0x0802b674
 8003860:	0802b99d 	.word	0x0802b99d
 8003864:	0802b810 	.word	0x0802b810
 8003868:	0802b857 	.word	0x0802b857
 800386c:	0802b8fa 	.word	0x0802b8fa
 8003870:	0802cd40 	.word	0x0802cd40
 8003874:	20012dfc 	.word	0x20012dfc
 8003878:	20012df8 	.word	0x20012df8

0800387c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800387c:	4b04      	ldr	r3, [pc, #16]	; (8003890 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8003884:	b10a      	cbz	r2, 800388a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8003886:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003888:	b900      	cbnz	r0, 800388c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800388a:	6898      	ldr	r0, [r3, #8]
    }
 800388c:	4770      	bx	lr
 800388e:	bf00      	nop
 8003890:	20012db4 	.word	0x20012db4

08003894 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003896:	4604      	mov	r4, r0
 8003898:	4617      	mov	r7, r2
 800389a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800389c:	f011 fb04 	bl	8014ea8 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80038a0:	4b10      	ldr	r3, [pc, #64]	; (80038e4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80038a2:	601c      	str	r4, [r3, #0]
      model(m)
 80038a4:	4b10      	ldr	r3, [pc, #64]	; (80038e8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80038a6:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80038a8:	4b10      	ldr	r3, [pc, #64]	; (80038ec <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
        : currentPresenter(0),
 80038aa:	2500      	movs	r5, #0
 80038ac:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80038b0:	4b0f      	ldr	r3, [pc, #60]	; (80038f0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80038b2:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80038b6:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	2101      	movs	r1, #1
 80038bc:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 80038be:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80038c2:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 80038c6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80038c8:	4628      	mov	r0, r5
 80038ca:	f004 fbf5 	bl	80080b8 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80038ce:	f7ff ffd5 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80038d2:	f01a feae 	bl	801e632 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 80038d6:	f7ff ffd1 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80038da:	f01a ff25 	bl	801e728 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 80038de:	4620      	mov	r0, r4
 80038e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80038e2:	bf00      	nop
 80038e4:	20012e08 	.word	0x20012e08
 80038e8:	0802ccec 	.word	0x0802ccec
 80038ec:	0802ccd4 	.word	0x0802ccd4
 80038f0:	20012db4 	.word	0x20012db4

080038f4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80038f4:	4b06      	ldr	r3, [pc, #24]	; (8003910 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv+0x1c>)
 80038f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80038fa:	2300      	movs	r3, #0
 80038fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003900:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003904:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003908:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800390c:	4770      	bx	lr
 800390e:	bf00      	nop
 8003910:	08003f39 	.word	0x08003f39

08003914 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>:
 8003914:	4b06      	ldr	r3, [pc, #24]	; (8003930 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv+0x1c>)
 8003916:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800391a:	2300      	movs	r3, #0
 800391c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003920:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003924:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003928:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800392c:	4770      	bx	lr
 800392e:	bf00      	nop
 8003930:	08004d5d 	.word	0x08004d5d

08003934 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>:
 8003934:	4b06      	ldr	r3, [pc, #24]	; (8003950 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv+0x1c>)
 8003936:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800393a:	2300      	movs	r3, #0
 800393c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003940:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003944:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003948:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800394c:	4770      	bx	lr
 800394e:	bf00      	nop
 8003950:	08003df9 	.word	0x08003df9

08003954 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>:
 8003954:	4b06      	ldr	r3, [pc, #24]	; (8003970 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv+0x1c>)
 8003956:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800395a:	2300      	movs	r3, #0
 800395c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003960:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003964:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003968:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800396c:	4770      	bx	lr
 800396e:	bf00      	nop
 8003970:	08004c1d 	.word	0x08004c1d

08003974 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv>:
 8003974:	4b06      	ldr	r3, [pc, #24]	; (8003990 <_ZN23FrontendApplicationBase51gotoMeasurement_Single_Display_1PScreenNoTransitionEv+0x1c>)
 8003976:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800397a:	2300      	movs	r3, #0
 800397c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003980:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003984:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003988:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800398c:	4770      	bx	lr
 800398e:	bf00      	nop
 8003990:	08003729 	.word	0x08003729

08003994 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>:
 8003994:	4b06      	ldr	r3, [pc, #24]	; (80039b0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv+0x1c>)
 8003996:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800399a:	2300      	movs	r3, #0
 800399c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ac:	4770      	bx	lr
 80039ae:	bf00      	nop
 80039b0:	08004add 	.word	0x08004add

080039b4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>:
 80039b4:	4b06      	ldr	r3, [pc, #24]	; (80039d0 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv+0x1c>)
 80039b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039ba:	2300      	movs	r3, #0
 80039bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039cc:	4770      	bx	lr
 80039ce:	bf00      	nop
 80039d0:	0800499d 	.word	0x0800499d

080039d4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>:
 80039d4:	4b06      	ldr	r3, [pc, #24]	; (80039f0 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv+0x1c>)
 80039d6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039da:	2300      	movs	r3, #0
 80039dc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80039e0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80039e4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80039e8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80039ec:	4770      	bx	lr
 80039ee:	bf00      	nop
 80039f0:	0800485d 	.word	0x0800485d

080039f4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>:
 80039f4:	4b06      	ldr	r3, [pc, #24]	; (8003a10 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv+0x1c>)
 80039f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80039fa:	2300      	movs	r3, #0
 80039fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a0c:	4770      	bx	lr
 8003a0e:	bf00      	nop
 8003a10:	08003cb9 	.word	0x08003cb9

08003a14 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>:
 8003a14:	4b06      	ldr	r3, [pc, #24]	; (8003a30 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv+0x1c>)
 8003a16:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a20:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a24:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a28:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a2c:	4770      	bx	lr
 8003a2e:	bf00      	nop
 8003a30:	0800471d 	.word	0x0800471d

08003a34 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>:
 8003a34:	4b06      	ldr	r3, [pc, #24]	; (8003a50 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv+0x1c>)
 8003a36:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a3a:	2300      	movs	r3, #0
 8003a3c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a40:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a44:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a48:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a4c:	4770      	bx	lr
 8003a4e:	bf00      	nop
 8003a50:	080045dd 	.word	0x080045dd

08003a54 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>:
 8003a54:	4b06      	ldr	r3, [pc, #24]	; (8003a70 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv+0x1c>)
 8003a56:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a5a:	2300      	movs	r3, #0
 8003a5c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a60:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a64:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a68:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a6c:	4770      	bx	lr
 8003a6e:	bf00      	nop
 8003a70:	0800449d 	.word	0x0800449d

08003a74 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv>:
 8003a74:	4b06      	ldr	r3, [pc, #24]	; (8003a90 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionWestEv+0x1c>)
 8003a76:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003a80:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003a84:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003a88:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003a8c:	4770      	bx	lr
 8003a8e:	bf00      	nop
 8003a90:	08003b79 	.word	0x08003b79

08003a94 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv>:
 8003a94:	4b06      	ldr	r3, [pc, #24]	; (8003ab0 <_ZN23FrontendApplicationBase43gotoCalibration_PadScreenWipeTransitionEastEv+0x1c>)
 8003a96:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003aa0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003aa4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003aa8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aac:	4770      	bx	lr
 8003aae:	bf00      	nop
 8003ab0:	0800435d 	.word	0x0800435d

08003ab4 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv>:
 8003ab4:	4b06      	ldr	r3, [pc, #24]	; (8003ad0 <_ZN23FrontendApplicationBase44gotoCalibration_HallScreenWipeTransitionEastEv+0x1c>)
 8003ab6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003aba:	2300      	movs	r3, #0
 8003abc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ac0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ac4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ac8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003acc:	4770      	bx	lr
 8003ace:	bf00      	nop
 8003ad0:	0800421d 	.word	0x0800421d

08003ad4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>:
 8003ad4:	4b06      	ldr	r3, [pc, #24]	; (8003af0 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv+0x1c>)
 8003ad6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003ada:	2300      	movs	r3, #0
 8003adc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003ae0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003ae4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003ae8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003aec:	4770      	bx	lr
 8003aee:	bf00      	nop
 8003af0:	080040dd 	.word	0x080040dd

08003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>:
 8003af4:	4b06      	ldr	r3, [pc, #24]	; (8003b10 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv+0x1c>)
 8003af6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003afa:	2300      	movs	r3, #0
 8003afc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003b00:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003b04:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003b08:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003b0c:	4770      	bx	lr
 8003b0e:	bf00      	nop
 8003b10:	08003539 	.word	0x08003539

08003b14 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>:
 8003b14:	6803      	ldr	r3, [r0, #0]
 8003b16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b18:	4718      	bx	r3
	...

08003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>:
          solid()
 8003b1c:	4b12      	ldr	r3, [pc, #72]	; (8003b68 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8003b1e:	b513      	push	{r0, r1, r4, lr}
          solid()
 8003b20:	6003      	str	r3, [r0, #0]
 8003b22:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003b26:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8003b28:	4b10      	ldr	r3, [pc, #64]	; (8003b6c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 8003b2a:	7241      	strb	r1, [r0, #9]
 8003b2c:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003b2e:	4910      	ldr	r1, [pc, #64]	; (8003b70 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8003b30:	4b10      	ldr	r3, [pc, #64]	; (8003b74 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003b32:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 8003b36:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003b3a:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8003b3c:	2200      	movs	r2, #0
 8003b3e:	6042      	str	r2, [r0, #4]
 8003b40:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 8003b42:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 8003b44:	81c2      	strh	r2, [r0, #14]
          solid()
 8003b46:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003b4a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003b4e:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 8003b52:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 8003b56:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003b58:	9100      	str	r1, [sp, #0]
 8003b5a:	3010      	adds	r0, #16
 8003b5c:	4611      	mov	r1, r2
 8003b5e:	f7fe fddf 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 8003b62:	4620      	mov	r0, r4
 8003b64:	b002      	add	sp, #8
 8003b66:	bd10      	pop	{r4, pc}
 8003b68:	0802cd88 	.word	0x0802cd88
 8003b6c:	0802cc6c 	.word	0x0802cc6c
 8003b70:	20012daa 	.word	0x20012daa
 8003b74:	20012da8 	.word	0x20012da8

08003b78 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv>:
{
 8003b78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003b7c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003b80:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003b82:	68a0      	ldr	r0, [r4, #8]
 8003b84:	6803      	ldr	r3, [r0, #0]
 8003b86:	6a1b      	ldr	r3, [r3, #32]
 8003b88:	4798      	blx	r3
 8003b8a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003b8e:	d205      	bcs.n	8003b9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x24>
 8003b90:	4b42      	ldr	r3, [pc, #264]	; (8003c9c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x124>)
 8003b92:	4a43      	ldr	r2, [pc, #268]	; (8003ca0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003b94:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003b96:	4843      	ldr	r0, [pc, #268]	; (8003ca4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x12c>)
 8003b98:	f025 fedc 	bl	8029954 <__assert_func>
 8003b9c:	6860      	ldr	r0, [r4, #4]
 8003b9e:	6803      	ldr	r3, [r0, #0]
 8003ba0:	6a1b      	ldr	r3, [r3, #32]
 8003ba2:	4798      	blx	r3
 8003ba4:	280f      	cmp	r0, #15
 8003ba6:	d803      	bhi.n	8003bb0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x38>
 8003ba8:	4b3f      	ldr	r3, [pc, #252]	; (8003ca8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x130>)
 8003baa:	4a3d      	ldr	r2, [pc, #244]	; (8003ca0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003bac:	21a4      	movs	r1, #164	; 0xa4
 8003bae:	e7f2      	b.n	8003b96 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bb0:	68e0      	ldr	r0, [r4, #12]
 8003bb2:	6803      	ldr	r3, [r0, #0]
 8003bb4:	6a1b      	ldr	r3, [r3, #32]
 8003bb6:	4798      	blx	r3
 8003bb8:	2837      	cmp	r0, #55	; 0x37
 8003bba:	d803      	bhi.n	8003bc4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x4c>
 8003bbc:	4b3b      	ldr	r3, [pc, #236]	; (8003cac <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x134>)
 8003bbe:	4a38      	ldr	r2, [pc, #224]	; (8003ca0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x128>)
 8003bc0:	21a5      	movs	r1, #165	; 0xa5
 8003bc2:	e7e8      	b.n	8003b96 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003bc4:	f011 f83c 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003bc8:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003cb0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x138>
 8003bcc:	3004      	adds	r0, #4
 8003bce:	f011 f89d 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003bd2:	f8d9 0000 	ldr.w	r0, [r9]
 8003bd6:	b110      	cbz	r0, 8003bde <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003bd8:	6803      	ldr	r3, [r0, #0]
 8003bda:	68db      	ldr	r3, [r3, #12]
 8003bdc:	4798      	blx	r3
    if (*currentTrans)
 8003bde:	f8d9 0000 	ldr.w	r0, [r9]
 8003be2:	b110      	cbz	r0, 8003bea <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003be4:	6803      	ldr	r3, [r0, #0]
 8003be6:	681b      	ldr	r3, [r3, #0]
 8003be8:	4798      	blx	r3
    if (*currentScreen)
 8003bea:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003cb4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x13c>
 8003bee:	f8d8 0000 	ldr.w	r0, [r8]
 8003bf2:	b110      	cbz	r0, 8003bfa <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003bf4:	6803      	ldr	r3, [r0, #0]
 8003bf6:	695b      	ldr	r3, [r3, #20]
 8003bf8:	4798      	blx	r3
    if (*currentPresenter)
 8003bfa:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003bfe:	b110      	cbz	r0, 8003c06 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c00:	6803      	ldr	r3, [r0, #0]
 8003c02:	685b      	ldr	r3, [r3, #4]
 8003c04:	4798      	blx	r3
    if (*currentScreen)
 8003c06:	f8d8 0000 	ldr.w	r0, [r8]
 8003c0a:	b110      	cbz	r0, 8003c12 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c0c:	6803      	ldr	r3, [r0, #0]
 8003c0e:	681b      	ldr	r3, [r3, #0]
 8003c10:	4798      	blx	r3
    if (*currentPresenter)
 8003c12:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c16:	b110      	cbz	r0, 8003c1e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c18:	6803      	ldr	r3, [r0, #0]
 8003c1a:	689b      	ldr	r3, [r3, #8]
 8003c1c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c1e:	68e0      	ldr	r0, [r4, #12]
 8003c20:	2100      	movs	r1, #0
 8003c22:	f7ff ff77 	bl	8003b14 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003c26:	2114      	movs	r1, #20
 8003c28:	4605      	mov	r5, r0
 8003c2a:	f7ff ff77 	bl	8003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c2e:	68a0      	ldr	r0, [r4, #8]
 8003c30:	6803      	ldr	r3, [r0, #0]
 8003c32:	2100      	movs	r1, #0
 8003c34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c36:	4798      	blx	r3
 8003c38:	4606      	mov	r6, r0
 8003c3a:	f004 fadb 	bl	80081f4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c3e:	6860      	ldr	r0, [r4, #4]
 8003c40:	6803      	ldr	r3, [r0, #0]
 8003c42:	2100      	movs	r1, #0
 8003c44:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c46:	4798      	blx	r3
 8003c48:	4631      	mov	r1, r6
 8003c4a:	4604      	mov	r4, r0
 8003c4c:	f004 faac 	bl	80081a8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8003c50:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c54:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003c58:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003c5c:	b1dc      	cbz	r4, 8003c96 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0x11e>
 8003c5e:	1d23      	adds	r3, r4, #4
 8003c60:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003c64:	6833      	ldr	r3, [r6, #0]
 8003c66:	f8c4 a008 	str.w	sl, [r4, #8]
 8003c6a:	4630      	mov	r0, r6
 8003c6c:	68db      	ldr	r3, [r3, #12]
 8003c6e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003c70:	4798      	blx	r3
    newPresenter->activate();
 8003c72:	6823      	ldr	r3, [r4, #0]
 8003c74:	4620      	mov	r0, r4
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003c7a:	4629      	mov	r1, r5
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	f012 fe0b 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003c82:	682b      	ldr	r3, [r5, #0]
 8003c84:	4628      	mov	r0, r5
 8003c86:	691b      	ldr	r3, [r3, #16]
 8003c88:	4798      	blx	r3
    newTransition->invalidate();
 8003c8a:	682b      	ldr	r3, [r5, #0]
 8003c8c:	4628      	mov	r0, r5
 8003c8e:	695b      	ldr	r3, [r3, #20]
}
 8003c90:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003c94:	4718      	bx	r3
    model->bind(newPresenter);
 8003c96:	4623      	mov	r3, r4
 8003c98:	e7e2      	b.n	8003c60 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionWestImplEv+0xe8>
 8003c9a:	bf00      	nop
 8003c9c:	0802b674 	.word	0x0802b674
 8003ca0:	0802bacd 	.word	0x0802bacd
 8003ca4:	0802b810 	.word	0x0802b810
 8003ca8:	0802b857 	.word	0x0802b857
 8003cac:	0802b8fa 	.word	0x0802b8fa
 8003cb0:	20012dfc 	.word	0x20012dfc
 8003cb4:	20012df8 	.word	0x20012df8

08003cb8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv>:
{
 8003cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003cbc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003cc0:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003cc2:	68a0      	ldr	r0, [r4, #8]
 8003cc4:	6803      	ldr	r3, [r0, #0]
 8003cc6:	6a1b      	ldr	r3, [r3, #32]
 8003cc8:	4798      	blx	r3
 8003cca:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003cce:	d205      	bcs.n	8003cdc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x24>
 8003cd0:	4b42      	ldr	r3, [pc, #264]	; (8003ddc <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x124>)
 8003cd2:	4a43      	ldr	r2, [pc, #268]	; (8003de0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003cd4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003cd6:	4843      	ldr	r0, [pc, #268]	; (8003de4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x12c>)
 8003cd8:	f025 fe3c 	bl	8029954 <__assert_func>
 8003cdc:	6860      	ldr	r0, [r4, #4]
 8003cde:	6803      	ldr	r3, [r0, #0]
 8003ce0:	6a1b      	ldr	r3, [r3, #32]
 8003ce2:	4798      	blx	r3
 8003ce4:	280f      	cmp	r0, #15
 8003ce6:	d803      	bhi.n	8003cf0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x38>
 8003ce8:	4b3f      	ldr	r3, [pc, #252]	; (8003de8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x130>)
 8003cea:	4a3d      	ldr	r2, [pc, #244]	; (8003de0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003cec:	21a4      	movs	r1, #164	; 0xa4
 8003cee:	e7f2      	b.n	8003cd6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003cf0:	68e0      	ldr	r0, [r4, #12]
 8003cf2:	6803      	ldr	r3, [r0, #0]
 8003cf4:	6a1b      	ldr	r3, [r3, #32]
 8003cf6:	4798      	blx	r3
 8003cf8:	2837      	cmp	r0, #55	; 0x37
 8003cfa:	d803      	bhi.n	8003d04 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x4c>
 8003cfc:	4b3b      	ldr	r3, [pc, #236]	; (8003dec <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x134>)
 8003cfe:	4a38      	ldr	r2, [pc, #224]	; (8003de0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x128>)
 8003d00:	21a5      	movs	r1, #165	; 0xa5
 8003d02:	e7e8      	b.n	8003cd6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003d04:	f010 ff9c 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d08:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003df0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x138>
 8003d0c:	3004      	adds	r0, #4
 8003d0e:	f010 fffd 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d12:	f8d9 0000 	ldr.w	r0, [r9]
 8003d16:	b110      	cbz	r0, 8003d1e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003d18:	6803      	ldr	r3, [r0, #0]
 8003d1a:	68db      	ldr	r3, [r3, #12]
 8003d1c:	4798      	blx	r3
    if (*currentTrans)
 8003d1e:	f8d9 0000 	ldr.w	r0, [r9]
 8003d22:	b110      	cbz	r0, 8003d2a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003d24:	6803      	ldr	r3, [r0, #0]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	4798      	blx	r3
    if (*currentScreen)
 8003d2a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003df4 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x13c>
 8003d2e:	f8d8 0000 	ldr.w	r0, [r8]
 8003d32:	b110      	cbz	r0, 8003d3a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003d34:	6803      	ldr	r3, [r0, #0]
 8003d36:	695b      	ldr	r3, [r3, #20]
 8003d38:	4798      	blx	r3
    if (*currentPresenter)
 8003d3a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d3e:	b110      	cbz	r0, 8003d46 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003d40:	6803      	ldr	r3, [r0, #0]
 8003d42:	685b      	ldr	r3, [r3, #4]
 8003d44:	4798      	blx	r3
    if (*currentScreen)
 8003d46:	f8d8 0000 	ldr.w	r0, [r8]
 8003d4a:	b110      	cbz	r0, 8003d52 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003d4c:	6803      	ldr	r3, [r0, #0]
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	4798      	blx	r3
    if (*currentPresenter)
 8003d52:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d56:	b110      	cbz	r0, 8003d5e <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003d58:	6803      	ldr	r3, [r0, #0]
 8003d5a:	689b      	ldr	r3, [r3, #8]
 8003d5c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003d5e:	68e0      	ldr	r0, [r4, #12]
 8003d60:	2100      	movs	r1, #0
 8003d62:	f7ff fed7 	bl	8003b14 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003d66:	2114      	movs	r1, #20
 8003d68:	4605      	mov	r5, r0
 8003d6a:	f7ff fed7 	bl	8003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003d6e:	68a0      	ldr	r0, [r4, #8]
 8003d70:	6803      	ldr	r3, [r0, #0]
 8003d72:	2100      	movs	r1, #0
 8003d74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d76:	4798      	blx	r3
 8003d78:	4606      	mov	r6, r0
 8003d7a:	f004 fc1f 	bl	80085bc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003d7e:	6860      	ldr	r0, [r4, #4]
 8003d80:	6803      	ldr	r3, [r0, #0]
 8003d82:	2100      	movs	r1, #0
 8003d84:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003d86:	4798      	blx	r3
 8003d88:	4631      	mov	r1, r6
 8003d8a:	4604      	mov	r4, r0
 8003d8c:	f004 fbf0 	bl	8008570 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8003d90:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003d94:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003d98:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003d9c:	b1dc      	cbz	r4, 8003dd6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0x11e>
 8003d9e:	1d23      	adds	r3, r4, #4
 8003da0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003da4:	6833      	ldr	r3, [r6, #0]
 8003da6:	f8c4 a008 	str.w	sl, [r4, #8]
 8003daa:	4630      	mov	r0, r6
 8003dac:	68db      	ldr	r3, [r3, #12]
 8003dae:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003db0:	4798      	blx	r3
    newPresenter->activate();
 8003db2:	6823      	ldr	r3, [r4, #0]
 8003db4:	4620      	mov	r0, r4
 8003db6:	681b      	ldr	r3, [r3, #0]
 8003db8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003dba:	4629      	mov	r1, r5
 8003dbc:	4630      	mov	r0, r6
 8003dbe:	f012 fd6b 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003dc2:	682b      	ldr	r3, [r5, #0]
 8003dc4:	4628      	mov	r0, r5
 8003dc6:	691b      	ldr	r3, [r3, #16]
 8003dc8:	4798      	blx	r3
    newTransition->invalidate();
 8003dca:	682b      	ldr	r3, [r5, #0]
 8003dcc:	4628      	mov	r0, r5
 8003dce:	695b      	ldr	r3, [r3, #20]
}
 8003dd0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003dd4:	4718      	bx	r3
    model->bind(newPresenter);
 8003dd6:	4623      	mov	r3, r4
 8003dd8:	e7e2      	b.n	8003da0 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionWestImplEv+0xe8>
 8003dda:	bf00      	nop
 8003ddc:	0802b674 	.word	0x0802b674
 8003de0:	0802bbeb 	.word	0x0802bbeb
 8003de4:	0802b810 	.word	0x0802b810
 8003de8:	0802b857 	.word	0x0802b857
 8003dec:	0802b8fa 	.word	0x0802b8fa
 8003df0:	20012dfc 	.word	0x20012dfc
 8003df4:	20012df8 	.word	0x20012df8

08003df8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv>:
{
 8003df8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003dfc:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003e00:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003e02:	68a0      	ldr	r0, [r4, #8]
 8003e04:	6803      	ldr	r3, [r0, #0]
 8003e06:	6a1b      	ldr	r3, [r3, #32]
 8003e08:	4798      	blx	r3
 8003e0a:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8003e0e:	d205      	bcs.n	8003e1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x24>
 8003e10:	4b42      	ldr	r3, [pc, #264]	; (8003f1c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x124>)
 8003e12:	4a43      	ldr	r2, [pc, #268]	; (8003f20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e14:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003e16:	4843      	ldr	r0, [pc, #268]	; (8003f24 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x12c>)
 8003e18:	f025 fd9c 	bl	8029954 <__assert_func>
 8003e1c:	6860      	ldr	r0, [r4, #4]
 8003e1e:	6803      	ldr	r3, [r0, #0]
 8003e20:	6a1b      	ldr	r3, [r3, #32]
 8003e22:	4798      	blx	r3
 8003e24:	280f      	cmp	r0, #15
 8003e26:	d803      	bhi.n	8003e30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x38>
 8003e28:	4b3f      	ldr	r3, [pc, #252]	; (8003f28 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x130>)
 8003e2a:	4a3d      	ldr	r2, [pc, #244]	; (8003f20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e2c:	21a4      	movs	r1, #164	; 0xa4
 8003e2e:	e7f2      	b.n	8003e16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003e30:	68e0      	ldr	r0, [r4, #12]
 8003e32:	6803      	ldr	r3, [r0, #0]
 8003e34:	6a1b      	ldr	r3, [r3, #32]
 8003e36:	4798      	blx	r3
 8003e38:	2837      	cmp	r0, #55	; 0x37
 8003e3a:	d803      	bhi.n	8003e44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x4c>
 8003e3c:	4b3b      	ldr	r3, [pc, #236]	; (8003f2c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x134>)
 8003e3e:	4a38      	ldr	r2, [pc, #224]	; (8003f20 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x128>)
 8003e40:	21a5      	movs	r1, #165	; 0xa5
 8003e42:	e7e8      	b.n	8003e16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003e44:	f010 fefc 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003e48:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003f30 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x138>
 8003e4c:	3004      	adds	r0, #4
 8003e4e:	f010 ff5d 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003e52:	f8d9 0000 	ldr.w	r0, [r9]
 8003e56:	b110      	cbz	r0, 8003e5e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003e58:	6803      	ldr	r3, [r0, #0]
 8003e5a:	68db      	ldr	r3, [r3, #12]
 8003e5c:	4798      	blx	r3
    if (*currentTrans)
 8003e5e:	f8d9 0000 	ldr.w	r0, [r9]
 8003e62:	b110      	cbz	r0, 8003e6a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003e64:	6803      	ldr	r3, [r0, #0]
 8003e66:	681b      	ldr	r3, [r3, #0]
 8003e68:	4798      	blx	r3
    if (*currentScreen)
 8003e6a:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003f34 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x13c>
 8003e6e:	f8d8 0000 	ldr.w	r0, [r8]
 8003e72:	b110      	cbz	r0, 8003e7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003e74:	6803      	ldr	r3, [r0, #0]
 8003e76:	695b      	ldr	r3, [r3, #20]
 8003e78:	4798      	blx	r3
    if (*currentPresenter)
 8003e7a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e7e:	b110      	cbz	r0, 8003e86 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003e80:	6803      	ldr	r3, [r0, #0]
 8003e82:	685b      	ldr	r3, [r3, #4]
 8003e84:	4798      	blx	r3
    if (*currentScreen)
 8003e86:	f8d8 0000 	ldr.w	r0, [r8]
 8003e8a:	b110      	cbz	r0, 8003e92 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003e8c:	6803      	ldr	r3, [r0, #0]
 8003e8e:	681b      	ldr	r3, [r3, #0]
 8003e90:	4798      	blx	r3
    if (*currentPresenter)
 8003e92:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003e96:	b110      	cbz	r0, 8003e9e <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003e98:	6803      	ldr	r3, [r0, #0]
 8003e9a:	689b      	ldr	r3, [r3, #8]
 8003e9c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003e9e:	68e0      	ldr	r0, [r4, #12]
 8003ea0:	2100      	movs	r1, #0
 8003ea2:	f7ff fe37 	bl	8003b14 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003ea6:	2114      	movs	r1, #20
 8003ea8:	4605      	mov	r5, r0
 8003eaa:	f7ff fe37 	bl	8003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003eae:	68a0      	ldr	r0, [r4, #8]
 8003eb0:	6803      	ldr	r3, [r0, #0]
 8003eb2:	2100      	movs	r1, #0
 8003eb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003eb6:	4798      	blx	r3
 8003eb8:	4606      	mov	r6, r0
 8003eba:	f004 fb1f 	bl	80084fc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003ebe:	6860      	ldr	r0, [r4, #4]
 8003ec0:	6803      	ldr	r3, [r0, #0]
 8003ec2:	2100      	movs	r1, #0
 8003ec4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ec6:	4798      	blx	r3
 8003ec8:	4631      	mov	r1, r6
 8003eca:	4604      	mov	r4, r0
 8003ecc:	f004 faf0 	bl	80084b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8003ed0:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003ed4:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ed8:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003edc:	b1dc      	cbz	r4, 8003f16 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0x11e>
 8003ede:	1d23      	adds	r3, r4, #4
 8003ee0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003ee4:	6833      	ldr	r3, [r6, #0]
 8003ee6:	f8c4 a008 	str.w	sl, [r4, #8]
 8003eea:	4630      	mov	r0, r6
 8003eec:	68db      	ldr	r3, [r3, #12]
 8003eee:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003ef0:	4798      	blx	r3
    newPresenter->activate();
 8003ef2:	6823      	ldr	r3, [r4, #0]
 8003ef4:	4620      	mov	r0, r4
 8003ef6:	681b      	ldr	r3, [r3, #0]
 8003ef8:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003efa:	4629      	mov	r1, r5
 8003efc:	4630      	mov	r0, r6
 8003efe:	f012 fccb 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003f02:	682b      	ldr	r3, [r5, #0]
 8003f04:	4628      	mov	r0, r5
 8003f06:	691b      	ldr	r3, [r3, #16]
 8003f08:	4798      	blx	r3
    newTransition->invalidate();
 8003f0a:	682b      	ldr	r3, [r5, #0]
 8003f0c:	4628      	mov	r0, r5
 8003f0e:	695b      	ldr	r3, [r3, #20]
}
 8003f10:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f14:	4718      	bx	r3
    model->bind(newPresenter);
 8003f16:	4623      	mov	r3, r4
 8003f18:	e7e2      	b.n	8003ee0 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionWestImplEv+0xe8>
 8003f1a:	bf00      	nop
 8003f1c:	0802b674 	.word	0x0802b674
 8003f20:	0802bd1b 	.word	0x0802bd1b
 8003f24:	0802b810 	.word	0x0802b810
 8003f28:	0802b857 	.word	0x0802b857
 8003f2c:	0802b8fa 	.word	0x0802b8fa
 8003f30:	20012dfc 	.word	0x20012dfc
 8003f34:	20012df8 	.word	0x20012df8

08003f38 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv>:
{
 8003f38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Main_MenuView, Main_MenuPresenter, touchgfx::WipeTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003f3c:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003f40:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003f42:	68a0      	ldr	r0, [r4, #8]
 8003f44:	6803      	ldr	r3, [r0, #0]
 8003f46:	6a1b      	ldr	r3, [r3, #32]
 8003f48:	4798      	blx	r3
 8003f4a:	f241 137b 	movw	r3, #4475	; 0x117b
 8003f4e:	4298      	cmp	r0, r3
 8003f50:	d805      	bhi.n	8003f5e <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x26>
 8003f52:	4b42      	ldr	r3, [pc, #264]	; (800405c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x124>)
 8003f54:	4a42      	ldr	r2, [pc, #264]	; (8004060 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003f56:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003f58:	4842      	ldr	r0, [pc, #264]	; (8004064 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x12c>)
 8003f5a:	f025 fcfb 	bl	8029954 <__assert_func>
 8003f5e:	6860      	ldr	r0, [r4, #4]
 8003f60:	6803      	ldr	r3, [r0, #0]
 8003f62:	6a1b      	ldr	r3, [r3, #32]
 8003f64:	4798      	blx	r3
 8003f66:	280f      	cmp	r0, #15
 8003f68:	d803      	bhi.n	8003f72 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x3a>
 8003f6a:	4b3f      	ldr	r3, [pc, #252]	; (8004068 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x130>)
 8003f6c:	4a3c      	ldr	r2, [pc, #240]	; (8004060 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003f6e:	21a4      	movs	r1, #164	; 0xa4
 8003f70:	e7f2      	b.n	8003f58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003f72:	68e0      	ldr	r0, [r4, #12]
 8003f74:	6803      	ldr	r3, [r0, #0]
 8003f76:	6a1b      	ldr	r3, [r3, #32]
 8003f78:	4798      	blx	r3
 8003f7a:	2837      	cmp	r0, #55	; 0x37
 8003f7c:	d803      	bhi.n	8003f86 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x4e>
 8003f7e:	4b3b      	ldr	r3, [pc, #236]	; (800406c <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x134>)
 8003f80:	4a37      	ldr	r2, [pc, #220]	; (8004060 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x128>)
 8003f82:	21a5      	movs	r1, #165	; 0xa5
 8003f84:	e7e8      	b.n	8003f58 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003f86:	f010 fe5b 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f8a:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004070 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x138>
 8003f8e:	3004      	adds	r0, #4
 8003f90:	f010 febc 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f94:	f8d9 0000 	ldr.w	r0, [r9]
 8003f98:	b110      	cbz	r0, 8003fa0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003f9a:	6803      	ldr	r3, [r0, #0]
 8003f9c:	68db      	ldr	r3, [r3, #12]
 8003f9e:	4798      	blx	r3
    if (*currentTrans)
 8003fa0:	f8d9 0000 	ldr.w	r0, [r9]
 8003fa4:	b110      	cbz	r0, 8003fac <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003fa6:	6803      	ldr	r3, [r0, #0]
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	4798      	blx	r3
    if (*currentScreen)
 8003fac:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004074 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x13c>
 8003fb0:	f8d8 0000 	ldr.w	r0, [r8]
 8003fb4:	b110      	cbz	r0, 8003fbc <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003fb6:	6803      	ldr	r3, [r0, #0]
 8003fb8:	695b      	ldr	r3, [r3, #20]
 8003fba:	4798      	blx	r3
    if (*currentPresenter)
 8003fbc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003fc0:	b110      	cbz	r0, 8003fc8 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003fc2:	6803      	ldr	r3, [r0, #0]
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	4798      	blx	r3
    if (*currentScreen)
 8003fc8:	f8d8 0000 	ldr.w	r0, [r8]
 8003fcc:	b110      	cbz	r0, 8003fd4 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003fce:	6803      	ldr	r3, [r0, #0]
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	4798      	blx	r3
    if (*currentPresenter)
 8003fd4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003fd8:	b110      	cbz	r0, 8003fe0 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003fda:	6803      	ldr	r3, [r0, #0]
 8003fdc:	689b      	ldr	r3, [r3, #8]
 8003fde:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003fe0:	68e0      	ldr	r0, [r4, #12]
 8003fe2:	2100      	movs	r1, #0
 8003fe4:	f7ff fd96 	bl	8003b14 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE3EEEEERT_t>
 8003fe8:	2114      	movs	r1, #20
 8003fea:	4605      	mov	r5, r0
 8003fec:	f7ff fd96 	bl	8003b1c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003ff0:	68a0      	ldr	r0, [r4, #8]
 8003ff2:	6803      	ldr	r3, [r0, #0]
 8003ff4:	2100      	movs	r1, #0
 8003ff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ff8:	4798      	blx	r3
 8003ffa:	4606      	mov	r6, r0
 8003ffc:	f004 fa1e 	bl	800843c <_ZN13Main_MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004000:	6860      	ldr	r0, [r4, #4]
 8004002:	6803      	ldr	r3, [r0, #0]
 8004004:	2100      	movs	r1, #0
 8004006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004008:	4798      	blx	r3
 800400a:	4631      	mov	r1, r6
 800400c:	4604      	mov	r4, r0
 800400e:	f004 f9ef 	bl	80083f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>
    *currentTrans = newTransition;
 8004012:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004016:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800401a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800401e:	b1dc      	cbz	r4, 8004058 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0x120>
 8004020:	1d23      	adds	r3, r4, #4
 8004022:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004026:	6833      	ldr	r3, [r6, #0]
 8004028:	f8c4 a008 	str.w	sl, [r4, #8]
 800402c:	4630      	mov	r0, r6
 800402e:	68db      	ldr	r3, [r3, #12]
 8004030:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004032:	4798      	blx	r3
    newPresenter->activate();
 8004034:	6823      	ldr	r3, [r4, #0]
 8004036:	4620      	mov	r0, r4
 8004038:	681b      	ldr	r3, [r3, #0]
 800403a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800403c:	4629      	mov	r1, r5
 800403e:	4630      	mov	r0, r6
 8004040:	f012 fc2a 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004044:	682b      	ldr	r3, [r5, #0]
 8004046:	4628      	mov	r0, r5
 8004048:	691b      	ldr	r3, [r3, #16]
 800404a:	4798      	blx	r3
    newTransition->invalidate();
 800404c:	682b      	ldr	r3, [r5, #0]
 800404e:	4628      	mov	r0, r5
 8004050:	695b      	ldr	r3, [r3, #20]
}
 8004052:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004056:	4718      	bx	r3
    model->bind(newPresenter);
 8004058:	4623      	mov	r3, r4
 800405a:	e7e2      	b.n	8004022 <_ZN23FrontendApplicationBase41gotoMain_MenuScreenWipeTransitionWestImplEv+0xea>
 800405c:	0802b674 	.word	0x0802b674
 8004060:	0802be39 	.word	0x0802be39
 8004064:	0802b810 	.word	0x0802b810
 8004068:	0802b857 	.word	0x0802b857
 800406c:	0802b8fa 	.word	0x0802b8fa
 8004070:	20012dfc 	.word	0x20012dfc
 8004074:	20012df8 	.word	0x20012df8

08004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>:
 8004078:	6803      	ldr	r3, [r0, #0]
 800407a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800407c:	4718      	bx	r3
	...

08004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
          solid()
 8004080:	4b12      	ldr	r3, [pc, #72]	; (80040cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x4c>)
    WipeTransition(const uint8_t transitionSteps = 20)
 8004082:	b513      	push	{r0, r1, r4, lr}
          solid()
 8004084:	6003      	str	r3, [r0, #0]
 8004086:	f44f 7380 	mov.w	r3, #256	; 0x100
 800408a:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800408c:	4b10      	ldr	r3, [pc, #64]	; (80040d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x50>)
          animationSteps(transitionSteps),
 800408e:	7241      	strb	r1, [r0, #9]
 8004090:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004092:	4910      	ldr	r1, [pc, #64]	; (80040d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004094:	4b10      	ldr	r3, [pc, #64]	; (80040d8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004096:	f9b1 1000 	ldrsh.w	r1, [r1]
            targetValue = HAL::DISPLAY_WIDTH;
 800409a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800409e:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80040a0:	2200      	movs	r2, #0
 80040a2:	6042      	str	r2, [r0, #4]
 80040a4:	7202      	strb	r2, [r0, #8]
          animationCounter(0),
 80040a6:	7282      	strb	r2, [r0, #10]
          calculatedValue(0),
 80040a8:	81c2      	strh	r2, [r0, #14]
          solid()
 80040aa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80040ae:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80040b2:	e9c0 2209 	strd	r2, r2, [r0, #36]	; 0x24
 80040b6:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
    WipeTransition(const uint8_t transitionSteps = 20)
 80040ba:	4604      	mov	r4, r0
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80040bc:	9100      	str	r1, [sp, #0]
 80040be:	3010      	adds	r0, #16
 80040c0:	4611      	mov	r1, r2
 80040c2:	f7fe fb2d 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 80040c6:	4620      	mov	r0, r4
 80040c8:	b002      	add	sp, #8
 80040ca:	bd10      	pop	{r4, pc}
 80040cc:	0802cd64 	.word	0x0802cd64
 80040d0:	0802cc6c 	.word	0x0802cc6c
 80040d4:	20012daa 	.word	0x20012daa
 80040d8:	20012da8 	.word	0x20012da8

080040dc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv>:
{
 80040dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Project_InfoView, Project_InfoPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80040e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80040e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80040e6:	68a0      	ldr	r0, [r4, #8]
 80040e8:	6803      	ldr	r3, [r0, #0]
 80040ea:	6a1b      	ldr	r3, [r3, #32]
 80040ec:	4798      	blx	r3
 80040ee:	f241 03af 	movw	r3, #4271	; 0x10af
 80040f2:	4298      	cmp	r0, r3
 80040f4:	d805      	bhi.n	8004102 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x26>
 80040f6:	4b42      	ldr	r3, [pc, #264]	; (8004200 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x124>)
 80040f8:	4a42      	ldr	r2, [pc, #264]	; (8004204 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 80040fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80040fc:	4842      	ldr	r0, [pc, #264]	; (8004208 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x12c>)
 80040fe:	f025 fc29 	bl	8029954 <__assert_func>
 8004102:	6860      	ldr	r0, [r4, #4]
 8004104:	6803      	ldr	r3, [r0, #0]
 8004106:	6a1b      	ldr	r3, [r3, #32]
 8004108:	4798      	blx	r3
 800410a:	280f      	cmp	r0, #15
 800410c:	d803      	bhi.n	8004116 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x3a>
 800410e:	4b3f      	ldr	r3, [pc, #252]	; (800420c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x130>)
 8004110:	4a3c      	ldr	r2, [pc, #240]	; (8004204 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004112:	21a4      	movs	r1, #164	; 0xa4
 8004114:	e7f2      	b.n	80040fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004116:	68e0      	ldr	r0, [r4, #12]
 8004118:	6803      	ldr	r3, [r0, #0]
 800411a:	6a1b      	ldr	r3, [r3, #32]
 800411c:	4798      	blx	r3
 800411e:	2837      	cmp	r0, #55	; 0x37
 8004120:	d803      	bhi.n	800412a <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x4e>
 8004122:	4b3b      	ldr	r3, [pc, #236]	; (8004210 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x134>)
 8004124:	4a37      	ldr	r2, [pc, #220]	; (8004204 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x128>)
 8004126:	21a5      	movs	r1, #165	; 0xa5
 8004128:	e7e8      	b.n	80040fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800412a:	f010 fd89 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800412e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004214 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x138>
 8004132:	3004      	adds	r0, #4
 8004134:	f010 fdea 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004138:	f8d9 0000 	ldr.w	r0, [r9]
 800413c:	b110      	cbz	r0, 8004144 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800413e:	6803      	ldr	r3, [r0, #0]
 8004140:	68db      	ldr	r3, [r3, #12]
 8004142:	4798      	blx	r3
    if (*currentTrans)
 8004144:	f8d9 0000 	ldr.w	r0, [r9]
 8004148:	b110      	cbz	r0, 8004150 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800414a:	6803      	ldr	r3, [r0, #0]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	4798      	blx	r3
    if (*currentScreen)
 8004150:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004218 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x13c>
 8004154:	f8d8 0000 	ldr.w	r0, [r8]
 8004158:	b110      	cbz	r0, 8004160 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800415a:	6803      	ldr	r3, [r0, #0]
 800415c:	695b      	ldr	r3, [r3, #20]
 800415e:	4798      	blx	r3
    if (*currentPresenter)
 8004160:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004164:	b110      	cbz	r0, 800416c <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004166:	6803      	ldr	r3, [r0, #0]
 8004168:	685b      	ldr	r3, [r3, #4]
 800416a:	4798      	blx	r3
    if (*currentScreen)
 800416c:	f8d8 0000 	ldr.w	r0, [r8]
 8004170:	b110      	cbz	r0, 8004178 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004172:	6803      	ldr	r3, [r0, #0]
 8004174:	681b      	ldr	r3, [r3, #0]
 8004176:	4798      	blx	r3
    if (*currentPresenter)
 8004178:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800417c:	b110      	cbz	r0, 8004184 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800417e:	6803      	ldr	r3, [r0, #0]
 8004180:	689b      	ldr	r3, [r3, #8]
 8004182:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004184:	68e0      	ldr	r0, [r4, #12]
 8004186:	2100      	movs	r1, #0
 8004188:	f7ff ff76 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800418c:	2114      	movs	r1, #20
 800418e:	4605      	mov	r5, r0
 8004190:	f7ff ff76 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004194:	68a0      	ldr	r0, [r4, #8]
 8004196:	6803      	ldr	r3, [r0, #0]
 8004198:	2100      	movs	r1, #0
 800419a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800419c:	4798      	blx	r3
 800419e:	4606      	mov	r6, r0
 80041a0:	f004 fc50 	bl	8008a44 <_ZN16Project_InfoViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041a4:	6860      	ldr	r0, [r4, #4]
 80041a6:	6803      	ldr	r3, [r0, #0]
 80041a8:	2100      	movs	r1, #0
 80041aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80041ac:	4798      	blx	r3
 80041ae:	4631      	mov	r1, r6
 80041b0:	4604      	mov	r4, r0
 80041b2:	f004 fc21 	bl	80089f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>
    *currentTrans = newTransition;
 80041b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80041ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80041be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80041c2:	b1dc      	cbz	r4, 80041fc <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0x120>
 80041c4:	1d23      	adds	r3, r4, #4
 80041c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80041ca:	6833      	ldr	r3, [r6, #0]
 80041cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80041d0:	4630      	mov	r0, r6
 80041d2:	68db      	ldr	r3, [r3, #12]
 80041d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80041d6:	4798      	blx	r3
    newPresenter->activate();
 80041d8:	6823      	ldr	r3, [r4, #0]
 80041da:	4620      	mov	r0, r4
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80041e0:	4629      	mov	r1, r5
 80041e2:	4630      	mov	r0, r6
 80041e4:	f012 fb58 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80041e8:	682b      	ldr	r3, [r5, #0]
 80041ea:	4628      	mov	r0, r5
 80041ec:	691b      	ldr	r3, [r3, #16]
 80041ee:	4798      	blx	r3
    newTransition->invalidate();
 80041f0:	682b      	ldr	r3, [r5, #0]
 80041f2:	4628      	mov	r0, r5
 80041f4:	695b      	ldr	r3, [r3, #20]
}
 80041f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80041fa:	4718      	bx	r3
    model->bind(newPresenter);
 80041fc:	4623      	mov	r3, r4
 80041fe:	e7e2      	b.n	80041c6 <_ZN23FrontendApplicationBase44gotoProject_InfoScreenWipeTransitionEastImplEv+0xea>
 8004200:	0802b674 	.word	0x0802b674
 8004204:	0802bf53 	.word	0x0802bf53
 8004208:	0802b810 	.word	0x0802b810
 800420c:	0802b857 	.word	0x0802b857
 8004210:	0802b8fa 	.word	0x0802b8fa
 8004214:	20012dfc 	.word	0x20012dfc
 8004218:	20012df8 	.word	0x20012df8

0800421c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv>:
{
 800421c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_HallView, Calibration_HallPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004220:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004224:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004226:	68a0      	ldr	r0, [r4, #8]
 8004228:	6803      	ldr	r3, [r0, #0]
 800422a:	6a1b      	ldr	r3, [r3, #32]
 800422c:	4798      	blx	r3
 800422e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004232:	4298      	cmp	r0, r3
 8004234:	d805      	bhi.n	8004242 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x26>
 8004236:	4b42      	ldr	r3, [pc, #264]	; (8004340 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x124>)
 8004238:	4a42      	ldr	r2, [pc, #264]	; (8004344 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 800423a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800423c:	4842      	ldr	r0, [pc, #264]	; (8004348 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x12c>)
 800423e:	f025 fb89 	bl	8029954 <__assert_func>
 8004242:	6860      	ldr	r0, [r4, #4]
 8004244:	6803      	ldr	r3, [r0, #0]
 8004246:	6a1b      	ldr	r3, [r3, #32]
 8004248:	4798      	blx	r3
 800424a:	280f      	cmp	r0, #15
 800424c:	d803      	bhi.n	8004256 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x3a>
 800424e:	4b3f      	ldr	r3, [pc, #252]	; (800434c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x130>)
 8004250:	4a3c      	ldr	r2, [pc, #240]	; (8004344 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004252:	21a4      	movs	r1, #164	; 0xa4
 8004254:	e7f2      	b.n	800423c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004256:	68e0      	ldr	r0, [r4, #12]
 8004258:	6803      	ldr	r3, [r0, #0]
 800425a:	6a1b      	ldr	r3, [r3, #32]
 800425c:	4798      	blx	r3
 800425e:	2837      	cmp	r0, #55	; 0x37
 8004260:	d803      	bhi.n	800426a <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x4e>
 8004262:	4b3b      	ldr	r3, [pc, #236]	; (8004350 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x134>)
 8004264:	4a37      	ldr	r2, [pc, #220]	; (8004344 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x128>)
 8004266:	21a5      	movs	r1, #165	; 0xa5
 8004268:	e7e8      	b.n	800423c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800426a:	f010 fce9 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800426e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004354 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x138>
 8004272:	3004      	adds	r0, #4
 8004274:	f010 fd4a 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004278:	f8d9 0000 	ldr.w	r0, [r9]
 800427c:	b110      	cbz	r0, 8004284 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800427e:	6803      	ldr	r3, [r0, #0]
 8004280:	68db      	ldr	r3, [r3, #12]
 8004282:	4798      	blx	r3
    if (*currentTrans)
 8004284:	f8d9 0000 	ldr.w	r0, [r9]
 8004288:	b110      	cbz	r0, 8004290 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800428a:	6803      	ldr	r3, [r0, #0]
 800428c:	681b      	ldr	r3, [r3, #0]
 800428e:	4798      	blx	r3
    if (*currentScreen)
 8004290:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004358 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x13c>
 8004294:	f8d8 0000 	ldr.w	r0, [r8]
 8004298:	b110      	cbz	r0, 80042a0 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800429a:	6803      	ldr	r3, [r0, #0]
 800429c:	695b      	ldr	r3, [r3, #20]
 800429e:	4798      	blx	r3
    if (*currentPresenter)
 80042a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042a4:	b110      	cbz	r0, 80042ac <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80042a6:	6803      	ldr	r3, [r0, #0]
 80042a8:	685b      	ldr	r3, [r3, #4]
 80042aa:	4798      	blx	r3
    if (*currentScreen)
 80042ac:	f8d8 0000 	ldr.w	r0, [r8]
 80042b0:	b110      	cbz	r0, 80042b8 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80042b2:	6803      	ldr	r3, [r0, #0]
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	4798      	blx	r3
    if (*currentPresenter)
 80042b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80042bc:	b110      	cbz	r0, 80042c4 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80042be:	6803      	ldr	r3, [r0, #0]
 80042c0:	689b      	ldr	r3, [r3, #8]
 80042c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80042c4:	68e0      	ldr	r0, [r4, #12]
 80042c6:	2100      	movs	r1, #0
 80042c8:	f7ff fed6 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80042cc:	2114      	movs	r1, #20
 80042ce:	4605      	mov	r5, r0
 80042d0:	f7ff fed6 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80042d4:	68a0      	ldr	r0, [r4, #8]
 80042d6:	6803      	ldr	r3, [r0, #0]
 80042d8:	2100      	movs	r1, #0
 80042da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042dc:	4798      	blx	r3
 80042de:	4606      	mov	r6, r0
 80042e0:	f003 ffe2 	bl	80082a8 <_ZN20Calibration_HallViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80042e4:	6860      	ldr	r0, [r4, #4]
 80042e6:	6803      	ldr	r3, [r0, #0]
 80042e8:	2100      	movs	r1, #0
 80042ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80042ec:	4798      	blx	r3
 80042ee:	4631      	mov	r1, r6
 80042f0:	4604      	mov	r4, r0
 80042f2:	f003 ffb3 	bl	800825c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>
    *currentTrans = newTransition;
 80042f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80042fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80042fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004302:	b1dc      	cbz	r4, 800433c <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0x120>
 8004304:	1d23      	adds	r3, r4, #4
 8004306:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800430a:	6833      	ldr	r3, [r6, #0]
 800430c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004310:	4630      	mov	r0, r6
 8004312:	68db      	ldr	r3, [r3, #12]
 8004314:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004316:	4798      	blx	r3
    newPresenter->activate();
 8004318:	6823      	ldr	r3, [r4, #0]
 800431a:	4620      	mov	r0, r4
 800431c:	681b      	ldr	r3, [r3, #0]
 800431e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004320:	4629      	mov	r1, r5
 8004322:	4630      	mov	r0, r6
 8004324:	f012 fab8 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004328:	682b      	ldr	r3, [r5, #0]
 800432a:	4628      	mov	r0, r5
 800432c:	691b      	ldr	r3, [r3, #16]
 800432e:	4798      	blx	r3
    newTransition->invalidate();
 8004330:	682b      	ldr	r3, [r5, #0]
 8004332:	4628      	mov	r0, r5
 8004334:	695b      	ldr	r3, [r3, #20]
}
 8004336:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800433a:	4718      	bx	r3
    model->bind(newPresenter);
 800433c:	4623      	mov	r3, r4
 800433e:	e7e2      	b.n	8004306 <_ZN23FrontendApplicationBase48gotoCalibration_HallScreenWipeTransitionEastImplEv+0xea>
 8004340:	0802b674 	.word	0x0802b674
 8004344:	0802c073 	.word	0x0802c073
 8004348:	0802b810 	.word	0x0802b810
 800434c:	0802b857 	.word	0x0802b857
 8004350:	0802b8fa 	.word	0x0802b8fa
 8004354:	20012dfc 	.word	0x20012dfc
 8004358:	20012df8 	.word	0x20012df8

0800435c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv>:
{
 800435c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Calibration_PadView, Calibration_PadPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004360:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004364:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004366:	68a0      	ldr	r0, [r4, #8]
 8004368:	6803      	ldr	r3, [r0, #0]
 800436a:	6a1b      	ldr	r3, [r3, #32]
 800436c:	4798      	blx	r3
 800436e:	f241 035b 	movw	r3, #4187	; 0x105b
 8004372:	4298      	cmp	r0, r3
 8004374:	d805      	bhi.n	8004382 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x26>
 8004376:	4b42      	ldr	r3, [pc, #264]	; (8004480 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x124>)
 8004378:	4a42      	ldr	r2, [pc, #264]	; (8004484 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 800437a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800437c:	4842      	ldr	r0, [pc, #264]	; (8004488 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x12c>)
 800437e:	f025 fae9 	bl	8029954 <__assert_func>
 8004382:	6860      	ldr	r0, [r4, #4]
 8004384:	6803      	ldr	r3, [r0, #0]
 8004386:	6a1b      	ldr	r3, [r3, #32]
 8004388:	4798      	blx	r3
 800438a:	280f      	cmp	r0, #15
 800438c:	d803      	bhi.n	8004396 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x3a>
 800438e:	4b3f      	ldr	r3, [pc, #252]	; (800448c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x130>)
 8004390:	4a3c      	ldr	r2, [pc, #240]	; (8004484 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 8004392:	21a4      	movs	r1, #164	; 0xa4
 8004394:	e7f2      	b.n	800437c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004396:	68e0      	ldr	r0, [r4, #12]
 8004398:	6803      	ldr	r3, [r0, #0]
 800439a:	6a1b      	ldr	r3, [r3, #32]
 800439c:	4798      	blx	r3
 800439e:	2837      	cmp	r0, #55	; 0x37
 80043a0:	d803      	bhi.n	80043aa <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x4e>
 80043a2:	4b3b      	ldr	r3, [pc, #236]	; (8004490 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x134>)
 80043a4:	4a37      	ldr	r2, [pc, #220]	; (8004484 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x128>)
 80043a6:	21a5      	movs	r1, #165	; 0xa5
 80043a8:	e7e8      	b.n	800437c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80043aa:	f010 fc49 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80043ae:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004494 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x138>
 80043b2:	3004      	adds	r0, #4
 80043b4:	f010 fcaa 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80043b8:	f8d9 0000 	ldr.w	r0, [r9]
 80043bc:	b110      	cbz	r0, 80043c4 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80043be:	6803      	ldr	r3, [r0, #0]
 80043c0:	68db      	ldr	r3, [r3, #12]
 80043c2:	4798      	blx	r3
    if (*currentTrans)
 80043c4:	f8d9 0000 	ldr.w	r0, [r9]
 80043c8:	b110      	cbz	r0, 80043d0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80043ca:	6803      	ldr	r3, [r0, #0]
 80043cc:	681b      	ldr	r3, [r3, #0]
 80043ce:	4798      	blx	r3
    if (*currentScreen)
 80043d0:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004498 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x13c>
 80043d4:	f8d8 0000 	ldr.w	r0, [r8]
 80043d8:	b110      	cbz	r0, 80043e0 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80043da:	6803      	ldr	r3, [r0, #0]
 80043dc:	695b      	ldr	r3, [r3, #20]
 80043de:	4798      	blx	r3
    if (*currentPresenter)
 80043e0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043e4:	b110      	cbz	r0, 80043ec <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80043e6:	6803      	ldr	r3, [r0, #0]
 80043e8:	685b      	ldr	r3, [r3, #4]
 80043ea:	4798      	blx	r3
    if (*currentScreen)
 80043ec:	f8d8 0000 	ldr.w	r0, [r8]
 80043f0:	b110      	cbz	r0, 80043f8 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80043f2:	6803      	ldr	r3, [r0, #0]
 80043f4:	681b      	ldr	r3, [r3, #0]
 80043f6:	4798      	blx	r3
    if (*currentPresenter)
 80043f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80043fc:	b110      	cbz	r0, 8004404 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80043fe:	6803      	ldr	r3, [r0, #0]
 8004400:	689b      	ldr	r3, [r3, #8]
 8004402:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004404:	68e0      	ldr	r0, [r4, #12]
 8004406:	2100      	movs	r1, #0
 8004408:	f7ff fe36 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800440c:	2114      	movs	r1, #20
 800440e:	4605      	mov	r5, r0
 8004410:	f7ff fe36 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004414:	68a0      	ldr	r0, [r4, #8]
 8004416:	6803      	ldr	r3, [r0, #0]
 8004418:	2100      	movs	r1, #0
 800441a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800441c:	4798      	blx	r3
 800441e:	4606      	mov	r6, r0
 8004420:	f003 ff84 	bl	800832c <_ZN19Calibration_PadViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004424:	6860      	ldr	r0, [r4, #4]
 8004426:	6803      	ldr	r3, [r0, #0]
 8004428:	2100      	movs	r1, #0
 800442a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800442c:	4798      	blx	r3
 800442e:	4631      	mov	r1, r6
 8004430:	4604      	mov	r4, r0
 8004432:	f003 ff55 	bl	80082e0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>
    *currentTrans = newTransition;
 8004436:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800443a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800443e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004442:	b1dc      	cbz	r4, 800447c <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0x120>
 8004444:	1d23      	adds	r3, r4, #4
 8004446:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800444a:	6833      	ldr	r3, [r6, #0]
 800444c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004450:	4630      	mov	r0, r6
 8004452:	68db      	ldr	r3, [r3, #12]
 8004454:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004456:	4798      	blx	r3
    newPresenter->activate();
 8004458:	6823      	ldr	r3, [r4, #0]
 800445a:	4620      	mov	r0, r4
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004460:	4629      	mov	r1, r5
 8004462:	4630      	mov	r0, r6
 8004464:	f012 fa18 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004468:	682b      	ldr	r3, [r5, #0]
 800446a:	4628      	mov	r0, r5
 800446c:	691b      	ldr	r3, [r3, #16]
 800446e:	4798      	blx	r3
    newTransition->invalidate();
 8004470:	682b      	ldr	r3, [r5, #0]
 8004472:	4628      	mov	r0, r5
 8004474:	695b      	ldr	r3, [r3, #20]
}
 8004476:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800447a:	4718      	bx	r3
    model->bind(newPresenter);
 800447c:	4623      	mov	r3, r4
 800447e:	e7e2      	b.n	8004446 <_ZN23FrontendApplicationBase47gotoCalibration_PadScreenWipeTransitionEastImplEv+0xea>
 8004480:	0802b674 	.word	0x0802b674
 8004484:	0802c19b 	.word	0x0802c19b
 8004488:	0802b810 	.word	0x0802b810
 800448c:	0802b857 	.word	0x0802b857
 8004490:	0802b8fa 	.word	0x0802b8fa
 8004494:	20012dfc 	.word	0x20012dfc
 8004498:	20012df8 	.word	0x20012df8

0800449c <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv>:
{
 800449c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CalibrationView, CalibrationPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80044a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80044a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80044a6:	68a0      	ldr	r0, [r4, #8]
 80044a8:	6803      	ldr	r3, [r0, #0]
 80044aa:	6a1b      	ldr	r3, [r3, #32]
 80044ac:	4798      	blx	r3
 80044ae:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 80044b2:	d205      	bcs.n	80044c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x24>
 80044b4:	4b42      	ldr	r3, [pc, #264]	; (80045c0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x124>)
 80044b6:	4a43      	ldr	r2, [pc, #268]	; (80045c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80044b8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80044ba:	4843      	ldr	r0, [pc, #268]	; (80045c8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x12c>)
 80044bc:	f025 fa4a 	bl	8029954 <__assert_func>
 80044c0:	6860      	ldr	r0, [r4, #4]
 80044c2:	6803      	ldr	r3, [r0, #0]
 80044c4:	6a1b      	ldr	r3, [r3, #32]
 80044c6:	4798      	blx	r3
 80044c8:	280f      	cmp	r0, #15
 80044ca:	d803      	bhi.n	80044d4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x38>
 80044cc:	4b3f      	ldr	r3, [pc, #252]	; (80045cc <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x130>)
 80044ce:	4a3d      	ldr	r2, [pc, #244]	; (80045c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80044d0:	21a4      	movs	r1, #164	; 0xa4
 80044d2:	e7f2      	b.n	80044ba <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80044d4:	68e0      	ldr	r0, [r4, #12]
 80044d6:	6803      	ldr	r3, [r0, #0]
 80044d8:	6a1b      	ldr	r3, [r3, #32]
 80044da:	4798      	blx	r3
 80044dc:	2837      	cmp	r0, #55	; 0x37
 80044de:	d803      	bhi.n	80044e8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x4c>
 80044e0:	4b3b      	ldr	r3, [pc, #236]	; (80045d0 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x134>)
 80044e2:	4a38      	ldr	r2, [pc, #224]	; (80045c4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x128>)
 80044e4:	21a5      	movs	r1, #165	; 0xa5
 80044e6:	e7e8      	b.n	80044ba <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80044e8:	f010 fbaa 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80044ec:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 80045d4 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x138>
 80044f0:	3004      	adds	r0, #4
 80044f2:	f010 fc0b 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80044f6:	f8d9 0000 	ldr.w	r0, [r9]
 80044fa:	b110      	cbz	r0, 8004502 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80044fc:	6803      	ldr	r3, [r0, #0]
 80044fe:	68db      	ldr	r3, [r3, #12]
 8004500:	4798      	blx	r3
    if (*currentTrans)
 8004502:	f8d9 0000 	ldr.w	r0, [r9]
 8004506:	b110      	cbz	r0, 800450e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004508:	6803      	ldr	r3, [r0, #0]
 800450a:	681b      	ldr	r3, [r3, #0]
 800450c:	4798      	blx	r3
    if (*currentScreen)
 800450e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 80045d8 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x13c>
 8004512:	f8d8 0000 	ldr.w	r0, [r8]
 8004516:	b110      	cbz	r0, 800451e <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004518:	6803      	ldr	r3, [r0, #0]
 800451a:	695b      	ldr	r3, [r3, #20]
 800451c:	4798      	blx	r3
    if (*currentPresenter)
 800451e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004522:	b110      	cbz	r0, 800452a <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004524:	6803      	ldr	r3, [r0, #0]
 8004526:	685b      	ldr	r3, [r3, #4]
 8004528:	4798      	blx	r3
    if (*currentScreen)
 800452a:	f8d8 0000 	ldr.w	r0, [r8]
 800452e:	b110      	cbz	r0, 8004536 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004530:	6803      	ldr	r3, [r0, #0]
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4798      	blx	r3
    if (*currentPresenter)
 8004536:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800453a:	b110      	cbz	r0, 8004542 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800453c:	6803      	ldr	r3, [r0, #0]
 800453e:	689b      	ldr	r3, [r3, #8]
 8004540:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004542:	68e0      	ldr	r0, [r4, #12]
 8004544:	2100      	movs	r1, #0
 8004546:	f7ff fd97 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800454a:	2114      	movs	r1, #20
 800454c:	4605      	mov	r5, r0
 800454e:	f7ff fd97 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004552:	68a0      	ldr	r0, [r4, #8]
 8004554:	6803      	ldr	r3, [r0, #0]
 8004556:	2100      	movs	r1, #0
 8004558:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800455a:	4798      	blx	r3
 800455c:	4606      	mov	r6, r0
 800455e:	f003 fe49 	bl	80081f4 <_ZN15CalibrationViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004562:	6860      	ldr	r0, [r4, #4]
 8004564:	6803      	ldr	r3, [r0, #0]
 8004566:	2100      	movs	r1, #0
 8004568:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800456a:	4798      	blx	r3
 800456c:	4631      	mov	r1, r6
 800456e:	4604      	mov	r4, r0
 8004570:	f003 fe1a 	bl	80081a8 <_ZN20CalibrationPresenterC1ER15CalibrationView>
    *currentTrans = newTransition;
 8004574:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004578:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800457c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004580:	b1dc      	cbz	r4, 80045ba <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0x11e>
 8004582:	1d23      	adds	r3, r4, #4
 8004584:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004588:	6833      	ldr	r3, [r6, #0]
 800458a:	f8c4 a008 	str.w	sl, [r4, #8]
 800458e:	4630      	mov	r0, r6
 8004590:	68db      	ldr	r3, [r3, #12]
 8004592:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004594:	4798      	blx	r3
    newPresenter->activate();
 8004596:	6823      	ldr	r3, [r4, #0]
 8004598:	4620      	mov	r0, r4
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800459e:	4629      	mov	r1, r5
 80045a0:	4630      	mov	r0, r6
 80045a2:	f012 f979 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80045a6:	682b      	ldr	r3, [r5, #0]
 80045a8:	4628      	mov	r0, r5
 80045aa:	691b      	ldr	r3, [r3, #16]
 80045ac:	4798      	blx	r3
    newTransition->invalidate();
 80045ae:	682b      	ldr	r3, [r5, #0]
 80045b0:	4628      	mov	r0, r5
 80045b2:	695b      	ldr	r3, [r3, #20]
}
 80045b4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80045b8:	4718      	bx	r3
    model->bind(newPresenter);
 80045ba:	4623      	mov	r3, r4
 80045bc:	e7e2      	b.n	8004584 <_ZN23FrontendApplicationBase43gotoCalibrationScreenWipeTransitionEastImplEv+0xe8>
 80045be:	bf00      	nop
 80045c0:	0802b674 	.word	0x0802b674
 80045c4:	0802c2c1 	.word	0x0802c2c1
 80045c8:	0802b810 	.word	0x0802b810
 80045cc:	0802b857 	.word	0x0802b857
 80045d0:	0802b8fa 	.word	0x0802b8fa
 80045d4:	20012dfc 	.word	0x20012dfc
 80045d8:	20012df8 	.word	0x20012df8

080045dc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv>:
{
 80045dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_Display_2View, Measurement_Accurate_Display_2Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045e0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80045e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045e6:	68a0      	ldr	r0, [r4, #8]
 80045e8:	6803      	ldr	r3, [r0, #0]
 80045ea:	6a1b      	ldr	r3, [r3, #32]
 80045ec:	4798      	blx	r3
 80045ee:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80045f2:	4298      	cmp	r0, r3
 80045f4:	d805      	bhi.n	8004602 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x26>
 80045f6:	4b42      	ldr	r3, [pc, #264]	; (8004700 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x124>)
 80045f8:	4a42      	ldr	r2, [pc, #264]	; (8004704 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 80045fa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045fc:	4842      	ldr	r0, [pc, #264]	; (8004708 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x12c>)
 80045fe:	f025 f9a9 	bl	8029954 <__assert_func>
 8004602:	6860      	ldr	r0, [r4, #4]
 8004604:	6803      	ldr	r3, [r0, #0]
 8004606:	6a1b      	ldr	r3, [r3, #32]
 8004608:	4798      	blx	r3
 800460a:	280f      	cmp	r0, #15
 800460c:	d803      	bhi.n	8004616 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x3a>
 800460e:	4b3f      	ldr	r3, [pc, #252]	; (800470c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x130>)
 8004610:	4a3c      	ldr	r2, [pc, #240]	; (8004704 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004612:	21a4      	movs	r1, #164	; 0xa4
 8004614:	e7f2      	b.n	80045fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004616:	68e0      	ldr	r0, [r4, #12]
 8004618:	6803      	ldr	r3, [r0, #0]
 800461a:	6a1b      	ldr	r3, [r3, #32]
 800461c:	4798      	blx	r3
 800461e:	2837      	cmp	r0, #55	; 0x37
 8004620:	d803      	bhi.n	800462a <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x4e>
 8004622:	4b3b      	ldr	r3, [pc, #236]	; (8004710 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x134>)
 8004624:	4a37      	ldr	r2, [pc, #220]	; (8004704 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x128>)
 8004626:	21a5      	movs	r1, #165	; 0xa5
 8004628:	e7e8      	b.n	80045fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800462a:	f010 fb09 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800462e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004714 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x138>
 8004632:	3004      	adds	r0, #4
 8004634:	f010 fb6a 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004638:	f8d9 0000 	ldr.w	r0, [r9]
 800463c:	b110      	cbz	r0, 8004644 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800463e:	6803      	ldr	r3, [r0, #0]
 8004640:	68db      	ldr	r3, [r3, #12]
 8004642:	4798      	blx	r3
    if (*currentTrans)
 8004644:	f8d9 0000 	ldr.w	r0, [r9]
 8004648:	b110      	cbz	r0, 8004650 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800464a:	6803      	ldr	r3, [r0, #0]
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	4798      	blx	r3
    if (*currentScreen)
 8004650:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004718 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x13c>
 8004654:	f8d8 0000 	ldr.w	r0, [r8]
 8004658:	b110      	cbz	r0, 8004660 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800465a:	6803      	ldr	r3, [r0, #0]
 800465c:	695b      	ldr	r3, [r3, #20]
 800465e:	4798      	blx	r3
    if (*currentPresenter)
 8004660:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004664:	b110      	cbz	r0, 800466c <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004666:	6803      	ldr	r3, [r0, #0]
 8004668:	685b      	ldr	r3, [r3, #4]
 800466a:	4798      	blx	r3
    if (*currentScreen)
 800466c:	f8d8 0000 	ldr.w	r0, [r8]
 8004670:	b110      	cbz	r0, 8004678 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004672:	6803      	ldr	r3, [r0, #0]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	4798      	blx	r3
    if (*currentPresenter)
 8004678:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800467c:	b110      	cbz	r0, 8004684 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800467e:	6803      	ldr	r3, [r0, #0]
 8004680:	689b      	ldr	r3, [r3, #8]
 8004682:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004684:	68e0      	ldr	r0, [r4, #12]
 8004686:	2100      	movs	r1, #0
 8004688:	f7ff fcf6 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800468c:	2114      	movs	r1, #20
 800468e:	4605      	mov	r5, r0
 8004690:	f7ff fcf6 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004694:	68a0      	ldr	r0, [r4, #8]
 8004696:	6803      	ldr	r3, [r0, #0]
 8004698:	2100      	movs	r1, #0
 800469a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800469c:	4798      	blx	r3
 800469e:	4606      	mov	r6, r0
 80046a0:	f004 f828 	bl	80086f4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046a4:	6860      	ldr	r0, [r4, #4]
 80046a6:	6803      	ldr	r3, [r0, #0]
 80046a8:	2100      	movs	r1, #0
 80046aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046ac:	4798      	blx	r3
 80046ae:	4631      	mov	r1, r6
 80046b0:	4604      	mov	r4, r0
 80046b2:	f003 fff9 	bl	80086a8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>
    *currentTrans = newTransition;
 80046b6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80046ba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80046be:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80046c2:	b1dc      	cbz	r4, 80046fc <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0x120>
 80046c4:	1d23      	adds	r3, r4, #4
 80046c6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80046ca:	6833      	ldr	r3, [r6, #0]
 80046cc:	f8c4 a008 	str.w	sl, [r4, #8]
 80046d0:	4630      	mov	r0, r6
 80046d2:	68db      	ldr	r3, [r3, #12]
 80046d4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80046d6:	4798      	blx	r3
    newPresenter->activate();
 80046d8:	6823      	ldr	r3, [r4, #0]
 80046da:	4620      	mov	r0, r4
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80046e0:	4629      	mov	r1, r5
 80046e2:	4630      	mov	r0, r6
 80046e4:	f012 f8d8 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80046e8:	682b      	ldr	r3, [r5, #0]
 80046ea:	4628      	mov	r0, r5
 80046ec:	691b      	ldr	r3, [r3, #16]
 80046ee:	4798      	blx	r3
    newTransition->invalidate();
 80046f0:	682b      	ldr	r3, [r5, #0]
 80046f2:	4628      	mov	r0, r5
 80046f4:	695b      	ldr	r3, [r3, #20]
}
 80046f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80046fa:	4718      	bx	r3
    model->bind(newPresenter);
 80046fc:	4623      	mov	r3, r4
 80046fe:	e7e2      	b.n	80046c6 <_ZN23FrontendApplicationBase62gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastImplEv+0xea>
 8004700:	0802b674 	.word	0x0802b674
 8004704:	0802c3df 	.word	0x0802c3df
 8004708:	0802b810 	.word	0x0802b810
 800470c:	0802b857 	.word	0x0802b857
 8004710:	0802b8fa 	.word	0x0802b8fa
 8004714:	20012dfc 	.word	0x20012dfc
 8004718:	20012df8 	.word	0x20012df8

0800471c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv>:
{
 800471c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Accurate_DisplayView, Measurement_Accurate_DisplayPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004720:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004724:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004726:	68a0      	ldr	r0, [r4, #8]
 8004728:	6803      	ldr	r3, [r0, #0]
 800472a:	6a1b      	ldr	r3, [r3, #32]
 800472c:	4798      	blx	r3
 800472e:	f241 33e3 	movw	r3, #5091	; 0x13e3
 8004732:	4298      	cmp	r0, r3
 8004734:	d805      	bhi.n	8004742 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x26>
 8004736:	4b42      	ldr	r3, [pc, #264]	; (8004840 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x124>)
 8004738:	4a42      	ldr	r2, [pc, #264]	; (8004844 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 800473a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800473c:	4842      	ldr	r0, [pc, #264]	; (8004848 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x12c>)
 800473e:	f025 f909 	bl	8029954 <__assert_func>
 8004742:	6860      	ldr	r0, [r4, #4]
 8004744:	6803      	ldr	r3, [r0, #0]
 8004746:	6a1b      	ldr	r3, [r3, #32]
 8004748:	4798      	blx	r3
 800474a:	280f      	cmp	r0, #15
 800474c:	d803      	bhi.n	8004756 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x3a>
 800474e:	4b3f      	ldr	r3, [pc, #252]	; (800484c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x130>)
 8004750:	4a3c      	ldr	r2, [pc, #240]	; (8004844 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004752:	21a4      	movs	r1, #164	; 0xa4
 8004754:	e7f2      	b.n	800473c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004756:	68e0      	ldr	r0, [r4, #12]
 8004758:	6803      	ldr	r3, [r0, #0]
 800475a:	6a1b      	ldr	r3, [r3, #32]
 800475c:	4798      	blx	r3
 800475e:	2837      	cmp	r0, #55	; 0x37
 8004760:	d803      	bhi.n	800476a <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x4e>
 8004762:	4b3b      	ldr	r3, [pc, #236]	; (8004850 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x134>)
 8004764:	4a37      	ldr	r2, [pc, #220]	; (8004844 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x128>)
 8004766:	21a5      	movs	r1, #165	; 0xa5
 8004768:	e7e8      	b.n	800473c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800476a:	f010 fa69 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800476e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004854 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x138>
 8004772:	3004      	adds	r0, #4
 8004774:	f010 faca 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004778:	f8d9 0000 	ldr.w	r0, [r9]
 800477c:	b110      	cbz	r0, 8004784 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 800477e:	6803      	ldr	r3, [r0, #0]
 8004780:	68db      	ldr	r3, [r3, #12]
 8004782:	4798      	blx	r3
    if (*currentTrans)
 8004784:	f8d9 0000 	ldr.w	r0, [r9]
 8004788:	b110      	cbz	r0, 8004790 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800478a:	6803      	ldr	r3, [r0, #0]
 800478c:	681b      	ldr	r3, [r3, #0]
 800478e:	4798      	blx	r3
    if (*currentScreen)
 8004790:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004858 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x13c>
 8004794:	f8d8 0000 	ldr.w	r0, [r8]
 8004798:	b110      	cbz	r0, 80047a0 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800479a:	6803      	ldr	r3, [r0, #0]
 800479c:	695b      	ldr	r3, [r3, #20]
 800479e:	4798      	blx	r3
    if (*currentPresenter)
 80047a0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047a4:	b110      	cbz	r0, 80047ac <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80047a6:	6803      	ldr	r3, [r0, #0]
 80047a8:	685b      	ldr	r3, [r3, #4]
 80047aa:	4798      	blx	r3
    if (*currentScreen)
 80047ac:	f8d8 0000 	ldr.w	r0, [r8]
 80047b0:	b110      	cbz	r0, 80047b8 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80047b2:	6803      	ldr	r3, [r0, #0]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	4798      	blx	r3
    if (*currentPresenter)
 80047b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80047bc:	b110      	cbz	r0, 80047c4 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80047be:	6803      	ldr	r3, [r0, #0]
 80047c0:	689b      	ldr	r3, [r3, #8]
 80047c2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80047c4:	68e0      	ldr	r0, [r4, #12]
 80047c6:	2100      	movs	r1, #0
 80047c8:	f7ff fc56 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 80047cc:	2114      	movs	r1, #20
 80047ce:	4605      	mov	r5, r0
 80047d0:	f7ff fc56 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80047d4:	68a0      	ldr	r0, [r4, #8]
 80047d6:	6803      	ldr	r3, [r0, #0]
 80047d8:	2100      	movs	r1, #0
 80047da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047dc:	4798      	blx	r3
 80047de:	4606      	mov	r6, r0
 80047e0:	f003 ff46 	bl	8008670 <_ZN32Measurement_Accurate_DisplayViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80047e4:	6860      	ldr	r0, [r4, #4]
 80047e6:	6803      	ldr	r3, [r0, #0]
 80047e8:	2100      	movs	r1, #0
 80047ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047ec:	4798      	blx	r3
 80047ee:	4631      	mov	r1, r6
 80047f0:	4604      	mov	r4, r0
 80047f2:	f003 ff17 	bl	8008624 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>
    *currentTrans = newTransition;
 80047f6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80047fa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80047fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004802:	b1dc      	cbz	r4, 800483c <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0x120>
 8004804:	1d23      	adds	r3, r4, #4
 8004806:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800480a:	6833      	ldr	r3, [r6, #0]
 800480c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004810:	4630      	mov	r0, r6
 8004812:	68db      	ldr	r3, [r3, #12]
 8004814:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004816:	4798      	blx	r3
    newPresenter->activate();
 8004818:	6823      	ldr	r3, [r4, #0]
 800481a:	4620      	mov	r0, r4
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004820:	4629      	mov	r1, r5
 8004822:	4630      	mov	r0, r6
 8004824:	f012 f838 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004828:	682b      	ldr	r3, [r5, #0]
 800482a:	4628      	mov	r0, r5
 800482c:	691b      	ldr	r3, [r3, #16]
 800482e:	4798      	blx	r3
    newTransition->invalidate();
 8004830:	682b      	ldr	r3, [r5, #0]
 8004832:	4628      	mov	r0, r5
 8004834:	695b      	ldr	r3, [r3, #20]
}
 8004836:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800483a:	4718      	bx	r3
    model->bind(newPresenter);
 800483c:	4623      	mov	r3, r4
 800483e:	e7e2      	b.n	8004806 <_ZN23FrontendApplicationBase60gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastImplEv+0xea>
 8004840:	0802b674 	.word	0x0802b674
 8004844:	0802c523 	.word	0x0802c523
 8004848:	0802b810 	.word	0x0802b810
 800484c:	0802b857 	.word	0x0802b857
 8004850:	0802b8fa 	.word	0x0802b8fa
 8004854:	20012dfc 	.word	0x20012dfc
 8004858:	20012df8 	.word	0x20012df8

0800485c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv>:
{
 800485c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_AccurateView, Measurement_AccuratePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004860:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004864:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004866:	68a0      	ldr	r0, [r4, #8]
 8004868:	6803      	ldr	r3, [r0, #0]
 800486a:	6a1b      	ldr	r3, [r3, #32]
 800486c:	4798      	blx	r3
 800486e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004872:	d205      	bcs.n	8004880 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x24>
 8004874:	4b42      	ldr	r3, [pc, #264]	; (8004980 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x124>)
 8004876:	4a43      	ldr	r2, [pc, #268]	; (8004984 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004878:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800487a:	4843      	ldr	r0, [pc, #268]	; (8004988 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x12c>)
 800487c:	f025 f86a 	bl	8029954 <__assert_func>
 8004880:	6860      	ldr	r0, [r4, #4]
 8004882:	6803      	ldr	r3, [r0, #0]
 8004884:	6a1b      	ldr	r3, [r3, #32]
 8004886:	4798      	blx	r3
 8004888:	280f      	cmp	r0, #15
 800488a:	d803      	bhi.n	8004894 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x38>
 800488c:	4b3f      	ldr	r3, [pc, #252]	; (800498c <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x130>)
 800488e:	4a3d      	ldr	r2, [pc, #244]	; (8004984 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 8004890:	21a4      	movs	r1, #164	; 0xa4
 8004892:	e7f2      	b.n	800487a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004894:	68e0      	ldr	r0, [r4, #12]
 8004896:	6803      	ldr	r3, [r0, #0]
 8004898:	6a1b      	ldr	r3, [r3, #32]
 800489a:	4798      	blx	r3
 800489c:	2837      	cmp	r0, #55	; 0x37
 800489e:	d803      	bhi.n	80048a8 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x4c>
 80048a0:	4b3b      	ldr	r3, [pc, #236]	; (8004990 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x134>)
 80048a2:	4a38      	ldr	r2, [pc, #224]	; (8004984 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x128>)
 80048a4:	21a5      	movs	r1, #165	; 0xa5
 80048a6:	e7e8      	b.n	800487a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80048a8:	f010 f9ca 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048ac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004994 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x138>
 80048b0:	3004      	adds	r0, #4
 80048b2:	f010 fa2b 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048b6:	f8d9 0000 	ldr.w	r0, [r9]
 80048ba:	b110      	cbz	r0, 80048c2 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 80048bc:	6803      	ldr	r3, [r0, #0]
 80048be:	68db      	ldr	r3, [r3, #12]
 80048c0:	4798      	blx	r3
    if (*currentTrans)
 80048c2:	f8d9 0000 	ldr.w	r0, [r9]
 80048c6:	b110      	cbz	r0, 80048ce <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 80048c8:	6803      	ldr	r3, [r0, #0]
 80048ca:	681b      	ldr	r3, [r3, #0]
 80048cc:	4798      	blx	r3
    if (*currentScreen)
 80048ce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004998 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x13c>
 80048d2:	f8d8 0000 	ldr.w	r0, [r8]
 80048d6:	b110      	cbz	r0, 80048de <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80048d8:	6803      	ldr	r3, [r0, #0]
 80048da:	695b      	ldr	r3, [r3, #20]
 80048dc:	4798      	blx	r3
    if (*currentPresenter)
 80048de:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048e2:	b110      	cbz	r0, 80048ea <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 80048e4:	6803      	ldr	r3, [r0, #0]
 80048e6:	685b      	ldr	r3, [r3, #4]
 80048e8:	4798      	blx	r3
    if (*currentScreen)
 80048ea:	f8d8 0000 	ldr.w	r0, [r8]
 80048ee:	b110      	cbz	r0, 80048f6 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 80048f0:	6803      	ldr	r3, [r0, #0]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	4798      	blx	r3
    if (*currentPresenter)
 80048f6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80048fa:	b110      	cbz	r0, 8004902 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 80048fc:	6803      	ldr	r3, [r0, #0]
 80048fe:	689b      	ldr	r3, [r3, #8]
 8004900:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004902:	68e0      	ldr	r0, [r4, #12]
 8004904:	2100      	movs	r1, #0
 8004906:	f7ff fbb7 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 800490a:	2114      	movs	r1, #20
 800490c:	4605      	mov	r5, r0
 800490e:	f7ff fbb7 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004912:	68a0      	ldr	r0, [r4, #8]
 8004914:	6803      	ldr	r3, [r0, #0]
 8004916:	2100      	movs	r1, #0
 8004918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800491a:	4798      	blx	r3
 800491c:	4606      	mov	r6, r0
 800491e:	f003 fe4d 	bl	80085bc <_ZN24Measurement_AccurateViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004922:	6860      	ldr	r0, [r4, #4]
 8004924:	6803      	ldr	r3, [r0, #0]
 8004926:	2100      	movs	r1, #0
 8004928:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800492a:	4798      	blx	r3
 800492c:	4631      	mov	r1, r6
 800492e:	4604      	mov	r4, r0
 8004930:	f003 fe1e 	bl	8008570 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>
    *currentTrans = newTransition;
 8004934:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004938:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800493c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004940:	b1dc      	cbz	r4, 800497a <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0x11e>
 8004942:	1d23      	adds	r3, r4, #4
 8004944:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004948:	6833      	ldr	r3, [r6, #0]
 800494a:	f8c4 a008 	str.w	sl, [r4, #8]
 800494e:	4630      	mov	r0, r6
 8004950:	68db      	ldr	r3, [r3, #12]
 8004952:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004954:	4798      	blx	r3
    newPresenter->activate();
 8004956:	6823      	ldr	r3, [r4, #0]
 8004958:	4620      	mov	r0, r4
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800495e:	4629      	mov	r1, r5
 8004960:	4630      	mov	r0, r6
 8004962:	f011 ff99 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004966:	682b      	ldr	r3, [r5, #0]
 8004968:	4628      	mov	r0, r5
 800496a:	691b      	ldr	r3, [r3, #16]
 800496c:	4798      	blx	r3
    newTransition->invalidate();
 800496e:	682b      	ldr	r3, [r5, #0]
 8004970:	4628      	mov	r0, r5
 8004972:	695b      	ldr	r3, [r3, #20]
}
 8004974:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004978:	4718      	bx	r3
    model->bind(newPresenter);
 800497a:	4623      	mov	r3, r4
 800497c:	e7e2      	b.n	8004944 <_ZN23FrontendApplicationBase52gotoMeasurement_AccurateScreenWipeTransitionEastImplEv+0xe8>
 800497e:	bf00      	nop
 8004980:	0802b674 	.word	0x0802b674
 8004984:	0802c663 	.word	0x0802c663
 8004988:	0802b810 	.word	0x0802b810
 800498c:	0802b857 	.word	0x0802b857
 8004990:	0802b8fa 	.word	0x0802b8fa
 8004994:	20012dfc 	.word	0x20012dfc
 8004998:	20012df8 	.word	0x20012df8

0800499c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv>:
{
 800499c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_3PView, Measurement_Single_Display_3PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80049a0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80049a4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80049a6:	68a0      	ldr	r0, [r4, #8]
 80049a8:	6803      	ldr	r3, [r0, #0]
 80049aa:	6a1b      	ldr	r3, [r3, #32]
 80049ac:	4798      	blx	r3
 80049ae:	f241 33e3 	movw	r3, #5091	; 0x13e3
 80049b2:	4298      	cmp	r0, r3
 80049b4:	d805      	bhi.n	80049c2 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x26>
 80049b6:	4b42      	ldr	r3, [pc, #264]	; (8004ac0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x124>)
 80049b8:	4a42      	ldr	r2, [pc, #264]	; (8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80049ba:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80049bc:	4842      	ldr	r0, [pc, #264]	; (8004ac8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x12c>)
 80049be:	f024 ffc9 	bl	8029954 <__assert_func>
 80049c2:	6860      	ldr	r0, [r4, #4]
 80049c4:	6803      	ldr	r3, [r0, #0]
 80049c6:	6a1b      	ldr	r3, [r3, #32]
 80049c8:	4798      	blx	r3
 80049ca:	280f      	cmp	r0, #15
 80049cc:	d803      	bhi.n	80049d6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x3a>
 80049ce:	4b3f      	ldr	r3, [pc, #252]	; (8004acc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x130>)
 80049d0:	4a3c      	ldr	r2, [pc, #240]	; (8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80049d2:	21a4      	movs	r1, #164	; 0xa4
 80049d4:	e7f2      	b.n	80049bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80049d6:	68e0      	ldr	r0, [r4, #12]
 80049d8:	6803      	ldr	r3, [r0, #0]
 80049da:	6a1b      	ldr	r3, [r3, #32]
 80049dc:	4798      	blx	r3
 80049de:	2837      	cmp	r0, #55	; 0x37
 80049e0:	d803      	bhi.n	80049ea <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x4e>
 80049e2:	4b3b      	ldr	r3, [pc, #236]	; (8004ad0 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x134>)
 80049e4:	4a37      	ldr	r2, [pc, #220]	; (8004ac4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x128>)
 80049e6:	21a5      	movs	r1, #165	; 0xa5
 80049e8:	e7e8      	b.n	80049bc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80049ea:	f010 f929 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80049ee:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004ad4 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x138>
 80049f2:	3004      	adds	r0, #4
 80049f4:	f010 f98a 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80049f8:	f8d9 0000 	ldr.w	r0, [r9]
 80049fc:	b110      	cbz	r0, 8004a04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80049fe:	6803      	ldr	r3, [r0, #0]
 8004a00:	68db      	ldr	r3, [r3, #12]
 8004a02:	4798      	blx	r3
    if (*currentTrans)
 8004a04:	f8d9 0000 	ldr.w	r0, [r9]
 8004a08:	b110      	cbz	r0, 8004a10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004a0a:	6803      	ldr	r3, [r0, #0]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	4798      	blx	r3
    if (*currentScreen)
 8004a10:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ad8 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x13c>
 8004a14:	f8d8 0000 	ldr.w	r0, [r8]
 8004a18:	b110      	cbz	r0, 8004a20 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004a1a:	6803      	ldr	r3, [r0, #0]
 8004a1c:	695b      	ldr	r3, [r3, #20]
 8004a1e:	4798      	blx	r3
    if (*currentPresenter)
 8004a20:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a24:	b110      	cbz	r0, 8004a2c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004a26:	6803      	ldr	r3, [r0, #0]
 8004a28:	685b      	ldr	r3, [r3, #4]
 8004a2a:	4798      	blx	r3
    if (*currentScreen)
 8004a2c:	f8d8 0000 	ldr.w	r0, [r8]
 8004a30:	b110      	cbz	r0, 8004a38 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004a32:	6803      	ldr	r3, [r0, #0]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	4798      	blx	r3
    if (*currentPresenter)
 8004a38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004a3c:	b110      	cbz	r0, 8004a44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004a3e:	6803      	ldr	r3, [r0, #0]
 8004a40:	689b      	ldr	r3, [r3, #8]
 8004a42:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004a44:	68e0      	ldr	r0, [r4, #12]
 8004a46:	2100      	movs	r1, #0
 8004a48:	f7ff fb16 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004a4c:	2114      	movs	r1, #20
 8004a4e:	4605      	mov	r5, r0
 8004a50:	f7ff fb16 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004a54:	68a0      	ldr	r0, [r4, #8]
 8004a56:	6803      	ldr	r3, [r0, #0]
 8004a58:	2100      	movs	r1, #0
 8004a5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a5c:	4798      	blx	r3
 8004a5e:	4606      	mov	r6, r0
 8004a60:	f003 ff8a 	bl	8008978 <_ZN33Measurement_Single_Display_3PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004a64:	6860      	ldr	r0, [r4, #4]
 8004a66:	6803      	ldr	r3, [r0, #0]
 8004a68:	2100      	movs	r1, #0
 8004a6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a6c:	4798      	blx	r3
 8004a6e:	4631      	mov	r1, r6
 8004a70:	4604      	mov	r4, r0
 8004a72:	f003 ff5b 	bl	800892c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>
    *currentTrans = newTransition;
 8004a76:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004a7a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a7e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a82:	b1dc      	cbz	r4, 8004abc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0x120>
 8004a84:	1d23      	adds	r3, r4, #4
 8004a86:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a8a:	6833      	ldr	r3, [r6, #0]
 8004a8c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a90:	4630      	mov	r0, r6
 8004a92:	68db      	ldr	r3, [r3, #12]
 8004a94:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a96:	4798      	blx	r3
    newPresenter->activate();
 8004a98:	6823      	ldr	r3, [r4, #0]
 8004a9a:	4620      	mov	r0, r4
 8004a9c:	681b      	ldr	r3, [r3, #0]
 8004a9e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004aa0:	4629      	mov	r1, r5
 8004aa2:	4630      	mov	r0, r6
 8004aa4:	f011 fef8 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004aa8:	682b      	ldr	r3, [r5, #0]
 8004aaa:	4628      	mov	r0, r5
 8004aac:	691b      	ldr	r3, [r3, #16]
 8004aae:	4798      	blx	r3
    newTransition->invalidate();
 8004ab0:	682b      	ldr	r3, [r5, #0]
 8004ab2:	4628      	mov	r0, r5
 8004ab4:	695b      	ldr	r3, [r3, #20]
}
 8004ab6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004aba:	4718      	bx	r3
    model->bind(newPresenter);
 8004abc:	4623      	mov	r3, r4
 8004abe:	e7e2      	b.n	8004a86 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_3PScreenWipeTransitionEastImplEv+0xea>
 8004ac0:	0802b674 	.word	0x0802b674
 8004ac4:	0802c793 	.word	0x0802c793
 8004ac8:	0802b810 	.word	0x0802b810
 8004acc:	0802b857 	.word	0x0802b857
 8004ad0:	0802b8fa 	.word	0x0802b8fa
 8004ad4:	20012dfc 	.word	0x20012dfc
 8004ad8:	20012df8 	.word	0x20012df8

08004adc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv>:
{
 8004adc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_Single_Display_1PView, Measurement_Single_Display_1PPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ae0:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ae4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ae6:	68a0      	ldr	r0, [r4, #8]
 8004ae8:	6803      	ldr	r3, [r0, #0]
 8004aea:	6a1b      	ldr	r3, [r3, #32]
 8004aec:	4798      	blx	r3
 8004aee:	f241 33f7 	movw	r3, #5111	; 0x13f7
 8004af2:	4298      	cmp	r0, r3
 8004af4:	d805      	bhi.n	8004b02 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x26>
 8004af6:	4b42      	ldr	r3, [pc, #264]	; (8004c00 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x124>)
 8004af8:	4a42      	ldr	r2, [pc, #264]	; (8004c04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004afa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004afc:	4842      	ldr	r0, [pc, #264]	; (8004c08 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x12c>)
 8004afe:	f024 ff29 	bl	8029954 <__assert_func>
 8004b02:	6860      	ldr	r0, [r4, #4]
 8004b04:	6803      	ldr	r3, [r0, #0]
 8004b06:	6a1b      	ldr	r3, [r3, #32]
 8004b08:	4798      	blx	r3
 8004b0a:	280f      	cmp	r0, #15
 8004b0c:	d803      	bhi.n	8004b16 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x3a>
 8004b0e:	4b3f      	ldr	r3, [pc, #252]	; (8004c0c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x130>)
 8004b10:	4a3c      	ldr	r2, [pc, #240]	; (8004c04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b12:	21a4      	movs	r1, #164	; 0xa4
 8004b14:	e7f2      	b.n	8004afc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004b16:	68e0      	ldr	r0, [r4, #12]
 8004b18:	6803      	ldr	r3, [r0, #0]
 8004b1a:	6a1b      	ldr	r3, [r3, #32]
 8004b1c:	4798      	blx	r3
 8004b1e:	2837      	cmp	r0, #55	; 0x37
 8004b20:	d803      	bhi.n	8004b2a <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x4e>
 8004b22:	4b3b      	ldr	r3, [pc, #236]	; (8004c10 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x134>)
 8004b24:	4a37      	ldr	r2, [pc, #220]	; (8004c04 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x128>)
 8004b26:	21a5      	movs	r1, #165	; 0xa5
 8004b28:	e7e8      	b.n	8004afc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004b2a:	f010 f889 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004b2e:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004c14 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x138>
 8004b32:	3004      	adds	r0, #4
 8004b34:	f010 f8ea 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004b38:	f8d9 0000 	ldr.w	r0, [r9]
 8004b3c:	b110      	cbz	r0, 8004b44 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004b3e:	6803      	ldr	r3, [r0, #0]
 8004b40:	68db      	ldr	r3, [r3, #12]
 8004b42:	4798      	blx	r3
    if (*currentTrans)
 8004b44:	f8d9 0000 	ldr.w	r0, [r9]
 8004b48:	b110      	cbz	r0, 8004b50 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004b4a:	6803      	ldr	r3, [r0, #0]
 8004b4c:	681b      	ldr	r3, [r3, #0]
 8004b4e:	4798      	blx	r3
    if (*currentScreen)
 8004b50:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004c18 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x13c>
 8004b54:	f8d8 0000 	ldr.w	r0, [r8]
 8004b58:	b110      	cbz	r0, 8004b60 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004b5a:	6803      	ldr	r3, [r0, #0]
 8004b5c:	695b      	ldr	r3, [r3, #20]
 8004b5e:	4798      	blx	r3
    if (*currentPresenter)
 8004b60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b64:	b110      	cbz	r0, 8004b6c <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004b66:	6803      	ldr	r3, [r0, #0]
 8004b68:	685b      	ldr	r3, [r3, #4]
 8004b6a:	4798      	blx	r3
    if (*currentScreen)
 8004b6c:	f8d8 0000 	ldr.w	r0, [r8]
 8004b70:	b110      	cbz	r0, 8004b78 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004b72:	6803      	ldr	r3, [r0, #0]
 8004b74:	681b      	ldr	r3, [r3, #0]
 8004b76:	4798      	blx	r3
    if (*currentPresenter)
 8004b78:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b7c:	b110      	cbz	r0, 8004b84 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	689b      	ldr	r3, [r3, #8]
 8004b82:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b84:	68e0      	ldr	r0, [r4, #12]
 8004b86:	2100      	movs	r1, #0
 8004b88:	f7ff fa76 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004b8c:	2114      	movs	r1, #20
 8004b8e:	4605      	mov	r5, r0
 8004b90:	f7ff fa76 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b94:	68a0      	ldr	r0, [r4, #8]
 8004b96:	6803      	ldr	r3, [r0, #0]
 8004b98:	2100      	movs	r1, #0
 8004b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b9c:	4798      	blx	r3
 8004b9e:	4606      	mov	r6, r0
 8004ba0:	f003 fe4a 	bl	8008838 <_ZN33Measurement_Single_Display_1PViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ba4:	6860      	ldr	r0, [r4, #4]
 8004ba6:	6803      	ldr	r3, [r0, #0]
 8004ba8:	2100      	movs	r1, #0
 8004baa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004bac:	4798      	blx	r3
 8004bae:	4631      	mov	r1, r6
 8004bb0:	4604      	mov	r4, r0
 8004bb2:	f003 fe1b 	bl	80087ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>
    *currentTrans = newTransition;
 8004bb6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004bba:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004bbe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004bc2:	b1dc      	cbz	r4, 8004bfc <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0x120>
 8004bc4:	1d23      	adds	r3, r4, #4
 8004bc6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004bca:	6833      	ldr	r3, [r6, #0]
 8004bcc:	f8c4 a008 	str.w	sl, [r4, #8]
 8004bd0:	4630      	mov	r0, r6
 8004bd2:	68db      	ldr	r3, [r3, #12]
 8004bd4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004bd6:	4798      	blx	r3
    newPresenter->activate();
 8004bd8:	6823      	ldr	r3, [r4, #0]
 8004bda:	4620      	mov	r0, r4
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004be0:	4629      	mov	r1, r5
 8004be2:	4630      	mov	r0, r6
 8004be4:	f011 fe58 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004be8:	682b      	ldr	r3, [r5, #0]
 8004bea:	4628      	mov	r0, r5
 8004bec:	691b      	ldr	r3, [r3, #16]
 8004bee:	4798      	blx	r3
    newTransition->invalidate();
 8004bf0:	682b      	ldr	r3, [r5, #0]
 8004bf2:	4628      	mov	r0, r5
 8004bf4:	695b      	ldr	r3, [r3, #20]
}
 8004bf6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004bfa:	4718      	bx	r3
    model->bind(newPresenter);
 8004bfc:	4623      	mov	r3, r4
 8004bfe:	e7e2      	b.n	8004bc6 <_ZN23FrontendApplicationBase61gotoMeasurement_Single_Display_1PScreenWipeTransitionEastImplEv+0xea>
 8004c00:	0802b674 	.word	0x0802b674
 8004c04:	0802c8d5 	.word	0x0802c8d5
 8004c08:	0802b810 	.word	0x0802b810
 8004c0c:	0802b857 	.word	0x0802b857
 8004c10:	0802b8fa 	.word	0x0802b8fa
 8004c14:	20012dfc 	.word	0x20012dfc
 8004c18:	20012df8 	.word	0x20012df8

08004c1c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv>:
{
 8004c1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Measurement_SingleView, Measurement_SinglePresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c20:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c24:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c26:	68a0      	ldr	r0, [r4, #8]
 8004c28:	6803      	ldr	r3, [r0, #0]
 8004c2a:	6a1b      	ldr	r3, [r3, #32]
 8004c2c:	4798      	blx	r3
 8004c2e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004c32:	d205      	bcs.n	8004c40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x24>
 8004c34:	4b42      	ldr	r3, [pc, #264]	; (8004d40 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x124>)
 8004c36:	4a43      	ldr	r2, [pc, #268]	; (8004d44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004c38:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c3a:	4843      	ldr	r0, [pc, #268]	; (8004d48 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x12c>)
 8004c3c:	f024 fe8a 	bl	8029954 <__assert_func>
 8004c40:	6860      	ldr	r0, [r4, #4]
 8004c42:	6803      	ldr	r3, [r0, #0]
 8004c44:	6a1b      	ldr	r3, [r3, #32]
 8004c46:	4798      	blx	r3
 8004c48:	280f      	cmp	r0, #15
 8004c4a:	d803      	bhi.n	8004c54 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x38>
 8004c4c:	4b3f      	ldr	r3, [pc, #252]	; (8004d4c <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x130>)
 8004c4e:	4a3d      	ldr	r2, [pc, #244]	; (8004d44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004c50:	21a4      	movs	r1, #164	; 0xa4
 8004c52:	e7f2      	b.n	8004c3a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c54:	68e0      	ldr	r0, [r4, #12]
 8004c56:	6803      	ldr	r3, [r0, #0]
 8004c58:	6a1b      	ldr	r3, [r3, #32]
 8004c5a:	4798      	blx	r3
 8004c5c:	2837      	cmp	r0, #55	; 0x37
 8004c5e:	d803      	bhi.n	8004c68 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x4c>
 8004c60:	4b3b      	ldr	r3, [pc, #236]	; (8004d50 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x134>)
 8004c62:	4a38      	ldr	r2, [pc, #224]	; (8004d44 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x128>)
 8004c64:	21a5      	movs	r1, #165	; 0xa5
 8004c66:	e7e8      	b.n	8004c3a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004c68:	f00f ffea 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c6c:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d54 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x138>
 8004c70:	3004      	adds	r0, #4
 8004c72:	f010 f84b 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c76:	f8d9 0000 	ldr.w	r0, [r9]
 8004c7a:	b110      	cbz	r0, 8004c82 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004c7c:	6803      	ldr	r3, [r0, #0]
 8004c7e:	68db      	ldr	r3, [r3, #12]
 8004c80:	4798      	blx	r3
    if (*currentTrans)
 8004c82:	f8d9 0000 	ldr.w	r0, [r9]
 8004c86:	b110      	cbz	r0, 8004c8e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004c88:	6803      	ldr	r3, [r0, #0]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	4798      	blx	r3
    if (*currentScreen)
 8004c8e:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004d58 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x13c>
 8004c92:	f8d8 0000 	ldr.w	r0, [r8]
 8004c96:	b110      	cbz	r0, 8004c9e <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004c98:	6803      	ldr	r3, [r0, #0]
 8004c9a:	695b      	ldr	r3, [r3, #20]
 8004c9c:	4798      	blx	r3
    if (*currentPresenter)
 8004c9e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ca2:	b110      	cbz	r0, 8004caa <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004ca4:	6803      	ldr	r3, [r0, #0]
 8004ca6:	685b      	ldr	r3, [r3, #4]
 8004ca8:	4798      	blx	r3
    if (*currentScreen)
 8004caa:	f8d8 0000 	ldr.w	r0, [r8]
 8004cae:	b110      	cbz	r0, 8004cb6 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004cb0:	6803      	ldr	r3, [r0, #0]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	4798      	blx	r3
    if (*currentPresenter)
 8004cb6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cba:	b110      	cbz	r0, 8004cc2 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004cbc:	6803      	ldr	r3, [r0, #0]
 8004cbe:	689b      	ldr	r3, [r3, #8]
 8004cc0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cc2:	68e0      	ldr	r0, [r4, #12]
 8004cc4:	2100      	movs	r1, #0
 8004cc6:	f7ff f9d7 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004cca:	2114      	movs	r1, #20
 8004ccc:	4605      	mov	r5, r0
 8004cce:	f7ff f9d7 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cd2:	68a0      	ldr	r0, [r4, #8]
 8004cd4:	6803      	ldr	r3, [r0, #0]
 8004cd6:	2100      	movs	r1, #0
 8004cd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cda:	4798      	blx	r3
 8004cdc:	4606      	mov	r6, r0
 8004cde:	f003 fd51 	bl	8008784 <_ZN22Measurement_SingleViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004ce2:	6860      	ldr	r0, [r4, #4]
 8004ce4:	6803      	ldr	r3, [r0, #0]
 8004ce6:	2100      	movs	r1, #0
 8004ce8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cea:	4798      	blx	r3
 8004cec:	4631      	mov	r1, r6
 8004cee:	4604      	mov	r4, r0
 8004cf0:	f003 fd22 	bl	8008738 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>
    *currentTrans = newTransition;
 8004cf4:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004cf8:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004cfc:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004d00:	b1dc      	cbz	r4, 8004d3a <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0x11e>
 8004d02:	1d23      	adds	r3, r4, #4
 8004d04:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004d08:	6833      	ldr	r3, [r6, #0]
 8004d0a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d0e:	4630      	mov	r0, r6
 8004d10:	68db      	ldr	r3, [r3, #12]
 8004d12:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d14:	4798      	blx	r3
    newPresenter->activate();
 8004d16:	6823      	ldr	r3, [r4, #0]
 8004d18:	4620      	mov	r0, r4
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d1e:	4629      	mov	r1, r5
 8004d20:	4630      	mov	r0, r6
 8004d22:	f011 fdb9 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d26:	682b      	ldr	r3, [r5, #0]
 8004d28:	4628      	mov	r0, r5
 8004d2a:	691b      	ldr	r3, [r3, #16]
 8004d2c:	4798      	blx	r3
    newTransition->invalidate();
 8004d2e:	682b      	ldr	r3, [r5, #0]
 8004d30:	4628      	mov	r0, r5
 8004d32:	695b      	ldr	r3, [r3, #20]
}
 8004d34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d38:	4718      	bx	r3
    model->bind(newPresenter);
 8004d3a:	4623      	mov	r3, r4
 8004d3c:	e7e2      	b.n	8004d04 <_ZN23FrontendApplicationBase50gotoMeasurement_SingleScreenWipeTransitionEastImplEv+0xe8>
 8004d3e:	bf00      	nop
 8004d40:	0802b674 	.word	0x0802b674
 8004d44:	0802ca17 	.word	0x0802ca17
 8004d48:	0802b810 	.word	0x0802b810
 8004d4c:	0802b857 	.word	0x0802b857
 8004d50:	0802b8fa 	.word	0x0802b8fa
 8004d54:	20012dfc 	.word	0x20012dfc
 8004d58:	20012df8 	.word	0x20012df8

08004d5c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv>:
{
 8004d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MeasurementView, MeasurementPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d60:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d64:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d66:	68a0      	ldr	r0, [r4, #8]
 8004d68:	6803      	ldr	r3, [r0, #0]
 8004d6a:	6a1b      	ldr	r3, [r3, #32]
 8004d6c:	4798      	blx	r3
 8004d6e:	f5b0 5f8a 	cmp.w	r0, #4416	; 0x1140
 8004d72:	d205      	bcs.n	8004d80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x24>
 8004d74:	4b42      	ldr	r3, [pc, #264]	; (8004e80 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x124>)
 8004d76:	4a43      	ldr	r2, [pc, #268]	; (8004e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004d78:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d7a:	4843      	ldr	r0, [pc, #268]	; (8004e88 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x12c>)
 8004d7c:	f024 fdea 	bl	8029954 <__assert_func>
 8004d80:	6860      	ldr	r0, [r4, #4]
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	6a1b      	ldr	r3, [r3, #32]
 8004d86:	4798      	blx	r3
 8004d88:	280f      	cmp	r0, #15
 8004d8a:	d803      	bhi.n	8004d94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x38>
 8004d8c:	4b3f      	ldr	r3, [pc, #252]	; (8004e8c <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x130>)
 8004d8e:	4a3d      	ldr	r2, [pc, #244]	; (8004e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004d90:	21a4      	movs	r1, #164	; 0xa4
 8004d92:	e7f2      	b.n	8004d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d94:	68e0      	ldr	r0, [r4, #12]
 8004d96:	6803      	ldr	r3, [r0, #0]
 8004d98:	6a1b      	ldr	r3, [r3, #32]
 8004d9a:	4798      	blx	r3
 8004d9c:	2837      	cmp	r0, #55	; 0x37
 8004d9e:	d803      	bhi.n	8004da8 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x4c>
 8004da0:	4b3b      	ldr	r3, [pc, #236]	; (8004e90 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x134>)
 8004da2:	4a38      	ldr	r2, [pc, #224]	; (8004e84 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x128>)
 8004da4:	21a5      	movs	r1, #165	; 0xa5
 8004da6:	e7e8      	b.n	8004d7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004da8:	f00f ff4a 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004dac:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e94 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x138>
 8004db0:	3004      	adds	r0, #4
 8004db2:	f00f ffab 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004db6:	f8d9 0000 	ldr.w	r0, [r9]
 8004dba:	b110      	cbz	r0, 8004dc2 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004dbc:	6803      	ldr	r3, [r0, #0]
 8004dbe:	68db      	ldr	r3, [r3, #12]
 8004dc0:	4798      	blx	r3
    if (*currentTrans)
 8004dc2:	f8d9 0000 	ldr.w	r0, [r9]
 8004dc6:	b110      	cbz	r0, 8004dce <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004dc8:	6803      	ldr	r3, [r0, #0]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	4798      	blx	r3
    if (*currentScreen)
 8004dce:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e98 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x13c>
 8004dd2:	f8d8 0000 	ldr.w	r0, [r8]
 8004dd6:	b110      	cbz	r0, 8004dde <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dd8:	6803      	ldr	r3, [r0, #0]
 8004dda:	695b      	ldr	r3, [r3, #20]
 8004ddc:	4798      	blx	r3
    if (*currentPresenter)
 8004dde:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004de2:	b110      	cbz	r0, 8004dea <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004de4:	6803      	ldr	r3, [r0, #0]
 8004de6:	685b      	ldr	r3, [r3, #4]
 8004de8:	4798      	blx	r3
    if (*currentScreen)
 8004dea:	f8d8 0000 	ldr.w	r0, [r8]
 8004dee:	b110      	cbz	r0, 8004df6 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004df0:	6803      	ldr	r3, [r0, #0]
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	4798      	blx	r3
    if (*currentPresenter)
 8004df6:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dfa:	b110      	cbz	r0, 8004e02 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004dfc:	6803      	ldr	r3, [r0, #0]
 8004dfe:	689b      	ldr	r3, [r3, #8]
 8004e00:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004e02:	68e0      	ldr	r0, [r4, #12]
 8004e04:	2100      	movs	r1, #0
 8004e06:	f7ff f937 	bl	8004078 <_ZN8touchgfx17AbstractPartition2atINS_14WipeTransitionILNS_9DirectionE2EEEEERT_t>
 8004e0a:	2114      	movs	r1, #20
 8004e0c:	4605      	mov	r5, r0
 8004e0e:	f7ff f937 	bl	8004080 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e12:	68a0      	ldr	r0, [r4, #8]
 8004e14:	6803      	ldr	r3, [r0, #0]
 8004e16:	2100      	movs	r1, #0
 8004e18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e1a:	4798      	blx	r3
 8004e1c:	4606      	mov	r6, r0
 8004e1e:	f003 fb6d 	bl	80084fc <_ZN15MeasurementViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e22:	6860      	ldr	r0, [r4, #4]
 8004e24:	6803      	ldr	r3, [r0, #0]
 8004e26:	2100      	movs	r1, #0
 8004e28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e2a:	4798      	blx	r3
 8004e2c:	4631      	mov	r1, r6
 8004e2e:	4604      	mov	r4, r0
 8004e30:	f003 fb3e 	bl	80084b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>
    *currentTrans = newTransition;
 8004e34:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e38:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e3c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e40:	b1dc      	cbz	r4, 8004e7a <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0x11e>
 8004e42:	1d23      	adds	r3, r4, #4
 8004e44:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e48:	6833      	ldr	r3, [r6, #0]
 8004e4a:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e4e:	4630      	mov	r0, r6
 8004e50:	68db      	ldr	r3, [r3, #12]
 8004e52:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e54:	4798      	blx	r3
    newPresenter->activate();
 8004e56:	6823      	ldr	r3, [r4, #0]
 8004e58:	4620      	mov	r0, r4
 8004e5a:	681b      	ldr	r3, [r3, #0]
 8004e5c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e5e:	4629      	mov	r1, r5
 8004e60:	4630      	mov	r0, r6
 8004e62:	f011 fd19 	bl	8016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e66:	682b      	ldr	r3, [r5, #0]
 8004e68:	4628      	mov	r0, r5
 8004e6a:	691b      	ldr	r3, [r3, #16]
 8004e6c:	4798      	blx	r3
    newTransition->invalidate();
 8004e6e:	682b      	ldr	r3, [r5, #0]
 8004e70:	4628      	mov	r0, r5
 8004e72:	695b      	ldr	r3, [r3, #20]
}
 8004e74:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e78:	4718      	bx	r3
    model->bind(newPresenter);
 8004e7a:	4623      	mov	r3, r4
 8004e7c:	e7e2      	b.n	8004e44 <_ZN23FrontendApplicationBase43gotoMeasurementScreenWipeTransitionEastImplEv+0xe8>
 8004e7e:	bf00      	nop
 8004e80:	0802b674 	.word	0x0802b674
 8004e84:	0802cb43 	.word	0x0802cb43
 8004e88:	0802b810 	.word	0x0802b810
 8004e8c:	0802b857 	.word	0x0802b857
 8004e90:	0802b8fa 	.word	0x0802b8fa
 8004e94:	20012dfc 	.word	0x20012dfc
 8004e98:	20012df8 	.word	0x20012df8

08004e9c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8004e9c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004e9e:	4770      	bx	lr

08004ea0 <_ZN21Gauge_with_ValuesBaseD1Ev>:
}

Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
{

}
 8004ea0:	4770      	bx	lr

08004ea2 <_ZN21Gauge_with_ValuesBase10initializeEv>:

void Gauge_with_ValuesBase::initialize()
{

}
 8004ea2:	4770      	bx	lr

08004ea4 <_ZN21Gauge_with_ValuesBaseD0Ev>:
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004ea4:	b510      	push	{r4, lr}
}
 8004ea6:	f44f 7162 	mov.w	r1, #904	; 0x388
Gauge_with_ValuesBase::~Gauge_with_ValuesBase()
 8004eaa:	4604      	mov	r4, r0
}
 8004eac:	f023 ff3f 	bl	8028d2e <_ZdlPvj>
 8004eb0:	4620      	mov	r0, r4
 8004eb2:	bd10      	pop	{r4, pc}

08004eb4 <_ZN21Gauge_with_ValuesBaseC1Ev>:
Gauge_with_ValuesBase::Gauge_with_ValuesBase()
 8004eb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
          touchable(false),
 8004eb8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004ebc:	4680      	mov	r8, r0
        : x(0), y(0), width(0), height(0)
 8004ebe:	2600      	movs	r6, #0
 8004ec0:	ed2d 8b02 	vpush	{d8}
 8004ec4:	8483      	strh	r3, [r0, #36]	; 0x24
 8004ec6:	4bb2      	ldr	r3, [pc, #712]	; (8005190 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2dc>)
          firstChild(0)
 8004ec8:	6286      	str	r6, [r0, #40]	; 0x28
 8004eca:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004ece:	e9c0 6603 	strd	r6, r6, [r0, #12]
          nextSibling(0),
 8004ed2:	e9c0 6605 	strd	r6, r6, [r0, #20]
          cachedAbsX(0),
 8004ed6:	e9c0 6607 	strd	r6, r6, [r0, #28]
 8004eda:	f848 3b2c 	str.w	r3, [r8], #44
 8004ede:	b08b      	sub	sp, #44	; 0x2c
 8004ee0:	4604      	mov	r4, r0
 8004ee2:	4640      	mov	r0, r8
 8004ee4:	f7fd fc42 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8004ee8:	f104 0374 	add.w	r3, r4, #116	; 0x74
 8004eec:	f104 0bbc 	add.w	fp, r4, #188	; 0xbc
 8004ef0:	4618      	mov	r0, r3
 8004ef2:	9303      	str	r3, [sp, #12]
 8004ef4:	f504 7a82 	add.w	sl, r4, #260	; 0x104
 8004ef8:	f7fd fc38 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8004efc:	4658      	mov	r0, fp
 8004efe:	f7fd fc35 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8004f02:	f504 79a8 	add.w	r9, r4, #336	; 0x150
        : TextAreaWithWildcardBase(), wc1(0)
 8004f06:	4da3      	ldr	r5, [pc, #652]	; (8005194 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e0>)
        : TextArea()
 8004f08:	4650      	mov	r0, sl
 8004f0a:	f7fd fc2f 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004f0e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8004f12:	f8c4 614c 	str.w	r6, [r4, #332]	; 0x14c
        : TextArea()
 8004f16:	4648      	mov	r0, r9
 8004f18:	f7fd fc28 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8004f1c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
 8004f20:	f504 77f4 	add.w	r7, r4, #488	; 0x1e8
 8004f24:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8004f26:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8004f2a:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198
 8004f2e:	ee08 3a10 	vmov	s16, r3
        : TextArea()
 8004f32:	f7fd fc1b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004f36:	f8c4 519c 	str.w	r5, [r4, #412]	; 0x19c
 8004f3a:	f8c4 61e4 	str.w	r6, [r4, #484]	; 0x1e4
 8004f3e:	4638      	mov	r0, r7
 8004f40:	f00c fe38 	bl	8011bb4 <_ZN8touchgfx5GaugeC1Ev>
        rect.width = width;
 8004f44:	4a94      	ldr	r2, [pc, #592]	; (8005198 <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e4>)
 8004f46:	60a2      	str	r2, [r4, #8]
    textArea4_2.setXY(217, 109);
 8004f48:	4640      	mov	r0, r8
 8004f4a:	226d      	movs	r2, #109	; 0x6d
 8004f4c:	21d9      	movs	r1, #217	; 0xd9
 8004f4e:	ad04      	add	r5, sp, #16
 8004f50:	f7fd fbd9 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004f54:	f04f 33ff 	mov.w	r3, #4294967295
 8004f58:	65e3      	str	r3, [r4, #92]	; 0x5c
        boundingArea = calculateBoundingArea();
 8004f5a:	4641      	mov	r1, r8
 8004f5c:	4628      	mov	r0, r5
        linespace = space;
 8004f5e:	f8a4 6060 	strh.w	r6, [r4, #96]	; 0x60
        boundingArea = calculateBoundingArea();
 8004f62:	f00c faef 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004f66:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004f6a:	f104 0c68 	add.w	ip, r4, #104	; 0x68
 8004f6e:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004f72:	4b8a      	ldr	r3, [pc, #552]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004f74:	9308      	str	r3, [sp, #32]
 8004f76:	222f      	movs	r2, #47	; 0x2f
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D6CM));
 8004f78:	a908      	add	r1, sp, #32
 8004f7a:	4640      	mov	r0, r8
 8004f7c:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004f80:	f00c fd7a 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_2);
 8004f84:	4641      	mov	r1, r8
 8004f86:	4620      	mov	r0, r4
 8004f88:	f00a fbc2 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 109);
 8004f8c:	9b03      	ldr	r3, [sp, #12]
 8004f8e:	4631      	mov	r1, r6
 8004f90:	4618      	mov	r0, r3
 8004f92:	226d      	movs	r2, #109	; 0x6d
 8004f94:	f7fd fbb7 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8004f98:	9b03      	ldr	r3, [sp, #12]
        linespace = space;
 8004f9a:	f8a4 60a8 	strh.w	r6, [r4, #168]	; 0xa8
        color = newColor;
 8004f9e:	f04f 32ff 	mov.w	r2, #4294967295
 8004fa2:	f8c4 20a4 	str.w	r2, [r4, #164]	; 0xa4
        boundingArea = calculateBoundingArea();
 8004fa6:	4619      	mov	r1, r3
 8004fa8:	4628      	mov	r0, r5
 8004faa:	f00c facb 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004fae:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004fb2:	4b7a      	ldr	r3, [pc, #488]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8004fb4:	9308      	str	r3, [sp, #32]
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YENI));
 8004fb6:	9b03      	ldr	r3, [sp, #12]
 8004fb8:	f104 0cb0 	add.w	ip, r4, #176	; 0xb0
 8004fbc:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8004fc0:	2230      	movs	r2, #48	; 0x30
 8004fc2:	a908      	add	r1, sp, #32
 8004fc4:	4618      	mov	r0, r3
 8004fc6:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8004fca:	f00c fd55 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4_1);
 8004fce:	9b03      	ldr	r3, [sp, #12]
 8004fd0:	4620      	mov	r0, r4
 8004fd2:	4619      	mov	r1, r3
 8004fd4:	f00a fb9c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 0);
 8004fd8:	4632      	mov	r2, r6
 8004fda:	4658      	mov	r0, fp
 8004fdc:	2171      	movs	r1, #113	; 0x71
 8004fde:	f7fd fb92 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004fe2:	f04f 32ff 	mov.w	r2, #4294967295
 8004fe6:	f8c4 20ec 	str.w	r2, [r4, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8004fea:	4659      	mov	r1, fp
 8004fec:	4628      	mov	r0, r5
        linespace = space;
 8004fee:	f8a4 60f0 	strh.w	r6, [r4, #240]	; 0xf0
        boundingArea = calculateBoundingArea();
 8004ff2:	f00c faa7 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004ff6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004ffa:	f104 03f8 	add.w	r3, r4, #248	; 0xf8
 8004ffe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005002:	4b66      	ldr	r3, [pc, #408]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005004:	9308      	str	r3, [sp, #32]
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z8XU));
 8005006:	a908      	add	r1, sp, #32
 8005008:	2331      	movs	r3, #49	; 0x31
 800500a:	4658      	mov	r0, fp
 800500c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8005010:	f00c fd32 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea4);
 8005014:	4659      	mov	r1, fp
 8005016:	4620      	mov	r0, r4
 8005018:	f00a fb7a 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5.setXY(76, 124);
 800501c:	4650      	mov	r0, sl
 800501e:	227c      	movs	r2, #124	; 0x7c
 8005020:	214c      	movs	r1, #76	; 0x4c
 8005022:	f7fd fb70 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005026:	f8d4 3104 	ldr.w	r3, [r4, #260]	; 0x104
        linespace = space;
 800502a:	f8a4 6138 	strh.w	r6, [r4, #312]	; 0x138
        color = newColor;
 800502e:	f04f 32ff 	mov.w	r2, #4294967295
 8005032:	f8c4 2134 	str.w	r2, [r4, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005036:	4651      	mov	r1, sl
 8005038:	4628      	mov	r0, r5
 800503a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800503e:	4798      	blx	r3
 8005040:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005044:	f504 73a0 	add.w	r3, r4, #320	; 0x140
 8005048:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800504c:	4b53      	ldr	r3, [pc, #332]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 800504e:	9308      	str	r3, [sp, #32]
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RQ3J));
 8005050:	a908      	add	r1, sp, #32
 8005052:	232e      	movs	r3, #46	; 0x2e
 8005054:	4650      	mov	r0, sl
 8005056:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800505a:	f00c fd0d 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5);
 800505e:	4651      	mov	r1, sl
 8005060:	4620      	mov	r0, r4
 8005062:	f00a fb55 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_1.setXY(86, 139);
 8005066:	4648      	mov	r0, r9
 8005068:	228b      	movs	r2, #139	; 0x8b
 800506a:	2156      	movs	r1, #86	; 0x56
 800506c:	f7fd fb4b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005070:	f8d4 3150 	ldr.w	r3, [r4, #336]	; 0x150
        linespace = space;
 8005074:	f8a4 6184 	strh.w	r6, [r4, #388]	; 0x184
        color = newColor;
 8005078:	f04f 32ff 	mov.w	r2, #4294967295
 800507c:	f8c4 2180 	str.w	r2, [r4, #384]	; 0x180
        boundingArea = calculateBoundingArea();
 8005080:	4649      	mov	r1, r9
 8005082:	4628      	mov	r0, r5
 8005084:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005088:	4798      	blx	r3
 800508a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800508e:	f504 73c6 	add.w	r3, r4, #396	; 0x18c
 8005092:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005096:	4b41      	ldr	r3, [pc, #260]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 8005098:	9308      	str	r3, [sp, #32]
    textArea5_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_54VS));
 800509a:	a908      	add	r1, sp, #32
 800509c:	232d      	movs	r3, #45	; 0x2d
 800509e:	4648      	mov	r0, r9
 80050a0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80050a4:	f00c fce8 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_1);
 80050a8:	4649      	mov	r1, r9
 80050aa:	4620      	mov	r0, r4
 80050ac:	f00a fb30 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea5_2.setXY(86, 154);
 80050b0:	ee18 0a10 	vmov	r0, s16
 80050b4:	229a      	movs	r2, #154	; 0x9a
 80050b6:	2156      	movs	r1, #86	; 0x56
 80050b8:	f7fd fb25 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80050bc:	f8d4 319c 	ldr.w	r3, [r4, #412]	; 0x19c
        linespace = space;
 80050c0:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        color = newColor;
 80050c4:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 80050c8:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 80050cc:	f8c4 21cc 	str.w	r2, [r4, #460]	; 0x1cc
        boundingArea = calculateBoundingArea();
 80050d0:	4628      	mov	r0, r5
 80050d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80050d6:	4798      	blx	r3
 80050d8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80050dc:	f504 73ec 	add.w	r3, r4, #472	; 0x1d8
 80050e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80050e4:	4b2d      	ldr	r3, [pc, #180]	; (800519c <_ZN21Gauge_with_ValuesBaseC1Ev+0x2e8>)
 80050e6:	9308      	str	r3, [sp, #32]
    textArea5_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKDF));
 80050e8:	ee18 0a10 	vmov	r0, s16
 80050ec:	232c      	movs	r3, #44	; 0x2c
 80050ee:	a908      	add	r1, sp, #32
 80050f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80050f4:	f00c fcc0 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    add(textArea5_2);
 80050f8:	ee18 1a10 	vmov	r1, s16
 80050fc:	4620      	mov	r0, r4
 80050fe:	f00a fb07 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8005102:	2304      	movs	r3, #4
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 8005104:	a908      	add	r1, sp, #32
 8005106:	4638      	mov	r0, r7
 8005108:	f8ad 3020 	strh.w	r3, [sp, #32]
 800510c:	f00a fa92 	bl	800f634 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
        setXY(x, y);
 8005110:	2212      	movs	r2, #18
 8005112:	4638      	mov	r0, r7
 8005114:	211c      	movs	r1, #28
 8005116:	f7fd faf6 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 800511a:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800511e:	4638      	mov	r0, r7
 8005120:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005122:	21b8      	movs	r1, #184	; 0xb8
 8005124:	4798      	blx	r3
        setHeight(height);
 8005126:	f8d4 31e8 	ldr.w	r3, [r4, #488]	; 0x1e8
 800512a:	4638      	mov	r0, r7
 800512c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800512e:	216a      	movs	r1, #106	; 0x6a
 8005130:	4798      	blx	r3
    gauge1.setCenter(92, 92);
 8005132:	225c      	movs	r2, #92	; 0x5c
 8005134:	4611      	mov	r1, r2
 8005136:	4638      	mov	r0, r7
 8005138:	f00c fde7 	bl	8011d0a <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-90, 90);
 800513c:	4638      	mov	r0, r7
 800513e:	225a      	movs	r2, #90	; 0x5a
 8005140:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005144:	f00c fe66 	bl	8011e14 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(-90, 90);
 8005148:	4633      	mov	r3, r6
 800514a:	225a      	movs	r2, #90	; 0x5a
 800514c:	4638      	mov	r0, r7
 800514e:	9600      	str	r6, [sp, #0]
 8005150:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8005154:	f00a f91b 	bl	800f38e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(0);
 8005158:	4631      	mov	r1, r6
 800515a:	4638      	mov	r0, r7
 800515c:	f00c fe04 	bl	8011d68 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 8005160:	2335      	movs	r3, #53	; 0x35
 8005162:	2208      	movs	r2, #8
 8005164:	4638      	mov	r0, r7
 8005166:	2105      	movs	r1, #5
 8005168:	f00c fdba 	bl	8011ce0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 800516c:	4638      	mov	r0, r7
 800516e:	2101      	movs	r1, #1
 8005170:	f00c fd58 	bl	8011c24 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 8005174:	4638      	mov	r0, r7
 8005176:	2101      	movs	r1, #1
 8005178:	f00c fd57 	bl	8011c2a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    add(gauge1);
 800517c:	4620      	mov	r0, r4
 800517e:	4639      	mov	r1, r7
 8005180:	f00a fac6 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005184:	4620      	mov	r0, r4
 8005186:	b00b      	add	sp, #44	; 0x2c
 8005188:	ecbd 8b02 	vpop	{d8}
 800518c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005190:	0802cdac 	.word	0x0802cdac
 8005194:	0802b508 	.word	0x0802b508
 8005198:	00a900f0 	.word	0x00a900f0
 800519c:	0802b4f8 	.word	0x0802b4f8

080051a0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80051a0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80051a2:	4770      	bx	lr

080051a4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80051a4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80051a6:	4770      	bx	lr

080051a8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80051a8:	4770      	bx	lr

080051aa <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80051aa:	888b      	ldrh	r3, [r1, #4]
 80051ac:	69c0      	ldr	r0, [r0, #28]
 80051ae:	680a      	ldr	r2, [r1, #0]
 80051b0:	0adb      	lsrs	r3, r3, #11
 80051b2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80051b6:	4410      	add	r0, r2
 80051b8:	4770      	bx	lr

080051ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80051ba:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80051bc:	b1c2      	cbz	r2, 80051f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80051be:	7b13      	ldrb	r3, [r2, #12]
 80051c0:	b1b3      	cbz	r3, 80051f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80051c2:	7b54      	ldrb	r4, [r2, #13]
 80051c4:	7ad2      	ldrb	r2, [r2, #11]
 80051c6:	0224      	lsls	r4, r4, #8
 80051c8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80051cc:	4314      	orrs	r4, r2
 80051ce:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80051d0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80051d2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80051d6:	8813      	ldrh	r3, [r2, #0]
 80051d8:	428b      	cmp	r3, r1
 80051da:	d102      	bne.n	80051e2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80051dc:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80051e0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80051e2:	d805      	bhi.n	80051f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80051e4:	3801      	subs	r0, #1
 80051e6:	b280      	uxth	r0, r0
 80051e8:	3204      	adds	r2, #4
 80051ea:	2800      	cmp	r0, #0
 80051ec:	d1f3      	bne.n	80051d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80051ee:	e7f7      	b.n	80051e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80051f0:	2000      	movs	r0, #0
 80051f2:	e7f5      	b.n	80051e0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080051f4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80051f4:	b510      	push	{r4, lr}
 80051f6:	212c      	movs	r1, #44	; 0x2c
 80051f8:	4604      	mov	r4, r0
 80051fa:	f023 fd98 	bl	8028d2e <_ZdlPvj>
 80051fe:	4620      	mov	r0, r4
 8005200:	bd10      	pop	{r4, pc}
	...

08005204 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005204:	b530      	push	{r4, r5, lr}
 8005206:	b08b      	sub	sp, #44	; 0x2c
 8005208:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800520a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800520e:	9508      	str	r5, [sp, #32]
 8005210:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005214:	9507      	str	r5, [sp, #28]
 8005216:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800521a:	9506      	str	r5, [sp, #24]
 800521c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005220:	9505      	str	r5, [sp, #20]
 8005222:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005226:	9504      	str	r5, [sp, #16]
 8005228:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800522c:	9503      	str	r5, [sp, #12]
 800522e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005232:	9502      	str	r5, [sp, #8]
 8005234:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005238:	9501      	str	r5, [sp, #4]
 800523a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800523e:	9500      	str	r5, [sp, #0]
 8005240:	f010 fe94 	bl	8015f6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005244:	4b06      	ldr	r3, [pc, #24]	; (8005260 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005246:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8005248:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800524a:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
 800524c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800524e:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
 8005250:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005252:	6263      	str	r3, [r4, #36]	; 0x24
      arabicTable(formsTable)
 8005254:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005256:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005258:	4620      	mov	r0, r4
 800525a:	b00b      	add	sp, #44	; 0x2c
 800525c:	bd30      	pop	{r4, r5, pc}
 800525e:	bf00      	nop
 8005260:	0802ce40 	.word	0x0802ce40

08005264 <_ZN17Main_MenuViewBase11setupScreenEv>:
}

void Main_MenuViewBase::setupScreen()
{

}
 8005264:	4770      	bx	lr

08005266 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005266:	4770      	bx	lr

08005268 <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005268:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800526a:	68c2      	ldr	r2, [r0, #12]
 800526c:	6844      	ldr	r4, [r0, #4]
 800526e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005270:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005272:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005276:	07d2      	lsls	r2, r2, #31
 8005278:	bf48      	it	mi
 800527a:	5962      	ldrmi	r2, [r4, r5]
 800527c:	689b      	ldr	r3, [r3, #8]
    }
 800527e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005280:	bf48      	it	mi
 8005282:	58d3      	ldrmi	r3, [r2, r3]
 8005284:	4718      	bx	r3

08005286 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005286:	6843      	ldr	r3, [r0, #4]
 8005288:	b12b      	cbz	r3, 8005296 <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800528a:	6883      	ldr	r3, [r0, #8]
 800528c:	b92b      	cbnz	r3, 800529a <_ZNK8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800528e:	68c0      	ldr	r0, [r0, #12]
 8005290:	f000 0001 	and.w	r0, r0, #1
 8005294:	4770      	bx	lr
 8005296:	4618      	mov	r0, r3
 8005298:	4770      	bx	lr
 800529a:	2001      	movs	r0, #1
    }
 800529c:	4770      	bx	lr

0800529e <_ZN8touchgfx8CallbackI17Main_MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800529e:	b510      	push	{r4, lr}
 80052a0:	2110      	movs	r1, #16
 80052a2:	4604      	mov	r4, r0
 80052a4:	f023 fd43 	bl	8028d2e <_ZdlPvj>
 80052a8:	4620      	mov	r0, r4
 80052aa:	bd10      	pop	{r4, pc}

080052ac <_ZN17Main_MenuViewBaseD1Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80052ac:	b510      	push	{r4, lr}
 80052ae:	4b03      	ldr	r3, [pc, #12]	; (80052bc <_ZN17Main_MenuViewBaseD1Ev+0x10>)
 80052b0:	6003      	str	r3, [r0, #0]
 80052b2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80052b4:	f00d ffc2 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80052b8:	4620      	mov	r0, r4
 80052ba:	bd10      	pop	{r4, pc}
 80052bc:	0802ceb8 	.word	0x0802ceb8

080052c0 <_ZN17Main_MenuViewBaseD0Ev>:
Main_MenuViewBase::~Main_MenuViewBase()
 80052c0:	b507      	push	{r0, r1, r2, lr}
 80052c2:	4b07      	ldr	r3, [pc, #28]	; (80052e0 <_ZN17Main_MenuViewBaseD0Ev+0x20>)
 80052c4:	6003      	str	r3, [r0, #0]
 80052c6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80052c8:	f00d ffb8 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80052cc:	9801      	ldr	r0, [sp, #4]
 80052ce:	f241 117c 	movw	r1, #4476	; 0x117c
 80052d2:	f023 fd2c 	bl	8028d2e <_ZdlPvj>
 80052d6:	9801      	ldr	r0, [sp, #4]
 80052d8:	b003      	add	sp, #12
 80052da:	f85d fb04 	ldr.w	pc, [sp], #4
 80052de:	bf00      	nop
 80052e0:	0802ceb8 	.word	0x0802ceb8

080052e4 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Main_MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80052e4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel1)
 80052e6:	f500 7334 	add.w	r3, r0, #720	; 0x2d0
 80052ea:	4299      	cmp	r1, r3
{
 80052ec:	4604      	mov	r4, r0
 80052ee:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel1)
 80052f0:	d103      	bne.n	80052fa <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Main_MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80052f2:	f00f fca5 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Measurement
        //Go to Measurement with screen transition towards East
        application().gotoMeasurementScreenWipeTransitionEast();
 80052f6:	f7fe fb0d 	bl	8003914 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 80052fa:	f504 7322 	add.w	r3, r4, #648	; 0x288
 80052fe:	429d      	cmp	r5, r3
 8005300:	d103      	bne.n	800530a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005302:	f00f fc9d 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Calibration
        //Go to Calibration with screen transition towards East
        application().gotoCalibrationScreenWipeTransitionEast();
 8005306:	f7fe fba5 	bl	8003a54 <_ZN23FrontendApplicationBase39gotoCalibrationScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel3)
 800530a:	f504 7310 	add.w	r3, r4, #576	; 0x240
 800530e:	429d      	cmp	r5, r3
 8005310:	d103      	bne.n	800531a <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
 8005312:	f00f fc95 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction3
        //When buttonWithLabel3 clicked change screen to Project_Info
        //Go to Project_Info with screen transition towards East
        application().gotoProject_InfoScreenWipeTransitionEast();
 8005316:	f7fe fbdd 	bl	8003ad4 <_ZN23FrontendApplicationBase40gotoProject_InfoScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithIcon1)
 800531a:	f504 7446 	add.w	r4, r4, #792	; 0x318
 800531e:	42a5      	cmp	r5, r4
 8005320:	d10a      	bne.n	8005338 <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x54>
    {
        //Interaction4
        //When buttonWithIcon1 clicked execute C++ code
        //Execute C++ code
        #ifndef SIMULATOR
        HAL_GPIO_WritePin(GPIOE, GPIO_PIN_5, GPIO_PIN_RESET);
 8005322:	4806      	ldr	r0, [pc, #24]	; (800533c <_ZN17Main_MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x58>)
 8005324:	2200      	movs	r2, #0
 8005326:	2120      	movs	r1, #32
 8005328:	f004 f88a 	bl	8009440 <HAL_GPIO_WritePin>
 800532c:	f00f fc88 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction5
        //When buttonWithIcon1 clicked change screen to Shutting_Off
        //Go to Shutting_Off with no screen transition
        application().gotoShutting_OffScreenNoTransition();
    }
}
 8005330:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoShutting_OffScreenNoTransition();
 8005334:	f7fe bbde 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8005338:	bd38      	pop	{r3, r4, r5, pc}
 800533a:	bf00      	nop
 800533c:	40021000 	.word	0x40021000

08005340 <_ZN17Main_MenuViewBaseC1Ev>:
Main_MenuViewBase::Main_MenuViewBase() :
 8005340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005344:	ed2d 8b06 	vpush	{d8-d10}
 8005348:	4604      	mov	r4, r0
 800534a:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &Main_MenuViewBase::buttonCallbackHandler)
 800534c:	46a3      	mov	fp, r4
        : presenter(0)
 800534e:	2500      	movs	r5, #0
 8005350:	f011 f8f6 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8005354:	4b6a      	ldr	r3, [pc, #424]	; (8005500 <_ZN17Main_MenuViewBaseC1Ev+0x1c0>)
 8005356:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005358:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 800535c:	2226      	movs	r2, #38	; 0x26
 800535e:	4629      	mov	r1, r5
 8005360:	4658      	mov	r0, fp
 8005362:	f024 fcfc 	bl	8029d5e <memset>
 8005366:	4658      	mov	r0, fp
 8005368:	f7fd f9ee 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 800536c:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005370:	26ff      	movs	r6, #255	; 0xff
 8005372:	4b64      	ldr	r3, [pc, #400]	; (8005504 <_ZN17Main_MenuViewBaseC1Ev+0x1c4>)
 8005374:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005376:	2226      	movs	r2, #38	; 0x26
 8005378:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800537c:	4629      	mov	r1, r5
 800537e:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005382:	4650      	mov	r0, sl
        : color(col)
 8005384:	66a5      	str	r5, [r4, #104]	; 0x68
 8005386:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800538a:	f024 fce8 	bl	8029d5e <memset>
 800538e:	4650      	mov	r0, sl
 8005390:	f7fd f9da 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8005394:	4b5c      	ldr	r3, [pc, #368]	; (8005508 <_ZN17Main_MenuViewBaseC1Ev+0x1c8>)
 8005396:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005398:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800539c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80053a0:	a90c      	add	r1, sp, #48	; 0x30
 80053a2:	4650      	mov	r0, sl
 80053a4:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80053a8:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80053ac:	f00c ff3f 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80053b0:	4648      	mov	r0, r9
 80053b2:	f7fd f9db 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80053b6:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80053ba:	4b54      	ldr	r3, [pc, #336]	; (800550c <_ZN17Main_MenuViewBaseC1Ev+0x1cc>)
 80053bc:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80053c0:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80053c4:	4638      	mov	r0, r7
 80053c6:	f00b fdfb 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 80053ca:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80053ce:	4618      	mov	r0, r3
 80053d0:	9303      	str	r3, [sp, #12]
 80053d2:	f7fb fe37 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80053d6:	4b4e      	ldr	r3, [pc, #312]	; (8005510 <_ZN17Main_MenuViewBaseC1Ev+0x1d0>)
 80053d8:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80053dc:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 80053e0:	3324      	adds	r3, #36	; 0x24
 80053e2:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80053e6:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 80053ea:	4640      	mov	r0, r8
 80053ec:	f7fd f9be 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80053f0:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 80053f4:	4618      	mov	r0, r3
 80053f6:	ee08 3a10 	vmov	s16, r3
 80053fa:	f7fd f9b7 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80053fe:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005402:	4618      	mov	r0, r3
 8005404:	ee08 3a90 	vmov	s17, r3
 8005408:	f7fd f9b0 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 800540c:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005410:	4618      	mov	r0, r3
 8005412:	ee09 3a10 	vmov	s18, r3
 8005416:	f00d f84b 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800541a:	f504 7322 	add.w	r3, r4, #648	; 0x288
 800541e:	4618      	mov	r0, r3
 8005420:	ee09 3a90 	vmov	s19, r3
 8005424:	f00d f844 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005428:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 800542c:	4618      	mov	r0, r3
 800542e:	ee0a 3a10 	vmov	s20, r3
 8005432:	f00d f83d 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005436:	f504 7346 	add.w	r3, r4, #792	; 0x318
 800543a:	4618      	mov	r0, r3
 800543c:	ee0a 3a90 	vmov	s21, r3
 8005440:	f00c fece 	bl	80121e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005444:	4a33      	ldr	r2, [pc, #204]	; (8005514 <_ZN17Main_MenuViewBaseC1Ev+0x1d4>)
 8005446:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800544a:	e9c3 245b 	strd	r2, r4, [r3, #364]	; 0x16c
 800544e:	4a32      	ldr	r2, [pc, #200]	; (8005518 <_ZN17Main_MenuViewBaseC1Ev+0x1d8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005450:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005454:	e9c3 255d 	strd	r2, r5, [r3, #372]	; 0x174
 8005458:	f504 7057 	add.w	r0, r4, #860	; 0x35c
 800545c:	f00d fee4 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005460:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005464:	462a      	mov	r2, r5
 8005466:	4658      	mov	r0, fp
 8005468:	9300      	str	r3, [sp, #0]
 800546a:	4629      	mov	r1, r5
 800546c:	23f0      	movs	r3, #240	; 0xf0
 800546e:	f7fd f957 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005472:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005474:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005478:	66a3      	str	r3, [r4, #104]	; 0x68
 800547a:	4659      	mov	r1, fp
 800547c:	4630      	mov	r0, r6
 800547e:	f00a f947 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005482:	462a      	mov	r2, r5
 8005484:	4650      	mov	r0, sl
 8005486:	4629      	mov	r1, r5
 8005488:	f7fd f93d 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800548c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800548e:	4650      	mov	r0, sl
 8005490:	a90c      	add	r1, sp, #48	; 0x30
 8005492:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8005496:	f00c feca 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800549a:	4651      	mov	r1, sl
 800549c:	4630      	mov	r0, r6
 800549e:	f00a f937 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(86, 308);
 80054a2:	f44f 729a 	mov.w	r2, #308	; 0x134
 80054a6:	2156      	movs	r1, #86	; 0x56
 80054a8:	4648      	mov	r0, r9
 80054aa:	f7fd f92c 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80054ae:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 80054b2:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80054b6:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 80054ba:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 80054be:	4650      	mov	r0, sl
 80054c0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80054c4:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80054c8:	4649      	mov	r1, r9
 80054ca:	4798      	blx	r3
 80054cc:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 80054d0:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80054d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80054d8:	4b10      	ldr	r3, [pc, #64]	; (800551c <_ZN17Main_MenuViewBaseC1Ev+0x1dc>)
 80054da:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_UQO1).getText());
 80054dc:	f504 7a55 	add.w	sl, r4, #852	; 0x354
 80054e0:	b92b      	cbnz	r3, 80054ee <_ZN17Main_MenuViewBaseC1Ev+0x1ae>
 80054e2:	4b0f      	ldr	r3, [pc, #60]	; (8005520 <_ZN17Main_MenuViewBaseC1Ev+0x1e0>)
 80054e4:	4a0f      	ldr	r2, [pc, #60]	; (8005524 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80054e6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80054e8:	480f      	ldr	r0, [pc, #60]	; (8005528 <_ZN17Main_MenuViewBaseC1Ev+0x1e8>)
 80054ea:	f024 fa33 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80054ee:	4b0f      	ldr	r3, [pc, #60]	; (800552c <_ZN17Main_MenuViewBaseC1Ev+0x1ec>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80054f0:	881b      	ldrh	r3, [r3, #0]
 80054f2:	2b2a      	cmp	r3, #42	; 0x2a
 80054f4:	d81e      	bhi.n	8005534 <_ZN17Main_MenuViewBaseC1Ev+0x1f4>
 80054f6:	4b0e      	ldr	r3, [pc, #56]	; (8005530 <_ZN17Main_MenuViewBaseC1Ev+0x1f0>)
 80054f8:	4a0a      	ldr	r2, [pc, #40]	; (8005524 <_ZN17Main_MenuViewBaseC1Ev+0x1e4>)
 80054fa:	2161      	movs	r1, #97	; 0x61
 80054fc:	e7f4      	b.n	80054e8 <_ZN17Main_MenuViewBaseC1Ev+0x1a8>
 80054fe:	bf00      	nop
 8005500:	0802ceb8 	.word	0x0802ceb8
 8005504:	0802de70 	.word	0x0802de70
 8005508:	0802e038 	.word	0x0802e038
 800550c:	0802b508 	.word	0x0802b508
 8005510:	0802dba4 	.word	0x0802dba4
 8005514:	0802cea0 	.word	0x0802cea0
 8005518:	080052e5 	.word	0x080052e5
 800551c:	20012e0c 	.word	0x20012e0c
 8005520:	0802b348 	.word	0x0802b348
 8005524:	0802b44a 	.word	0x0802b44a
 8005528:	0802b3c5 	.word	0x0802b3c5
 800552c:	20012e10 	.word	0x20012e10
 8005530:	0802b40c 	.word	0x0802b40c
        return texts->getText(typedTextId);
 8005534:	4ba5      	ldr	r3, [pc, #660]	; (80057cc <_ZN17Main_MenuViewBaseC1Ev+0x48c>)
 8005536:	212a      	movs	r1, #42	; 0x2a
 8005538:	6818      	ldr	r0, [r3, #0]
 800553a:	f002 fdf9 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 800553e:	4aa4      	ldr	r2, [pc, #656]	; (80057d0 <_ZN17Main_MenuViewBaseC1Ev+0x490>)
 8005540:	4603      	mov	r3, r0
 8005542:	2104      	movs	r1, #4
 8005544:	4650      	mov	r0, sl
 8005546:	f012 fceb 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3.resizeToCurrentText();
 800554a:	4648      	mov	r0, r9
        wc1 = value;
 800554c:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005550:	f00c fa72 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005554:	4b9f      	ldr	r3, [pc, #636]	; (80057d4 <_ZN17Main_MenuViewBaseC1Ev+0x494>)
 8005556:	930c      	str	r3, [sp, #48]	; 0x30
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2SIJ));
 8005558:	a90c      	add	r1, sp, #48	; 0x30
 800555a:	232b      	movs	r3, #43	; 0x2b
 800555c:	4648      	mov	r0, r9
 800555e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005562:	f00c fa89 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005566:	4649      	mov	r1, r9
 8005568:	4630      	mov	r0, r6
 800556a:	f00a f8d1 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 800556e:	230a      	movs	r3, #10
 8005570:	9300      	str	r3, [sp, #0]
 8005572:	2232      	movs	r2, #50	; 0x32
 8005574:	23f0      	movs	r3, #240	; 0xf0
 8005576:	4629      	mov	r1, r5
 8005578:	4638      	mov	r0, r7
 800557a:	f7fd f8d1 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 800557e:	9b03      	ldr	r3, [sp, #12]
 8005580:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005584:	22a0      	movs	r2, #160	; 0xa0
 8005586:	4611      	mov	r1, r2
 8005588:	4638      	mov	r0, r7
 800558a:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 800558e:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005592:	f00b fe2b 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005596:	22a0      	movs	r2, #160	; 0xa0
 8005598:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 800559c:	4638      	mov	r0, r7
 800559e:	f00b fe30 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 80055a2:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 80055a6:	2b20      	cmp	r3, #32
 80055a8:	d005      	beq.n	80055b6 <_ZN17Main_MenuViewBaseC1Ev+0x276>
        lineWidthQ5 = widthQ5;
 80055aa:	2320      	movs	r3, #32
 80055ac:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 80055b0:	4638      	mov	r0, r7
 80055b2:	f00b fd25 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 80055b6:	4638      	mov	r0, r7
 80055b8:	2101      	movs	r1, #1
 80055ba:	f00b fe2d 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80055be:	4639      	mov	r1, r7
 80055c0:	4630      	mov	r0, r6
 80055c2:	ad04      	add	r5, sp, #16
        color = newColor;
 80055c4:	f04f 37ff 	mov.w	r7, #4294967295
 80055c8:	f00a f8a2 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80055cc:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 80055d0:	2223      	movs	r2, #35	; 0x23
 80055d2:	4640      	mov	r0, r8
 80055d4:	2145      	movs	r1, #69	; 0x45
 80055d6:	f7fd f896 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80055da:	4641      	mov	r1, r8
 80055dc:	4628      	mov	r0, r5
        color = newColor;
 80055de:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 80055e2:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80055e6:	f00b ffad 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80055ea:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6D7Z));
 80055ee:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 80055f2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80055f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80055fa:	f8df b1d8 	ldr.w	fp, [pc, #472]	; 80057d4 <_ZN17Main_MenuViewBaseC1Ev+0x494>
 80055fe:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005602:	2350      	movs	r3, #80	; 0x50
 8005604:	4649      	mov	r1, r9
 8005606:	4640      	mov	r0, r8
 8005608:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800560c:	f00c fa34 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005610:	4641      	mov	r1, r8
 8005612:	4630      	mov	r0, r6
 8005614:	f00a f87c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005618:	ee18 0a10 	vmov	r0, s16
 800561c:	220c      	movs	r2, #12
 800561e:	2136      	movs	r1, #54	; 0x36
 8005620:	f7fd f871 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005624:	ee18 1a10 	vmov	r1, s16
 8005628:	4628      	mov	r0, r5
        color = newColor;
 800562a:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 800562e:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005632:	f00b ff87 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005636:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800563a:	ee18 3a10 	vmov	r3, s16
 800563e:	333c      	adds	r3, #60	; 0x3c
 8005640:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005644:	2351      	movs	r3, #81	; 0x51
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9K1W));
 8005646:	ee18 0a10 	vmov	r0, s16
 800564a:	4649      	mov	r1, r9
 800564c:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8005650:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005654:	f00c fa10 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005658:	ee18 1a10 	vmov	r1, s16
 800565c:	4630      	mov	r0, r6
 800565e:	f00a f857 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(88, 60);
 8005662:	ee18 0a90 	vmov	r0, s17
 8005666:	223c      	movs	r2, #60	; 0x3c
 8005668:	2158      	movs	r1, #88	; 0x58
 800566a:	f7fd f84c 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800566e:	ee18 1a90 	vmov	r1, s17
 8005672:	4628      	mov	r0, r5
        color = newColor;
 8005674:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8005678:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 800567c:	f00b ff62 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005680:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8005684:	ee18 3a90 	vmov	r3, s17
 8005688:	333c      	adds	r3, #60	; 0x3c
 800568a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800568e:	231a      	movs	r3, #26
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_L4HV));
 8005690:	ee18 0a90 	vmov	r0, s17
 8005694:	4649      	mov	r1, r9
 8005696:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800569a:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 800569e:	f00c f9eb 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80056a2:	ee18 1a90 	vmov	r1, s17
 80056a6:	4630      	mov	r0, r6
 80056a8:	f00a f832 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80056ac:	ee19 0a10 	vmov	r0, s18
 80056b0:	22f0      	movs	r2, #240	; 0xf0
 80056b2:	2121      	movs	r1, #33	; 0x21
 80056b4:	f7fd f827 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80056b8:	f04f 0b03 	mov.w	fp, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80056bc:	464a      	mov	r2, r9
 80056be:	f04f 0802 	mov.w	r8, #2
 80056c2:	a90b      	add	r1, sp, #44	; 0x2c
 80056c4:	ee19 0a10 	vmov	r0, s18
 80056c8:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 80056cc:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
    buttonWithLabel3.setAction(buttonCallback);
 80056d0:	f504 558b 	add.w	r5, r4, #4448	; 0x1160
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80056d4:	f00c fbb5 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80056d8:	2352      	movs	r3, #82	; 0x52
 80056da:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 80056de:	350c      	adds	r5, #12
        updateTextPosition();
 80056e0:	ee19 0a10 	vmov	r0, s18
 80056e4:	f7fd f864 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80056e8:	ee19 1a10 	vmov	r1, s18
 80056ec:	4630      	mov	r0, r6
        colorPressed = col;
 80056ee:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 80056f2:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 80056f6:	f00a f80b 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 80056fa:	ee19 0a90 	vmov	r0, s19
 80056fe:	22aa      	movs	r2, #170	; 0xaa
 8005700:	2121      	movs	r1, #33	; 0x21
 8005702:	f7fd f800 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005706:	464a      	mov	r2, r9
 8005708:	a90b      	add	r1, sp, #44	; 0x2c
 800570a:	ee19 0a90 	vmov	r0, s19
 800570e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005712:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005716:	f00c fb94 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800571a:	2353      	movs	r3, #83	; 0x53
 800571c:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005720:	ee19 0a90 	vmov	r0, s19
 8005724:	f7fd f844 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005728:	ee19 1a90 	vmov	r1, s19
 800572c:	4630      	mov	r0, r6
        colorPressed = col;
 800572e:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8005732:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 8005736:	f009 ffeb 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 800573a:	ee1a 0a10 	vmov	r0, s20
 800573e:	2264      	movs	r2, #100	; 0x64
 8005740:	2121      	movs	r1, #33	; 0x21
 8005742:	f7fc ffe0 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005746:	464a      	mov	r2, r9
 8005748:	a90b      	add	r1, sp, #44	; 0x2c
 800574a:	ee1a 0a10 	vmov	r0, s20
 800574e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8005752:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 8005756:	f00c fb74 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800575a:	2354      	movs	r3, #84	; 0x54
 800575c:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
        updateTextPosition();
 8005760:	ee1a 0a10 	vmov	r0, s20
 8005764:	f7fd f824 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005768:	ee1a 1a10 	vmov	r1, s20
 800576c:	4630      	mov	r0, r6
        colorPressed = col;
 800576e:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 8005772:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 8005776:	f009 ffcb 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithIcon1.setXY(198, 5);
 800577a:	ee1a 0a90 	vmov	r0, s21
 800577e:	2205      	movs	r2, #5
 8005780:	21c6      	movs	r1, #198	; 0xc6
 8005782:	f7fc ffc0 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005786:	2301      	movs	r3, #1
 8005788:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800578c:	230a      	movs	r3, #10
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_OUTLINE_PRESSED_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID), touchgfx::Bitmap(BITMAP_POWER_OFF_36X36_ID));
 800578e:	ee1a 0a90 	vmov	r0, s21
 8005792:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005796:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800579a:	aa0a      	add	r2, sp, #40	; 0x28
 800579c:	ab0b      	add	r3, sp, #44	; 0x2c
 800579e:	a909      	add	r1, sp, #36	; 0x24
 80057a0:	f8cd 9000 	str.w	r9, [sp]
 80057a4:	f8ad a024 	strh.w	sl, [sp, #36]	; 0x24
 80057a8:	f00c fc85 	bl	80120b6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80057ac:	4630      	mov	r0, r6
 80057ae:	ee1a 1a90 	vmov	r1, s21
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
    {
        iconX = x;
 80057b2:	f8c4 a350 	str.w	sl, [r4, #848]	; 0x350
 80057b6:	f8c4 5340 	str.w	r5, [r4, #832]	; 0x340
 80057ba:	f009 ffa9 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80057be:	4620      	mov	r0, r4
 80057c0:	b00f      	add	sp, #60	; 0x3c
 80057c2:	ecbd 8b06 	vpop	{d8-d10}
 80057c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80057ca:	bf00      	nop
 80057cc:	20012e18 	.word	0x20012e18
 80057d0:	0802b482 	.word	0x0802b482
 80057d4:	0802b4f8 	.word	0x0802b4f8

080057d8 <_ZN19MeasurementViewBase11setupScreenEv>:
}

void MeasurementViewBase::setupScreen()
{

}
 80057d8:	4770      	bx	lr

080057da <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80057da:	4770      	bx	lr

080057dc <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80057dc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80057de:	68c2      	ldr	r2, [r0, #12]
 80057e0:	6844      	ldr	r4, [r0, #4]
 80057e2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80057e4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80057e6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80057ea:	07d2      	lsls	r2, r2, #31
 80057ec:	bf48      	it	mi
 80057ee:	5962      	ldrmi	r2, [r4, r5]
 80057f0:	689b      	ldr	r3, [r3, #8]
    }
 80057f2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80057f4:	bf48      	it	mi
 80057f6:	58d3      	ldrmi	r3, [r2, r3]
 80057f8:	4718      	bx	r3

080057fa <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80057fa:	6843      	ldr	r3, [r0, #4]
 80057fc:	b12b      	cbz	r3, 800580a <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80057fe:	6883      	ldr	r3, [r0, #8]
 8005800:	b92b      	cbnz	r3, 800580e <_ZNK8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005802:	68c0      	ldr	r0, [r0, #12]
 8005804:	f000 0001 	and.w	r0, r0, #1
 8005808:	4770      	bx	lr
 800580a:	4618      	mov	r0, r3
 800580c:	4770      	bx	lr
 800580e:	2001      	movs	r0, #1
    }
 8005810:	4770      	bx	lr

08005812 <_ZN8touchgfx8CallbackI19MeasurementViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005812:	b510      	push	{r4, lr}
 8005814:	2110      	movs	r1, #16
 8005816:	4604      	mov	r4, r0
 8005818:	f023 fa89 	bl	8028d2e <_ZdlPvj>
 800581c:	4620      	mov	r0, r4
 800581e:	bd10      	pop	{r4, pc}

08005820 <_ZN19MeasurementViewBaseD1Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005820:	b510      	push	{r4, lr}
 8005822:	4b03      	ldr	r3, [pc, #12]	; (8005830 <_ZN19MeasurementViewBaseD1Ev+0x10>)
 8005824:	6003      	str	r3, [r0, #0]
 8005826:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005828:	f00d fd08 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800582c:	4620      	mov	r0, r4
 800582e:	bd10      	pop	{r4, pc}
 8005830:	0802cf04 	.word	0x0802cf04

08005834 <_ZN19MeasurementViewBaseD0Ev>:
MeasurementViewBase::~MeasurementViewBase()
 8005834:	b507      	push	{r0, r1, r2, lr}
 8005836:	4b07      	ldr	r3, [pc, #28]	; (8005854 <_ZN19MeasurementViewBaseD0Ev+0x20>)
 8005838:	6003      	str	r3, [r0, #0]
 800583a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800583c:	f00d fcfe 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005840:	9801      	ldr	r0, [sp, #4]
 8005842:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005846:	f023 fa72 	bl	8028d2e <_ZdlPvj>
 800584a:	9801      	ldr	r0, [sp, #4]
 800584c:	b003      	add	sp, #12
 800584e:	f85d fb04 	ldr.w	pc, [sp], #4
 8005852:	bf00      	nop
 8005854:	0802cf04 	.word	0x0802cf04

08005858 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MeasurementViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005858:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800585a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800585e:	4299      	cmp	r1, r3
{
 8005860:	4604      	mov	r4, r0
 8005862:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005864:	d103      	bne.n	800586e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MeasurementViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005866:	f00f f9eb 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
 800586a:	f7fe f843 	bl	80038f4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800586e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005872:	429d      	cmp	r5, r3
 8005874:	d103      	bne.n	800587e <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005876:	f00f f9e3 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 800587a:	f7fe f86b 	bl	8003954 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800587e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8005882:	42a5      	cmp	r5, r4
 8005884:	d105      	bne.n	8005892 <_ZN19MeasurementViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005886:	f00f f9db 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards East
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
    }
}
 800588a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionEast();
 800588e:	f7fe b8a1 	b.w	80039d4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionEastEv>
}
 8005892:	bd38      	pop	{r3, r4, r5, pc}

08005894 <_ZN19MeasurementViewBaseC1Ev>:
MeasurementViewBase::MeasurementViewBase() :
 8005894:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005898:	ed2d 8b06 	vpush	{d8-d10}
 800589c:	4604      	mov	r4, r0
 800589e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &MeasurementViewBase::buttonCallbackHandler)
 80058a0:	46a3      	mov	fp, r4
 80058a2:	2500      	movs	r5, #0
 80058a4:	f010 fe4c 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 80058a8:	4b66      	ldr	r3, [pc, #408]	; (8005a44 <_ZN19MeasurementViewBaseC1Ev+0x1b0>)
 80058aa:	63e5      	str	r5, [r4, #60]	; 0x3c
 80058ac:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80058b0:	2226      	movs	r2, #38	; 0x26
 80058b2:	4629      	mov	r1, r5
 80058b4:	4658      	mov	r0, fp
 80058b6:	f024 fa52 	bl	8029d5e <memset>
 80058ba:	4658      	mov	r0, fp
 80058bc:	f7fc ff44 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80058c0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80058c4:	26ff      	movs	r6, #255	; 0xff
 80058c6:	4b60      	ldr	r3, [pc, #384]	; (8005a48 <_ZN19MeasurementViewBaseC1Ev+0x1b4>)
 80058c8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80058ca:	2226      	movs	r2, #38	; 0x26
 80058cc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80058d0:	4629      	mov	r1, r5
 80058d2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80058d6:	4650      	mov	r0, sl
 80058d8:	66a5      	str	r5, [r4, #104]	; 0x68
 80058da:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80058de:	f024 fa3e 	bl	8029d5e <memset>
 80058e2:	4650      	mov	r0, sl
 80058e4:	f7fc ff30 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80058e8:	4b58      	ldr	r3, [pc, #352]	; (8005a4c <_ZN19MeasurementViewBaseC1Ev+0x1b8>)
 80058ea:	66e3      	str	r3, [r4, #108]	; 0x6c
 80058ec:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80058f0:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80058f4:	a90a      	add	r1, sp, #40	; 0x28
 80058f6:	4650      	mov	r0, sl
 80058f8:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80058fc:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005900:	f00c fc95 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005904:	4648      	mov	r0, r9
 8005906:	f7fc ff31 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 800590a:	4b51      	ldr	r3, [pc, #324]	; (8005a50 <_ZN19MeasurementViewBaseC1Ev+0x1bc>)
 800590c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005910:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8005914:	4618      	mov	r0, r3
 8005916:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 800591a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 800591e:	ee08 3a90 	vmov	s17, r3
 8005922:	f7fc ff23 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005926:	4638      	mov	r0, r7
 8005928:	f00b fb4a 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 800592c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005930:	4618      	mov	r0, r3
 8005932:	9303      	str	r3, [sp, #12]
 8005934:	f7fb fb86 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005938:	4b46      	ldr	r3, [pc, #280]	; (8005a54 <_ZN19MeasurementViewBaseC1Ev+0x1c0>)
 800593a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 800593e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8005942:	3324      	adds	r3, #36	; 0x24
 8005944:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8005948:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 800594c:	4640      	mov	r0, r8
 800594e:	f7fc ff0d 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005952:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005956:	4618      	mov	r0, r3
 8005958:	ee08 3a10 	vmov	s16, r3
 800595c:	f7fc ff06 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005960:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005964:	4618      	mov	r0, r3
 8005966:	ee09 3a10 	vmov	s18, r3
 800596a:	f00c fda1 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800596e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005972:	4618      	mov	r0, r3
 8005974:	ee09 3a90 	vmov	s19, r3
 8005978:	f00c fd9a 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800597c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005980:	4618      	mov	r0, r3
 8005982:	ee0a 3a10 	vmov	s20, r3
 8005986:	f00c fd93 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800598a:	4a33      	ldr	r2, [pc, #204]	; (8005a58 <_ZN19MeasurementViewBaseC1Ev+0x1c4>)
 800598c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005990:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005994:	4a31      	ldr	r2, [pc, #196]	; (8005a5c <_ZN19MeasurementViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005996:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800599a:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 800599e:	f504 7048 	add.w	r0, r4, #800	; 0x320
 80059a2:	f00d fc41 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80059a6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80059aa:	462a      	mov	r2, r5
 80059ac:	4658      	mov	r0, fp
 80059ae:	9300      	str	r3, [sp, #0]
 80059b0:	4629      	mov	r1, r5
 80059b2:	23f0      	movs	r3, #240	; 0xf0
 80059b4:	f7fc feb4 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 80059b8:	1d26      	adds	r6, r4, #4
        color = newColor;
 80059ba:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80059be:	66a3      	str	r3, [r4, #104]	; 0x68
 80059c0:	4659      	mov	r1, fp
 80059c2:	4630      	mov	r0, r6
 80059c4:	f009 fea4 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80059c8:	462a      	mov	r2, r5
 80059ca:	4650      	mov	r0, sl
 80059cc:	4629      	mov	r1, r5
 80059ce:	f7fc fe9a 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80059d2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80059d4:	4650      	mov	r0, sl
 80059d6:	a90a      	add	r1, sp, #40	; 0x28
 80059d8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80059dc:	f00c fc27 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80059e0:	4651      	mov	r1, sl
 80059e2:	4630      	mov	r0, r6
 80059e4:	f009 fe94 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 80059e8:	f44f 729a 	mov.w	r2, #308	; 0x134
 80059ec:	2156      	movs	r1, #86	; 0x56
 80059ee:	4648      	mov	r0, r9
 80059f0:	f7fc fe89 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80059f4:	f04f 33ff 	mov.w	r3, #4294967295
 80059f8:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80059fc:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005a00:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005a04:	f10d 0b10 	add.w	fp, sp, #16
 8005a08:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005a0c:	4649      	mov	r1, r9
 8005a0e:	4658      	mov	r0, fp
 8005a10:	4798      	blx	r3
 8005a12:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005a16:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005a1a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a1e:	4b10      	ldr	r3, [pc, #64]	; (8005a60 <_ZN19MeasurementViewBaseC1Ev+0x1cc>)
 8005a20:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0CQH).getText());
 8005a22:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005a26:	b92b      	cbnz	r3, 8005a34 <_ZN19MeasurementViewBaseC1Ev+0x1a0>
 8005a28:	4b0e      	ldr	r3, [pc, #56]	; (8005a64 <_ZN19MeasurementViewBaseC1Ev+0x1d0>)
 8005a2a:	4a0f      	ldr	r2, [pc, #60]	; (8005a68 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005a2c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a2e:	480f      	ldr	r0, [pc, #60]	; (8005a6c <_ZN19MeasurementViewBaseC1Ev+0x1d8>)
 8005a30:	f023 ff90 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005a34:	4b0e      	ldr	r3, [pc, #56]	; (8005a70 <_ZN19MeasurementViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a36:	881b      	ldrh	r3, [r3, #0]
 8005a38:	2b1b      	cmp	r3, #27
 8005a3a:	d81d      	bhi.n	8005a78 <_ZN19MeasurementViewBaseC1Ev+0x1e4>
 8005a3c:	4b0d      	ldr	r3, [pc, #52]	; (8005a74 <_ZN19MeasurementViewBaseC1Ev+0x1e0>)
 8005a3e:	4a0a      	ldr	r2, [pc, #40]	; (8005a68 <_ZN19MeasurementViewBaseC1Ev+0x1d4>)
 8005a40:	2161      	movs	r1, #97	; 0x61
 8005a42:	e7f4      	b.n	8005a2e <_ZN19MeasurementViewBaseC1Ev+0x19a>
 8005a44:	0802cf04 	.word	0x0802cf04
 8005a48:	0802de70 	.word	0x0802de70
 8005a4c:	0802e038 	.word	0x0802e038
 8005a50:	0802b508 	.word	0x0802b508
 8005a54:	0802dba4 	.word	0x0802dba4
 8005a58:	0802ceec 	.word	0x0802ceec
 8005a5c:	08005859 	.word	0x08005859
 8005a60:	20012e0c 	.word	0x20012e0c
 8005a64:	0802b348 	.word	0x0802b348
 8005a68:	0802b44a 	.word	0x0802b44a
 8005a6c:	0802b3c5 	.word	0x0802b3c5
 8005a70:	20012e10 	.word	0x20012e10
 8005a74:	0802b40c 	.word	0x0802b40c
        return texts->getText(typedTextId);
 8005a78:	4b95      	ldr	r3, [pc, #596]	; (8005cd0 <_ZN19MeasurementViewBaseC1Ev+0x43c>)
 8005a7a:	211b      	movs	r1, #27
 8005a7c:	6818      	ldr	r0, [r3, #0]
 8005a7e:	f002 fb57 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8005a82:	4a94      	ldr	r2, [pc, #592]	; (8005cd4 <_ZN19MeasurementViewBaseC1Ev+0x440>)
 8005a84:	4603      	mov	r3, r0
 8005a86:	2104      	movs	r1, #4
 8005a88:	4650      	mov	r0, sl
 8005a8a:	f012 fa49 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8005a8e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8005a92:	4648      	mov	r0, r9
 8005a94:	f00b ffd0 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005a98:	f8df a23c 	ldr.w	sl, [pc, #572]	; 8005cd8 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005a9c:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005aa0:	231c      	movs	r3, #28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TOET));
 8005aa2:	a90a      	add	r1, sp, #40	; 0x28
 8005aa4:	4648      	mov	r0, r9
 8005aa6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005aaa:	f00b ffe5 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005aae:	4649      	mov	r1, r9
 8005ab0:	4630      	mov	r0, r6
 8005ab2:	f009 fe2d 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(61, 60);
 8005ab6:	223c      	movs	r2, #60	; 0x3c
 8005ab8:	ee18 0a90 	vmov	r0, s17
 8005abc:	213d      	movs	r1, #61	; 0x3d
 8005abe:	f7fc fe22 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005ac2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8005ac6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8005aca:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8005ace:	4658      	mov	r0, fp
        linespace = space;
 8005ad0:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8005ad4:	f00b fd36 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005ad8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8005adc:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8005ae0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005ae4:	2329      	movs	r3, #41	; 0x29
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q8CP));
 8005ae6:	ee18 0a90 	vmov	r0, s17
 8005aea:	a90a      	add	r1, sp, #40	; 0x28
 8005aec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005af0:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8005af4:	f00b ffc0 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005af8:	ee18 1a90 	vmov	r1, s17
 8005afc:	4630      	mov	r0, r6
 8005afe:	f009 fe07 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005b02:	230a      	movs	r3, #10
 8005b04:	9300      	str	r3, [sp, #0]
 8005b06:	2232      	movs	r2, #50	; 0x32
 8005b08:	23f0      	movs	r3, #240	; 0xf0
 8005b0a:	4629      	mov	r1, r5
 8005b0c:	4638      	mov	r0, r7
 8005b0e:	f7fc fe07 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005b12:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b16:	22a0      	movs	r2, #160	; 0xa0
 8005b18:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005b1c:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8005b20:	9b03      	ldr	r3, [sp, #12]
 8005b22:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005b26:	4611      	mov	r1, r2
 8005b28:	4638      	mov	r0, r7
 8005b2a:	f00b fb5f 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005b2e:	22a0      	movs	r2, #160	; 0xa0
 8005b30:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005b34:	4638      	mov	r0, r7
 8005b36:	f00b fb64 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005b3a:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8005b3e:	2b20      	cmp	r3, #32
 8005b40:	d005      	beq.n	8005b4e <_ZN19MeasurementViewBaseC1Ev+0x2ba>
        lineWidthQ5 = widthQ5;
 8005b42:	2320      	movs	r3, #32
 8005b44:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8005b48:	4638      	mov	r0, r7
 8005b4a:	f00b fa59 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005b4e:	4638      	mov	r0, r7
 8005b50:	2101      	movs	r1, #1
 8005b52:	f00b fb61 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005b56:	4639      	mov	r1, r7
 8005b58:	4630      	mov	r0, r6
 8005b5a:	f009 fdd9 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005b5e:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8005b62:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8005b64:	2223      	movs	r2, #35	; 0x23
 8005b66:	4640      	mov	r0, r8
        linespace = space;
 8005b68:	f04f 0a00 	mov.w	sl, #0
 8005b6c:	2145      	movs	r1, #69	; 0x45
 8005b6e:	f7fc fdca 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005b72:	4641      	mov	r1, r8
 8005b74:	4638      	mov	r0, r7
        color = newColor;
 8005b76:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8005b7a:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8005b7e:	f00b fce1 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005b82:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005b86:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8005b8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005b8e:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8005cd8 <_ZN19MeasurementViewBaseC1Ev+0x444>
 8005b92:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005b96:	234e      	movs	r3, #78	; 0x4e
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_V2L5));
 8005b98:	a90a      	add	r1, sp, #40	; 0x28
 8005b9a:	4640      	mov	r0, r8
 8005b9c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005ba0:	f00b ff6a 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005ba4:	4641      	mov	r1, r8
 8005ba6:	4630      	mov	r0, r6
 8005ba8:	f009 fdb2 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8005bac:	ee18 0a10 	vmov	r0, s16
 8005bb0:	220c      	movs	r2, #12
 8005bb2:	2136      	movs	r1, #54	; 0x36
 8005bb4:	f7fc fda7 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005bb8:	ee18 1a10 	vmov	r1, s16
 8005bbc:	4638      	mov	r0, r7
        color = newColor;
 8005bbe:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8005bc2:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8005bc6:	f00b fcbd 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bca:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005bce:	ee18 3a10 	vmov	r3, s16
 8005bd2:	333c      	adds	r3, #60	; 0x3c
 8005bd4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005bd8:	234f      	movs	r3, #79	; 0x4f
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FIV6));
 8005bda:	ee18 0a10 	vmov	r0, s16
 8005bde:	a90a      	add	r1, sp, #40	; 0x28
 8005be0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005be4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8005be8:	f00b ff46 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005bec:	ee18 1a10 	vmov	r1, s16
 8005bf0:	4630      	mov	r0, r6
 8005bf2:	f009 fd8d 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8005bf6:	ee19 0a10 	vmov	r0, s18
 8005bfa:	22f0      	movs	r2, #240	; 0xf0
 8005bfc:	2121      	movs	r1, #33	; 0x21
 8005bfe:	f7fc fd82 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005c02:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c06:	aa0a      	add	r2, sp, #40	; 0x28
 8005c08:	f04f 0802 	mov.w	r8, #2
 8005c0c:	a909      	add	r1, sp, #36	; 0x24
 8005c0e:	ee19 0a10 	vmov	r0, s18
 8005c12:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c16:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8005c1a:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c1e:	f00c f910 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8005c22:	234d      	movs	r3, #77	; 0x4d
 8005c24:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8005c28:	3710      	adds	r7, #16
        updateTextPosition();
 8005c2a:	ee19 0a10 	vmov	r0, s18
 8005c2e:	f7fc fdbf 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c32:	ee19 1a10 	vmov	r1, s18
 8005c36:	4630      	mov	r0, r6
        colorPressed = col;
 8005c38:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8005c3c:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8005c40:	f009 fd66 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8005c44:	ee19 0a90 	vmov	r0, s19
 8005c48:	22aa      	movs	r2, #170	; 0xaa
 8005c4a:	2121      	movs	r1, #33	; 0x21
 8005c4c:	f7fc fd5b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c50:	aa0a      	add	r2, sp, #40	; 0x28
 8005c52:	a909      	add	r1, sp, #36	; 0x24
 8005c54:	ee19 0a90 	vmov	r0, s19
 8005c58:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c5c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005c60:	f00c f8ef 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005c64:	234c      	movs	r3, #76	; 0x4c
 8005c66:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8005c6a:	ee19 0a90 	vmov	r0, s19
 8005c6e:	f7fc fd9f 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005c72:	ee19 1a90 	vmov	r1, s19
 8005c76:	4630      	mov	r0, r6
        colorPressed = col;
 8005c78:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8005c7c:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8005c80:	f009 fd46 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8005c84:	ee1a 0a10 	vmov	r0, s20
 8005c88:	2264      	movs	r2, #100	; 0x64
 8005c8a:	2121      	movs	r1, #33	; 0x21
 8005c8c:	f7fc fd3b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8005c90:	aa0a      	add	r2, sp, #40	; 0x28
 8005c92:	a909      	add	r1, sp, #36	; 0x24
 8005c94:	ee1a 0a10 	vmov	r0, s20
 8005c98:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005c9c:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8005ca0:	f00c f8cf 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005ca4:	234b      	movs	r3, #75	; 0x4b
        updateTextPosition();
 8005ca6:	ee1a 0a10 	vmov	r0, s20
 8005caa:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8005cae:	f7fc fd7f 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8005cb2:	4630      	mov	r0, r6
        colorPressed = col;
 8005cb4:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8005cb8:	ee1a 1a10 	vmov	r1, s20
 8005cbc:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8005cc0:	f009 fd26 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8005cc4:	4620      	mov	r0, r4
 8005cc6:	b00d      	add	sp, #52	; 0x34
 8005cc8:	ecbd 8b06 	vpop	{d8-d10}
 8005ccc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cd0:	20012e18 	.word	0x20012e18
 8005cd4:	0802b482 	.word	0x0802b482
 8005cd8:	0802b4f8 	.word	0x0802b4f8

08005cdc <_ZN28Measurement_AccurateViewBase11setupScreenEv>:
}

void Measurement_AccurateViewBase::setupScreen()
{

}
 8005cdc:	4770      	bx	lr

08005cde <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005cde:	4770      	bx	lr

08005ce0 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005ce0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005ce2:	68c2      	ldr	r2, [r0, #12]
 8005ce4:	6844      	ldr	r4, [r0, #4]
 8005ce6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005ce8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005cea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005cee:	07d2      	lsls	r2, r2, #31
 8005cf0:	bf48      	it	mi
 8005cf2:	5962      	ldrmi	r2, [r4, r5]
 8005cf4:	689b      	ldr	r3, [r3, #8]
    }
 8005cf6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005cf8:	bf48      	it	mi
 8005cfa:	58d3      	ldrmi	r3, [r2, r3]
 8005cfc:	4718      	bx	r3

08005cfe <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005cfe:	6843      	ldr	r3, [r0, #4]
 8005d00:	b12b      	cbz	r3, 8005d0e <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8005d02:	6883      	ldr	r3, [r0, #8]
 8005d04:	b92b      	cbnz	r3, 8005d12 <_ZNK8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8005d06:	68c0      	ldr	r0, [r0, #12]
 8005d08:	f000 0001 	and.w	r0, r0, #1
 8005d0c:	4770      	bx	lr
 8005d0e:	4618      	mov	r0, r3
 8005d10:	4770      	bx	lr
 8005d12:	2001      	movs	r0, #1
    }
 8005d14:	4770      	bx	lr

08005d16 <_ZN8touchgfx8CallbackI28Measurement_AccurateViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005d16:	b510      	push	{r4, lr}
 8005d18:	2110      	movs	r1, #16
 8005d1a:	4604      	mov	r4, r0
 8005d1c:	f023 f807 	bl	8028d2e <_ZdlPvj>
 8005d20:	4620      	mov	r0, r4
 8005d22:	bd10      	pop	{r4, pc}

08005d24 <_ZN28Measurement_AccurateViewBaseD1Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005d24:	b510      	push	{r4, lr}
 8005d26:	4b03      	ldr	r3, [pc, #12]	; (8005d34 <_ZN28Measurement_AccurateViewBaseD1Ev+0x10>)
 8005d28:	6003      	str	r3, [r0, #0]
 8005d2a:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d2c:	f00d fa86 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d30:	4620      	mov	r0, r4
 8005d32:	bd10      	pop	{r4, pc}
 8005d34:	0802cf50 	.word	0x0802cf50

08005d38 <_ZN28Measurement_AccurateViewBaseD0Ev>:
Measurement_AccurateViewBase::~Measurement_AccurateViewBase()
 8005d38:	b507      	push	{r0, r1, r2, lr}
 8005d3a:	4b07      	ldr	r3, [pc, #28]	; (8005d58 <_ZN28Measurement_AccurateViewBaseD0Ev+0x20>)
 8005d3c:	6003      	str	r3, [r0, #0]
 8005d3e:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005d40:	f00d fa7c 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005d44:	9801      	ldr	r0, [sp, #4]
 8005d46:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8005d4a:	f022 fff0 	bl	8028d2e <_ZdlPvj>
 8005d4e:	9801      	ldr	r0, [sp, #4]
 8005d50:	b003      	add	sp, #12
 8005d52:	f85d fb04 	ldr.w	pc, [sp], #4
 8005d56:	bf00      	nop
 8005d58:	0802cf50 	.word	0x0802cf50

08005d5c <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_AccurateViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005d5c:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 8005d5e:	f500 7310 	add.w	r3, r0, #576	; 0x240
 8005d62:	4299      	cmp	r1, r3
{
 8005d64:	4604      	mov	r4, r0
 8005d66:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8005d68:	d103      	bne.n	8005d72 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_AccurateViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005d6a:	f00e ff69 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 8005d6e:	f7fd fde1 	bl	8003934 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel2)
 8005d72:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005d76:	429d      	cmp	r5, r3
 8005d78:	d103      	bne.n	8005d82 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8005d7a:	f00e ff61 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel2 clicked change screen to Measurement_Accurate_Display_2
        //Go to Measurement_Accurate_Display_2 with screen transition towards East
        application().gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEast();
 8005d7e:	f7fd fe59 	bl	8003a34 <_ZN23FrontendApplicationBase58gotoMeasurement_Accurate_Display_2ScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel1)
 8005d82:	f504 7434 	add.w	r4, r4, #720	; 0x2d0
 8005d86:	42a5      	cmp	r5, r4
 8005d88:	d105      	bne.n	8005d96 <_ZN28Measurement_AccurateViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8005d8a:	f00e ff59 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Measurement_Accurate_Display
        //Go to Measurement_Accurate_Display with screen transition towards East
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
    }
}
 8005d8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Accurate_DisplayScreenWipeTransitionEast();
 8005d92:	f7fd be3f 	b.w	8003a14 <_ZN23FrontendApplicationBase56gotoMeasurement_Accurate_DisplayScreenWipeTransitionEastEv>
}
 8005d96:	bd38      	pop	{r3, r4, r5, pc}

08005d98 <_ZN28Measurement_AccurateViewBaseC1Ev>:
Measurement_AccurateViewBase::Measurement_AccurateViewBase() :
 8005d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005d9c:	ed2d 8b06 	vpush	{d8-d10}
 8005da0:	4604      	mov	r4, r0
 8005da2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_AccurateViewBase::buttonCallbackHandler)
 8005da4:	46a3      	mov	fp, r4
 8005da6:	2500      	movs	r5, #0
 8005da8:	f010 fbca 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8005dac:	4b66      	ldr	r3, [pc, #408]	; (8005f48 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b0>)
 8005dae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8005db0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8005db4:	2226      	movs	r2, #38	; 0x26
 8005db6:	4629      	mov	r1, r5
 8005db8:	4658      	mov	r0, fp
 8005dba:	f023 ffd0 	bl	8029d5e <memset>
 8005dbe:	4658      	mov	r0, fp
 8005dc0:	f7fc fcc2 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8005dc4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8005dc8:	26ff      	movs	r6, #255	; 0xff
 8005dca:	4b60      	ldr	r3, [pc, #384]	; (8005f4c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b4>)
 8005dcc:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8005dce:	2226      	movs	r2, #38	; 0x26
 8005dd0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005dd4:	4629      	mov	r1, r5
 8005dd6:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8005dda:	4650      	mov	r0, sl
 8005ddc:	66a5      	str	r5, [r4, #104]	; 0x68
 8005dde:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005de2:	f023 ffbc 	bl	8029d5e <memset>
 8005de6:	4650      	mov	r0, sl
 8005de8:	f7fc fcae 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8005dec:	4b58      	ldr	r3, [pc, #352]	; (8005f50 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1b8>)
 8005dee:	66e3      	str	r3, [r4, #108]	; 0x6c
 8005df0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8005df4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8005df8:	a90a      	add	r1, sp, #40	; 0x28
 8005dfa:	4650      	mov	r0, sl
 8005dfc:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8005e00:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8005e04:	f00c fa13 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8005e08:	4648      	mov	r0, r9
 8005e0a:	f7fc fcaf 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005e0e:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 8005e12:	4b50      	ldr	r3, [pc, #320]	; (8005f54 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1bc>)
 8005e14:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8005e18:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8005e1c:	4638      	mov	r0, r7
 8005e1e:	f00b f8cf 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 8005e22:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005e26:	4618      	mov	r0, r3
 8005e28:	9303      	str	r3, [sp, #12]
 8005e2a:	f7fb f90b 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005e2e:	4b4a      	ldr	r3, [pc, #296]	; (8005f58 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c0>)
 8005e30:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8005e34:	f504 78b4 	add.w	r8, r4, #360	; 0x168
 8005e38:	3324      	adds	r3, #36	; 0x24
 8005e3a:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 8005e3e:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8005e42:	4640      	mov	r0, r8
 8005e44:	f7fc fc92 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005e48:	f504 73d8 	add.w	r3, r4, #432	; 0x1b0
 8005e4c:	4618      	mov	r0, r3
 8005e4e:	ee08 3a10 	vmov	s16, r3
 8005e52:	f7fc fc8b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005e56:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8005e5a:	4618      	mov	r0, r3
 8005e5c:	ee08 3a90 	vmov	s17, r3
 8005e60:	f7fc fc84 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8005e64:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8005e68:	4618      	mov	r0, r3
 8005e6a:	ee09 3a10 	vmov	s18, r3
 8005e6e:	f00c fb1f 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e72:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8005e76:	4618      	mov	r0, r3
 8005e78:	ee09 3a90 	vmov	s19, r3
 8005e7c:	f00c fb18 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8005e80:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8005e84:	4618      	mov	r0, r3
 8005e86:	ee0a 3a10 	vmov	s20, r3
 8005e8a:	f00c fb11 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005e8e:	4a33      	ldr	r2, [pc, #204]	; (8005f5c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c4>)
 8005e90:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8005e94:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8005e98:	4a31      	ldr	r2, [pc, #196]	; (8005f60 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005e9a:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8005e9e:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8005ea2:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8005ea6:	f00d f9bf 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005eaa:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005eae:	462a      	mov	r2, r5
 8005eb0:	4658      	mov	r0, fp
 8005eb2:	9300      	str	r3, [sp, #0]
 8005eb4:	4629      	mov	r1, r5
 8005eb6:	23f0      	movs	r3, #240	; 0xf0
 8005eb8:	f7fc fc32 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ebc:	1d26      	adds	r6, r4, #4
        color = newColor;
 8005ebe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005ec2:	66a3      	str	r3, [r4, #104]	; 0x68
 8005ec4:	4659      	mov	r1, fp
 8005ec6:	4630      	mov	r0, r6
 8005ec8:	f009 fc22 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8005ecc:	462a      	mov	r2, r5
 8005ece:	4650      	mov	r0, sl
 8005ed0:	4629      	mov	r1, r5
 8005ed2:	f7fc fc18 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005ed6:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8005ed8:	4650      	mov	r0, sl
 8005eda:	a90a      	add	r1, sp, #40	; 0x28
 8005edc:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8005ee0:	f00c f9a5 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8005ee4:	4651      	mov	r1, sl
 8005ee6:	4630      	mov	r0, r6
 8005ee8:	f009 fc12 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8005eec:	f44f 729a 	mov.w	r2, #308	; 0x134
 8005ef0:	2156      	movs	r1, #86	; 0x56
 8005ef2:	4648      	mov	r0, r9
 8005ef4:	f7fc fc07 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8005ef8:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8005efc:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8005f00:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8005f04:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8005f08:	4650      	mov	r0, sl
 8005f0a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8005f0e:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8005f12:	4649      	mov	r1, r9
 8005f14:	4798      	blx	r3
 8005f16:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8005f1a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8005f1e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005f22:	4b10      	ldr	r3, [pc, #64]	; (8005f64 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1cc>)
 8005f24:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUW4).getText());
 8005f26:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8005f2a:	b92b      	cbnz	r3, 8005f38 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1a0>
 8005f2c:	4b0e      	ldr	r3, [pc, #56]	; (8005f68 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d0>)
 8005f2e:	4a0f      	ldr	r2, [pc, #60]	; (8005f6c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005f30:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f32:	480f      	ldr	r0, [pc, #60]	; (8005f70 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d8>)
 8005f34:	f023 fd0e 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8005f38:	4b0e      	ldr	r3, [pc, #56]	; (8005f74 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005f3a:	881b      	ldrh	r3, [r3, #0]
 8005f3c:	2b16      	cmp	r3, #22
 8005f3e:	d81d      	bhi.n	8005f7c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e4>
 8005f40:	4b0d      	ldr	r3, [pc, #52]	; (8005f78 <_ZN28Measurement_AccurateViewBaseC1Ev+0x1e0>)
 8005f42:	4a0a      	ldr	r2, [pc, #40]	; (8005f6c <_ZN28Measurement_AccurateViewBaseC1Ev+0x1d4>)
 8005f44:	2161      	movs	r1, #97	; 0x61
 8005f46:	e7f4      	b.n	8005f32 <_ZN28Measurement_AccurateViewBaseC1Ev+0x19a>
 8005f48:	0802cf50 	.word	0x0802cf50
 8005f4c:	0802de70 	.word	0x0802de70
 8005f50:	0802e038 	.word	0x0802e038
 8005f54:	0802b508 	.word	0x0802b508
 8005f58:	0802dba4 	.word	0x0802dba4
 8005f5c:	0802cf38 	.word	0x0802cf38
 8005f60:	08005d5d 	.word	0x08005d5d
 8005f64:	20012e0c 	.word	0x20012e0c
 8005f68:	0802b348 	.word	0x0802b348
 8005f6c:	0802b44a 	.word	0x0802b44a
 8005f70:	0802b3c5 	.word	0x0802b3c5
 8005f74:	20012e10 	.word	0x20012e10
 8005f78:	0802b40c 	.word	0x0802b40c
        return texts->getText(typedTextId);
 8005f7c:	4b93      	ldr	r3, [pc, #588]	; (80061cc <_ZN28Measurement_AccurateViewBaseC1Ev+0x434>)
 8005f7e:	2116      	movs	r1, #22
 8005f80:	6818      	ldr	r0, [r3, #0]
 8005f82:	f002 f8d5 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8005f86:	4a92      	ldr	r2, [pc, #584]	; (80061d0 <_ZN28Measurement_AccurateViewBaseC1Ev+0x438>)
 8005f88:	4603      	mov	r3, r0
 8005f8a:	2104      	movs	r1, #4
 8005f8c:	4650      	mov	r0, sl
 8005f8e:	f011 ffc7 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8005f92:	4648      	mov	r0, r9
        wc1 = value;
 8005f94:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8005f98:	f00b fd4e 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005f9c:	4b8d      	ldr	r3, [pc, #564]	; (80061d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>)
 8005f9e:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SQC7));
 8005fa0:	a90a      	add	r1, sp, #40	; 0x28
 8005fa2:	2317      	movs	r3, #23
 8005fa4:	4648      	mov	r0, r9
 8005fa6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005faa:	f00b fd65 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005fae:	4649      	mov	r1, r9
 8005fb0:	4630      	mov	r0, r6
 8005fb2:	f009 fbad 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8005fb6:	230a      	movs	r3, #10
 8005fb8:	9300      	str	r3, [sp, #0]
 8005fba:	2232      	movs	r2, #50	; 0x32
 8005fbc:	23f0      	movs	r3, #240	; 0xf0
 8005fbe:	4629      	mov	r1, r5
 8005fc0:	4638      	mov	r0, r7
 8005fc2:	f7fc fbad 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fc6:	9b03      	ldr	r3, [sp, #12]
 8005fc8:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fcc:	22a0      	movs	r2, #160	; 0xa0
 8005fce:	4611      	mov	r1, r2
 8005fd0:	4638      	mov	r0, r7
 8005fd2:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005fd6:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8005fda:	f00b f907 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005fde:	22a0      	movs	r2, #160	; 0xa0
 8005fe0:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8005fe4:	4638      	mov	r0, r7
 8005fe6:	f00b f90c 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8005fea:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8005fee:	2b20      	cmp	r3, #32
 8005ff0:	d005      	beq.n	8005ffe <_ZN28Measurement_AccurateViewBaseC1Ev+0x266>
        lineWidthQ5 = widthQ5;
 8005ff2:	2320      	movs	r3, #32
 8005ff4:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8005ff8:	4638      	mov	r0, r7
 8005ffa:	f00b f801 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8005ffe:	4638      	mov	r0, r7
 8006000:	2101      	movs	r1, #1
 8006002:	f00b f909 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006006:	4639      	mov	r1, r7
 8006008:	4630      	mov	r0, r6
 800600a:	ad04      	add	r5, sp, #16
        color = newColor;
 800600c:	f04f 37ff 	mov.w	r7, #4294967295
 8006010:	f009 fb7e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006014:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 8006018:	2223      	movs	r2, #35	; 0x23
 800601a:	4640      	mov	r0, r8
 800601c:	2145      	movs	r1, #69	; 0x45
 800601e:	f7fc fb72 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006022:	4641      	mov	r1, r8
 8006024:	4628      	mov	r0, r5
        color = newColor;
 8006026:	f8c4 7198 	str.w	r7, [r4, #408]	; 0x198
        linespace = space;
 800602a:	f8a4 a19c 	strh.w	sl, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 800602e:	f00b fa89 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006032:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006036:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 800603a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800603e:	f04f 0b3c 	mov.w	fp, #60	; 0x3c
 8006042:	f8df 9190 	ldr.w	r9, [pc, #400]	; 80061d4 <_ZN28Measurement_AccurateViewBaseC1Ev+0x43c>
 8006046:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UWMX));
 800604a:	a90a      	add	r1, sp, #40	; 0x28
 800604c:	4640      	mov	r0, r8
 800604e:	f8ad b02c 	strh.w	fp, [sp, #44]	; 0x2c
 8006052:	f00b fd11 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006056:	4641      	mov	r1, r8
 8006058:	4630      	mov	r0, r6
 800605a:	f009 fb59 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800605e:	ee18 0a10 	vmov	r0, s16
 8006062:	220c      	movs	r2, #12
 8006064:	2136      	movs	r1, #54	; 0x36
 8006066:	f7fc fb4e 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800606a:	ee18 1a10 	vmov	r1, s16
 800606e:	4628      	mov	r0, r5
        color = newColor;
 8006070:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8006074:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006078:	f00b fa64 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800607c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006080:	ee18 3a10 	vmov	r3, s16
 8006084:	445b      	add	r3, fp
 8006086:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800608a:	233b      	movs	r3, #59	; 0x3b
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1X41));
 800608c:	ee18 0a10 	vmov	r0, s16
 8006090:	a90a      	add	r1, sp, #40	; 0x28
 8006092:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006096:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800609a:	f00b fced 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800609e:	ee18 1a10 	vmov	r1, s16
 80060a2:	4630      	mov	r0, r6
 80060a4:	f009 fb34 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(33, 60);
 80060a8:	465a      	mov	r2, fp
 80060aa:	ee18 0a90 	vmov	r0, s17
 80060ae:	2121      	movs	r1, #33	; 0x21
 80060b0:	f7fc fb29 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80060b4:	ee18 1a90 	vmov	r1, s17
 80060b8:	4628      	mov	r0, r5
        color = newColor;
 80060ba:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 80060be:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 80060c2:	f00b fa3f 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80060c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80060ca:	ee18 3a90 	vmov	r3, s17
 80060ce:	445b      	add	r3, fp
 80060d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80060d4:	2325      	movs	r3, #37	; 0x25
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D7H9));
 80060d6:	ee18 0a90 	vmov	r0, s17
 80060da:	a90a      	add	r1, sp, #40	; 0x28
 80060dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80060e0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80060e4:	f00b fcc8 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060e8:	ee18 1a90 	vmov	r1, s17
 80060ec:	4630      	mov	r0, r6
 80060ee:	f009 fb0f 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 80060f2:	ee19 0a10 	vmov	r0, s18
 80060f6:	22f0      	movs	r2, #240	; 0xf0
 80060f8:	2121      	movs	r1, #33	; 0x21
 80060fa:	f7fc fb04 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80060fe:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006102:	aa0a      	add	r2, sp, #40	; 0x28
 8006104:	f04f 0802 	mov.w	r8, #2
 8006108:	a909      	add	r1, sp, #36	; 0x24
 800610a:	ee19 0a10 	vmov	r0, s18
 800610e:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006112:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006116:	f504 5589 	add.w	r5, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800611a:	f00b fe92 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800611e:	233a      	movs	r3, #58	; 0x3a
 8006120:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006124:	3510      	adds	r5, #16
        updateTextPosition();
 8006126:	ee19 0a10 	vmov	r0, s18
 800612a:	f7fc fb41 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800612e:	ee19 1a10 	vmov	r1, s18
 8006132:	4630      	mov	r0, r6
        colorPressed = col;
 8006134:	e9c4 779f 	strd	r7, r7, [r4, #636]	; 0x27c
 8006138:	f8c4 5268 	str.w	r5, [r4, #616]	; 0x268
 800613c:	f009 fae8 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006140:	ee19 0a90 	vmov	r0, s19
 8006144:	22aa      	movs	r2, #170	; 0xaa
 8006146:	2121      	movs	r1, #33	; 0x21
 8006148:	f7fc fadd 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800614c:	aa0a      	add	r2, sp, #40	; 0x28
 800614e:	a909      	add	r1, sp, #36	; 0x24
 8006150:	ee19 0a90 	vmov	r0, s19
 8006154:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006158:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800615c:	f00b fe71 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006160:	2339      	movs	r3, #57	; 0x39
 8006162:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006166:	ee19 0a90 	vmov	r0, s19
 800616a:	f7fc fb21 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800616e:	ee19 1a90 	vmov	r1, s19
 8006172:	4630      	mov	r0, r6
        colorPressed = col;
 8006174:	e9c4 77b1 	strd	r7, r7, [r4, #708]	; 0x2c4
 8006178:	f8c4 52b0 	str.w	r5, [r4, #688]	; 0x2b0
 800617c:	f009 fac8 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006180:	ee1a 0a10 	vmov	r0, s20
 8006184:	2264      	movs	r2, #100	; 0x64
 8006186:	2121      	movs	r1, #33	; 0x21
 8006188:	f7fc fabd 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800618c:	aa0a      	add	r2, sp, #40	; 0x28
 800618e:	a909      	add	r1, sp, #36	; 0x24
 8006190:	ee1a 0a10 	vmov	r0, s20
 8006194:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006198:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 800619c:	f00b fe51 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80061a0:	2338      	movs	r3, #56	; 0x38
        updateTextPosition();
 80061a2:	ee1a 0a10 	vmov	r0, s20
 80061a6:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 80061aa:	f7fc fb01 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80061ae:	4630      	mov	r0, r6
        colorPressed = col;
 80061b0:	e9c4 77c3 	strd	r7, r7, [r4, #780]	; 0x30c
 80061b4:	ee1a 1a10 	vmov	r1, s20
 80061b8:	f8c4 52f8 	str.w	r5, [r4, #760]	; 0x2f8
 80061bc:	f009 faa8 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80061c0:	4620      	mov	r0, r4
 80061c2:	b00d      	add	sp, #52	; 0x34
 80061c4:	ecbd 8b06 	vpop	{d8-d10}
 80061c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061cc:	20012e18 	.word	0x20012e18
 80061d0:	0802b482 	.word	0x0802b482
 80061d4:	0802b4f8 	.word	0x0802b4f8

080061d8 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80061d8:	4770      	bx	lr

080061da <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80061da:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80061dc:	68c2      	ldr	r2, [r0, #12]
 80061de:	6844      	ldr	r4, [r0, #4]
 80061e0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80061e2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80061e4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80061e8:	07d2      	lsls	r2, r2, #31
 80061ea:	bf48      	it	mi
 80061ec:	5962      	ldrmi	r2, [r4, r5]
 80061ee:	689b      	ldr	r3, [r3, #8]
    }
 80061f0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80061f2:	bf48      	it	mi
 80061f4:	58d3      	ldrmi	r3, [r2, r3]
 80061f6:	4718      	bx	r3

080061f8 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80061f8:	6843      	ldr	r3, [r0, #4]
 80061fa:	b12b      	cbz	r3, 8006208 <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80061fc:	6883      	ldr	r3, [r0, #8]
 80061fe:	b92b      	cbnz	r3, 800620c <_ZNK8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006200:	68c0      	ldr	r0, [r0, #12]
 8006202:	f000 0001 	and.w	r0, r0, #1
 8006206:	4770      	bx	lr
 8006208:	4618      	mov	r0, r3
 800620a:	4770      	bx	lr
 800620c:	2001      	movs	r0, #1
    }
 800620e:	4770      	bx	lr

08006210 <_ZN8touchgfx8CallbackI36Measurement_Accurate_DisplayViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006210:	b510      	push	{r4, lr}
 8006212:	2110      	movs	r1, #16
 8006214:	4604      	mov	r4, r0
 8006216:	f022 fd8a 	bl	8028d2e <_ZdlPvj>
 800621a:	4620      	mov	r0, r4
 800621c:	bd10      	pop	{r4, pc}

0800621e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_DisplayViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 800621e:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 8006222:	f002 b8cd 	b.w	80083c0 <_ZN17Gauge_with_Values10initializeEv>

08006226 <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_DisplayViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8006226:	3098      	adds	r0, #152	; 0x98
 8006228:	4288      	cmp	r0, r1
{
 800622a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800622c:	d105      	bne.n	800623a <_ZN36Measurement_Accurate_DisplayViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_DisplayViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800622e:	f00e fd07 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 8006232:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 8006236:	f7fd bbdd 	b.w	80039f4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 800623a:	bd08      	pop	{r3, pc}

0800623c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 800623c:	b510      	push	{r4, lr}
 800623e:	4b07      	ldr	r3, [pc, #28]	; (800625c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x20>)
 8006240:	6003      	str	r3, [r0, #0]
 8006242:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006244:	f00c fffa 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>

class Gauge_with_Values : public Gauge_with_ValuesBase
{
public:
    Gauge_with_Values();
    virtual ~Gauge_with_Values() {}
 8006248:	4b05      	ldr	r3, [pc, #20]	; (8006260 <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev+0x24>)
 800624a:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 800624e:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 8006252:	f7fe fe25 	bl	8004ea0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 8006256:	4620      	mov	r0, r4
 8006258:	bd10      	pop	{r4, pc}
 800625a:	bf00      	nop
 800625c:	0802cf9c 	.word	0x0802cf9c
 8006260:	0802d4f4 	.word	0x0802d4f4

08006264 <_ZN36Measurement_Accurate_DisplayViewBaseD0Ev>:
Measurement_Accurate_DisplayViewBase::~Measurement_Accurate_DisplayViewBase()
 8006264:	b510      	push	{r4, lr}
 8006266:	4604      	mov	r4, r0
}
 8006268:	f7ff ffe8 	bl	800623c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 800626c:	4620      	mov	r0, r4
 800626e:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8006272:	f022 fd5c 	bl	8028d2e <_ZdlPvj>
 8006276:	4620      	mov	r0, r4
 8006278:	bd10      	pop	{r4, pc}
	...

0800627c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>:
Measurement_Accurate_DisplayViewBase::Measurement_Accurate_DisplayViewBase() :
 800627c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006280:	ed2d 8b04 	vpush	{d8-d9}
 8006284:	4604      	mov	r4, r0
 8006286:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_DisplayViewBase::buttonCallbackHandler)
 8006288:	46a1      	mov	r9, r4
 800628a:	2500      	movs	r5, #0
 800628c:	f010 f958 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8006290:	4bac      	ldr	r3, [pc, #688]	; (8006544 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2c8>)
 8006292:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006294:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006298:	2226      	movs	r2, #38	; 0x26
 800629a:	4629      	mov	r1, r5
 800629c:	4648      	mov	r0, r9
 800629e:	f023 fd5e 	bl	8029d5e <memset>
 80062a2:	4648      	mov	r0, r9
 80062a4:	f7fc fa50 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80062a8:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80062ac:	26ff      	movs	r6, #255	; 0xff
 80062ae:	4ba6      	ldr	r3, [pc, #664]	; (8006548 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2cc>)
 80062b0:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80062b2:	2226      	movs	r2, #38	; 0x26
 80062b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80062b8:	4629      	mov	r1, r5
 80062ba:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80062be:	4640      	mov	r0, r8
 80062c0:	66a5      	str	r5, [r4, #104]	; 0x68
 80062c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80062c6:	f023 fd4a 	bl	8029d5e <memset>
 80062ca:	4640      	mov	r0, r8
 80062cc:	f7fc fa3c 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80062d0:	4b9e      	ldr	r3, [pc, #632]	; (800654c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d0>)
 80062d2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80062d4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80062d8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80062dc:	a90a      	add	r1, sp, #40	; 0x28
 80062de:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 80062e0:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80062e4:	f00b ffa3 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80062e8:	f104 0398 	add.w	r3, r4, #152	; 0x98
 80062ec:	4618      	mov	r0, r3
 80062ee:	ee08 3a10 	vmov	s16, r3
 80062f2:	f00c f8dd 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80062f6:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 80062fa:	f504 7794 	add.w	r7, r4, #296	; 0x128
 80062fe:	4618      	mov	r0, r3
 8006300:	ee08 3a90 	vmov	s17, r3
 8006304:	f7fc fa32 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006308:	4638      	mov	r0, r7
 800630a:	f00a fe59 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 800630e:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006312:	4618      	mov	r0, r3
 8006314:	9303      	str	r3, [sp, #12]
 8006316:	f7fa fe95 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800631a:	4b8d      	ldr	r3, [pc, #564]	; (8006550 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d4>)
 800631c:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 8006320:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 8006324:	3324      	adds	r3, #36	; 0x24
 8006326:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 800632a:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 800632e:	4658      	mov	r0, fp
 8006330:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 8006334:	f7fc fa1a 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006338:	4650      	mov	r0, sl
 800633a:	f7fc fa17 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 800633e:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 8006342:	4618      	mov	r0, r3
 8006344:	ee09 3a10 	vmov	s18, r3
 8006348:	f002 f830 	bl	80083ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800634c:	4a81      	ldr	r2, [pc, #516]	; (8006554 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2d8>)
 800634e:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006352:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 8006356:	4a80      	ldr	r2, [pc, #512]	; (8006558 <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006358:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800635c:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 8006360:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 8006364:	f00c ff60 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006368:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800636c:	462a      	mov	r2, r5
 800636e:	4648      	mov	r0, r9
 8006370:	9300      	str	r3, [sp, #0]
 8006372:	4629      	mov	r1, r5
 8006374:	23f0      	movs	r3, #240	; 0xf0
 8006376:	f7fc f9d3 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 800637a:	1d26      	adds	r6, r4, #4
        color = newColor;
 800637c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006380:	66a3      	str	r3, [r4, #104]	; 0x68
 8006382:	4649      	mov	r1, r9
 8006384:	4630      	mov	r0, r6
 8006386:	f009 f9c3 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 800638a:	462a      	mov	r2, r5
 800638c:	4640      	mov	r0, r8
 800638e:	4629      	mov	r1, r5
 8006390:	f7fc f9b9 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006394:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006396:	4640      	mov	r0, r8
 8006398:	a90a      	add	r1, sp, #40	; 0x28
 800639a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800639e:	f00b ff46 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80063a2:	4641      	mov	r1, r8
 80063a4:	4630      	mov	r0, r6
 80063a6:	f009 f9b3 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 80063aa:	ee18 0a10 	vmov	r0, s16
 80063ae:	f240 1201 	movw	r2, #257	; 0x101
 80063b2:	2121      	movs	r1, #33	; 0x21
 80063b4:	f7fc f9a7 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80063b8:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80063ba:	aa0a      	add	r2, sp, #40	; 0x28
 80063bc:	a909      	add	r1, sp, #36	; 0x24
 80063be:	ee18 0a10 	vmov	r0, s16
 80063c2:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80063c6:	2302      	movs	r3, #2
 80063c8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80063cc:	f00b fd39 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80063d0:	2321      	movs	r3, #33	; 0x21
        updateTextPosition();
 80063d2:	ee18 0a10 	vmov	r0, s16
 80063d6:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 80063da:	f7fc f9e9 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80063de:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 80063e2:	3314      	adds	r3, #20
        color = col;
 80063e4:	f04f 39ff 	mov.w	r9, #4294967295
 80063e8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80063ec:	ee18 1a10 	vmov	r1, s16
 80063f0:	4630      	mov	r0, r6
        colorPressed = col;
 80063f2:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 80063f6:	f009 f98b 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80063fa:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 80063fe:	223c      	movs	r2, #60	; 0x3c
 8006400:	ee18 0a90 	vmov	r0, s17
 8006404:	2117      	movs	r1, #23
 8006406:	f7fc f97e 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800640a:	ee18 1a90 	vmov	r1, s17
 800640e:	4640      	mov	r0, r8
        color = newColor;
 8006410:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 8006414:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006418:	f00b f894 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800641c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006420:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 8006424:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8006428:	4b4c      	ldr	r3, [pc, #304]	; (800655c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 800642a:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZR32));
 800642c:	ee18 0a90 	vmov	r0, s17
 8006430:	2322      	movs	r3, #34	; 0x22
 8006432:	a90a      	add	r1, sp, #40	; 0x28
 8006434:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006438:	f00b fb1e 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800643c:	ee18 1a90 	vmov	r1, s17
 8006440:	4630      	mov	r0, r6
 8006442:	f009 f965 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006446:	230a      	movs	r3, #10
 8006448:	9300      	str	r3, [sp, #0]
 800644a:	2232      	movs	r2, #50	; 0x32
 800644c:	23f0      	movs	r3, #240	; 0xf0
 800644e:	4629      	mov	r1, r5
 8006450:	4638      	mov	r0, r7
 8006452:	f7fc f965 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006456:	9b03      	ldr	r3, [sp, #12]
 8006458:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800645c:	22a0      	movs	r2, #160	; 0xa0
 800645e:	4611      	mov	r1, r2
 8006460:	4638      	mov	r0, r7
 8006462:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006466:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 800646a:	f00a febf 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800646e:	22a0      	movs	r2, #160	; 0xa0
 8006470:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006474:	4638      	mov	r0, r7
 8006476:	f00a fec4 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800647a:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 800647e:	2b20      	cmp	r3, #32
 8006480:	d005      	beq.n	800648e <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 8006482:	2320      	movs	r3, #32
 8006484:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006488:	4638      	mov	r0, r7
 800648a:	f00a fdb9 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 800648e:	4638      	mov	r0, r7
 8006490:	2101      	movs	r1, #1
 8006492:	f00a fec1 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006496:	4639      	mov	r1, r7
 8006498:	4630      	mov	r0, r6
 800649a:	f009 f939 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 800649e:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 80064a0:	2223      	movs	r2, #35	; 0x23
 80064a2:	4658      	mov	r0, fp
        color = newColor;
 80064a4:	f04f 39ff 	mov.w	r9, #4294967295
 80064a8:	2145      	movs	r1, #69	; 0x45
 80064aa:	f7fc f92c 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80064ae:	4659      	mov	r1, fp
 80064b0:	4640      	mov	r0, r8
        color = newColor;
 80064b2:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 80064b6:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 80064ba:	f00b f843 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064be:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80064c2:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 80064c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064ca:	4f24      	ldr	r7, [pc, #144]	; (800655c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev+0x2e0>)
 80064cc:	970a      	str	r7, [sp, #40]	; 0x28
 80064ce:	2323      	movs	r3, #35	; 0x23
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7UP));
 80064d0:	a90a      	add	r1, sp, #40	; 0x28
 80064d2:	4658      	mov	r0, fp
 80064d4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80064d8:	f00b face 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064dc:	4659      	mov	r1, fp
 80064de:	4630      	mov	r0, r6
 80064e0:	f009 f916 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80064e4:	220c      	movs	r2, #12
 80064e6:	4650      	mov	r0, sl
 80064e8:	2136      	movs	r1, #54	; 0x36
 80064ea:	f7fc f90c 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80064ee:	4651      	mov	r1, sl
 80064f0:	4640      	mov	r0, r8
        color = newColor;
 80064f2:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 80064f6:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 80064fa:	f00b f823 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064fe:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8006502:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8006506:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800650a:	2324      	movs	r3, #36	; 0x24
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0GAY));
 800650c:	a90a      	add	r1, sp, #40	; 0x28
 800650e:	4650      	mov	r0, sl
 8006510:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006514:	970a      	str	r7, [sp, #40]	; 0x28
 8006516:	f00b faaf 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800651a:	4651      	mov	r1, sl
 800651c:	4630      	mov	r0, r6
 800651e:	f009 f8f7 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8006522:	ee19 0a10 	vmov	r0, s18
 8006526:	224e      	movs	r2, #78	; 0x4e
 8006528:	4629      	mov	r1, r5
 800652a:	f7fc f8ec 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800652e:	4630      	mov	r0, r6
 8006530:	ee19 1a10 	vmov	r1, s18
 8006534:	f009 f8ec 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006538:	4620      	mov	r0, r4
 800653a:	b00d      	add	sp, #52	; 0x34
 800653c:	ecbd 8b04 	vpop	{d8-d9}
 8006540:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006544:	0802cf9c 	.word	0x0802cf9c
 8006548:	0802de70 	.word	0x0802de70
 800654c:	0802e038 	.word	0x0802e038
 8006550:	0802dba4 	.word	0x0802dba4
 8006554:	0802cf84 	.word	0x0802cf84
 8006558:	08006227 	.word	0x08006227
 800655c:	0802b4f8 	.word	0x0802b4f8

08006560 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006560:	4770      	bx	lr

08006562 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006562:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006564:	68c2      	ldr	r2, [r0, #12]
 8006566:	6844      	ldr	r4, [r0, #4]
 8006568:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800656a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800656c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006570:	07d2      	lsls	r2, r2, #31
 8006572:	bf48      	it	mi
 8006574:	5962      	ldrmi	r2, [r4, r5]
 8006576:	689b      	ldr	r3, [r3, #8]
    }
 8006578:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800657a:	bf48      	it	mi
 800657c:	58d3      	ldrmi	r3, [r2, r3]
 800657e:	4718      	bx	r3

08006580 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006580:	6843      	ldr	r3, [r0, #4]
 8006582:	b12b      	cbz	r3, 8006590 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006584:	6883      	ldr	r3, [r0, #8]
 8006586:	b92b      	cbnz	r3, 8006594 <_ZNK8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006588:	68c0      	ldr	r0, [r0, #12]
 800658a:	f000 0001 	and.w	r0, r0, #1
 800658e:	4770      	bx	lr
 8006590:	4618      	mov	r0, r3
 8006592:	4770      	bx	lr
 8006594:	2001      	movs	r0, #1
    }
 8006596:	4770      	bx	lr

08006598 <_ZN8touchgfx8CallbackI38Measurement_Accurate_Display_2ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006598:	b510      	push	{r4, lr}
 800659a:	2110      	movs	r1, #16
 800659c:	4604      	mov	r4, r0
 800659e:	f022 fbc6 	bl	8028d2e <_ZdlPvj>
 80065a2:	4620      	mov	r0, r4
 80065a4:	bd10      	pop	{r4, pc}

080065a6 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Accurate_Display_2ViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 80065a6:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 80065aa:	f001 bf09 	b.w	80083c0 <_ZN17Gauge_with_Values10initializeEv>

080065ae <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 80065ae:	3098      	adds	r0, #152	; 0x98
 80065b0:	4288      	cmp	r0, r1
{
 80065b2:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 80065b4:	d105      	bne.n	80065c2 <_ZN38Measurement_Accurate_Display_2ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x14>
    virtual ~Measurement_Accurate_Display_2ViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80065b6:	f00e fb43 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Accurate
        //Go to Measurement_Accurate with screen transition towards West
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
    }
}
 80065ba:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_AccurateScreenWipeTransitionWest();
 80065be:	f7fd ba19 	b.w	80039f4 <_ZN23FrontendApplicationBase48gotoMeasurement_AccurateScreenWipeTransitionWestEv>
}
 80065c2:	bd08      	pop	{r3, pc}

080065c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80065c4:	b510      	push	{r4, lr}
 80065c6:	4b07      	ldr	r3, [pc, #28]	; (80065e4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x20>)
 80065c8:	6003      	str	r3, [r0, #0]
 80065ca:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80065cc:	f00c fe36 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80065d0:	4b05      	ldr	r3, [pc, #20]	; (80065e8 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev+0x24>)
 80065d2:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80065d6:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80065da:	f7fe fc61 	bl	8004ea0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80065de:	4620      	mov	r0, r4
 80065e0:	bd10      	pop	{r4, pc}
 80065e2:	bf00      	nop
 80065e4:	0802cfe8 	.word	0x0802cfe8
 80065e8:	0802d4f4 	.word	0x0802d4f4

080065ec <_ZN38Measurement_Accurate_Display_2ViewBaseD0Ev>:
Measurement_Accurate_Display_2ViewBase::~Measurement_Accurate_Display_2ViewBase()
 80065ec:	b510      	push	{r4, lr}
 80065ee:	4604      	mov	r4, r0
}
 80065f0:	f7ff ffe8 	bl	80065c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80065f4:	4620      	mov	r0, r4
 80065f6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80065fa:	f022 fb98 	bl	8028d2e <_ZdlPvj>
 80065fe:	4620      	mov	r0, r4
 8006600:	bd10      	pop	{r4, pc}
	...

08006604 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>:
Measurement_Accurate_Display_2ViewBase::Measurement_Accurate_Display_2ViewBase() :
 8006604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006608:	ed2d 8b04 	vpush	{d8-d9}
 800660c:	4604      	mov	r4, r0
 800660e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Accurate_Display_2ViewBase::buttonCallbackHandler)
 8006610:	46a1      	mov	r9, r4
 8006612:	2500      	movs	r5, #0
 8006614:	f00f ff94 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8006618:	4bac      	ldr	r3, [pc, #688]	; (80068cc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2c8>)
 800661a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800661c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006620:	2226      	movs	r2, #38	; 0x26
 8006622:	4629      	mov	r1, r5
 8006624:	4648      	mov	r0, r9
 8006626:	f023 fb9a 	bl	8029d5e <memset>
 800662a:	4648      	mov	r0, r9
 800662c:	f7fc f88c 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8006630:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006634:	26ff      	movs	r6, #255	; 0xff
 8006636:	4ba6      	ldr	r3, [pc, #664]	; (80068d0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2cc>)
 8006638:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800663a:	2226      	movs	r2, #38	; 0x26
 800663c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006640:	4629      	mov	r1, r5
 8006642:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006646:	4640      	mov	r0, r8
 8006648:	66a5      	str	r5, [r4, #104]	; 0x68
 800664a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800664e:	f023 fb86 	bl	8029d5e <memset>
 8006652:	4640      	mov	r0, r8
 8006654:	f7fc f878 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8006658:	4b9e      	ldr	r3, [pc, #632]	; (80068d4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d0>)
 800665a:	66e3      	str	r3, [r4, #108]	; 0x6c
 800665c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006660:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006664:	a90a      	add	r1, sp, #40	; 0x28
 8006666:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006668:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 800666c:	f00b fddf 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006670:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8006674:	4618      	mov	r0, r3
 8006676:	ee08 3a10 	vmov	s16, r3
 800667a:	f00b ff19 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800667e:	f104 03e0 	add.w	r3, r4, #224	; 0xe0
 8006682:	f504 7794 	add.w	r7, r4, #296	; 0x128
 8006686:	4618      	mov	r0, r3
 8006688:	ee08 3a90 	vmov	s17, r3
 800668c:	f7fc f86e 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006690:	4638      	mov	r0, r7
 8006692:	f00a fc95 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 8006696:	f504 73cc 	add.w	r3, r4, #408	; 0x198
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800669a:	4618      	mov	r0, r3
 800669c:	9303      	str	r3, [sp, #12]
 800669e:	f7fa fcd1 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80066a2:	4b8d      	ldr	r3, [pc, #564]	; (80068d8 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d4>)
 80066a4:	f8c4 3198 	str.w	r3, [r4, #408]	; 0x198
 80066a8:	f504 7bd6 	add.w	fp, r4, #428	; 0x1ac
 80066ac:	3324      	adds	r3, #36	; 0x24
 80066ae:	f8c4 31a0 	str.w	r3, [r4, #416]	; 0x1a0
 80066b2:	f8c4 51a4 	str.w	r5, [r4, #420]	; 0x1a4
 80066b6:	4658      	mov	r0, fp
 80066b8:	f504 7afa 	add.w	sl, r4, #500	; 0x1f4
 80066bc:	f7fc f856 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80066c0:	4650      	mov	r0, sl
 80066c2:	f7fc f853 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80066c6:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 80066ca:	4618      	mov	r0, r3
 80066cc:	ee09 3a10 	vmov	s18, r3
 80066d0:	f001 fe6c 	bl	80083ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80066d4:	4a81      	ldr	r2, [pc, #516]	; (80068dc <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2d8>)
 80066d6:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80066da:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80066de:	4a80      	ldr	r2, [pc, #512]	; (80068e0 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2dc>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80066e0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80066e4:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80066e8:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80066ec:	f00c fd9c 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80066f0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80066f4:	462a      	mov	r2, r5
 80066f6:	4648      	mov	r0, r9
 80066f8:	9300      	str	r3, [sp, #0]
 80066fa:	4629      	mov	r1, r5
 80066fc:	23f0      	movs	r3, #240	; 0xf0
 80066fe:	f7fc f80f 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006702:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006704:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006708:	66a3      	str	r3, [r4, #104]	; 0x68
 800670a:	4649      	mov	r1, r9
 800670c:	4630      	mov	r0, r6
 800670e:	f008 ffff 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006712:	462a      	mov	r2, r5
 8006714:	4640      	mov	r0, r8
 8006716:	4629      	mov	r1, r5
 8006718:	f7fb fff5 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800671c:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800671e:	4640      	mov	r0, r8
 8006720:	a90a      	add	r1, sp, #40	; 0x28
 8006722:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006726:	f00b fd82 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800672a:	4641      	mov	r1, r8
 800672c:	4630      	mov	r0, r6
 800672e:	f008 ffef 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 8006732:	ee18 0a10 	vmov	r0, s16
 8006736:	f240 1201 	movw	r2, #257	; 0x101
 800673a:	2121      	movs	r1, #33	; 0x21
 800673c:	f7fb ffe3 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006740:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006742:	aa0a      	add	r2, sp, #40	; 0x28
 8006744:	a909      	add	r1, sp, #36	; 0x24
 8006746:	ee18 0a10 	vmov	r0, s16
 800674a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800674e:	2302      	movs	r3, #2
 8006750:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006754:	f00b fb75 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006758:	231d      	movs	r3, #29
        updateTextPosition();
 800675a:	ee18 0a10 	vmov	r0, s16
 800675e:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
 8006762:	f7fc f825 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 8006766:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 800676a:	3314      	adds	r3, #20
        color = col;
 800676c:	f04f 39ff 	mov.w	r9, #4294967295
 8006770:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8006774:	ee18 1a10 	vmov	r1, s16
 8006778:	4630      	mov	r0, r6
        colorPressed = col;
 800677a:	e9c4 9935 	strd	r9, r9, [r4, #212]	; 0xd4
 800677e:	f008 ffc7 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006782:	f10d 0810 	add.w	r8, sp, #16
    textArea3.setXY(23, 60);
 8006786:	223c      	movs	r2, #60	; 0x3c
 8006788:	ee18 0a90 	vmov	r0, s17
 800678c:	2117      	movs	r1, #23
 800678e:	f7fb ffba 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006792:	ee18 1a90 	vmov	r1, s17
 8006796:	4640      	mov	r0, r8
        color = newColor;
 8006798:	f8c4 9110 	str.w	r9, [r4, #272]	; 0x110
        linespace = space;
 800679c:	f8a4 5114 	strh.w	r5, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 80067a0:	f00a fed0 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80067a4:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80067a8:	f504 738e 	add.w	r3, r4, #284	; 0x11c
 80067ac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80067b0:	4b4c      	ldr	r3, [pc, #304]	; (80068e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 80067b2:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TF2A));
 80067b4:	ee18 0a90 	vmov	r0, s17
 80067b8:	231e      	movs	r3, #30
 80067ba:	a90a      	add	r1, sp, #40	; 0x28
 80067bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80067c0:	f00b f95a 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067c4:	ee18 1a90 	vmov	r1, s17
 80067c8:	4630      	mov	r0, r6
 80067ca:	f008 ffa1 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80067ce:	230a      	movs	r3, #10
 80067d0:	9300      	str	r3, [sp, #0]
 80067d2:	2232      	movs	r2, #50	; 0x32
 80067d4:	23f0      	movs	r3, #240	; 0xf0
 80067d6:	4629      	mov	r1, r5
 80067d8:	4638      	mov	r0, r7
 80067da:	f7fb ffa1 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067de:	9b03      	ldr	r3, [sp, #12]
 80067e0:	f8c4 3150 	str.w	r3, [r4, #336]	; 0x150
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80067e4:	22a0      	movs	r2, #160	; 0xa0
 80067e6:	4611      	mov	r1, r2
 80067e8:	4638      	mov	r0, r7
 80067ea:	f8c4 91a4 	str.w	r9, [r4, #420]	; 0x1a4
        color565 = LCD16bpp::getNativeColor(painterColor);
 80067ee:	f8a4 91a8 	strh.w	r9, [r4, #424]	; 0x1a8
 80067f2:	f00a fcfb 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80067f6:	22a0      	movs	r2, #160	; 0xa0
 80067f8:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80067fc:	4638      	mov	r0, r7
 80067fe:	f00a fd00 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006802:	f8d4 3164 	ldr.w	r3, [r4, #356]	; 0x164
 8006806:	2b20      	cmp	r3, #32
 8006808:	d005      	beq.n	8006816 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x212>
        lineWidthQ5 = widthQ5;
 800680a:	2320      	movs	r3, #32
 800680c:	f8c4 3164 	str.w	r3, [r4, #356]	; 0x164
        updateCachedShape();
 8006810:	4638      	mov	r0, r7
 8006812:	f00a fbf5 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006816:	4638      	mov	r0, r7
 8006818:	2101      	movs	r1, #1
 800681a:	f00a fcfd 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800681e:	4639      	mov	r1, r7
 8006820:	4630      	mov	r0, r6
 8006822:	f008 ff75 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006826:	2500      	movs	r5, #0
    textArea2.setXY(69, 35);
 8006828:	2223      	movs	r2, #35	; 0x23
 800682a:	4658      	mov	r0, fp
        color = newColor;
 800682c:	f04f 39ff 	mov.w	r9, #4294967295
 8006830:	2145      	movs	r1, #69	; 0x45
 8006832:	f7fb ff68 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006836:	4659      	mov	r1, fp
 8006838:	4640      	mov	r0, r8
        color = newColor;
 800683a:	f8c4 91dc 	str.w	r9, [r4, #476]	; 0x1dc
        linespace = space;
 800683e:	f8a4 51e0 	strh.w	r5, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 8006842:	f00a fe7f 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006846:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800684a:	f10b 033c 	add.w	r3, fp, #60	; 0x3c
 800684e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006852:	4f24      	ldr	r7, [pc, #144]	; (80068e4 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev+0x2e0>)
 8006854:	970a      	str	r7, [sp, #40]	; 0x28
 8006856:	231f      	movs	r3, #31
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A08K));
 8006858:	a90a      	add	r1, sp, #40	; 0x28
 800685a:	4658      	mov	r0, fp
 800685c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006860:	f00b f90a 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006864:	4659      	mov	r1, fp
 8006866:	4630      	mov	r0, r6
 8006868:	f008 ff52 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800686c:	220c      	movs	r2, #12
 800686e:	4650      	mov	r0, sl
 8006870:	2136      	movs	r1, #54	; 0x36
 8006872:	f7fb ff48 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006876:	4651      	mov	r1, sl
 8006878:	4640      	mov	r0, r8
        color = newColor;
 800687a:	f8c4 9224 	str.w	r9, [r4, #548]	; 0x224
        linespace = space;
 800687e:	f8a4 5228 	strh.w	r5, [r4, #552]	; 0x228
        boundingArea = calculateBoundingArea();
 8006882:	f00a fe5f 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006886:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800688a:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 800688e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006892:	2320      	movs	r3, #32
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IJWA));
 8006894:	a90a      	add	r1, sp, #40	; 0x28
 8006896:	4650      	mov	r0, sl
 8006898:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800689c:	970a      	str	r7, [sp, #40]	; 0x28
 800689e:	f00b f8eb 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068a2:	4651      	mov	r1, sl
 80068a4:	4630      	mov	r0, r6
 80068a6:	f008 ff33 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 80068aa:	ee19 0a10 	vmov	r0, s18
 80068ae:	224e      	movs	r2, #78	; 0x4e
 80068b0:	4629      	mov	r1, r5
 80068b2:	f7fb ff28 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80068b6:	4630      	mov	r0, r6
 80068b8:	ee19 1a10 	vmov	r1, s18
 80068bc:	f008 ff28 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80068c0:	4620      	mov	r0, r4
 80068c2:	b00d      	add	sp, #52	; 0x34
 80068c4:	ecbd 8b04 	vpop	{d8-d9}
 80068c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80068cc:	0802cfe8 	.word	0x0802cfe8
 80068d0:	0802de70 	.word	0x0802de70
 80068d4:	0802e038 	.word	0x0802e038
 80068d8:	0802dba4 	.word	0x0802dba4
 80068dc:	0802cfd0 	.word	0x0802cfd0
 80068e0:	080065af 	.word	0x080065af
 80068e4:	0802b4f8 	.word	0x0802b4f8

080068e8 <_ZN26Measurement_SingleViewBase11setupScreenEv>:
}

void Measurement_SingleViewBase::setupScreen()
{

}
 80068e8:	4770      	bx	lr

080068ea <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80068ea:	4770      	bx	lr

080068ec <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80068ec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80068ee:	68c2      	ldr	r2, [r0, #12]
 80068f0:	6844      	ldr	r4, [r0, #4]
 80068f2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80068f4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80068f6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80068fa:	07d2      	lsls	r2, r2, #31
 80068fc:	bf48      	it	mi
 80068fe:	5962      	ldrmi	r2, [r4, r5]
 8006900:	689b      	ldr	r3, [r3, #8]
    }
 8006902:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006904:	bf48      	it	mi
 8006906:	58d3      	ldrmi	r3, [r2, r3]
 8006908:	4718      	bx	r3

0800690a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800690a:	6843      	ldr	r3, [r0, #4]
 800690c:	b12b      	cbz	r3, 800691a <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800690e:	6883      	ldr	r3, [r0, #8]
 8006910:	b92b      	cbnz	r3, 800691e <_ZNK8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006912:	68c0      	ldr	r0, [r0, #12]
 8006914:	f000 0001 	and.w	r0, r0, #1
 8006918:	4770      	bx	lr
 800691a:	4618      	mov	r0, r3
 800691c:	4770      	bx	lr
 800691e:	2001      	movs	r0, #1
    }
 8006920:	4770      	bx	lr

08006922 <_ZN8touchgfx8CallbackI26Measurement_SingleViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006922:	b510      	push	{r4, lr}
 8006924:	2110      	movs	r1, #16
 8006926:	4604      	mov	r4, r0
 8006928:	f022 fa01 	bl	8028d2e <_ZdlPvj>
 800692c:	4620      	mov	r0, r4
 800692e:	bd10      	pop	{r4, pc}

08006930 <_ZN26Measurement_SingleViewBaseD1Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006930:	b510      	push	{r4, lr}
 8006932:	4b03      	ldr	r3, [pc, #12]	; (8006940 <_ZN26Measurement_SingleViewBaseD1Ev+0x10>)
 8006934:	6003      	str	r3, [r0, #0]
 8006936:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006938:	f00c fc80 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800693c:	4620      	mov	r0, r4
 800693e:	bd10      	pop	{r4, pc}
 8006940:	0802d034 	.word	0x0802d034

08006944 <_ZN26Measurement_SingleViewBaseD0Ev>:
Measurement_SingleViewBase::~Measurement_SingleViewBase()
 8006944:	b507      	push	{r0, r1, r2, lr}
 8006946:	4b07      	ldr	r3, [pc, #28]	; (8006964 <_ZN26Measurement_SingleViewBaseD0Ev+0x20>)
 8006948:	6003      	str	r3, [r0, #0]
 800694a:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800694c:	f00c fc76 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006950:	9801      	ldr	r0, [sp, #4]
 8006952:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 8006956:	f022 f9ea 	bl	8028d2e <_ZdlPvj>
 800695a:	9801      	ldr	r0, [sp, #4]
 800695c:	b003      	add	sp, #12
 800695e:	f85d fb04 	ldr.w	pc, [sp], #4
 8006962:	bf00      	nop
 8006964:	0802d034 	.word	0x0802d034

08006968 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Measurement_SingleViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006968:	b538      	push	{r3, r4, r5, lr}
    if (&src == &buttonWithLabel3)
 800696a:	f500 7310 	add.w	r3, r0, #576	; 0x240
 800696e:	4299      	cmp	r1, r3
{
 8006970:	4604      	mov	r4, r0
 8006972:	460d      	mov	r5, r1
    if (&src == &buttonWithLabel3)
 8006974:	d103      	bne.n	800697e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_SingleViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006976:	f00e f963 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement
        //Go to Measurement with screen transition towards West
        application().gotoMeasurementScreenWipeTransitionWest();
 800697a:	f7fc ffdb 	bl	8003934 <_ZN23FrontendApplicationBase39gotoMeasurementScreenWipeTransitionWestEv>
    }
    if (&src == &buttonWithLabel1)
 800697e:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006982:	429d      	cmp	r5, r3
 8006984:	d103      	bne.n	800698e <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 8006986:	f00e f95b 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction2
        //When buttonWithLabel1 clicked change screen to Measurement_Single_Display_1P
        //Go to Measurement_Single_Display_1P with screen transition towards East
        application().gotoMeasurement_Single_Display_1PScreenWipeTransitionEast();
 800698a:	f7fd f803 	bl	8003994 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_1PScreenWipeTransitionEastEv>
    }
    if (&src == &buttonWithLabel2)
 800698e:	f504 7422 	add.w	r4, r4, #648	; 0x288
 8006992:	42a5      	cmp	r5, r4
 8006994:	d105      	bne.n	80069a2 <_ZN26Measurement_SingleViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
 8006996:	f00e f953 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction3
        //When buttonWithLabel2 clicked change screen to Measurement_Single_Display_3P
        //Go to Measurement_Single_Display_3P with screen transition towards East
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
    }
}
 800699a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMeasurement_Single_Display_3PScreenWipeTransitionEast();
 800699e:	f7fd b809 	b.w	80039b4 <_ZN23FrontendApplicationBase57gotoMeasurement_Single_Display_3PScreenWipeTransitionEastEv>
}
 80069a2:	bd38      	pop	{r3, r4, r5, pc}

080069a4 <_ZN26Measurement_SingleViewBaseC1Ev>:
Measurement_SingleViewBase::Measurement_SingleViewBase() :
 80069a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80069a8:	ed2d 8b06 	vpush	{d8-d10}
 80069ac:	4604      	mov	r4, r0
 80069ae:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_SingleViewBase::buttonCallbackHandler)
 80069b0:	46a3      	mov	fp, r4
 80069b2:	2500      	movs	r5, #0
 80069b4:	f00f fdc4 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 80069b8:	4b66      	ldr	r3, [pc, #408]	; (8006b54 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b0>)
 80069ba:	63e5      	str	r5, [r4, #60]	; 0x3c
 80069bc:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80069c0:	2226      	movs	r2, #38	; 0x26
 80069c2:	4629      	mov	r1, r5
 80069c4:	4658      	mov	r0, fp
 80069c6:	f023 f9ca 	bl	8029d5e <memset>
 80069ca:	4658      	mov	r0, fp
 80069cc:	f7fb febc 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80069d0:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 80069d4:	26ff      	movs	r6, #255	; 0xff
 80069d6:	4b60      	ldr	r3, [pc, #384]	; (8006b58 <_ZN26Measurement_SingleViewBaseC1Ev+0x1b4>)
 80069d8:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 80069da:	2226      	movs	r2, #38	; 0x26
 80069dc:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80069e0:	4629      	mov	r1, r5
 80069e2:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80069e6:	4650      	mov	r0, sl
 80069e8:	66a5      	str	r5, [r4, #104]	; 0x68
 80069ea:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80069ee:	f023 f9b6 	bl	8029d5e <memset>
 80069f2:	4650      	mov	r0, sl
 80069f4:	f7fb fea8 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80069f8:	4b58      	ldr	r3, [pc, #352]	; (8006b5c <_ZN26Measurement_SingleViewBaseC1Ev+0x1b8>)
 80069fa:	66e3      	str	r3, [r4, #108]	; 0x6c
 80069fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006a00:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006a04:	a90a      	add	r1, sp, #40	; 0x28
 8006a06:	4650      	mov	r0, sl
 8006a08:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 8006a0c:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006a10:	f00b fc0d 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 8006a14:	4648      	mov	r0, r9
 8006a16:	f7fb fea9 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8006a1a:	4b51      	ldr	r3, [pc, #324]	; (8006b60 <_ZN26Measurement_SingleViewBaseC1Ev+0x1bc>)
 8006a1c:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8006a20:	f104 03e4 	add.w	r3, r4, #228	; 0xe4
 8006a24:	4618      	mov	r0, r3
 8006a26:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 8006a2a:	f504 7796 	add.w	r7, r4, #300	; 0x12c
 8006a2e:	ee08 3a90 	vmov	s17, r3
 8006a32:	f7fb fe9b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006a36:	4638      	mov	r0, r7
 8006a38:	f00a fac2 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 8006a3c:	f504 73ce 	add.w	r3, r4, #412	; 0x19c
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006a40:	4618      	mov	r0, r3
 8006a42:	9303      	str	r3, [sp, #12]
 8006a44:	f7fa fafe 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006a48:	4b46      	ldr	r3, [pc, #280]	; (8006b64 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c0>)
 8006a4a:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8006a4e:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8006a52:	3324      	adds	r3, #36	; 0x24
 8006a54:	f8c4 31a4 	str.w	r3, [r4, #420]	; 0x1a4
 8006a58:	f8c4 51a8 	str.w	r5, [r4, #424]	; 0x1a8
 8006a5c:	4640      	mov	r0, r8
 8006a5e:	f7fb fe85 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006a62:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8006a66:	4618      	mov	r0, r3
 8006a68:	ee08 3a10 	vmov	s16, r3
 8006a6c:	f7fb fe7e 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006a70:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8006a74:	4618      	mov	r0, r3
 8006a76:	ee09 3a10 	vmov	s18, r3
 8006a7a:	f00b fd19 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a7e:	f504 7322 	add.w	r3, r4, #648	; 0x288
 8006a82:	4618      	mov	r0, r3
 8006a84:	ee09 3a90 	vmov	s19, r3
 8006a88:	f00b fd12 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8006a8c:	f504 7334 	add.w	r3, r4, #720	; 0x2d0
 8006a90:	4618      	mov	r0, r3
 8006a92:	ee0a 3a10 	vmov	s20, r3
 8006a96:	f00b fd0b 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006a9a:	4a33      	ldr	r2, [pc, #204]	; (8006b68 <_ZN26Measurement_SingleViewBaseC1Ev+0x1c4>)
 8006a9c:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006aa0:	e9c3 244c 	strd	r2, r4, [r3, #304]	; 0x130
 8006aa4:	4a31      	ldr	r2, [pc, #196]	; (8006b6c <_ZN26Measurement_SingleViewBaseC1Ev+0x1c8>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8006aa6:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8006aaa:	e9c3 254e 	strd	r2, r5, [r3, #312]	; 0x138
 8006aae:	f504 7048 	add.w	r0, r4, #800	; 0x320
 8006ab2:	f00c fbb9 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8006ab6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8006aba:	462a      	mov	r2, r5
 8006abc:	4658      	mov	r0, fp
 8006abe:	9300      	str	r3, [sp, #0]
 8006ac0:	4629      	mov	r1, r5
 8006ac2:	23f0      	movs	r3, #240	; 0xf0
 8006ac4:	f7fb fe2c 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006ac8:	1d26      	adds	r6, r4, #4
        color = newColor;
 8006aca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8006ace:	66a3      	str	r3, [r4, #104]	; 0x68
 8006ad0:	4659      	mov	r1, fp
 8006ad2:	4630      	mov	r0, r6
 8006ad4:	f008 fe1c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8006ad8:	462a      	mov	r2, r5
 8006ada:	4650      	mov	r0, sl
 8006adc:	4629      	mov	r1, r5
 8006ade:	f7fb fe12 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006ae2:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8006ae4:	4650      	mov	r0, sl
 8006ae6:	a90a      	add	r1, sp, #40	; 0x28
 8006ae8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006aec:	f00b fb9f 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006af0:	4651      	mov	r1, sl
 8006af2:	4630      	mov	r0, r6
 8006af4:	f008 fe0c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8006af8:	f44f 729a 	mov.w	r2, #308	; 0x134
 8006afc:	2156      	movs	r1, #86	; 0x56
 8006afe:	4648      	mov	r0, r9
 8006b00:	f7fb fe01 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b04:	f04f 33ff 	mov.w	r3, #4294967295
 8006b08:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8006b0c:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8006b10:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8006b14:	f10d 0b10 	add.w	fp, sp, #16
 8006b18:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8006b1c:	4649      	mov	r1, r9
 8006b1e:	4658      	mov	r0, fp
 8006b20:	4798      	blx	r3
 8006b22:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006b26:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8006b2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b2e:	4b10      	ldr	r3, [pc, #64]	; (8006b70 <_ZN26Measurement_SingleViewBaseC1Ev+0x1cc>)
 8006b30:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DTDC).getText());
 8006b32:	f504 7a46 	add.w	sl, r4, #792	; 0x318
 8006b36:	b92b      	cbnz	r3, 8006b44 <_ZN26Measurement_SingleViewBaseC1Ev+0x1a0>
 8006b38:	4b0e      	ldr	r3, [pc, #56]	; (8006b74 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d0>)
 8006b3a:	4a0f      	ldr	r2, [pc, #60]	; (8006b78 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006b3c:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b3e:	480f      	ldr	r0, [pc, #60]	; (8006b7c <_ZN26Measurement_SingleViewBaseC1Ev+0x1d8>)
 8006b40:	f022 ff08 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8006b44:	4b0e      	ldr	r3, [pc, #56]	; (8006b80 <_ZN26Measurement_SingleViewBaseC1Ev+0x1dc>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b46:	881b      	ldrh	r3, [r3, #0]
 8006b48:	2b18      	cmp	r3, #24
 8006b4a:	d81d      	bhi.n	8006b88 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e4>
 8006b4c:	4b0d      	ldr	r3, [pc, #52]	; (8006b84 <_ZN26Measurement_SingleViewBaseC1Ev+0x1e0>)
 8006b4e:	4a0a      	ldr	r2, [pc, #40]	; (8006b78 <_ZN26Measurement_SingleViewBaseC1Ev+0x1d4>)
 8006b50:	2161      	movs	r1, #97	; 0x61
 8006b52:	e7f4      	b.n	8006b3e <_ZN26Measurement_SingleViewBaseC1Ev+0x19a>
 8006b54:	0802d034 	.word	0x0802d034
 8006b58:	0802de70 	.word	0x0802de70
 8006b5c:	0802e038 	.word	0x0802e038
 8006b60:	0802b508 	.word	0x0802b508
 8006b64:	0802dba4 	.word	0x0802dba4
 8006b68:	0802d01c 	.word	0x0802d01c
 8006b6c:	08006969 	.word	0x08006969
 8006b70:	20012e0c 	.word	0x20012e0c
 8006b74:	0802b348 	.word	0x0802b348
 8006b78:	0802b44a 	.word	0x0802b44a
 8006b7c:	0802b3c5 	.word	0x0802b3c5
 8006b80:	20012e10 	.word	0x20012e10
 8006b84:	0802b40c 	.word	0x0802b40c
        return texts->getText(typedTextId);
 8006b88:	4b96      	ldr	r3, [pc, #600]	; (8006de4 <_ZN26Measurement_SingleViewBaseC1Ev+0x440>)
 8006b8a:	2118      	movs	r1, #24
 8006b8c:	6818      	ldr	r0, [r3, #0]
 8006b8e:	f001 facf 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8006b92:	4a95      	ldr	r2, [pc, #596]	; (8006de8 <_ZN26Measurement_SingleViewBaseC1Ev+0x444>)
 8006b94:	4603      	mov	r3, r0
 8006b96:	2104      	movs	r1, #4
 8006b98:	4650      	mov	r0, sl
 8006b9a:	f011 f9c1 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8006b9e:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
    textArea3_1.resizeToCurrentText();
 8006ba2:	4648      	mov	r0, r9
 8006ba4:	f00a ff48 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006ba8:	f8df a240 	ldr.w	sl, [pc, #576]	; 8006dec <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006bac:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006bb0:	2319      	movs	r3, #25
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VDD5));
 8006bb2:	a90a      	add	r1, sp, #40	; 0x28
 8006bb4:	4648      	mov	r0, r9
 8006bb6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006bba:	f00a ff5d 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006bbe:	4649      	mov	r1, r9
 8006bc0:	4630      	mov	r0, r6
 8006bc2:	f008 fda5 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(41, 60);
 8006bc6:	223c      	movs	r2, #60	; 0x3c
 8006bc8:	ee18 0a90 	vmov	r0, s17
 8006bcc:	2129      	movs	r1, #41	; 0x29
 8006bce:	f7fb fd9a 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006bd2:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006bd6:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8006bda:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        boundingArea = calculateBoundingArea();
 8006bde:	4658      	mov	r0, fp
        linespace = space;
 8006be0:	f8a4 5118 	strh.w	r5, [r4, #280]	; 0x118
        boundingArea = calculateBoundingArea();
 8006be4:	f00a fcae 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006be8:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 8006bec:	f504 7390 	add.w	r3, r4, #288	; 0x120
 8006bf0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006bf4:	2328      	movs	r3, #40	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QNY));
 8006bf6:	eb0d 0103 	add.w	r1, sp, r3
 8006bfa:	ee18 0a90 	vmov	r0, s17
 8006bfe:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006c02:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8006c06:	f00a ff37 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c0a:	ee18 1a90 	vmov	r1, s17
 8006c0e:	4630      	mov	r0, r6
 8006c10:	f008 fd7e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8006c14:	230a      	movs	r3, #10
 8006c16:	9300      	str	r3, [sp, #0]
 8006c18:	2232      	movs	r2, #50	; 0x32
 8006c1a:	23f0      	movs	r3, #240	; 0xf0
 8006c1c:	4629      	mov	r1, r5
 8006c1e:	4638      	mov	r0, r7
 8006c20:	f7fb fd7e 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006c24:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c28:	22a0      	movs	r2, #160	; 0xa0
 8006c2a:	f8c4 31a8 	str.w	r3, [r4, #424]	; 0x1a8
        color565 = LCD16bpp::getNativeColor(painterColor);
 8006c2e:	f8a4 31ac 	strh.w	r3, [r4, #428]	; 0x1ac
 8006c32:	9b03      	ldr	r3, [sp, #12]
 8006c34:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 8006c38:	4611      	mov	r1, r2
 8006c3a:	4638      	mov	r0, r7
 8006c3c:	f00a fad6 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8006c40:	22a0      	movs	r2, #160	; 0xa0
 8006c42:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8006c46:	4638      	mov	r0, r7
 8006c48:	f00a fadb 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8006c4c:	f8d4 3168 	ldr.w	r3, [r4, #360]	; 0x168
 8006c50:	2b20      	cmp	r3, #32
 8006c52:	d005      	beq.n	8006c60 <_ZN26Measurement_SingleViewBaseC1Ev+0x2bc>
        lineWidthQ5 = widthQ5;
 8006c54:	2320      	movs	r3, #32
 8006c56:	f8c4 3168 	str.w	r3, [r4, #360]	; 0x168
        updateCachedShape();
 8006c5a:	4638      	mov	r0, r7
 8006c5c:	f00a f9d0 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8006c60:	4638      	mov	r0, r7
 8006c62:	2101      	movs	r1, #1
 8006c64:	f00a fad8 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006c68:	4639      	mov	r1, r7
 8006c6a:	4630      	mov	r0, r6
 8006c6c:	f008 fd50 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8006c70:	f04f 35ff 	mov.w	r5, #4294967295
        boundingArea = calculateBoundingArea();
 8006c74:	af04      	add	r7, sp, #16
    textArea2.setXY(69, 35);
 8006c76:	2223      	movs	r2, #35	; 0x23
 8006c78:	4640      	mov	r0, r8
        linespace = space;
 8006c7a:	f04f 0a00 	mov.w	sl, #0
 8006c7e:	2145      	movs	r1, #69	; 0x45
 8006c80:	f7fb fd41 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006c84:	4641      	mov	r1, r8
 8006c86:	4638      	mov	r0, r7
        color = newColor;
 8006c88:	f8c4 51e0 	str.w	r5, [r4, #480]	; 0x1e0
        linespace = space;
 8006c8c:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8006c90:	f00a fc58 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006c94:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006c98:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8006c9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006ca0:	f8df 9148 	ldr.w	r9, [pc, #328]	; 8006dec <_ZN26Measurement_SingleViewBaseC1Ev+0x448>
 8006ca4:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006ca8:	2341      	movs	r3, #65	; 0x41
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T0FJ));
 8006caa:	a90a      	add	r1, sp, #40	; 0x28
 8006cac:	4640      	mov	r0, r8
 8006cae:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cb2:	f00a fee1 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cb6:	4641      	mov	r1, r8
 8006cb8:	4630      	mov	r0, r6
 8006cba:	f008 fd29 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8006cbe:	ee18 0a10 	vmov	r0, s16
 8006cc2:	220c      	movs	r2, #12
 8006cc4:	2136      	movs	r1, #54	; 0x36
 8006cc6:	f7fb fd1e 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006cca:	ee18 1a10 	vmov	r1, s16
 8006cce:	4638      	mov	r0, r7
        color = newColor;
 8006cd0:	f8c4 5228 	str.w	r5, [r4, #552]	; 0x228
        linespace = space;
 8006cd4:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8006cd8:	f00a fc34 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006cdc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006ce0:	ee18 3a10 	vmov	r3, s16
 8006ce4:	333c      	adds	r3, #60	; 0x3c
 8006ce6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006cea:	2340      	movs	r3, #64	; 0x40
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3BUV));
 8006cec:	ee18 0a10 	vmov	r0, s16
 8006cf0:	a90a      	add	r1, sp, #40	; 0x28
 8006cf2:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8006cf6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8006cfa:	f00a febd 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006cfe:	ee18 1a10 	vmov	r1, s16
 8006d02:	4630      	mov	r0, r6
 8006d04:	f008 fd04 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8006d08:	ee19 0a10 	vmov	r0, s18
 8006d0c:	22f0      	movs	r2, #240	; 0xf0
 8006d0e:	2121      	movs	r1, #33	; 0x21
 8006d10:	f7fb fcf9 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8006d14:	f04f 0903 	mov.w	r9, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d18:	aa0a      	add	r2, sp, #40	; 0x28
 8006d1a:	f04f 0802 	mov.w	r8, #2
 8006d1e:	a909      	add	r1, sp, #36	; 0x24
 8006d20:	ee19 0a10 	vmov	r0, s18
 8006d24:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d28:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
    buttonWithLabel3.setAction(buttonCallback);
 8006d2c:	f504 5789 	add.w	r7, r4, #4384	; 0x1120
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d30:	f00b f887 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8006d34:	233f      	movs	r3, #63	; 0x3f
 8006d36:	f8a4 3278 	strh.w	r3, [r4, #632]	; 0x278
    buttonWithLabel3.setAction(buttonCallback);
 8006d3a:	3710      	adds	r7, #16
        updateTextPosition();
 8006d3c:	ee19 0a10 	vmov	r0, s18
 8006d40:	f7fb fd36 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006d44:	ee19 1a10 	vmov	r1, s18
 8006d48:	4630      	mov	r0, r6
        colorPressed = col;
 8006d4a:	e9c4 559f 	strd	r5, r5, [r4, #636]	; 0x27c
 8006d4e:	f8c4 7268 	str.w	r7, [r4, #616]	; 0x268
 8006d52:	f008 fcdd 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel2.setXY(33, 170);
 8006d56:	ee19 0a90 	vmov	r0, s19
 8006d5a:	22aa      	movs	r2, #170	; 0xaa
 8006d5c:	2121      	movs	r1, #33	; 0x21
 8006d5e:	f7fb fcd2 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006d62:	aa0a      	add	r2, sp, #40	; 0x28
 8006d64:	a909      	add	r1, sp, #36	; 0x24
 8006d66:	ee19 0a90 	vmov	r0, s19
 8006d6a:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006d6e:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006d72:	f00b f866 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006d76:	233e      	movs	r3, #62	; 0x3e
 8006d78:	f8a4 32c0 	strh.w	r3, [r4, #704]	; 0x2c0
        updateTextPosition();
 8006d7c:	ee19 0a90 	vmov	r0, s19
 8006d80:	f7fb fd16 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006d84:	ee19 1a90 	vmov	r1, s19
 8006d88:	4630      	mov	r0, r6
        colorPressed = col;
 8006d8a:	e9c4 55b1 	strd	r5, r5, [r4, #708]	; 0x2c4
 8006d8e:	f8c4 72b0 	str.w	r7, [r4, #688]	; 0x2b0
 8006d92:	f008 fcbd 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel1.setXY(33, 100);
 8006d96:	ee1a 0a10 	vmov	r0, s20
 8006d9a:	2264      	movs	r2, #100	; 0x64
 8006d9c:	2121      	movs	r1, #33	; 0x21
 8006d9e:	f7fb fcb2 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8006da2:	aa0a      	add	r2, sp, #40	; 0x28
 8006da4:	a909      	add	r1, sp, #36	; 0x24
 8006da6:	ee1a 0a10 	vmov	r0, s20
 8006daa:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8006dae:	f8ad 8028 	strh.w	r8, [sp, #40]	; 0x28
 8006db2:	f00b f846 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006db6:	233d      	movs	r3, #61	; 0x3d
        updateTextPosition();
 8006db8:	ee1a 0a10 	vmov	r0, s20
 8006dbc:	f8a4 3308 	strh.w	r3, [r4, #776]	; 0x308
 8006dc0:	f7fb fcf6 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8006dc4:	4630      	mov	r0, r6
        colorPressed = col;
 8006dc6:	e9c4 55c3 	strd	r5, r5, [r4, #780]	; 0x30c
 8006dca:	ee1a 1a10 	vmov	r1, s20
 8006dce:	f8c4 72f8 	str.w	r7, [r4, #760]	; 0x2f8
 8006dd2:	f008 fc9d 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006dd6:	4620      	mov	r0, r4
 8006dd8:	b00d      	add	sp, #52	; 0x34
 8006dda:	ecbd 8b06 	vpop	{d8-d10}
 8006dde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006de2:	bf00      	nop
 8006de4:	20012e18 	.word	0x20012e18
 8006de8:	0802b482 	.word	0x0802b482
 8006dec:	0802b4f8 	.word	0x0802b4f8

08006df0 <_ZN37Measurement_Single_Display_1PViewBase7testGuiEv>:
     * Virtual Action Handlers
     */
    virtual void testGui()
    {
        // Override and implement this function in Measurement_Single_Display_1P
    }
 8006df0:	4770      	bx	lr

08006df2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>:
}

void Measurement_Single_Display_1PViewBase::setupScreen()
{

}
 8006df2:	4770      	bx	lr

08006df4 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006df4:	4770      	bx	lr

08006df6 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006df6:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006df8:	68c2      	ldr	r2, [r0, #12]
 8006dfa:	6844      	ldr	r4, [r0, #4]
 8006dfc:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006dfe:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006e00:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006e04:	07d2      	lsls	r2, r2, #31
 8006e06:	bf48      	it	mi
 8006e08:	5962      	ldrmi	r2, [r4, r5]
 8006e0a:	689b      	ldr	r3, [r3, #8]
    }
 8006e0c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006e0e:	bf48      	it	mi
 8006e10:	58d3      	ldrmi	r3, [r2, r3]
 8006e12:	4718      	bx	r3

08006e14 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006e14:	6843      	ldr	r3, [r0, #4]
 8006e16:	b12b      	cbz	r3, 8006e24 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006e18:	6883      	ldr	r3, [r0, #8]
 8006e1a:	b92b      	cbnz	r3, 8006e28 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006e1c:	68c0      	ldr	r0, [r0, #12]
 8006e1e:	f000 0001 	and.w	r0, r0, #1
 8006e22:	4770      	bx	lr
 8006e24:	4618      	mov	r0, r3
 8006e26:	4770      	bx	lr
 8006e28:	2001      	movs	r0, #1
    }
 8006e2a:	4770      	bx	lr

08006e2c <_ZN8touchgfx8CallbackI37Measurement_Single_Display_1PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006e2c:	b510      	push	{r4, lr}
 8006e2e:	2110      	movs	r1, #16
 8006e30:	4604      	mov	r4, r0
 8006e32:	f021 ff7c 	bl	8028d2e <_ZdlPvj>
 8006e36:	4620      	mov	r0, r4
 8006e38:	bd10      	pop	{r4, pc}
	...

08006e3c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006e3c:	b510      	push	{r4, lr}
 8006e3e:	4b03      	ldr	r3, [pc, #12]	; (8006e4c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev+0x10>)
 8006e40:	6003      	str	r3, [r0, #0]
 8006e42:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e44:	f00c f9fa 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e48:	4620      	mov	r0, r4
 8006e4a:	bd10      	pop	{r4, pc}
 8006e4c:	0802d080 	.word	0x0802d080

08006e50 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev>:
Measurement_Single_Display_1PViewBase::~Measurement_Single_Display_1PViewBase()
 8006e50:	b507      	push	{r0, r1, r2, lr}
 8006e52:	4b07      	ldr	r3, [pc, #28]	; (8006e70 <_ZN37Measurement_Single_Display_1PViewBaseD0Ev+0x20>)
 8006e54:	6003      	str	r3, [r0, #0]
 8006e56:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8006e58:	f00c f9f0 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8006e5c:	9801      	ldr	r0, [sp, #4]
 8006e5e:	f241 31f8 	movw	r1, #5112	; 0x13f8
 8006e62:	f021 ff64 	bl	8028d2e <_ZdlPvj>
 8006e66:	9801      	ldr	r0, [sp, #4]
 8006e68:	b003      	add	sp, #12
 8006e6a:	f85d fb04 	ldr.w	pc, [sp], #4
 8006e6e:	bf00      	nop
 8006e70:	0802d080 	.word	0x0802d080

08006e74 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv>:
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}

void Measurement_Single_Display_1PViewBase::handleTickEvent()
{
 8006e74:	b510      	push	{r4, lr}
    frameCountInteraction2Interval++;
 8006e76:	f500 5480 	add.w	r4, r0, #4096	; 0x1000
 8006e7a:	f8d4 23f4 	ldr.w	r2, [r4, #1012]	; 0x3f4
 8006e7e:	3201      	adds	r2, #1
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006e80:	2a32      	cmp	r2, #50	; 0x32
    frameCountInteraction2Interval++;
 8006e82:	f8c4 23f4 	str.w	r2, [r4, #1012]	; 0x3f4
    if(frameCountInteraction2Interval == TICK_INTERACTION2_INTERVAL)
 8006e86:	d105      	bne.n	8006e94 <_ZN37Measurement_Single_Display_1PViewBase15handleTickEventEv+0x20>
    {
        //Interaction2
        //When every N tick call virtual function
        //Call testGui
        testGui();
 8006e88:	6803      	ldr	r3, [r0, #0]
 8006e8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006e8c:	4798      	blx	r3
        frameCountInteraction2Interval = 0;
 8006e8e:	2300      	movs	r3, #0
 8006e90:	f8c4 33f4 	str.w	r3, [r4, #1012]	; 0x3f4
    }
}
 8006e94:	bd10      	pop	{r4, pc}

08006e96 <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonWithLabel3)
 8006e96:	f500 60aa 	add.w	r0, r0, #1360	; 0x550
 8006e9a:	4288      	cmp	r0, r1
{
 8006e9c:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8006e9e:	d105      	bne.n	8006eac <_ZN37Measurement_Single_Display_1PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8006ea0:	f00d fece 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
}
 8006ea4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8006ea8:	f7fc bd54 	b.w	8003954 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8006eac:	bd08      	pop	{r3, pc}
	...

08006eb0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>:
Measurement_Single_Display_1PViewBase::Measurement_Single_Display_1PViewBase() :
 8006eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006eb4:	ed2d 8b0a 	vpush	{d8-d12}
 8006eb8:	4604      	mov	r4, r0
 8006eba:	b08d      	sub	sp, #52	; 0x34
    frameCountInteraction2Interval(0)
 8006ebc:	46a1      	mov	r9, r4
 8006ebe:	2500      	movs	r5, #0
 8006ec0:	f00f fb3e 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8006ec4:	4ba9      	ldr	r3, [pc, #676]	; (800716c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2bc>)
 8006ec6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8006ec8:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8006ecc:	2226      	movs	r2, #38	; 0x26
 8006ece:	4629      	mov	r1, r5
 8006ed0:	4648      	mov	r0, r9
 8006ed2:	f022 ff44 	bl	8029d5e <memset>
 8006ed6:	4648      	mov	r0, r9
 8006ed8:	f7fb fc36 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8006edc:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8006ee0:	26ff      	movs	r6, #255	; 0xff
 8006ee2:	4ba3      	ldr	r3, [pc, #652]	; (8007170 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c0>)
 8006ee4:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8006ee6:	2226      	movs	r2, #38	; 0x26
 8006ee8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006eec:	4629      	mov	r1, r5
 8006eee:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8006ef2:	4640      	mov	r0, r8
 8006ef4:	66a5      	str	r5, [r4, #104]	; 0x68
 8006ef6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8006efa:	f022 ff30 	bl	8029d5e <memset>
 8006efe:	4640      	mov	r0, r8
 8006f00:	f7fb fc22 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8006f04:	4b9b      	ldr	r3, [pc, #620]	; (8007174 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c4>)
 8006f06:	66e3      	str	r3, [r4, #108]	; 0x6c
 8006f08:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8006f0c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8006f10:	a90a      	add	r1, sp, #40	; 0x28
 8006f12:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8006f16:	4640      	mov	r0, r8
        : Widget(), bitmap(bmp), alpha(255)
 8006f18:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8006f1c:	f00b f987 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006f20:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8006f24:	4658      	mov	r0, fp
 8006f26:	f7fb fc21 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f2a:	4638      	mov	r0, r7
 8006f2c:	f00a fe42 	bl	8011bb4 <_ZN8touchgfx5GaugeC1Ev>
 8006f30:	f504 7320 	add.w	r3, r4, #640	; 0x280
        : TextArea()
 8006f34:	4618      	mov	r0, r3
 8006f36:	ee09 3a10 	vmov	s18, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006f3a:	4e8f      	ldr	r6, [pc, #572]	; (8007178 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2c8>)
        : TextArea()
 8006f3c:	f7fb fc16 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f40:	f504 7333 	add.w	r3, r4, #716	; 0x2cc
        : TextAreaWithWildcardBase(), wc1(0)
 8006f44:	f8c4 6280 	str.w	r6, [r4, #640]	; 0x280
        : TextArea()
 8006f48:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006f4a:	f8c4 52c8 	str.w	r5, [r4, #712]	; 0x2c8
 8006f4e:	ee09 3a90 	vmov	s19, r3
        : TextArea()
 8006f52:	f7fb fc0b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f56:	f504 7346 	add.w	r3, r4, #792	; 0x318
        : TextAreaWithWildcardBase(), wc1(0)
 8006f5a:	f8c4 62cc 	str.w	r6, [r4, #716]	; 0x2cc
        : TextArea()
 8006f5e:	4618      	mov	r0, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8006f60:	f8c4 5314 	str.w	r5, [r4, #788]	; 0x314
 8006f64:	ee0a 3a10 	vmov	s20, r3
        : TextArea()
 8006f68:	f7fb fc00 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f6c:	f504 7359 	add.w	r3, r4, #868	; 0x364
        : TextAreaWithWildcardBase(), wc1(0)
 8006f70:	f8c4 6318 	str.w	r6, [r4, #792]	; 0x318
 8006f74:	4618      	mov	r0, r3
 8006f76:	f8c4 5360 	str.w	r5, [r4, #864]	; 0x360
 8006f7a:	ee0a 3a90 	vmov	s21, r3
 8006f7e:	f7fb fbf5 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f82:	f504 736b 	add.w	r3, r4, #940	; 0x3ac
 8006f86:	4618      	mov	r0, r3
 8006f88:	ee0b 3a10 	vmov	s22, r3
 8006f8c:	f7fb fbee 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006f90:	f504 737d 	add.w	r3, r4, #1012	; 0x3f4
 8006f94:	4618      	mov	r0, r3
 8006f96:	f204 4a3c 	addw	sl, r4, #1084	; 0x43c
 8006f9a:	ee0b 3a90 	vmov	s23, r3
 8006f9e:	f7fb fbe5 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006fa2:	4650      	mov	r0, sl
 8006fa4:	f00a f80c 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 8006fa8:	f204 43ac 	addw	r3, r4, #1196	; 0x4ac
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8006fac:	4618      	mov	r0, r3
 8006fae:	9303      	str	r3, [sp, #12]
 8006fb0:	f7fa f848 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8006fb4:	4b71      	ldr	r3, [pc, #452]	; (800717c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2cc>)
 8006fb6:	f8c4 34ac 	str.w	r3, [r4, #1196]	; 0x4ac
 8006fba:	3324      	adds	r3, #36	; 0x24
 8006fbc:	f8c4 34b4 	str.w	r3, [r4, #1204]	; 0x4b4
 8006fc0:	f504 6398 	add.w	r3, r4, #1216	; 0x4c0
 8006fc4:	4618      	mov	r0, r3
 8006fc6:	f8c4 54b8 	str.w	r5, [r4, #1208]	; 0x4b8
 8006fca:	ee08 3a10 	vmov	s16, r3
 8006fce:	f7fb fbcd 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006fd2:	f504 63a1 	add.w	r3, r4, #1288	; 0x508
 8006fd6:	4618      	mov	r0, r3
 8006fd8:	ee08 3a90 	vmov	s17, r3
 8006fdc:	f7fb fbc6 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8006fe0:	f504 63aa 	add.w	r3, r4, #1360	; 0x550
 8006fe4:	4618      	mov	r0, r3
 8006fe6:	ee0c 3a10 	vmov	s24, r3
 8006fea:	f00b fa61 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8006fee:	4a64      	ldr	r2, [pc, #400]	; (8007180 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d0>)
 8006ff0:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8006ff4:	e9c3 24f9 	strd	r2, r4, [r3, #996]	; 0x3e4
 8006ff8:	4a62      	ldr	r2, [pc, #392]	; (8007184 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d4>)
 8006ffa:	f8c3 53f4 	str.w	r5, [r3, #1012]	; 0x3f4
 8006ffe:	e9c3 25fb 	strd	r2, r5, [r3, #1004]	; 0x3ec
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007002:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007006:	f204 50d4 	addw	r0, r4, #1492	; 0x5d4
 800700a:	f00c f90d 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 800700e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007012:	462a      	mov	r2, r5
 8007014:	4648      	mov	r0, r9
 8007016:	9300      	str	r3, [sp, #0]
 8007018:	4629      	mov	r1, r5
 800701a:	23f0      	movs	r3, #240	; 0xf0
 800701c:	f7fb fb80 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007020:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007022:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007026:	66a3      	str	r3, [r4, #104]	; 0x68
 8007028:	4649      	mov	r1, r9
 800702a:	4630      	mov	r0, r6
 800702c:	f008 fb70 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007030:	462a      	mov	r2, r5
 8007032:	4640      	mov	r0, r8
 8007034:	4629      	mov	r1, r5
 8007036:	f7fb fb66 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800703a:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 800703c:	4640      	mov	r0, r8
 800703e:	a90a      	add	r1, sp, #40	; 0x28
 8007040:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007044:	f00b f8f3 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007048:	4641      	mov	r1, r8
 800704a:	4630      	mov	r0, r6
 800704c:	f008 fb60 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 8007050:	223c      	movs	r2, #60	; 0x3c
 8007052:	211f      	movs	r1, #31
 8007054:	4658      	mov	r0, fp
 8007056:	f7fb fb56 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 800705a:	f10d 0810 	add.w	r8, sp, #16
        color = newColor;
 800705e:	f04f 33ff 	mov.w	r3, #4294967295
 8007062:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007066:	4659      	mov	r1, fp
 8007068:	4640      	mov	r0, r8
        linespace = space;
 800706a:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 800706e:	f00a fa69 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007072:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007076:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800707a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800707e:	4b42      	ldr	r3, [pc, #264]	; (8007188 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2d8>)
 8007080:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M3QF));
 8007082:	a90a      	add	r1, sp, #40	; 0x28
 8007084:	2327      	movs	r3, #39	; 0x27
 8007086:	4658      	mov	r0, fp
 8007088:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800708c:	f00a fcf4 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007090:	4659      	mov	r1, fp
 8007092:	4630      	mov	r0, r6
 8007094:	f008 fb3c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007098:	f04f 0304 	mov.w	r3, #4
    SMD1_gauge.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_BACKGROUNDS_LIGHT_PRECISION_ID));
 800709c:	4638      	mov	r0, r7
 800709e:	a90a      	add	r1, sp, #40	; 0x28
 80070a0:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80070a4:	f008 fac6 	bl	800f634 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    SMD1_gauge.setPosition(28, 94, 184, 106);
 80070a8:	236a      	movs	r3, #106	; 0x6a
 80070aa:	4638      	mov	r0, r7
 80070ac:	9300      	str	r3, [sp, #0]
 80070ae:	225e      	movs	r2, #94	; 0x5e
 80070b0:	23b8      	movs	r3, #184	; 0xb8
 80070b2:	211c      	movs	r1, #28
 80070b4:	f7fb fb34 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
    SMD1_gauge.setCenter(92, 92);
 80070b8:	225c      	movs	r2, #92	; 0x5c
 80070ba:	4611      	mov	r1, r2
 80070bc:	4638      	mov	r0, r7
 80070be:	f00a fe24 	bl	8011d0a <_ZN8touchgfx5Gauge9setCenterEii>
    SMD1_gauge.setStartEndAngle(-90, 90);
 80070c2:	4638      	mov	r0, r7
 80070c4:	225a      	movs	r2, #90	; 0x5a
 80070c6:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80070ca:	f00a fea3 	bl	8011e14 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    SMD1_gauge.setRange(-90, 90);
 80070ce:	462b      	mov	r3, r5
 80070d0:	225a      	movs	r2, #90	; 0x5a
 80070d2:	4638      	mov	r0, r7
 80070d4:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80070d8:	9500      	str	r5, [sp, #0]
 80070da:	f008 f958 	bl	800f38e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    SMD1_gauge.setValue(0);
 80070de:	4638      	mov	r0, r7
 80070e0:	4629      	mov	r1, r5
 80070e2:	f00a fe41 	bl	8011d68 <_ZN8touchgfx5Gauge8setValueEi>
    SMD1_gauge.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_SMALL_NEEDLES_ROUGH_ID, 8, 53);
 80070e6:	2335      	movs	r3, #53	; 0x35
 80070e8:	2208      	movs	r2, #8
 80070ea:	4638      	mov	r0, r7
 80070ec:	2105      	movs	r1, #5
 80070ee:	f00a fdf7 	bl	8011ce0 <_ZN8touchgfx5Gauge9setNeedleEtss>
    SMD1_gauge.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80070f2:	4638      	mov	r0, r7
 80070f4:	2101      	movs	r1, #1
 80070f6:	f00a fd95 	bl	8011c24 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    SMD1_gauge.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80070fa:	4638      	mov	r0, r7
 80070fc:	2101      	movs	r1, #1
 80070fe:	f00a fd94 	bl	8011c2a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
 8007102:	4639      	mov	r1, r7
 8007104:	4630      	mov	r0, r6
 8007106:	f008 fb03 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Current.setPosition(0, 230, 240, 15);
 800710a:	230f      	movs	r3, #15
 800710c:	22e6      	movs	r2, #230	; 0xe6
 800710e:	ee19 0a10 	vmov	r0, s18
 8007112:	9300      	str	r3, [sp, #0]
 8007114:	4629      	mov	r1, r5
 8007116:	23f0      	movs	r3, #240	; 0xf0
 8007118:	f7fb fb02 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800711c:	f04f 33ff 	mov.w	r3, #4294967295
 8007120:	f8c4 32b0 	str.w	r3, [r4, #688]	; 0x2b0
        boundingArea = calculateBoundingArea();
 8007124:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
        linespace = space;
 8007128:	f8a4 52b4 	strh.w	r5, [r4, #692]	; 0x2b4
        boundingArea = calculateBoundingArea();
 800712c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007130:	4f16      	ldr	r7, [pc, #88]	; (800718c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2dc>)
 8007132:	ee19 1a10 	vmov	r1, s18
 8007136:	4640      	mov	r0, r8
 8007138:	4798      	blx	r3
 800713a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800713e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007142:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007146:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1WKT).getText());
 8007148:	f504 69b3 	add.w	r9, r4, #1432	; 0x598
 800714c:	b92b      	cbnz	r3, 800715a <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2aa>
 800714e:	4b10      	ldr	r3, [pc, #64]	; (8007190 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e0>)
 8007150:	4a10      	ldr	r2, [pc, #64]	; (8007194 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007152:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007154:	4810      	ldr	r0, [pc, #64]	; (8007198 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e8>)
 8007156:	f022 fbfd 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800715a:	f8df b044 	ldr.w	fp, [pc, #68]	; 80071a0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f0>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800715e:	f8bb 3000 	ldrh.w	r3, [fp]
 8007162:	b9fb      	cbnz	r3, 80071a4 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2f4>
 8007164:	4b0d      	ldr	r3, [pc, #52]	; (800719c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2ec>)
 8007166:	4a0b      	ldr	r2, [pc, #44]	; (8007194 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2e4>)
 8007168:	2161      	movs	r1, #97	; 0x61
 800716a:	e7f3      	b.n	8007154 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2a4>
 800716c:	0802d080 	.word	0x0802d080
 8007170:	0802de70 	.word	0x0802de70
 8007174:	0802e038 	.word	0x0802e038
 8007178:	0802b508 	.word	0x0802b508
 800717c:	0802dba4 	.word	0x0802dba4
 8007180:	0802d068 	.word	0x0802d068
 8007184:	08006e97 	.word	0x08006e97
 8007188:	0802b4f8 	.word	0x0802b4f8
 800718c:	20012e0c 	.word	0x20012e0c
 8007190:	0802b348 	.word	0x0802b348
 8007194:	0802b44a 	.word	0x0802b44a
 8007198:	0802b3c5 	.word	0x0802b3c5
 800719c:	0802b40c 	.word	0x0802b40c
 80071a0:	20012e10 	.word	0x20012e10
        return texts->getText(typedTextId);
 80071a4:	4bdf      	ldr	r3, [pc, #892]	; (8007524 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 80071a6:	4629      	mov	r1, r5
 80071a8:	6818      	ldr	r0, [r3, #0]
 80071aa:	f000 ffc1 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80071ae:	4ade      	ldr	r2, [pc, #888]	; (8007528 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80071b0:	4603      	mov	r3, r0
 80071b2:	210a      	movs	r1, #10
 80071b4:	4648      	mov	r0, r9
 80071b6:	f010 feb3 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80071ba:	4bdc      	ldr	r3, [pc, #880]	; (800752c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        wc1 = value;
 80071bc:	f8c4 92c8 	str.w	r9, [r4, #712]	; 0x2c8
    SMD1_Current.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y5P8));
 80071c0:	ee19 0a10 	vmov	r0, s18
 80071c4:	930a      	str	r3, [sp, #40]	; 0x28
 80071c6:	a90a      	add	r1, sp, #40	; 0x28
 80071c8:	2303      	movs	r3, #3
 80071ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80071ce:	f00a fc53 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80071d2:	ee19 1a10 	vmov	r1, s18
 80071d6:	4630      	mov	r0, r6
 80071d8:	f008 fa9a 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Frequency.setPosition(0, 215, 240, 15);
 80071dc:	210f      	movs	r1, #15
 80071de:	22d7      	movs	r2, #215	; 0xd7
 80071e0:	ee19 0a90 	vmov	r0, s19
 80071e4:	9100      	str	r1, [sp, #0]
 80071e6:	23f0      	movs	r3, #240	; 0xf0
 80071e8:	4629      	mov	r1, r5
 80071ea:	f7fb fa99 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 80071ee:	f8d4 32cc 	ldr.w	r3, [r4, #716]	; 0x2cc
        linespace = space;
 80071f2:	f8a4 5300 	strh.w	r5, [r4, #768]	; 0x300
        color = newColor;
 80071f6:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 80071fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80071fe:	f8c4 12fc 	str.w	r1, [r4, #764]	; 0x2fc
        boundingArea = calculateBoundingArea();
 8007202:	4640      	mov	r0, r8
 8007204:	ee19 1a90 	vmov	r1, s19
 8007208:	4798      	blx	r3
 800720a:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800720e:	f504 7342 	add.w	r3, r4, #776	; 0x308
 8007212:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007216:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9OHS).getText());
 8007218:	f204 59ac 	addw	r9, r4, #1452	; 0x5ac
 800721c:	2b00      	cmp	r3, #0
 800721e:	d096      	beq.n	800714e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007220:	f8bb 3000 	ldrh.w	r3, [fp]
 8007224:	2b01      	cmp	r3, #1
 8007226:	d99d      	bls.n	8007164 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 8007228:	4abe      	ldr	r2, [pc, #760]	; (8007524 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
 800722a:	2101      	movs	r1, #1
 800722c:	6810      	ldr	r0, [r2, #0]
 800722e:	f000 ff7f 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8007232:	4abd      	ldr	r2, [pc, #756]	; (8007528 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 8007234:	4603      	mov	r3, r0
 8007236:	210a      	movs	r1, #10
 8007238:	4648      	mov	r0, r9
 800723a:	f010 fe71 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800723e:	f04f 0104 	mov.w	r1, #4
 8007242:	4bba      	ldr	r3, [pc, #744]	; (800752c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
 8007244:	f8c4 9314 	str.w	r9, [r4, #788]	; 0x314
    SMD1_Frequency.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PCCW));
 8007248:	ee19 0a90 	vmov	r0, s19
 800724c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8007250:	a90a      	add	r1, sp, #40	; 0x28
 8007252:	930a      	str	r3, [sp, #40]	; 0x28
 8007254:	f00a fc10 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007258:	ee19 1a90 	vmov	r1, s19
 800725c:	4630      	mov	r0, r6
 800725e:	f008 fa57 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    SMD1_Distance.setPosition(0, 200, 240, 15);
 8007262:	210f      	movs	r1, #15
 8007264:	22c8      	movs	r2, #200	; 0xc8
 8007266:	ee1a 0a10 	vmov	r0, s20
 800726a:	9100      	str	r1, [sp, #0]
 800726c:	23f0      	movs	r3, #240	; 0xf0
 800726e:	4629      	mov	r1, r5
 8007270:	f7fb fa56 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007274:	f8d4 3318 	ldr.w	r3, [r4, #792]	; 0x318
        linespace = space;
 8007278:	f8a4 534c 	strh.w	r5, [r4, #844]	; 0x34c
        color = newColor;
 800727c:	f04f 31ff 	mov.w	r1, #4294967295
        boundingArea = calculateBoundingArea();
 8007280:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007284:	f8c4 1348 	str.w	r1, [r4, #840]	; 0x348
        boundingArea = calculateBoundingArea();
 8007288:	4640      	mov	r0, r8
 800728a:	ee1a 1a10 	vmov	r1, s20
 800728e:	4798      	blx	r3
 8007290:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007294:	f504 7355 	add.w	r3, r4, #852	; 0x354
 8007298:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800729c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LVUK).getText());
 800729e:	f504 69b8 	add.w	r9, r4, #1472	; 0x5c0
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	f43f af53 	beq.w	800714e <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x29e>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80072a8:	f8bb 3000 	ldrh.w	r3, [fp]
 80072ac:	2b02      	cmp	r3, #2
 80072ae:	f67f af59 	bls.w	8007164 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x2b4>
        return texts->getText(typedTextId);
 80072b2:	4a9c      	ldr	r2, [pc, #624]	; (8007524 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x674>)
        : typedTextId(id)
 80072b4:	4f9d      	ldr	r7, [pc, #628]	; (800752c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>)
        return texts->getText(typedTextId);
 80072b6:	6810      	ldr	r0, [r2, #0]
 80072b8:	2102      	movs	r1, #2
 80072ba:	f000 ff39 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80072be:	4a9a      	ldr	r2, [pc, #616]	; (8007528 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x678>)
 80072c0:	4603      	mov	r3, r0
 80072c2:	210a      	movs	r1, #10
 80072c4:	4648      	mov	r0, r9
 80072c6:	f010 fe2b 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80072ca:	2305      	movs	r3, #5
    SMD1_Distance.setTypedText(touchgfx::TypedText(T_SMD1_DISTANCE));
 80072cc:	ee1a 0a10 	vmov	r0, s20
 80072d0:	a90a      	add	r1, sp, #40	; 0x28
 80072d2:	f8c4 9360 	str.w	r9, [r4, #864]	; 0x360
 80072d6:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80072da:	970a      	str	r7, [sp, #40]	; 0x28
 80072dc:	f00a fbcc 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80072e0:	ee1a 1a10 	vmov	r1, s20
 80072e4:	4630      	mov	r0, r6
 80072e6:	f008 fa13 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4.setXY(113, 76);
 80072ea:	224c      	movs	r2, #76	; 0x4c
 80072ec:	ee1a 0a90 	vmov	r0, s21
 80072f0:	2171      	movs	r1, #113	; 0x71
 80072f2:	f7fb fa08 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80072f6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 80072fa:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 80072fe:	f8c4 3394 	str.w	r3, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 8007302:	4640      	mov	r0, r8
        linespace = space;
 8007304:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 8007308:	f00a f91c 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800730c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8007310:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 8007314:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007318:	2306      	movs	r3, #6
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q5GP));
 800731a:	ee1a 0a90 	vmov	r0, s21
 800731e:	a90a      	add	r1, sp, #40	; 0x28
 8007320:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007324:	970a      	str	r7, [sp, #40]	; 0x28
 8007326:	f00a fba7 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800732a:	ee1a 1a90 	vmov	r1, s21
 800732e:	4630      	mov	r0, r6
 8007330:	f008 f9ee 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_1.setXY(0, 185);
 8007334:	22b9      	movs	r2, #185	; 0xb9
 8007336:	ee1b 0a10 	vmov	r0, s22
 800733a:	4629      	mov	r1, r5
 800733c:	f7fb f9e3 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007340:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8007344:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8007348:	f8c4 33dc 	str.w	r3, [r4, #988]	; 0x3dc
        boundingArea = calculateBoundingArea();
 800734c:	4640      	mov	r0, r8
        linespace = space;
 800734e:	f8a4 53e0 	strh.w	r5, [r4, #992]	; 0x3e0
        boundingArea = calculateBoundingArea();
 8007352:	f00a f8f7 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007356:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 800735a:	f504 737a 	add.w	r3, r4, #1000	; 0x3e8
 800735e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007362:	2307      	movs	r3, #7
    textArea4_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VCZH));
 8007364:	ee1b 0a10 	vmov	r0, s22
 8007368:	a90a      	add	r1, sp, #40	; 0x28
 800736a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800736e:	970a      	str	r7, [sp, #40]	; 0x28
 8007370:	f00a fb82 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007374:	ee1b 1a10 	vmov	r1, s22
 8007378:	4630      	mov	r0, r6
 800737a:	f008 f9c9 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea4_2.setXY(217, 185);
 800737e:	22b9      	movs	r2, #185	; 0xb9
 8007380:	ee1b 0a90 	vmov	r0, s23
 8007384:	21d9      	movs	r1, #217	; 0xd9
 8007386:	f7fb f9be 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800738a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800738e:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8007392:	f8c4 3424 	str.w	r3, [r4, #1060]	; 0x424
        boundingArea = calculateBoundingArea();
 8007396:	4640      	mov	r0, r8
        linespace = space;
 8007398:	f8a4 5428 	strh.w	r5, [r4, #1064]	; 0x428
        boundingArea = calculateBoundingArea();
 800739c:	f00a f8d2 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073a0:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 80073a4:	f504 6386 	add.w	r3, r4, #1072	; 0x430
 80073a8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80073ac:	2308      	movs	r3, #8
    textArea4_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B5GD));
 80073ae:	ee1b 0a90 	vmov	r0, s23
 80073b2:	a90a      	add	r1, sp, #40	; 0x28
 80073b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80073b8:	970a      	str	r7, [sp, #40]	; 0x28
 80073ba:	f00a fb5d 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80073be:	ee1b 1a90 	vmov	r1, s23
 80073c2:	4630      	mov	r0, r6
 80073c4:	f008 f9a4 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 80073c8:	230a      	movs	r3, #10
 80073ca:	9300      	str	r3, [sp, #0]
 80073cc:	2232      	movs	r2, #50	; 0x32
 80073ce:	23f0      	movs	r3, #240	; 0xf0
 80073d0:	4629      	mov	r1, r5
 80073d2:	4650      	mov	r0, sl
 80073d4:	f7fb f9a4 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 80073d8:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80073dc:	22a0      	movs	r2, #160	; 0xa0
 80073de:	f8c4 34b8 	str.w	r3, [r4, #1208]	; 0x4b8
        color565 = LCD16bpp::getNativeColor(painterColor);
 80073e2:	f8a4 34bc 	strh.w	r3, [r4, #1212]	; 0x4bc
 80073e6:	9b03      	ldr	r3, [sp, #12]
 80073e8:	f8c4 3464 	str.w	r3, [r4, #1124]	; 0x464
 80073ec:	4611      	mov	r1, r2
 80073ee:	4650      	mov	r0, sl
 80073f0:	f009 fefc 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80073f4:	22a0      	movs	r2, #160	; 0xa0
 80073f6:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 80073fa:	4650      	mov	r0, sl
 80073fc:	f009 ff01 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007400:	f8d4 3478 	ldr.w	r3, [r4, #1144]	; 0x478
 8007404:	2b20      	cmp	r3, #32
 8007406:	d005      	beq.n	8007414 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x564>
        lineWidthQ5 = widthQ5;
 8007408:	2320      	movs	r3, #32
 800740a:	f8c4 3478 	str.w	r3, [r4, #1144]	; 0x478
        updateCachedShape();
 800740e:	4650      	mov	r0, sl
 8007410:	f009 fdf6 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007414:	4650      	mov	r0, sl
 8007416:	2101      	movs	r1, #1
 8007418:	f009 fefe 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800741c:	4651      	mov	r1, sl
 800741e:	4630      	mov	r0, r6
 8007420:	f008 f976 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007424:	f04f 37ff 	mov.w	r7, #4294967295
        boundingArea = calculateBoundingArea();
 8007428:	ad04      	add	r5, sp, #16
    textArea2.setXY(69, 35);
 800742a:	ee18 0a10 	vmov	r0, s16
 800742e:	2223      	movs	r2, #35	; 0x23
        linespace = space;
 8007430:	f04f 0900 	mov.w	r9, #0
 8007434:	2145      	movs	r1, #69	; 0x45
 8007436:	f7fb f966 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800743a:	ee18 1a10 	vmov	r1, s16
 800743e:	4628      	mov	r0, r5
        color = newColor;
 8007440:	f8c4 74f0 	str.w	r7, [r4, #1264]	; 0x4f0
        linespace = space;
 8007444:	f8a4 94f4 	strh.w	r9, [r4, #1268]	; 0x4f4
        boundingArea = calculateBoundingArea();
 8007448:	f00a f87c 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800744c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007450:	ee18 3a10 	vmov	r3, s16
 8007454:	333c      	adds	r3, #60	; 0x3c
 8007456:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800745a:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800752c <_ZN37Measurement_Single_Display_1PViewBaseC1Ev+0x67c>
 800745e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 8007462:	2334      	movs	r3, #52	; 0x34
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9O3K));
 8007464:	ee18 0a10 	vmov	r0, s16
 8007468:	a90a      	add	r1, sp, #40	; 0x28
 800746a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800746e:	f00a fb03 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007472:	ee18 1a10 	vmov	r1, s16
 8007476:	4630      	mov	r0, r6
 8007478:	f008 f94a 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 800747c:	ee18 0a90 	vmov	r0, s17
 8007480:	220c      	movs	r2, #12
 8007482:	2136      	movs	r1, #54	; 0x36
 8007484:	f7fb f93f 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007488:	ee18 1a90 	vmov	r1, s17
 800748c:	4628      	mov	r0, r5
        color = newColor;
 800748e:	f8c4 7538 	str.w	r7, [r4, #1336]	; 0x538
        linespace = space;
 8007492:	f8a4 953c 	strh.w	r9, [r4, #1340]	; 0x53c
        boundingArea = calculateBoundingArea();
 8007496:	f00a f855 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800749a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800749e:	ee18 3a90 	vmov	r3, s17
 80074a2:	333c      	adds	r3, #60	; 0x3c
 80074a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80074a8:	2333      	movs	r3, #51	; 0x33
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T27V));
 80074aa:	ee18 0a90 	vmov	r0, s17
 80074ae:	a90a      	add	r1, sp, #40	; 0x28
 80074b0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80074b4:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80074b8:	f00a fade 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80074bc:	ee18 1a90 	vmov	r1, s17
 80074c0:	4630      	mov	r0, r6
 80074c2:	f008 f925 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 256);
 80074c6:	ee1c 0a10 	vmov	r0, s24
 80074ca:	f44f 7280 	mov.w	r2, #256	; 0x100
 80074ce:	2121      	movs	r1, #33	; 0x21
 80074d0:	f7fb f919 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80074d4:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 80074d6:	aa0a      	add	r2, sp, #40	; 0x28
 80074d8:	a909      	add	r1, sp, #36	; 0x24
 80074da:	ee1c 0a10 	vmov	r0, s24
 80074de:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80074e2:	2302      	movs	r3, #2
 80074e4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80074e8:	f00a fcab 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80074ec:	2332      	movs	r3, #50	; 0x32
        updateTextPosition();
 80074ee:	ee1c 0a10 	vmov	r0, s24
 80074f2:	f8a4 3588 	strh.w	r3, [r4, #1416]	; 0x588
 80074f6:	f7fb f95b 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 80074fa:	f504 539f 	add.w	r3, r4, #5088	; 0x13e0
 80074fe:	3304      	adds	r3, #4
 8007500:	4630      	mov	r0, r6
 8007502:	ee1c 1a10 	vmov	r1, s24
        color = col;
 8007506:	f8c4 758c 	str.w	r7, [r4, #1420]	; 0x58c
        colorPressed = col;
 800750a:	f8c4 7590 	str.w	r7, [r4, #1424]	; 0x590
 800750e:	f8c4 3578 	str.w	r3, [r4, #1400]	; 0x578
 8007512:	f008 f8fd 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007516:	4620      	mov	r0, r4
 8007518:	b00d      	add	sp, #52	; 0x34
 800751a:	ecbd 8b0a 	vpop	{d8-d12}
 800751e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007522:	bf00      	nop
 8007524:	20012e18 	.word	0x20012e18
 8007528:	0802b482 	.word	0x0802b482
 800752c:	0802b4f8 	.word	0x0802b4f8

08007530 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007530:	4770      	bx	lr

08007532 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007532:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007534:	68c2      	ldr	r2, [r0, #12]
 8007536:	6844      	ldr	r4, [r0, #4]
 8007538:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800753a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800753c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007540:	07d2      	lsls	r2, r2, #31
 8007542:	bf48      	it	mi
 8007544:	5962      	ldrmi	r2, [r4, r5]
 8007546:	689b      	ldr	r3, [r3, #8]
    }
 8007548:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800754a:	bf48      	it	mi
 800754c:	58d3      	ldrmi	r3, [r2, r3]
 800754e:	4718      	bx	r3

08007550 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007550:	6843      	ldr	r3, [r0, #4]
 8007552:	b12b      	cbz	r3, 8007560 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007554:	6883      	ldr	r3, [r0, #8]
 8007556:	b92b      	cbnz	r3, 8007564 <_ZNK8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007558:	68c0      	ldr	r0, [r0, #12]
 800755a:	f000 0001 	and.w	r0, r0, #1
 800755e:	4770      	bx	lr
 8007560:	4618      	mov	r0, r3
 8007562:	4770      	bx	lr
 8007564:	2001      	movs	r0, #1
    }
 8007566:	4770      	bx	lr

08007568 <_ZN8touchgfx8CallbackI37Measurement_Single_Display_3PViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8007568:	b510      	push	{r4, lr}
 800756a:	2110      	movs	r1, #16
 800756c:	4604      	mov	r4, r0
 800756e:	f021 fbde 	bl	8028d2e <_ZdlPvj>
 8007572:	4620      	mov	r0, r4
 8007574:	bd10      	pop	{r4, pc}

08007576 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>:
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Measurement_Single_Display_3PViewBase::setupScreen()
{
    gauge_with_Values1.initialize();
 8007576:	f500 700f 	add.w	r0, r0, #572	; 0x23c
 800757a:	f000 bf21 	b.w	80083c0 <_ZN17Gauge_with_Values10initializeEv>

0800757e <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
}

void Measurement_Single_Display_3PViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 800757e:	f500 70fa 	add.w	r0, r0, #500	; 0x1f4
 8007582:	4288      	cmp	r0, r1
{
 8007584:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 8007586:	d105      	bne.n	8007594 <_ZN37Measurement_Single_Display_3PViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Measurement_Single_Display_3PViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007588:	f00d fb5a 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Measurement_Single
        //Go to Measurement_Single with screen transition towards East
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
    }
}
 800758c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMeasurement_SingleScreenWipeTransitionEast();
 8007590:	f7fc b9e0 	b.w	8003954 <_ZN23FrontendApplicationBase46gotoMeasurement_SingleScreenWipeTransitionEastEv>
}
 8007594:	bd08      	pop	{r3, pc}
	...

08007598 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 8007598:	b510      	push	{r4, lr}
 800759a:	4b07      	ldr	r3, [pc, #28]	; (80075b8 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x20>)
 800759c:	6003      	str	r3, [r0, #0]
 800759e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80075a0:	f00b fe4c 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
 80075a4:	4b05      	ldr	r3, [pc, #20]	; (80075bc <_ZN37Measurement_Single_Display_3PViewBaseD1Ev+0x24>)
 80075a6:	f8c4 323c 	str.w	r3, [r4, #572]	; 0x23c
 80075aa:	f504 700f 	add.w	r0, r4, #572	; 0x23c
 80075ae:	f7fd fc77 	bl	8004ea0 <_ZN21Gauge_with_ValuesBaseD1Ev>
}
 80075b2:	4620      	mov	r0, r4
 80075b4:	bd10      	pop	{r4, pc}
 80075b6:	bf00      	nop
 80075b8:	0802d0d0 	.word	0x0802d0d0
 80075bc:	0802d4f4 	.word	0x0802d4f4

080075c0 <_ZN37Measurement_Single_Display_3PViewBaseD0Ev>:
Measurement_Single_Display_3PViewBase::~Measurement_Single_Display_3PViewBase()
 80075c0:	b510      	push	{r4, lr}
 80075c2:	4604      	mov	r4, r0
}
 80075c4:	f7ff ffe8 	bl	8007598 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 80075c8:	4620      	mov	r0, r4
 80075ca:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80075ce:	f021 fbae 	bl	8028d2e <_ZdlPvj>
 80075d2:	4620      	mov	r0, r4
 80075d4:	bd10      	pop	{r4, pc}
	...

080075d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>:
Measurement_Single_Display_3PViewBase::Measurement_Single_Display_3PViewBase() :
 80075d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075dc:	ed2d 8b04 	vpush	{d8-d9}
 80075e0:	4604      	mov	r4, r0
 80075e2:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Measurement_Single_Display_3PViewBase::buttonCallbackHandler)
 80075e4:	46a3      	mov	fp, r4
 80075e6:	2500      	movs	r5, #0
 80075e8:	f00e ffaa 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 80075ec:	4bae      	ldr	r3, [pc, #696]	; (80078a8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d0>)
 80075ee:	63e5      	str	r5, [r4, #60]	; 0x3c
 80075f0:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 80075f4:	2226      	movs	r2, #38	; 0x26
 80075f6:	4629      	mov	r1, r5
 80075f8:	4658      	mov	r0, fp
 80075fa:	f022 fbb0 	bl	8029d5e <memset>
 80075fe:	4658      	mov	r0, fp
 8007600:	f7fb f8a2 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8007604:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8007608:	26ff      	movs	r6, #255	; 0xff
 800760a:	4ba8      	ldr	r3, [pc, #672]	; (80078ac <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d4>)
 800760c:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 800760e:	2226      	movs	r2, #38	; 0x26
 8007610:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007614:	4629      	mov	r1, r5
 8007616:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800761a:	66a5      	str	r5, [r4, #104]	; 0x68
 800761c:	4650      	mov	r0, sl
 800761e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007622:	f022 fb9c 	bl	8029d5e <memset>
 8007626:	4650      	mov	r0, sl
 8007628:	f7fb f88e 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 800762c:	4ba0      	ldr	r3, [pc, #640]	; (80078b0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2d8>)
 800762e:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007630:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8007634:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8007638:	a90a      	add	r1, sp, #40	; 0x28
 800763a:	f104 0798 	add.w	r7, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 800763e:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007642:	4650      	mov	r0, sl
 8007644:	f00a fdf3 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007648:	4638      	mov	r0, r7
 800764a:	f009 fcb9 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 800764e:	f504 7384 	add.w	r3, r4, #264	; 0x108
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8007652:	4618      	mov	r0, r3
 8007654:	9303      	str	r3, [sp, #12]
 8007656:	f7f9 fcf5 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800765a:	4b96      	ldr	r3, [pc, #600]	; (80078b4 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2dc>)
 800765c:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8007660:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007664:	3324      	adds	r3, #36	; 0x24
 8007666:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
 800766a:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800766e:	4648      	mov	r0, r9
 8007670:	f504 78b2 	add.w	r8, r4, #356	; 0x164
 8007674:	f7fb f87a 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8007678:	4640      	mov	r0, r8
 800767a:	f7fb f877 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 800767e:	f504 73d6 	add.w	r3, r4, #428	; 0x1ac
 8007682:	4618      	mov	r0, r3
 8007684:	ee08 3a10 	vmov	s16, r3
 8007688:	f7fb f870 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 800768c:	f504 73fa 	add.w	r3, r4, #500	; 0x1f4
 8007690:	4618      	mov	r0, r3
 8007692:	ee08 3a90 	vmov	s17, r3
 8007696:	f00a ff0b 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800769a:	f504 730f 	add.w	r3, r4, #572	; 0x23c
 800769e:	4618      	mov	r0, r3
 80076a0:	ee09 3a10 	vmov	s18, r3
 80076a4:	f000 fe82 	bl	80083ac <_ZN17Gauge_with_ValuesC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80076a8:	4a83      	ldr	r2, [pc, #524]	; (80078b8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e0>)
 80076aa:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 80076ae:	e9c3 24f5 	strd	r2, r4, [r3, #980]	; 0x3d4
 80076b2:	4a82      	ldr	r2, [pc, #520]	; (80078bc <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e4>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80076b4:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 80076b8:	e9c3 25f7 	strd	r2, r5, [r3, #988]	; 0x3dc
 80076bc:	f204 50c4 	addw	r0, r4, #1476	; 0x5c4
 80076c0:	f00b fdb2 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 80076c4:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80076c8:	462a      	mov	r2, r5
 80076ca:	9300      	str	r3, [sp, #0]
 80076cc:	4629      	mov	r1, r5
 80076ce:	23f0      	movs	r3, #240	; 0xf0
 80076d0:	4658      	mov	r0, fp
 80076d2:	f7fb f825 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 80076d6:	1d26      	adds	r6, r4, #4
        color = newColor;
 80076d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80076dc:	66a3      	str	r3, [r4, #104]	; 0x68
 80076de:	4659      	mov	r1, fp
 80076e0:	4630      	mov	r0, r6
 80076e2:	f008 f815 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 80076e6:	462a      	mov	r2, r5
 80076e8:	4629      	mov	r1, r5
 80076ea:	4650      	mov	r0, sl
 80076ec:	f7fb f80b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80076f0:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 80076f2:	a90a      	add	r1, sp, #40	; 0x28
 80076f4:	4650      	mov	r0, sl
 80076f6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80076fa:	f00a fd98 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80076fe:	4651      	mov	r1, sl
 8007700:	4630      	mov	r0, r6
 8007702:	f008 f805 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007706:	230a      	movs	r3, #10
 8007708:	9300      	str	r3, [sp, #0]
 800770a:	2232      	movs	r2, #50	; 0x32
 800770c:	23f0      	movs	r3, #240	; 0xf0
 800770e:	4629      	mov	r1, r5
 8007710:	4638      	mov	r0, r7
 8007712:	f7fb f805 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007716:	f04f 33ff 	mov.w	r3, #4294967295
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800771a:	22a0      	movs	r2, #160	; 0xa0
 800771c:	f8c4 3114 	str.w	r3, [r4, #276]	; 0x114
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007720:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
 8007724:	9b03      	ldr	r3, [sp, #12]
 8007726:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800772a:	4611      	mov	r1, r2
 800772c:	4638      	mov	r0, r7
 800772e:	f009 fd5d 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007732:	22a0      	movs	r2, #160	; 0xa0
 8007734:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007738:	4638      	mov	r0, r7
 800773a:	f009 fd62 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 800773e:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8007742:	2b20      	cmp	r3, #32
 8007744:	d005      	beq.n	8007752 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x17a>
        lineWidthQ5 = widthQ5;
 8007746:	2320      	movs	r3, #32
 8007748:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        updateCachedShape();
 800774c:	4638      	mov	r0, r7
 800774e:	f009 fc57 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007752:	4638      	mov	r0, r7
 8007754:	2101      	movs	r1, #1
 8007756:	f009 fd5f 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800775a:	4639      	mov	r1, r7
 800775c:	4630      	mov	r0, r6
 800775e:	ad04      	add	r5, sp, #16
 8007760:	f007 ffd6 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8007764:	f04f 37ff 	mov.w	r7, #4294967295
        linespace = space;
 8007768:	f04f 0a00 	mov.w	sl, #0
    textArea2.setXY(69, 35);
 800776c:	2223      	movs	r2, #35	; 0x23
 800776e:	4648      	mov	r0, r9
 8007770:	2145      	movs	r1, #69	; 0x45
 8007772:	f7fa ffc8 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007776:	4649      	mov	r1, r9
 8007778:	4628      	mov	r0, r5
        color = newColor;
 800777a:	f8c4 714c 	str.w	r7, [r4, #332]	; 0x14c
        linespace = space;
 800777e:	f8a4 a150 	strh.w	sl, [r4, #336]	; 0x150
        boundingArea = calculateBoundingArea();
 8007782:	f009 fedf 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007786:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800778a:	f109 033c 	add.w	r3, r9, #60	; 0x3c
 800778e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007792:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80078c0 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev+0x2e8>
 8007796:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800779a:	2337      	movs	r3, #55	; 0x37
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCTT));
 800779c:	a90a      	add	r1, sp, #40	; 0x28
 800779e:	4648      	mov	r0, r9
 80077a0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077a4:	f00a f968 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077a8:	4649      	mov	r1, r9
 80077aa:	4630      	mov	r0, r6
 80077ac:	f007 ffb0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3.setXY(31, 60);
 80077b0:	223c      	movs	r2, #60	; 0x3c
 80077b2:	4640      	mov	r0, r8
 80077b4:	211f      	movs	r1, #31
 80077b6:	f7fa ffa6 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80077ba:	4641      	mov	r1, r8
 80077bc:	4628      	mov	r0, r5
        color = newColor;
 80077be:	f8c4 7194 	str.w	r7, [r4, #404]	; 0x194
        linespace = space;
 80077c2:	f8a4 a198 	strh.w	sl, [r4, #408]	; 0x198
        boundingArea = calculateBoundingArea();
 80077c6:	f009 febd 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80077ca:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80077ce:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 80077d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80077d6:	2326      	movs	r3, #38	; 0x26
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0LJ7));
 80077d8:	a90a      	add	r1, sp, #40	; 0x28
 80077da:	4640      	mov	r0, r8
 80077dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80077e0:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 80077e4:	f00a f948 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80077e8:	4641      	mov	r1, r8
 80077ea:	4630      	mov	r0, r6
 80077ec:	f007 ff90 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 80077f0:	ee18 0a10 	vmov	r0, s16
 80077f4:	220c      	movs	r2, #12
 80077f6:	2136      	movs	r1, #54	; 0x36
 80077f8:	f7fa ff85 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80077fc:	ee18 1a10 	vmov	r1, s16
 8007800:	4628      	mov	r0, r5
        color = newColor;
 8007802:	f8c4 71dc 	str.w	r7, [r4, #476]	; 0x1dc
        linespace = space;
 8007806:	f8a4 a1e0 	strh.w	sl, [r4, #480]	; 0x1e0
        boundingArea = calculateBoundingArea();
 800780a:	f009 fe9b 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800780e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007812:	ee18 3a10 	vmov	r3, s16
 8007816:	333c      	adds	r3, #60	; 0x3c
 8007818:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800781c:	2336      	movs	r3, #54	; 0x36
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SPOY));
 800781e:	ee18 0a10 	vmov	r0, s16
 8007822:	a90a      	add	r1, sp, #40	; 0x28
 8007824:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007828:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 800782c:	f00a f924 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007830:	ee18 1a10 	vmov	r1, s16
 8007834:	4630      	mov	r0, r6
 8007836:	f007 ff6b 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 257);
 800783a:	ee18 0a90 	vmov	r0, s17
 800783e:	f240 1201 	movw	r2, #257	; 0x101
 8007842:	2121      	movs	r1, #33	; 0x21
 8007844:	f7fa ff5f 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007848:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 800784a:	aa0a      	add	r2, sp, #40	; 0x28
 800784c:	a909      	add	r1, sp, #36	; 0x24
 800784e:	ee18 0a90 	vmov	r0, s17
 8007852:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007856:	2302      	movs	r3, #2
 8007858:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800785c:	f00a faf1 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007860:	2335      	movs	r3, #53	; 0x35
        updateTextPosition();
 8007862:	ee18 0a90 	vmov	r0, s17
 8007866:	f8a4 322c 	strh.w	r3, [r4, #556]	; 0x22c
 800786a:	f7fa ffa1 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonWithLabel3.setAction(buttonCallback);
 800786e:	f504 539e 	add.w	r3, r4, #5056	; 0x13c0
 8007872:	3314      	adds	r3, #20
 8007874:	f8c4 321c 	str.w	r3, [r4, #540]	; 0x21c
 8007878:	ee18 1a90 	vmov	r1, s17
 800787c:	4630      	mov	r0, r6
        colorPressed = col;
 800787e:	e9c4 778c 	strd	r7, r7, [r4, #560]	; 0x230
 8007882:	f007 ff45 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge_with_Values1.setXY(0, 78);
 8007886:	ee19 0a10 	vmov	r0, s18
 800788a:	224e      	movs	r2, #78	; 0x4e
 800788c:	4651      	mov	r1, sl
 800788e:	f7fa ff3a 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007892:	4630      	mov	r0, r6
 8007894:	ee19 1a10 	vmov	r1, s18
 8007898:	f007 ff3a 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800789c:	4620      	mov	r0, r4
 800789e:	b00d      	add	sp, #52	; 0x34
 80078a0:	ecbd 8b04 	vpop	{d8-d9}
 80078a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078a8:	0802d0d0 	.word	0x0802d0d0
 80078ac:	0802de70 	.word	0x0802de70
 80078b0:	0802e038 	.word	0x0802e038
 80078b4:	0802dba4 	.word	0x0802dba4
 80078b8:	0802d0b8 	.word	0x0802d0b8
 80078bc:	0800757f 	.word	0x0800757f
 80078c0:	0802b4f8 	.word	0x0802b4f8

080078c4 <_ZN20Project_InfoViewBase11setupScreenEv>:
}

void Project_InfoViewBase::setupScreen()
{

}
 80078c4:	4770      	bx	lr

080078c6 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078c6:	4770      	bx	lr

080078c8 <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80078c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078ca:	68c2      	ldr	r2, [r0, #12]
 80078cc:	6844      	ldr	r4, [r0, #4]
 80078ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80078d0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80078d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80078d6:	07d2      	lsls	r2, r2, #31
 80078d8:	bf48      	it	mi
 80078da:	5962      	ldrmi	r2, [r4, r5]
 80078dc:	689b      	ldr	r3, [r3, #8]
    }
 80078de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80078e0:	bf48      	it	mi
 80078e2:	58d3      	ldrmi	r3, [r2, r3]
 80078e4:	4718      	bx	r3

080078e6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80078e6:	6843      	ldr	r3, [r0, #4]
 80078e8:	b12b      	cbz	r3, 80078f6 <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80078ea:	6883      	ldr	r3, [r0, #8]
 80078ec:	b92b      	cbnz	r3, 80078fa <_ZNK8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80078ee:	68c0      	ldr	r0, [r0, #12]
 80078f0:	f000 0001 	and.w	r0, r0, #1
 80078f4:	4770      	bx	lr
 80078f6:	4618      	mov	r0, r3
 80078f8:	4770      	bx	lr
 80078fa:	2001      	movs	r0, #1
    }
 80078fc:	4770      	bx	lr

080078fe <_ZN8touchgfx8CallbackI20Project_InfoViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80078fe:	b510      	push	{r4, lr}
 8007900:	2110      	movs	r1, #16
 8007902:	4604      	mov	r4, r0
 8007904:	f021 fa13 	bl	8028d2e <_ZdlPvj>
 8007908:	4620      	mov	r0, r4
 800790a:	bd10      	pop	{r4, pc}

0800790c <_ZN20Project_InfoViewBaseD1Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 800790c:	b510      	push	{r4, lr}
 800790e:	4b03      	ldr	r3, [pc, #12]	; (800791c <_ZN20Project_InfoViewBaseD1Ev+0x10>)
 8007910:	6003      	str	r3, [r0, #0]
 8007912:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007914:	f00b fc92 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8007918:	4620      	mov	r0, r4
 800791a:	bd10      	pop	{r4, pc}
 800791c:	0802d11c 	.word	0x0802d11c

08007920 <_ZN20Project_InfoViewBaseD0Ev>:
Project_InfoViewBase::~Project_InfoViewBase()
 8007920:	b507      	push	{r0, r1, r2, lr}
 8007922:	4b07      	ldr	r3, [pc, #28]	; (8007940 <_ZN20Project_InfoViewBaseD0Ev+0x20>)
 8007924:	6003      	str	r3, [r0, #0]
 8007926:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8007928:	f00b fc88 	bl	801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800792c:	9801      	ldr	r0, [sp, #4]
 800792e:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8007932:	f021 f9fc 	bl	8028d2e <_ZdlPvj>
 8007936:	9801      	ldr	r0, [sp, #4]
 8007938:	b003      	add	sp, #12
 800793a:	f85d fb04 	ldr.w	pc, [sp], #4
 800793e:	bf00      	nop
 8007940:	0802d11c 	.word	0x0802d11c

08007944 <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void Project_InfoViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel3)
 8007944:	f500 70b4 	add.w	r0, r0, #360	; 0x168
 8007948:	4288      	cmp	r0, r1
{
 800794a:	b508      	push	{r3, lr}
    if (&src == &buttonWithLabel3)
 800794c:	d105      	bne.n	800795a <_ZN20Project_InfoViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~Project_InfoViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800794e:	f00d f977 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel3 clicked change screen to Main_Menu
        //Go to Main_Menu with screen transition towards West
        application().gotoMain_MenuScreenWipeTransitionWest();
    }
}
 8007952:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoMain_MenuScreenWipeTransitionWest();
 8007956:	f7fb bfcd 	b.w	80038f4 <_ZN23FrontendApplicationBase37gotoMain_MenuScreenWipeTransitionWestEv>
}
 800795a:	bd08      	pop	{r3, pc}

0800795c <_ZN20Project_InfoViewBaseC1Ev>:
Project_InfoViewBase::Project_InfoViewBase() :
 800795c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007960:	ed2d 8b04 	vpush	{d8-d9}
 8007964:	4604      	mov	r4, r0
 8007966:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &Project_InfoViewBase::buttonCallbackHandler)
 8007968:	46a3      	mov	fp, r4
 800796a:	2500      	movs	r5, #0
 800796c:	f00e fde8 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8007970:	4bd1      	ldr	r3, [pc, #836]	; (8007cb8 <_ZN20Project_InfoViewBaseC1Ev+0x35c>)
 8007972:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007974:	f84b 3b40 	str.w	r3, [fp], #64
        : Widget(), alpha(255), color(0)
 8007978:	2226      	movs	r2, #38	; 0x26
 800797a:	4629      	mov	r1, r5
 800797c:	4658      	mov	r0, fp
 800797e:	f022 f9ee 	bl	8029d5e <memset>
 8007982:	4658      	mov	r0, fp
 8007984:	f7fa fee0 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 8007988:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 800798c:	26ff      	movs	r6, #255	; 0xff
 800798e:	4bcb      	ldr	r3, [pc, #812]	; (8007cbc <_ZN20Project_InfoViewBaseC1Ev+0x360>)
 8007990:	6423      	str	r3, [r4, #64]	; 0x40
        : Widget(), bitmap(bmp), alpha(255)
 8007992:	2226      	movs	r2, #38	; 0x26
 8007994:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8007998:	4629      	mov	r1, r5
 800799a:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800799e:	4650      	mov	r0, sl
 80079a0:	66a5      	str	r5, [r4, #104]	; 0x68
 80079a2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80079a6:	f022 f9da 	bl	8029d5e <memset>
 80079aa:	4650      	mov	r0, sl
 80079ac:	f7fa fecc 	bl	8002748 <_ZN8touchgfx6WidgetC1Ev>
 80079b0:	4bc3      	ldr	r3, [pc, #780]	; (8007cc0 <_ZN20Project_InfoViewBaseC1Ev+0x364>)
 80079b2:	66e3      	str	r3, [r4, #108]	; 0x6c
 80079b4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80079b8:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 80079bc:	a90a      	add	r1, sp, #40	; 0x28
 80079be:	4650      	mov	r0, sl
 80079c0:	f104 0998 	add.w	r9, r4, #152	; 0x98
        : Widget(), bitmap(bmp), alpha(255)
 80079c4:	f884 6094 	strb.w	r6, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80079c8:	f00a fc31 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : TextArea()
 80079cc:	4648      	mov	r0, r9
 80079ce:	f7fa fecd 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 80079d2:	f104 07e4 	add.w	r7, r4, #228	; 0xe4
        : TextAreaWithWildcardBase(), wc1(0)
 80079d6:	4bbb      	ldr	r3, [pc, #748]	; (8007cc4 <_ZN20Project_InfoViewBaseC1Ev+0x368>)
 80079d8:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 80079dc:	f8c4 50e0 	str.w	r5, [r4, #224]	; 0xe0
 80079e0:	4638      	mov	r0, r7
 80079e2:	f009 faed 	bl	8010fc0 <_ZN8touchgfx4LineC1Ev>
 80079e6:	f504 73aa 	add.w	r3, r4, #340	; 0x154
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80079ea:	4618      	mov	r0, r3
 80079ec:	9303      	str	r3, [sp, #12]
 80079ee:	f7f9 fb29 	bl	8001044 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80079f2:	4bb5      	ldr	r3, [pc, #724]	; (8007cc8 <_ZN20Project_InfoViewBaseC1Ev+0x36c>)
 80079f4:	f8c4 3154 	str.w	r3, [r4, #340]	; 0x154
 80079f8:	3324      	adds	r3, #36	; 0x24
 80079fa:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80079fe:	f504 73b4 	add.w	r3, r4, #360	; 0x168
 8007a02:	4618      	mov	r0, r3
 8007a04:	f8c4 5160 	str.w	r5, [r4, #352]	; 0x160
 8007a08:	f504 78d8 	add.w	r8, r4, #432	; 0x1b0
 8007a0c:	ee09 3a10 	vmov	s18, r3
 8007a10:	f00a fd4e 	bl	80124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007a14:	4640      	mov	r0, r8
 8007a16:	f7fa fea9 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8007a1a:	f504 73fc 	add.w	r3, r4, #504	; 0x1f8
 8007a1e:	4618      	mov	r0, r3
 8007a20:	ee08 3a10 	vmov	s16, r3
 8007a24:	f7fa fea2 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
 8007a28:	f504 7310 	add.w	r3, r4, #576	; 0x240
 8007a2c:	4618      	mov	r0, r3
 8007a2e:	ee08 3a90 	vmov	s17, r3
 8007a32:	f7fa fe9b 	bl	800276c <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8007a36:	4aa5      	ldr	r2, [pc, #660]	; (8007ccc <_ZN20Project_InfoViewBaseC1Ev+0x370>)
 8007a38:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8007a3c:	e9c3 2428 	strd	r2, r4, [r3, #160]	; 0xa0
 8007a40:	4aa3      	ldr	r2, [pc, #652]	; (8007cd0 <_ZN20Project_InfoViewBaseC1Ev+0x374>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8007a42:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8007a46:	e9c3 252a 	strd	r2, r5, [r3, #168]	; 0xa8
 8007a4a:	f504 7024 	add.w	r0, r4, #656	; 0x290
 8007a4e:	f00b fbeb 	bl	8013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8007a52:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8007a56:	462a      	mov	r2, r5
 8007a58:	4658      	mov	r0, fp
 8007a5a:	9300      	str	r3, [sp, #0]
 8007a5c:	4629      	mov	r1, r5
 8007a5e:	23f0      	movs	r3, #240	; 0xf0
 8007a60:	f7fa fe5e 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007a64:	1d26      	adds	r6, r4, #4
        color = newColor;
 8007a66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007a6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8007a6c:	4659      	mov	r1, fp
 8007a6e:	4630      	mov	r0, r6
 8007a70:	f007 fe4e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8007a74:	462a      	mov	r2, r5
 8007a76:	4650      	mov	r0, sl
 8007a78:	4629      	mov	r1, r5
 8007a7a:	f7fa fe44 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007a7e:	2309      	movs	r3, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_2_RESIZED_4_ID));
 8007a80:	4650      	mov	r0, sl
 8007a82:	a90a      	add	r1, sp, #40	; 0x28
 8007a84:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007a88:	f00a fbd1 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007a8c:	4651      	mov	r1, sl
 8007a8e:	4630      	mov	r0, r6
 8007a90:	f007 fe3e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea3_1.setXY(86, 308);
 8007a94:	f44f 729a 	mov.w	r2, #308	; 0x134
 8007a98:	2156      	movs	r1, #86	; 0x56
 8007a9a:	4648      	mov	r0, r9
 8007a9c:	f7fa fe33 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007aa0:	f8d4 3098 	ldr.w	r3, [r4, #152]	; 0x98
        linespace = space;
 8007aa4:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007aa8:	f10d 0a10 	add.w	sl, sp, #16
        color = newColor;
 8007aac:	f04f 3bff 	mov.w	fp, #4294967295
        boundingArea = calculateBoundingArea();
 8007ab0:	4650      	mov	r0, sl
 8007ab2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8007ab6:	f8c4 b0c8 	str.w	fp, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007aba:	4649      	mov	r1, r9
 8007abc:	4798      	blx	r3
 8007abe:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 8007ac2:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007ac6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007aca:	4b82      	ldr	r3, [pc, #520]	; (8007cd4 <_ZN20Project_InfoViewBaseC1Ev+0x378>)
 8007acc:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5C9S).getText());
 8007ace:	f504 7a22 	add.w	sl, r4, #648	; 0x288
 8007ad2:	b92b      	cbnz	r3, 8007ae0 <_ZN20Project_InfoViewBaseC1Ev+0x184>
 8007ad4:	4b80      	ldr	r3, [pc, #512]	; (8007cd8 <_ZN20Project_InfoViewBaseC1Ev+0x37c>)
 8007ad6:	4a81      	ldr	r2, [pc, #516]	; (8007cdc <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007ad8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ada:	4881      	ldr	r0, [pc, #516]	; (8007ce0 <_ZN20Project_InfoViewBaseC1Ev+0x384>)
 8007adc:	f021 ff3a 	bl	8029954 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8007ae0:	4b80      	ldr	r3, [pc, #512]	; (8007ce4 <_ZN20Project_InfoViewBaseC1Ev+0x388>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8007ae2:	881b      	ldrh	r3, [r3, #0]
 8007ae4:	2b12      	cmp	r3, #18
 8007ae6:	d803      	bhi.n	8007af0 <_ZN20Project_InfoViewBaseC1Ev+0x194>
 8007ae8:	4b7f      	ldr	r3, [pc, #508]	; (8007ce8 <_ZN20Project_InfoViewBaseC1Ev+0x38c>)
 8007aea:	4a7c      	ldr	r2, [pc, #496]	; (8007cdc <_ZN20Project_InfoViewBaseC1Ev+0x380>)
 8007aec:	2161      	movs	r1, #97	; 0x61
 8007aee:	e7f4      	b.n	8007ada <_ZN20Project_InfoViewBaseC1Ev+0x17e>
        return texts->getText(typedTextId);
 8007af0:	4b7e      	ldr	r3, [pc, #504]	; (8007cec <_ZN20Project_InfoViewBaseC1Ev+0x390>)
 8007af2:	2112      	movs	r1, #18
 8007af4:	6818      	ldr	r0, [r3, #0]
 8007af6:	f000 fb1b 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8007afa:	4a7d      	ldr	r2, [pc, #500]	; (8007cf0 <_ZN20Project_InfoViewBaseC1Ev+0x394>)
 8007afc:	4603      	mov	r3, r0
 8007afe:	2104      	movs	r1, #4
 8007b00:	4650      	mov	r0, sl
 8007b02:	f010 fa0d 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea3_1.resizeToCurrentText();
 8007b06:	4648      	mov	r0, r9
        wc1 = value;
 8007b08:	f8c4 a0e0 	str.w	sl, [r4, #224]	; 0xe0
 8007b0c:	f009 ff94 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8007b10:	4b78      	ldr	r3, [pc, #480]	; (8007cf4 <_ZN20Project_InfoViewBaseC1Ev+0x398>)
 8007b12:	930a      	str	r3, [sp, #40]	; 0x28
    textArea3_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KYIO));
 8007b14:	a90a      	add	r1, sp, #40	; 0x28
 8007b16:	2313      	movs	r3, #19
 8007b18:	4648      	mov	r0, r9
 8007b1a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007b1e:	f009 ffab 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b22:	4649      	mov	r1, r9
 8007b24:	4630      	mov	r0, r6
 8007b26:	f007 fdf3 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(0, 50, 240, 10);
 8007b2a:	230a      	movs	r3, #10
 8007b2c:	9300      	str	r3, [sp, #0]
 8007b2e:	2232      	movs	r2, #50	; 0x32
 8007b30:	23f0      	movs	r3, #240	; 0xf0
 8007b32:	4629      	mov	r1, r5
 8007b34:	4638      	mov	r0, r7
 8007b36:	f7fa fdf3 	bl	8002720 <_ZN8touchgfx8Drawable11setPositionEssss>
 8007b3a:	9b03      	ldr	r3, [sp, #12]
 8007b3c:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b40:	22a0      	movs	r2, #160	; 0xa0
 8007b42:	4611      	mov	r1, r2
 8007b44:	4638      	mov	r0, r7
 8007b46:	f8c4 b160 	str.w	fp, [r4, #352]	; 0x160
        color565 = LCD16bpp::getNativeColor(painterColor);
 8007b4a:	f8a4 b164 	strh.w	fp, [r4, #356]	; 0x164
 8007b4e:	f009 fb4d 	bl	80111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8007b52:	22a0      	movs	r2, #160	; 0xa0
 8007b54:	f44f 51eb 	mov.w	r1, #7520	; 0x1d60
 8007b58:	4638      	mov	r0, r7
 8007b5a:	f009 fb52 	bl	8011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>
        if (lineWidthQ5 == widthQ5)
 8007b5e:	f8d4 3120 	ldr.w	r3, [r4, #288]	; 0x120
 8007b62:	2b20      	cmp	r3, #32
 8007b64:	d005      	beq.n	8007b72 <_ZN20Project_InfoViewBaseC1Ev+0x216>
        lineWidthQ5 = widthQ5;
 8007b66:	2320      	movs	r3, #32
 8007b68:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
        updateCachedShape();
 8007b6c:	4638      	mov	r0, r7
 8007b6e:	f009 fa47 	bl	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
 8007b72:	4638      	mov	r0, r7
 8007b74:	2101      	movs	r1, #1
 8007b76:	f009 fb4f 	bl	8011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8007b7a:	4639      	mov	r1, r7
 8007b7c:	4630      	mov	r0, r6
 8007b7e:	f007 fdc7 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonWithLabel3.setXY(33, 240);
 8007b82:	ee19 0a10 	vmov	r0, s18
 8007b86:	22f0      	movs	r2, #240	; 0xf0
 8007b88:	2121      	movs	r1, #33	; 0x21
 8007b8a:	f7fa fdbc 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007b8e:	2303      	movs	r3, #3
    buttonWithLabel3.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_NORMAL_ID));
 8007b90:	aa0a      	add	r2, sp, #40	; 0x28
 8007b92:	a909      	add	r1, sp, #36	; 0x24
 8007b94:	ee19 0a10 	vmov	r0, s18
 8007b98:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8007b9c:	2302      	movs	r3, #2
 8007b9e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8007ba2:	f00a f94e 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8007ba6:	2342      	movs	r3, #66	; 0x42
        updateTextPosition();
 8007ba8:	ee19 0a10 	vmov	r0, s18
 8007bac:	f8a4 31a0 	strh.w	r3, [r4, #416]	; 0x1a0
 8007bb0:	f7fa fdfe 	bl	80027b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8007bb4:	f04f 37ff 	mov.w	r7, #4294967295
    buttonWithLabel3.setAction(buttonCallback);
 8007bb8:	f504 5385 	add.w	r3, r4, #4256	; 0x10a0
 8007bbc:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
 8007bc0:	ee19 1a10 	vmov	r1, s18
 8007bc4:	4630      	mov	r0, r6
        colorPressed = col;
 8007bc6:	e9c4 7769 	strd	r7, r7, [r4, #420]	; 0x1a4
 8007bca:	ad04      	add	r5, sp, #16
 8007bcc:	f007 fda0 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8007bd0:	f04f 0a00 	mov.w	sl, #0
    textArea3.setXY(5, 91);
 8007bd4:	225b      	movs	r2, #91	; 0x5b
 8007bd6:	4640      	mov	r0, r8
 8007bd8:	2105      	movs	r1, #5
 8007bda:	f7fa fd94 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8007bde:	4641      	mov	r1, r8
 8007be0:	4628      	mov	r0, r5
        color = newColor;
 8007be2:	f8c4 71e0 	str.w	r7, [r4, #480]	; 0x1e0
        linespace = space;
 8007be6:	f8a4 a1e4 	strh.w	sl, [r4, #484]	; 0x1e4
        boundingArea = calculateBoundingArea();
 8007bea:	f009 fcab 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007bee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007bf2:	f108 033c 	add.w	r3, r8, #60	; 0x3c
 8007bf6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8007bfa:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8007cf4 <_ZN20Project_InfoViewBaseC1Ev+0x398>
 8007bfe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c02:	2343      	movs	r3, #67	; 0x43
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9J9T));
 8007c04:	a90a      	add	r1, sp, #40	; 0x28
 8007c06:	4640      	mov	r0, r8
 8007c08:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c0c:	f009 ff34 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c10:	4641      	mov	r1, r8
 8007c12:	4630      	mov	r0, r6
 8007c14:	f007 fd7c 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(69, 35);
 8007c18:	ee18 0a10 	vmov	r0, s16
 8007c1c:	2223      	movs	r2, #35	; 0x23
 8007c1e:	2145      	movs	r1, #69	; 0x45
 8007c20:	f7fa fd71 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007c24:	ee18 1a10 	vmov	r1, s16
 8007c28:	4628      	mov	r0, r5
        color = newColor;
 8007c2a:	f8c4 7228 	str.w	r7, [r4, #552]	; 0x228
        linespace = space;
 8007c2e:	f8a4 a22c 	strh.w	sl, [r4, #556]	; 0x22c
        boundingArea = calculateBoundingArea();
 8007c32:	f009 fc87 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c36:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c3a:	ee18 3a10 	vmov	r3, s16
 8007c3e:	333c      	adds	r3, #60	; 0x3c
 8007c40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c44:	2345      	movs	r3, #69	; 0x45
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8N0V));
 8007c46:	ee18 0a10 	vmov	r0, s16
 8007c4a:	a90a      	add	r1, sp, #40	; 0x28
 8007c4c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c50:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c54:	f009 ff10 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007c58:	ee18 1a10 	vmov	r1, s16
 8007c5c:	4630      	mov	r0, r6
 8007c5e:	f007 fd57 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(54, 12);
 8007c62:	ee18 0a90 	vmov	r0, s17
 8007c66:	220c      	movs	r2, #12
 8007c68:	2136      	movs	r1, #54	; 0x36
 8007c6a:	f7fa fd4c 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007c6e:	ee18 1a90 	vmov	r1, s17
 8007c72:	4628      	mov	r0, r5
        color = newColor;
 8007c74:	f8c4 7270 	str.w	r7, [r4, #624]	; 0x270
        linespace = space;
 8007c78:	f8a4 a274 	strh.w	sl, [r4, #628]	; 0x274
        boundingArea = calculateBoundingArea();
 8007c7c:	f009 fc62 	bl	8011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007c80:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007c84:	ee18 3a90 	vmov	r3, s17
 8007c88:	333c      	adds	r3, #60	; 0x3c
 8007c8a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007c8e:	2344      	movs	r3, #68	; 0x44
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SSFQ));
 8007c90:	ee18 0a90 	vmov	r0, s17
 8007c94:	a90a      	add	r1, sp, #40	; 0x28
 8007c96:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8007c9a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8007c9e:	f009 feeb 	bl	8011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007ca2:	4630      	mov	r0, r6
 8007ca4:	ee18 1a90 	vmov	r1, s17
 8007ca8:	f007 fd32 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007cac:	4620      	mov	r0, r4
 8007cae:	b00d      	add	sp, #52	; 0x34
 8007cb0:	ecbd 8b04 	vpop	{d8-d9}
 8007cb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007cb8:	0802d11c 	.word	0x0802d11c
 8007cbc:	0802de70 	.word	0x0802de70
 8007cc0:	0802e038 	.word	0x0802e038
 8007cc4:	0802b508 	.word	0x0802b508
 8007cc8:	0802dba4 	.word	0x0802dba4
 8007ccc:	0802d104 	.word	0x0802d104
 8007cd0:	08007945 	.word	0x08007945
 8007cd4:	20012e0c 	.word	0x20012e0c
 8007cd8:	0802b348 	.word	0x0802b348
 8007cdc:	0802b44a 	.word	0x0802b44a
 8007ce0:	0802b3c5 	.word	0x0802b3c5
 8007ce4:	20012e10 	.word	0x20012e10
 8007ce8:	0802b40c 	.word	0x0802b40c
 8007cec:	20012e18 	.word	0x20012e18
 8007cf0:	0802b482 	.word	0x0802b482
 8007cf4:	0802b4f8 	.word	0x0802b4f8

08007cf8 <_ZN20Shutting_OffViewBaseD1Ev>:
}

Shutting_OffViewBase::~Shutting_OffViewBase()
{

}
 8007cf8:	4770      	bx	lr

08007cfa <_ZN20Shutting_OffViewBase11setupScreenEv>:

void Shutting_OffViewBase::setupScreen()
{

}
 8007cfa:	4770      	bx	lr

08007cfc <_ZN20Shutting_OffViewBaseD0Ev>:
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007cfc:	b510      	push	{r4, lr}
}
 8007cfe:	2198      	movs	r1, #152	; 0x98
Shutting_OffViewBase::~Shutting_OffViewBase()
 8007d00:	4604      	mov	r4, r0
}
 8007d02:	f021 f814 	bl	8028d2e <_ZdlPvj>
 8007d06:	4620      	mov	r0, r4
 8007d08:	bd10      	pop	{r4, pc}
	...

08007d0c <_ZN20Shutting_OffViewBaseC1Ev>:
Shutting_OffViewBase::Shutting_OffViewBase()
 8007d0c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007d10:	4604      	mov	r4, r0
 8007d12:	4626      	mov	r6, r4
 8007d14:	f00e fc14 	bl	8016540 <_ZN8touchgfx6ScreenC1Ev>
 8007d18:	2500      	movs	r5, #0
 8007d1a:	4b2e      	ldr	r3, [pc, #184]	; (8007dd4 <_ZN20Shutting_OffViewBaseC1Ev+0xc8>)
 8007d1c:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007d1e:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007d22:	4b2d      	ldr	r3, [pc, #180]	; (8007dd8 <_ZN20Shutting_OffViewBaseC1Ev+0xcc>)
          cachedAbsX(0),
 8007d24:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8007d26:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
          touchable(false),
 8007d2a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007d2e:	23ff      	movs	r3, #255	; 0xff
 8007d30:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8007d34:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8007d38:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8007d3c:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8007d40:	f64f 73ff 	movw	r3, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8007d44:	4a25      	ldr	r2, [pc, #148]	; (8007ddc <_ZN20Shutting_OffViewBaseC1Ev+0xd0>)
 8007d46:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007d4a:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8007d4e:	66e2      	str	r2, [r4, #108]	; 0x6c
        Image::setBitmap(bmp);
 8007d50:	a901      	add	r1, sp, #4
 8007d52:	4638      	mov	r0, r7
 8007d54:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
          parent(0),
 8007d58:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
          nextDrawChainElement(0),
 8007d5c:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8007d60:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8007d64:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
          nextSibling(0),
 8007d68:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
          cachedAbsX(0),
 8007d6c:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8007d70:	66a5      	str	r5, [r4, #104]	; 0x68
 8007d72:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007d76:	f00a fa5a 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8007d7a:	462a      	mov	r2, r5
 8007d7c:	4629      	mov	r1, r5
 8007d7e:	4630      	mov	r0, r6
 8007d80:	f7fa fcc1 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007d84:	4630      	mov	r0, r6
 8007d86:	21f0      	movs	r1, #240	; 0xf0
 8007d88:	f7f9 f8a8 	bl	8000edc <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007d8c:	4630      	mov	r0, r6
 8007d8e:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8007d92:	f7f9 f8a5 	bl	8000ee0 <_ZN8touchgfx8Drawable9setHeightEs>
 8007d96:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8007d9a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007d9e:	66a3      	str	r3, [r4, #104]	; 0x68
 8007da0:	4631      	mov	r1, r6
 8007da2:	4640      	mov	r0, r8
 8007da4:	f007 fcb4 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(-3, 0);
 8007da8:	462a      	mov	r2, r5
 8007daa:	4638      	mov	r0, r7
 8007dac:	f06f 0102 	mvn.w	r1, #2
 8007db0:	f7fa fca9 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8007db4:	230b      	movs	r3, #11
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SHUTDOWN_ID));
 8007db6:	a901      	add	r1, sp, #4
 8007db8:	4638      	mov	r0, r7
 8007dba:	f8ad 3004 	strh.w	r3, [sp, #4]
 8007dbe:	f00a fa36 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007dc2:	4640      	mov	r0, r8
 8007dc4:	4639      	mov	r1, r7
 8007dc6:	f007 fca3 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007dca:	4620      	mov	r0, r4
 8007dcc:	b002      	add	sp, #8
 8007dce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007dd2:	bf00      	nop
 8007dd4:	0802d150 	.word	0x0802d150
 8007dd8:	0802de70 	.word	0x0802de70
 8007ddc:	0802e038 	.word	0x0802e038

08007de0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007de0:	4770      	bx	lr
	...

08007de4 <_Z23getFont_verdana_10_4bppv>:
{
 8007de4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007de6:	4d17      	ldr	r5, [pc, #92]	; (8007e44 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007de8:	682c      	ldr	r4, [r5, #0]
 8007dea:	f3bf 8f5b 	dmb	ish
 8007dee:	f014 0401 	ands.w	r4, r4, #1
{
 8007df2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 95, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007df4:	d122      	bne.n	8007e3c <_Z23getFont_verdana_10_4bppv+0x58>
 8007df6:	4628      	mov	r0, r5
 8007df8:	f020 ff9b 	bl	8028d32 <__cxa_guard_acquire>
 8007dfc:	b1f0      	cbz	r0, 8007e3c <_Z23getFont_verdana_10_4bppv+0x58>
 8007dfe:	233f      	movs	r3, #63	; 0x3f
 8007e00:	9309      	str	r3, [sp, #36]	; 0x24
 8007e02:	4b11      	ldr	r3, [pc, #68]	; (8007e48 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007e04:	9308      	str	r3, [sp, #32]
 8007e06:	4b11      	ldr	r3, [pc, #68]	; (8007e4c <_Z23getFont_verdana_10_4bppv+0x68>)
 8007e08:	9307      	str	r3, [sp, #28]
 8007e0a:	2301      	movs	r3, #1
 8007e0c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e10:	9304      	str	r3, [sp, #16]
 8007e12:	2304      	movs	r3, #4
 8007e14:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e18:	230a      	movs	r3, #10
 8007e1a:	490d      	ldr	r1, [pc, #52]	; (8007e50 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007e1c:	9300      	str	r3, [sp, #0]
 8007e1e:	225f      	movs	r2, #95	; 0x5f
 8007e20:	230c      	movs	r3, #12
 8007e22:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e26:	480b      	ldr	r0, [pc, #44]	; (8007e54 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007e28:	940a      	str	r4, [sp, #40]	; 0x28
 8007e2a:	9401      	str	r4, [sp, #4]
 8007e2c:	f7fd f9ea 	bl	8005204 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e30:	4809      	ldr	r0, [pc, #36]	; (8007e58 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007e32:	f021 fdad 	bl	8029990 <atexit>
 8007e36:	4628      	mov	r0, r5
 8007e38:	f020 ff87 	bl	8028d4a <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007e3c:	4805      	ldr	r0, [pc, #20]	; (8007e54 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007e3e:	b00f      	add	sp, #60	; 0x3c
 8007e40:	bd30      	pop	{r4, r5, pc}
 8007e42:	bf00      	nop
 8007e44:	20001ed4 	.word	0x20001ed4
 8007e48:	08044d04 	.word	0x08044d04
 8007e4c:	08044e64 	.word	0x08044e64
 8007e50:	08043fec 	.word	0x08043fec
 8007e54:	20001ed8 	.word	0x20001ed8
 8007e58:	08007de1 	.word	0x08007de1

08007e5c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_12_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_12_4bpp();

touchgfx::GeneratedFont& getFont_verdana_12_4bpp()
{
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007e5c:	4770      	bx	lr
	...

08007e60 <_Z23getFont_verdana_12_4bppv>:
{
 8007e60:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007e62:	4d17      	ldr	r5, [pc, #92]	; (8007ec0 <_Z23getFont_verdana_12_4bppv+0x60>)
 8007e64:	682c      	ldr	r4, [r5, #0]
 8007e66:	f3bf 8f5b 	dmb	ish
 8007e6a:	f014 0401 	ands.w	r4, r4, #1
{
 8007e6e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_12_4bpp(glyphs_verdana_12_4bpp, 96, 15, 12, 0, 0, 4, 1, 1, 1, unicodes_verdana_12_4bpp, kerning_verdana_12_4bpp, 63, 0, 0, 0);
 8007e70:	d122      	bne.n	8007eb8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007e72:	4628      	mov	r0, r5
 8007e74:	f020 ff5d 	bl	8028d32 <__cxa_guard_acquire>
 8007e78:	b1f0      	cbz	r0, 8007eb8 <_Z23getFont_verdana_12_4bppv+0x58>
 8007e7a:	233f      	movs	r3, #63	; 0x3f
 8007e7c:	9309      	str	r3, [sp, #36]	; 0x24
 8007e7e:	4b11      	ldr	r3, [pc, #68]	; (8007ec4 <_Z23getFont_verdana_12_4bppv+0x64>)
 8007e80:	9308      	str	r3, [sp, #32]
 8007e82:	4b11      	ldr	r3, [pc, #68]	; (8007ec8 <_Z23getFont_verdana_12_4bppv+0x68>)
 8007e84:	9307      	str	r3, [sp, #28]
 8007e86:	2301      	movs	r3, #1
 8007e88:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e8c:	9304      	str	r3, [sp, #16]
 8007e8e:	2304      	movs	r3, #4
 8007e90:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e94:	230c      	movs	r3, #12
 8007e96:	490d      	ldr	r1, [pc, #52]	; (8007ecc <_Z23getFont_verdana_12_4bppv+0x6c>)
 8007e98:	9300      	str	r3, [sp, #0]
 8007e9a:	2260      	movs	r2, #96	; 0x60
 8007e9c:	230f      	movs	r3, #15
 8007e9e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ea2:	480b      	ldr	r0, [pc, #44]	; (8007ed0 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007ea4:	940a      	str	r4, [sp, #40]	; 0x28
 8007ea6:	9401      	str	r4, [sp, #4]
 8007ea8:	f7fd f9ac 	bl	8005204 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007eac:	4809      	ldr	r0, [pc, #36]	; (8007ed4 <_Z23getFont_verdana_12_4bppv+0x74>)
 8007eae:	f021 fd6f 	bl	8029990 <atexit>
 8007eb2:	4628      	mov	r0, r5
 8007eb4:	f020 ff49 	bl	8028d4a <__cxa_guard_release>
    return verdana_12_4bpp;
}
 8007eb8:	4805      	ldr	r0, [pc, #20]	; (8007ed0 <_Z23getFont_verdana_12_4bppv+0x70>)
 8007eba:	b00f      	add	sp, #60	; 0x3c
 8007ebc:	bd30      	pop	{r4, r5, pc}
 8007ebe:	bf00      	nop
 8007ec0:	20001f04 	.word	0x20001f04
 8007ec4:	08044d38 	.word	0x08044d38
 8007ec8:	08044e68 	.word	0x08044e68
 8007ecc:	08044520 	.word	0x08044520
 8007ed0:	20001f08 	.word	0x20001f08
 8007ed4:	08007e5d 	.word	0x08007e5d

08007ed8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_19_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_19_4bpp();

touchgfx::GeneratedFont& getFont_verdana_19_4bpp()
{
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ed8:	4770      	bx	lr
	...

08007edc <_Z23getFont_verdana_19_4bppv>:
{
 8007edc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007ede:	4d17      	ldr	r5, [pc, #92]	; (8007f3c <_Z23getFont_verdana_19_4bppv+0x60>)
 8007ee0:	682c      	ldr	r4, [r5, #0]
 8007ee2:	f3bf 8f5b 	dmb	ish
 8007ee6:	f014 0401 	ands.w	r4, r4, #1
{
 8007eea:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_19_4bpp(glyphs_verdana_19_4bpp, 47, 23, 19, 0, 0, 4, 1, 1, 1, unicodes_verdana_19_4bpp, kerning_verdana_19_4bpp, 63, 0, 0, 0);
 8007eec:	d122      	bne.n	8007f34 <_Z23getFont_verdana_19_4bppv+0x58>
 8007eee:	4628      	mov	r0, r5
 8007ef0:	f020 ff1f 	bl	8028d32 <__cxa_guard_acquire>
 8007ef4:	b1f0      	cbz	r0, 8007f34 <_Z23getFont_verdana_19_4bppv+0x58>
 8007ef6:	233f      	movs	r3, #63	; 0x3f
 8007ef8:	9309      	str	r3, [sp, #36]	; 0x24
 8007efa:	4b11      	ldr	r3, [pc, #68]	; (8007f40 <_Z23getFont_verdana_19_4bppv+0x64>)
 8007efc:	9308      	str	r3, [sp, #32]
 8007efe:	4b11      	ldr	r3, [pc, #68]	; (8007f44 <_Z23getFont_verdana_19_4bppv+0x68>)
 8007f00:	9307      	str	r3, [sp, #28]
 8007f02:	2301      	movs	r3, #1
 8007f04:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007f08:	9304      	str	r3, [sp, #16]
 8007f0a:	2304      	movs	r3, #4
 8007f0c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007f10:	2313      	movs	r3, #19
 8007f12:	490d      	ldr	r1, [pc, #52]	; (8007f48 <_Z23getFont_verdana_19_4bppv+0x6c>)
 8007f14:	9300      	str	r3, [sp, #0]
 8007f16:	222f      	movs	r2, #47	; 0x2f
 8007f18:	2317      	movs	r3, #23
 8007f1a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f1e:	480b      	ldr	r0, [pc, #44]	; (8007f4c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007f20:	940a      	str	r4, [sp, #40]	; 0x28
 8007f22:	9401      	str	r4, [sp, #4]
 8007f24:	f7fd f96e 	bl	8005204 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f28:	4809      	ldr	r0, [pc, #36]	; (8007f50 <_Z23getFont_verdana_19_4bppv+0x74>)
 8007f2a:	f021 fd31 	bl	8029990 <atexit>
 8007f2e:	4628      	mov	r0, r5
 8007f30:	f020 ff0b 	bl	8028d4a <__cxa_guard_release>
    return verdana_19_4bpp;
}
 8007f34:	4805      	ldr	r0, [pc, #20]	; (8007f4c <_Z23getFont_verdana_19_4bppv+0x70>)
 8007f36:	b00f      	add	sp, #60	; 0x3c
 8007f38:	bd30      	pop	{r4, r5, pc}
 8007f3a:	bf00      	nop
 8007f3c:	20001f34 	.word	0x20001f34
 8007f40:	08044dbc 	.word	0x08044dbc
 8007f44:	08044e6c 	.word	0x08044e6c
 8007f48:	08044a60 	.word	0x08044a60
 8007f4c:	20001f38 	.word	0x20001f38
 8007f50:	08007ed9 	.word	0x08007ed9

08007f54 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f54:	4770      	bx	lr
	...

08007f58 <_Z23getFont_verdana_40_4bppv>:
{
 8007f58:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f5a:	4d16      	ldr	r5, [pc, #88]	; (8007fb4 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8007f5c:	682c      	ldr	r4, [r5, #0]
 8007f5e:	f3bf 8f5b 	dmb	ish
 8007f62:	f014 0401 	ands.w	r4, r4, #1
{
 8007f66:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f68:	d120      	bne.n	8007fac <_Z23getFont_verdana_40_4bppv+0x54>
 8007f6a:	4628      	mov	r0, r5
 8007f6c:	f020 fee1 	bl	8028d32 <__cxa_guard_acquire>
 8007f70:	b1e0      	cbz	r0, 8007fac <_Z23getFont_verdana_40_4bppv+0x54>
 8007f72:	233f      	movs	r3, #63	; 0x3f
 8007f74:	9309      	str	r3, [sp, #36]	; 0x24
 8007f76:	4b10      	ldr	r3, [pc, #64]	; (8007fb8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007f78:	9308      	str	r3, [sp, #32]
 8007f7a:	4b10      	ldr	r3, [pc, #64]	; (8007fbc <_Z23getFont_verdana_40_4bppv+0x64>)
 8007f7c:	4910      	ldr	r1, [pc, #64]	; (8007fc0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007f7e:	4811      	ldr	r0, [pc, #68]	; (8007fc4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007f80:	940a      	str	r4, [sp, #40]	; 0x28
 8007f82:	2201      	movs	r2, #1
 8007f84:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007f88:	2304      	movs	r3, #4
 8007f8a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007f8e:	2328      	movs	r3, #40	; 0x28
 8007f90:	9300      	str	r3, [sp, #0]
 8007f92:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f96:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007f9a:	9405      	str	r4, [sp, #20]
 8007f9c:	f7fd f932 	bl	8005204 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fa0:	4809      	ldr	r0, [pc, #36]	; (8007fc8 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007fa2:	f021 fcf5 	bl	8029990 <atexit>
 8007fa6:	4628      	mov	r0, r5
 8007fa8:	f020 fecf 	bl	8028d4a <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007fac:	4805      	ldr	r0, [pc, #20]	; (8007fc4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007fae:	b00f      	add	sp, #60	; 0x3c
 8007fb0:	bd30      	pop	{r4, r5, pc}
 8007fb2:	bf00      	nop
 8007fb4:	20001f64 	.word	0x20001f64
 8007fb8:	08044e60 	.word	0x08044e60
 8007fbc:	08044e70 	.word	0x08044e70
 8007fc0:	08044cf4 	.word	0x08044cf4
 8007fc4:	20001f68 	.word	0x20001f68
 8007fc8:	08007f55 	.word	0x08007f55

08007fcc <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007fcc:	2000      	movs	r0, #0
 8007fce:	4770      	bx	lr

08007fd0 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007fd0:	2000      	movs	r0, #0
 8007fd2:	4770      	bx	lr

08007fd4 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007fd4:	b40e      	push	{r1, r2, r3}
 8007fd6:	b503      	push	{r0, r1, lr}
 8007fd8:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007fda:	2100      	movs	r1, #0
{
 8007fdc:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007fe0:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007fe2:	f00d fdeb 	bl	8015bbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007fe6:	b002      	add	sp, #8
 8007fe8:	f85d eb04 	ldr.w	lr, [sp], #4
 8007fec:	b003      	add	sp, #12
 8007fee:	4770      	bx	lr

08007ff0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007ff0:	b40c      	push	{r2, r3}
 8007ff2:	b507      	push	{r0, r1, r2, lr}
 8007ff4:	ab04      	add	r3, sp, #16
 8007ff6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007ffa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007ffc:	f00d fdde 	bl	8015bbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008000:	b003      	add	sp, #12
 8008002:	f85d eb04 	ldr.w	lr, [sp], #4
 8008006:	b002      	add	sp, #8
 8008008:	4770      	bx	lr
	...

0800800c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 800800c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800800e:	b510      	push	{r4, lr}
 8008010:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008012:	b373      	cbz	r3, 8008072 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008014:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8008016:	b92b      	cbnz	r3, 8008024 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8008018:	4b18      	ldr	r3, [pc, #96]	; (800807c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800801a:	4a19      	ldr	r2, [pc, #100]	; (8008080 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 800801c:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800801e:	4819      	ldr	r0, [pc, #100]	; (8008084 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008020:	f021 fc98 	bl	8029954 <__assert_func>
            return buffer[pos];
 8008024:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8008026:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800802a:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 800802c:	b30b      	cbz	r3, 8008072 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 800802e:	f00f f9c2 	bl	80173b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008032:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008034:	2b01      	cmp	r3, #1
 8008036:	d803      	bhi.n	8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8008038:	4b13      	ldr	r3, [pc, #76]	; (8008088 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800803a:	4a14      	ldr	r2, [pc, #80]	; (800808c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 800803c:	21cb      	movs	r1, #203	; 0xcb
 800803e:	e7ee      	b.n	800801e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008040:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008042:	1c53      	adds	r3, r2, #1
 8008044:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8008046:	2b09      	cmp	r3, #9
 8008048:	4619      	mov	r1, r3
 800804a:	bf88      	it	hi
 800804c:	f1a3 010a 	subhi.w	r1, r3, #10
 8008050:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008054:	f640 103f 	movw	r0, #2367	; 0x93f
 8008058:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800805a:	4281      	cmp	r1, r0
 800805c:	d109      	bne.n	8008072 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 800805e:	2b0a      	cmp	r3, #10
 8008060:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008064:	bf28      	it	cs
 8008066:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8008068:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 800806c:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 800806e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8008070:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8008072:	4620      	mov	r0, r4
}
 8008074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8008078:	f00f b8a0 	b.w	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800807c:	0802d17c 	.word	0x0802d17c
 8008080:	0802d185 	.word	0x0802d185
 8008084:	0802d230 	.word	0x0802d230
 8008088:	0802d27a 	.word	0x0802d27a
 800808c:	0802d288 	.word	0x0802d288

08008090 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8008090:	f00f b85b 	b.w	801714a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08008094 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8008094:	b510      	push	{r4, lr}
 8008096:	b086      	sub	sp, #24
 8008098:	ac02      	add	r4, sp, #8
 800809a:	e884 0006 	stmia.w	r4, {r1, r2}
 800809e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80080a0:	ab0a      	add	r3, sp, #40	; 0x28
 80080a2:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80080a4:	9301      	str	r3, [sp, #4]
 80080a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080a8:	9300      	str	r3, [sp, #0]
 80080aa:	4621      	mov	r1, r4
 80080ac:	9b08      	ldr	r3, [sp, #32]
 80080ae:	f00c f949 	bl	8014344 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80080b2:	b006      	add	sp, #24
 80080b4:	bd10      	pop	{r4, pc}
	...

080080b8 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80080b8:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80080ba:	bb18      	cbnz	r0, 8008104 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80080bc:	4b12      	ldr	r3, [pc, #72]	; (8008108 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80080be:	4813      	ldr	r0, [pc, #76]	; (800810c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80080c0:	681c      	ldr	r4, [r3, #0]
 80080c2:	4913      	ldr	r1, [pc, #76]	; (8008110 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80080c4:	b1b4      	cbz	r4, 80080f4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80080c6:	6822      	ldr	r2, [r4, #0]
 80080c8:	4422      	add	r2, r4
 80080ca:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 80080cc:	6862      	ldr	r2, [r4, #4]
 80080ce:	4422      	add	r2, r4
 80080d0:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80080d2:	68a2      	ldr	r2, [r4, #8]
 80080d4:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 80080d6:	4b0f      	ldr	r3, [pc, #60]	; (8008114 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 80080d8:	2200      	movs	r2, #0
 80080da:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 80080dc:	f000 f838 	bl	8008150 <_ZN17TypedTextDatabase8getFontsEv>
 80080e0:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 80080e2:	f000 f833 	bl	800814c <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 80080e6:	4b0c      	ldr	r3, [pc, #48]	; (8008118 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 80080e8:	601c      	str	r4, [r3, #0]
        fonts = f;
 80080ea:	4b0c      	ldr	r3, [pc, #48]	; (800811c <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 80080ec:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 80080ee:	4b0c      	ldr	r3, [pc, #48]	; (8008120 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 80080f0:	8018      	strh	r0, [r3, #0]
    }
}
 80080f2:	e007      	b.n	8008104 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 80080f4:	4b0b      	ldr	r3, [pc, #44]	; (8008124 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 80080f6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 80080f8:	4b0b      	ldr	r3, [pc, #44]	; (8008128 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 80080fa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 80080fc:	4b0b      	ldr	r3, [pc, #44]	; (800812c <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 80080fe:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008100:	2c00      	cmp	r4, #0
 8008102:	d1e8      	bne.n	80080d6 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008104:	bd38      	pop	{r3, r4, r5, pc}
 8008106:	bf00      	nop
 8008108:	20001f94 	.word	0x20001f94
 800810c:	20001f98 	.word	0x20001f98
 8008110:	20001f9c 	.word	0x20001f9c
 8008114:	20001fa0 	.word	0x20001fa0
 8008118:	20012e0c 	.word	0x20012e0c
 800811c:	20012e14 	.word	0x20012e14
 8008120:	20012e10 	.word	0x20012e10
 8008124:	08044fc8 	.word	0x08044fc8
 8008128:	08044e74 	.word	0x08044e74
 800812c:	080454e4 	.word	0x080454e4

08008130 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008130:	4b04      	ldr	r3, [pc, #16]	; (8008144 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8008138:	4b03      	ldr	r3, [pc, #12]	; (8008148 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800813a:	681b      	ldr	r3, [r3, #0]
}
 800813c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008140:	4770      	bx	lr
 8008142:	bf00      	nop
 8008144:	20001f9c 	.word	0x20001f9c
 8008148:	20001f98 	.word	0x20001f98

0800814c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 800814c:	2055      	movs	r0, #85	; 0x55
 800814e:	4770      	bx	lr

08008150 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008150:	4800      	ldr	r0, [pc, #0]	; (8008154 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008152:	4770      	bx	lr
 8008154:	20001fa4 	.word	0x20001fa4

08008158 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 3:
        touchgfx_fonts[3] = &(getFont_verdana_12_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8008158:	b510      	push	{r4, lr}
    &(getFont_verdana_19_4bpp()),
 800815a:	f7ff febf 	bl	8007edc <_Z23getFont_verdana_19_4bppv>
};
 800815e:	4c06      	ldr	r4, [pc, #24]	; (8008178 <_GLOBAL__sub_I_touchgfx_fonts+0x20>)
 8008160:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8008162:	f7ff fef9 	bl	8007f58 <_Z23getFont_verdana_40_4bppv>
};
 8008166:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
 8008168:	f7ff fe3c 	bl	8007de4 <_Z23getFont_verdana_10_4bppv>
};
 800816c:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_12_4bpp())
 800816e:	f7ff fe77 	bl	8007e60 <_Z23getFont_verdana_12_4bppv>
};
 8008172:	60e0      	str	r0, [r4, #12]
} // namespace TypedTextDatabase
 8008174:	bd10      	pop	{r4, pc}
 8008176:	bf00      	nop
 8008178:	20001fa4 	.word	0x20001fa4

0800817c <_ZN20CalibrationPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CalibrationPresenter() {}
 800817c:	4770      	bx	lr

0800817e <_ZThn4_N20CalibrationPresenterD1Ev>:
 800817e:	3804      	subs	r0, #4
 8008180:	4770      	bx	lr

08008182 <_ZN20CalibrationPresenter10deactivateEv>:
}

void CalibrationPresenter::activate()
{

}
 8008182:	4770      	bx	lr

08008184 <_ZN20CalibrationPresenter15setTimeoutValueEi>:

}

void CalibrationPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008184:	68c0      	ldr	r0, [r0, #12]
 8008186:	6803      	ldr	r3, [r0, #0]
 8008188:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800818a:	4718      	bx	r3

0800818c <_ZThn4_N20CalibrationPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800818c:	f1a0 0004 	sub.w	r0, r0, #4
 8008190:	f7ff bff8 	b.w	8008184 <_ZN20CalibrationPresenter15setTimeoutValueEi>

08008194 <_ZN20CalibrationPresenterD0Ev>:
    virtual ~CalibrationPresenter() {}
 8008194:	b510      	push	{r4, lr}
 8008196:	2110      	movs	r1, #16
 8008198:	4604      	mov	r4, r0
 800819a:	f020 fdc8 	bl	8028d2e <_ZdlPvj>
 800819e:	4620      	mov	r0, r4
 80081a0:	bd10      	pop	{r4, pc}

080081a2 <_ZThn4_N20CalibrationPresenterD0Ev>:
 80081a2:	f1a0 0004 	sub.w	r0, r0, #4
 80081a6:	e7f5      	b.n	8008194 <_ZN20CalibrationPresenterD0Ev>

080081a8 <_ZN20CalibrationPresenterC1ER15CalibrationView>:
CalibrationPresenter::CalibrationPresenter(CalibrationView& v)
 80081a8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80081aa:	2200      	movs	r2, #0
 80081ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80081ae:	4a04      	ldr	r2, [pc, #16]	; (80081c0 <_ZN20CalibrationPresenterC1ER15CalibrationView+0x18>)
 80081b0:	60c1      	str	r1, [r0, #12]
 80081b2:	f102 0408 	add.w	r4, r2, #8
 80081b6:	3224      	adds	r2, #36	; 0x24
 80081b8:	6004      	str	r4, [r0, #0]
 80081ba:	6042      	str	r2, [r0, #4]
}
 80081bc:	bd10      	pop	{r4, pc}
 80081be:	bf00      	nop
 80081c0:	0802d35c 	.word	0x0802d35c

080081c4 <_ZN15CalibrationView14tearDownScreenEv>:
}

void CalibrationView::tearDownScreen()
{
    CalibrationViewBase::tearDownScreen();
}
 80081c4:	4770      	bx	lr
	...

080081c8 <_ZN15CalibrationViewD1Ev>:

class CalibrationView : public CalibrationViewBase
{
public:
    CalibrationView();
    virtual ~CalibrationView() {}
 80081c8:	b510      	push	{r4, lr}
 80081ca:	4b03      	ldr	r3, [pc, #12]	; (80081d8 <_ZN15CalibrationViewD1Ev+0x10>)
 80081cc:	6003      	str	r3, [r0, #0]
 80081ce:	4604      	mov	r4, r0
 80081d0:	f7fa fa1e 	bl	8002610 <_ZN19CalibrationViewBaseD1Ev>
 80081d4:	4620      	mov	r0, r4
 80081d6:	bd10      	pop	{r4, pc}
 80081d8:	0802d398 	.word	0x0802d398

080081dc <_ZN15CalibrationViewD0Ev>:
 80081dc:	b510      	push	{r4, lr}
 80081de:	4604      	mov	r4, r0
 80081e0:	f7ff fff2 	bl	80081c8 <_ZN15CalibrationViewD1Ev>
 80081e4:	4620      	mov	r0, r4
 80081e6:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80081ea:	f020 fda0 	bl	8028d2e <_ZdlPvj>
 80081ee:	4620      	mov	r0, r4
 80081f0:	bd10      	pop	{r4, pc}
	...

080081f4 <_ZN15CalibrationViewC1Ev>:
CalibrationView::CalibrationView()
 80081f4:	b510      	push	{r4, lr}
 80081f6:	4604      	mov	r4, r0
 80081f8:	f7fa fb1e 	bl	8002838 <_ZN19CalibrationViewBaseC1Ev>
 80081fc:	4b01      	ldr	r3, [pc, #4]	; (8008204 <_ZN15CalibrationViewC1Ev+0x10>)
 80081fe:	6023      	str	r3, [r4, #0]
}
 8008200:	4620      	mov	r0, r4
 8008202:	bd10      	pop	{r4, pc}
 8008204:	0802d398 	.word	0x0802d398

08008208 <_ZN15CalibrationView11setupScreenEv>:
    CalibrationViewBase::setupScreen();
 8008208:	f7fa b9cf 	b.w	80025aa <_ZN19CalibrationViewBase11setupScreenEv>

0800820c <_ZN15CalibrationView15setTimeoutValueEi>:

void CalibrationView::setTimeoutValue(int value)
{
 800820c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800820e:	4a0a      	ldr	r2, [pc, #40]	; (8008238 <_ZN15CalibrationView15setTimeoutValueEi+0x2c>)
{
 8008210:	4605      	mov	r5, r0
 8008212:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008214:	460b      	mov	r3, r1
 8008216:	f500 7046 	add.w	r0, r0, #792	; 0x318
 800821a:	2104      	movs	r1, #4
 800821c:	f00f fe80 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008220:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008224:	f00d fdf4 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008228:	b92c      	cbnz	r4, 8008236 <_ZN15CalibrationView15setTimeoutValueEi+0x2a>
 800822a:	f00c fd09 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 800822e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008232:	f7fb bc5f 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008236:	bd38      	pop	{r3, r4, r5, pc}
 8008238:	0802d38c 	.word	0x0802d38c

0800823c <_ZN25Calibration_HallPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_HallPresenter() {}
 800823c:	4770      	bx	lr

0800823e <_ZThn4_N25Calibration_HallPresenterD1Ev>:
 800823e:	3804      	subs	r0, #4
 8008240:	4770      	bx	lr

08008242 <_ZN25Calibration_HallPresenter10deactivateEv>:
}

void Calibration_HallPresenter::activate()
{

}
 8008242:	4770      	bx	lr

08008244 <_ZN25Calibration_HallPresenter15setTimeoutValueEi>:
}

void Calibration_HallPresenter::setTimeoutValue(int value)
{

}
 8008244:	4770      	bx	lr

08008246 <_ZN25Calibration_HallPresenterD0Ev>:
 8008246:	b510      	push	{r4, lr}
 8008248:	2110      	movs	r1, #16
 800824a:	4604      	mov	r4, r0
 800824c:	f020 fd6f 	bl	8028d2e <_ZdlPvj>
 8008250:	4620      	mov	r0, r4
 8008252:	bd10      	pop	{r4, pc}

08008254 <_ZThn4_N25Calibration_HallPresenterD0Ev>:
 8008254:	f1a0 0004 	sub.w	r0, r0, #4
 8008258:	e7f5      	b.n	8008246 <_ZN25Calibration_HallPresenterD0Ev>

0800825a <_ZThn4_N25Calibration_HallPresenter15setTimeoutValueEi>:
 800825a:	4770      	bx	lr

0800825c <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView>:
Calibration_HallPresenter::Calibration_HallPresenter(Calibration_HallView& v)
 800825c:	b510      	push	{r4, lr}
 800825e:	2200      	movs	r2, #0
 8008260:	6082      	str	r2, [r0, #8]
    : view(v)
 8008262:	4a04      	ldr	r2, [pc, #16]	; (8008274 <_ZN25Calibration_HallPresenterC1ER20Calibration_HallView+0x18>)
 8008264:	60c1      	str	r1, [r0, #12]
 8008266:	f102 0408 	add.w	r4, r2, #8
 800826a:	3224      	adds	r2, #36	; 0x24
 800826c:	6004      	str	r4, [r0, #0]
 800826e:	6042      	str	r2, [r0, #4]
}
 8008270:	bd10      	pop	{r4, pc}
 8008272:	bf00      	nop
 8008274:	0802d3c8 	.word	0x0802d3c8

08008278 <_ZN20Calibration_HallView14tearDownScreenEv>:
}

void Calibration_HallView::tearDownScreen()
{
    Calibration_HallViewBase::tearDownScreen();
}
 8008278:	4770      	bx	lr

0800827a <_ZN20Calibration_HallView15setTimeoutValueEi>:

void Calibration_HallView::setTimeoutValue(int value)
{

}
 800827a:	4770      	bx	lr

0800827c <_ZN20Calibration_HallViewD1Ev>:

class Calibration_HallView : public Calibration_HallViewBase
{
public:
    Calibration_HallView();
    virtual ~Calibration_HallView() {}
 800827c:	b510      	push	{r4, lr}
 800827e:	4b03      	ldr	r3, [pc, #12]	; (800828c <_ZN20Calibration_HallViewD1Ev+0x10>)
 8008280:	6003      	str	r3, [r0, #0]
 8008282:	4604      	mov	r4, r0
 8008284:	f7fa fd1c 	bl	8002cc0 <_ZN24Calibration_HallViewBaseD1Ev>
 8008288:	4620      	mov	r0, r4
 800828a:	bd10      	pop	{r4, pc}
 800828c:	0802d400 	.word	0x0802d400

08008290 <_ZN20Calibration_HallViewD0Ev>:
 8008290:	b510      	push	{r4, lr}
 8008292:	4604      	mov	r4, r0
 8008294:	f7ff fff2 	bl	800827c <_ZN20Calibration_HallViewD1Ev>
 8008298:	4620      	mov	r0, r4
 800829a:	f241 015c 	movw	r1, #4188	; 0x105c
 800829e:	f020 fd46 	bl	8028d2e <_ZdlPvj>
 80082a2:	4620      	mov	r0, r4
 80082a4:	bd10      	pop	{r4, pc}
	...

080082a8 <_ZN20Calibration_HallViewC1Ev>:
Calibration_HallView::Calibration_HallView()
 80082a8:	b510      	push	{r4, lr}
 80082aa:	4604      	mov	r4, r0
 80082ac:	f7fa fd30 	bl	8002d10 <_ZN24Calibration_HallViewBaseC1Ev>
 80082b0:	4b01      	ldr	r3, [pc, #4]	; (80082b8 <_ZN20Calibration_HallViewC1Ev+0x10>)
 80082b2:	6023      	str	r3, [r4, #0]
}
 80082b4:	4620      	mov	r0, r4
 80082b6:	bd10      	pop	{r4, pc}
 80082b8:	0802d400 	.word	0x0802d400

080082bc <_ZN20Calibration_HallView11setupScreenEv>:
    Calibration_HallViewBase::setupScreen();
 80082bc:	f7fa bcdc 	b.w	8002c78 <_ZN24Calibration_HallViewBase11setupScreenEv>

080082c0 <_ZN24Calibration_PadPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Calibration_PadPresenter() {}
 80082c0:	4770      	bx	lr

080082c2 <_ZThn4_N24Calibration_PadPresenterD1Ev>:
 80082c2:	3804      	subs	r0, #4
 80082c4:	4770      	bx	lr

080082c6 <_ZN24Calibration_PadPresenter10deactivateEv>:
}

void Calibration_PadPresenter::activate()
{

}
 80082c6:	4770      	bx	lr

080082c8 <_ZN24Calibration_PadPresenter15setTimeoutValueEi>:
}

void Calibration_PadPresenter::setTimeoutValue(int value)
{

}
 80082c8:	4770      	bx	lr

080082ca <_ZN24Calibration_PadPresenterD0Ev>:
 80082ca:	b510      	push	{r4, lr}
 80082cc:	2110      	movs	r1, #16
 80082ce:	4604      	mov	r4, r0
 80082d0:	f020 fd2d 	bl	8028d2e <_ZdlPvj>
 80082d4:	4620      	mov	r0, r4
 80082d6:	bd10      	pop	{r4, pc}

080082d8 <_ZThn4_N24Calibration_PadPresenterD0Ev>:
 80082d8:	f1a0 0004 	sub.w	r0, r0, #4
 80082dc:	e7f5      	b.n	80082ca <_ZN24Calibration_PadPresenterD0Ev>

080082de <_ZThn4_N24Calibration_PadPresenter15setTimeoutValueEi>:
 80082de:	4770      	bx	lr

080082e0 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView>:
Calibration_PadPresenter::Calibration_PadPresenter(Calibration_PadView& v)
 80082e0:	b510      	push	{r4, lr}
 80082e2:	2200      	movs	r2, #0
 80082e4:	6082      	str	r2, [r0, #8]
    : view(v)
 80082e6:	4a04      	ldr	r2, [pc, #16]	; (80082f8 <_ZN24Calibration_PadPresenterC1ER19Calibration_PadView+0x18>)
 80082e8:	60c1      	str	r1, [r0, #12]
 80082ea:	f102 0408 	add.w	r4, r2, #8
 80082ee:	3224      	adds	r2, #36	; 0x24
 80082f0:	6004      	str	r4, [r0, #0]
 80082f2:	6042      	str	r2, [r0, #4]
}
 80082f4:	bd10      	pop	{r4, pc}
 80082f6:	bf00      	nop
 80082f8:	0802d430 	.word	0x0802d430

080082fc <_ZN19Calibration_PadView14tearDownScreenEv>:
}

void Calibration_PadView::tearDownScreen()
{
    Calibration_PadViewBase::tearDownScreen();
}
 80082fc:	4770      	bx	lr

080082fe <_ZN19Calibration_PadView15setTimeoutValueEi>:

void Calibration_PadView::setTimeoutValue(int value)
{

}
 80082fe:	4770      	bx	lr

08008300 <_ZN19Calibration_PadViewD1Ev>:

class Calibration_PadView : public Calibration_PadViewBase
{
public:
    Calibration_PadView();
    virtual ~Calibration_PadView() {}
 8008300:	b510      	push	{r4, lr}
 8008302:	4b03      	ldr	r3, [pc, #12]	; (8008310 <_ZN19Calibration_PadViewD1Ev+0x10>)
 8008304:	6003      	str	r3, [r0, #0]
 8008306:	4604      	mov	r4, r0
 8008308:	f7fa fe8a 	bl	8003020 <_ZN23Calibration_PadViewBaseD1Ev>
 800830c:	4620      	mov	r0, r4
 800830e:	bd10      	pop	{r4, pc}
 8008310:	0802d468 	.word	0x0802d468

08008314 <_ZN19Calibration_PadViewD0Ev>:
 8008314:	b510      	push	{r4, lr}
 8008316:	4604      	mov	r4, r0
 8008318:	f7ff fff2 	bl	8008300 <_ZN19Calibration_PadViewD1Ev>
 800831c:	4620      	mov	r0, r4
 800831e:	f241 015c 	movw	r1, #4188	; 0x105c
 8008322:	f020 fd04 	bl	8028d2e <_ZdlPvj>
 8008326:	4620      	mov	r0, r4
 8008328:	bd10      	pop	{r4, pc}
	...

0800832c <_ZN19Calibration_PadViewC1Ev>:
Calibration_PadView::Calibration_PadView()
 800832c:	b510      	push	{r4, lr}
 800832e:	4604      	mov	r4, r0
 8008330:	f7fa fe9e 	bl	8003070 <_ZN23Calibration_PadViewBaseC1Ev>
 8008334:	4b01      	ldr	r3, [pc, #4]	; (800833c <_ZN19Calibration_PadViewC1Ev+0x10>)
 8008336:	6023      	str	r3, [r4, #0]
}
 8008338:	4620      	mov	r0, r4
 800833a:	bd10      	pop	{r4, pc}
 800833c:	0802d468 	.word	0x0802d468

08008340 <_ZN19Calibration_PadView11setupScreenEv>:
    Calibration_PadViewBase::setupScreen();
 8008340:	f7fa be4a 	b.w	8002fd8 <_ZN23Calibration_PadViewBase11setupScreenEv>

08008344 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8008344:	4770      	bx	lr

08008346 <_ZN19FrontendApplicationD0Ev>:
 8008346:	b510      	push	{r4, lr}
 8008348:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800834c:	4604      	mov	r4, r0
 800834e:	f020 fcee 	bl	8028d2e <_ZdlPvj>
 8008352:	4620      	mov	r0, r4
 8008354:	bd10      	pop	{r4, pc}

08008356 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8008356:	b510      	push	{r4, lr}
 8008358:	4604      	mov	r4, r0
    {
        model.tick();
 800835a:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800835e:	f000 fb1d 	bl	800899c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8008362:	4620      	mov	r0, r4
    }
 8008364:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008368:	f00c bd2e 	b.w	8014dc8 <_ZN8touchgfx11Application15handleTickEventEv>

0800836c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800836c:	b510      	push	{r4, lr}
 800836e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008370:	f7fb fa90 	bl	8003894 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008374:	4b01      	ldr	r3, [pc, #4]	; (800837c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008376:	6023      	str	r3, [r4, #0]
{

}
 8008378:	4620      	mov	r0, r4
 800837a:	bd10      	pop	{r4, pc}
 800837c:	0802d4a0 	.word	0x0802d4a0

08008380 <_ZN17Gauge_with_ValuesD1Ev>:
 8008380:	b510      	push	{r4, lr}
 8008382:	4b03      	ldr	r3, [pc, #12]	; (8008390 <_ZN17Gauge_with_ValuesD1Ev+0x10>)
 8008384:	6003      	str	r3, [r0, #0]
 8008386:	4604      	mov	r4, r0
 8008388:	f7fc fd8a 	bl	8004ea0 <_ZN21Gauge_with_ValuesBaseD1Ev>
 800838c:	4620      	mov	r0, r4
 800838e:	bd10      	pop	{r4, pc}
 8008390:	0802d4f4 	.word	0x0802d4f4

08008394 <_ZN17Gauge_with_ValuesD0Ev>:
 8008394:	b510      	push	{r4, lr}
 8008396:	4604      	mov	r4, r0
 8008398:	f7ff fff2 	bl	8008380 <_ZN17Gauge_with_ValuesD1Ev>
 800839c:	4620      	mov	r0, r4
 800839e:	f44f 7162 	mov.w	r1, #904	; 0x388
 80083a2:	f020 fcc4 	bl	8028d2e <_ZdlPvj>
 80083a6:	4620      	mov	r0, r4
 80083a8:	bd10      	pop	{r4, pc}
	...

080083ac <_ZN17Gauge_with_ValuesC1Ev>:
#include <gui/containers/Gauge_with_Values.hpp>

Gauge_with_Values::Gauge_with_Values()
 80083ac:	b510      	push	{r4, lr}
 80083ae:	4604      	mov	r4, r0
 80083b0:	f7fc fd80 	bl	8004eb4 <_ZN21Gauge_with_ValuesBaseC1Ev>
 80083b4:	4b01      	ldr	r3, [pc, #4]	; (80083bc <_ZN17Gauge_with_ValuesC1Ev+0x10>)
 80083b6:	6023      	str	r3, [r4, #0]
{

}
 80083b8:	4620      	mov	r0, r4
 80083ba:	bd10      	pop	{r4, pc}
 80083bc:	0802d4f4 	.word	0x0802d4f4

080083c0 <_ZN17Gauge_with_Values10initializeEv>:

void Gauge_with_Values::initialize()
{
    Gauge_with_ValuesBase::initialize();
 80083c0:	f7fc bd6f 	b.w	8004ea2 <_ZN21Gauge_with_ValuesBase10initializeEv>

080083c4 <_ZN18Main_MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Main_MenuPresenter() {}
 80083c4:	4770      	bx	lr

080083c6 <_ZThn4_N18Main_MenuPresenterD1Ev>:
 80083c6:	3804      	subs	r0, #4
 80083c8:	4770      	bx	lr

080083ca <_ZN18Main_MenuPresenter10deactivateEv>:
}

void Main_MenuPresenter::activate()
{

}
 80083ca:	4770      	bx	lr

080083cc <_ZN18Main_MenuPresenter15setTimeoutValueEi>:

}

void Main_MenuPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80083cc:	68c0      	ldr	r0, [r0, #12]
 80083ce:	6803      	ldr	r3, [r0, #0]
 80083d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80083d2:	4718      	bx	r3

080083d4 <_ZThn4_N18Main_MenuPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80083d4:	f1a0 0004 	sub.w	r0, r0, #4
 80083d8:	f7ff bff8 	b.w	80083cc <_ZN18Main_MenuPresenter15setTimeoutValueEi>

080083dc <_ZN18Main_MenuPresenterD0Ev>:
    virtual ~Main_MenuPresenter() {}
 80083dc:	b510      	push	{r4, lr}
 80083de:	2110      	movs	r1, #16
 80083e0:	4604      	mov	r4, r0
 80083e2:	f020 fca4 	bl	8028d2e <_ZdlPvj>
 80083e6:	4620      	mov	r0, r4
 80083e8:	bd10      	pop	{r4, pc}

080083ea <_ZThn4_N18Main_MenuPresenterD0Ev>:
 80083ea:	f1a0 0004 	sub.w	r0, r0, #4
 80083ee:	e7f5      	b.n	80083dc <_ZN18Main_MenuPresenterD0Ev>

080083f0 <_ZN18Main_MenuPresenterC1ER13Main_MenuView>:
Main_MenuPresenter::Main_MenuPresenter(Main_MenuView& v)
 80083f0:	b510      	push	{r4, lr}
 80083f2:	2200      	movs	r2, #0
 80083f4:	6082      	str	r2, [r0, #8]
    : view(v)
 80083f6:	4a04      	ldr	r2, [pc, #16]	; (8008408 <_ZN18Main_MenuPresenterC1ER13Main_MenuView+0x18>)
 80083f8:	60c1      	str	r1, [r0, #12]
 80083fa:	f102 0408 	add.w	r4, r2, #8
 80083fe:	3224      	adds	r2, #36	; 0x24
 8008400:	6004      	str	r4, [r0, #0]
 8008402:	6042      	str	r2, [r0, #4]
}
 8008404:	bd10      	pop	{r4, pc}
 8008406:	bf00      	nop
 8008408:	0802d580 	.word	0x0802d580

0800840c <_ZN13Main_MenuView14tearDownScreenEv>:
}

void Main_MenuView::tearDownScreen()
{
    Main_MenuViewBase::tearDownScreen();
}
 800840c:	4770      	bx	lr
	...

08008410 <_ZN13Main_MenuViewD1Ev>:

class Main_MenuView : public Main_MenuViewBase
{
public:
    Main_MenuView();
    virtual ~Main_MenuView() {}
 8008410:	b510      	push	{r4, lr}
 8008412:	4b03      	ldr	r3, [pc, #12]	; (8008420 <_ZN13Main_MenuViewD1Ev+0x10>)
 8008414:	6003      	str	r3, [r0, #0]
 8008416:	4604      	mov	r4, r0
 8008418:	f7fc ff48 	bl	80052ac <_ZN17Main_MenuViewBaseD1Ev>
 800841c:	4620      	mov	r0, r4
 800841e:	bd10      	pop	{r4, pc}
 8008420:	0802d5b8 	.word	0x0802d5b8

08008424 <_ZN13Main_MenuViewD0Ev>:
 8008424:	b510      	push	{r4, lr}
 8008426:	4604      	mov	r4, r0
 8008428:	f7ff fff2 	bl	8008410 <_ZN13Main_MenuViewD1Ev>
 800842c:	4620      	mov	r0, r4
 800842e:	f241 117c 	movw	r1, #4476	; 0x117c
 8008432:	f020 fc7c 	bl	8028d2e <_ZdlPvj>
 8008436:	4620      	mov	r0, r4
 8008438:	bd10      	pop	{r4, pc}
	...

0800843c <_ZN13Main_MenuViewC1Ev>:
Main_MenuView::Main_MenuView()
 800843c:	b510      	push	{r4, lr}
 800843e:	4604      	mov	r4, r0
 8008440:	f7fc ff7e 	bl	8005340 <_ZN17Main_MenuViewBaseC1Ev>
 8008444:	4b01      	ldr	r3, [pc, #4]	; (800844c <_ZN13Main_MenuViewC1Ev+0x10>)
 8008446:	6023      	str	r3, [r4, #0]
}
 8008448:	4620      	mov	r0, r4
 800844a:	bd10      	pop	{r4, pc}
 800844c:	0802d5b8 	.word	0x0802d5b8

08008450 <_ZN13Main_MenuView11setupScreenEv>:
    Main_MenuViewBase::setupScreen();
 8008450:	f7fc bf08 	b.w	8005264 <_ZN17Main_MenuViewBase11setupScreenEv>

08008454 <_ZN13Main_MenuView15setTimeoutValueEi>:

void Main_MenuView::setTimeoutValue(int value)
{
 8008454:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 8008456:	4a0a      	ldr	r2, [pc, #40]	; (8008480 <_ZN13Main_MenuView15setTimeoutValueEi+0x2c>)
{
 8008458:	4605      	mov	r5, r0
 800845a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3Buffer, TEXTAREA3_SIZE, "%d", value);
 800845c:	460b      	mov	r3, r1
 800845e:	f500 7055 	add.w	r0, r0, #852	; 0x354
 8008462:	2104      	movs	r1, #4
 8008464:	f00f fd5c 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3.invalidate();
 8008468:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800846c:	f00d fcd0 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008470:	b92c      	cbnz	r4, 800847e <_ZN13Main_MenuView15setTimeoutValueEi+0x2a>
 8008472:	f00c fbe5 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008476:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800847a:	f7fb bb3b 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800847e:	bd38      	pop	{r3, r4, r5, pc}
 8008480:	0802d38c 	.word	0x0802d38c

08008484 <_ZN20MeasurementPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MeasurementPresenter() {}
 8008484:	4770      	bx	lr

08008486 <_ZThn4_N20MeasurementPresenterD1Ev>:
 8008486:	3804      	subs	r0, #4
 8008488:	4770      	bx	lr

0800848a <_ZN20MeasurementPresenter10deactivateEv>:
}

void MeasurementPresenter::activate()
{

}
 800848a:	4770      	bx	lr

0800848c <_ZN20MeasurementPresenter15setTimeoutValueEi>:

}

void MeasurementPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800848c:	68c0      	ldr	r0, [r0, #12]
 800848e:	6803      	ldr	r3, [r0, #0]
 8008490:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008492:	4718      	bx	r3

08008494 <_ZThn4_N20MeasurementPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008494:	f1a0 0004 	sub.w	r0, r0, #4
 8008498:	f7ff bff8 	b.w	800848c <_ZN20MeasurementPresenter15setTimeoutValueEi>

0800849c <_ZN20MeasurementPresenterD0Ev>:
    virtual ~MeasurementPresenter() {}
 800849c:	b510      	push	{r4, lr}
 800849e:	2110      	movs	r1, #16
 80084a0:	4604      	mov	r4, r0
 80084a2:	f020 fc44 	bl	8028d2e <_ZdlPvj>
 80084a6:	4620      	mov	r0, r4
 80084a8:	bd10      	pop	{r4, pc}

080084aa <_ZThn4_N20MeasurementPresenterD0Ev>:
 80084aa:	f1a0 0004 	sub.w	r0, r0, #4
 80084ae:	e7f5      	b.n	800849c <_ZN20MeasurementPresenterD0Ev>

080084b0 <_ZN20MeasurementPresenterC1ER15MeasurementView>:
MeasurementPresenter::MeasurementPresenter(MeasurementView& v)
 80084b0:	b510      	push	{r4, lr}
 80084b2:	2200      	movs	r2, #0
 80084b4:	6082      	str	r2, [r0, #8]
    : view(v)
 80084b6:	4a04      	ldr	r2, [pc, #16]	; (80084c8 <_ZN20MeasurementPresenterC1ER15MeasurementView+0x18>)
 80084b8:	60c1      	str	r1, [r0, #12]
 80084ba:	f102 0408 	add.w	r4, r2, #8
 80084be:	3224      	adds	r2, #36	; 0x24
 80084c0:	6004      	str	r4, [r0, #0]
 80084c2:	6042      	str	r2, [r0, #4]
}
 80084c4:	bd10      	pop	{r4, pc}
 80084c6:	bf00      	nop
 80084c8:	0802d5e8 	.word	0x0802d5e8

080084cc <_ZN15MeasurementView14tearDownScreenEv>:
}

void MeasurementView::tearDownScreen()
{
    MeasurementViewBase::tearDownScreen();
}
 80084cc:	4770      	bx	lr
	...

080084d0 <_ZN15MeasurementViewD1Ev>:

class MeasurementView : public MeasurementViewBase
{
public:
    MeasurementView();
    virtual ~MeasurementView() {}
 80084d0:	b510      	push	{r4, lr}
 80084d2:	4b03      	ldr	r3, [pc, #12]	; (80084e0 <_ZN15MeasurementViewD1Ev+0x10>)
 80084d4:	6003      	str	r3, [r0, #0]
 80084d6:	4604      	mov	r4, r0
 80084d8:	f7fd f9a2 	bl	8005820 <_ZN19MeasurementViewBaseD1Ev>
 80084dc:	4620      	mov	r0, r4
 80084de:	bd10      	pop	{r4, pc}
 80084e0:	0802d620 	.word	0x0802d620

080084e4 <_ZN15MeasurementViewD0Ev>:
 80084e4:	b510      	push	{r4, lr}
 80084e6:	4604      	mov	r4, r0
 80084e8:	f7ff fff2 	bl	80084d0 <_ZN15MeasurementViewD1Ev>
 80084ec:	4620      	mov	r0, r4
 80084ee:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80084f2:	f020 fc1c 	bl	8028d2e <_ZdlPvj>
 80084f6:	4620      	mov	r0, r4
 80084f8:	bd10      	pop	{r4, pc}
	...

080084fc <_ZN15MeasurementViewC1Ev>:
MeasurementView::MeasurementView()
 80084fc:	b510      	push	{r4, lr}
 80084fe:	4604      	mov	r4, r0
 8008500:	f7fd f9c8 	bl	8005894 <_ZN19MeasurementViewBaseC1Ev>
 8008504:	4b01      	ldr	r3, [pc, #4]	; (800850c <_ZN15MeasurementViewC1Ev+0x10>)
 8008506:	6023      	str	r3, [r4, #0]
}
 8008508:	4620      	mov	r0, r4
 800850a:	bd10      	pop	{r4, pc}
 800850c:	0802d620 	.word	0x0802d620

08008510 <_ZN15MeasurementView11setupScreenEv>:
    MeasurementViewBase::setupScreen();
 8008510:	f7fd b962 	b.w	80057d8 <_ZN19MeasurementViewBase11setupScreenEv>

08008514 <_ZN15MeasurementView15setTimeoutValueEi>:

void MeasurementView::setTimeoutValue(int value)
{
 8008514:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008516:	4a0a      	ldr	r2, [pc, #40]	; (8008540 <_ZN15MeasurementView15setTimeoutValueEi+0x2c>)
{
 8008518:	4605      	mov	r5, r0
 800851a:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800851c:	460b      	mov	r3, r1
 800851e:	f500 7046 	add.w	r0, r0, #792	; 0x318
 8008522:	2104      	movs	r1, #4
 8008524:	f00f fcfc 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008528:	f105 0098 	add.w	r0, r5, #152	; 0x98
 800852c:	f00d fc70 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 8008530:	b92c      	cbnz	r4, 800853e <_ZN15MeasurementView15setTimeoutValueEi+0x2a>
 8008532:	f00c fb85 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008536:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 800853a:	f7fb badb 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 800853e:	bd38      	pop	{r3, r4, r5, pc}
 8008540:	0802d38c 	.word	0x0802d38c

08008544 <_ZN29Measurement_AccuratePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_AccuratePresenter() {}
 8008544:	4770      	bx	lr

08008546 <_ZThn4_N29Measurement_AccuratePresenterD1Ev>:
 8008546:	3804      	subs	r0, #4
 8008548:	4770      	bx	lr

0800854a <_ZN29Measurement_AccuratePresenter10deactivateEv>:
}

void Measurement_AccuratePresenter::activate()
{

}
 800854a:	4770      	bx	lr

0800854c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>:

}

void Measurement_AccuratePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 800854c:	68c0      	ldr	r0, [r0, #12]
 800854e:	6803      	ldr	r3, [r0, #0]
 8008550:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008552:	4718      	bx	r3

08008554 <_ZThn4_N29Measurement_AccuratePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 8008554:	f1a0 0004 	sub.w	r0, r0, #4
 8008558:	f7ff bff8 	b.w	800854c <_ZN29Measurement_AccuratePresenter15setTimeoutValueEi>

0800855c <_ZN29Measurement_AccuratePresenterD0Ev>:
    virtual ~Measurement_AccuratePresenter() {}
 800855c:	b510      	push	{r4, lr}
 800855e:	2110      	movs	r1, #16
 8008560:	4604      	mov	r4, r0
 8008562:	f020 fbe4 	bl	8028d2e <_ZdlPvj>
 8008566:	4620      	mov	r0, r4
 8008568:	bd10      	pop	{r4, pc}

0800856a <_ZThn4_N29Measurement_AccuratePresenterD0Ev>:
 800856a:	f1a0 0004 	sub.w	r0, r0, #4
 800856e:	e7f5      	b.n	800855c <_ZN29Measurement_AccuratePresenterD0Ev>

08008570 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView>:
Measurement_AccuratePresenter::Measurement_AccuratePresenter(Measurement_AccurateView& v)
 8008570:	b510      	push	{r4, lr}
 8008572:	2200      	movs	r2, #0
 8008574:	6082      	str	r2, [r0, #8]
    : view(v)
 8008576:	4a04      	ldr	r2, [pc, #16]	; (8008588 <_ZN29Measurement_AccuratePresenterC1ER24Measurement_AccurateView+0x18>)
 8008578:	60c1      	str	r1, [r0, #12]
 800857a:	f102 0408 	add.w	r4, r2, #8
 800857e:	3224      	adds	r2, #36	; 0x24
 8008580:	6004      	str	r4, [r0, #0]
 8008582:	6042      	str	r2, [r0, #4]
}
 8008584:	bd10      	pop	{r4, pc}
 8008586:	bf00      	nop
 8008588:	0802d650 	.word	0x0802d650

0800858c <_ZN24Measurement_AccurateView14tearDownScreenEv>:
}

void Measurement_AccurateView::tearDownScreen()
{
    Measurement_AccurateViewBase::tearDownScreen();
}
 800858c:	4770      	bx	lr
	...

08008590 <_ZN24Measurement_AccurateViewD1Ev>:

class Measurement_AccurateView : public Measurement_AccurateViewBase
{
public:
    Measurement_AccurateView();
    virtual ~Measurement_AccurateView() {}
 8008590:	b510      	push	{r4, lr}
 8008592:	4b03      	ldr	r3, [pc, #12]	; (80085a0 <_ZN24Measurement_AccurateViewD1Ev+0x10>)
 8008594:	6003      	str	r3, [r0, #0]
 8008596:	4604      	mov	r4, r0
 8008598:	f7fd fbc4 	bl	8005d24 <_ZN28Measurement_AccurateViewBaseD1Ev>
 800859c:	4620      	mov	r0, r4
 800859e:	bd10      	pop	{r4, pc}
 80085a0:	0802d688 	.word	0x0802d688

080085a4 <_ZN24Measurement_AccurateViewD0Ev>:
 80085a4:	b510      	push	{r4, lr}
 80085a6:	4604      	mov	r4, r0
 80085a8:	f7ff fff2 	bl	8008590 <_ZN24Measurement_AccurateViewD1Ev>
 80085ac:	4620      	mov	r0, r4
 80085ae:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 80085b2:	f020 fbbc 	bl	8028d2e <_ZdlPvj>
 80085b6:	4620      	mov	r0, r4
 80085b8:	bd10      	pop	{r4, pc}
	...

080085bc <_ZN24Measurement_AccurateViewC1Ev>:
Measurement_AccurateView::Measurement_AccurateView()
 80085bc:	b510      	push	{r4, lr}
 80085be:	4604      	mov	r4, r0
 80085c0:	f7fd fbea 	bl	8005d98 <_ZN28Measurement_AccurateViewBaseC1Ev>
 80085c4:	4b01      	ldr	r3, [pc, #4]	; (80085cc <_ZN24Measurement_AccurateViewC1Ev+0x10>)
 80085c6:	6023      	str	r3, [r4, #0]
}
 80085c8:	4620      	mov	r0, r4
 80085ca:	bd10      	pop	{r4, pc}
 80085cc:	0802d688 	.word	0x0802d688

080085d0 <_ZN24Measurement_AccurateView11setupScreenEv>:
    Measurement_AccurateViewBase::setupScreen();
 80085d0:	f7fd bb84 	b.w	8005cdc <_ZN28Measurement_AccurateViewBase11setupScreenEv>

080085d4 <_ZN24Measurement_AccurateView15setTimeoutValueEi>:

void Measurement_AccurateView::setTimeoutValue(int value)
{
 80085d4:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085d6:	4a0a      	ldr	r2, [pc, #40]	; (8008600 <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2c>)
{
 80085d8:	4605      	mov	r5, r0
 80085da:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80085dc:	460b      	mov	r3, r1
 80085de:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80085e2:	2104      	movs	r1, #4
 80085e4:	f00f fc9c 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80085e8:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80085ec:	f00d fc10 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80085f0:	b92c      	cbnz	r4, 80085fe <_ZN24Measurement_AccurateView15setTimeoutValueEi+0x2a>
 80085f2:	f00c fb25 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80085f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80085fa:	f7fb ba7b 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80085fe:	bd38      	pop	{r3, r4, r5, pc}
 8008600:	0802d38c 	.word	0x0802d38c

08008604 <_ZN37Measurement_Accurate_DisplayPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_DisplayPresenter() {}
 8008604:	4770      	bx	lr

08008606 <_ZThn4_N37Measurement_Accurate_DisplayPresenterD1Ev>:
 8008606:	3804      	subs	r0, #4
 8008608:	4770      	bx	lr

0800860a <_ZN37Measurement_Accurate_DisplayPresenter10deactivateEv>:
}

void Measurement_Accurate_DisplayPresenter::activate()
{

}
 800860a:	4770      	bx	lr

0800860c <_ZN37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
}

void Measurement_Accurate_DisplayPresenter::setTimeoutValue(int value)
{

}
 800860c:	4770      	bx	lr

0800860e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>:
 800860e:	b510      	push	{r4, lr}
 8008610:	2110      	movs	r1, #16
 8008612:	4604      	mov	r4, r0
 8008614:	f020 fb8b 	bl	8028d2e <_ZdlPvj>
 8008618:	4620      	mov	r0, r4
 800861a:	bd10      	pop	{r4, pc}

0800861c <_ZThn4_N37Measurement_Accurate_DisplayPresenterD0Ev>:
 800861c:	f1a0 0004 	sub.w	r0, r0, #4
 8008620:	e7f5      	b.n	800860e <_ZN37Measurement_Accurate_DisplayPresenterD0Ev>

08008622 <_ZThn4_N37Measurement_Accurate_DisplayPresenter15setTimeoutValueEi>:
 8008622:	4770      	bx	lr

08008624 <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView>:
Measurement_Accurate_DisplayPresenter::Measurement_Accurate_DisplayPresenter(Measurement_Accurate_DisplayView& v)
 8008624:	b510      	push	{r4, lr}
 8008626:	2200      	movs	r2, #0
 8008628:	6082      	str	r2, [r0, #8]
    : view(v)
 800862a:	4a04      	ldr	r2, [pc, #16]	; (800863c <_ZN37Measurement_Accurate_DisplayPresenterC1ER32Measurement_Accurate_DisplayView+0x18>)
 800862c:	60c1      	str	r1, [r0, #12]
 800862e:	f102 0408 	add.w	r4, r2, #8
 8008632:	3224      	adds	r2, #36	; 0x24
 8008634:	6004      	str	r4, [r0, #0]
 8008636:	6042      	str	r2, [r0, #4]
}
 8008638:	bd10      	pop	{r4, pc}
 800863a:	bf00      	nop
 800863c:	0802d6b8 	.word	0x0802d6b8

08008640 <_ZN32Measurement_Accurate_DisplayView14tearDownScreenEv>:
}

void Measurement_Accurate_DisplayView::tearDownScreen()
{
    Measurement_Accurate_DisplayViewBase::tearDownScreen();
}
 8008640:	4770      	bx	lr
	...

08008644 <_ZN32Measurement_Accurate_DisplayViewD1Ev>:

class Measurement_Accurate_DisplayView : public Measurement_Accurate_DisplayViewBase
{
public:
    Measurement_Accurate_DisplayView();
    virtual ~Measurement_Accurate_DisplayView() {}
 8008644:	b510      	push	{r4, lr}
 8008646:	4b03      	ldr	r3, [pc, #12]	; (8008654 <_ZN32Measurement_Accurate_DisplayViewD1Ev+0x10>)
 8008648:	6003      	str	r3, [r0, #0]
 800864a:	4604      	mov	r4, r0
 800864c:	f7fd fdf6 	bl	800623c <_ZN36Measurement_Accurate_DisplayViewBaseD1Ev>
 8008650:	4620      	mov	r0, r4
 8008652:	bd10      	pop	{r4, pc}
 8008654:	0802d6f0 	.word	0x0802d6f0

08008658 <_ZN32Measurement_Accurate_DisplayViewD0Ev>:
 8008658:	b510      	push	{r4, lr}
 800865a:	4604      	mov	r4, r0
 800865c:	f7ff fff2 	bl	8008644 <_ZN32Measurement_Accurate_DisplayViewD1Ev>
 8008660:	4620      	mov	r0, r4
 8008662:	f241 31e4 	movw	r1, #5092	; 0x13e4
 8008666:	f020 fb62 	bl	8028d2e <_ZdlPvj>
 800866a:	4620      	mov	r0, r4
 800866c:	bd10      	pop	{r4, pc}
	...

08008670 <_ZN32Measurement_Accurate_DisplayViewC1Ev>:
Measurement_Accurate_DisplayView::Measurement_Accurate_DisplayView()
 8008670:	b510      	push	{r4, lr}
 8008672:	4604      	mov	r4, r0
 8008674:	f7fd fe02 	bl	800627c <_ZN36Measurement_Accurate_DisplayViewBaseC1Ev>
 8008678:	4b01      	ldr	r3, [pc, #4]	; (8008680 <_ZN32Measurement_Accurate_DisplayViewC1Ev+0x10>)
 800867a:	6023      	str	r3, [r4, #0]
}
 800867c:	4620      	mov	r0, r4
 800867e:	bd10      	pop	{r4, pc}
 8008680:	0802d6f0 	.word	0x0802d6f0

08008684 <_ZN32Measurement_Accurate_DisplayView11setupScreenEv>:
    Measurement_Accurate_DisplayViewBase::setupScreen();
 8008684:	f7fd bdcb 	b.w	800621e <_ZN36Measurement_Accurate_DisplayViewBase11setupScreenEv>

08008688 <_ZN39Measurement_Accurate_Display_2PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Accurate_Display_2Presenter() {}
 8008688:	4770      	bx	lr

0800868a <_ZThn4_N39Measurement_Accurate_Display_2PresenterD1Ev>:
 800868a:	3804      	subs	r0, #4
 800868c:	4770      	bx	lr

0800868e <_ZN39Measurement_Accurate_Display_2Presenter10deactivateEv>:
}

void Measurement_Accurate_Display_2Presenter::activate()
{

}
 800868e:	4770      	bx	lr

08008690 <_ZN39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
}

void Measurement_Accurate_Display_2Presenter::setTimeoutValue(int value)
{

}
 8008690:	4770      	bx	lr

08008692 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>:
 8008692:	b510      	push	{r4, lr}
 8008694:	2110      	movs	r1, #16
 8008696:	4604      	mov	r4, r0
 8008698:	f020 fb49 	bl	8028d2e <_ZdlPvj>
 800869c:	4620      	mov	r0, r4
 800869e:	bd10      	pop	{r4, pc}

080086a0 <_ZThn4_N39Measurement_Accurate_Display_2PresenterD0Ev>:
 80086a0:	f1a0 0004 	sub.w	r0, r0, #4
 80086a4:	e7f5      	b.n	8008692 <_ZN39Measurement_Accurate_Display_2PresenterD0Ev>

080086a6 <_ZThn4_N39Measurement_Accurate_Display_2Presenter15setTimeoutValueEi>:
 80086a6:	4770      	bx	lr

080086a8 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View>:
Measurement_Accurate_Display_2Presenter::Measurement_Accurate_Display_2Presenter(Measurement_Accurate_Display_2View& v)
 80086a8:	b510      	push	{r4, lr}
 80086aa:	2200      	movs	r2, #0
 80086ac:	6082      	str	r2, [r0, #8]
    : view(v)
 80086ae:	4a04      	ldr	r2, [pc, #16]	; (80086c0 <_ZN39Measurement_Accurate_Display_2PresenterC1ER34Measurement_Accurate_Display_2View+0x18>)
 80086b0:	60c1      	str	r1, [r0, #12]
 80086b2:	f102 0408 	add.w	r4, r2, #8
 80086b6:	3224      	adds	r2, #36	; 0x24
 80086b8:	6004      	str	r4, [r0, #0]
 80086ba:	6042      	str	r2, [r0, #4]
}
 80086bc:	bd10      	pop	{r4, pc}
 80086be:	bf00      	nop
 80086c0:	0802d71c 	.word	0x0802d71c

080086c4 <_ZN34Measurement_Accurate_Display_2View14tearDownScreenEv>:
}

void Measurement_Accurate_Display_2View::tearDownScreen()
{
    Measurement_Accurate_Display_2ViewBase::tearDownScreen();
}
 80086c4:	4770      	bx	lr
	...

080086c8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>:

class Measurement_Accurate_Display_2View : public Measurement_Accurate_Display_2ViewBase
{
public:
    Measurement_Accurate_Display_2View();
    virtual ~Measurement_Accurate_Display_2View() {}
 80086c8:	b510      	push	{r4, lr}
 80086ca:	4b03      	ldr	r3, [pc, #12]	; (80086d8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev+0x10>)
 80086cc:	6003      	str	r3, [r0, #0]
 80086ce:	4604      	mov	r4, r0
 80086d0:	f7fd ff78 	bl	80065c4 <_ZN38Measurement_Accurate_Display_2ViewBaseD1Ev>
 80086d4:	4620      	mov	r0, r4
 80086d6:	bd10      	pop	{r4, pc}
 80086d8:	0802d754 	.word	0x0802d754

080086dc <_ZN34Measurement_Accurate_Display_2ViewD0Ev>:
 80086dc:	b510      	push	{r4, lr}
 80086de:	4604      	mov	r4, r0
 80086e0:	f7ff fff2 	bl	80086c8 <_ZN34Measurement_Accurate_Display_2ViewD1Ev>
 80086e4:	4620      	mov	r0, r4
 80086e6:	f241 31e4 	movw	r1, #5092	; 0x13e4
 80086ea:	f020 fb20 	bl	8028d2e <_ZdlPvj>
 80086ee:	4620      	mov	r0, r4
 80086f0:	bd10      	pop	{r4, pc}
	...

080086f4 <_ZN34Measurement_Accurate_Display_2ViewC1Ev>:
Measurement_Accurate_Display_2View::Measurement_Accurate_Display_2View()
 80086f4:	b510      	push	{r4, lr}
 80086f6:	4604      	mov	r4, r0
 80086f8:	f7fd ff84 	bl	8006604 <_ZN38Measurement_Accurate_Display_2ViewBaseC1Ev>
 80086fc:	4b01      	ldr	r3, [pc, #4]	; (8008704 <_ZN34Measurement_Accurate_Display_2ViewC1Ev+0x10>)
 80086fe:	6023      	str	r3, [r4, #0]
}
 8008700:	4620      	mov	r0, r4
 8008702:	bd10      	pop	{r4, pc}
 8008704:	0802d754 	.word	0x0802d754

08008708 <_ZN34Measurement_Accurate_Display_2View11setupScreenEv>:
    Measurement_Accurate_Display_2ViewBase::setupScreen();
 8008708:	f7fd bf4d 	b.w	80065a6 <_ZN38Measurement_Accurate_Display_2ViewBase11setupScreenEv>

0800870c <_ZN27Measurement_SinglePresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_SinglePresenter() {}
 800870c:	4770      	bx	lr

0800870e <_ZThn4_N27Measurement_SinglePresenterD1Ev>:
 800870e:	3804      	subs	r0, #4
 8008710:	4770      	bx	lr

08008712 <_ZN27Measurement_SinglePresenter10deactivateEv>:
}

void Measurement_SinglePresenter::activate()
{

}
 8008712:	4770      	bx	lr

08008714 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>:

}

void Measurement_SinglePresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 8008714:	68c0      	ldr	r0, [r0, #12]
 8008716:	6803      	ldr	r3, [r0, #0]
 8008718:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800871a:	4718      	bx	r3

0800871c <_ZThn4_N27Measurement_SinglePresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 800871c:	f1a0 0004 	sub.w	r0, r0, #4
 8008720:	f7ff bff8 	b.w	8008714 <_ZN27Measurement_SinglePresenter15setTimeoutValueEi>

08008724 <_ZN27Measurement_SinglePresenterD0Ev>:
    virtual ~Measurement_SinglePresenter() {}
 8008724:	b510      	push	{r4, lr}
 8008726:	2110      	movs	r1, #16
 8008728:	4604      	mov	r4, r0
 800872a:	f020 fb00 	bl	8028d2e <_ZdlPvj>
 800872e:	4620      	mov	r0, r4
 8008730:	bd10      	pop	{r4, pc}

08008732 <_ZThn4_N27Measurement_SinglePresenterD0Ev>:
 8008732:	f1a0 0004 	sub.w	r0, r0, #4
 8008736:	e7f5      	b.n	8008724 <_ZN27Measurement_SinglePresenterD0Ev>

08008738 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView>:
Measurement_SinglePresenter::Measurement_SinglePresenter(Measurement_SingleView& v)
 8008738:	b510      	push	{r4, lr}
 800873a:	2200      	movs	r2, #0
 800873c:	6082      	str	r2, [r0, #8]
    : view(v)
 800873e:	4a04      	ldr	r2, [pc, #16]	; (8008750 <_ZN27Measurement_SinglePresenterC1ER22Measurement_SingleView+0x18>)
 8008740:	60c1      	str	r1, [r0, #12]
 8008742:	f102 0408 	add.w	r4, r2, #8
 8008746:	3224      	adds	r2, #36	; 0x24
 8008748:	6004      	str	r4, [r0, #0]
 800874a:	6042      	str	r2, [r0, #4]
}
 800874c:	bd10      	pop	{r4, pc}
 800874e:	bf00      	nop
 8008750:	0802d780 	.word	0x0802d780

08008754 <_ZN22Measurement_SingleView14tearDownScreenEv>:
}

void Measurement_SingleView::tearDownScreen()
{
    Measurement_SingleViewBase::tearDownScreen();
}
 8008754:	4770      	bx	lr
	...

08008758 <_ZN22Measurement_SingleViewD1Ev>:

class Measurement_SingleView : public Measurement_SingleViewBase
{
public:
    Measurement_SingleView();
    virtual ~Measurement_SingleView() {}
 8008758:	b510      	push	{r4, lr}
 800875a:	4b03      	ldr	r3, [pc, #12]	; (8008768 <_ZN22Measurement_SingleViewD1Ev+0x10>)
 800875c:	6003      	str	r3, [r0, #0]
 800875e:	4604      	mov	r4, r0
 8008760:	f7fe f8e6 	bl	8006930 <_ZN26Measurement_SingleViewBaseD1Ev>
 8008764:	4620      	mov	r0, r4
 8008766:	bd10      	pop	{r4, pc}
 8008768:	0802d7b8 	.word	0x0802d7b8

0800876c <_ZN22Measurement_SingleViewD0Ev>:
 800876c:	b510      	push	{r4, lr}
 800876e:	4604      	mov	r4, r0
 8008770:	f7ff fff2 	bl	8008758 <_ZN22Measurement_SingleViewD1Ev>
 8008774:	4620      	mov	r0, r4
 8008776:	f44f 518a 	mov.w	r1, #4416	; 0x1140
 800877a:	f020 fad8 	bl	8028d2e <_ZdlPvj>
 800877e:	4620      	mov	r0, r4
 8008780:	bd10      	pop	{r4, pc}
	...

08008784 <_ZN22Measurement_SingleViewC1Ev>:
Measurement_SingleView::Measurement_SingleView()
 8008784:	b510      	push	{r4, lr}
 8008786:	4604      	mov	r4, r0
 8008788:	f7fe f90c 	bl	80069a4 <_ZN26Measurement_SingleViewBaseC1Ev>
 800878c:	4b01      	ldr	r3, [pc, #4]	; (8008794 <_ZN22Measurement_SingleViewC1Ev+0x10>)
 800878e:	6023      	str	r3, [r4, #0]
}
 8008790:	4620      	mov	r0, r4
 8008792:	bd10      	pop	{r4, pc}
 8008794:	0802d7b8 	.word	0x0802d7b8

08008798 <_ZN22Measurement_SingleView11setupScreenEv>:
    Measurement_SingleViewBase::setupScreen();
 8008798:	f7fe b8a6 	b.w	80068e8 <_ZN26Measurement_SingleViewBase11setupScreenEv>

0800879c <_ZN22Measurement_SingleView15setTimeoutValueEi>:

void Measurement_SingleView::setTimeoutValue(int value)
{
 800879c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 800879e:	4a0a      	ldr	r2, [pc, #40]	; (80087c8 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2c>)
{
 80087a0:	4605      	mov	r5, r0
 80087a2:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 80087a4:	460b      	mov	r3, r1
 80087a6:	f500 7046 	add.w	r0, r0, #792	; 0x318
 80087aa:	2104      	movs	r1, #4
 80087ac:	f00f fbb8 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 80087b0:	f105 0098 	add.w	r0, r5, #152	; 0x98
 80087b4:	f00d fb2c 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if(value == 0)
 80087b8:	b92c      	cbnz	r4, 80087c6 <_ZN22Measurement_SingleView15setTimeoutValueEi+0x2a>
 80087ba:	f00c fa41 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
	{
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 80087be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 80087c2:	f7fb b997 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 80087c6:	bd38      	pop	{r3, r4, r5, pc}
 80087c8:	0802d38c 	.word	0x0802d38c

080087cc <_ZN38Measurement_Single_Display_1PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_1PPresenter() {}
 80087cc:	4770      	bx	lr

080087ce <_ZThn4_N38Measurement_Single_Display_1PPresenterD1Ev>:
 80087ce:	3804      	subs	r0, #4
 80087d0:	4770      	bx	lr

080087d2 <_ZN38Measurement_Single_Display_1PPresenter10deactivateEv>:
}

void Measurement_Single_Display_1PPresenter::activate()
{

}
 80087d2:	4770      	bx	lr

080087d4 <_ZN38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_1PPresenter::setTimeoutValue(int value)
{

}
 80087d4:	4770      	bx	lr

080087d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>:
 80087d6:	b510      	push	{r4, lr}
 80087d8:	2110      	movs	r1, #16
 80087da:	4604      	mov	r4, r0
 80087dc:	f020 faa7 	bl	8028d2e <_ZdlPvj>
 80087e0:	4620      	mov	r0, r4
 80087e2:	bd10      	pop	{r4, pc}

080087e4 <_ZThn4_N38Measurement_Single_Display_1PPresenterD0Ev>:
 80087e4:	f1a0 0004 	sub.w	r0, r0, #4
 80087e8:	e7f5      	b.n	80087d6 <_ZN38Measurement_Single_Display_1PPresenterD0Ev>

080087ea <_ZThn4_N38Measurement_Single_Display_1PPresenter15setTimeoutValueEi>:
 80087ea:	4770      	bx	lr

080087ec <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView>:
Measurement_Single_Display_1PPresenter::Measurement_Single_Display_1PPresenter(Measurement_Single_Display_1PView& v)
 80087ec:	b510      	push	{r4, lr}
 80087ee:	2200      	movs	r2, #0
 80087f0:	6082      	str	r2, [r0, #8]
    : view(v)
 80087f2:	4a04      	ldr	r2, [pc, #16]	; (8008804 <_ZN38Measurement_Single_Display_1PPresenterC1ER33Measurement_Single_Display_1PView+0x18>)
 80087f4:	60c1      	str	r1, [r0, #12]
 80087f6:	f102 0408 	add.w	r4, r2, #8
 80087fa:	3224      	adds	r2, #36	; 0x24
 80087fc:	6004      	str	r4, [r0, #0]
 80087fe:	6042      	str	r2, [r0, #4]
}
 8008800:	bd10      	pop	{r4, pc}
 8008802:	bf00      	nop
 8008804:	0802d7e8 	.word	0x0802d7e8

08008808 <_ZN33Measurement_Single_Display_1PView14tearDownScreenEv>:
}

void Measurement_Single_Display_1PView::tearDownScreen()
{
    Measurement_Single_Display_1PViewBase::tearDownScreen();
}
 8008808:	4770      	bx	lr
	...

0800880c <_ZN33Measurement_Single_Display_1PViewD1Ev>:

class Measurement_Single_Display_1PView : public Measurement_Single_Display_1PViewBase
{
public:
    Measurement_Single_Display_1PView();
    virtual ~Measurement_Single_Display_1PView() {}
 800880c:	b510      	push	{r4, lr}
 800880e:	4b03      	ldr	r3, [pc, #12]	; (800881c <_ZN33Measurement_Single_Display_1PViewD1Ev+0x10>)
 8008810:	6003      	str	r3, [r0, #0]
 8008812:	4604      	mov	r4, r0
 8008814:	f7fe fb12 	bl	8006e3c <_ZN37Measurement_Single_Display_1PViewBaseD1Ev>
 8008818:	4620      	mov	r0, r4
 800881a:	bd10      	pop	{r4, pc}
 800881c:	0802d828 	.word	0x0802d828

08008820 <_ZN33Measurement_Single_Display_1PViewD0Ev>:
 8008820:	b510      	push	{r4, lr}
 8008822:	4604      	mov	r4, r0
 8008824:	f7ff fff2 	bl	800880c <_ZN33Measurement_Single_Display_1PViewD1Ev>
 8008828:	4620      	mov	r0, r4
 800882a:	f241 31f8 	movw	r1, #5112	; 0x13f8
 800882e:	f020 fa7e 	bl	8028d2e <_ZdlPvj>
 8008832:	4620      	mov	r0, r4
 8008834:	bd10      	pop	{r4, pc}
	...

08008838 <_ZN33Measurement_Single_Display_1PViewC1Ev>:
Measurement_Single_Display_1PView::Measurement_Single_Display_1PView()
 8008838:	b510      	push	{r4, lr}
 800883a:	4604      	mov	r4, r0
 800883c:	f7fe fb38 	bl	8006eb0 <_ZN37Measurement_Single_Display_1PViewBaseC1Ev>
 8008840:	4b01      	ldr	r3, [pc, #4]	; (8008848 <_ZN33Measurement_Single_Display_1PViewC1Ev+0x10>)
 8008842:	6023      	str	r3, [r4, #0]
}
 8008844:	4620      	mov	r0, r4
 8008846:	bd10      	pop	{r4, pc}
 8008848:	0802d828 	.word	0x0802d828

0800884c <_ZN33Measurement_Single_Display_1PView11setupScreenEv>:
    Measurement_Single_Display_1PViewBase::setupScreen();
 800884c:	f7fe bad1 	b.w	8006df2 <_ZN37Measurement_Single_Display_1PViewBase11setupScreenEv>

08008850 <_ZN33Measurement_Single_Display_1PView7testGuiEv>:

void Measurement_Single_Display_1PView::testGui()
{
 8008850:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008852:	4e2a      	ldr	r6, [pc, #168]	; (80088fc <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xac>)
	// Disable Touchgfx tasks to avoid interference
	touchgfx::HAL::getInstance()->disableInterrupts();

	int test = 	0;

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008854:	4f2a      	ldr	r7, [pc, #168]	; (8008900 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb0>)
{
 8008856:	4604      	mov	r4, r0
 8008858:	6830      	ldr	r0, [r6, #0]
	touchgfx::HAL::getInstance()->disableInterrupts();
 800885a:	6803      	ldr	r3, [r0, #0]
{
 800885c:	b087      	sub	sp, #28
	touchgfx::HAL::getInstance()->disableInterrupts();
 800885e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8008860:	4798      	blx	r3
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_SET);
 8008862:	2201      	movs	r2, #1
 8008864:	2180      	movs	r1, #128	; 0x80
 8008866:	4638      	mov	r0, r7
 8008868:	f000 fdea 	bl	8009440 <HAL_GPIO_WritePin>

	test = updateGUI_test();
 800886c:	f7f8 fd44 	bl	80012f8 <updateGUI_test>
 8008870:	4605      	mov	r5, r0

	uint32_t* Samples = MEAS_start_measure();
 8008872:	f7f9 fa5f 	bl	8001d34 <MEAS_start_measure>

	//callback to fft
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008876:	2232      	movs	r2, #50	; 0x32
	uint32_t* Samples = MEAS_start_measure();
 8008878:	4601      	mov	r1, r0
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 800887a:	2001      	movs	r0, #1
 800887c:	f7f8 fc88 	bl	8001190 <calculate_freq_and_signalstrength>

	//update GUI values
	//set gauge angle
	SMD1_gauge.setValue(test);
 8008880:	f104 00e0 	add.w	r0, r4, #224	; 0xe0
 8008884:	4629      	mov	r1, r5
	FFT fft = calculate_freq_and_signalstrength(1, Samples, 50);
 8008886:	ed8d 0a04 	vstr	s0, [sp, #16]
 800888a:	edcd 0a05 	vstr	s1, [sp, #20]
	SMD1_gauge.setValue(test);
 800888e:	9001      	str	r0, [sp, #4]
 8008890:	f009 fa6a 	bl	8011d68 <_ZN8touchgfx5Gauge8setValueEi>
	SMD1_gauge.invalidate();
 8008894:	9801      	ldr	r0, [sp, #4]
 8008896:	f00d fabb 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set current value
	Unicode::snprintf(SMD1_CurrentBuffer, SMD1_CURRENT_SIZE, "%d", test);
 800889a:	462b      	mov	r3, r5
 800889c:	4a19      	ldr	r2, [pc, #100]	; (8008904 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb4>)
 800889e:	210a      	movs	r1, #10
 80088a0:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 80088a4:	f00f fb3c 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	SMD1_Current.invalidate();
 80088a8:	f504 7020 	add.w	r0, r4, #640	; 0x280
 80088ac:	f00d fab0 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set frequency value
	Unicode::snprintfFloat(SMD1_FrequencyBuffer, SMD1_FREQUENCY_SIZE, "%.2f", fft.main_freq);
 80088b0:	9b04      	ldr	r3, [sp, #16]
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80088b2:	4a15      	ldr	r2, [pc, #84]	; (8008908 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80088b4:	9303      	str	r3, [sp, #12]
 80088b6:	210a      	movs	r1, #10
 80088b8:	ab03      	add	r3, sp, #12
 80088ba:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80088be:	f00f fd1b 	bl	80182f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Frequency.invalidate();
 80088c2:	f504 7033 	add.w	r0, r4, #716	; 0x2cc
 80088c6:	f00d faa3 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	//set distance value
	Unicode::snprintfFloat(SMD1_DistanceBuffer, SMD1_DISTANCE_SIZE, "%.2f", fft.signal_strength);
 80088ca:	9b05      	ldr	r3, [sp, #20]
 80088cc:	4a0e      	ldr	r2, [pc, #56]	; (8008908 <_ZN33Measurement_Single_Display_1PView7testGuiEv+0xb8>)
 80088ce:	9303      	str	r3, [sp, #12]
 80088d0:	210a      	movs	r1, #10
 80088d2:	ab03      	add	r3, sp, #12
 80088d4:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 80088d8:	f00f fd0e 	bl	80182f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	SMD1_Distance.invalidate();
 80088dc:	f504 7046 	add.w	r0, r4, #792	; 0x318
 80088e0:	f00d fa96 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80088e4:	4638      	mov	r0, r7
 80088e6:	2200      	movs	r2, #0
 80088e8:	2180      	movs	r1, #128	; 0x80
 80088ea:	f000 fda9 	bl	8009440 <HAL_GPIO_WritePin>
 80088ee:	6830      	ldr	r0, [r6, #0]

	// Enable Touchgfx tasks
	touchgfx::HAL::getInstance()->enableInterrupts();
 80088f0:	6803      	ldr	r3, [r0, #0]
 80088f2:	6f9b      	ldr	r3, [r3, #120]	; 0x78

#endif
}
 80088f4:	b007      	add	sp, #28
 80088f6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	touchgfx::HAL::getInstance()->enableInterrupts();
 80088fa:	4718      	bx	r3
 80088fc:	20012db4 	.word	0x20012db4
 8008900:	40020000 	.word	0x40020000
 8008904:	0802d38c 	.word	0x0802d38c
 8008908:	0802d818 	.word	0x0802d818

0800890c <_ZN38Measurement_Single_Display_3PPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Measurement_Single_Display_3PPresenter() {}
 800890c:	4770      	bx	lr

0800890e <_ZThn4_N38Measurement_Single_Display_3PPresenterD1Ev>:
 800890e:	3804      	subs	r0, #4
 8008910:	4770      	bx	lr

08008912 <_ZN38Measurement_Single_Display_3PPresenter10deactivateEv>:
}

void Measurement_Single_Display_3PPresenter::activate()
{

}
 8008912:	4770      	bx	lr

08008914 <_ZN38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
}

void Measurement_Single_Display_3PPresenter::setTimeoutValue(int value)
{

}
 8008914:	4770      	bx	lr

08008916 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>:
 8008916:	b510      	push	{r4, lr}
 8008918:	2110      	movs	r1, #16
 800891a:	4604      	mov	r4, r0
 800891c:	f020 fa07 	bl	8028d2e <_ZdlPvj>
 8008920:	4620      	mov	r0, r4
 8008922:	bd10      	pop	{r4, pc}

08008924 <_ZThn4_N38Measurement_Single_Display_3PPresenterD0Ev>:
 8008924:	f1a0 0004 	sub.w	r0, r0, #4
 8008928:	e7f5      	b.n	8008916 <_ZN38Measurement_Single_Display_3PPresenterD0Ev>

0800892a <_ZThn4_N38Measurement_Single_Display_3PPresenter15setTimeoutValueEi>:
 800892a:	4770      	bx	lr

0800892c <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView>:
Measurement_Single_Display_3PPresenter::Measurement_Single_Display_3PPresenter(Measurement_Single_Display_3PView& v)
 800892c:	b510      	push	{r4, lr}
 800892e:	2200      	movs	r2, #0
 8008930:	6082      	str	r2, [r0, #8]
    : view(v)
 8008932:	4a04      	ldr	r2, [pc, #16]	; (8008944 <_ZN38Measurement_Single_Display_3PPresenterC1ER33Measurement_Single_Display_3PView+0x18>)
 8008934:	60c1      	str	r1, [r0, #12]
 8008936:	f102 0408 	add.w	r4, r2, #8
 800893a:	3224      	adds	r2, #36	; 0x24
 800893c:	6004      	str	r4, [r0, #0]
 800893e:	6042      	str	r2, [r0, #4]
}
 8008940:	bd10      	pop	{r4, pc}
 8008942:	bf00      	nop
 8008944:	0802d858 	.word	0x0802d858

08008948 <_ZN33Measurement_Single_Display_3PView14tearDownScreenEv>:
}

void Measurement_Single_Display_3PView::tearDownScreen()
{
    Measurement_Single_Display_3PViewBase::tearDownScreen();
}
 8008948:	4770      	bx	lr
	...

0800894c <_ZN33Measurement_Single_Display_3PViewD1Ev>:

class Measurement_Single_Display_3PView : public Measurement_Single_Display_3PViewBase
{
public:
    Measurement_Single_Display_3PView();
    virtual ~Measurement_Single_Display_3PView() {}
 800894c:	b510      	push	{r4, lr}
 800894e:	4b03      	ldr	r3, [pc, #12]	; (800895c <_ZN33Measurement_Single_Display_3PViewD1Ev+0x10>)
 8008950:	6003      	str	r3, [r0, #0]
 8008952:	4604      	mov	r4, r0
 8008954:	f7fe fe20 	bl	8007598 <_ZN37Measurement_Single_Display_3PViewBaseD1Ev>
 8008958:	4620      	mov	r0, r4
 800895a:	bd10      	pop	{r4, pc}
 800895c:	0802d890 	.word	0x0802d890

08008960 <_ZN33Measurement_Single_Display_3PViewD0Ev>:
 8008960:	b510      	push	{r4, lr}
 8008962:	4604      	mov	r4, r0
 8008964:	f7ff fff2 	bl	800894c <_ZN33Measurement_Single_Display_3PViewD1Ev>
 8008968:	4620      	mov	r0, r4
 800896a:	f241 31e4 	movw	r1, #5092	; 0x13e4
 800896e:	f020 f9de 	bl	8028d2e <_ZdlPvj>
 8008972:	4620      	mov	r0, r4
 8008974:	bd10      	pop	{r4, pc}
	...

08008978 <_ZN33Measurement_Single_Display_3PViewC1Ev>:
Measurement_Single_Display_3PView::Measurement_Single_Display_3PView()
 8008978:	b510      	push	{r4, lr}
 800897a:	4604      	mov	r4, r0
 800897c:	f7fe fe2c 	bl	80075d8 <_ZN37Measurement_Single_Display_3PViewBaseC1Ev>
 8008980:	4b01      	ldr	r3, [pc, #4]	; (8008988 <_ZN33Measurement_Single_Display_3PViewC1Ev+0x10>)
 8008982:	6023      	str	r3, [r4, #0]
}
 8008984:	4620      	mov	r0, r4
 8008986:	bd10      	pop	{r4, pc}
 8008988:	0802d890 	.word	0x0802d890

0800898c <_ZN33Measurement_Single_Display_3PView11setupScreenEv>:
    Measurement_Single_Display_3PViewBase::setupScreen();
 800898c:	f7fe bdf3 	b.w	8007576 <_ZN37Measurement_Single_Display_3PViewBase11setupScreenEv>

08008990 <_ZN5ModelC1Ev>:
}
#endif



Model::Model() : modelListener(0), Timeout_Value(60)
 8008990:	2100      	movs	r1, #0
 8008992:	223c      	movs	r2, #60	; 0x3c
 8008994:	e9c0 1200 	strd	r1, r2, [r0]
{

}
 8008998:	4770      	bx	lr
	...

0800899c <_ZN5Model4tickEv>:

void Model::tick()
{
 800899c:	b570      	push	{r4, r5, r6, lr}
#ifndef SIMULATOR

	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 800899e:	4d0a      	ldr	r5, [pc, #40]	; (80089c8 <_ZN5Model4tickEv+0x2c>)
{
 80089a0:	4604      	mov	r4, r0
	if(osMessageQueueGetCount(TimeoutQueueHandle) > 0)
 80089a2:	6828      	ldr	r0, [r5, #0]
 80089a4:	f004 f8ac 	bl	800cb00 <osMessageQueueGetCount>
 80089a8:	b168      	cbz	r0, 80089c6 <_ZN5Model4tickEv+0x2a>
	{
		if(osMessageQueueGet(TimeoutQueueHandle, &Timeout_Value, 0, 0) == osOK)
 80089aa:	2300      	movs	r3, #0
 80089ac:	6828      	ldr	r0, [r5, #0]
 80089ae:	461a      	mov	r2, r3
 80089b0:	1d21      	adds	r1, r4, #4
 80089b2:	f004 f871 	bl	800ca98 <osMessageQueueGet>
 80089b6:	b930      	cbnz	r0, 80089c6 <_ZN5Model4tickEv+0x2a>
		{
			modelListener->setTimeoutValue(Timeout_Value);
 80089b8:	6820      	ldr	r0, [r4, #0]
 80089ba:	6861      	ldr	r1, [r4, #4]
 80089bc:	6803      	ldr	r3, [r0, #0]
		}
	}
#endif
}
 80089be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			modelListener->setTimeoutValue(Timeout_Value);
 80089c2:	689b      	ldr	r3, [r3, #8]
 80089c4:	4718      	bx	r3
}
 80089c6:	bd70      	pop	{r4, r5, r6, pc}
 80089c8:	200018d8 	.word	0x200018d8

080089cc <_ZN21Project_InfoPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Project_InfoPresenter() {}
 80089cc:	4770      	bx	lr

080089ce <_ZThn4_N21Project_InfoPresenterD1Ev>:
 80089ce:	3804      	subs	r0, #4
 80089d0:	4770      	bx	lr

080089d2 <_ZN21Project_InfoPresenter10deactivateEv>:
}

void Project_InfoPresenter::activate()
{

}
 80089d2:	4770      	bx	lr

080089d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>:

}

void Project_InfoPresenter::setTimeoutValue(int value)
{
	view.setTimeoutValue(value);
 80089d4:	68c0      	ldr	r0, [r0, #12]
 80089d6:	6803      	ldr	r3, [r0, #0]
 80089d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80089da:	4718      	bx	r3

080089dc <_ZThn4_N21Project_InfoPresenter15setTimeoutValueEi>:

    virtual void setTimeoutValue(int value);
 80089dc:	f1a0 0004 	sub.w	r0, r0, #4
 80089e0:	f7ff bff8 	b.w	80089d4 <_ZN21Project_InfoPresenter15setTimeoutValueEi>

080089e4 <_ZN21Project_InfoPresenterD0Ev>:
    virtual ~Project_InfoPresenter() {}
 80089e4:	b510      	push	{r4, lr}
 80089e6:	2110      	movs	r1, #16
 80089e8:	4604      	mov	r4, r0
 80089ea:	f020 f9a0 	bl	8028d2e <_ZdlPvj>
 80089ee:	4620      	mov	r0, r4
 80089f0:	bd10      	pop	{r4, pc}

080089f2 <_ZThn4_N21Project_InfoPresenterD0Ev>:
 80089f2:	f1a0 0004 	sub.w	r0, r0, #4
 80089f6:	e7f5      	b.n	80089e4 <_ZN21Project_InfoPresenterD0Ev>

080089f8 <_ZN21Project_InfoPresenterC1ER16Project_InfoView>:
Project_InfoPresenter::Project_InfoPresenter(Project_InfoView& v)
 80089f8:	b510      	push	{r4, lr}
 80089fa:	2200      	movs	r2, #0
 80089fc:	6082      	str	r2, [r0, #8]
    : view(v)
 80089fe:	4a04      	ldr	r2, [pc, #16]	; (8008a10 <_ZN21Project_InfoPresenterC1ER16Project_InfoView+0x18>)
 8008a00:	60c1      	str	r1, [r0, #12]
 8008a02:	f102 0408 	add.w	r4, r2, #8
 8008a06:	3224      	adds	r2, #36	; 0x24
 8008a08:	6004      	str	r4, [r0, #0]
 8008a0a:	6042      	str	r2, [r0, #4]
}
 8008a0c:	bd10      	pop	{r4, pc}
 8008a0e:	bf00      	nop
 8008a10:	0802d8bc 	.word	0x0802d8bc

08008a14 <_ZN16Project_InfoView14tearDownScreenEv>:
}

void Project_InfoView::tearDownScreen()
{
    Project_InfoViewBase::tearDownScreen();
}
 8008a14:	4770      	bx	lr
	...

08008a18 <_ZN16Project_InfoViewD1Ev>:

class Project_InfoView : public Project_InfoViewBase
{
public:
    Project_InfoView();
    virtual ~Project_InfoView() {}
 8008a18:	b510      	push	{r4, lr}
 8008a1a:	4b03      	ldr	r3, [pc, #12]	; (8008a28 <_ZN16Project_InfoViewD1Ev+0x10>)
 8008a1c:	6003      	str	r3, [r0, #0]
 8008a1e:	4604      	mov	r4, r0
 8008a20:	f7fe ff74 	bl	800790c <_ZN20Project_InfoViewBaseD1Ev>
 8008a24:	4620      	mov	r0, r4
 8008a26:	bd10      	pop	{r4, pc}
 8008a28:	0802d8f4 	.word	0x0802d8f4

08008a2c <_ZN16Project_InfoViewD0Ev>:
 8008a2c:	b510      	push	{r4, lr}
 8008a2e:	4604      	mov	r4, r0
 8008a30:	f7ff fff2 	bl	8008a18 <_ZN16Project_InfoViewD1Ev>
 8008a34:	4620      	mov	r0, r4
 8008a36:	f241 01b0 	movw	r1, #4272	; 0x10b0
 8008a3a:	f020 f978 	bl	8028d2e <_ZdlPvj>
 8008a3e:	4620      	mov	r0, r4
 8008a40:	bd10      	pop	{r4, pc}
	...

08008a44 <_ZN16Project_InfoViewC1Ev>:
Project_InfoView::Project_InfoView()
 8008a44:	b510      	push	{r4, lr}
 8008a46:	4604      	mov	r4, r0
 8008a48:	f7fe ff88 	bl	800795c <_ZN20Project_InfoViewBaseC1Ev>
 8008a4c:	4b01      	ldr	r3, [pc, #4]	; (8008a54 <_ZN16Project_InfoViewC1Ev+0x10>)
 8008a4e:	6023      	str	r3, [r4, #0]
}
 8008a50:	4620      	mov	r0, r4
 8008a52:	bd10      	pop	{r4, pc}
 8008a54:	0802d8f4 	.word	0x0802d8f4

08008a58 <_ZN16Project_InfoView11setupScreenEv>:
    Project_InfoViewBase::setupScreen();
 8008a58:	f7fe bf34 	b.w	80078c4 <_ZN20Project_InfoViewBase11setupScreenEv>

08008a5c <_ZN16Project_InfoView15setTimeoutValueEi>:

void Project_InfoView::setTimeoutValue(int value)
{
 8008a5c:	b538      	push	{r3, r4, r5, lr}
	//display the timeout value on the GUI
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a5e:	4a0a      	ldr	r2, [pc, #40]	; (8008a88 <_ZN16Project_InfoView15setTimeoutValueEi+0x2c>)
{
 8008a60:	4605      	mov	r5, r0
 8008a62:	460c      	mov	r4, r1
	Unicode::snprintf(textArea3_1Buffer, TEXTAREA3_1_SIZE, "%d", value);
 8008a64:	460b      	mov	r3, r1
 8008a66:	f500 7022 	add.w	r0, r0, #648	; 0x288
 8008a6a:	2104      	movs	r1, #4
 8008a6c:	f00f fa58 	bl	8017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea3_1.invalidate();
 8008a70:	f105 0098 	add.w	r0, r5, #152	; 0x98
 8008a74:	f00d f9cc 	bl	8015e10 <_ZNK8touchgfx8Drawable10invalidateEv>

	if (value == 0) {
 8008a78:	b92c      	cbnz	r4, 8008a86 <_ZN16Project_InfoView15setTimeoutValueEi+0x2a>
 8008a7a:	f00c f8e1 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
		//application().gotoMeasurement_SingleScreenSlideTransitionWest();
		application().gotoShutting_OffScreenNoTransition();
	}
}
 8008a7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		application().gotoShutting_OffScreenNoTransition();
 8008a82:	f7fb b837 	b.w	8003af4 <_ZN23FrontendApplicationBase34gotoShutting_OffScreenNoTransitionEv>
}
 8008a86:	bd38      	pop	{r3, r4, r5, pc}
 8008a88:	0802d38c 	.word	0x0802d38c

08008a8c <_ZN21Shutting_OffPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Shutting_OffPresenter() {}
 8008a8c:	4770      	bx	lr

08008a8e <_ZThn4_N21Shutting_OffPresenterD1Ev>:
 8008a8e:	3804      	subs	r0, #4
 8008a90:	4770      	bx	lr

08008a92 <_ZN21Shutting_OffPresenter10deactivateEv>:
}

void Shutting_OffPresenter::activate()
{

}
 8008a92:	4770      	bx	lr

08008a94 <_ZN21Shutting_OffPresenter15setTimeoutValueEi>:
}

void Shutting_OffPresenter::setTimeoutValue(int value)
{

}
 8008a94:	4770      	bx	lr

08008a96 <_ZN21Shutting_OffPresenterD0Ev>:
 8008a96:	b510      	push	{r4, lr}
 8008a98:	2110      	movs	r1, #16
 8008a9a:	4604      	mov	r4, r0
 8008a9c:	f020 f947 	bl	8028d2e <_ZdlPvj>
 8008aa0:	4620      	mov	r0, r4
 8008aa2:	bd10      	pop	{r4, pc}

08008aa4 <_ZThn4_N21Shutting_OffPresenterD0Ev>:
 8008aa4:	f1a0 0004 	sub.w	r0, r0, #4
 8008aa8:	e7f5      	b.n	8008a96 <_ZN21Shutting_OffPresenterD0Ev>

08008aaa <_ZThn4_N21Shutting_OffPresenter15setTimeoutValueEi>:
 8008aaa:	4770      	bx	lr

08008aac <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView>:
Shutting_OffPresenter::Shutting_OffPresenter(Shutting_OffView& v)
 8008aac:	b510      	push	{r4, lr}
 8008aae:	2200      	movs	r2, #0
 8008ab0:	6082      	str	r2, [r0, #8]
    : view(v)
 8008ab2:	4a04      	ldr	r2, [pc, #16]	; (8008ac4 <_ZN21Shutting_OffPresenterC1ER16Shutting_OffView+0x18>)
 8008ab4:	60c1      	str	r1, [r0, #12]
 8008ab6:	f102 0408 	add.w	r4, r2, #8
 8008aba:	3224      	adds	r2, #36	; 0x24
 8008abc:	6004      	str	r4, [r0, #0]
 8008abe:	6042      	str	r2, [r0, #4]
}
 8008ac0:	bd10      	pop	{r4, pc}
 8008ac2:	bf00      	nop
 8008ac4:	0802d924 	.word	0x0802d924

08008ac8 <_ZN16Shutting_OffView14tearDownScreenEv>:
}

void Shutting_OffView::tearDownScreen()
{
    Shutting_OffViewBase::tearDownScreen();
}
 8008ac8:	4770      	bx	lr
	...

08008acc <_ZN16Shutting_OffViewD1Ev>:

class Shutting_OffView : public Shutting_OffViewBase
{
public:
    Shutting_OffView();
    virtual ~Shutting_OffView() {}
 8008acc:	b510      	push	{r4, lr}
 8008ace:	4b03      	ldr	r3, [pc, #12]	; (8008adc <_ZN16Shutting_OffViewD1Ev+0x10>)
 8008ad0:	6003      	str	r3, [r0, #0]
 8008ad2:	4604      	mov	r4, r0
 8008ad4:	f7ff f910 	bl	8007cf8 <_ZN20Shutting_OffViewBaseD1Ev>
 8008ad8:	4620      	mov	r0, r4
 8008ada:	bd10      	pop	{r4, pc}
 8008adc:	0802d95c 	.word	0x0802d95c

08008ae0 <_ZN16Shutting_OffViewD0Ev>:
 8008ae0:	b510      	push	{r4, lr}
 8008ae2:	4604      	mov	r4, r0
 8008ae4:	f7ff fff2 	bl	8008acc <_ZN16Shutting_OffViewD1Ev>
 8008ae8:	4620      	mov	r0, r4
 8008aea:	2198      	movs	r1, #152	; 0x98
 8008aec:	f020 f91f 	bl	8028d2e <_ZdlPvj>
 8008af0:	4620      	mov	r0, r4
 8008af2:	bd10      	pop	{r4, pc}

08008af4 <_ZN16Shutting_OffViewC1Ev>:
Shutting_OffView::Shutting_OffView()
 8008af4:	b510      	push	{r4, lr}
 8008af6:	4604      	mov	r4, r0
 8008af8:	f7ff f908 	bl	8007d0c <_ZN20Shutting_OffViewBaseC1Ev>
 8008afc:	4b01      	ldr	r3, [pc, #4]	; (8008b04 <_ZN16Shutting_OffViewC1Ev+0x10>)
 8008afe:	6023      	str	r3, [r4, #0]
}
 8008b00:	4620      	mov	r0, r4
 8008b02:	bd10      	pop	{r4, pc}
 8008b04:	0802d95c 	.word	0x0802d95c

08008b08 <_ZN16Shutting_OffView11setupScreenEv>:
    Shutting_OffViewBase::setupScreen();
 8008b08:	f7ff b8f7 	b.w	8007cfa <_ZN20Shutting_OffViewBase11setupScreenEv>

08008b0c <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8008b0c:	20f0      	movs	r0, #240	; 0xf0
 8008b0e:	4770      	bx	lr

08008b10 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8008b10:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8008b14:	4770      	bx	lr
 8008b16:	bf00      	nop

08008b18 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8008b18:	2029      	movs	r0, #41	; 0x29
 8008b1a:	f7f8 bf53 	b.w	80019c4 <LCD_IO_WriteReg>
 8008b1e:	bf00      	nop

08008b20 <ili9341_DisplayOff>:
 8008b20:	2028      	movs	r0, #40	; 0x28
 8008b22:	f7f8 bf4f 	b.w	80019c4 <LCD_IO_WriteReg>
 8008b26:	bf00      	nop

08008b28 <ili9341_Init>:
{
 8008b28:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008b2a:	f7f8 ff11 	bl	8001950 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8008b2e:	20ca      	movs	r0, #202	; 0xca
 8008b30:	f7f8 ff48 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b34:	20c3      	movs	r0, #195	; 0xc3
 8008b36:	f7f8 ff1b 	bl	8001970 <LCD_IO_WriteData>
 8008b3a:	2008      	movs	r0, #8
 8008b3c:	f7f8 ff18 	bl	8001970 <LCD_IO_WriteData>
 8008b40:	2050      	movs	r0, #80	; 0x50
 8008b42:	f7f8 ff15 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b46:	20cf      	movs	r0, #207	; 0xcf
 8008b48:	f7f8 ff3c 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b4c:	2000      	movs	r0, #0
 8008b4e:	f7f8 ff0f 	bl	8001970 <LCD_IO_WriteData>
 8008b52:	20c1      	movs	r0, #193	; 0xc1
 8008b54:	f7f8 ff0c 	bl	8001970 <LCD_IO_WriteData>
 8008b58:	2030      	movs	r0, #48	; 0x30
 8008b5a:	f7f8 ff09 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b5e:	20ed      	movs	r0, #237	; 0xed
 8008b60:	f7f8 ff30 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b64:	2064      	movs	r0, #100	; 0x64
 8008b66:	f7f8 ff03 	bl	8001970 <LCD_IO_WriteData>
 8008b6a:	2003      	movs	r0, #3
 8008b6c:	f7f8 ff00 	bl	8001970 <LCD_IO_WriteData>
 8008b70:	2012      	movs	r0, #18
 8008b72:	f7f8 fefd 	bl	8001970 <LCD_IO_WriteData>
 8008b76:	2081      	movs	r0, #129	; 0x81
 8008b78:	f7f8 fefa 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b7c:	20e8      	movs	r0, #232	; 0xe8
 8008b7e:	f7f8 ff21 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b82:	2085      	movs	r0, #133	; 0x85
 8008b84:	f7f8 fef4 	bl	8001970 <LCD_IO_WriteData>
 8008b88:	2000      	movs	r0, #0
 8008b8a:	f7f8 fef1 	bl	8001970 <LCD_IO_WriteData>
 8008b8e:	2078      	movs	r0, #120	; 0x78
 8008b90:	f7f8 feee 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008b94:	20cb      	movs	r0, #203	; 0xcb
 8008b96:	f7f8 ff15 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008b9a:	2039      	movs	r0, #57	; 0x39
 8008b9c:	f7f8 fee8 	bl	8001970 <LCD_IO_WriteData>
 8008ba0:	202c      	movs	r0, #44	; 0x2c
 8008ba2:	f7f8 fee5 	bl	8001970 <LCD_IO_WriteData>
 8008ba6:	2000      	movs	r0, #0
 8008ba8:	f7f8 fee2 	bl	8001970 <LCD_IO_WriteData>
 8008bac:	2034      	movs	r0, #52	; 0x34
 8008bae:	f7f8 fedf 	bl	8001970 <LCD_IO_WriteData>
 8008bb2:	2002      	movs	r0, #2
 8008bb4:	f7f8 fedc 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bb8:	20f7      	movs	r0, #247	; 0xf7
 8008bba:	f7f8 ff03 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bbe:	2020      	movs	r0, #32
 8008bc0:	f7f8 fed6 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bc4:	20ea      	movs	r0, #234	; 0xea
 8008bc6:	f7f8 fefd 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bca:	2000      	movs	r0, #0
 8008bcc:	f7f8 fed0 	bl	8001970 <LCD_IO_WriteData>
 8008bd0:	2000      	movs	r0, #0
 8008bd2:	f7f8 fecd 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bd6:	20b1      	movs	r0, #177	; 0xb1
 8008bd8:	f7f8 fef4 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bdc:	2000      	movs	r0, #0
 8008bde:	f7f8 fec7 	bl	8001970 <LCD_IO_WriteData>
 8008be2:	201b      	movs	r0, #27
 8008be4:	f7f8 fec4 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008be8:	20b6      	movs	r0, #182	; 0xb6
 8008bea:	f7f8 feeb 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008bee:	200a      	movs	r0, #10
 8008bf0:	f7f8 febe 	bl	8001970 <LCD_IO_WriteData>
 8008bf4:	20a2      	movs	r0, #162	; 0xa2
 8008bf6:	f7f8 febb 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008bfa:	20c0      	movs	r0, #192	; 0xc0
 8008bfc:	f7f8 fee2 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c00:	2010      	movs	r0, #16
 8008c02:	f7f8 feb5 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c06:	20c1      	movs	r0, #193	; 0xc1
 8008c08:	f7f8 fedc 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c0c:	2010      	movs	r0, #16
 8008c0e:	f7f8 feaf 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c12:	20c5      	movs	r0, #197	; 0xc5
 8008c14:	f7f8 fed6 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c18:	2045      	movs	r0, #69	; 0x45
 8008c1a:	f7f8 fea9 	bl	8001970 <LCD_IO_WriteData>
 8008c1e:	2015      	movs	r0, #21
 8008c20:	f7f8 fea6 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c24:	20c7      	movs	r0, #199	; 0xc7
 8008c26:	f7f8 fecd 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c2a:	2090      	movs	r0, #144	; 0x90
 8008c2c:	f7f8 fea0 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c30:	2036      	movs	r0, #54	; 0x36
 8008c32:	f7f8 fec7 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c36:	20c8      	movs	r0, #200	; 0xc8
 8008c38:	f7f8 fe9a 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c3c:	20f2      	movs	r0, #242	; 0xf2
 8008c3e:	f7f8 fec1 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c42:	2000      	movs	r0, #0
 8008c44:	f7f8 fe94 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c48:	20b0      	movs	r0, #176	; 0xb0
 8008c4a:	f7f8 febb 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c4e:	20c2      	movs	r0, #194	; 0xc2
 8008c50:	f7f8 fe8e 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c54:	20b6      	movs	r0, #182	; 0xb6
 8008c56:	f7f8 feb5 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c5a:	200a      	movs	r0, #10
 8008c5c:	f7f8 fe88 	bl	8001970 <LCD_IO_WriteData>
 8008c60:	20a7      	movs	r0, #167	; 0xa7
 8008c62:	f7f8 fe85 	bl	8001970 <LCD_IO_WriteData>
 8008c66:	2027      	movs	r0, #39	; 0x27
 8008c68:	f7f8 fe82 	bl	8001970 <LCD_IO_WriteData>
 8008c6c:	2004      	movs	r0, #4
 8008c6e:	f7f8 fe7f 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c72:	202a      	movs	r0, #42	; 0x2a
 8008c74:	f7f8 fea6 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c78:	2000      	movs	r0, #0
 8008c7a:	f7f8 fe79 	bl	8001970 <LCD_IO_WriteData>
 8008c7e:	2000      	movs	r0, #0
 8008c80:	f7f8 fe76 	bl	8001970 <LCD_IO_WriteData>
 8008c84:	2000      	movs	r0, #0
 8008c86:	f7f8 fe73 	bl	8001970 <LCD_IO_WriteData>
 8008c8a:	20ef      	movs	r0, #239	; 0xef
 8008c8c:	f7f8 fe70 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008c90:	202b      	movs	r0, #43	; 0x2b
 8008c92:	f7f8 fe97 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008c96:	2000      	movs	r0, #0
 8008c98:	f7f8 fe6a 	bl	8001970 <LCD_IO_WriteData>
 8008c9c:	2000      	movs	r0, #0
 8008c9e:	f7f8 fe67 	bl	8001970 <LCD_IO_WriteData>
 8008ca2:	2001      	movs	r0, #1
 8008ca4:	f7f8 fe64 	bl	8001970 <LCD_IO_WriteData>
 8008ca8:	203f      	movs	r0, #63	; 0x3f
 8008caa:	f7f8 fe61 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cae:	20f6      	movs	r0, #246	; 0xf6
 8008cb0:	f7f8 fe88 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cb4:	2001      	movs	r0, #1
 8008cb6:	f7f8 fe5b 	bl	8001970 <LCD_IO_WriteData>
 8008cba:	2000      	movs	r0, #0
 8008cbc:	f7f8 fe58 	bl	8001970 <LCD_IO_WriteData>
 8008cc0:	2006      	movs	r0, #6
 8008cc2:	f7f8 fe55 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cc6:	202c      	movs	r0, #44	; 0x2c
 8008cc8:	f7f8 fe7c 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008ccc:	20c8      	movs	r0, #200	; 0xc8
 8008cce:	f7f8 fee1 	bl	8001a94 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008cd2:	2026      	movs	r0, #38	; 0x26
 8008cd4:	f7f8 fe76 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008cd8:	2001      	movs	r0, #1
 8008cda:	f7f8 fe49 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008cde:	20e0      	movs	r0, #224	; 0xe0
 8008ce0:	f7f8 fe70 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008ce4:	200f      	movs	r0, #15
 8008ce6:	f7f8 fe43 	bl	8001970 <LCD_IO_WriteData>
 8008cea:	2029      	movs	r0, #41	; 0x29
 8008cec:	f7f8 fe40 	bl	8001970 <LCD_IO_WriteData>
 8008cf0:	2024      	movs	r0, #36	; 0x24
 8008cf2:	f7f8 fe3d 	bl	8001970 <LCD_IO_WriteData>
 8008cf6:	200c      	movs	r0, #12
 8008cf8:	f7f8 fe3a 	bl	8001970 <LCD_IO_WriteData>
 8008cfc:	200e      	movs	r0, #14
 8008cfe:	f7f8 fe37 	bl	8001970 <LCD_IO_WriteData>
 8008d02:	2009      	movs	r0, #9
 8008d04:	f7f8 fe34 	bl	8001970 <LCD_IO_WriteData>
 8008d08:	204e      	movs	r0, #78	; 0x4e
 8008d0a:	f7f8 fe31 	bl	8001970 <LCD_IO_WriteData>
 8008d0e:	2078      	movs	r0, #120	; 0x78
 8008d10:	f7f8 fe2e 	bl	8001970 <LCD_IO_WriteData>
 8008d14:	203c      	movs	r0, #60	; 0x3c
 8008d16:	f7f8 fe2b 	bl	8001970 <LCD_IO_WriteData>
 8008d1a:	2009      	movs	r0, #9
 8008d1c:	f7f8 fe28 	bl	8001970 <LCD_IO_WriteData>
 8008d20:	2013      	movs	r0, #19
 8008d22:	f7f8 fe25 	bl	8001970 <LCD_IO_WriteData>
 8008d26:	2005      	movs	r0, #5
 8008d28:	f7f8 fe22 	bl	8001970 <LCD_IO_WriteData>
 8008d2c:	2017      	movs	r0, #23
 8008d2e:	f7f8 fe1f 	bl	8001970 <LCD_IO_WriteData>
 8008d32:	2011      	movs	r0, #17
 8008d34:	f7f8 fe1c 	bl	8001970 <LCD_IO_WriteData>
 8008d38:	2000      	movs	r0, #0
 8008d3a:	f7f8 fe19 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d3e:	20e1      	movs	r0, #225	; 0xe1
 8008d40:	f7f8 fe40 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8008d44:	2000      	movs	r0, #0
 8008d46:	f7f8 fe13 	bl	8001970 <LCD_IO_WriteData>
 8008d4a:	2016      	movs	r0, #22
 8008d4c:	f7f8 fe10 	bl	8001970 <LCD_IO_WriteData>
 8008d50:	201b      	movs	r0, #27
 8008d52:	f7f8 fe0d 	bl	8001970 <LCD_IO_WriteData>
 8008d56:	2004      	movs	r0, #4
 8008d58:	f7f8 fe0a 	bl	8001970 <LCD_IO_WriteData>
 8008d5c:	2011      	movs	r0, #17
 8008d5e:	f7f8 fe07 	bl	8001970 <LCD_IO_WriteData>
 8008d62:	2007      	movs	r0, #7
 8008d64:	f7f8 fe04 	bl	8001970 <LCD_IO_WriteData>
 8008d68:	2031      	movs	r0, #49	; 0x31
 8008d6a:	f7f8 fe01 	bl	8001970 <LCD_IO_WriteData>
 8008d6e:	2033      	movs	r0, #51	; 0x33
 8008d70:	f7f8 fdfe 	bl	8001970 <LCD_IO_WriteData>
 8008d74:	2042      	movs	r0, #66	; 0x42
 8008d76:	f7f8 fdfb 	bl	8001970 <LCD_IO_WriteData>
 8008d7a:	2005      	movs	r0, #5
 8008d7c:	f7f8 fdf8 	bl	8001970 <LCD_IO_WriteData>
 8008d80:	200c      	movs	r0, #12
 8008d82:	f7f8 fdf5 	bl	8001970 <LCD_IO_WriteData>
 8008d86:	200a      	movs	r0, #10
 8008d88:	f7f8 fdf2 	bl	8001970 <LCD_IO_WriteData>
 8008d8c:	2028      	movs	r0, #40	; 0x28
 8008d8e:	f7f8 fdef 	bl	8001970 <LCD_IO_WriteData>
 8008d92:	202f      	movs	r0, #47	; 0x2f
 8008d94:	f7f8 fdec 	bl	8001970 <LCD_IO_WriteData>
 8008d98:	200f      	movs	r0, #15
 8008d9a:	f7f8 fde9 	bl	8001970 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8008d9e:	2011      	movs	r0, #17
 8008da0:	f7f8 fe10 	bl	80019c4 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8008da4:	20c8      	movs	r0, #200	; 0xc8
 8008da6:	f7f8 fe75 	bl	8001a94 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8008daa:	2029      	movs	r0, #41	; 0x29
 8008dac:	f7f8 fe0a 	bl	80019c4 <LCD_IO_WriteReg>
}
 8008db0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8008db4:	202c      	movs	r0, #44	; 0x2c
 8008db6:	f7f8 be05 	b.w	80019c4 <LCD_IO_WriteReg>
 8008dba:	bf00      	nop

08008dbc <ili9341_ReadID>:
{
 8008dbc:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8008dbe:	f7f8 fdc7 	bl	8001950 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8008dc2:	2103      	movs	r1, #3
 8008dc4:	20d3      	movs	r0, #211	; 0xd3
 8008dc6:	f7f8 fe27 	bl	8001a18 <LCD_IO_ReadData>
}
 8008dca:	b280      	uxth	r0, r0
 8008dcc:	bd08      	pop	{r3, pc}
 8008dce:	bf00      	nop

08008dd0 <stmpe811_TS_ClearIT>:
  * @retval None
  */
void stmpe811_ClearGlobalIT(uint16_t DeviceAddr, uint8_t Source)
{
  /* Write 1 to the bits that have to be cleared */
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8008dd0:	221f      	movs	r2, #31
 8008dd2:	210b      	movs	r1, #11
 8008dd4:	b2c0      	uxtb	r0, r0
 8008dd6:	f7f8 bd6d 	b.w	80018b4 <IOE_Write>
 8008dda:	bf00      	nop

08008ddc <stmpe811_Reset>:
{
 8008ddc:	b510      	push	{r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008dde:	b2c4      	uxtb	r4, r0
 8008de0:	2202      	movs	r2, #2
 8008de2:	2103      	movs	r1, #3
 8008de4:	4620      	mov	r0, r4
 8008de6:	f7f8 fd65 	bl	80018b4 <IOE_Write>
  IOE_Delay(10); 
 8008dea:	200a      	movs	r0, #10
 8008dec:	f7f8 fdae 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008df0:	4620      	mov	r0, r4
 8008df2:	2200      	movs	r2, #0
 8008df4:	2103      	movs	r1, #3
 8008df6:	f7f8 fd5d 	bl	80018b4 <IOE_Write>
}
 8008dfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8008dfe:	2002      	movs	r0, #2
 8008e00:	f7f8 bda4 	b.w	800194c <IOE_Delay>

08008e04 <stmpe811_ReadID>:
{
 8008e04:	b510      	push	{r4, lr}
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e06:	b2c4      	uxtb	r4, r0
  IOE_Init(); 
 8008e08:	f7f8 fd50 	bl	80018ac <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e0c:	2100      	movs	r1, #0
 8008e0e:	4620      	mov	r0, r4
 8008e10:	f7f8 fd68 	bl	80018e4 <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e14:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e16:	4603      	mov	r3, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e18:	4620      	mov	r0, r4
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e1a:	461c      	mov	r4, r3
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8008e1c:	f7f8 fd62 	bl	80018e4 <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8008e20:	ea40 2004 	orr.w	r0, r0, r4, lsl #8
}
 8008e24:	b280      	uxth	r0, r0
 8008e26:	bd10      	pop	{r4, pc}

08008e28 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8008e28:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8008e2a:	b2c4      	uxtb	r4, r0
 8008e2c:	2140      	movs	r1, #64	; 0x40
 8008e2e:	4620      	mov	r0, r4
 8008e30:	f7f8 fd58 	bl	80018e4 <IOE_Read>
  
  if(state > 0)
 8008e34:	0603      	lsls	r3, r0, #24
 8008e36:	d40b      	bmi.n	8008e50 <stmpe811_TS_DetectTouch+0x28>
    }
  }
  else
  {
    /* Reset FIFO */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e38:	4620      	mov	r0, r4
 8008e3a:	2201      	movs	r2, #1
 8008e3c:	214b      	movs	r1, #75	; 0x4b
 8008e3e:	f7f8 fd39 	bl	80018b4 <IOE_Write>
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008e42:	4620      	mov	r0, r4
 8008e44:	2200      	movs	r2, #0
 8008e46:	214b      	movs	r1, #75	; 0x4b
 8008e48:	f7f8 fd34 	bl	80018b4 <IOE_Write>
  uint8_t ret = 0;
 8008e4c:	2000      	movs	r0, #0
  }
  
  return ret;
}
 8008e4e:	bd10      	pop	{r4, pc}
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8008e50:	214c      	movs	r1, #76	; 0x4c
 8008e52:	4620      	mov	r0, r4
 8008e54:	f7f8 fd46 	bl	80018e4 <IOE_Read>
      ret = 1;
 8008e58:	3800      	subs	r0, #0
 8008e5a:	bf18      	it	ne
 8008e5c:	2001      	movne	r0, #1
}
 8008e5e:	bd10      	pop	{r4, pc}

08008e60 <stmpe811_TS_ITStatus>:
  * @brief  Configure the selected source to generate a global interrupt or not
  * @param  DeviceAddr: Device address on communication Bus.    
  * @retval TS interrupts status
  */
uint8_t stmpe811_TS_ITStatus(uint16_t DeviceAddr)
{
 8008e60:	b508      	push	{r3, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8008e62:	210b      	movs	r1, #11
 8008e64:	b2c0      	uxtb	r0, r0
 8008e66:	f7f8 fd3d 	bl	80018e4 <IOE_Read>
  /* Return TS interrupts status */
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
}
 8008e6a:	f000 001f 	and.w	r0, r0, #31
 8008e6e:	bd08      	pop	{r3, pc}

08008e70 <stmpe811_TS_GetXY>:
{
 8008e70:	b570      	push	{r4, r5, r6, lr}
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e72:	2304      	movs	r3, #4
{
 8008e74:	b082      	sub	sp, #8
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e76:	b2c4      	uxtb	r4, r0
{
 8008e78:	4615      	mov	r5, r2
 8008e7a:	460e      	mov	r6, r1
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8008e7c:	eb0d 0203 	add.w	r2, sp, r3
 8008e80:	21d7      	movs	r1, #215	; 0xd7
 8008e82:	4620      	mov	r0, r4
 8008e84:	f7f8 fd4a 	bl	800191c <IOE_ReadMultiple>
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8008e88:	9b01      	ldr	r3, [sp, #4]
 8008e8a:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008e8c:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008e8e:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8008e92:	8032      	strh	r2, [r6, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e94:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8008e96:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008e98:	2201      	movs	r2, #1
 8008e9a:	214b      	movs	r1, #75	; 0x4b
 8008e9c:	f7f8 fd0a 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008ea0:	2200      	movs	r2, #0
 8008ea2:	214b      	movs	r1, #75	; 0x4b
 8008ea4:	4620      	mov	r0, r4
 8008ea6:	f7f8 fd05 	bl	80018b4 <IOE_Write>
}
 8008eaa:	b002      	add	sp, #8
 8008eac:	bd70      	pop	{r4, r5, r6, pc}
 8008eae:	bf00      	nop

08008eb0 <stmpe811_TS_Start>:
{
 8008eb0:	b538      	push	{r3, r4, r5, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008eb2:	b2c4      	uxtb	r4, r0
 8008eb4:	2104      	movs	r1, #4
 8008eb6:	4620      	mov	r0, r4
 8008eb8:	f7f8 fd14 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ebc:	2104      	movs	r1, #4
 8008ebe:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8008ec2:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ec4:	4620      	mov	r0, r4
 8008ec6:	f7f8 fcf5 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8008eca:	2117      	movs	r1, #23
 8008ecc:	4620      	mov	r0, r4
 8008ece:	f7f8 fd09 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8008ed2:	2117      	movs	r1, #23
 8008ed4:	f000 020f 	and.w	r2, r0, #15
 8008ed8:	4620      	mov	r0, r4
 8008eda:	f7f8 fceb 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8008ede:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8008ee2:	4620      	mov	r0, r4
 8008ee4:	2104      	movs	r1, #4
 8008ee6:	f7f8 fce5 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8008eea:	2249      	movs	r2, #73	; 0x49
 8008eec:	2120      	movs	r1, #32
 8008eee:	4620      	mov	r0, r4
 8008ef0:	f7f8 fce0 	bl	80018b4 <IOE_Write>
  IOE_Delay(2); 
 8008ef4:	2002      	movs	r0, #2
 8008ef6:	f7f8 fd29 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8008efa:	4620      	mov	r0, r4
 8008efc:	2201      	movs	r2, #1
 8008efe:	2121      	movs	r1, #33	; 0x21
 8008f00:	f7f8 fcd8 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8008f04:	4620      	mov	r0, r4
 8008f06:	229a      	movs	r2, #154	; 0x9a
 8008f08:	2141      	movs	r1, #65	; 0x41
 8008f0a:	f7f8 fcd3 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8008f0e:	4620      	mov	r0, r4
 8008f10:	2201      	movs	r2, #1
 8008f12:	214a      	movs	r1, #74	; 0x4a
 8008f14:	f7f8 fcce 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8008f18:	4620      	mov	r0, r4
 8008f1a:	2201      	movs	r2, #1
 8008f1c:	214b      	movs	r1, #75	; 0x4b
 8008f1e:	f7f8 fcc9 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8008f22:	4620      	mov	r0, r4
 8008f24:	2200      	movs	r2, #0
 8008f26:	214b      	movs	r1, #75	; 0x4b
 8008f28:	f7f8 fcc4 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8008f2c:	4620      	mov	r0, r4
 8008f2e:	2201      	movs	r2, #1
 8008f30:	2156      	movs	r1, #86	; 0x56
 8008f32:	f7f8 fcbf 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8008f36:	4620      	mov	r0, r4
 8008f38:	2201      	movs	r2, #1
 8008f3a:	2158      	movs	r1, #88	; 0x58
 8008f3c:	f7f8 fcba 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8008f40:	4620      	mov	r0, r4
 8008f42:	2201      	movs	r2, #1
 8008f44:	2140      	movs	r1, #64	; 0x40
 8008f46:	f7f8 fcb5 	bl	80018b4 <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8008f4a:	4620      	mov	r0, r4
 8008f4c:	22ff      	movs	r2, #255	; 0xff
 8008f4e:	210b      	movs	r1, #11
 8008f50:	f7f8 fcb0 	bl	80018b4 <IOE_Write>
}
 8008f54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Delay(2); 
 8008f58:	2002      	movs	r0, #2
 8008f5a:	f7f8 bcf7 	b.w	800194c <IOE_Delay>
 8008f5e:	bf00      	nop

08008f60 <stmpe811_TS_DisableIT>:
{
 8008f60:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008f62:	b2c4      	uxtb	r4, r0
 8008f64:	2109      	movs	r1, #9
 8008f66:	4620      	mov	r0, r4
 8008f68:	f7f8 fcbc 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8008f6c:	2109      	movs	r1, #9
 8008f6e:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8008f72:	4620      	mov	r0, r4
 8008f74:	f7f8 fc9e 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008f78:	210a      	movs	r1, #10
 8008f7a:	4620      	mov	r0, r4
 8008f7c:	f7f8 fcb2 	bl	80018e4 <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008f80:	210a      	movs	r1, #10
 8008f82:	f000 02e0 	and.w	r2, r0, #224	; 0xe0
 8008f86:	4620      	mov	r0, r4
}
 8008f88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008f8c:	f7f8 bc92 	b.w	80018b4 <IOE_Write>

08008f90 <stmpe811_TS_EnableIT>:
{
 8008f90:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008f92:	b2c4      	uxtb	r4, r0
  IOE_ITConfig();
 8008f94:	f7f8 fc8c 	bl	80018b0 <IOE_ITConfig>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8008f98:	210a      	movs	r1, #10
 8008f9a:	4620      	mov	r0, r4
 8008f9c:	f7f8 fca2 	bl	80018e4 <IOE_Read>
  tmp |= Source; 
 8008fa0:	f040 001f 	orr.w	r0, r0, #31
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8008fa4:	b2c2      	uxtb	r2, r0
 8008fa6:	210a      	movs	r1, #10
 8008fa8:	4620      	mov	r0, r4
 8008faa:	f7f8 fc83 	bl	80018b4 <IOE_Write>
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8008fae:	2109      	movs	r1, #9
 8008fb0:	4620      	mov	r0, r4
 8008fb2:	f7f8 fc97 	bl	80018e4 <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8008fb6:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008fba:	b2c2      	uxtb	r2, r0
 8008fbc:	2109      	movs	r1, #9
 8008fbe:	4620      	mov	r0, r4
}
 8008fc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8008fc4:	f7f8 bc76 	b.w	80018b4 <IOE_Write>

08008fc8 <stmpe811_Init>:
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8008fc8:	4a10      	ldr	r2, [pc, #64]	; (800900c <stmpe811_Init+0x44>)
 8008fca:	7813      	ldrb	r3, [r2, #0]
 8008fcc:	4298      	cmp	r0, r3
 8008fce:	d004      	beq.n	8008fda <stmpe811_Init+0x12>
 8008fd0:	7851      	ldrb	r1, [r2, #1]
 8008fd2:	4288      	cmp	r0, r1
 8008fd4:	d001      	beq.n	8008fda <stmpe811_Init+0x12>
 8008fd6:	b113      	cbz	r3, 8008fde <stmpe811_Init+0x16>
 8008fd8:	b101      	cbz	r1, 8008fdc <stmpe811_Init+0x14>
 8008fda:	4770      	bx	lr
 8008fdc:	2301      	movs	r3, #1
{
 8008fde:	b510      	push	{r4, lr}
      stmpe811[empty] = DeviceAddr;
 8008fe0:	b2c4      	uxtb	r4, r0
 8008fe2:	54d4      	strb	r4, [r2, r3]
      IOE_Init(); 
 8008fe4:	f7f8 fc62 	bl	80018ac <IOE_Init>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8008fe8:	2202      	movs	r2, #2
 8008fea:	2103      	movs	r1, #3
 8008fec:	4620      	mov	r0, r4
 8008fee:	f7f8 fc61 	bl	80018b4 <IOE_Write>
  IOE_Delay(10); 
 8008ff2:	200a      	movs	r0, #10
 8008ff4:	f7f8 fcaa 	bl	800194c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8008ff8:	4620      	mov	r0, r4
 8008ffa:	2200      	movs	r2, #0
 8008ffc:	2103      	movs	r1, #3
 8008ffe:	f7f8 fc59 	bl	80018b4 <IOE_Write>
}
 8009002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8009006:	2002      	movs	r0, #2
 8009008:	f7f8 bca0 	b.w	800194c <IOE_Delay>
 800900c:	20001fb4 	.word	0x20001fb4

08009010 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009010:	4b05      	ldr	r3, [pc, #20]	; (8009028 <SystemInit+0x18>)
 8009012:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009016:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800901a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 800901e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009022:	6099      	str	r1, [r3, #8]
#endif
}
 8009024:	4770      	bx	lr
 8009026:	bf00      	nop
 8009028:	e000ed00 	.word	0xe000ed00

0800902c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800902c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800902e:	4b0b      	ldr	r3, [pc, #44]	; (800905c <HAL_Init+0x30>)
 8009030:	681a      	ldr	r2, [r3, #0]
 8009032:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009036:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009038:	681a      	ldr	r2, [r3, #0]
 800903a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800903e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009040:	681a      	ldr	r2, [r3, #0]
 8009042:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009046:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009048:	2003      	movs	r0, #3
 800904a:	f000 f82d 	bl	80090a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800904e:	2000      	movs	r0, #0
 8009050:	f7f9 f948 	bl	80022e4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009054:	f7f8 fec6 	bl	8001de4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009058:	2000      	movs	r0, #0
 800905a:	bd08      	pop	{r3, pc}
 800905c:	40023c00 	.word	0x40023c00

08009060 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009060:	4a03      	ldr	r2, [pc, #12]	; (8009070 <HAL_IncTick+0x10>)
 8009062:	4b04      	ldr	r3, [pc, #16]	; (8009074 <HAL_IncTick+0x14>)
 8009064:	6811      	ldr	r1, [r2, #0]
 8009066:	781b      	ldrb	r3, [r3, #0]
 8009068:	440b      	add	r3, r1
 800906a:	6013      	str	r3, [r2, #0]
}
 800906c:	4770      	bx	lr
 800906e:	bf00      	nop
 8009070:	20001fb8 	.word	0x20001fb8
 8009074:	2000007c 	.word	0x2000007c

08009078 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009078:	4b01      	ldr	r3, [pc, #4]	; (8009080 <HAL_GetTick+0x8>)
 800907a:	6818      	ldr	r0, [r3, #0]
}
 800907c:	4770      	bx	lr
 800907e:	bf00      	nop
 8009080:	20001fb8 	.word	0x20001fb8

08009084 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009084:	b538      	push	{r3, r4, r5, lr}
 8009086:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009088:	f7ff fff6 	bl	8009078 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800908c:	1c63      	adds	r3, r4, #1
  uint32_t tickstart = HAL_GetTick();
 800908e:	4605      	mov	r5, r0
  if (wait < HAL_MAX_DELAY)
 8009090:	d002      	beq.n	8009098 <HAL_Delay+0x14>
  {
    wait += (uint32_t)(uwTickFreq);
 8009092:	4b04      	ldr	r3, [pc, #16]	; (80090a4 <HAL_Delay+0x20>)
 8009094:	781b      	ldrb	r3, [r3, #0]
 8009096:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009098:	f7ff ffee 	bl	8009078 <HAL_GetTick>
 800909c:	1b43      	subs	r3, r0, r5
 800909e:	42a3      	cmp	r3, r4
 80090a0:	d3fa      	bcc.n	8009098 <HAL_Delay+0x14>
  {
  }
}
 80090a2:	bd38      	pop	{r3, r4, r5, pc}
 80090a4:	2000007c 	.word	0x2000007c

080090a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80090a8:	4907      	ldr	r1, [pc, #28]	; (80090c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80090aa:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80090ac:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80090ae:	f64f 00ff 	movw	r0, #63743	; 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80090b2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80090b6:	4002      	ands	r2, r0
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80090b8:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80090ba:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80090be:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80090c2:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80090c4:	4770      	bx	lr
 80090c6:	bf00      	nop
 80090c8:	e000ed00 	.word	0xe000ed00

080090cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80090cc:	4b1c      	ldr	r3, [pc, #112]	; (8009140 <HAL_NVIC_SetPriority+0x74>)
 80090ce:	68db      	ldr	r3, [r3, #12]
 80090d0:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80090d4:	b500      	push	{lr}
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80090d6:	f1c3 0e07 	rsb	lr, r3, #7
 80090da:	f1be 0f04 	cmp.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80090de:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80090e2:	bf28      	it	cs
 80090e4:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80090e8:	f1bc 0f06 	cmp.w	ip, #6
 80090ec:	d91b      	bls.n	8009126 <HAL_NVIC_SetPriority+0x5a>
 80090ee:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80090f0:	f04f 3cff 	mov.w	ip, #4294967295
 80090f4:	fa0c fc03 	lsl.w	ip, ip, r3
 80090f8:	ea22 020c 	bic.w	r2, r2, ip
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80090fc:	f04f 3cff 	mov.w	ip, #4294967295
 8009100:	fa0c fc0e 	lsl.w	ip, ip, lr
 8009104:	ea21 010c 	bic.w	r1, r1, ip
 8009108:	4099      	lsls	r1, r3
  if ((int32_t)(IRQn) >= 0)
 800910a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800910c:	ea41 0102 	orr.w	r1, r1, r2
  if ((int32_t)(IRQn) >= 0)
 8009110:	db0c      	blt.n	800912c <HAL_NVIC_SetPriority+0x60>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009112:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8009116:	0109      	lsls	r1, r1, #4
 8009118:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800911c:	b2c9      	uxtb	r1, r1
 800911e:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009122:	f85d fb04 	ldr.w	pc, [sp], #4
 8009126:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009128:	4613      	mov	r3, r2
 800912a:	e7e7      	b.n	80090fc <HAL_NVIC_SetPriority+0x30>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800912c:	4b05      	ldr	r3, [pc, #20]	; (8009144 <HAL_NVIC_SetPriority+0x78>)
 800912e:	f000 000f 	and.w	r0, r0, #15
 8009132:	0109      	lsls	r1, r1, #4
 8009134:	4403      	add	r3, r0
 8009136:	b2c9      	uxtb	r1, r1
 8009138:	7619      	strb	r1, [r3, #24]
 800913a:	f85d fb04 	ldr.w	pc, [sp], #4
 800913e:	bf00      	nop
 8009140:	e000ed00 	.word	0xe000ed00
 8009144:	e000ecfc 	.word	0xe000ecfc

08009148 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009148:	2800      	cmp	r0, #0
 800914a:	db07      	blt.n	800915c <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800914c:	0941      	lsrs	r1, r0, #5
 800914e:	4a04      	ldr	r2, [pc, #16]	; (8009160 <HAL_NVIC_EnableIRQ+0x18>)
 8009150:	f000 001f 	and.w	r0, r0, #31
 8009154:	2301      	movs	r3, #1
 8009156:	4083      	lsls	r3, r0
 8009158:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800915c:	4770      	bx	lr
 800915e:	bf00      	nop
 8009160:	e000e100 	.word	0xe000e100

08009164 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009164:	b180      	cbz	r0, 8009188 <HAL_CRC_Init+0x24>
{
 8009166:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009168:	7943      	ldrb	r3, [r0, #5]
 800916a:	4604      	mov	r4, r0
 800916c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009170:	b11b      	cbz	r3, 800917a <HAL_CRC_Init+0x16>
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009172:	2301      	movs	r3, #1
 8009174:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009176:	2000      	movs	r0, #0
}
 8009178:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
 800917a:	7102      	strb	r2, [r0, #4]
    HAL_CRC_MspInit(hcrc);
 800917c:	f7f8 fe52 	bl	8001e24 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_READY;
 8009180:	2301      	movs	r3, #1
 8009182:	7163      	strb	r3, [r4, #5]
  return HAL_OK;
 8009184:	2000      	movs	r0, #0
}
 8009186:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009188:	2001      	movs	r0, #1
}
 800918a:	4770      	bx	lr

0800918c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800918c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009190:	2b02      	cmp	r3, #2
 8009192:	d003      	beq.n	800919c <HAL_DMA_Abort_IT+0x10>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009194:	2380      	movs	r3, #128	; 0x80
 8009196:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8009198:	2001      	movs	r0, #1
 800919a:	4770      	bx	lr
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 800919c:	6802      	ldr	r2, [r0, #0]
    hdma->State = HAL_DMA_STATE_ABORT;
 800919e:	2305      	movs	r3, #5
 80091a0:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    __HAL_DMA_DISABLE(hdma);
 80091a4:	6813      	ldr	r3, [r2, #0]
 80091a6:	f023 0301 	bic.w	r3, r3, #1
  }

  return HAL_OK;
 80091aa:	2000      	movs	r0, #0
    __HAL_DMA_DISABLE(hdma);
 80091ac:	6013      	str	r3, [r2, #0]
}
 80091ae:	4770      	bx	lr

080091b0 <HAL_DMA_GetState>:
  *               the configuration information for the specified DMA Stream.
  * @retval HAL state
  */
HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
{
  return hdma->State;
 80091b0:	f890 0035 	ldrb.w	r0, [r0, #53]	; 0x35
}
 80091b4:	4770      	bx	lr
 80091b6:	bf00      	nop

080091b8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80091b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  for(position = 0U; position < GPIO_NUMBER; position++)
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091bc:	2200      	movs	r2, #0
 80091be:	680c      	ldr	r4, [r1, #0]
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80091c0:	f8df a260 	ldr.w	sl, [pc, #608]	; 8009424 <HAL_GPIO_Init+0x26c>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80091c4:	4e90      	ldr	r6, [pc, #576]	; (8009408 <HAL_GPIO_Init+0x250>)
{
 80091c6:	b085      	sub	sp, #20
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091c8:	4613      	mov	r3, r2
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80091ca:	4689      	mov	r9, r1
 80091cc:	e005      	b.n	80091da <HAL_GPIO_Init+0x22>
  for(position = 0U; position < GPIO_NUMBER; position++)
 80091ce:	3301      	adds	r3, #1
 80091d0:	2b10      	cmp	r3, #16
 80091d2:	f102 0202 	add.w	r2, r2, #2
 80091d6:	f000 8095 	beq.w	8009304 <HAL_GPIO_Init+0x14c>
    ioposition = 0x01U << position;
 80091da:	2101      	movs	r1, #1
 80091dc:	4099      	lsls	r1, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80091de:	ea01 0b04 	and.w	fp, r1, r4
    if(iocurrent == ioposition)
 80091e2:	43a1      	bics	r1, r4
 80091e4:	d1f3      	bne.n	80091ce <HAL_GPIO_Init+0x16>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80091e6:	f8d9 c004 	ldr.w	ip, [r9, #4]
 80091ea:	f00c 0103 	and.w	r1, ip, #3
 80091ee:	1e4d      	subs	r5, r1, #1
 80091f0:	2d01      	cmp	r5, #1
 80091f2:	f240 808a 	bls.w	800930a <HAL_GPIO_Init+0x152>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80091f6:	2903      	cmp	r1, #3
 80091f8:	f040 80ca 	bne.w	8009390 <HAL_GPIO_Init+0x1d8>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80091fc:	4091      	lsls	r1, r2
 80091fe:	43cd      	mvns	r5, r1
      temp = GPIOx->MODER;
 8009200:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8009202:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8009204:	4329      	orrs	r1, r5
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8009206:	f41c 3f40 	tst.w	ip, #196608	; 0x30000
      GPIOx->MODER = temp;
 800920a:	6001      	str	r1, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800920c:	d0df      	beq.n	80091ce <HAL_GPIO_Init+0x16>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800920e:	2100      	movs	r1, #0
 8009210:	9103      	str	r1, [sp, #12]
 8009212:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009216:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800921a:	f8ca 1044 	str.w	r1, [sl, #68]	; 0x44
 800921e:	f8da 1044 	ldr.w	r1, [sl, #68]	; 0x44
 8009222:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8009226:	9103      	str	r1, [sp, #12]
 8009228:	9903      	ldr	r1, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
 800922a:	f023 0103 	bic.w	r1, r3, #3
 800922e:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8009232:	f501 319c 	add.w	r1, r1, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8009236:	f003 0703 	and.w	r7, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800923a:	688d      	ldr	r5, [r1, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800923c:	00bf      	lsls	r7, r7, #2
 800923e:	f04f 0e0f 	mov.w	lr, #15
 8009242:	fa0e fe07 	lsl.w	lr, lr, r7
 8009246:	ea25 080e 	bic.w	r8, r5, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800924a:	4d70      	ldr	r5, [pc, #448]	; (800940c <HAL_GPIO_Init+0x254>)
 800924c:	42a8      	cmp	r0, r5
 800924e:	d02e      	beq.n	80092ae <HAL_GPIO_Init+0xf6>
 8009250:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009254:	42a8      	cmp	r0, r5
 8009256:	f000 809f 	beq.w	8009398 <HAL_GPIO_Init+0x1e0>
 800925a:	4d6d      	ldr	r5, [pc, #436]	; (8009410 <HAL_GPIO_Init+0x258>)
 800925c:	42a8      	cmp	r0, r5
 800925e:	f000 80a2 	beq.w	80093a6 <HAL_GPIO_Init+0x1ee>
 8009262:	4d6c      	ldr	r5, [pc, #432]	; (8009414 <HAL_GPIO_Init+0x25c>)
 8009264:	42a8      	cmp	r0, r5
 8009266:	f000 80a5 	beq.w	80093b4 <HAL_GPIO_Init+0x1fc>
 800926a:	4d6b      	ldr	r5, [pc, #428]	; (8009418 <HAL_GPIO_Init+0x260>)
 800926c:	42a8      	cmp	r0, r5
 800926e:	f000 80a8 	beq.w	80093c2 <HAL_GPIO_Init+0x20a>
 8009272:	4d6a      	ldr	r5, [pc, #424]	; (800941c <HAL_GPIO_Init+0x264>)
 8009274:	42a8      	cmp	r0, r5
 8009276:	f000 80b2 	beq.w	80093de <HAL_GPIO_Init+0x226>
 800927a:	4d69      	ldr	r5, [pc, #420]	; (8009420 <HAL_GPIO_Init+0x268>)
 800927c:	42a8      	cmp	r0, r5
 800927e:	f000 80b5 	beq.w	80093ec <HAL_GPIO_Init+0x234>
 8009282:	f8df e1a4 	ldr.w	lr, [pc, #420]	; 8009428 <HAL_GPIO_Init+0x270>
 8009286:	4570      	cmp	r0, lr
 8009288:	f000 80a2 	beq.w	80093d0 <HAL_GPIO_Init+0x218>
 800928c:	f8df e19c 	ldr.w	lr, [pc, #412]	; 800942c <HAL_GPIO_Init+0x274>
 8009290:	4570      	cmp	r0, lr
 8009292:	f000 80b2 	beq.w	80093fa <HAL_GPIO_Init+0x242>
 8009296:	f8df e198 	ldr.w	lr, [pc, #408]	; 8009430 <HAL_GPIO_Init+0x278>
 800929a:	4570      	cmp	r0, lr
 800929c:	bf0c      	ite	eq
 800929e:	f04f 0e09 	moveq.w	lr, #9
 80092a2:	f04f 0e0a 	movne.w	lr, #10
 80092a6:	fa0e f707 	lsl.w	r7, lr, r7
 80092aa:	ea48 0807 	orr.w	r8, r8, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80092ae:	f8c1 8008 	str.w	r8, [r1, #8]
        temp = EXTI->RTSR;
 80092b2:	68b1      	ldr	r1, [r6, #8]
        temp &= ~((uint32_t)iocurrent);
 80092b4:	ea6f 050b 	mvn.w	r5, fp
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80092b8:	f41c 1f80 	tst.w	ip, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80092bc:	bf0c      	ite	eq
 80092be:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092c0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->RTSR = temp;
 80092c4:	60b1      	str	r1, [r6, #8]

        temp = EXTI->FTSR;
 80092c6:	68f1      	ldr	r1, [r6, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80092c8:	f41c 1f00 	tst.w	ip, #2097152	; 0x200000
        temp &= ~((uint32_t)iocurrent);
 80092cc:	bf0c      	ite	eq
 80092ce:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092d0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->FTSR = temp;
 80092d4:	60f1      	str	r1, [r6, #12]

        temp = EXTI->EMR;
 80092d6:	6871      	ldr	r1, [r6, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80092d8:	f41c 3f00 	tst.w	ip, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80092dc:	bf0c      	ite	eq
 80092de:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092e0:	ea4b 0101 	orrne.w	r1, fp, r1
        }
        EXTI->EMR = temp;
 80092e4:	6071      	str	r1, [r6, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80092e6:	6831      	ldr	r1, [r6, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80092e8:	f41c 3f80 	tst.w	ip, #65536	; 0x10000
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092ec:	f103 0301 	add.w	r3, r3, #1
        temp &= ~((uint32_t)iocurrent);
 80092f0:	bf0c      	ite	eq
 80092f2:	4029      	andeq	r1, r5
        {
          temp |= iocurrent;
 80092f4:	ea4b 0101 	orrne.w	r1, fp, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092f8:	2b10      	cmp	r3, #16
        }
        EXTI->IMR = temp;
 80092fa:	6031      	str	r1, [r6, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80092fc:	f102 0202 	add.w	r2, r2, #2
 8009300:	f47f af6b 	bne.w	80091da <HAL_GPIO_Init+0x22>
      }
    }
  }
}
 8009304:	b005      	add	sp, #20
 8009306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= (GPIO_Init->Speed << (position * 2U));
 800930a:	f8d9 500c 	ldr.w	r5, [r9, #12]
        temp = GPIOx->OSPEEDR; 
 800930e:	f8d0 e008 	ldr.w	lr, [r0, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009312:	fa05 f702 	lsl.w	r7, r5, r2
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009316:	2503      	movs	r5, #3
 8009318:	fa05 f802 	lsl.w	r8, r5, r2
 800931c:	ea2e 0e08 	bic.w	lr, lr, r8
        temp |= (GPIO_Init->Speed << (position * 2U));
 8009320:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 8009324:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8009326:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8009328:	ea27 0e0b 	bic.w	lr, r7, fp
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800932c:	f3cc 1700 	ubfx	r7, ip, #4, #1
 8009330:	409f      	lsls	r7, r3
 8009332:	ea47 070e 	orr.w	r7, r7, lr
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009336:	ea6f 0508 	mvn.w	r5, r8
        GPIOx->OTYPER = temp;
 800933a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800933c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800933e:	ea07 0e05 	and.w	lr, r7, r5
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8009342:	f8d9 7008 	ldr.w	r7, [r9, #8]
 8009346:	4097      	lsls	r7, r2
 8009348:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800934c:	2902      	cmp	r1, #2
        GPIOx->PUPDR = temp;
 800934e:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8009350:	fa01 f102 	lsl.w	r1, r1, r2
 8009354:	f47f af54 	bne.w	8009200 <HAL_GPIO_Init+0x48>
        temp = GPIOx->AFR[position >> 3U];
 8009358:	ea4f 0ed3 	mov.w	lr, r3, lsr #3
 800935c:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009360:	f003 0807 	and.w	r8, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8009364:	f8de 7020 	ldr.w	r7, [lr, #32]
 8009368:	9700      	str	r7, [sp, #0]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800936a:	f8d9 7010 	ldr.w	r7, [r9, #16]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800936e:	ea4f 0888 	mov.w	r8, r8, lsl #2
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009372:	fa07 f708 	lsl.w	r7, r7, r8
 8009376:	9701      	str	r7, [sp, #4]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8009378:	270f      	movs	r7, #15
 800937a:	fa07 f808 	lsl.w	r8, r7, r8
 800937e:	9f00      	ldr	r7, [sp, #0]
 8009380:	ea27 0808 	bic.w	r8, r7, r8
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8009384:	9f01      	ldr	r7, [sp, #4]
 8009386:	ea47 0708 	orr.w	r7, r7, r8
        GPIOx->AFR[position >> 3U] = temp;
 800938a:	f8ce 7020 	str.w	r7, [lr, #32]
 800938e:	e737      	b.n	8009200 <HAL_GPIO_Init+0x48>
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8009390:	2503      	movs	r5, #3
 8009392:	4095      	lsls	r5, r2
 8009394:	43ed      	mvns	r5, r5
 8009396:	e7d1      	b.n	800933c <HAL_GPIO_Init+0x184>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8009398:	f04f 0e01 	mov.w	lr, #1
 800939c:	fa0e f707 	lsl.w	r7, lr, r7
 80093a0:	ea48 0807 	orr.w	r8, r8, r7
 80093a4:	e783      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093a6:	f04f 0e02 	mov.w	lr, #2
 80093aa:	fa0e f707 	lsl.w	r7, lr, r7
 80093ae:	ea48 0807 	orr.w	r8, r8, r7
 80093b2:	e77c      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093b4:	f04f 0e03 	mov.w	lr, #3
 80093b8:	fa0e f707 	lsl.w	r7, lr, r7
 80093bc:	ea48 0807 	orr.w	r8, r8, r7
 80093c0:	e775      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093c2:	f04f 0e04 	mov.w	lr, #4
 80093c6:	fa0e f707 	lsl.w	r7, lr, r7
 80093ca:	ea48 0807 	orr.w	r8, r8, r7
 80093ce:	e76e      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093d0:	f04f 0e07 	mov.w	lr, #7
 80093d4:	fa0e f707 	lsl.w	r7, lr, r7
 80093d8:	ea48 0807 	orr.w	r8, r8, r7
 80093dc:	e767      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093de:	f04f 0e05 	mov.w	lr, #5
 80093e2:	fa0e f707 	lsl.w	r7, lr, r7
 80093e6:	ea48 0807 	orr.w	r8, r8, r7
 80093ea:	e760      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093ec:	f04f 0e06 	mov.w	lr, #6
 80093f0:	fa0e f707 	lsl.w	r7, lr, r7
 80093f4:	ea48 0807 	orr.w	r8, r8, r7
 80093f8:	e759      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 80093fa:	f04f 0e08 	mov.w	lr, #8
 80093fe:	fa0e f707 	lsl.w	r7, lr, r7
 8009402:	ea48 0807 	orr.w	r8, r8, r7
 8009406:	e752      	b.n	80092ae <HAL_GPIO_Init+0xf6>
 8009408:	40013c00 	.word	0x40013c00
 800940c:	40020000 	.word	0x40020000
 8009410:	40020800 	.word	0x40020800
 8009414:	40020c00 	.word	0x40020c00
 8009418:	40021000 	.word	0x40021000
 800941c:	40021400 	.word	0x40021400
 8009420:	40021800 	.word	0x40021800
 8009424:	40023800 	.word	0x40023800
 8009428:	40021c00 	.word	0x40021c00
 800942c:	40022000 	.word	0x40022000
 8009430:	40022400 	.word	0x40022400

08009434 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8009434:	6903      	ldr	r3, [r0, #16]
 8009436:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8009438:	bf14      	ite	ne
 800943a:	2001      	movne	r0, #1
 800943c:	2000      	moveq	r0, #0
 800943e:	4770      	bx	lr

08009440 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8009440:	b902      	cbnz	r2, 8009444 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8009442:	0409      	lsls	r1, r1, #16
 8009444:	6181      	str	r1, [r0, #24]
  }
}
 8009446:	4770      	bx	lr

08009448 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8009448:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800944a:	ea01 0203 	and.w	r2, r1, r3
 800944e:	ea21 0103 	bic.w	r1, r1, r3
 8009452:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8009456:	6181      	str	r1, [r0, #24]
}
 8009458:	4770      	bx	lr
 800945a:	bf00      	nop

0800945c <HAL_GPIO_EXTI_Callback>:
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 800945c:	4770      	bx	lr
 800945e:	bf00      	nop

08009460 <HAL_GPIO_EXTI_IRQHandler>:
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8009460:	4a04      	ldr	r2, [pc, #16]	; (8009474 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8009462:	6951      	ldr	r1, [r2, #20]
 8009464:	4201      	tst	r1, r0
 8009466:	d100      	bne.n	800946a <HAL_GPIO_EXTI_IRQHandler+0xa>
 8009468:	4770      	bx	lr
{
 800946a:	b508      	push	{r3, lr}
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800946c:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800946e:	f7ff fff5 	bl	800945c <HAL_GPIO_EXTI_Callback>
}
 8009472:	bd08      	pop	{r3, pc}
 8009474:	40013c00 	.word	0x40013c00

08009478 <I2C_RequestMemoryWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout, uint32_t Tickstart)
{
 8009478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  /* Generate Start */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800947c:	6804      	ldr	r4, [r0, #0]
{
 800947e:	b083      	sub	sp, #12
 8009480:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009482:	6823      	ldr	r3, [r4, #0]
{
 8009484:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8009488:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800948c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009490:	4606      	mov	r6, r0
 8009492:	468a      	mov	sl, r1
 8009494:	4617      	mov	r7, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009496:	6023      	str	r3, [r4, #0]
  * @param  Status The new Flag status (SET or RESET).
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009498:	f1b9 3fff 	cmp.w	r9, #4294967295
 800949c:	d136      	bne.n	800950c <I2C_RequestMemoryWrite+0x94>
{
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800949e:	6965      	ldr	r5, [r4, #20]
 80094a0:	07e8      	lsls	r0, r5, #31
 80094a2:	d5fc      	bpl.n	800949e <I2C_RequestMemoryWrite+0x26>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80094a4:	f00a 03fe 	and.w	r3, sl, #254	; 0xfe
 80094a8:	6123      	str	r3, [r4, #16]
  * @param  Flag specifies the I2C flag to check.
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 80094aa:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094ae:	d003      	beq.n	80094b8 <I2C_RequestMemoryWrite+0x40>
 80094b0:	e04f      	b.n	8009552 <I2C_RequestMemoryWrite+0xda>
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094b2:	6961      	ldr	r1, [r4, #20]
 80094b4:	054d      	lsls	r5, r1, #21
 80094b6:	d45d      	bmi.n	8009574 <I2C_RequestMemoryWrite+0xfc>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80094b8:	6961      	ldr	r1, [r4, #20]
 80094ba:	078b      	lsls	r3, r1, #30
 80094bc:	d5f9      	bpl.n	80094b2 <I2C_RequestMemoryWrite+0x3a>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80094be:	2300      	movs	r3, #0
 80094c0:	9301      	str	r3, [sp, #4]
 80094c2:	6963      	ldr	r3, [r4, #20]
 80094c4:	9301      	str	r3, [sp, #4]
 80094c6:	69a3      	ldr	r3, [r4, #24]
 80094c8:	9301      	str	r3, [sp, #4]
 80094ca:	9b01      	ldr	r3, [sp, #4]
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80094cc:	f1b9 3fff 	cmp.w	r9, #4294967295
 80094d0:	f040 8088 	bne.w	80095e4 <I2C_RequestMemoryWrite+0x16c>
 80094d4:	6963      	ldr	r3, [r4, #20]
 80094d6:	061a      	lsls	r2, r3, #24
 80094d8:	d464      	bmi.n	80095a4 <I2C_RequestMemoryWrite+0x12c>
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80094da:	6963      	ldr	r3, [r4, #20]
 80094dc:	055b      	lsls	r3, r3, #21
 80094de:	d5f9      	bpl.n	80094d4 <I2C_RequestMemoryWrite+0x5c>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);

    hi2c->PreviousState       = I2C_STATE_NONE;
 80094e0:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094e2:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80094e6:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80094e8:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80094ea:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80094ec:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80094f0:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80094f4:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80094f6:	f043 0304 	orr.w	r3, r3, #4
 80094fa:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80094fc:	6c33      	ldr	r3, [r6, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80094fe:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009500:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009502:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009506:	d066      	beq.n	80095d6 <I2C_RequestMemoryWrite+0x15e>
    return HAL_ERROR;
 8009508:	2001      	movs	r0, #1
 800950a:	e01f      	b.n	800954c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800950c:	6963      	ldr	r3, [r4, #20]
 800950e:	07d9      	lsls	r1, r3, #31
 8009510:	d4c8      	bmi.n	80094a4 <I2C_RequestMemoryWrite+0x2c>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009512:	f7ff fdb1 	bl	8009078 <HAL_GetTick>
 8009516:	eba0 000b 	sub.w	r0, r0, fp
 800951a:	4581      	cmp	r9, r0
 800951c:	d304      	bcc.n	8009528 <I2C_RequestMemoryWrite+0xb0>
 800951e:	f1b9 0f00 	cmp.w	r9, #0
 8009522:	d001      	beq.n	8009528 <I2C_RequestMemoryWrite+0xb0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009524:	6834      	ldr	r4, [r6, #0]
 8009526:	e7b7      	b.n	8009498 <I2C_RequestMemoryWrite+0x20>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009528:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800952a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800952c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800952e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009532:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009536:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009538:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 800953a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800953e:	f042 0220 	orr.w	r2, r2, #32
 8009542:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009544:	680b      	ldr	r3, [r1, #0]
 8009546:	05dc      	lsls	r4, r3, #23
 8009548:	d435      	bmi.n	80095b6 <I2C_RequestMemoryWrite+0x13e>
    return HAL_TIMEOUT;
 800954a:	2003      	movs	r0, #3
}
 800954c:	b003      	add	sp, #12
 800954e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009552:	6963      	ldr	r3, [r4, #20]
 8009554:	0798      	lsls	r0, r3, #30
 8009556:	d4b2      	bmi.n	80094be <I2C_RequestMemoryWrite+0x46>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009558:	6963      	ldr	r3, [r4, #20]
 800955a:	055a      	lsls	r2, r3, #21
 800955c:	d40a      	bmi.n	8009574 <I2C_RequestMemoryWrite+0xfc>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800955e:	f7ff fd8b 	bl	8009078 <HAL_GetTick>
 8009562:	eba0 000b 	sub.w	r0, r0, fp
 8009566:	4581      	cmp	r9, r0
 8009568:	d34e      	bcc.n	8009608 <I2C_RequestMemoryWrite+0x190>
 800956a:	f1b9 0f00 	cmp.w	r9, #0
 800956e:	d04b      	beq.n	8009608 <I2C_RequestMemoryWrite+0x190>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009570:	6834      	ldr	r4, [r6, #0]
 8009572:	e79a      	b.n	80094aa <I2C_RequestMemoryWrite+0x32>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009574:	6823      	ldr	r3, [r4, #0]
 8009576:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800957a:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800957c:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800957e:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009582:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009584:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009586:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009588:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800958c:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009590:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009592:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009596:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 800959a:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800959c:	6433      	str	r3, [r6, #64]	; 0x40
}
 800959e:	b003      	add	sp, #12
 80095a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80095a4:	f1b8 0f01 	cmp.w	r8, #1
 80095a8:	d109      	bne.n	80095be <I2C_RequestMemoryWrite+0x146>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80095aa:	b2ff      	uxtb	r7, r7
  return HAL_OK;
 80095ac:	2000      	movs	r0, #0
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80095ae:	6127      	str	r7, [r4, #16]
}
 80095b0:	b003      	add	sp, #12
 80095b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80095b6:	f44f 7300 	mov.w	r3, #512	; 0x200
 80095ba:	6433      	str	r3, [r6, #64]	; 0x40
 80095bc:	e7c5      	b.n	800954a <I2C_RequestMemoryWrite+0xd2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80095be:	0a3b      	lsrs	r3, r7, #8
 80095c0:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095c2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80095c6:	d12e      	bne.n	8009626 <I2C_RequestMemoryWrite+0x1ae>
 80095c8:	6963      	ldr	r3, [r4, #20]
 80095ca:	0619      	lsls	r1, r3, #24
 80095cc:	d4ed      	bmi.n	80095aa <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095ce:	6963      	ldr	r3, [r4, #20]
 80095d0:	055a      	lsls	r2, r3, #21
 80095d2:	d5f9      	bpl.n	80095c8 <I2C_RequestMemoryWrite+0x150>
 80095d4:	e784      	b.n	80094e0 <I2C_RequestMemoryWrite+0x68>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095d6:	6832      	ldr	r2, [r6, #0]
 80095d8:	6813      	ldr	r3, [r2, #0]
 80095da:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 80095de:	2001      	movs	r0, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80095e0:	6013      	str	r3, [r2, #0]
 80095e2:	e7b3      	b.n	800954c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80095e4:	6963      	ldr	r3, [r4, #20]
 80095e6:	061d      	lsls	r5, r3, #24
 80095e8:	d4dc      	bmi.n	80095a4 <I2C_RequestMemoryWrite+0x12c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80095ea:	6963      	ldr	r3, [r4, #20]
 80095ec:	0559      	lsls	r1, r3, #21
 80095ee:	f53f af77 	bmi.w	80094e0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80095f2:	f7ff fd41 	bl	8009078 <HAL_GetTick>
 80095f6:	eba0 000b 	sub.w	r0, r0, fp
 80095fa:	4581      	cmp	r9, r0
 80095fc:	d325      	bcc.n	800964a <I2C_RequestMemoryWrite+0x1d2>
 80095fe:	f1b9 0f00 	cmp.w	r9, #0
 8009602:	d022      	beq.n	800964a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009604:	6834      	ldr	r4, [r6, #0]
 8009606:	e761      	b.n	80094cc <I2C_RequestMemoryWrite+0x54>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8009608:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800960a:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800960c:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800960e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009612:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8009616:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009618:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800961c:	f043 0320 	orr.w	r3, r3, #32
 8009620:	6433      	str	r3, [r6, #64]	; 0x40
    return HAL_ERROR;
 8009622:	2001      	movs	r0, #1
 8009624:	e792      	b.n	800954c <I2C_RequestMemoryWrite+0xd4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009626:	6963      	ldr	r3, [r4, #20]
 8009628:	061b      	lsls	r3, r3, #24
 800962a:	d4be      	bmi.n	80095aa <I2C_RequestMemoryWrite+0x132>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800962c:	6963      	ldr	r3, [r4, #20]
 800962e:	0558      	lsls	r0, r3, #21
 8009630:	f53f af56 	bmi.w	80094e0 <I2C_RequestMemoryWrite+0x68>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009634:	f7ff fd20 	bl	8009078 <HAL_GetTick>
 8009638:	eba0 000b 	sub.w	r0, r0, fp
 800963c:	4581      	cmp	r9, r0
 800963e:	d304      	bcc.n	800964a <I2C_RequestMemoryWrite+0x1d2>
 8009640:	f1b9 0f00 	cmp.w	r9, #0
 8009644:	d001      	beq.n	800964a <I2C_RequestMemoryWrite+0x1d2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009646:	6834      	ldr	r4, [r6, #0]
 8009648:	e7bb      	b.n	80095c2 <I2C_RequestMemoryWrite+0x14a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800964a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800964c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800964e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009650:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009654:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009658:	6c33      	ldr	r3, [r6, #64]	; 0x40
 800965a:	4313      	orrs	r3, r2
 800965c:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 800965e:	e74d      	b.n	80094fc <I2C_RequestMemoryWrite+0x84>

08009660 <I2C_RequestMemoryRead>:
{
 8009660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009664:	6804      	ldr	r4, [r0, #0]
{
 8009666:	4698      	mov	r8, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009668:	6823      	ldr	r3, [r4, #0]
 800966a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800966e:	6023      	str	r3, [r4, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009670:	6823      	ldr	r3, [r4, #0]
{
 8009672:	b083      	sub	sp, #12
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009674:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 8009678:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800967c:	f8dd 9034 	ldr.w	r9, [sp, #52]	; 0x34
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8009680:	6023      	str	r3, [r4, #0]
{
 8009682:	4606      	mov	r6, r0
 8009684:	468b      	mov	fp, r1
 8009686:	4617      	mov	r7, r2
 8009688:	f1ba 3fff 	cmp.w	sl, #4294967295
 800968c:	d13a      	bne.n	8009704 <I2C_RequestMemoryRead+0xa4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800968e:	6965      	ldr	r5, [r4, #20]
 8009690:	07eb      	lsls	r3, r5, #31
 8009692:	d5fc      	bpl.n	800968e <I2C_RequestMemoryRead+0x2e>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8009694:	f00b 03fe 	and.w	r3, fp, #254	; 0xfe
 8009698:	6123      	str	r3, [r4, #16]
 800969a:	fa5f fb8b 	uxtb.w	fp, fp
 800969e:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096a2:	d003      	beq.n	80096ac <I2C_RequestMemoryRead+0x4c>
 80096a4:	e069      	b.n	800977a <I2C_RequestMemoryRead+0x11a>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096a6:	6965      	ldr	r5, [r4, #20]
 80096a8:	056a      	lsls	r2, r5, #21
 80096aa:	d44e      	bmi.n	800974a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80096ac:	6965      	ldr	r5, [r4, #20]
 80096ae:	07a9      	lsls	r1, r5, #30
 80096b0:	d5f9      	bpl.n	80096a6 <I2C_RequestMemoryRead+0x46>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80096b2:	2300      	movs	r3, #0
 80096b4:	9301      	str	r3, [sp, #4]
 80096b6:	6963      	ldr	r3, [r4, #20]
 80096b8:	9301      	str	r3, [sp, #4]
 80096ba:	69a3      	ldr	r3, [r4, #24]
 80096bc:	9301      	str	r3, [sp, #4]
 80096be:	9b01      	ldr	r3, [sp, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80096c0:	f1ba 3fff 	cmp.w	sl, #4294967295
 80096c4:	f040 80bd 	bne.w	8009842 <I2C_RequestMemoryRead+0x1e2>
 80096c8:	6963      	ldr	r3, [r4, #20]
 80096ca:	0618      	lsls	r0, r3, #24
 80096cc:	d468      	bmi.n	80097a0 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80096ce:	6963      	ldr	r3, [r4, #20]
 80096d0:	0559      	lsls	r1, r3, #21
 80096d2:	d5f9      	bpl.n	80096c8 <I2C_RequestMemoryRead+0x68>
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096d4:	2300      	movs	r3, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096d6:	f46f 6180 	mvn.w	r1, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 80096da:	2220      	movs	r2, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80096dc:	6161      	str	r1, [r4, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 80096de:	6333      	str	r3, [r6, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80096e0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80096e4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80096e8:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80096ea:	f043 0304 	orr.w	r3, r3, #4
 80096ee:	6433      	str	r3, [r6, #64]	; 0x40
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096f0:	6c33      	ldr	r3, [r6, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 80096f2:	2200      	movs	r2, #0
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096f4:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 80096f6:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80096fa:	d070      	beq.n	80097de <I2C_RequestMemoryRead+0x17e>
    return HAL_ERROR;
 80096fc:	2001      	movs	r0, #1
}
 80096fe:	b003      	add	sp, #12
 8009700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009704:	6963      	ldr	r3, [r4, #20]
 8009706:	07dd      	lsls	r5, r3, #31
 8009708:	d4c4      	bmi.n	8009694 <I2C_RequestMemoryRead+0x34>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800970a:	f7ff fcb5 	bl	8009078 <HAL_GetTick>
 800970e:	eba0 0009 	sub.w	r0, r0, r9
 8009712:	4582      	cmp	sl, r0
 8009714:	d304      	bcc.n	8009720 <I2C_RequestMemoryRead+0xc0>
 8009716:	f1ba 0f00 	cmp.w	sl, #0
 800971a:	d001      	beq.n	8009720 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800971c:	6834      	ldr	r4, [r6, #0]
 800971e:	e7b3      	b.n	8009688 <I2C_RequestMemoryRead+0x28>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009720:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009722:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009724:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009726:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800972a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800972e:	6c32      	ldr	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8009730:	6831      	ldr	r1, [r6, #0]
        __HAL_UNLOCK(hi2c);
 8009732:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009736:	f042 0220 	orr.w	r2, r2, #32
 800973a:	6432      	str	r2, [r6, #64]	; 0x40
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800973c:	680b      	ldr	r3, [r1, #0]
 800973e:	05dc      	lsls	r4, r3, #23
 8009740:	d43d      	bmi.n	80097be <I2C_RequestMemoryRead+0x15e>
    return HAL_TIMEOUT;
 8009742:	2003      	movs	r0, #3
}
 8009744:	b003      	add	sp, #12
 8009746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800974a:	6823      	ldr	r3, [r4, #0]
 800974c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009750:	6023      	str	r3, [r4, #0]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009752:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009754:	f46f 6180 	mvn.w	r1, #1024	; 0x400
      hi2c->State               = HAL_I2C_STATE_READY;
 8009758:	2320      	movs	r3, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800975a:	6161      	str	r1, [r4, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 800975c:	6332      	str	r2, [r6, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800975e:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009762:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009766:	6c33      	ldr	r3, [r6, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009768:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800976c:	f043 0304 	orr.w	r3, r3, #4
    return HAL_ERROR;
 8009770:	2001      	movs	r0, #1
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009772:	6433      	str	r3, [r6, #64]	; 0x40
}
 8009774:	b003      	add	sp, #12
 8009776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800977a:	6963      	ldr	r3, [r4, #20]
 800977c:	079b      	lsls	r3, r3, #30
 800977e:	d498      	bmi.n	80096b2 <I2C_RequestMemoryRead+0x52>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009780:	6963      	ldr	r3, [r4, #20]
 8009782:	0558      	lsls	r0, r3, #21
 8009784:	d4e1      	bmi.n	800974a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009786:	f7ff fc77 	bl	8009078 <HAL_GetTick>
 800978a:	eba0 0009 	sub.w	r0, r0, r9
 800978e:	4582      	cmp	sl, r0
 8009790:	f0c0 808f 	bcc.w	80098b2 <I2C_RequestMemoryRead+0x252>
 8009794:	f1ba 0f00 	cmp.w	sl, #0
 8009798:	f000 808b 	beq.w	80098b2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800979c:	6834      	ldr	r4, [r6, #0]
 800979e:	e77e      	b.n	800969e <I2C_RequestMemoryRead+0x3e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80097a0:	f1b8 0f01 	cmp.w	r8, #1
 80097a4:	d10f      	bne.n	80097c6 <I2C_RequestMemoryRead+0x166>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80097a6:	b2ff      	uxtb	r7, r7
 80097a8:	6127      	str	r7, [r4, #16]
 80097aa:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097ae:	d16e      	bne.n	800988e <I2C_RequestMemoryRead+0x22e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097b0:	6963      	ldr	r3, [r4, #20]
 80097b2:	061b      	lsls	r3, r3, #24
 80097b4:	d41a      	bmi.n	80097ec <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097b6:	6963      	ldr	r3, [r4, #20]
 80097b8:	055f      	lsls	r7, r3, #21
 80097ba:	d5f9      	bpl.n	80097b0 <I2C_RequestMemoryRead+0x150>
 80097bc:	e78a      	b.n	80096d4 <I2C_RequestMemoryRead+0x74>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80097be:	f44f 7300 	mov.w	r3, #512	; 0x200
 80097c2:	6433      	str	r3, [r6, #64]	; 0x40
 80097c4:	e7bd      	b.n	8009742 <I2C_RequestMemoryRead+0xe2>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80097c6:	0a3b      	lsrs	r3, r7, #8
 80097c8:	6123      	str	r3, [r4, #16]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80097ca:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097ce:	d17e      	bne.n	80098ce <I2C_RequestMemoryRead+0x26e>
 80097d0:	6963      	ldr	r3, [r4, #20]
 80097d2:	061d      	lsls	r5, r3, #24
 80097d4:	d4e7      	bmi.n	80097a6 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80097d6:	6963      	ldr	r3, [r4, #20]
 80097d8:	0558      	lsls	r0, r3, #21
 80097da:	d5f9      	bpl.n	80097d0 <I2C_RequestMemoryRead+0x170>
 80097dc:	e77a      	b.n	80096d4 <I2C_RequestMemoryRead+0x74>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097de:	6832      	ldr	r2, [r6, #0]
 80097e0:	6813      	ldr	r3, [r2, #0]
 80097e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
    return HAL_ERROR;
 80097e6:	2001      	movs	r0, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80097e8:	6013      	str	r3, [r2, #0]
 80097ea:	e7ab      	b.n	8009744 <I2C_RequestMemoryRead+0xe4>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80097ec:	6823      	ldr	r3, [r4, #0]
 80097ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80097f2:	6023      	str	r3, [r4, #0]
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 80097f4:	f1ba 3fff 	cmp.w	sl, #4294967295
 80097f8:	d113      	bne.n	8009822 <I2C_RequestMemoryRead+0x1c2>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80097fa:	6963      	ldr	r3, [r4, #20]
 80097fc:	07d8      	lsls	r0, r3, #31
 80097fe:	d5fc      	bpl.n	80097fa <I2C_RequestMemoryRead+0x19a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8009800:	f04b 0301 	orr.w	r3, fp, #1
 8009804:	6123      	str	r3, [r4, #16]
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
 8009806:	f1ba 3fff 	cmp.w	sl, #4294967295
 800980a:	d003      	beq.n	8009814 <I2C_RequestMemoryRead+0x1b4>
 800980c:	e02b      	b.n	8009866 <I2C_RequestMemoryRead+0x206>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800980e:	6963      	ldr	r3, [r4, #20]
 8009810:	055b      	lsls	r3, r3, #21
 8009812:	d49a      	bmi.n	800974a <I2C_RequestMemoryRead+0xea>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009814:	6963      	ldr	r3, [r4, #20]
 8009816:	43db      	mvns	r3, r3
 8009818:	f013 0302 	ands.w	r3, r3, #2
 800981c:	d1f7      	bne.n	800980e <I2C_RequestMemoryRead+0x1ae>
  return HAL_OK;
 800981e:	4618      	mov	r0, r3
 8009820:	e790      	b.n	8009744 <I2C_RequestMemoryRead+0xe4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009822:	6963      	ldr	r3, [r4, #20]
 8009824:	07d9      	lsls	r1, r3, #31
 8009826:	d4eb      	bmi.n	8009800 <I2C_RequestMemoryRead+0x1a0>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009828:	f7ff fc26 	bl	8009078 <HAL_GetTick>
 800982c:	eba0 0009 	sub.w	r0, r0, r9
 8009830:	4582      	cmp	sl, r0
 8009832:	f4ff af75 	bcc.w	8009720 <I2C_RequestMemoryRead+0xc0>
 8009836:	f1ba 0f00 	cmp.w	sl, #0
 800983a:	f43f af71 	beq.w	8009720 <I2C_RequestMemoryRead+0xc0>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800983e:	6834      	ldr	r4, [r6, #0]
 8009840:	e7d8      	b.n	80097f4 <I2C_RequestMemoryRead+0x194>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009842:	6963      	ldr	r3, [r4, #20]
 8009844:	061a      	lsls	r2, r3, #24
 8009846:	d4ab      	bmi.n	80097a0 <I2C_RequestMemoryRead+0x140>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009848:	6963      	ldr	r3, [r4, #20]
 800984a:	055d      	lsls	r5, r3, #21
 800984c:	f53f af42 	bmi.w	80096d4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009850:	f7ff fc12 	bl	8009078 <HAL_GetTick>
 8009854:	eba0 0009 	sub.w	r0, r0, r9
 8009858:	4582      	cmp	sl, r0
 800985a:	d34b      	bcc.n	80098f4 <I2C_RequestMemoryRead+0x294>
 800985c:	f1ba 0f00 	cmp.w	sl, #0
 8009860:	d048      	beq.n	80098f4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009862:	6834      	ldr	r4, [r6, #0]
 8009864:	e72c      	b.n	80096c0 <I2C_RequestMemoryRead+0x60>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8009866:	6963      	ldr	r3, [r4, #20]
 8009868:	43db      	mvns	r3, r3
 800986a:	f013 0302 	ands.w	r3, r3, #2
 800986e:	d0d6      	beq.n	800981e <I2C_RequestMemoryRead+0x1be>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009870:	6963      	ldr	r3, [r4, #20]
 8009872:	055a      	lsls	r2, r3, #21
 8009874:	f53f af69 	bmi.w	800974a <I2C_RequestMemoryRead+0xea>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009878:	f7ff fbfe 	bl	8009078 <HAL_GetTick>
 800987c:	eba0 0009 	sub.w	r0, r0, r9
 8009880:	4582      	cmp	sl, r0
 8009882:	d316      	bcc.n	80098b2 <I2C_RequestMemoryRead+0x252>
 8009884:	f1ba 0f00 	cmp.w	sl, #0
 8009888:	d013      	beq.n	80098b2 <I2C_RequestMemoryRead+0x252>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800988a:	6834      	ldr	r4, [r6, #0]
 800988c:	e7bb      	b.n	8009806 <I2C_RequestMemoryRead+0x1a6>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800988e:	6963      	ldr	r3, [r4, #20]
 8009890:	061d      	lsls	r5, r3, #24
 8009892:	d4ab      	bmi.n	80097ec <I2C_RequestMemoryRead+0x18c>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009894:	6963      	ldr	r3, [r4, #20]
 8009896:	055a      	lsls	r2, r3, #21
 8009898:	f53f af1c 	bmi.w	80096d4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800989c:	f7ff fbec 	bl	8009078 <HAL_GetTick>
 80098a0:	eba0 0009 	sub.w	r0, r0, r9
 80098a4:	4582      	cmp	sl, r0
 80098a6:	d325      	bcc.n	80098f4 <I2C_RequestMemoryRead+0x294>
 80098a8:	f1ba 0f00 	cmp.w	sl, #0
 80098ac:	d022      	beq.n	80098f4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098ae:	6834      	ldr	r4, [r6, #0]
 80098b0:	e77b      	b.n	80097aa <I2C_RequestMemoryRead+0x14a>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80098b2:	2200      	movs	r2, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80098b4:	2320      	movs	r3, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80098b6:	6332      	str	r2, [r6, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80098b8:	f886 303d 	strb.w	r3, [r6, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80098bc:	f886 203e 	strb.w	r2, [r6, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098c0:	6c33      	ldr	r3, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80098c2:	f886 203c 	strb.w	r2, [r6, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80098c6:	f043 0320 	orr.w	r3, r3, #32
 80098ca:	6433      	str	r3, [r6, #64]	; 0x40
 80098cc:	e716      	b.n	80096fc <I2C_RequestMemoryRead+0x9c>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098ce:	6963      	ldr	r3, [r4, #20]
 80098d0:	0619      	lsls	r1, r3, #24
 80098d2:	f53f af68 	bmi.w	80097a6 <I2C_RequestMemoryRead+0x146>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80098d6:	6963      	ldr	r3, [r4, #20]
 80098d8:	055b      	lsls	r3, r3, #21
 80098da:	f53f aefb 	bmi.w	80096d4 <I2C_RequestMemoryRead+0x74>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80098de:	f7ff fbcb 	bl	8009078 <HAL_GetTick>
 80098e2:	eba0 0009 	sub.w	r0, r0, r9
 80098e6:	4582      	cmp	sl, r0
 80098e8:	d304      	bcc.n	80098f4 <I2C_RequestMemoryRead+0x294>
 80098ea:	f1ba 0f00 	cmp.w	sl, #0
 80098ee:	d001      	beq.n	80098f4 <I2C_RequestMemoryRead+0x294>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80098f0:	6834      	ldr	r4, [r6, #0]
 80098f2:	e76a      	b.n	80097ca <I2C_RequestMemoryRead+0x16a>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80098f4:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80098f6:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80098f8:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80098fa:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80098fe:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009902:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8009904:	4313      	orrs	r3, r2
 8009906:	6433      	str	r3, [r6, #64]	; 0x40
        return HAL_ERROR;
 8009908:	e6f2      	b.n	80096f0 <I2C_RequestMemoryRead+0x90>
 800990a:	bf00      	nop

0800990c <HAL_I2C_Init>:
  if (hi2c == NULL)
 800990c:	2800      	cmp	r0, #0
 800990e:	f000 80b9 	beq.w	8009a84 <HAL_I2C_Init+0x178>
{
 8009912:	b570      	push	{r4, r5, r6, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8009914:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009918:	4604      	mov	r4, r0
 800991a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800991e:	2b00      	cmp	r3, #0
 8009920:	f000 8098 	beq.w	8009a54 <HAL_I2C_Init+0x148>
  __HAL_I2C_DISABLE(hi2c);
 8009924:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8009926:	2224      	movs	r2, #36	; 0x24
 8009928:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800992c:	681a      	ldr	r2, [r3, #0]
 800992e:	f022 0201 	bic.w	r2, r2, #1
 8009932:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8009934:	681a      	ldr	r2, [r3, #0]
 8009936:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800993a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800993c:	681a      	ldr	r2, [r3, #0]
 800993e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8009942:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8009944:	f001 fe70 	bl	800b628 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8009948:	6865      	ldr	r5, [r4, #4]
 800994a:	4b4f      	ldr	r3, [pc, #316]	; (8009a88 <HAL_I2C_Init+0x17c>)
 800994c:	429d      	cmp	r5, r3
 800994e:	d84f      	bhi.n	80099f0 <HAL_I2C_Init+0xe4>
 8009950:	4b4e      	ldr	r3, [pc, #312]	; (8009a8c <HAL_I2C_Init+0x180>)
 8009952:	4298      	cmp	r0, r3
 8009954:	d97c      	bls.n	8009a50 <HAL_I2C_Init+0x144>
  freqrange = I2C_FREQRANGE(pclk1);
 8009956:	4b4e      	ldr	r3, [pc, #312]	; (8009a90 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009958:	006a      	lsls	r2, r5, #1
  freqrange = I2C_FREQRANGE(pclk1);
 800995a:	fba3 3500 	umull	r3, r5, r3, r0
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800995e:	1e43      	subs	r3, r0, #1
 8009960:	fbb3 f3f2 	udiv	r3, r3, r2
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009964:	6822      	ldr	r2, [r4, #0]
 8009966:	6851      	ldr	r1, [r2, #4]
 8009968:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800996c:	ea41 4195 	orr.w	r1, r1, r5, lsr #18
 8009970:	6051      	str	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009972:	6a11      	ldr	r1, [r2, #32]
  freqrange = I2C_FREQRANGE(pclk1);
 8009974:	ea4f 4c95 	mov.w	ip, r5, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009978:	f10c 0c01 	add.w	ip, ip, #1
 800997c:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009980:	ea41 010c 	orr.w	r1, r1, ip
 8009984:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009986:	69d1      	ldr	r1, [r2, #28]
 8009988:	f640 70fc 	movw	r0, #4092	; 0xffc
 800998c:	3301      	adds	r3, #1
 800998e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009992:	4203      	tst	r3, r0
 8009994:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009998:	d161      	bne.n	8009a5e <HAL_I2C_Init+0x152>
 800999a:	2304      	movs	r3, #4
 800999c:	430b      	orrs	r3, r1
 800999e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80099a0:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80099a4:	6811      	ldr	r1, [r2, #0]
 80099a6:	4303      	orrs	r3, r0
 80099a8:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80099ac:	430b      	orrs	r3, r1
 80099ae:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80099b0:	6891      	ldr	r1, [r2, #8]
 80099b2:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 80099b6:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 80099ba:	4303      	orrs	r3, r0
 80099bc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099c0:	430b      	orrs	r3, r1
 80099c2:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80099c4:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 80099c8:	68d1      	ldr	r1, [r2, #12]
 80099ca:	4303      	orrs	r3, r0
 80099cc:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80099d0:	430b      	orrs	r3, r1
 80099d2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 80099d4:	6811      	ldr	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099d6:	2300      	movs	r3, #0
  __HAL_I2C_ENABLE(hi2c);
 80099d8:	f041 0101 	orr.w	r1, r1, #1
  hi2c->State = HAL_I2C_STATE_READY;
 80099dc:	2020      	movs	r0, #32
  __HAL_I2C_ENABLE(hi2c);
 80099de:	6011      	str	r1, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80099e0:	6423      	str	r3, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80099e2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80099e6:	6323      	str	r3, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80099e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
  return HAL_OK;
 80099ec:	4618      	mov	r0, r3
}
 80099ee:	bd70      	pop	{r4, r5, r6, pc}
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80099f0:	4b28      	ldr	r3, [pc, #160]	; (8009a94 <HAL_I2C_Init+0x188>)
 80099f2:	4298      	cmp	r0, r3
 80099f4:	d92c      	bls.n	8009a50 <HAL_I2C_Init+0x144>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80099f6:	6822      	ldr	r2, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 80099f8:	4b25      	ldr	r3, [pc, #148]	; (8009a90 <HAL_I2C_Init+0x184>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80099fa:	6851      	ldr	r1, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80099fc:	4e26      	ldr	r6, [pc, #152]	; (8009a98 <HAL_I2C_Init+0x18c>)
  freqrange = I2C_FREQRANGE(pclk1);
 80099fe:	fba3 3c00 	umull	r3, ip, r3, r0
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8009a02:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a06:	ea41 419c 	orr.w	r1, r1, ip, lsr #18
 8009a0a:	6051      	str	r1, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8009a0c:	ea4f 439c 	mov.w	r3, ip, lsr #18
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8009a10:	f44f 7196 	mov.w	r1, #300	; 0x12c
 8009a14:	fb01 f303 	mul.w	r3, r1, r3
 8009a18:	fba6 6303 	umull	r6, r3, r6, r3
 8009a1c:	6a11      	ldr	r1, [r2, #32]
 8009a1e:	099b      	lsrs	r3, r3, #6
 8009a20:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8009a24:	3301      	adds	r3, #1
 8009a26:	430b      	orrs	r3, r1
 8009a28:	6213      	str	r3, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a2a:	69d1      	ldr	r1, [r2, #28]
 8009a2c:	68a3      	ldr	r3, [r4, #8]
 8009a2e:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8009a32:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8009a36:	b9ab      	cbnz	r3, 8009a64 <HAL_I2C_Init+0x158>
 8009a38:	1e43      	subs	r3, r0, #1
 8009a3a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8009a3e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a42:	3301      	adds	r3, #1
 8009a44:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a48:	b1d3      	cbz	r3, 8009a80 <HAL_I2C_Init+0x174>
 8009a4a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8009a4e:	e7a5      	b.n	800999c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a50:	2001      	movs	r0, #1
}
 8009a52:	bd70      	pop	{r4, r5, r6, pc}
    hi2c->Lock = HAL_UNLOCKED;
 8009a54:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8009a58:	f7f8 f9fe 	bl	8001e58 <HAL_I2C_MspInit>
 8009a5c:	e762      	b.n	8009924 <HAL_I2C_Init+0x18>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8009a5e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a62:	e79b      	b.n	800999c <HAL_I2C_Init+0x90>
 8009a64:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a68:	1e43      	subs	r3, r0, #1
 8009a6a:	eb05 0585 	add.w	r5, r5, r5, lsl #2
 8009a6e:	fbb3 f3f5 	udiv	r3, r3, r5
 8009a72:	3301      	adds	r3, #1
 8009a74:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8009a78:	b113      	cbz	r3, 8009a80 <HAL_I2C_Init+0x174>
 8009a7a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8009a7e:	e78d      	b.n	800999c <HAL_I2C_Init+0x90>
 8009a80:	2301      	movs	r3, #1
 8009a82:	e78b      	b.n	800999c <HAL_I2C_Init+0x90>
    return HAL_ERROR;
 8009a84:	2001      	movs	r0, #1
}
 8009a86:	4770      	bx	lr
 8009a88:	000186a0 	.word	0x000186a0
 8009a8c:	001e847f 	.word	0x001e847f
 8009a90:	431bde83 	.word	0x431bde83
 8009a94:	003d08ff 	.word	0x003d08ff
 8009a98:	10624dd3 	.word	0x10624dd3

08009a9c <HAL_I2C_Mem_Write>:
{
 8009a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009aa0:	4604      	mov	r4, r0
 8009aa2:	b083      	sub	sp, #12
 8009aa4:	4699      	mov	r9, r3
 8009aa6:	f8bd a034 	ldrh.w	sl, [sp, #52]	; 0x34
 8009aaa:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8009aac:	460f      	mov	r7, r1
 8009aae:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009ab0:	f7ff fae2 	bl	8009078 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009ab4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009ab8:	2b20      	cmp	r3, #32
 8009aba:	d004      	beq.n	8009ac6 <HAL_I2C_Mem_Write+0x2a>
      return HAL_BUSY;
 8009abc:	2702      	movs	r7, #2
}
 8009abe:	4638      	mov	r0, r7
 8009ac0:	b003      	add	sp, #12
 8009ac2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ac6:	4605      	mov	r5, r0
 8009ac8:	e005      	b.n	8009ad6 <HAL_I2C_Mem_Write+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009aca:	f7ff fad5 	bl	8009078 <HAL_GetTick>
 8009ace:	1b40      	subs	r0, r0, r5
 8009ad0:	2819      	cmp	r0, #25
 8009ad2:	f200 80a8 	bhi.w	8009c26 <HAL_I2C_Mem_Write+0x18a>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009ad6:	6820      	ldr	r0, [r4, #0]
 8009ad8:	6983      	ldr	r3, [r0, #24]
 8009ada:	ea6f 0c03 	mvn.w	ip, r3
 8009ade:	f01c 0b02 	ands.w	fp, ip, #2
 8009ae2:	d0f2      	beq.n	8009aca <HAL_I2C_Mem_Write+0x2e>
    __HAL_LOCK(hi2c);
 8009ae4:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009ae8:	2b01      	cmp	r3, #1
 8009aea:	d0e7      	beq.n	8009abc <HAL_I2C_Mem_Write+0x20>
 8009aec:	2301      	movs	r3, #1
 8009aee:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009af2:	6803      	ldr	r3, [r0, #0]
 8009af4:	07db      	lsls	r3, r3, #31
 8009af6:	d572      	bpl.n	8009bde <HAL_I2C_Mem_Write+0x142>
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009af8:	4639      	mov	r1, r7
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009afa:	6807      	ldr	r7, [r0, #0]
 8009afc:	f427 6700 	bic.w	r7, r7, #2048	; 0x800
 8009b00:	6007      	str	r7, [r0, #0]
    hi2c->pBuffPtr    = pData;
 8009b02:	980c      	ldr	r0, [sp, #48]	; 0x30
 8009b04:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009b06:	2021      	movs	r0, #33	; 0x21
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b08:	e9cd 6500 	strd	r6, r5, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8009b0c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009b10:	2040      	movs	r0, #64	; 0x40
 8009b12:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009b16:	2000      	movs	r0, #0
 8009b18:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009b1a:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009b1e:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009b20:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009b22:	4856      	ldr	r0, [pc, #344]	; (8009c7c <HAL_I2C_Mem_Write+0x1e0>)
 8009b24:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009b26:	464b      	mov	r3, r9
 8009b28:	4642      	mov	r2, r8
 8009b2a:	4620      	mov	r0, r4
 8009b2c:	f7ff fca4 	bl	8009478 <I2C_RequestMemoryWrite>
 8009b30:	4607      	mov	r7, r0
 8009b32:	bb00      	cbnz	r0, 8009b76 <HAL_I2C_Mem_Write+0xda>
    while (hi2c->XferSize > 0U)
 8009b34:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009b36:	2b00      	cmp	r3, #0
 8009b38:	f000 809e 	beq.w	8009c78 <HAL_I2C_Mem_Write+0x1dc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009b3c:	6823      	ldr	r3, [r4, #0]
 8009b3e:	1c72      	adds	r2, r6, #1
 8009b40:	d159      	bne.n	8009bf6 <HAL_I2C_Mem_Write+0x15a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009b42:	695a      	ldr	r2, [r3, #20]
 8009b44:	0610      	lsls	r0, r2, #24
 8009b46:	d41b      	bmi.n	8009b80 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009b48:	695a      	ldr	r2, [r3, #20]
 8009b4a:	0551      	lsls	r1, r2, #21
 8009b4c:	d5f9      	bpl.n	8009b42 <HAL_I2C_Mem_Write+0xa6>
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b4e:	2200      	movs	r2, #0
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b50:	f46f 6080 	mvn.w	r0, #1024	; 0x400
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b54:	2120      	movs	r1, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8009b56:	6158      	str	r0, [r3, #20]
    hi2c->PreviousState       = I2C_STATE_NONE;
 8009b58:	6322      	str	r2, [r4, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8009b5a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009b5e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8009b62:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009b64:	f043 0304 	orr.w	r3, r3, #4
 8009b68:	6423      	str	r3, [r4, #64]	; 0x40
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b6a:	6c23      	ldr	r3, [r4, #64]	; 0x40
    __HAL_UNLOCK(hi2c);
 8009b6c:	2200      	movs	r2, #0
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b6e:	2b04      	cmp	r3, #4
    __HAL_UNLOCK(hi2c);
 8009b70:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8009b74:	d038      	beq.n	8009be8 <HAL_I2C_Mem_Write+0x14c>
      return HAL_ERROR;
 8009b76:	2701      	movs	r7, #1
}
 8009b78:	4638      	mov	r0, r7
 8009b7a:	b003      	add	sp, #12
 8009b7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b80:	f8d4 c024 	ldr.w	ip, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8009b84:	f8b4 e028 	ldrh.w	lr, [r4, #40]	; 0x28
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b88:	4661      	mov	r1, ip
      hi2c->XferSize--;
 8009b8a:	f10e 30ff 	add.w	r0, lr, #4294967295
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009b8e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8009b92:	611a      	str	r2, [r3, #16]
      hi2c->XferCount--;
 8009b94:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 8009b96:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8009b98:	3a01      	subs	r2, #1
 8009b9a:	b292      	uxth	r2, r2
 8009b9c:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8009b9e:	b282      	uxth	r2, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ba0:	6958      	ldr	r0, [r3, #20]
      hi2c->XferSize--;
 8009ba2:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8009ba4:	0740      	lsls	r0, r0, #29
 8009ba6:	d517      	bpl.n	8009bd8 <HAL_I2C_Mem_Write+0x13c>
 8009ba8:	b942      	cbnz	r2, 8009bbc <HAL_I2C_Mem_Write+0x120>
 8009baa:	1c72      	adds	r2, r6, #1
 8009bac:	d156      	bne.n	8009c5c <HAL_I2C_Mem_Write+0x1c0>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009bae:	695a      	ldr	r2, [r3, #20]
 8009bb0:	0750      	lsls	r0, r2, #29
 8009bb2:	d446      	bmi.n	8009c42 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bb4:	695a      	ldr	r2, [r3, #20]
 8009bb6:	0551      	lsls	r1, r2, #21
 8009bb8:	d5f9      	bpl.n	8009bae <HAL_I2C_Mem_Write+0x112>
 8009bba:	e7c8      	b.n	8009b4e <HAL_I2C_Mem_Write+0xb2>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8009bbc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8009bc0:	6119      	str	r1, [r3, #16]
        hi2c->pBuffPtr++;
 8009bc2:	f10c 0102 	add.w	r1, ip, #2
 8009bc6:	6261      	str	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009bc8:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8009bca:	f1ae 0202 	sub.w	r2, lr, #2
        hi2c->XferCount--;
 8009bce:	3901      	subs	r1, #1
        hi2c->XferSize--;
 8009bd0:	b292      	uxth	r2, r2
        hi2c->XferCount--;
 8009bd2:	b289      	uxth	r1, r1
        hi2c->XferSize--;
 8009bd4:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8009bd6:	8561      	strh	r1, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009bd8:	2a00      	cmp	r2, #0
 8009bda:	d1b0      	bne.n	8009b3e <HAL_I2C_Mem_Write+0xa2>
 8009bdc:	e7e5      	b.n	8009baa <HAL_I2C_Mem_Write+0x10e>
      __HAL_I2C_ENABLE(hi2c);
 8009bde:	6803      	ldr	r3, [r0, #0]
 8009be0:	f043 0301 	orr.w	r3, r3, #1
 8009be4:	6003      	str	r3, [r0, #0]
 8009be6:	e787      	b.n	8009af8 <HAL_I2C_Mem_Write+0x5c>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009be8:	6822      	ldr	r2, [r4, #0]
 8009bea:	6813      	ldr	r3, [r2, #0]
 8009bec:	f443 7300 	orr.w	r3, r3, #512	; 0x200
      return HAL_ERROR;
 8009bf0:	2701      	movs	r7, #1
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009bf2:	6013      	str	r3, [r2, #0]
 8009bf4:	e763      	b.n	8009abe <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8009bf6:	695a      	ldr	r2, [r3, #20]
 8009bf8:	0612      	lsls	r2, r2, #24
 8009bfa:	d4c1      	bmi.n	8009b80 <HAL_I2C_Mem_Write+0xe4>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009bfc:	695a      	ldr	r2, [r3, #20]
 8009bfe:	0551      	lsls	r1, r2, #21
 8009c00:	d4a5      	bmi.n	8009b4e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c02:	f7ff fa39 	bl	8009078 <HAL_GetTick>
 8009c06:	1b40      	subs	r0, r0, r5
 8009c08:	4286      	cmp	r6, r0
 8009c0a:	d301      	bcc.n	8009c10 <HAL_I2C_Mem_Write+0x174>
 8009c0c:	2e00      	cmp	r6, #0
 8009c0e:	d195      	bne.n	8009b3c <HAL_I2C_Mem_Write+0xa0>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c10:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c12:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c14:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c16:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c1a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c1e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009c20:	4313      	orrs	r3, r2
 8009c22:	6423      	str	r3, [r4, #64]	; 0x40
        return HAL_ERROR;
 8009c24:	e7a1      	b.n	8009b6a <HAL_I2C_Mem_Write+0xce>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c26:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009c28:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009c2c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009c30:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c34:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009c36:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009c3a:	f043 0320 	orr.w	r3, r3, #32
 8009c3e:	6423      	str	r3, [r4, #64]	; 0x40
 8009c40:	e73c      	b.n	8009abc <HAL_I2C_Mem_Write+0x20>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c42:	681a      	ldr	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c44:	2100      	movs	r1, #0
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c46:	f442 7200 	orr.w	r2, r2, #512	; 0x200
    hi2c->State = HAL_I2C_STATE_READY;
 8009c4a:	2020      	movs	r0, #32
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009c4c:	601a      	str	r2, [r3, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8009c4e:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009c52:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009c56:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
    return HAL_OK;
 8009c5a:	e730      	b.n	8009abe <HAL_I2C_Mem_Write+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c5c:	695a      	ldr	r2, [r3, #20]
 8009c5e:	0752      	lsls	r2, r2, #29
 8009c60:	d4ef      	bmi.n	8009c42 <HAL_I2C_Mem_Write+0x1a6>
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8009c62:	695a      	ldr	r2, [r3, #20]
 8009c64:	0551      	lsls	r1, r2, #21
 8009c66:	f53f af72 	bmi.w	8009b4e <HAL_I2C_Mem_Write+0xb2>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009c6a:	f7ff fa05 	bl	8009078 <HAL_GetTick>
 8009c6e:	1b40      	subs	r0, r0, r5
 8009c70:	4286      	cmp	r6, r0
 8009c72:	d3cd      	bcc.n	8009c10 <HAL_I2C_Mem_Write+0x174>
 8009c74:	2e00      	cmp	r6, #0
 8009c76:	d0cb      	beq.n	8009c10 <HAL_I2C_Mem_Write+0x174>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8009c78:	6823      	ldr	r3, [r4, #0]
 8009c7a:	e796      	b.n	8009baa <HAL_I2C_Mem_Write+0x10e>
 8009c7c:	ffff0000 	.word	0xffff0000

08009c80 <HAL_I2C_Mem_Read>:
{
 8009c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009c84:	4604      	mov	r4, r0
 8009c86:	b087      	sub	sp, #28
 8009c88:	4699      	mov	r9, r3
 8009c8a:	f8bd a044 	ldrh.w	sl, [sp, #68]	; 0x44
 8009c8e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8009c90:	460f      	mov	r7, r1
 8009c92:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8009c94:	f7ff f9f0 	bl	8009078 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8009c98:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8009c9c:	2b20      	cmp	r3, #32
 8009c9e:	d004      	beq.n	8009caa <HAL_I2C_Mem_Read+0x2a>
      return HAL_BUSY;
 8009ca0:	2702      	movs	r7, #2
}
 8009ca2:	4638      	mov	r0, r7
 8009ca4:	b007      	add	sp, #28
 8009ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009caa:	4606      	mov	r6, r0
 8009cac:	e005      	b.n	8009cba <HAL_I2C_Mem_Read+0x3a>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009cae:	f7ff f9e3 	bl	8009078 <HAL_GetTick>
 8009cb2:	1b80      	subs	r0, r0, r6
 8009cb4:	2819      	cmp	r0, #25
 8009cb6:	f200 80d2 	bhi.w	8009e5e <HAL_I2C_Mem_Read+0x1de>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009cba:	f8d4 c000 	ldr.w	ip, [r4]
 8009cbe:	f8dc 0018 	ldr.w	r0, [ip, #24]
 8009cc2:	43c0      	mvns	r0, r0
 8009cc4:	f010 0b02 	ands.w	fp, r0, #2
 8009cc8:	d0f1      	beq.n	8009cae <HAL_I2C_Mem_Read+0x2e>
    __HAL_LOCK(hi2c);
 8009cca:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8009cce:	2b01      	cmp	r3, #1
 8009cd0:	d0e6      	beq.n	8009ca0 <HAL_I2C_Mem_Read+0x20>
 8009cd2:	2301      	movs	r3, #1
 8009cd4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8009cd8:	f8dc 3000 	ldr.w	r3, [ip]
 8009cdc:	07d9      	lsls	r1, r3, #31
 8009cde:	d537      	bpl.n	8009d50 <HAL_I2C_Mem_Read+0xd0>
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009ce0:	f8dc 0000 	ldr.w	r0, [ip]
 8009ce4:	f420 6000 	bic.w	r0, r0, #2048	; 0x800
 8009ce8:	f8cc 0000 	str.w	r0, [ip]
    hi2c->pBuffPtr    = pData;
 8009cec:	9810      	ldr	r0, [sp, #64]	; 0x40
 8009cee:	6260      	str	r0, [r4, #36]	; 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009cf0:	2022      	movs	r0, #34	; 0x22
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009cf2:	e9cd 5600 	strd	r5, r6, [sp]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8009cf6:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8009cfa:	2040      	movs	r0, #64	; 0x40
 8009cfc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8009d00:	2000      	movs	r0, #0
 8009d02:	6420      	str	r0, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8009d04:	f8a4 a02a 	strh.w	sl, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8009d08:	8d60      	ldrh	r0, [r4, #42]	; 0x2a
 8009d0a:	8520      	strh	r0, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8009d0c:	4893      	ldr	r0, [pc, #588]	; (8009f5c <HAL_I2C_Mem_Read+0x2dc>)
 8009d0e:	62e0      	str	r0, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8009d10:	4639      	mov	r1, r7
 8009d12:	464b      	mov	r3, r9
 8009d14:	4642      	mov	r2, r8
 8009d16:	4620      	mov	r0, r4
 8009d18:	f7ff fca2 	bl	8009660 <I2C_RequestMemoryRead>
 8009d1c:	4607      	mov	r7, r0
 8009d1e:	2800      	cmp	r0, #0
 8009d20:	f040 80ab 	bne.w	8009e7a <HAL_I2C_Mem_Read+0x1fa>
    if (hi2c->XferSize == 0U)
 8009d24:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8009d26:	b9d2      	cbnz	r2, 8009d5e <HAL_I2C_Mem_Read+0xde>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d28:	6823      	ldr	r3, [r4, #0]
 8009d2a:	9002      	str	r0, [sp, #8]
 8009d2c:	695a      	ldr	r2, [r3, #20]
 8009d2e:	9202      	str	r2, [sp, #8]
 8009d30:	699a      	ldr	r2, [r3, #24]
 8009d32:	9202      	str	r2, [sp, #8]
 8009d34:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009d36:	681a      	ldr	r2, [r3, #0]
 8009d38:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009d3c:	601a      	str	r2, [r3, #0]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d3e:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8009d40:	2220      	movs	r2, #32
 8009d42:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8009d46:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8009d4a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8009d4e:	e7a8      	b.n	8009ca2 <HAL_I2C_Mem_Read+0x22>
      __HAL_I2C_ENABLE(hi2c);
 8009d50:	f8dc 3000 	ldr.w	r3, [ip]
 8009d54:	f043 0301 	orr.w	r3, r3, #1
 8009d58:	f8cc 3000 	str.w	r3, [ip]
 8009d5c:	e7c0      	b.n	8009ce0 <HAL_I2C_Mem_Read+0x60>
    else if (hi2c->XferSize == 1U)
 8009d5e:	2a01      	cmp	r2, #1
 8009d60:	f000 812c 	beq.w	8009fbc <HAL_I2C_Mem_Read+0x33c>
    else if (hi2c->XferSize == 2U)
 8009d64:	2a02      	cmp	r2, #2
 8009d66:	f000 80bd 	beq.w	8009ee4 <HAL_I2C_Mem_Read+0x264>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009d6a:	6823      	ldr	r3, [r4, #0]
 8009d6c:	9005      	str	r0, [sp, #20]
 8009d6e:	6959      	ldr	r1, [r3, #20]
 8009d70:	9105      	str	r1, [sp, #20]
 8009d72:	6999      	ldr	r1, [r3, #24]
 8009d74:	9105      	str	r1, [sp, #20]
 8009d76:	9905      	ldr	r1, [sp, #20]
      if (hi2c->XferSize <= 3U)
 8009d78:	2a03      	cmp	r2, #3
 8009d7a:	d849      	bhi.n	8009e10 <HAL_I2C_Mem_Read+0x190>
        if (hi2c->XferSize == 1U)
 8009d7c:	2a01      	cmp	r2, #1
 8009d7e:	f000 80eb 	beq.w	8009f58 <HAL_I2C_Mem_Read+0x2d8>
        else if (hi2c->XferSize == 2U)
 8009d82:	2a02      	cmp	r2, #2
 8009d84:	f000 8089 	beq.w	8009e9a <HAL_I2C_Mem_Read+0x21a>
 8009d88:	1c69      	adds	r1, r5, #1
 8009d8a:	f040 80bb 	bne.w	8009f04 <HAL_I2C_Mem_Read+0x284>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009d8e:	695a      	ldr	r2, [r3, #20]
 8009d90:	0752      	lsls	r2, r2, #29
 8009d92:	d5fc      	bpl.n	8009d8e <HAL_I2C_Mem_Read+0x10e>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d94:	681a      	ldr	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d96:	6a61      	ldr	r1, [r4, #36]	; 0x24
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009d98:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009d9c:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009d9e:	691b      	ldr	r3, [r3, #16]
 8009da0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009da2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009da4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009da6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009da8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009daa:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009dac:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009dae:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009db0:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009db2:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009db4:	8563      	strh	r3, [r4, #42]	; 0x2a
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
 8009db6:	1c69      	adds	r1, r5, #1
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009db8:	6822      	ldr	r2, [r4, #0]
 8009dba:	f040 80af 	bne.w	8009f1c <HAL_I2C_Mem_Read+0x29c>
 8009dbe:	6953      	ldr	r3, [r2, #20]
 8009dc0:	075b      	lsls	r3, r3, #29
 8009dc2:	d5fc      	bpl.n	8009dbe <HAL_I2C_Mem_Read+0x13e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009dc4:	6813      	ldr	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dc6:	6a61      	ldr	r1, [r4, #36]	; 0x24
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009dc8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009dcc:	6013      	str	r3, [r2, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dce:	6913      	ldr	r3, [r2, #16]
 8009dd0:	700b      	strb	r3, [r1, #0]
          hi2c->XferCount--;
 8009dd2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009dd4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009dd6:	6a60      	ldr	r0, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dd8:	6821      	ldr	r1, [r4, #0]
          hi2c->XferCount--;
 8009dda:	3b01      	subs	r3, #1
 8009ddc:	b29b      	uxth	r3, r3
 8009dde:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009de0:	6909      	ldr	r1, [r1, #16]
          hi2c->XferSize--;
 8009de2:	1e53      	subs	r3, r2, #1
          hi2c->pBuffPtr++;
 8009de4:	f100 0c01 	add.w	ip, r0, #1
          hi2c->XferSize--;
 8009de8:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009dea:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009dee:	7041      	strb	r1, [r0, #1]
          hi2c->XferSize--;
 8009df0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009df2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009df4:	6a61      	ldr	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009df6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009df8:	3b01      	subs	r3, #1
          hi2c->pBuffPtr++;
 8009dfa:	3101      	adds	r1, #1
          hi2c->XferSize--;
 8009dfc:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009dfe:	b29b      	uxth	r3, r3
          hi2c->pBuffPtr++;
 8009e00:	6261      	str	r1, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009e02:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009e04:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8009e06:	2a00      	cmp	r2, #0
 8009e08:	d099      	beq.n	8009d3e <HAL_I2C_Mem_Read+0xbe>
      if (hi2c->XferSize <= 3U)
 8009e0a:	2a03      	cmp	r2, #3
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009e0c:	6823      	ldr	r3, [r4, #0]
      if (hi2c->XferSize <= 3U)
 8009e0e:	d9b5      	bls.n	8009d7c <HAL_I2C_Mem_Read+0xfc>
 8009e10:	b95d      	cbnz	r5, 8009e2a <HAL_I2C_Mem_Read+0x1aa>
 8009e12:	e0c5      	b.n	8009fa0 <HAL_I2C_Mem_Read+0x320>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009e14:	695a      	ldr	r2, [r3, #20]
 8009e16:	06d0      	lsls	r0, r2, #27
 8009e18:	f100 80b2 	bmi.w	8009f80 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e1c:	f7ff f92c 	bl	8009078 <HAL_GetTick>
 8009e20:	1b80      	subs	r0, r0, r6
 8009e22:	4285      	cmp	r5, r0
 8009e24:	f0c0 8086 	bcc.w	8009f34 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009e28:	6823      	ldr	r3, [r4, #0]
 8009e2a:	695a      	ldr	r2, [r3, #20]
 8009e2c:	0652      	lsls	r2, r2, #25
 8009e2e:	d5f1      	bpl.n	8009e14 <HAL_I2C_Mem_Read+0x194>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e30:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009e32:	691b      	ldr	r3, [r3, #16]
 8009e34:	7013      	strb	r3, [r2, #0]
        hi2c->XferCount--;
 8009e36:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e38:	6820      	ldr	r0, [r4, #0]
        hi2c->XferSize--;
 8009e3a:	8d22      	ldrh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e3c:	6a61      	ldr	r1, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8009e3e:	3b01      	subs	r3, #1
 8009e40:	b29b      	uxth	r3, r3
 8009e42:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e44:	6943      	ldr	r3, [r0, #20]
        hi2c->XferSize--;
 8009e46:	3a01      	subs	r2, #1
 8009e48:	b292      	uxth	r2, r2
        hi2c->pBuffPtr++;
 8009e4a:	f101 0c01 	add.w	ip, r1, #1
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e4e:	075b      	lsls	r3, r3, #29
        hi2c->XferSize--;
 8009e50:	8522      	strh	r2, [r4, #40]	; 0x28
        hi2c->pBuffPtr++;
 8009e52:	f8c4 c024 	str.w	ip, [r4, #36]	; 0x24
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8009e56:	d5d6      	bpl.n	8009e06 <HAL_I2C_Mem_Read+0x186>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009e58:	6903      	ldr	r3, [r0, #16]
 8009e5a:	704b      	strb	r3, [r1, #1]
 8009e5c:	e036      	b.n	8009ecc <HAL_I2C_Mem_Read+0x24c>
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e5e:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009e60:	f8c4 b030 	str.w	fp, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009e64:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009e68:	f884 b03e 	strb.w	fp, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e6c:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009e6e:	f884 b03c 	strb.w	fp, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009e72:	f043 0320 	orr.w	r3, r3, #32
 8009e76:	6423      	str	r3, [r4, #64]	; 0x40
 8009e78:	e712      	b.n	8009ca0 <HAL_I2C_Mem_Read+0x20>
      return HAL_ERROR;
 8009e7a:	2701      	movs	r7, #1
}
 8009e7c:	4638      	mov	r0, r7
 8009e7e:	b007      	add	sp, #28
 8009e80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e84:	695a      	ldr	r2, [r3, #20]
 8009e86:	0750      	lsls	r0, r2, #29
 8009e88:	d40c      	bmi.n	8009ea4 <HAL_I2C_Mem_Read+0x224>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009e8a:	f7ff f8f5 	bl	8009078 <HAL_GetTick>
 8009e8e:	1b80      	subs	r0, r0, r6
 8009e90:	4285      	cmp	r5, r0
 8009e92:	d34f      	bcc.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
 8009e94:	2d00      	cmp	r5, #0
 8009e96:	d04d      	beq.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009e98:	6823      	ldr	r3, [r4, #0]
 8009e9a:	1c69      	adds	r1, r5, #1
 8009e9c:	d1f2      	bne.n	8009e84 <HAL_I2C_Mem_Read+0x204>
 8009e9e:	695a      	ldr	r2, [r3, #20]
 8009ea0:	0752      	lsls	r2, r2, #29
 8009ea2:	d5fc      	bpl.n	8009e9e <HAL_I2C_Mem_Read+0x21e>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009ea4:	681a      	ldr	r2, [r3, #0]
 8009ea6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009eaa:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eac:	691a      	ldr	r2, [r3, #16]
 8009eae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009eb0:	701a      	strb	r2, [r3, #0]
          hi2c->XferCount--;
 8009eb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->pBuffPtr++;
 8009eb4:	6a62      	ldr	r2, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009eb6:	3b01      	subs	r3, #1
 8009eb8:	b29b      	uxth	r3, r3
 8009eba:	8563      	strh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009ebc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8009ebe:	3b01      	subs	r3, #1
 8009ec0:	8523      	strh	r3, [r4, #40]	; 0x28
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ec2:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 8009ec4:	1c51      	adds	r1, r2, #1
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009ec6:	691b      	ldr	r3, [r3, #16]
          hi2c->pBuffPtr++;
 8009ec8:	6261      	str	r1, [r4, #36]	; 0x24
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009eca:	7053      	strb	r3, [r2, #1]
          hi2c->pBuffPtr++;
 8009ecc:	6a63      	ldr	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8009ece:	8d22      	ldrh	r2, [r4, #40]	; 0x28
          hi2c->pBuffPtr++;
 8009ed0:	3301      	adds	r3, #1
 8009ed2:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferCount--;
 8009ed4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
          hi2c->XferSize--;
 8009ed6:	3a01      	subs	r2, #1
          hi2c->XferCount--;
 8009ed8:	3b01      	subs	r3, #1
          hi2c->XferSize--;
 8009eda:	b292      	uxth	r2, r2
          hi2c->XferCount--;
 8009edc:	b29b      	uxth	r3, r3
          hi2c->XferSize--;
 8009ede:	8522      	strh	r2, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8009ee0:	8563      	strh	r3, [r4, #42]	; 0x2a
 8009ee2:	e790      	b.n	8009e06 <HAL_I2C_Mem_Read+0x186>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009ee4:	6823      	ldr	r3, [r4, #0]
 8009ee6:	6819      	ldr	r1, [r3, #0]
 8009ee8:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009eec:	6019      	str	r1, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8009eee:	6819      	ldr	r1, [r3, #0]
 8009ef0:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8009ef4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009ef6:	9004      	str	r0, [sp, #16]
 8009ef8:	6959      	ldr	r1, [r3, #20]
 8009efa:	9104      	str	r1, [sp, #16]
 8009efc:	6999      	ldr	r1, [r3, #24]
 8009efe:	9104      	str	r1, [sp, #16]
 8009f00:	9904      	ldr	r1, [sp, #16]
 8009f02:	e739      	b.n	8009d78 <HAL_I2C_Mem_Read+0xf8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f04:	695a      	ldr	r2, [r3, #20]
 8009f06:	0750      	lsls	r0, r2, #29
 8009f08:	f53f af44 	bmi.w	8009d94 <HAL_I2C_Mem_Read+0x114>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f0c:	f7ff f8b4 	bl	8009078 <HAL_GetTick>
 8009f10:	1b80      	subs	r0, r0, r6
 8009f12:	4285      	cmp	r5, r0
 8009f14:	d30e      	bcc.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
 8009f16:	b16d      	cbz	r5, 8009f34 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8009f18:	6823      	ldr	r3, [r4, #0]
 8009f1a:	e735      	b.n	8009d88 <HAL_I2C_Mem_Read+0x108>
 8009f1c:	6953      	ldr	r3, [r2, #20]
 8009f1e:	0758      	lsls	r0, r3, #29
 8009f20:	f53f af50 	bmi.w	8009dc4 <HAL_I2C_Mem_Read+0x144>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f24:	f7ff f8a8 	bl	8009078 <HAL_GetTick>
 8009f28:	1b80      	subs	r0, r0, r6
 8009f2a:	4285      	cmp	r5, r0
 8009f2c:	d302      	bcc.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
 8009f2e:	2d00      	cmp	r5, #0
 8009f30:	f47f af41 	bne.w	8009db6 <HAL_I2C_Mem_Read+0x136>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f34:	2200      	movs	r2, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f36:	2320      	movs	r3, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8009f38:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8009f3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8009f3e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f42:	6c23      	ldr	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8009f44:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009f48:	2701      	movs	r7, #1
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f4a:	f043 0320 	orr.w	r3, r3, #32
}
 8009f4e:	4638      	mov	r0, r7
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8009f50:	6423      	str	r3, [r4, #64]	; 0x40
}
 8009f52:	b007      	add	sp, #28
 8009f54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f58:	b95d      	cbnz	r5, 8009f72 <HAL_I2C_Mem_Read+0x2f2>
 8009f5a:	e02b      	b.n	8009fb4 <HAL_I2C_Mem_Read+0x334>
 8009f5c:	ffff0000 	.word	0xffff0000
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009f60:	695a      	ldr	r2, [r3, #20]
 8009f62:	06d2      	lsls	r2, r2, #27
 8009f64:	d40c      	bmi.n	8009f80 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009f66:	f7ff f887 	bl	8009078 <HAL_GetTick>
 8009f6a:	1b80      	subs	r0, r0, r6
 8009f6c:	4285      	cmp	r5, r0
 8009f6e:	d3e1      	bcc.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009f70:	6823      	ldr	r3, [r4, #0]
 8009f72:	695a      	ldr	r2, [r3, #20]
 8009f74:	0651      	lsls	r1, r2, #25
 8009f76:	d5f3      	bpl.n	8009f60 <HAL_I2C_Mem_Read+0x2e0>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8009f78:	691a      	ldr	r2, [r3, #16]
 8009f7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009f7c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8009f7e:	e7a5      	b.n	8009ecc <HAL_I2C_Mem_Read+0x24c>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f80:	2200      	movs	r2, #0
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009f82:	f06f 0010 	mvn.w	r0, #16
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f86:	2120      	movs	r1, #32
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8009f88:	6158      	str	r0, [r3, #20]
      hi2c->PreviousState       = I2C_STATE_NONE;
 8009f8a:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8009f8c:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8009f90:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8009f94:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8009f96:	6423      	str	r3, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8009f98:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
          return HAL_ERROR;
 8009f9c:	2701      	movs	r7, #1
 8009f9e:	e680      	b.n	8009ca2 <HAL_I2C_Mem_Read+0x22>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009fa0:	695a      	ldr	r2, [r3, #20]
 8009fa2:	0652      	lsls	r2, r2, #25
 8009fa4:	f53f af44 	bmi.w	8009e30 <HAL_I2C_Mem_Read+0x1b0>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8009fa8:	695a      	ldr	r2, [r3, #20]
 8009faa:	06d1      	lsls	r1, r2, #27
 8009fac:	d4e8      	bmi.n	8009f80 <HAL_I2C_Mem_Read+0x300>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8009fae:	f7ff f863 	bl	8009078 <HAL_GetTick>
 8009fb2:	e7bf      	b.n	8009f34 <HAL_I2C_Mem_Read+0x2b4>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8009fb4:	695a      	ldr	r2, [r3, #20]
 8009fb6:	0650      	lsls	r0, r2, #25
 8009fb8:	d5f6      	bpl.n	8009fa8 <HAL_I2C_Mem_Read+0x328>
 8009fba:	e7dd      	b.n	8009f78 <HAL_I2C_Mem_Read+0x2f8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8009fbc:	6823      	ldr	r3, [r4, #0]
 8009fbe:	6819      	ldr	r1, [r3, #0]
 8009fc0:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 8009fc4:	6019      	str	r1, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8009fc6:	9003      	str	r0, [sp, #12]
 8009fc8:	6959      	ldr	r1, [r3, #20]
 8009fca:	9103      	str	r1, [sp, #12]
 8009fcc:	6999      	ldr	r1, [r3, #24]
 8009fce:	9103      	str	r1, [sp, #12]
 8009fd0:	9903      	ldr	r1, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8009fd2:	6819      	ldr	r1, [r3, #0]
 8009fd4:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 8009fd8:	6019      	str	r1, [r3, #0]
 8009fda:	e6cd      	b.n	8009d78 <HAL_I2C_Mem_Read+0xf8>

08009fdc <HAL_I2C_MasterTxCpltCallback>:
 8009fdc:	4770      	bx	lr
 8009fde:	bf00      	nop

08009fe0 <HAL_I2C_MasterRxCpltCallback>:
 8009fe0:	4770      	bx	lr
 8009fe2:	bf00      	nop

08009fe4 <HAL_I2C_SlaveTxCpltCallback>:
 8009fe4:	4770      	bx	lr
 8009fe6:	bf00      	nop

08009fe8 <HAL_I2C_SlaveRxCpltCallback>:
 8009fe8:	4770      	bx	lr
 8009fea:	bf00      	nop

08009fec <HAL_I2C_AddrCallback>:
}
 8009fec:	4770      	bx	lr
 8009fee:	bf00      	nop

08009ff0 <HAL_I2C_ListenCpltCallback>:
 8009ff0:	4770      	bx	lr
 8009ff2:	bf00      	nop

08009ff4 <HAL_I2C_MemTxCpltCallback>:
 8009ff4:	4770      	bx	lr
 8009ff6:	bf00      	nop

08009ff8 <I2C_MemoryTransmit_TXE_BTF>:
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 8009ff8:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  if (hi2c->EventCount == 0U)
 8009ffc:	6d01      	ldr	r1, [r0, #80]	; 0x50
{
 8009ffe:	4603      	mov	r3, r0
  if (hi2c->EventCount == 0U)
 800a000:	b959      	cbnz	r1, 800a01a <I2C_MemoryTransmit_TXE_BTF+0x22>
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a002:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a004:	6801      	ldr	r1, [r0, #0]
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a006:	2a01      	cmp	r2, #1
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a008:	6c82      	ldr	r2, [r0, #72]	; 0x48
    if (hi2c->MemaddSize == I2C_MEMADD_SIZE_8BIT)
 800a00a:	d00d      	beq.n	800a028 <I2C_MemoryTransmit_TXE_BTF+0x30>
      hi2c->Instance->DR = I2C_MEM_ADD_MSB(hi2c->Memaddress);
 800a00c:	f3c2 2207 	ubfx	r2, r2, #8, #8
 800a010:	610a      	str	r2, [r1, #16]
      hi2c->EventCount++;
 800a012:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a014:	3201      	adds	r2, #1
 800a016:	6502      	str	r2, [r0, #80]	; 0x50
 800a018:	4770      	bx	lr
  else if (hi2c->EventCount == 1U)
 800a01a:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a01c:	2901      	cmp	r1, #1
 800a01e:	d009      	beq.n	800a034 <I2C_MemoryTransmit_TXE_BTF+0x3c>
  else if (hi2c->EventCount == 2U)
 800a020:	6d01      	ldr	r1, [r0, #80]	; 0x50
 800a022:	2902      	cmp	r1, #2
 800a024:	d00e      	beq.n	800a044 <I2C_MemoryTransmit_TXE_BTF+0x4c>
 800a026:	4770      	bx	lr
      hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a028:	b2d2      	uxtb	r2, r2
 800a02a:	610a      	str	r2, [r1, #16]
      hi2c->EventCount += 2U;
 800a02c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a02e:	3202      	adds	r2, #2
 800a030:	6502      	str	r2, [r0, #80]	; 0x50
 800a032:	4770      	bx	lr
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(hi2c->Memaddress);
 800a034:	6c82      	ldr	r2, [r0, #72]	; 0x48
 800a036:	6801      	ldr	r1, [r0, #0]
 800a038:	b2d2      	uxtb	r2, r2
 800a03a:	610a      	str	r2, [r1, #16]
    hi2c->EventCount++;
 800a03c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a03e:	3201      	adds	r2, #1
 800a040:	6502      	str	r2, [r0, #80]	; 0x50
 800a042:	4770      	bx	lr
 800a044:	b2d2      	uxtb	r2, r2
    if (CurrentState == HAL_I2C_STATE_BUSY_RX)
 800a046:	2a22      	cmp	r2, #34	; 0x22
 800a048:	d01f      	beq.n	800a08a <I2C_MemoryTransmit_TXE_BTF+0x92>
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a04a:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a04c:	b289      	uxth	r1, r1
 800a04e:	b9c1      	cbnz	r1, 800a082 <I2C_MemoryTransmit_TXE_BTF+0x8a>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a050:	8d41      	ldrh	r1, [r0, #42]	; 0x2a
 800a052:	b289      	uxth	r1, r1
 800a054:	2900      	cmp	r1, #0
 800a056:	d1e6      	bne.n	800a026 <I2C_MemoryTransmit_TXE_BTF+0x2e>
 800a058:	2a21      	cmp	r2, #33	; 0x21
 800a05a:	d1e4      	bne.n	800a026 <I2C_MemoryTransmit_TXE_BTF+0x2e>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a05c:	6802      	ldr	r2, [r0, #0]
{
 800a05e:	b510      	push	{r4, lr}
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a060:	6854      	ldr	r4, [r2, #4]
 800a062:	f424 64e0 	bic.w	r4, r4, #1792	; 0x700
 800a066:	6054      	str	r4, [r2, #4]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a068:	6814      	ldr	r4, [r2, #0]
 800a06a:	f444 7400 	orr.w	r4, r4, #512	; 0x200
 800a06e:	6014      	str	r4, [r2, #0]
      hi2c->State = HAL_I2C_STATE_READY;
 800a070:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a072:	6301      	str	r1, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_READY;
 800a074:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a078:	f880 103e 	strb.w	r1, [r0, #62]	; 0x3e
      HAL_I2C_MemTxCpltCallback(hi2c);
 800a07c:	f7ff ffba 	bl	8009ff4 <HAL_I2C_MemTxCpltCallback>
}
 800a080:	bd10      	pop	{r4, pc}
    else if ((hi2c->XferCount > 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a082:	2a21      	cmp	r2, #33	; 0x21
 800a084:	d00a      	beq.n	800a09c <I2C_MemoryTransmit_TXE_BTF+0xa4>
    else if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a086:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800a088:	4770      	bx	lr
      hi2c->Instance->CR1 |= I2C_CR1_START;
 800a08a:	6801      	ldr	r1, [r0, #0]
 800a08c:	680a      	ldr	r2, [r1, #0]
 800a08e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a092:	600a      	str	r2, [r1, #0]
      hi2c->EventCount++;
 800a094:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a096:	3201      	adds	r2, #1
 800a098:	6502      	str	r2, [r0, #80]	; 0x50
 800a09a:	4770      	bx	lr
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a09c:	6a41      	ldr	r1, [r0, #36]	; 0x24
 800a09e:	6802      	ldr	r2, [r0, #0]
 800a0a0:	f811 0b01 	ldrb.w	r0, [r1], #1
 800a0a4:	6110      	str	r0, [r2, #16]
      hi2c->XferCount--;
 800a0a6:	8d5a      	ldrh	r2, [r3, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a0a8:	6259      	str	r1, [r3, #36]	; 0x24
      hi2c->XferCount--;
 800a0aa:	3a01      	subs	r2, #1
 800a0ac:	b292      	uxth	r2, r2
 800a0ae:	855a      	strh	r2, [r3, #42]	; 0x2a
 800a0b0:	4770      	bx	lr
 800a0b2:	bf00      	nop

0800a0b4 <HAL_I2C_MemRxCpltCallback>:
 800a0b4:	4770      	bx	lr
 800a0b6:	bf00      	nop

0800a0b8 <HAL_I2C_ErrorCallback>:
 800a0b8:	4770      	bx	lr
 800a0ba:	bf00      	nop

0800a0bc <HAL_I2C_AbortCpltCallback>:
 800a0bc:	4770      	bx	lr
 800a0be:	bf00      	nop

0800a0c0 <I2C_DMAAbort>:
{
 800a0c0:	b570      	push	{r4, r5, r6, lr}
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0c2:	4b3a      	ldr	r3, [pc, #232]	; (800a1ac <I2C_DMAAbort+0xec>)
 800a0c4:	4a3a      	ldr	r2, [pc, #232]	; (800a1b0 <I2C_DMAAbort+0xf0>)
 800a0c6:	681b      	ldr	r3, [r3, #0]
  I2C_HandleTypeDef *hi2c = (I2C_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent; /* Derogation MISRAC2012-Rule-11.5 */
 800a0c8:	6b80      	ldr	r0, [r0, #56]	; 0x38
{
 800a0ca:	b082      	sub	sp, #8
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0cc:	08db      	lsrs	r3, r3, #3
  __IO uint32_t count = 0U;
 800a0ce:	2100      	movs	r1, #0
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0d0:	fba2 2303 	umull	r2, r3, r2, r3
  __IO uint32_t count = 0U;
 800a0d4:	9101      	str	r1, [sp, #4]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0d6:	0a1b      	lsrs	r3, r3, #8
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0d8:	f890 103d 	ldrb.w	r1, [r0, #61]	; 0x3d
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a0dc:	6802      	ldr	r2, [r0, #0]
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0de:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800a0e2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a0e6:	b2c9      	uxtb	r1, r1
  count = I2C_TIMEOUT_FLAG * (SystemCoreClock / 25U / 1000U);
 800a0e8:	9301      	str	r3, [sp, #4]
 800a0ea:	e005      	b.n	800a0f8 <I2C_DMAAbort+0x38>
    count--;
 800a0ec:	9b01      	ldr	r3, [sp, #4]
 800a0ee:	3b01      	subs	r3, #1
 800a0f0:	9301      	str	r3, [sp, #4]
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800a0f2:	6813      	ldr	r3, [r2, #0]
 800a0f4:	059b      	lsls	r3, r3, #22
 800a0f6:	d506      	bpl.n	800a106 <I2C_DMAAbort+0x46>
    if (count == 0U)
 800a0f8:	9b01      	ldr	r3, [sp, #4]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d1f6      	bne.n	800a0ec <I2C_DMAAbort+0x2c>
      hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800a0fe:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a100:	f043 0320 	orr.w	r3, r3, #32
 800a104:	6403      	str	r3, [r0, #64]	; 0x40
  if (hi2c->hdmatx != NULL)
 800a106:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800a108:	b34c      	cbz	r4, 800a15e <I2C_DMAAbort+0x9e>
  if (hi2c->hdmarx != NULL)
 800a10a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    hi2c->hdmatx->XferCpltCallback = NULL;
 800a10c:	2500      	movs	r5, #0
 800a10e:	63e5      	str	r5, [r4, #60]	; 0x3c
  if (hi2c->hdmarx != NULL)
 800a110:	b1f3      	cbz	r3, 800a150 <I2C_DMAAbort+0x90>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a112:	6816      	ldr	r6, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a114:	63dd      	str	r5, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a116:	f426 6680 	bic.w	r6, r6, #1024	; 0x400
 800a11a:	6016      	str	r6, [r2, #0]
  hi2c->XferCount = 0U;
 800a11c:	8545      	strh	r5, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a11e:	6525      	str	r5, [r4, #80]	; 0x50
    hi2c->hdmarx->XferAbortCallback = NULL;
 800a120:	2400      	movs	r4, #0
 800a122:	651c      	str	r4, [r3, #80]	; 0x50
  __HAL_I2C_DISABLE(hi2c);
 800a124:	6813      	ldr	r3, [r2, #0]
 800a126:	f023 0301 	bic.w	r3, r3, #1
 800a12a:	6013      	str	r3, [r2, #0]
  if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a12c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800a130:	2b60      	cmp	r3, #96	; 0x60
 800a132:	d02a      	beq.n	800a18a <I2C_DMAAbort+0xca>
    if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a134:	f001 0128 	and.w	r1, r1, #40	; 0x28
 800a138:	2928      	cmp	r1, #40	; 0x28
 800a13a:	d019      	beq.n	800a170 <I2C_DMAAbort+0xb0>
      hi2c->State = HAL_I2C_STATE_READY;
 800a13c:	2220      	movs	r2, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a13e:	2300      	movs	r3, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a140:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a144:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    HAL_I2C_ErrorCallback(hi2c);
 800a148:	f7ff ffb6 	bl	800a0b8 <HAL_I2C_ErrorCallback>
}
 800a14c:	b002      	add	sp, #8
 800a14e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a150:	6815      	ldr	r5, [r2, #0]
 800a152:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a156:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a158:	8543      	strh	r3, [r0, #42]	; 0x2a
    hi2c->hdmatx->XferAbortCallback = NULL;
 800a15a:	6523      	str	r3, [r4, #80]	; 0x50
  if (hi2c->hdmarx != NULL)
 800a15c:	e7e2      	b.n	800a124 <I2C_DMAAbort+0x64>
  if (hi2c->hdmarx != NULL)
 800a15e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800a160:	b1f3      	cbz	r3, 800a1a0 <I2C_DMAAbort+0xe0>
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a162:	6815      	ldr	r5, [r2, #0]
    hi2c->hdmarx->XferCpltCallback = NULL;
 800a164:	63dc      	str	r4, [r3, #60]	; 0x3c
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a166:	f425 6580 	bic.w	r5, r5, #1024	; 0x400
 800a16a:	6015      	str	r5, [r2, #0]
  hi2c->XferCount = 0U;
 800a16c:	8544      	strh	r4, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a16e:	e7d7      	b.n	800a120 <I2C_DMAAbort+0x60>
      __HAL_I2C_ENABLE(hi2c);
 800a170:	6813      	ldr	r3, [r2, #0]
 800a172:	f043 0301 	orr.w	r3, r3, #1
 800a176:	6013      	str	r3, [r2, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a178:	6813      	ldr	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a17a:	2400      	movs	r4, #0
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a17c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800a180:	6013      	str	r3, [r2, #0]
      hi2c->PreviousState = I2C_STATE_NONE;
 800a182:	6304      	str	r4, [r0, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a184:	f880 103d 	strb.w	r1, [r0, #61]	; 0x3d
 800a188:	e7de      	b.n	800a148 <I2C_DMAAbort+0x88>
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a18a:	2300      	movs	r3, #0
    hi2c->State         = HAL_I2C_STATE_READY;
 800a18c:	2220      	movs	r2, #32
 800a18e:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a192:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800a196:	6403      	str	r3, [r0, #64]	; 0x40
    HAL_I2C_AbortCpltCallback(hi2c);
 800a198:	f7ff ff90 	bl	800a0bc <HAL_I2C_AbortCpltCallback>
}
 800a19c:	b002      	add	sp, #8
 800a19e:	bd70      	pop	{r4, r5, r6, pc}
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a1a0:	6814      	ldr	r4, [r2, #0]
 800a1a2:	f424 6480 	bic.w	r4, r4, #1024	; 0x400
 800a1a6:	6014      	str	r4, [r2, #0]
  hi2c->XferCount = 0U;
 800a1a8:	8543      	strh	r3, [r0, #42]	; 0x2a
  if (hi2c->hdmatx != NULL)
 800a1aa:	e7bb      	b.n	800a124 <I2C_DMAAbort+0x64>
 800a1ac:	20000078 	.word	0x20000078
 800a1b0:	14f8b589 	.word	0x14f8b589

0800a1b4 <I2C_ITError>:
{
 800a1b4:	b510      	push	{r4, lr}
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1b6:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
  HAL_I2C_ModeTypeDef CurrentMode = hi2c->Mode;
 800a1ba:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1be:	2b10      	cmp	r3, #16
{
 800a1c0:	4604      	mov	r4, r0
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a1c2:	b2d2      	uxtb	r2, r2
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a1c4:	d039      	beq.n	800a23a <I2C_ITError+0x86>
 800a1c6:	b2d9      	uxtb	r1, r3
 800a1c8:	2940      	cmp	r1, #64	; 0x40
 800a1ca:	d036      	beq.n	800a23a <I2C_ITError+0x86>
  if (((uint32_t)CurrentState & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a1cc:	f002 0128 	and.w	r1, r2, #40	; 0x28
 800a1d0:	2928      	cmp	r1, #40	; 0x28
 800a1d2:	d03d      	beq.n	800a250 <I2C_ITError+0x9c>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a1d4:	6823      	ldr	r3, [r4, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a1d6:	6859      	ldr	r1, [r3, #4]
 800a1d8:	0508      	lsls	r0, r1, #20
 800a1da:	d407      	bmi.n	800a1ec <I2C_ITError+0x38>
 800a1dc:	2a60      	cmp	r2, #96	; 0x60
 800a1de:	d005      	beq.n	800a1ec <I2C_ITError+0x38>
      hi2c->State = HAL_I2C_STATE_READY;
 800a1e0:	2120      	movs	r1, #32
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1e2:	2200      	movs	r2, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800a1e4:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a1e8:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
    hi2c->PreviousState = I2C_STATE_NONE;
 800a1ec:	2200      	movs	r2, #0
 800a1ee:	6322      	str	r2, [r4, #48]	; 0x30
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a1f0:	685a      	ldr	r2, [r3, #4]
 800a1f2:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a1f6:	d134      	bne.n	800a262 <I2C_ITError+0xae>
  else if (hi2c->State == HAL_I2C_STATE_ABORT)
 800a1f8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a1fc:	2960      	cmp	r1, #96	; 0x60
 800a1fe:	d075      	beq.n	800a2ec <I2C_ITError+0x138>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a200:	695a      	ldr	r2, [r3, #20]
 800a202:	0650      	lsls	r0, r2, #25
 800a204:	d505      	bpl.n	800a212 <I2C_ITError+0x5e>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a206:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a208:	691b      	ldr	r3, [r3, #16]
 800a20a:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a20c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a20e:	3301      	adds	r3, #1
 800a210:	6263      	str	r3, [r4, #36]	; 0x24
    HAL_I2C_ErrorCallback(hi2c);
 800a212:	4620      	mov	r0, r4
 800a214:	f7ff ff50 	bl	800a0b8 <HAL_I2C_ErrorCallback>
  CurrentError = hi2c->ErrorCode;
 800a218:	6c23      	ldr	r3, [r4, #64]	; 0x40
  if (((CurrentError & HAL_I2C_ERROR_BERR) == HAL_I2C_ERROR_BERR) || \
 800a21a:	0719      	lsls	r1, r3, #28
 800a21c:	d004      	beq.n	800a228 <I2C_ITError+0x74>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a21e:	6822      	ldr	r2, [r4, #0]
 800a220:	6853      	ldr	r3, [r2, #4]
 800a222:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800a226:	6053      	str	r3, [r2, #4]
  CurrentState = hi2c->State;
 800a228:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a22c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a22e:	0752      	lsls	r2, r2, #29
  CurrentState = hi2c->State;
 800a230:	b2db      	uxtb	r3, r3
  if (((hi2c->ErrorCode & HAL_I2C_ERROR_AF) == HAL_I2C_ERROR_AF) && (CurrentState == HAL_I2C_STATE_LISTEN))
 800a232:	d501      	bpl.n	800a238 <I2C_ITError+0x84>
 800a234:	2b28      	cmp	r3, #40	; 0x28
 800a236:	d02f      	beq.n	800a298 <I2C_ITError+0xe4>
}
 800a238:	bd10      	pop	{r4, pc}
  if (((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM)) && (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a23a:	2a22      	cmp	r2, #34	; 0x22
 800a23c:	d1c6      	bne.n	800a1cc <I2C_ITError+0x18>
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a23e:	6823      	ldr	r3, [r4, #0]
 800a240:	681a      	ldr	r2, [r3, #0]
 800a242:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a246:	601a      	str	r2, [r3, #0]
    if ((READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN) && (CurrentState != HAL_I2C_STATE_ABORT))
 800a248:	685a      	ldr	r2, [r3, #4]
 800a24a:	0512      	lsls	r2, r2, #20
 800a24c:	d5c8      	bpl.n	800a1e0 <I2C_ITError+0x2c>
 800a24e:	e7cd      	b.n	800a1ec <I2C_ITError+0x38>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a250:	2300      	movs	r3, #0
 800a252:	6323      	str	r3, [r4, #48]	; 0x30
    hi2c->Instance->CR1 &= ~I2C_CR1_POS;
 800a254:	6823      	ldr	r3, [r4, #0]
    hi2c->State = HAL_I2C_STATE_LISTEN;
 800a256:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
  if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a25a:	685a      	ldr	r2, [r3, #4]
 800a25c:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800a260:	d0ca      	beq.n	800a1f8 <I2C_ITError+0x44>
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a262:	685a      	ldr	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a264:	6b60      	ldr	r0, [r4, #52]	; 0x34
    hi2c->Instance->CR2 &= ~I2C_CR2_DMAEN;
 800a266:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a26a:	605a      	str	r2, [r3, #4]
    if (hi2c->hdmatx->State != HAL_DMA_STATE_READY)
 800a26c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a270:	2b01      	cmp	r3, #1
 800a272:	d01e      	beq.n	800a2b2 <I2C_ITError+0xfe>
      hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a274:	4b28      	ldr	r3, [pc, #160]	; (800a318 <I2C_ITError+0x164>)
 800a276:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a278:	f7fe ff88 	bl	800918c <HAL_DMA_Abort_IT>
 800a27c:	2800      	cmp	r0, #0
 800a27e:	d0cb      	beq.n	800a218 <I2C_ITError+0x64>
        __HAL_I2C_DISABLE(hi2c);
 800a280:	6822      	ldr	r2, [r4, #0]
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a282:	6b60      	ldr	r0, [r4, #52]	; 0x34
        __HAL_I2C_DISABLE(hi2c);
 800a284:	6813      	ldr	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a286:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a288:	f023 0301 	bic.w	r3, r3, #1
 800a28c:	6013      	str	r3, [r2, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a28e:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a292:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a294:	4798      	blx	r3
 800a296:	e7bf      	b.n	800a218 <I2C_ITError+0x64>
    hi2c->PreviousState = I2C_STATE_NONE;
 800a298:	2300      	movs	r3, #0
    hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 800a29a:	4920      	ldr	r1, [pc, #128]	; (800a31c <I2C_ITError+0x168>)
 800a29c:	62e1      	str	r1, [r4, #44]	; 0x2c
    hi2c->State         = HAL_I2C_STATE_READY;
 800a29e:	2220      	movs	r2, #32
    hi2c->PreviousState = I2C_STATE_NONE;
 800a2a0:	6323      	str	r3, [r4, #48]	; 0x30
    HAL_I2C_ListenCpltCallback(hi2c);
 800a2a2:	4620      	mov	r0, r4
    hi2c->State         = HAL_I2C_STATE_READY;
 800a2a4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    hi2c->Mode          = HAL_I2C_MODE_NONE;
 800a2a8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    HAL_I2C_ListenCpltCallback(hi2c);
 800a2ac:	f7ff fea0 	bl	8009ff0 <HAL_I2C_ListenCpltCallback>
}
 800a2b0:	bd10      	pop	{r4, pc}
      hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a2b2:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a2b4:	4b18      	ldr	r3, [pc, #96]	; (800a318 <I2C_ITError+0x164>)
 800a2b6:	6503      	str	r3, [r0, #80]	; 0x50
      if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a2b8:	f7fe ff68 	bl	800918c <HAL_DMA_Abort_IT>
 800a2bc:	2800      	cmp	r0, #0
 800a2be:	d0ab      	beq.n	800a218 <I2C_ITError+0x64>
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2c0:	6823      	ldr	r3, [r4, #0]
 800a2c2:	695a      	ldr	r2, [r3, #20]
 800a2c4:	0651      	lsls	r1, r2, #25
 800a2c6:	d506      	bpl.n	800a2d6 <I2C_ITError+0x122>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2c8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2ca:	691b      	ldr	r3, [r3, #16]
 800a2cc:	7013      	strb	r3, [r2, #0]
          hi2c->pBuffPtr++;
 800a2ce:	6a62      	ldr	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2d0:	6823      	ldr	r3, [r4, #0]
          hi2c->pBuffPtr++;
 800a2d2:	3201      	adds	r2, #1
 800a2d4:	6262      	str	r2, [r4, #36]	; 0x24
        __HAL_I2C_DISABLE(hi2c);
 800a2d6:	681a      	ldr	r2, [r3, #0]
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2d8:	6ba0      	ldr	r0, [r4, #56]	; 0x38
        __HAL_I2C_DISABLE(hi2c);
 800a2da:	f022 0201 	bic.w	r2, r2, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800a2de:	2120      	movs	r1, #32
        __HAL_I2C_DISABLE(hi2c);
 800a2e0:	601a      	str	r2, [r3, #0]
        hi2c->State = HAL_I2C_STATE_READY;
 800a2e2:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a2e6:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a2e8:	4798      	blx	r3
 800a2ea:	e795      	b.n	800a218 <I2C_ITError+0x64>
    hi2c->State = HAL_I2C_STATE_READY;
 800a2ec:	2120      	movs	r1, #32
 800a2ee:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800a2f2:	6422      	str	r2, [r4, #64]	; 0x40
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a2f4:	695a      	ldr	r2, [r3, #20]
 800a2f6:	0652      	lsls	r2, r2, #25
 800a2f8:	d506      	bpl.n	800a308 <I2C_ITError+0x154>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a2fa:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a2fc:	691b      	ldr	r3, [r3, #16]
 800a2fe:	7013      	strb	r3, [r2, #0]
      hi2c->pBuffPtr++;
 800a300:	6a62      	ldr	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a302:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a304:	3201      	adds	r2, #1
 800a306:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE(hi2c);
 800a308:	681a      	ldr	r2, [r3, #0]
 800a30a:	f022 0201 	bic.w	r2, r2, #1
    HAL_I2C_AbortCpltCallback(hi2c);
 800a30e:	4620      	mov	r0, r4
    __HAL_I2C_DISABLE(hi2c);
 800a310:	601a      	str	r2, [r3, #0]
    HAL_I2C_AbortCpltCallback(hi2c);
 800a312:	f7ff fed3 	bl	800a0bc <HAL_I2C_AbortCpltCallback>
 800a316:	e77f      	b.n	800a218 <I2C_ITError+0x64>
 800a318:	0800a0c1 	.word	0x0800a0c1
 800a31c:	ffff0000 	.word	0xffff0000

0800a320 <HAL_I2C_EV_IRQHandler>:
{
 800a320:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a322:	6803      	ldr	r3, [r0, #0]
{
 800a324:	4604      	mov	r4, r0
  uint32_t itsources                = READ_REG(hi2c->Instance->CR2);
 800a326:	6858      	ldr	r0, [r3, #4]
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a328:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a32a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a32e:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a332:	2910      	cmp	r1, #16
{
 800a334:	b08e      	sub	sp, #56	; 0x38
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a336:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a338:	fa5f fc81 	uxtb.w	ip, r1
  if ((CurrentMode == HAL_I2C_MODE_MASTER) || (CurrentMode == HAL_I2C_MODE_MEM))
 800a33c:	d022      	beq.n	800a384 <HAL_I2C_EV_IRQHandler+0x64>
 800a33e:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a342:	d01f      	beq.n	800a384 <HAL_I2C_EV_IRQHandler+0x64>
    if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a344:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800a346:	2900      	cmp	r1, #0
 800a348:	f000 8094 	beq.w	800a474 <HAL_I2C_EV_IRQHandler+0x154>
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a34c:	6959      	ldr	r1, [r3, #20]
  uint32_t sr2itflags               = 0U;
 800a34e:	2500      	movs	r5, #0
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a350:	f011 0602 	ands.w	r6, r1, #2
 800a354:	d059      	beq.n	800a40a <HAL_I2C_EV_IRQHandler+0xea>
 800a356:	0586      	lsls	r6, r0, #22
 800a358:	d559      	bpl.n	800a40e <HAL_I2C_EV_IRQHandler+0xee>
      if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a35a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a35c:	b102      	cbz	r2, 800a360 <HAL_I2C_EV_IRQHandler+0x40>
        sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a35e:	699d      	ldr	r5, [r3, #24]
  if (((uint32_t)hi2c->State & (uint32_t)HAL_I2C_STATE_LISTEN) == (uint32_t)HAL_I2C_STATE_LISTEN)
 800a360:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a364:	f002 0228 	and.w	r2, r2, #40	; 0x28
 800a368:	2a28      	cmp	r2, #40	; 0x28
 800a36a:	f000 821e 	beq.w	800a7aa <HAL_I2C_EV_IRQHandler+0x48a>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a36e:	2200      	movs	r2, #0
 800a370:	920c      	str	r2, [sp, #48]	; 0x30
 800a372:	6959      	ldr	r1, [r3, #20]
 800a374:	910c      	str	r1, [sp, #48]	; 0x30
 800a376:	699b      	ldr	r3, [r3, #24]
 800a378:	930c      	str	r3, [sp, #48]	; 0x30
 800a37a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    __HAL_UNLOCK(hi2c);
 800a37c:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
}
 800a380:	b00e      	add	sp, #56	; 0x38
 800a382:	bd70      	pop	{r4, r5, r6, pc}
    sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a384:	699e      	ldr	r6, [r3, #24]
    sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a386:	6959      	ldr	r1, [r3, #20]
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) == RESET) && (IS_I2C_TRANSFER_OTHER_OPTIONS_REQUEST(CurrentXferOptions) == 1U))
 800a388:	f011 0f01 	tst.w	r1, #1
 800a38c:	d11a      	bne.n	800a3c4 <HAL_I2C_EV_IRQHandler+0xa4>
 800a38e:	f5b5 0f2a 	cmp.w	r5, #11141120	; 0xaa0000
 800a392:	d0f5      	beq.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a394:	f1b5 4f2a 	cmp.w	r5, #2852126720	; 0xaa000000
 800a398:	d0f2      	beq.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a39a:	070d      	lsls	r5, r1, #28
 800a39c:	d56d      	bpl.n	800a47a <HAL_I2C_EV_IRQHandler+0x15a>
 800a39e:	0585      	lsls	r5, r0, #22
 800a3a0:	f140 8083 	bpl.w	800a4aa <HAL_I2C_EV_IRQHandler+0x18a>
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a3a4:	6c62      	ldr	r2, [r4, #68]	; 0x44
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a3a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800a3a8:	b2d2      	uxtb	r2, r2
  hi2c->Instance->DR = I2C_10BIT_ADDRESS(hi2c->Devaddress);
 800a3aa:	611a      	str	r2, [r3, #16]
  if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a3ac:	2900      	cmp	r1, #0
 800a3ae:	f000 81e3 	beq.w	800a778 <HAL_I2C_EV_IRQHandler+0x458>
 800a3b2:	6bca      	ldr	r2, [r1, #60]	; 0x3c
 800a3b4:	2a00      	cmp	r2, #0
 800a3b6:	f000 81df 	beq.w	800a778 <HAL_I2C_EV_IRQHandler+0x458>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a3ba:	685a      	ldr	r2, [r3, #4]
 800a3bc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800a3c0:	605a      	str	r2, [r3, #4]
 800a3c2:	e7dd      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_SB) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a3c4:	0585      	lsls	r5, r0, #22
 800a3c6:	d56e      	bpl.n	800a4a6 <HAL_I2C_EV_IRQHandler+0x186>
static void I2C_ConvertOtherXferOptions(I2C_HandleTypeDef *hi2c)
{
  /* if user set XferOptions to I2C_OTHER_FRAME            */
  /* it request implicitly to generate a restart condition */
  /* set XferOptions to I2C_FIRST_FRAME                    */
  if (hi2c->XferOptions == I2C_OTHER_FRAME)
 800a3c8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3ca:	f5b2 0f2a 	cmp.w	r2, #11141120	; 0xaa0000
 800a3ce:	f000 81e9 	beq.w	800a7a4 <HAL_I2C_EV_IRQHandler+0x484>
  }
  /* else if user set XferOptions to I2C_OTHER_AND_LAST_FRAME */
  /* it request implicitly to generate a restart condition    */
  /* then generate a stop condition at the end of transfer    */
  /* set XferOptions to I2C_FIRST_AND_LAST_FRAME              */
  else if (hi2c->XferOptions == I2C_OTHER_AND_LAST_FRAME)
 800a3d2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a3d4:	f1b2 4f2a 	cmp.w	r2, #2852126720	; 0xaa000000
  {
    hi2c->XferOptions = I2C_FIRST_AND_LAST_FRAME;
 800a3d8:	bf04      	itt	eq
 800a3da:	2208      	moveq	r2, #8
 800a3dc:	62e2      	streq	r2, [r4, #44]	; 0x2c
  if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a3de:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a3e2:	2a40      	cmp	r2, #64	; 0x40
 800a3e4:	f000 81d7 	beq.w	800a796 <HAL_I2C_EV_IRQHandler+0x476>
    if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800a3e8:	6922      	ldr	r2, [r4, #16]
 800a3ea:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 800a3ee:	f000 81b2 	beq.w	800a756 <HAL_I2C_EV_IRQHandler+0x436>
      if (hi2c->EventCount == 0U)
 800a3f2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a3f4:	2a00      	cmp	r2, #0
 800a3f6:	f040 81ef 	bne.w	800a7d8 <HAL_I2C_EV_IRQHandler+0x4b8>
        hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(hi2c->Devaddress);
 800a3fa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a3fc:	11d2      	asrs	r2, r2, #7
 800a3fe:	f002 0206 	and.w	r2, r2, #6
 800a402:	f042 02f0 	orr.w	r2, r2, #240	; 0xf0
 800a406:	611a      	str	r2, [r3, #16]
 800a408:	e7ba      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a40a:	06cd      	lsls	r5, r1, #27
 800a40c:	d47c      	bmi.n	800a508 <HAL_I2C_EV_IRQHandler+0x1e8>
    else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a40e:	f002 02f7 	and.w	r2, r2, #247	; 0xf7
 800a412:	2a21      	cmp	r2, #33	; 0x21
 800a414:	f000 80f5 	beq.w	800a602 <HAL_I2C_EV_IRQHandler+0x2e2>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a418:	064e      	lsls	r6, r1, #25
 800a41a:	f140 8132 	bpl.w	800a682 <HAL_I2C_EV_IRQHandler+0x362>
 800a41e:	0545      	lsls	r5, r0, #21
 800a420:	f140 812f 	bpl.w	800a682 <HAL_I2C_EV_IRQHandler+0x362>
 800a424:	0749      	lsls	r1, r1, #29
 800a426:	f100 812f 	bmi.w	800a688 <HAL_I2C_EV_IRQHandler+0x368>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a42a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a42e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a430:	b292      	uxth	r2, r2
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a432:	b2c9      	uxtb	r1, r1
  if (hi2c->XferCount != 0U)
 800a434:	2a00      	cmp	r2, #0
 800a436:	d0a3      	beq.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a438:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a43a:	691b      	ldr	r3, [r3, #16]
 800a43c:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a43e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a440:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a442:	3b01      	subs	r3, #1
 800a444:	b29b      	uxth	r3, r3
 800a446:	8563      	strh	r3, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a448:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a44a:	3201      	adds	r2, #1
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a44c:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a44e:	6262      	str	r2, [r4, #36]	; 0x24
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a450:	2b00      	cmp	r3, #0
 800a452:	d195      	bne.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a454:	292a      	cmp	r1, #42	; 0x2a
 800a456:	d193      	bne.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a458:	6822      	ldr	r2, [r4, #0]
 800a45a:	6853      	ldr	r3, [r2, #4]
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a45c:	2522      	movs	r5, #34	; 0x22
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a45e:	2128      	movs	r1, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a460:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a464:	6053      	str	r3, [r2, #4]
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a466:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 800a468:	6325      	str	r5, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a46a:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a46e:	f7ff fdbb 	bl	8009fe8 <HAL_I2C_SlaveRxCpltCallback>
 800a472:	e785      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      sr2itflags   = READ_REG(hi2c->Instance->SR2);
 800a474:	699d      	ldr	r5, [r3, #24]
      sr1itflags   = READ_REG(hi2c->Instance->SR1);
 800a476:	6959      	ldr	r1, [r3, #20]
 800a478:	e76a      	b.n	800a350 <HAL_I2C_EV_IRQHandler+0x30>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADDR) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a47a:	078d      	lsls	r5, r1, #30
 800a47c:	d515      	bpl.n	800a4aa <HAL_I2C_EV_IRQHandler+0x18a>
 800a47e:	0585      	lsls	r5, r0, #22
 800a480:	d513      	bpl.n	800a4aa <HAL_I2C_EV_IRQHandler+0x18a>
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a482:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions           = hi2c->XferOptions;
 800a486:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  uint32_t Prev_State                   = hi2c->PreviousState;
 800a488:	6b25      	ldr	r5, [r4, #48]	; 0x30
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a48a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800a48e:	2922      	cmp	r1, #34	; 0x22
  HAL_I2C_ModeTypeDef CurrentMode       = hi2c->Mode;
 800a490:	b2d2      	uxtb	r2, r2
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a492:	f000 81b3 	beq.w	800a7fc <HAL_I2C_EV_IRQHandler+0x4dc>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a496:	2200      	movs	r2, #0
 800a498:	920a      	str	r2, [sp, #40]	; 0x28
 800a49a:	695a      	ldr	r2, [r3, #20]
 800a49c:	920a      	str	r2, [sp, #40]	; 0x28
 800a49e:	699b      	ldr	r3, [r3, #24]
 800a4a0:	930a      	str	r3, [sp, #40]	; 0x28
 800a4a2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a4a4:	e76c      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_ADD10) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a4a6:	070d      	lsls	r5, r1, #28
 800a4a8:	d5e7      	bpl.n	800a47a <HAL_I2C_EV_IRQHandler+0x15a>
    else if (I2C_CHECK_FLAG(sr2itflags, I2C_FLAG_TRA) != RESET)
 800a4aa:	0776      	lsls	r6, r6, #29
 800a4ac:	f140 80f5 	bpl.w	800a69a <HAL_I2C_EV_IRQHandler+0x37a>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a4b0:	685d      	ldr	r5, [r3, #4]
 800a4b2:	052d      	lsls	r5, r5, #20
 800a4b4:	f53f af64 	bmi.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a4b8:	060e      	lsls	r6, r1, #24
 800a4ba:	f140 8115 	bpl.w	800a6e8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4be:	0545      	lsls	r5, r0, #21
 800a4c0:	f140 8112 	bpl.w	800a6e8 <HAL_I2C_EV_IRQHandler+0x3c8>
 800a4c4:	074e      	lsls	r6, r1, #29
 800a4c6:	f100 8112 	bmi.w	800a6ee <HAL_I2C_EV_IRQHandler+0x3ce>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4ca:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4ce:	8d20      	ldrh	r0, [r4, #40]	; 0x28
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4d0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
  uint32_t CurrentXferOptions       = hi2c->XferOptions;
 800a4d4:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a4d6:	b2d2      	uxtb	r2, r2
  HAL_I2C_ModeTypeDef CurrentMode   = hi2c->Mode;
 800a4d8:	b2c9      	uxtb	r1, r1
  if ((hi2c->XferSize == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX))
 800a4da:	2800      	cmp	r0, #0
 800a4dc:	f040 8235 	bne.w	800a94a <HAL_I2C_EV_IRQHandler+0x62a>
 800a4e0:	2a21      	cmp	r2, #33	; 0x21
 800a4e2:	f000 8347 	beq.w	800ab74 <HAL_I2C_EV_IRQHandler+0x854>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a4e6:	2940      	cmp	r1, #64	; 0x40
 800a4e8:	f47f af4a 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
           ((CurrentMode == HAL_I2C_MODE_MEM) && (CurrentState == HAL_I2C_STATE_BUSY_RX)))
 800a4ec:	2a22      	cmp	r2, #34	; 0x22
 800a4ee:	f47f af47 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount == 0U)
 800a4f2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a4f4:	b292      	uxth	r2, r2
 800a4f6:	2a00      	cmp	r2, #0
 800a4f8:	f000 8268 	beq.w	800a9cc <HAL_I2C_EV_IRQHandler+0x6ac>
      if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800a4fc:	f894 203e 	ldrb.w	r2, [r4, #62]	; 0x3e
 800a500:	2a40      	cmp	r2, #64	; 0x40
 800a502:	f040 80b4 	bne.w	800a66e <HAL_I2C_EV_IRQHandler+0x34e>
 800a506:	e0fc      	b.n	800a702 <HAL_I2C_EV_IRQHandler+0x3e2>
    else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_STOPF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a508:	0585      	lsls	r5, r0, #22
 800a50a:	d580      	bpl.n	800a40e <HAL_I2C_EV_IRQHandler+0xee>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a50c:	f894 503d 	ldrb.w	r5, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a510:	685a      	ldr	r2, [r3, #4]
 800a512:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800a516:	605a      	str	r2, [r3, #4]
  __HAL_I2C_CLEAR_STOPFLAG(hi2c);
 800a518:	960d      	str	r6, [sp, #52]	; 0x34
 800a51a:	695a      	ldr	r2, [r3, #20]
 800a51c:	920d      	str	r2, [sp, #52]	; 0x34
 800a51e:	681a      	ldr	r2, [r3, #0]
 800a520:	f042 0201 	orr.w	r2, r2, #1
 800a524:	601a      	str	r2, [r3, #0]
 800a526:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a528:	681a      	ldr	r2, [r3, #0]
 800a52a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a52e:	601a      	str	r2, [r3, #0]
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a530:	685a      	ldr	r2, [r3, #4]
 800a532:	0511      	lsls	r1, r2, #20
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a534:	b2ed      	uxtb	r5, r5
  if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800a536:	d521      	bpl.n	800a57c <HAL_I2C_EV_IRQHandler+0x25c>
    if ((CurrentState == HAL_I2C_STATE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN))
 800a538:	f005 02f7 	and.w	r2, r5, #247	; 0xf7
 800a53c:	2a22      	cmp	r2, #34	; 0x22
 800a53e:	f000 817a 	beq.w	800a836 <HAL_I2C_EV_IRQHandler+0x516>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmatx));
 800a542:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a544:	6802      	ldr	r2, [r0, #0]
 800a546:	6852      	ldr	r2, [r2, #4]
 800a548:	b292      	uxth	r2, r2
 800a54a:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a54c:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a54e:	b292      	uxth	r2, r2
 800a550:	b11a      	cbz	r2, 800a55a <HAL_I2C_EV_IRQHandler+0x23a>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a552:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a554:	f042 0204 	orr.w	r2, r2, #4
 800a558:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a55a:	685a      	ldr	r2, [r3, #4]
 800a55c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a560:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmatx) != HAL_DMA_STATE_READY)
 800a562:	f7fe fe25 	bl	80091b0 <HAL_DMA_GetState>
 800a566:	2801      	cmp	r0, #1
 800a568:	d008      	beq.n	800a57c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 800a56a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a56c:	4b99      	ldr	r3, [pc, #612]	; (800a7d4 <HAL_I2C_EV_IRQHandler+0x4b4>)
 800a56e:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 800a570:	f7fe fe0c 	bl	800918c <HAL_DMA_Abort_IT>
 800a574:	b110      	cbz	r0, 800a57c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 800a576:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800a578:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a57a:	4798      	blx	r3
  if (hi2c->XferCount != 0U)
 800a57c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a57e:	b29b      	uxth	r3, r3
 800a580:	b313      	cbz	r3, 800a5c8 <HAL_I2C_EV_IRQHandler+0x2a8>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800a582:	6823      	ldr	r3, [r4, #0]
 800a584:	695a      	ldr	r2, [r3, #20]
 800a586:	0752      	lsls	r2, r2, #29
 800a588:	d50a      	bpl.n	800a5a0 <HAL_I2C_EV_IRQHandler+0x280>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a58a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a58c:	691b      	ldr	r3, [r3, #16]
 800a58e:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a590:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a592:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a594:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 800a596:	1c59      	adds	r1, r3, #1
      hi2c->XferCount--;
 800a598:	b292      	uxth	r2, r2
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a59a:	6823      	ldr	r3, [r4, #0]
      hi2c->pBuffPtr++;
 800a59c:	6261      	str	r1, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a59e:	8562      	strh	r2, [r4, #42]	; 0x2a
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 800a5a0:	695a      	ldr	r2, [r3, #20]
 800a5a2:	0656      	lsls	r6, r2, #25
 800a5a4:	d509      	bpl.n	800a5ba <HAL_I2C_EV_IRQHandler+0x29a>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a5a6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a5a8:	691b      	ldr	r3, [r3, #16]
 800a5aa:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a5ac:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a5ae:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5b0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
 800a5b2:	3201      	adds	r2, #1
      hi2c->XferCount--;
 800a5b4:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a5b6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a5b8:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (hi2c->XferCount != 0U)
 800a5ba:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a5bc:	b29b      	uxth	r3, r3
 800a5be:	b11b      	cbz	r3, 800a5c8 <HAL_I2C_EV_IRQHandler+0x2a8>
      hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a5c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5c2:	f043 0304 	orr.w	r3, r3, #4
 800a5c6:	6423      	str	r3, [r4, #64]	; 0x40
  if (hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 800a5c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800a5ca:	2b00      	cmp	r3, #0
 800a5cc:	f040 80dd 	bne.w	800a78a <HAL_I2C_EV_IRQHandler+0x46a>
    if (CurrentState == HAL_I2C_STATE_BUSY_RX_LISTEN)
 800a5d0:	2d2a      	cmp	r5, #42	; 0x2a
 800a5d2:	f000 8151 	beq.w	800a878 <HAL_I2C_EV_IRQHandler+0x558>
    if (hi2c->State == HAL_I2C_STATE_LISTEN)
 800a5d6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800a5da:	2b28      	cmp	r3, #40	; 0x28
 800a5dc:	f000 8154 	beq.w	800a888 <HAL_I2C_EV_IRQHandler+0x568>
      if ((hi2c->PreviousState  == I2C_STATE_SLAVE_BUSY_RX) || (CurrentState == HAL_I2C_STATE_BUSY_RX))
 800a5e0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a5e2:	2b22      	cmp	r3, #34	; 0x22
 800a5e4:	d002      	beq.n	800a5ec <HAL_I2C_EV_IRQHandler+0x2cc>
 800a5e6:	2d22      	cmp	r5, #34	; 0x22
 800a5e8:	f47f aeca 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->PreviousState = I2C_STATE_NONE;
 800a5ec:	2300      	movs	r3, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800a5ee:	2220      	movs	r2, #32
        hi2c->PreviousState = I2C_STATE_NONE;
 800a5f0:	6323      	str	r3, [r4, #48]	; 0x30
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5f2:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a5f4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a5f8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a5fc:	f7ff fcf4 	bl	8009fe8 <HAL_I2C_SlaveRxCpltCallback>
 800a600:	e6be      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_TXE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a602:	060d      	lsls	r5, r1, #24
 800a604:	d528      	bpl.n	800a658 <HAL_I2C_EV_IRQHandler+0x338>
 800a606:	0546      	lsls	r6, r0, #21
 800a608:	d526      	bpl.n	800a658 <HAL_I2C_EV_IRQHandler+0x338>
 800a60a:	074d      	lsls	r5, r1, #29
 800a60c:	d427      	bmi.n	800a65e <HAL_I2C_EV_IRQHandler+0x33e>
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a60e:	f894 003d 	ldrb.w	r0, [r4, #61]	; 0x3d
  if (hi2c->XferCount != 0U)
 800a612:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a614:	b289      	uxth	r1, r1
  HAL_I2C_StateTypeDef CurrentState = hi2c->State;
 800a616:	b2c0      	uxtb	r0, r0
  if (hi2c->XferCount != 0U)
 800a618:	2900      	cmp	r1, #0
 800a61a:	f43f aeb1 	beq.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a61e:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a620:	f811 5b01 	ldrb.w	r5, [r1], #1
 800a624:	611d      	str	r5, [r3, #16]
    hi2c->pBuffPtr++;
 800a626:	6261      	str	r1, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a628:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a62a:	3901      	subs	r1, #1
 800a62c:	b289      	uxth	r1, r1
 800a62e:	8561      	strh	r1, [r4, #42]	; 0x2a
    if ((hi2c->XferCount == 0U) && (CurrentState == HAL_I2C_STATE_BUSY_TX_LISTEN))
 800a630:	8d61      	ldrh	r1, [r4, #42]	; 0x2a
 800a632:	b289      	uxth	r1, r1
 800a634:	2900      	cmp	r1, #0
 800a636:	f47f aea3 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a63a:	2829      	cmp	r0, #41	; 0x29
 800a63c:	f47f aea0 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a640:	6859      	ldr	r1, [r3, #4]
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a642:	2528      	movs	r5, #40	; 0x28
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a644:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800a648:	6059      	str	r1, [r3, #4]
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a64a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 800a64c:	6322      	str	r2, [r4, #48]	; 0x30
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a64e:	f884 503d 	strb.w	r5, [r4, #61]	; 0x3d
      HAL_I2C_SlaveTxCpltCallback(hi2c);
 800a652:	f7ff fcc7 	bl	8009fe4 <HAL_I2C_SlaveTxCpltCallback>
 800a656:	e693      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a658:	0749      	lsls	r1, r1, #29
 800a65a:	f57f ae91 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a65e:	0582      	lsls	r2, r0, #22
 800a660:	f57f ae8e 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a664:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a666:	b292      	uxth	r2, r2
 800a668:	2a00      	cmp	r2, #0
 800a66a:	f43f ae89 	beq.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->Instance->DR = *hi2c->pBuffPtr;
 800a66e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a670:	f812 1b01 	ldrb.w	r1, [r2], #1
 800a674:	6119      	str	r1, [r3, #16]
    hi2c->XferCount--;
 800a676:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a678:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a67a:	3b01      	subs	r3, #1
 800a67c:	b29b      	uxth	r3, r3
 800a67e:	8563      	strh	r3, [r4, #42]	; 0x2a
 800a680:	e67e      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a682:	074a      	lsls	r2, r1, #29
 800a684:	f57f ae7c 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a688:	0586      	lsls	r6, r0, #22
 800a68a:	f57f ae79 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
  if (hi2c->XferCount != 0U)
 800a68e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a690:	b292      	uxth	r2, r2
 800a692:	2a00      	cmp	r2, #0
 800a694:	f43f ae74 	beq.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a698:	e01b      	b.n	800a6d2 <HAL_I2C_EV_IRQHandler+0x3b2>
      if (READ_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN) != I2C_CR2_DMAEN)
 800a69a:	685a      	ldr	r2, [r3, #4]
 800a69c:	0512      	lsls	r2, r2, #20
 800a69e:	f53f ae6f 	bmi.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a6a2:	064e      	lsls	r6, r1, #25
 800a6a4:	d433      	bmi.n	800a70e <HAL_I2C_EV_IRQHandler+0x3ee>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6a6:	0749      	lsls	r1, r1, #29
 800a6a8:	f57f ae6a 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a6ac:	0582      	lsls	r2, r0, #22
 800a6ae:	f57f ae67 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a6b2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->XferCount == 4U)
 800a6b4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6b6:	b292      	uxth	r2, r2
 800a6b8:	2a04      	cmp	r2, #4
 800a6ba:	f000 8113 	beq.w	800a8e4 <HAL_I2C_EV_IRQHandler+0x5c4>
  else if (hi2c->XferCount == 3U)
 800a6be:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6c0:	b292      	uxth	r2, r2
 800a6c2:	2a03      	cmp	r2, #3
 800a6c4:	f000 8153 	beq.w	800a96e <HAL_I2C_EV_IRQHandler+0x64e>
  else if (hi2c->XferCount == 2U)
 800a6c8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a6ca:	b292      	uxth	r2, r2
 800a6cc:	2a02      	cmp	r2, #2
 800a6ce:	f000 8182 	beq.w	800a9d6 <HAL_I2C_EV_IRQHandler+0x6b6>
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a6d2:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a6d4:	691b      	ldr	r3, [r3, #16]
 800a6d6:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a6d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800a6da:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6dc:	3b01      	subs	r3, #1
    hi2c->pBuffPtr++;
 800a6de:	3201      	adds	r2, #1
    hi2c->XferCount--;
 800a6e0:	b29b      	uxth	r3, r3
    hi2c->pBuffPtr++;
 800a6e2:	6262      	str	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800a6e4:	8563      	strh	r3, [r4, #42]	; 0x2a
      }
 800a6e6:	e64b      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        else if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_EVT) != RESET))
 800a6e8:	074d      	lsls	r5, r1, #29
 800a6ea:	f57f ae49 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a6ee:	0581      	lsls	r1, r0, #22
 800a6f0:	f57f ae46 	bpl.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
          if (CurrentState == HAL_I2C_STATE_BUSY_TX)
 800a6f4:	2a21      	cmp	r2, #33	; 0x21
 800a6f6:	f000 80fd 	beq.w	800a8f4 <HAL_I2C_EV_IRQHandler+0x5d4>
            if (CurrentMode == HAL_I2C_MODE_MEM)
 800a6fa:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 800a6fe:	f47f ae3f 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a702:	4620      	mov	r0, r4
}
 800a704:	b00e      	add	sp, #56	; 0x38
 800a706:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        I2C_MemoryTransmit_TXE_BTF(hi2c);
 800a70a:	f7ff bc75 	b.w	8009ff8 <I2C_MemoryTransmit_TXE_BTF>
        if ((I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_RXNE) != RESET) && (I2C_CHECK_IT_SOURCE(itsources, I2C_IT_BUF) != RESET) && (I2C_CHECK_FLAG(sr1itflags, I2C_FLAG_BTF) == RESET))
 800a70e:	0545      	lsls	r5, r0, #21
 800a710:	d5c9      	bpl.n	800a6a6 <HAL_I2C_EV_IRQHandler+0x386>
 800a712:	f011 0104 	ands.w	r1, r1, #4
 800a716:	d1c9      	bne.n	800a6ac <HAL_I2C_EV_IRQHandler+0x38c>
  if (hi2c->State == HAL_I2C_STATE_BUSY_RX)
 800a718:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a71c:	2a22      	cmp	r2, #34	; 0x22
 800a71e:	f47f ae2f 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    tmp = hi2c->XferCount;
 800a722:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a724:	b292      	uxth	r2, r2
    if (tmp > 3U)
 800a726:	2a03      	cmp	r2, #3
 800a728:	f240 81ec 	bls.w	800ab04 <HAL_I2C_EV_IRQHandler+0x7e4>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a72c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a72e:	691b      	ldr	r3, [r3, #16]
 800a730:	7013      	strb	r3, [r2, #0]
      hi2c->XferCount--;
 800a732:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->pBuffPtr++;
 800a734:	6a62      	ldr	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800a736:	3b01      	subs	r3, #1
 800a738:	b29b      	uxth	r3, r3
 800a73a:	8563      	strh	r3, [r4, #42]	; 0x2a
      if (hi2c->XferCount == (uint16_t)3)
 800a73c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800a73e:	b29b      	uxth	r3, r3
      hi2c->pBuffPtr++;
 800a740:	3201      	adds	r2, #1
      if (hi2c->XferCount == (uint16_t)3)
 800a742:	2b03      	cmp	r3, #3
      hi2c->pBuffPtr++;
 800a744:	6262      	str	r2, [r4, #36]	; 0x24
      if (hi2c->XferCount == (uint16_t)3)
 800a746:	f47f ae1b 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a74a:	6822      	ldr	r2, [r4, #0]
 800a74c:	6853      	ldr	r3, [r2, #4]
 800a74e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800a752:	6053      	str	r3, [r2, #4]
 800a754:	e614      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a756:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a75a:	2a21      	cmp	r2, #33	; 0x21
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a75c:	6c62      	ldr	r2, [r4, #68]	; 0x44
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a75e:	bf16      	itet	ne
 800a760:	f042 0201 	orrne.w	r2, r2, #1
        hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a764:	f002 02fe 	andeq.w	r2, r2, #254	; 0xfe
        hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a768:	b2d2      	uxtbne	r2, r2
 800a76a:	611a      	str	r2, [r3, #16]
      if (((hi2c->hdmatx != NULL) && (hi2c->hdmatx->XferCpltCallback != NULL))
 800a76c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800a76e:	b11a      	cbz	r2, 800a778 <HAL_I2C_EV_IRQHandler+0x458>
 800a770:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a772:	2a00      	cmp	r2, #0
 800a774:	f47f ae21 	bne.w	800a3ba <HAL_I2C_EV_IRQHandler+0x9a>
      || ((hi2c->hdmarx != NULL) && (hi2c->hdmarx->XferCpltCallback != NULL)))
 800a778:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a77a:	2a00      	cmp	r2, #0
 800a77c:	f43f ae00 	beq.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a780:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 800a782:	2a00      	cmp	r2, #0
 800a784:	f47f ae19 	bne.w	800a3ba <HAL_I2C_EV_IRQHandler+0x9a>
 800a788:	e5fa      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    I2C_ITError(hi2c);
 800a78a:	4620      	mov	r0, r4
}
 800a78c:	b00e      	add	sp, #56	; 0x38
 800a78e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    I2C_ITError(hi2c);
 800a792:	f7ff bd0f 	b.w	800a1b4 <I2C_ITError>
    if (hi2c->EventCount == 0U)
 800a796:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a798:	bb52      	cbnz	r2, 800a7f0 <HAL_I2C_EV_IRQHandler+0x4d0>
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(hi2c->Devaddress);
 800a79a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a79c:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800a7a0:	611a      	str	r2, [r3, #16]
 800a7a2:	e5ed      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    hi2c->XferOptions = I2C_FIRST_FRAME;
 800a7a4:	2201      	movs	r2, #1
 800a7a6:	62e2      	str	r2, [r4, #44]	; 0x2c
 800a7a8:	e619      	b.n	800a3de <HAL_I2C_EV_IRQHandler+0xbe>
    __HAL_I2C_DISABLE_IT(hi2c, (I2C_IT_BUF));
 800a7aa:	685a      	ldr	r2, [r3, #4]
 800a7ac:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a7b0:	605a      	str	r2, [r3, #4]
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_DUALF) == RESET)
 800a7b2:	062e      	lsls	r6, r5, #24
    if (I2C_CHECK_FLAG(IT2Flags, I2C_FLAG_TRA) == RESET)
 800a7b4:	f085 0104 	eor.w	r1, r5, #4
    __HAL_UNLOCK(hi2c);
 800a7b8:	f04f 0300 	mov.w	r3, #0
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress1;
 800a7bc:	bf54      	ite	pl
 800a7be:	89a2      	ldrhpl	r2, [r4, #12]
      SlaveAddrCode = (uint16_t)hi2c->Init.OwnAddress2;
 800a7c0:	8b22      	ldrhmi	r2, [r4, #24]
    __HAL_UNLOCK(hi2c);
 800a7c2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  uint8_t TransferDirection = I2C_DIRECTION_RECEIVE;
 800a7c6:	f3c1 0180 	ubfx	r1, r1, #2, #1
    HAL_I2C_AddrCallback(hi2c, TransferDirection, SlaveAddrCode);
 800a7ca:	4620      	mov	r0, r4
 800a7cc:	f7ff fc0e 	bl	8009fec <HAL_I2C_AddrCallback>
 800a7d0:	e5d6      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800a7d2:	bf00      	nop
 800a7d4:	0800a0c1 	.word	0x0800a0c1
      else if (hi2c->EventCount == 1U)
 800a7d8:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a7da:	2a01      	cmp	r2, #1
 800a7dc:	f47f add0 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
        hi2c->Instance->DR = I2C_10BIT_HEADER_READ(hi2c->Devaddress);
 800a7e0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7e2:	11d2      	asrs	r2, r2, #7
 800a7e4:	f002 0206 	and.w	r2, r2, #6
 800a7e8:	f042 02f1 	orr.w	r2, r2, #241	; 0xf1
 800a7ec:	611a      	str	r2, [r3, #16]
 800a7ee:	e5c7      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->Instance->DR = I2C_7BIT_ADD_READ(hi2c->Devaddress);
 800a7f0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800a7f2:	f042 0201 	orr.w	r2, r2, #1
 800a7f6:	b2d2      	uxtb	r2, r2
 800a7f8:	611a      	str	r2, [r3, #16]
 800a7fa:	e5c1      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if ((hi2c->EventCount == 0U) && (CurrentMode == HAL_I2C_MODE_MEM))
 800a7fc:	6d21      	ldr	r1, [r4, #80]	; 0x50
 800a7fe:	b911      	cbnz	r1, 800a806 <HAL_I2C_EV_IRQHandler+0x4e6>
 800a800:	2a40      	cmp	r2, #64	; 0x40
 800a802:	f000 809b 	beq.w	800a93c <HAL_I2C_EV_IRQHandler+0x61c>
    else if ((hi2c->EventCount == 0U) && (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT))
 800a806:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800a808:	b922      	cbnz	r2, 800a814 <HAL_I2C_EV_IRQHandler+0x4f4>
 800a80a:	6921      	ldr	r1, [r4, #16]
 800a80c:	f5b1 4f40 	cmp.w	r1, #49152	; 0xc000
 800a810:	f000 809f 	beq.w	800a952 <HAL_I2C_EV_IRQHandler+0x632>
      if (hi2c->XferCount == 0U)
 800a814:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a816:	b292      	uxth	r2, r2
 800a818:	2a00      	cmp	r2, #0
 800a81a:	d142      	bne.n	800a8a2 <HAL_I2C_EV_IRQHandler+0x582>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a81c:	9203      	str	r2, [sp, #12]
 800a81e:	695a      	ldr	r2, [r3, #20]
 800a820:	9203      	str	r2, [sp, #12]
 800a822:	699a      	ldr	r2, [r3, #24]
 800a824:	9203      	str	r2, [sp, #12]
 800a826:	9a03      	ldr	r2, [sp, #12]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a828:	681a      	ldr	r2, [r3, #0]
 800a82a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a82e:	601a      	str	r2, [r3, #0]
      hi2c->EventCount = 0U;
 800a830:	2300      	movs	r3, #0
 800a832:	6523      	str	r3, [r4, #80]	; 0x50
 800a834:	e5a4      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      hi2c->XferCount = (uint16_t)(__HAL_DMA_GET_COUNTER(hi2c->hdmarx));
 800a836:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a838:	6802      	ldr	r2, [r0, #0]
 800a83a:	6852      	ldr	r2, [r2, #4]
 800a83c:	b292      	uxth	r2, r2
 800a83e:	8562      	strh	r2, [r4, #42]	; 0x2a
      if (hi2c->XferCount != 0U)
 800a840:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a842:	b292      	uxth	r2, r2
 800a844:	b11a      	cbz	r2, 800a84e <HAL_I2C_EV_IRQHandler+0x52e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 800a846:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a848:	f042 0204 	orr.w	r2, r2, #4
 800a84c:	6422      	str	r2, [r4, #64]	; 0x40
      CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_DMAEN);
 800a84e:	685a      	ldr	r2, [r3, #4]
 800a850:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a854:	605a      	str	r2, [r3, #4]
      if (HAL_DMA_GetState(hi2c->hdmarx) != HAL_DMA_STATE_READY)
 800a856:	f7fe fcab 	bl	80091b0 <HAL_DMA_GetState>
 800a85a:	2801      	cmp	r0, #1
 800a85c:	f43f ae8e 	beq.w	800a57c <HAL_I2C_EV_IRQHandler+0x25c>
        hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 800a860:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a862:	4b98      	ldr	r3, [pc, #608]	; (800aac4 <HAL_I2C_EV_IRQHandler+0x7a4>)
 800a864:	6503      	str	r3, [r0, #80]	; 0x50
        if (HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 800a866:	f7fe fc91 	bl	800918c <HAL_DMA_Abort_IT>
 800a86a:	2800      	cmp	r0, #0
 800a86c:	f43f ae86 	beq.w	800a57c <HAL_I2C_EV_IRQHandler+0x25c>
          hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 800a870:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800a872:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800a874:	4798      	blx	r3
 800a876:	e681      	b.n	800a57c <HAL_I2C_EV_IRQHandler+0x25c>
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a878:	2228      	movs	r2, #40	; 0x28
      hi2c->PreviousState = I2C_STATE_NONE;
 800a87a:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a87c:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_LISTEN;
 800a87e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      HAL_I2C_SlaveRxCpltCallback(hi2c);
 800a882:	f7ff fbb1 	bl	8009fe8 <HAL_I2C_SlaveRxCpltCallback>
 800a886:	e6a6      	b.n	800a5d6 <HAL_I2C_EV_IRQHandler+0x2b6>
      hi2c->PreviousState = I2C_STATE_NONE;
 800a888:	2300      	movs	r3, #0
      hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800a88a:	498f      	ldr	r1, [pc, #572]	; (800aac8 <HAL_I2C_EV_IRQHandler+0x7a8>)
 800a88c:	62e1      	str	r1, [r4, #44]	; 0x2c
      hi2c->State = HAL_I2C_STATE_READY;
 800a88e:	2220      	movs	r2, #32
      hi2c->PreviousState = I2C_STATE_NONE;
 800a890:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_ListenCpltCallback(hi2c);
 800a892:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800a894:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800a898:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_ListenCpltCallback(hi2c);
 800a89c:	f7ff fba8 	bl	8009ff0 <HAL_I2C_ListenCpltCallback>
 800a8a0:	e56e      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      else if (hi2c->XferCount == 1U)
 800a8a2:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8a4:	b292      	uxth	r2, r2
 800a8a6:	2a01      	cmp	r2, #1
 800a8a8:	d070      	beq.n	800a98c <HAL_I2C_EV_IRQHandler+0x66c>
      else if (hi2c->XferCount == 2U)
 800a8aa:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a8ac:	b292      	uxth	r2, r2
 800a8ae:	2a02      	cmp	r2, #2
 800a8b0:	f000 80d6 	beq.w	800aa60 <HAL_I2C_EV_IRQHandler+0x740>
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a8b4:	681a      	ldr	r2, [r3, #0]
 800a8b6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800a8ba:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800a8bc:	685a      	ldr	r2, [r3, #4]
 800a8be:	0511      	lsls	r1, r2, #20
 800a8c0:	d508      	bpl.n	800a8d4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800a8c2:	2820      	cmp	r0, #32
 800a8c4:	f200 80f8 	bhi.w	800aab8 <HAL_I2C_EV_IRQHandler+0x798>
 800a8c8:	2807      	cmp	r0, #7
 800a8ca:	f200 80ea 	bhi.w	800aaa2 <HAL_I2C_EV_IRQHandler+0x782>
 800a8ce:	2801      	cmp	r0, #1
 800a8d0:	f000 80ed 	beq.w	800aaae <HAL_I2C_EV_IRQHandler+0x78e>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a8d4:	2200      	movs	r2, #0
 800a8d6:	9209      	str	r2, [sp, #36]	; 0x24
 800a8d8:	695a      	ldr	r2, [r3, #20]
 800a8da:	9209      	str	r2, [sp, #36]	; 0x24
 800a8dc:	699b      	ldr	r3, [r3, #24]
 800a8de:	9309      	str	r3, [sp, #36]	; 0x24
 800a8e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a8e2:	e7a5      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8e4:	685a      	ldr	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8e6:	6a61      	ldr	r1, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a8e8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a8ec:	605a      	str	r2, [r3, #4]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a8ee:	691b      	ldr	r3, [r3, #16]
 800a8f0:	700b      	strb	r3, [r1, #0]
    hi2c->pBuffPtr++;
 800a8f2:	e6f1      	b.n	800a6d8 <HAL_I2C_EV_IRQHandler+0x3b8>
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 800a8f4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 800a8f6:	f894 203d 	ldrb.w	r2, [r4, #61]	; 0x3d
 800a8fa:	2a21      	cmp	r2, #33	; 0x21
 800a8fc:	f47f ad40 	bne.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if (hi2c->XferCount != 0U)
 800a900:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 800a902:	b292      	uxth	r2, r2
 800a904:	2a00      	cmp	r2, #0
 800a906:	f47f aeb2 	bne.w	800a66e <HAL_I2C_EV_IRQHandler+0x34e>
      if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800a90a:	2908      	cmp	r1, #8
 800a90c:	f000 80e2 	beq.w	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a910:	2920      	cmp	r1, #32
 800a912:	f000 80df 	beq.w	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800a916:	f511 3f80 	cmn.w	r1, #65536	; 0x10000
 800a91a:	f000 80db 	beq.w	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800a91e:	6859      	ldr	r1, [r3, #4]
 800a920:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800a924:	6059      	str	r1, [r3, #4]
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a926:	2011      	movs	r0, #17
        hi2c->State = HAL_I2C_STATE_READY;
 800a928:	2320      	movs	r3, #32
        hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800a92a:	6320      	str	r0, [r4, #48]	; 0x30
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800a92c:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a930:	4620      	mov	r0, r4
        hi2c->State = HAL_I2C_STATE_READY;
 800a932:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        HAL_I2C_MasterTxCpltCallback(hi2c);
 800a936:	f7ff fb51 	bl	8009fdc <HAL_I2C_MasterTxCpltCallback>
 800a93a:	e521      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a93c:	9101      	str	r1, [sp, #4]
 800a93e:	695a      	ldr	r2, [r3, #20]
 800a940:	9201      	str	r2, [sp, #4]
 800a942:	699b      	ldr	r3, [r3, #24]
 800a944:	9301      	str	r3, [sp, #4]
 800a946:	9b01      	ldr	r3, [sp, #4]
 800a948:	e51a      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
  else if ((CurrentState == HAL_I2C_STATE_BUSY_TX) || \
 800a94a:	2a21      	cmp	r2, #33	; 0x21
 800a94c:	f43f add1 	beq.w	800a4f2 <HAL_I2C_EV_IRQHandler+0x1d2>
 800a950:	e5c9      	b.n	800a4e6 <HAL_I2C_EV_IRQHandler+0x1c6>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a952:	9202      	str	r2, [sp, #8]
 800a954:	695a      	ldr	r2, [r3, #20]
 800a956:	9202      	str	r2, [sp, #8]
 800a958:	699a      	ldr	r2, [r3, #24]
 800a95a:	9202      	str	r2, [sp, #8]
 800a95c:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800a95e:	681a      	ldr	r2, [r3, #0]
 800a960:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800a964:	601a      	str	r2, [r3, #0]
      hi2c->EventCount++;
 800a966:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a968:	3301      	adds	r3, #1
 800a96a:	6523      	str	r3, [r4, #80]	; 0x50
 800a96c:	e508      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a96e:	685a      	ldr	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a970:	2904      	cmp	r1, #4
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a972:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a976:	605a      	str	r2, [r3, #4]
    if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME))
 800a978:	f43f aeab 	beq.w	800a6d2 <HAL_I2C_EV_IRQHandler+0x3b2>
 800a97c:	2902      	cmp	r1, #2
 800a97e:	f43f aea8 	beq.w	800a6d2 <HAL_I2C_EV_IRQHandler+0x3b2>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a982:	681a      	ldr	r2, [r3, #0]
 800a984:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a988:	601a      	str	r2, [r3, #0]
 800a98a:	e6a2      	b.n	800a6d2 <HAL_I2C_EV_IRQHandler+0x3b2>
        if (CurrentXferOptions == I2C_NO_OPTION_FRAME)
 800a98c:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800a990:	f000 811b 	beq.w	800abca <HAL_I2C_EV_IRQHandler+0x8aa>
        else if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) \
 800a994:	2808      	cmp	r0, #8
 800a996:	f000 8108 	beq.w	800abaa <HAL_I2C_EV_IRQHandler+0x88a>
 800a99a:	2820      	cmp	r0, #32
 800a99c:	f000 8105 	beq.w	800abaa <HAL_I2C_EV_IRQHandler+0x88a>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800a9a0:	2d12      	cmp	r5, #18
 800a9a2:	f000 80ff 	beq.w	800aba4 <HAL_I2C_EV_IRQHandler+0x884>
          if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800a9a6:	2810      	cmp	r0, #16
 800a9a8:	d804      	bhi.n	800a9b4 <HAL_I2C_EV_IRQHandler+0x694>
 800a9aa:	4a48      	ldr	r2, [pc, #288]	; (800aacc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800a9ac:	40c2      	lsrs	r2, r0
 800a9ae:	07d1      	lsls	r1, r2, #31
 800a9b0:	f100 814c 	bmi.w	800ac4c <HAL_I2C_EV_IRQHandler+0x92c>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800a9b4:	681a      	ldr	r2, [r3, #0]
 800a9b6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9ba:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800a9bc:	2200      	movs	r2, #0
 800a9be:	9206      	str	r2, [sp, #24]
 800a9c0:	695a      	ldr	r2, [r3, #20]
 800a9c2:	9206      	str	r2, [sp, #24]
 800a9c4:	699b      	ldr	r3, [r3, #24]
 800a9c6:	9306      	str	r3, [sp, #24]
 800a9c8:	9b06      	ldr	r3, [sp, #24]
 800a9ca:	e731      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_BUF);
 800a9cc:	685a      	ldr	r2, [r3, #4]
 800a9ce:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a9d2:	605a      	str	r2, [r3, #4]
 800a9d4:	e4d4      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP))
 800a9d6:	3901      	subs	r1, #1
 800a9d8:	290f      	cmp	r1, #15
 800a9da:	d809      	bhi.n	800a9f0 <HAL_I2C_EV_IRQHandler+0x6d0>
 800a9dc:	e8df f001 	tbb	[pc, r1]
 800a9e0:	3608363b 	.word	0x3608363b
 800a9e4:	08080808 	.word	0x08080808
 800a9e8:	08080808 	.word	0x08080808
 800a9ec:	3b080808 	.word	0x3b080808
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800a9f0:	681a      	ldr	r2, [r3, #0]
 800a9f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800a9f6:	601a      	str	r2, [r3, #0]
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800a9f8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a9fa:	691b      	ldr	r3, [r3, #16]
 800a9fc:	7013      	strb	r3, [r2, #0]
    hi2c->XferCount--;
 800a9fe:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    hi2c->pBuffPtr++;
 800aa00:	6a62      	ldr	r2, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa02:	6821      	ldr	r1, [r4, #0]
    hi2c->XferCount--;
 800aa04:	3b01      	subs	r3, #1
 800aa06:	b29b      	uxth	r3, r3
 800aa08:	8563      	strh	r3, [r4, #42]	; 0x2a
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa0a:	690b      	ldr	r3, [r1, #16]
    hi2c->pBuffPtr++;
 800aa0c:	1c51      	adds	r1, r2, #1
 800aa0e:	6261      	str	r1, [r4, #36]	; 0x24
    *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800aa10:	7053      	strb	r3, [r2, #1]
    hi2c->XferCount--;
 800aa12:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa14:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr++;
 800aa16:	6a62      	ldr	r2, [r4, #36]	; 0x24
    hi2c->XferCount--;
 800aa18:	3b01      	subs	r3, #1
 800aa1a:	b29b      	uxth	r3, r3
 800aa1c:	8563      	strh	r3, [r4, #42]	; 0x2a
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa1e:	684b      	ldr	r3, [r1, #4]
    hi2c->pBuffPtr++;
 800aa20:	3201      	adds	r2, #1
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa22:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    hi2c->State = HAL_I2C_STATE_READY;
 800aa26:	2020      	movs	r0, #32
    hi2c->pBuffPtr++;
 800aa28:	6262      	str	r2, [r4, #36]	; 0x24
    __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_ERR);
 800aa2a:	604b      	str	r3, [r1, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 800aa2c:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
    if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aa30:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
 800aa34:	2b40      	cmp	r3, #64	; 0x40
 800aa36:	f000 80f5 	beq.w	800ac24 <HAL_I2C_EV_IRQHandler+0x904>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa3a:	2200      	movs	r2, #0
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa3c:	2312      	movs	r3, #18
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800aa3e:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa42:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 800aa44:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MasterRxCpltCallback(hi2c);
 800aa46:	f7ff facb 	bl	8009fe0 <HAL_I2C_MasterRxCpltCallback>
 800aa4a:	e499      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa4c:	681a      	ldr	r2, [r3, #0]
 800aa4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aa52:	601a      	str	r2, [r3, #0]
 800aa54:	e7d0      	b.n	800a9f8 <HAL_I2C_EV_IRQHandler+0x6d8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa56:	681a      	ldr	r2, [r3, #0]
 800aa58:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa5c:	601a      	str	r2, [r3, #0]
 800aa5e:	e7cb      	b.n	800a9f8 <HAL_I2C_EV_IRQHandler+0x6d8>
        if ((CurrentXferOptions != I2C_NEXT_FRAME) && (CurrentXferOptions != I2C_FIRST_AND_NEXT_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME_NO_STOP))
 800aa60:	2810      	cmp	r0, #16
 800aa62:	d804      	bhi.n	800aa6e <HAL_I2C_EV_IRQHandler+0x74e>
 800aa64:	4a19      	ldr	r2, [pc, #100]	; (800aacc <HAL_I2C_EV_IRQHandler+0x7ac>)
 800aa66:	40c2      	lsrs	r2, r0
 800aa68:	07d2      	lsls	r2, r2, #31
 800aa6a:	f100 80c2 	bmi.w	800abf2 <HAL_I2C_EV_IRQHandler+0x8d2>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aa6e:	681a      	ldr	r2, [r3, #0]
 800aa70:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aa74:	601a      	str	r2, [r3, #0]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800aa76:	681a      	ldr	r2, [r3, #0]
 800aa78:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aa7c:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800aa7e:	685a      	ldr	r2, [r3, #4]
 800aa80:	0516      	lsls	r6, r2, #20
 800aa82:	d506      	bpl.n	800aa92 <HAL_I2C_EV_IRQHandler+0x772>
 800aa84:	2820      	cmp	r0, #32
 800aa86:	f240 80bc 	bls.w	800ac02 <HAL_I2C_EV_IRQHandler+0x8e2>
 800aa8a:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aa8e:	f000 80bd 	beq.w	800ac0c <HAL_I2C_EV_IRQHandler+0x8ec>
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800aa92:	2200      	movs	r2, #0
 800aa94:	9208      	str	r2, [sp, #32]
 800aa96:	695a      	ldr	r2, [r3, #20]
 800aa98:	9208      	str	r2, [sp, #32]
 800aa9a:	699b      	ldr	r3, [r3, #24]
 800aa9c:	9308      	str	r3, [sp, #32]
 800aa9e:	9b08      	ldr	r3, [sp, #32]
 800aaa0:	e6c6      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
 800aaa2:	4a0b      	ldr	r2, [pc, #44]	; (800aad0 <HAL_I2C_EV_IRQHandler+0x7b0>)
 800aaa4:	3808      	subs	r0, #8
 800aaa6:	40c2      	lsrs	r2, r0
 800aaa8:	07d2      	lsls	r2, r2, #31
 800aaaa:	f57f af13 	bpl.w	800a8d4 <HAL_I2C_EV_IRQHandler+0x5b4>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800aaae:	685a      	ldr	r2, [r3, #4]
 800aab0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800aab4:	605a      	str	r2, [r3, #4]
 800aab6:	e70d      	b.n	800a8d4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aab8:	f510 3f80 	cmn.w	r0, #65536	; 0x10000
 800aabc:	f47f af0a 	bne.w	800a8d4 <HAL_I2C_EV_IRQHandler+0x5b4>
 800aac0:	e7f5      	b.n	800aaae <HAL_I2C_EV_IRQHandler+0x78e>
 800aac2:	bf00      	nop
 800aac4:	0800a0c1 	.word	0x0800a0c1
 800aac8:	ffff0000 	.word	0xffff0000
 800aacc:	00010014 	.word	0x00010014
 800aad0:	01000101 	.word	0x01000101
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800aad4:	6859      	ldr	r1, [r3, #4]
 800aad6:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800aada:	6059      	str	r1, [r3, #4]
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aadc:	6819      	ldr	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aade:	2200      	movs	r2, #0
        hi2c->State = HAL_I2C_STATE_READY;
 800aae0:	2020      	movs	r0, #32
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800aae2:	f441 7100 	orr.w	r1, r1, #512	; 0x200
 800aae6:	6019      	str	r1, [r3, #0]
        hi2c->PreviousState = I2C_STATE_NONE;
 800aae8:	6322      	str	r2, [r4, #48]	; 0x30
        hi2c->State = HAL_I2C_STATE_READY;
 800aaea:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aaee:	f894 303e 	ldrb.w	r3, [r4, #62]	; 0x3e
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800aaf2:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aaf6:	2b40      	cmp	r3, #64	; 0x40
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aaf8:	4620      	mov	r0, r4
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800aafa:	f47f af1c 	bne.w	800a936 <HAL_I2C_EV_IRQHandler+0x616>
          HAL_I2C_MemTxCpltCallback(hi2c);
 800aafe:	f7ff fa79 	bl	8009ff4 <HAL_I2C_MemTxCpltCallback>
 800ab02:	e43d      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    else if ((hi2c->XferOptions != I2C_FIRST_AND_NEXT_FRAME) && ((tmp == 1U) || (tmp == 0U)))
 800ab04:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800ab06:	2802      	cmp	r0, #2
 800ab08:	f43f af60 	beq.w	800a9cc <HAL_I2C_EV_IRQHandler+0x6ac>
 800ab0c:	2a01      	cmp	r2, #1
 800ab0e:	f63f af5d 	bhi.w	800a9cc <HAL_I2C_EV_IRQHandler+0x6ac>
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab12:	4a62      	ldr	r2, [pc, #392]	; (800ac9c <HAL_I2C_EV_IRQHandler+0x97c>)
  __IO uint32_t count = 0U;
 800ab14:	910b      	str	r1, [sp, #44]	; 0x2c
  count = I2C_TIMEOUT_STOP_FLAG * (SystemCoreClock / 25U / 1000U);
 800ab16:	6812      	ldr	r2, [r2, #0]
 800ab18:	f246 10a8 	movw	r0, #25000	; 0x61a8
 800ab1c:	fbb2 f2f0 	udiv	r2, r2, r0
 800ab20:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800ab24:	920b      	str	r2, [sp, #44]	; 0x2c
 800ab26:	e004      	b.n	800ab32 <HAL_I2C_EV_IRQHandler+0x812>
  while (READ_BIT(hi2c->Instance->CR1, I2C_CR1_STOP) == I2C_CR1_STOP);
 800ab28:	681a      	ldr	r2, [r3, #0]
 800ab2a:	f412 7200 	ands.w	r2, r2, #512	; 0x200
 800ab2e:	f000 8092 	beq.w	800ac56 <HAL_I2C_EV_IRQHandler+0x936>
    count--;
 800ab32:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ab34:	3a01      	subs	r2, #1
 800ab36:	920b      	str	r2, [sp, #44]	; 0x2c
    if (count == 0U)
 800ab38:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ab3a:	2900      	cmp	r1, #0
 800ab3c:	d1f4      	bne.n	800ab28 <HAL_I2C_EV_IRQHandler+0x808>
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab3e:	6c22      	ldr	r2, [r4, #64]	; 0x40
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab40:	6a60      	ldr	r0, [r4, #36]	; 0x24
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ab42:	f042 0220 	orr.w	r2, r2, #32
 800ab46:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab48:	685a      	ldr	r2, [r3, #4]
 800ab4a:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ab4e:	605a      	str	r2, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ab50:	691b      	ldr	r3, [r3, #16]
 800ab52:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ab54:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab56:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800ab58:	3b01      	subs	r3, #1
        hi2c->pBuffPtr++;
 800ab5a:	3201      	adds	r2, #1
        hi2c->XferCount--;
 800ab5c:	b29b      	uxth	r3, r3
        hi2c->State = HAL_I2C_STATE_READY;
 800ab5e:	2020      	movs	r0, #32
        hi2c->XferCount--;
 800ab60:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->pBuffPtr++;
 800ab62:	6262      	str	r2, [r4, #36]	; 0x24
        hi2c->State = HAL_I2C_STATE_READY;
 800ab64:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
        HAL_I2C_ErrorCallback(hi2c);
 800ab68:	4620      	mov	r0, r4
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab6a:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
        HAL_I2C_ErrorCallback(hi2c);
 800ab6e:	f7ff faa3 	bl	800a0b8 <HAL_I2C_ErrorCallback>
 800ab72:	e405      	b.n	800a380 <HAL_I2C_EV_IRQHandler+0x60>
    if ((CurrentXferOptions != I2C_FIRST_AND_LAST_FRAME) && (CurrentXferOptions != I2C_LAST_FRAME) && (CurrentXferOptions != I2C_NO_OPTION_FRAME))
 800ab74:	2d08      	cmp	r5, #8
 800ab76:	d0ad      	beq.n	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab78:	2d20      	cmp	r5, #32
 800ab7a:	d0ab      	beq.n	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
 800ab7c:	f515 3f80 	cmn.w	r5, #65536	; 0x10000
 800ab80:	d0a8      	beq.n	800aad4 <HAL_I2C_EV_IRQHandler+0x7b4>
      __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ab82:	685a      	ldr	r2, [r3, #4]
 800ab84:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800ab88:	605a      	str	r2, [r3, #4]
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ab8a:	2011      	movs	r0, #17
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab8c:	2100      	movs	r1, #0
      hi2c->State = HAL_I2C_STATE_READY;
 800ab8e:	2320      	movs	r3, #32
      hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 800ab90:	6320      	str	r0, [r4, #48]	; 0x30
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ab92:	f884 103e 	strb.w	r1, [r4, #62]	; 0x3e
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ab96:	4620      	mov	r0, r4
      hi2c->State = HAL_I2C_STATE_READY;
 800ab98:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
      HAL_I2C_MasterTxCpltCallback(hi2c);
 800ab9c:	f7ff fa1e 	bl	8009fdc <HAL_I2C_MasterTxCpltCallback>
 800aba0:	f7ff bbee 	b.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
                 && ((Prev_State != I2C_STATE_MASTER_BUSY_RX) || (CurrentXferOptions == I2C_FIRST_FRAME)))
 800aba4:	2801      	cmp	r0, #1
 800aba6:	f43f af05 	beq.w	800a9b4 <HAL_I2C_EV_IRQHandler+0x694>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abaa:	681a      	ldr	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abac:	2100      	movs	r1, #0
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abb2:	601a      	str	r2, [r3, #0]
          __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abb4:	9107      	str	r1, [sp, #28]
 800abb6:	695a      	ldr	r2, [r3, #20]
 800abb8:	9207      	str	r2, [sp, #28]
 800abba:	699a      	ldr	r2, [r3, #24]
 800abbc:	9207      	str	r2, [sp, #28]
 800abbe:	9a07      	ldr	r2, [sp, #28]
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800abc0:	681a      	ldr	r2, [r3, #0]
 800abc2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800abc6:	601a      	str	r2, [r3, #0]
 800abc8:	e632      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abca:	681a      	ldr	r2, [r3, #0]
 800abcc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abd0:	601a      	str	r2, [r3, #0]
          if ((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN)
 800abd2:	685a      	ldr	r2, [r3, #4]
 800abd4:	f412 6200 	ands.w	r2, r2, #2048	; 0x800
 800abd8:	d02d      	beq.n	800ac36 <HAL_I2C_EV_IRQHandler+0x916>
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abda:	681a      	ldr	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abdc:	2100      	movs	r1, #0
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abde:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abe2:	601a      	str	r2, [r3, #0]
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800abe4:	9104      	str	r1, [sp, #16]
 800abe6:	695a      	ldr	r2, [r3, #20]
 800abe8:	9204      	str	r2, [sp, #16]
 800abea:	699b      	ldr	r3, [r3, #24]
 800abec:	9304      	str	r3, [sp, #16]
 800abee:	9b04      	ldr	r3, [sp, #16]
 800abf0:	e61e      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800abf2:	681a      	ldr	r2, [r3, #0]
 800abf4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800abf8:	601a      	str	r2, [r3, #0]
        if (((hi2c->Instance->CR2 & I2C_CR2_DMAEN) == I2C_CR2_DMAEN) && ((CurrentXferOptions == I2C_NO_OPTION_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_LAST_FRAME_NO_STOP) || (CurrentXferOptions == I2C_LAST_FRAME)))
 800abfa:	685a      	ldr	r2, [r3, #4]
 800abfc:	0515      	lsls	r5, r2, #20
 800abfe:	f57f af48 	bpl.w	800aa92 <HAL_I2C_EV_IRQHandler+0x772>
 800ac02:	2807      	cmp	r0, #7
 800ac04:	d807      	bhi.n	800ac16 <HAL_I2C_EV_IRQHandler+0x8f6>
 800ac06:	2801      	cmp	r0, #1
 800ac08:	f47f af43 	bne.w	800aa92 <HAL_I2C_EV_IRQHandler+0x772>
          SET_BIT(hi2c->Instance->CR2, I2C_CR2_LAST);
 800ac0c:	685a      	ldr	r2, [r3, #4]
 800ac0e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800ac12:	605a      	str	r2, [r3, #4]
 800ac14:	e73d      	b.n	800aa92 <HAL_I2C_EV_IRQHandler+0x772>
 800ac16:	4a22      	ldr	r2, [pc, #136]	; (800aca0 <HAL_I2C_EV_IRQHandler+0x980>)
 800ac18:	3808      	subs	r0, #8
 800ac1a:	40c2      	lsrs	r2, r0
 800ac1c:	07d0      	lsls	r0, r2, #31
 800ac1e:	f57f af38 	bpl.w	800aa92 <HAL_I2C_EV_IRQHandler+0x772>
 800ac22:	e7f3      	b.n	800ac0c <HAL_I2C_EV_IRQHandler+0x8ec>
      hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac24:	2300      	movs	r3, #0
 800ac26:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac2a:	4620      	mov	r0, r4
      hi2c->PreviousState = I2C_STATE_NONE;
 800ac2c:	6323      	str	r3, [r4, #48]	; 0x30
      HAL_I2C_MemRxCpltCallback(hi2c);
 800ac2e:	f7ff fa41 	bl	800a0b4 <HAL_I2C_MemRxCpltCallback>
 800ac32:	f7ff bba5 	b.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
            __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ac36:	9205      	str	r2, [sp, #20]
 800ac38:	695a      	ldr	r2, [r3, #20]
 800ac3a:	9205      	str	r2, [sp, #20]
 800ac3c:	699a      	ldr	r2, [r3, #24]
 800ac3e:	9205      	str	r2, [sp, #20]
 800ac40:	9a05      	ldr	r2, [sp, #20]
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac42:	681a      	ldr	r2, [r3, #0]
 800ac44:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800ac48:	601a      	str	r2, [r3, #0]
 800ac4a:	e5f1      	b.n	800a830 <HAL_I2C_EV_IRQHandler+0x510>
            SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac4c:	681a      	ldr	r2, [r3, #0]
 800ac4e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800ac52:	601a      	str	r2, [r3, #0]
 800ac54:	e6b2      	b.n	800a9bc <HAL_I2C_EV_IRQHandler+0x69c>
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac56:	6819      	ldr	r1, [r3, #0]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac58:	6a60      	ldr	r0, [r4, #36]	; 0x24
        CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800ac5a:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800ac5e:	6019      	str	r1, [r3, #0]
        __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_EVT | I2C_IT_BUF | I2C_IT_ERR);
 800ac60:	6859      	ldr	r1, [r3, #4]
 800ac62:	f421 61e0 	bic.w	r1, r1, #1792	; 0x700
 800ac66:	6059      	str	r1, [r3, #4]
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800ac68:	691b      	ldr	r3, [r3, #16]
 800ac6a:	7003      	strb	r3, [r0, #0]
        hi2c->XferCount--;
 800ac6c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800ac6e:	3b01      	subs	r3, #1
        hi2c->State = HAL_I2C_STATE_READY;
 800ac70:	2120      	movs	r1, #32
        hi2c->XferCount--;
 800ac72:	b29b      	uxth	r3, r3
 800ac74:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->State = HAL_I2C_STATE_READY;
 800ac76:	f884 103d 	strb.w	r1, [r4, #61]	; 0x3d
        hi2c->pBuffPtr++;
 800ac7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac7c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
        hi2c->pBuffPtr++;
 800ac80:	3301      	adds	r3, #1
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac82:	2940      	cmp	r1, #64	; 0x40
        hi2c->pBuffPtr++;
 800ac84:	6263      	str	r3, [r4, #36]	; 0x24
        if (hi2c->Mode == HAL_I2C_MODE_MEM)
 800ac86:	f47f aed9 	bne.w	800aa3c <HAL_I2C_EV_IRQHandler+0x71c>
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800ac8a:	f884 203e 	strb.w	r2, [r4, #62]	; 0x3e
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ac8e:	4620      	mov	r0, r4
          hi2c->PreviousState = I2C_STATE_NONE;
 800ac90:	6322      	str	r2, [r4, #48]	; 0x30
          HAL_I2C_MemRxCpltCallback(hi2c);
 800ac92:	f7ff fa0f 	bl	800a0b4 <HAL_I2C_MemRxCpltCallback>
 800ac96:	f7ff bb73 	b.w	800a380 <HAL_I2C_EV_IRQHandler+0x60>
 800ac9a:	bf00      	nop
 800ac9c:	20000078 	.word	0x20000078
 800aca0:	01000101 	.word	0x01000101

0800aca4 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800aca4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800aca8:	2a20      	cmp	r2, #32
{
 800acaa:	4603      	mov	r3, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800acac:	fa5f fc82 	uxtb.w	ip, r2
 800acb0:	d001      	beq.n	800acb6 <HAL_I2CEx_ConfigAnalogFilter+0x12>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800acb2:	2002      	movs	r0, #2
  }
}
 800acb4:	4770      	bx	lr
    __HAL_I2C_DISABLE(hi2c);
 800acb6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800acb8:	2024      	movs	r0, #36	; 0x24
 800acba:	f883 003d 	strb.w	r0, [r3, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800acbe:	6810      	ldr	r0, [r2, #0]
 800acc0:	f020 0001 	bic.w	r0, r0, #1
 800acc4:	6010      	str	r0, [r2, #0]
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 800acc6:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800acc8:	f020 0010 	bic.w	r0, r0, #16
 800accc:	6250      	str	r0, [r2, #36]	; 0x24
    hi2c->Instance->FLTR |= AnalogFilter;
 800acce:	6a50      	ldr	r0, [r2, #36]	; 0x24
 800acd0:	4301      	orrs	r1, r0
 800acd2:	6251      	str	r1, [r2, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800acd4:	6811      	ldr	r1, [r2, #0]
 800acd6:	f041 0101 	orr.w	r1, r1, #1
 800acda:	6011      	str	r1, [r2, #0]
    return HAL_OK;
 800acdc:	2000      	movs	r0, #0
    hi2c->State = HAL_I2C_STATE_READY;
 800acde:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ace2:	4770      	bx	lr

0800ace4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800ace4:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
 800ace8:	2a20      	cmp	r2, #32
 800acea:	d001      	beq.n	800acf0 <HAL_I2CEx_ConfigDigitalFilter+0xc>

    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 800acec:	2002      	movs	r0, #2
  }
}
 800acee:	4770      	bx	lr
{
 800acf0:	b410      	push	{r4}
 800acf2:	fa5f fc82 	uxtb.w	ip, r2
    __HAL_I2C_DISABLE(hi2c);
 800acf6:	6804      	ldr	r4, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 800acf8:	2224      	movs	r2, #36	; 0x24
 800acfa:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800acfe:	6822      	ldr	r2, [r4, #0]
 800ad00:	f022 0201 	bic.w	r2, r2, #1
 800ad04:	6022      	str	r2, [r4, #0]
    tmpreg = hi2c->Instance->FLTR;
 800ad06:	4603      	mov	r3, r0
 800ad08:	6a60      	ldr	r0, [r4, #36]	; 0x24
    tmpreg &= ~(I2C_FLTR_DNF);
 800ad0a:	f64f 72f0 	movw	r2, #65520	; 0xfff0
 800ad0e:	4002      	ands	r2, r0
    tmpreg |= DigitalFilter;
 800ad10:	4311      	orrs	r1, r2
    hi2c->Instance->FLTR = tmpreg;
 800ad12:	b289      	uxth	r1, r1
 800ad14:	6261      	str	r1, [r4, #36]	; 0x24
    __HAL_I2C_ENABLE(hi2c);
 800ad16:	6822      	ldr	r2, [r4, #0]
 800ad18:	f042 0201 	orr.w	r2, r2, #1
 800ad1c:	6022      	str	r2, [r4, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800ad1e:	f883 c03d 	strb.w	ip, [r3, #61]	; 0x3d
    return HAL_OK;
 800ad22:	2000      	movs	r0, #0
}
 800ad24:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ad28:	4770      	bx	lr
 800ad2a:	bf00      	nop

0800ad2c <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 800ad2c:	2800      	cmp	r0, #0
 800ad2e:	d069      	beq.n	800ae04 <HAL_LTDC_Init+0xd8>
{
 800ad30:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800ad32:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800ad36:	4604      	mov	r4, r0
 800ad38:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ad3c:	2b00      	cmp	r3, #0
 800ad3e:	d05c      	beq.n	800adfa <HAL_LTDC_Init+0xce>
    HAL_LTDC_MspInit(hltdc);
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad40:	2202      	movs	r2, #2

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad42:	6823      	ldr	r3, [r4, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ad44:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad48:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad4c:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad4e:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad50:	e9d4 5003 	ldrd	r5, r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800ad54:	f021 4170 	bic.w	r1, r1, #4026531840	; 0xf0000000
 800ad58:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad5a:	6999      	ldr	r1, [r3, #24]
 800ad5c:	432a      	orrs	r2, r5
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800ad5e:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800ad60:	430a      	orrs	r2, r1
 800ad62:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad64:	689a      	ldr	r2, [r3, #8]
 800ad66:	4928      	ldr	r1, [pc, #160]	; (800ae08 <HAL_LTDC_Init+0xdc>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800ad68:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800ad6a:	400a      	ands	r2, r1
 800ad6c:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800ad6e:	689a      	ldr	r2, [r3, #8]
 800ad70:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad74:	69a0      	ldr	r0, [r4, #24]
 800ad76:	4302      	orrs	r2, r0
 800ad78:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad7a:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800ad7c:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800ad7e:	400a      	ands	r2, r1
 800ad80:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800ad82:	68da      	ldr	r2, [r3, #12]
 800ad84:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad88:	6a20      	ldr	r0, [r4, #32]
 800ad8a:	4302      	orrs	r2, r0
 800ad8c:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ad8e:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800ad90:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800ad92:	400a      	ands	r2, r1
 800ad94:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800ad96:	691a      	ldr	r2, [r3, #16]
 800ad98:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800ad9c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ad9e:	4302      	orrs	r2, r0
 800ada0:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ada2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800ada4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800ada6:	400a      	ands	r2, r1
 800ada8:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800adaa:	695a      	ldr	r2, [r3, #20]
 800adac:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800adae:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800adb2:	430a      	orrs	r2, r1
 800adb4:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800adb6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800adb8:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800adbc:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800adc0:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 800adc4:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800adc6:	6add      	ldr	r5, [r3, #44]	; 0x2c
 800adc8:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800adcc:	432a      	orrs	r2, r5
 800adce:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800add2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800add6:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800add8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800adda:	f042 0206 	orr.w	r2, r2, #6
 800adde:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800ade0:	699a      	ldr	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800ade2:	f04f 0c01 	mov.w	ip, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800ade6:	2100      	movs	r1, #0
  __HAL_LTDC_ENABLE(hltdc);
 800ade8:	ea42 020c 	orr.w	r2, r2, ip
 800adec:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800adee:	f8c4 10a4 	str.w	r1, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800adf2:	f884 c0a1 	strb.w	ip, [r4, #161]	; 0xa1

  return HAL_OK;
 800adf6:	4608      	mov	r0, r1
}
 800adf8:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
 800adfa:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800adfe:	f7f7 f893 	bl	8001f28 <HAL_LTDC_MspInit>
 800ae02:	e79d      	b.n	800ad40 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
 800ae04:	2001      	movs	r0, #1
}
 800ae06:	4770      	bx	lr
 800ae08:	f000f800 	.word	0xf000f800

0800ae0c <HAL_LTDC_ErrorCallback>:
 800ae0c:	4770      	bx	lr
 800ae0e:	bf00      	nop

0800ae10 <HAL_LTDC_ReloadEventCallback>:
 800ae10:	4770      	bx	lr
 800ae12:	bf00      	nop

0800ae14 <HAL_LTDC_IRQHandler>:
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae14:	6803      	ldr	r3, [r0, #0]
{
 800ae16:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800ae18:	6b9d      	ldr	r5, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800ae1a:	6b5e      	ldr	r6, [r3, #52]	; 0x34

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae1c:	076a      	lsls	r2, r5, #29
{
 800ae1e:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800ae20:	d501      	bpl.n	800ae26 <HAL_LTDC_IRQHandler+0x12>
 800ae22:	0771      	lsls	r1, r6, #29
 800ae24:	d41d      	bmi.n	800ae62 <HAL_LTDC_IRQHandler+0x4e>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800ae26:	07aa      	lsls	r2, r5, #30
 800ae28:	d501      	bpl.n	800ae2e <HAL_LTDC_IRQHandler+0x1a>
 800ae2a:	07b3      	lsls	r3, r6, #30
 800ae2c:	d42d      	bmi.n	800ae8a <HAL_LTDC_IRQHandler+0x76>
    HAL_LTDC_ErrorCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800ae2e:	07e8      	lsls	r0, r5, #31
 800ae30:	d501      	bpl.n	800ae36 <HAL_LTDC_IRQHandler+0x22>
 800ae32:	07f1      	lsls	r1, r6, #31
 800ae34:	d440      	bmi.n	800aeb8 <HAL_LTDC_IRQHandler+0xa4>
    HAL_LTDC_LineEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800ae36:	072a      	lsls	r2, r5, #28
 800ae38:	d501      	bpl.n	800ae3e <HAL_LTDC_IRQHandler+0x2a>
 800ae3a:	0733      	lsls	r3, r6, #28
 800ae3c:	d400      	bmi.n	800ae40 <HAL_LTDC_IRQHandler+0x2c>
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 800ae3e:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae40:	6823      	ldr	r3, [r4, #0]
 800ae42:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae44:	2008      	movs	r0, #8
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800ae46:	f022 0208 	bic.w	r2, r2, #8
 800ae4a:	635a      	str	r2, [r3, #52]	; 0x34
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae4c:	2101      	movs	r1, #1
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800ae4e:	63d8      	str	r0, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800ae50:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800ae52:	f884 10a1 	strb.w	r1, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae56:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800ae5a:	4620      	mov	r0, r4
 800ae5c:	f7ff ffd8 	bl	800ae10 <HAL_LTDC_ReloadEventCallback>
}
 800ae60:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800ae62:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae64:	f022 0204 	bic.w	r2, r2, #4
 800ae68:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800ae6a:	2204      	movs	r2, #4
 800ae6c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800ae6e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800ae72:	f043 0301 	orr.w	r3, r3, #1
 800ae76:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800ae7a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800ae7c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800ae80:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800ae84:	f7ff ffc2 	bl	800ae0c <HAL_LTDC_ErrorCallback>
 800ae88:	e7cd      	b.n	800ae26 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800ae8a:	6823      	ldr	r3, [r4, #0]
 800ae8c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ae8e:	f022 0202 	bic.w	r2, r2, #2
 800ae92:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800ae94:	2202      	movs	r2, #2
 800ae96:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800ae98:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800ae9c:	f043 0302 	orr.w	r3, r3, #2
 800aea0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aea4:	2204      	movs	r2, #4
    __HAL_UNLOCK(hltdc);
 800aea6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800aea8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aeac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800aeb0:	4620      	mov	r0, r4
 800aeb2:	f7ff ffab 	bl	800ae0c <HAL_LTDC_ErrorCallback>
 800aeb6:	e7ba      	b.n	800ae2e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800aeb8:	6823      	ldr	r3, [r4, #0]
 800aeba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800aebc:	f022 0201 	bic.w	r2, r2, #1
 800aec0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800aec2:	2201      	movs	r2, #1
 800aec4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800aec6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800aec8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800aecc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800aed0:	4620      	mov	r0, r4
 800aed2:	f7f6 f92b 	bl	800112c <HAL_LTDC_LineEventCallback>
 800aed6:	e7ae      	b.n	800ae36 <HAL_LTDC_IRQHandler+0x22>

0800aed8 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800aed8:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800aedc:	2b01      	cmp	r3, #1
 800aede:	f000 80c2 	beq.w	800b066 <HAL_LTDC_ConfigLayer+0x18e>
{
 800aee2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aee6:	f04f 0e34 	mov.w	lr, #52	; 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800aeea:	f8d0 9000 	ldr.w	r9, [r0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800aeee:	fb0e 0e02 	mla	lr, lr, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aef2:	2302      	movs	r3, #2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aef4:	01d2      	lsls	r2, r2, #7
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800aef6:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800aefa:	f102 0684 	add.w	r6, r2, #132	; 0x84
 800aefe:	eb09 0c06 	add.w	ip, r9, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af02:	f8d9 300c 	ldr.w	r3, [r9, #12]
 800af06:	f3c3 4a0b 	ubfx	sl, r3, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af0a:	f8dc 3004 	ldr.w	r3, [ip, #4]
{
 800af0e:	b083      	sub	sp, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af10:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af14:	460c      	mov	r4, r1
 800af16:	460d      	mov	r5, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af18:	9301      	str	r3, [sp, #4]
 800af1a:	4680      	mov	r8, r0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af1e:	f10e 0e38 	add.w	lr, lr, #56	; 0x38
 800af22:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af28:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800af2a:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af2e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800af30:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
 800af34:	6823      	ldr	r3, [r4, #0]
 800af36:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800af3a:	9b01      	ldr	r3, [sp, #4]
 800af3c:	f8cc 3004 	str.w	r3, [ip, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af40:	f8d9 300c 	ldr.w	r3, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af44:	682a      	ldr	r2, [r5, #0]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af46:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800af48:	f8d5 e018 	ldr.w	lr, [r5, #24]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af4c:	1c51      	adds	r1, r2, #1
 800af4e:	f3c3 430b 	ubfx	r3, r3, #16, #12
 800af52:	440b      	add	r3, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800af54:	44ba      	add	sl, r7
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800af56:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800af5a:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af5e:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800af62:	f8dc 3008 	ldr.w	r3, [ip, #8]
 800af66:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 800af6a:	f8cc 3008 	str.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af6e:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af72:	68ab      	ldr	r3, [r5, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800af74:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800af76:	f8d9 000c 	ldr.w	r0, [r9, #12]
 800af7a:	3301      	adds	r3, #1
 800af7c:	f3c0 000a 	ubfx	r0, r0, #0, #11
 800af80:	4403      	add	r3, r0
 800af82:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800af86:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800af8a:	f8dc 3010 	ldr.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800af8e:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800af90:	f023 0307 	bic.w	r3, r3, #7
 800af94:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800af98:	f04f 0b00 	mov.w	fp, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800af9c:	f8cc 1010 	str.w	r1, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800afa0:	f8dc 3018 	ldr.w	r3, [ip, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800afa4:	f895 0032 	ldrb.w	r0, [r5, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800afa8:	f895 4031 	ldrb.w	r4, [r5, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800afac:	f8cc b018 	str.w	fp, [ip, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800afb0:	f895 3030 	ldrb.w	r3, [r5, #48]	; 0x30
 800afb4:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
 800afb8:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800afbc:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800afc0:	f8cc 3018 	str.w	r3, [ip, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800afc4:	f8dc 3014 	ldr.w	r3, [ip, #20]
 800afc8:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800afcc:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800afd0:	696b      	ldr	r3, [r5, #20]
 800afd2:	f8cc 3014 	str.w	r3, [ip, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800afd6:	f8dc 301c 	ldr.w	r3, [ip, #28]
 800afda:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 800afde:	f023 0307 	bic.w	r3, r3, #7
 800afe2:	f8cc 301c 	str.w	r3, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800afe6:	e9d5 3007 	ldrd	r3, r0, [r5, #28]
 800afea:	4303      	orrs	r3, r0
 800afec:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800aff0:	f8dc 3028 	ldr.w	r3, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800aff4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800aff6:	f8cc b028 	str.w	fp, [ip, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800affa:	f8cc 3028 	str.w	r3, [ip, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800affe:	bb69      	cbnz	r1, 800b05c <HAL_LTDC_ConfigLayer+0x184>
  {
    tmp = 4U;
 800b000:	2304      	movs	r3, #4
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b002:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b004:	6aaa      	ldr	r2, [r5, #40]	; 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b006:	fb03 f707 	mul.w	r7, r3, r7
 800b00a:	3703      	adds	r7, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b00c:	fb02 f303 	mul.w	r3, r2, r3
 800b010:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b014:	f8dc 302c 	ldr.w	r3, [ip, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b018:	6aea      	ldr	r2, [r5, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b01a:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 800b01e:	f8cc 302c 	str.w	r3, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b022:	f8cc 702c 	str.w	r7, [ip, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b026:	f8dc 3030 	ldr.w	r3, [ip, #48]	; 0x30
 800b02a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800b02e:	f023 0307 	bic.w	r3, r3, #7
 800b032:	f8cc 3030 	str.w	r3, [ip, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b036:	f8cc 2030 	str.w	r2, [ip, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b03a:	f859 3006 	ldr.w	r3, [r9, r6]
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b03e:	2201      	movs	r2, #1
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b040:	4313      	orrs	r3, r2
 800b042:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
 800b046:	2300      	movs	r3, #0
  return HAL_OK;
 800b048:	4618      	mov	r0, r3
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b04a:	f8c9 2024 	str.w	r2, [r9, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b04e:	f888 20a1 	strb.w	r2, [r8, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b052:	f888 30a0 	strb.w	r3, [r8, #160]	; 0xa0
}
 800b056:	b003      	add	sp, #12
 800b058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b05c:	3901      	subs	r1, #1
 800b05e:	2906      	cmp	r1, #6
 800b060:	d903      	bls.n	800b06a <HAL_LTDC_ConfigLayer+0x192>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b062:	2301      	movs	r3, #1
 800b064:	e7cd      	b.n	800b002 <HAL_LTDC_ConfigLayer+0x12a>
  __HAL_LOCK(hltdc);
 800b066:	2002      	movs	r0, #2
}
 800b068:	4770      	bx	lr
 800b06a:	4b02      	ldr	r3, [pc, #8]	; (800b074 <HAL_LTDC_ConfigLayer+0x19c>)
 800b06c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800b070:	e7c7      	b.n	800b002 <HAL_LTDC_ConfigLayer+0x12a>
 800b072:	bf00      	nop
 800b074:	0802d9a0 	.word	0x0802d9a0

0800b078 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 800b078:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b07c:	2b01      	cmp	r3, #1
 800b07e:	d019      	beq.n	800b0b4 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b080:	6802      	ldr	r2, [r0, #0]
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b082:	2302      	movs	r3, #2
{
 800b084:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b086:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b08a:	6b53      	ldr	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b08c:	4c0a      	ldr	r4, [pc, #40]	; (800b0b8 <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b08e:	f023 0301 	bic.w	r3, r3, #1
 800b092:	6353      	str	r3, [r2, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 800b094:	6421      	str	r1, [r4, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b096:	6b51      	ldr	r1, [r2, #52]	; 0x34
  __HAL_UNLOCK(hltdc);
 800b098:	2300      	movs	r3, #0
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b09a:	f041 0101 	orr.w	r1, r1, #1
  hltdc->State = HAL_LTDC_STATE_READY;
 800b09e:	f04f 0c01 	mov.w	ip, #1
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800b0a2:	6351      	str	r1, [r2, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800b0a4:	f880 c0a1 	strb.w	ip, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b0a8:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b0ac:	f85d 4b04 	ldr.w	r4, [sp], #4
  return HAL_OK;
 800b0b0:	4618      	mov	r0, r3
}
 800b0b2:	4770      	bx	lr
  __HAL_LOCK(hltdc);
 800b0b4:	2002      	movs	r0, #2
}
 800b0b6:	4770      	bx	lr
 800b0b8:	40016800 	.word	0x40016800

0800b0bc <HAL_RCC_OscConfig>:
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800b0bc:	2800      	cmp	r0, #0
 800b0be:	f000 81a2 	beq.w	800b406 <HAL_RCC_OscConfig+0x34a>
{
 800b0c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0c6:	6803      	ldr	r3, [r0, #0]
 800b0c8:	07dd      	lsls	r5, r3, #31
{
 800b0ca:	b082      	sub	sp, #8
 800b0cc:	4604      	mov	r4, r0
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800b0ce:	d52f      	bpl.n	800b130 <HAL_RCC_OscConfig+0x74>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0d0:	499e      	ldr	r1, [pc, #632]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b0d2:	688a      	ldr	r2, [r1, #8]
 800b0d4:	f002 020c 	and.w	r2, r2, #12
 800b0d8:	2a04      	cmp	r2, #4
 800b0da:	f000 80ed 	beq.w	800b2b8 <HAL_RCC_OscConfig+0x1fc>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b0de:	688a      	ldr	r2, [r1, #8]
 800b0e0:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800b0e4:	2a08      	cmp	r2, #8
 800b0e6:	f000 80e3 	beq.w	800b2b0 <HAL_RCC_OscConfig+0x1f4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b0ea:	6863      	ldr	r3, [r4, #4]
 800b0ec:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800b0f0:	f000 80ec 	beq.w	800b2cc <HAL_RCC_OscConfig+0x210>
 800b0f4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800b0f8:	f000 8175 	beq.w	800b3e6 <HAL_RCC_OscConfig+0x32a>
 800b0fc:	4d93      	ldr	r5, [pc, #588]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b0fe:	682a      	ldr	r2, [r5, #0]
 800b100:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 800b104:	602a      	str	r2, [r5, #0]
 800b106:	682a      	ldr	r2, [r5, #0]
 800b108:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800b10c:	602a      	str	r2, [r5, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b10e:	2b00      	cmp	r3, #0
 800b110:	f040 80e1 	bne.w	800b2d6 <HAL_RCC_OscConfig+0x21a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b114:	f7fd ffb0 	bl	8009078 <HAL_GetTick>
 800b118:	4606      	mov	r6, r0

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b11a:	e005      	b.n	800b128 <HAL_RCC_OscConfig+0x6c>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b11c:	f7fd ffac 	bl	8009078 <HAL_GetTick>
 800b120:	1b80      	subs	r0, r0, r6
 800b122:	2864      	cmp	r0, #100	; 0x64
 800b124:	f200 8101 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800b128:	682b      	ldr	r3, [r5, #0]
 800b12a:	039b      	lsls	r3, r3, #14
 800b12c:	d4f6      	bmi.n	800b11c <HAL_RCC_OscConfig+0x60>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800b12e:	6823      	ldr	r3, [r4, #0]
 800b130:	079f      	lsls	r7, r3, #30
 800b132:	d528      	bpl.n	800b186 <HAL_RCC_OscConfig+0xca>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b134:	4a85      	ldr	r2, [pc, #532]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b136:	6891      	ldr	r1, [r2, #8]
 800b138:	f011 0f0c 	tst.w	r1, #12
 800b13c:	f000 8090 	beq.w	800b260 <HAL_RCC_OscConfig+0x1a4>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b140:	6891      	ldr	r1, [r2, #8]
 800b142:	f001 010c 	and.w	r1, r1, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 800b146:	2908      	cmp	r1, #8
 800b148:	f000 8086 	beq.w	800b258 <HAL_RCC_OscConfig+0x19c>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800b14c:	68e3      	ldr	r3, [r4, #12]
 800b14e:	2b00      	cmp	r3, #0
 800b150:	f000 810e 	beq.w	800b370 <HAL_RCC_OscConfig+0x2b4>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800b154:	4b7e      	ldr	r3, [pc, #504]	; (800b350 <HAL_RCC_OscConfig+0x294>)

        /* Get Start Tick*/
        tickstart = HAL_GetTick();

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b156:	4e7d      	ldr	r6, [pc, #500]	; (800b34c <HAL_RCC_OscConfig+0x290>)
        __HAL_RCC_HSI_ENABLE();
 800b158:	2201      	movs	r2, #1
 800b15a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800b15c:	f7fd ff8c 	bl	8009078 <HAL_GetTick>
 800b160:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b162:	e005      	b.n	800b170 <HAL_RCC_OscConfig+0xb4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b164:	f7fd ff88 	bl	8009078 <HAL_GetTick>
 800b168:	1b40      	subs	r0, r0, r5
 800b16a:	2802      	cmp	r0, #2
 800b16c:	f200 80dd 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b170:	6833      	ldr	r3, [r6, #0]
 800b172:	0798      	lsls	r0, r3, #30
 800b174:	d5f6      	bpl.n	800b164 <HAL_RCC_OscConfig+0xa8>
            return HAL_TIMEOUT;
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b176:	6833      	ldr	r3, [r6, #0]
 800b178:	6922      	ldr	r2, [r4, #16]
 800b17a:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800b17e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800b182:	6033      	str	r3, [r6, #0]
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b184:	6823      	ldr	r3, [r4, #0]
 800b186:	071a      	lsls	r2, r3, #28
 800b188:	d451      	bmi.n	800b22e <HAL_RCC_OscConfig+0x172>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b18a:	0758      	lsls	r0, r3, #29
 800b18c:	d52f      	bpl.n	800b1ee <HAL_RCC_OscConfig+0x132>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800b18e:	4a6f      	ldr	r2, [pc, #444]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b190:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b192:	f013 5380 	ands.w	r3, r3, #268435456	; 0x10000000
 800b196:	d07f      	beq.n	800b298 <HAL_RCC_OscConfig+0x1dc>
    FlagStatus       pwrclkchanged = RESET;
 800b198:	2500      	movs	r5, #0
    {
      __HAL_RCC_PWR_CLK_ENABLE();
      pwrclkchanged = SET;
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b19a:	4e6e      	ldr	r6, [pc, #440]	; (800b354 <HAL_RCC_OscConfig+0x298>)
 800b19c:	6833      	ldr	r3, [r6, #0]
 800b19e:	05d9      	lsls	r1, r3, #23
 800b1a0:	f140 80b3 	bpl.w	800b30a <HAL_RCC_OscConfig+0x24e>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b1a4:	68a3      	ldr	r3, [r4, #8]
 800b1a6:	2b01      	cmp	r3, #1
 800b1a8:	f000 80c3 	beq.w	800b332 <HAL_RCC_OscConfig+0x276>
 800b1ac:	2b05      	cmp	r3, #5
 800b1ae:	f000 812c 	beq.w	800b40a <HAL_RCC_OscConfig+0x34e>
 800b1b2:	4e66      	ldr	r6, [pc, #408]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b1b4:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1b6:	f022 0201 	bic.w	r2, r2, #1
 800b1ba:	6732      	str	r2, [r6, #112]	; 0x70
 800b1bc:	6f32      	ldr	r2, [r6, #112]	; 0x70
 800b1be:	f022 0204 	bic.w	r2, r2, #4
 800b1c2:	6732      	str	r2, [r6, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b1c4:	2b00      	cmp	r3, #0
 800b1c6:	f040 80b9 	bne.w	800b33c <HAL_RCC_OscConfig+0x280>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800b1ca:	f7fd ff55 	bl	8009078 <HAL_GetTick>

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1ce:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800b1d2:	4607      	mov	r7, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1d4:	e005      	b.n	800b1e2 <HAL_RCC_OscConfig+0x126>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b1d6:	f7fd ff4f 	bl	8009078 <HAL_GetTick>
 800b1da:	1bc0      	subs	r0, r0, r7
 800b1dc:	4540      	cmp	r0, r8
 800b1de:	f200 80a4 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800b1e2:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800b1e4:	0798      	lsls	r0, r3, #30
 800b1e6:	d4f6      	bmi.n	800b1d6 <HAL_RCC_OscConfig+0x11a>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 800b1e8:	2d00      	cmp	r5, #0
 800b1ea:	f040 8106 	bne.w	800b3fa <HAL_RCC_OscConfig+0x33e>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800b1ee:	69a0      	ldr	r0, [r4, #24]
 800b1f0:	b1c8      	cbz	r0, 800b226 <HAL_RCC_OscConfig+0x16a>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800b1f2:	4d56      	ldr	r5, [pc, #344]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b1f4:	68ab      	ldr	r3, [r5, #8]
 800b1f6:	f003 030c 	and.w	r3, r3, #12
 800b1fa:	2b08      	cmp	r3, #8
 800b1fc:	f000 80c9 	beq.w	800b392 <HAL_RCC_OscConfig+0x2d6>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800b200:	4b53      	ldr	r3, [pc, #332]	; (800b350 <HAL_RCC_OscConfig+0x294>)
 800b202:	2200      	movs	r2, #0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b204:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800b206:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800b208:	f000 8109 	beq.w	800b41e <HAL_RCC_OscConfig+0x362>
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800b20c:	f7fd ff34 	bl	8009078 <HAL_GetTick>
 800b210:	4604      	mov	r4, r0

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b212:	e005      	b.n	800b220 <HAL_RCC_OscConfig+0x164>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b214:	f7fd ff30 	bl	8009078 <HAL_GetTick>
 800b218:	1b00      	subs	r0, r0, r4
 800b21a:	2802      	cmp	r0, #2
 800b21c:	f200 8085 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b220:	682b      	ldr	r3, [r5, #0]
 800b222:	019b      	lsls	r3, r3, #6
 800b224:	d4f6      	bmi.n	800b214 <HAL_RCC_OscConfig+0x158>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800b226:	2000      	movs	r0, #0
}
 800b228:	b002      	add	sp, #8
 800b22a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800b22e:	6963      	ldr	r3, [r4, #20]
 800b230:	b30b      	cbz	r3, 800b276 <HAL_RCC_OscConfig+0x1ba>
      __HAL_RCC_LSI_ENABLE();
 800b232:	4b47      	ldr	r3, [pc, #284]	; (800b350 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b234:	4e45      	ldr	r6, [pc, #276]	; (800b34c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_ENABLE();
 800b236:	2201      	movs	r2, #1
 800b238:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b23c:	f7fd ff1c 	bl	8009078 <HAL_GetTick>
 800b240:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b242:	e004      	b.n	800b24e <HAL_RCC_OscConfig+0x192>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b244:	f7fd ff18 	bl	8009078 <HAL_GetTick>
 800b248:	1b40      	subs	r0, r0, r5
 800b24a:	2802      	cmp	r0, #2
 800b24c:	d86d      	bhi.n	800b32a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800b24e:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b250:	079b      	lsls	r3, r3, #30
 800b252:	d5f7      	bpl.n	800b244 <HAL_RCC_OscConfig+0x188>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800b254:	6823      	ldr	r3, [r4, #0]
 800b256:	e798      	b.n	800b18a <HAL_RCC_OscConfig+0xce>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800b258:	6852      	ldr	r2, [r2, #4]
 800b25a:	0256      	lsls	r6, r2, #9
 800b25c:	f53f af76 	bmi.w	800b14c <HAL_RCC_OscConfig+0x90>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800b260:	4a3a      	ldr	r2, [pc, #232]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b262:	6812      	ldr	r2, [r2, #0]
 800b264:	0795      	lsls	r5, r2, #30
 800b266:	d544      	bpl.n	800b2f2 <HAL_RCC_OscConfig+0x236>
 800b268:	68e2      	ldr	r2, [r4, #12]
 800b26a:	2a01      	cmp	r2, #1
 800b26c:	d041      	beq.n	800b2f2 <HAL_RCC_OscConfig+0x236>
        return HAL_ERROR;
 800b26e:	2001      	movs	r0, #1
}
 800b270:	b002      	add	sp, #8
 800b272:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_LSI_DISABLE();
 800b276:	4a36      	ldr	r2, [pc, #216]	; (800b350 <HAL_RCC_OscConfig+0x294>)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b278:	4e34      	ldr	r6, [pc, #208]	; (800b34c <HAL_RCC_OscConfig+0x290>)
      __HAL_RCC_LSI_DISABLE();
 800b27a:	f8c2 3e80 	str.w	r3, [r2, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800b27e:	f7fd fefb 	bl	8009078 <HAL_GetTick>
 800b282:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b284:	e004      	b.n	800b290 <HAL_RCC_OscConfig+0x1d4>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800b286:	f7fd fef7 	bl	8009078 <HAL_GetTick>
 800b28a:	1b40      	subs	r0, r0, r5
 800b28c:	2802      	cmp	r0, #2
 800b28e:	d84c      	bhi.n	800b32a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800b290:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800b292:	079f      	lsls	r7, r3, #30
 800b294:	d4f7      	bmi.n	800b286 <HAL_RCC_OscConfig+0x1ca>
 800b296:	e7dd      	b.n	800b254 <HAL_RCC_OscConfig+0x198>
      __HAL_RCC_PWR_CLK_ENABLE();
 800b298:	9301      	str	r3, [sp, #4]
 800b29a:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b29c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800b2a0:	6413      	str	r3, [r2, #64]	; 0x40
 800b2a2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b2a4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b2a8:	9301      	str	r3, [sp, #4]
 800b2aa:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800b2ac:	2501      	movs	r5, #1
 800b2ae:	e774      	b.n	800b19a <HAL_RCC_OscConfig+0xde>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800b2b0:	684a      	ldr	r2, [r1, #4]
 800b2b2:	0250      	lsls	r0, r2, #9
 800b2b4:	f57f af19 	bpl.w	800b0ea <HAL_RCC_OscConfig+0x2e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800b2b8:	4a24      	ldr	r2, [pc, #144]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b2ba:	6812      	ldr	r2, [r2, #0]
 800b2bc:	0391      	lsls	r1, r2, #14
 800b2be:	f57f af37 	bpl.w	800b130 <HAL_RCC_OscConfig+0x74>
 800b2c2:	6862      	ldr	r2, [r4, #4]
 800b2c4:	2a00      	cmp	r2, #0
 800b2c6:	f47f af33 	bne.w	800b130 <HAL_RCC_OscConfig+0x74>
 800b2ca:	e7d0      	b.n	800b26e <HAL_RCC_OscConfig+0x1b2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b2cc:	4a1f      	ldr	r2, [pc, #124]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b2ce:	6813      	ldr	r3, [r2, #0]
 800b2d0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800b2d4:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b2d6:	f7fd fecf 	bl	8009078 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2da:	4e1c      	ldr	r6, [pc, #112]	; (800b34c <HAL_RCC_OscConfig+0x290>)
        tickstart = HAL_GetTick();
 800b2dc:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2de:	e004      	b.n	800b2ea <HAL_RCC_OscConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800b2e0:	f7fd feca 	bl	8009078 <HAL_GetTick>
 800b2e4:	1b40      	subs	r0, r0, r5
 800b2e6:	2864      	cmp	r0, #100	; 0x64
 800b2e8:	d81f      	bhi.n	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b2ea:	6833      	ldr	r3, [r6, #0]
 800b2ec:	039a      	lsls	r2, r3, #14
 800b2ee:	d5f7      	bpl.n	800b2e0 <HAL_RCC_OscConfig+0x224>
 800b2f0:	e71d      	b.n	800b12e <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800b2f2:	4916      	ldr	r1, [pc, #88]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b2f4:	6920      	ldr	r0, [r4, #16]
 800b2f6:	680a      	ldr	r2, [r1, #0]
 800b2f8:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 800b2fc:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800b300:	600a      	str	r2, [r1, #0]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b302:	071a      	lsls	r2, r3, #28
 800b304:	f57f af41 	bpl.w	800b18a <HAL_RCC_OscConfig+0xce>
 800b308:	e791      	b.n	800b22e <HAL_RCC_OscConfig+0x172>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800b30a:	6833      	ldr	r3, [r6, #0]
 800b30c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b310:	6033      	str	r3, [r6, #0]
      tickstart = HAL_GetTick();
 800b312:	f7fd feb1 	bl	8009078 <HAL_GetTick>
 800b316:	4607      	mov	r7, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800b318:	6833      	ldr	r3, [r6, #0]
 800b31a:	05da      	lsls	r2, r3, #23
 800b31c:	f53f af42 	bmi.w	800b1a4 <HAL_RCC_OscConfig+0xe8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800b320:	f7fd feaa 	bl	8009078 <HAL_GetTick>
 800b324:	1bc0      	subs	r0, r0, r7
 800b326:	2802      	cmp	r0, #2
 800b328:	d9f6      	bls.n	800b318 <HAL_RCC_OscConfig+0x25c>
            return HAL_TIMEOUT;
 800b32a:	2003      	movs	r0, #3
}
 800b32c:	b002      	add	sp, #8
 800b32e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b332:	4a06      	ldr	r2, [pc, #24]	; (800b34c <HAL_RCC_OscConfig+0x290>)
 800b334:	6f13      	ldr	r3, [r2, #112]	; 0x70
 800b336:	f043 0301 	orr.w	r3, r3, #1
 800b33a:	6713      	str	r3, [r2, #112]	; 0x70
      tickstart = HAL_GetTick();
 800b33c:	f7fd fe9c 	bl	8009078 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b340:	4f02      	ldr	r7, [pc, #8]	; (800b34c <HAL_RCC_OscConfig+0x290>)
      tickstart = HAL_GetTick();
 800b342:	4606      	mov	r6, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b344:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b348:	e00b      	b.n	800b362 <HAL_RCC_OscConfig+0x2a6>
 800b34a:	bf00      	nop
 800b34c:	40023800 	.word	0x40023800
 800b350:	42470000 	.word	0x42470000
 800b354:	40007000 	.word	0x40007000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b358:	f7fd fe8e 	bl	8009078 <HAL_GetTick>
 800b35c:	1b80      	subs	r0, r0, r6
 800b35e:	4540      	cmp	r0, r8
 800b360:	d8e3      	bhi.n	800b32a <HAL_RCC_OscConfig+0x26e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b362:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800b364:	079b      	lsls	r3, r3, #30
 800b366:	d5f7      	bpl.n	800b358 <HAL_RCC_OscConfig+0x29c>
    if(pwrclkchanged == SET)
 800b368:	2d00      	cmp	r5, #0
 800b36a:	f43f af40 	beq.w	800b1ee <HAL_RCC_OscConfig+0x132>
 800b36e:	e044      	b.n	800b3fa <HAL_RCC_OscConfig+0x33e>
        __HAL_RCC_HSI_DISABLE();
 800b370:	4a42      	ldr	r2, [pc, #264]	; (800b47c <HAL_RCC_OscConfig+0x3c0>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b372:	4e43      	ldr	r6, [pc, #268]	; (800b480 <HAL_RCC_OscConfig+0x3c4>)
        __HAL_RCC_HSI_DISABLE();
 800b374:	6013      	str	r3, [r2, #0]
        tickstart = HAL_GetTick();
 800b376:	f7fd fe7f 	bl	8009078 <HAL_GetTick>
 800b37a:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b37c:	e004      	b.n	800b388 <HAL_RCC_OscConfig+0x2cc>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800b37e:	f7fd fe7b 	bl	8009078 <HAL_GetTick>
 800b382:	1b40      	subs	r0, r0, r5
 800b384:	2802      	cmp	r0, #2
 800b386:	d8d0      	bhi.n	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800b388:	6833      	ldr	r3, [r6, #0]
 800b38a:	0799      	lsls	r1, r3, #30
 800b38c:	d4f7      	bmi.n	800b37e <HAL_RCC_OscConfig+0x2c2>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800b38e:	6823      	ldr	r3, [r4, #0]
 800b390:	e6f9      	b.n	800b186 <HAL_RCC_OscConfig+0xca>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800b392:	2801      	cmp	r0, #1
 800b394:	f43f af48 	beq.w	800b228 <HAL_RCC_OscConfig+0x16c>
        pll_config = RCC->PLLCFGR;
 800b398:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b39a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b39c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800b3a0:	4291      	cmp	r1, r2
 800b3a2:	f47f af64 	bne.w	800b26e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b3a6:	6a22      	ldr	r2, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b3a8:	f003 013f 	and.w	r1, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800b3ac:	4291      	cmp	r1, r2
 800b3ae:	f47f af5e 	bne.w	800b26e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b3b2:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b3b4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800b3b8:	401a      	ands	r2, r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800b3ba:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800b3be:	f47f af56 	bne.w	800b26e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3c2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800b3c4:	0852      	lsrs	r2, r2, #1
 800b3c6:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800b3ca:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800b3cc:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800b3d0:	f47f af4d 	bne.w	800b26e <HAL_RCC_OscConfig+0x1b2>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 800b3d4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b3d6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800b3da:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
    return HAL_ERROR;
 800b3de:	bf14      	ite	ne
 800b3e0:	2001      	movne	r0, #1
 800b3e2:	2000      	moveq	r0, #0
 800b3e4:	e720      	b.n	800b228 <HAL_RCC_OscConfig+0x16c>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800b3e6:	4b26      	ldr	r3, [pc, #152]	; (800b480 <HAL_RCC_OscConfig+0x3c4>)
 800b3e8:	681a      	ldr	r2, [r3, #0]
 800b3ea:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 800b3ee:	601a      	str	r2, [r3, #0]
 800b3f0:	681a      	ldr	r2, [r3, #0]
 800b3f2:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800b3f6:	601a      	str	r2, [r3, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800b3f8:	e76d      	b.n	800b2d6 <HAL_RCC_OscConfig+0x21a>
      __HAL_RCC_PWR_CLK_DISABLE();
 800b3fa:	4a21      	ldr	r2, [pc, #132]	; (800b480 <HAL_RCC_OscConfig+0x3c4>)
 800b3fc:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800b3fe:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800b402:	6413      	str	r3, [r2, #64]	; 0x40
 800b404:	e6f3      	b.n	800b1ee <HAL_RCC_OscConfig+0x132>
    return HAL_ERROR;
 800b406:	2001      	movs	r0, #1
}
 800b408:	4770      	bx	lr
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800b40a:	4b1d      	ldr	r3, [pc, #116]	; (800b480 <HAL_RCC_OscConfig+0x3c4>)
 800b40c:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b40e:	f042 0204 	orr.w	r2, r2, #4
 800b412:	671a      	str	r2, [r3, #112]	; 0x70
 800b414:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800b416:	f042 0201 	orr.w	r2, r2, #1
 800b41a:	671a      	str	r2, [r3, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800b41c:	e78e      	b.n	800b33c <HAL_RCC_OscConfig+0x280>
        tickstart = HAL_GetTick();
 800b41e:	f7fd fe2b 	bl	8009078 <HAL_GetTick>
 800b422:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b424:	e005      	b.n	800b432 <HAL_RCC_OscConfig+0x376>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b426:	f7fd fe27 	bl	8009078 <HAL_GetTick>
 800b42a:	1b80      	subs	r0, r0, r6
 800b42c:	2802      	cmp	r0, #2
 800b42e:	f63f af7c 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800b432:	682b      	ldr	r3, [r5, #0]
 800b434:	0199      	lsls	r1, r3, #6
 800b436:	d4f6      	bmi.n	800b426 <HAL_RCC_OscConfig+0x36a>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b438:	e9d4 3107 	ldrd	r3, r1, [r4, #28]
 800b43c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b43e:	430b      	orrs	r3, r1
 800b440:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800b444:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	; 0x28
 800b448:	0852      	lsrs	r2, r2, #1
 800b44a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800b44e:	3a01      	subs	r2, #1
        __HAL_RCC_PLL_ENABLE();
 800b450:	490a      	ldr	r1, [pc, #40]	; (800b47c <HAL_RCC_OscConfig+0x3c0>)
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b452:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
        __HAL_RCC_PLL_ENABLE();
 800b456:	2201      	movs	r2, #1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800b458:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800b45a:	660a      	str	r2, [r1, #96]	; 0x60
        tickstart = HAL_GetTick();
 800b45c:	f7fd fe0c 	bl	8009078 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b460:	4d07      	ldr	r5, [pc, #28]	; (800b480 <HAL_RCC_OscConfig+0x3c4>)
        tickstart = HAL_GetTick();
 800b462:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b464:	e005      	b.n	800b472 <HAL_RCC_OscConfig+0x3b6>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800b466:	f7fd fe07 	bl	8009078 <HAL_GetTick>
 800b46a:	1b00      	subs	r0, r0, r4
 800b46c:	2802      	cmp	r0, #2
 800b46e:	f63f af5c 	bhi.w	800b32a <HAL_RCC_OscConfig+0x26e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b472:	682b      	ldr	r3, [r5, #0]
 800b474:	019a      	lsls	r2, r3, #6
 800b476:	d5f6      	bpl.n	800b466 <HAL_RCC_OscConfig+0x3aa>
 800b478:	e6d5      	b.n	800b226 <HAL_RCC_OscConfig+0x16a>
 800b47a:	bf00      	nop
 800b47c:	42470000 	.word	0x42470000
 800b480:	40023800 	.word	0x40023800

0800b484 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b484:	4916      	ldr	r1, [pc, #88]	; (800b4e0 <HAL_RCC_GetSysClockFreq+0x5c>)
{
 800b486:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b488:	688b      	ldr	r3, [r1, #8]
 800b48a:	f003 030c 	and.w	r3, r3, #12
 800b48e:	2b04      	cmp	r3, #4
 800b490:	d01b      	beq.n	800b4ca <HAL_RCC_GetSysClockFreq+0x46>
 800b492:	2b08      	cmp	r3, #8
 800b494:	d117      	bne.n	800b4c6 <HAL_RCC_GetSysClockFreq+0x42>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b496:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b498:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b49a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b49c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800b4a0:	f002 023f 	and.w	r2, r2, #63	; 0x3f
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800b4a4:	d113      	bne.n	800b4ce <HAL_RCC_GetSysClockFreq+0x4a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4a6:	480f      	ldr	r0, [pc, #60]	; (800b4e4 <HAL_RCC_GetSysClockFreq+0x60>)
 800b4a8:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b4ac:	fba1 0100 	umull	r0, r1, r1, r0
 800b4b0:	f7f4 ff4e 	bl	8000350 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800b4b4:	4b0a      	ldr	r3, [pc, #40]	; (800b4e0 <HAL_RCC_GetSysClockFreq+0x5c>)
 800b4b6:	685b      	ldr	r3, [r3, #4]
 800b4b8:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800b4bc:	3301      	adds	r3, #1
 800b4be:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800b4c0:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800b4c4:	bd08      	pop	{r3, pc}
      sysclockfreq = HSI_VALUE;
 800b4c6:	4807      	ldr	r0, [pc, #28]	; (800b4e4 <HAL_RCC_GetSysClockFreq+0x60>)
}
 800b4c8:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800b4ca:	4807      	ldr	r0, [pc, #28]	; (800b4e8 <HAL_RCC_GetSysClockFreq+0x64>)
}
 800b4cc:	bd08      	pop	{r3, pc}
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800b4ce:	4806      	ldr	r0, [pc, #24]	; (800b4e8 <HAL_RCC_GetSysClockFreq+0x64>)
 800b4d0:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800b4d4:	2300      	movs	r3, #0
 800b4d6:	fba1 0100 	umull	r0, r1, r1, r0
 800b4da:	f7f4 ff39 	bl	8000350 <__aeabi_uldivmod>
 800b4de:	e7e9      	b.n	800b4b4 <HAL_RCC_GetSysClockFreq+0x30>
 800b4e0:	40023800 	.word	0x40023800
 800b4e4:	00f42400 	.word	0x00f42400
 800b4e8:	007a1200 	.word	0x007a1200

0800b4ec <HAL_RCC_ClockConfig>:
  if(RCC_ClkInitStruct == NULL)
 800b4ec:	2800      	cmp	r0, #0
 800b4ee:	f000 8087 	beq.w	800b600 <HAL_RCC_ClockConfig+0x114>
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b4f2:	4a48      	ldr	r2, [pc, #288]	; (800b614 <HAL_RCC_ClockConfig+0x128>)
 800b4f4:	6813      	ldr	r3, [r2, #0]
 800b4f6:	f003 030f 	and.w	r3, r3, #15
 800b4fa:	428b      	cmp	r3, r1
{
 800b4fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b500:	460d      	mov	r5, r1
 800b502:	4604      	mov	r4, r0
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800b504:	d209      	bcs.n	800b51a <HAL_RCC_ClockConfig+0x2e>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b506:	b2cb      	uxtb	r3, r1
 800b508:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b50a:	6813      	ldr	r3, [r2, #0]
 800b50c:	f003 030f 	and.w	r3, r3, #15
 800b510:	428b      	cmp	r3, r1
 800b512:	d002      	beq.n	800b51a <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
 800b514:	2001      	movs	r0, #1
}
 800b516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800b51a:	6823      	ldr	r3, [r4, #0]
 800b51c:	0798      	lsls	r0, r3, #30
 800b51e:	d514      	bpl.n	800b54a <HAL_RCC_ClockConfig+0x5e>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b520:	0759      	lsls	r1, r3, #29
 800b522:	d504      	bpl.n	800b52e <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800b524:	493c      	ldr	r1, [pc, #240]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b526:	688a      	ldr	r2, [r1, #8]
 800b528:	f442 52e0 	orr.w	r2, r2, #7168	; 0x1c00
 800b52c:	608a      	str	r2, [r1, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b52e:	071a      	lsls	r2, r3, #28
 800b530:	d504      	bpl.n	800b53c <HAL_RCC_ClockConfig+0x50>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800b532:	4939      	ldr	r1, [pc, #228]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b534:	688a      	ldr	r2, [r1, #8]
 800b536:	f442 4260 	orr.w	r2, r2, #57344	; 0xe000
 800b53a:	608a      	str	r2, [r1, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800b53c:	4936      	ldr	r1, [pc, #216]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b53e:	68a0      	ldr	r0, [r4, #8]
 800b540:	688a      	ldr	r2, [r1, #8]
 800b542:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800b546:	4302      	orrs	r2, r0
 800b548:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800b54a:	07df      	lsls	r7, r3, #31
 800b54c:	d521      	bpl.n	800b592 <HAL_RCC_ClockConfig+0xa6>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800b54e:	6862      	ldr	r2, [r4, #4]
 800b550:	2a01      	cmp	r2, #1
 800b552:	d057      	beq.n	800b604 <HAL_RCC_ClockConfig+0x118>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b554:	1e93      	subs	r3, r2, #2
 800b556:	2b01      	cmp	r3, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b558:	4b2f      	ldr	r3, [pc, #188]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b55a:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800b55c:	d94d      	bls.n	800b5fa <HAL_RCC_ClockConfig+0x10e>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800b55e:	0799      	lsls	r1, r3, #30
 800b560:	d5d8      	bpl.n	800b514 <HAL_RCC_ClockConfig+0x28>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800b562:	4e2d      	ldr	r6, [pc, #180]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b564:	68b3      	ldr	r3, [r6, #8]
 800b566:	f023 0303 	bic.w	r3, r3, #3
 800b56a:	4313      	orrs	r3, r2
 800b56c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800b56e:	f7fd fd83 	bl	8009078 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b572:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800b576:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b578:	e004      	b.n	800b584 <HAL_RCC_ClockConfig+0x98>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800b57a:	f7fd fd7d 	bl	8009078 <HAL_GetTick>
 800b57e:	1bc0      	subs	r0, r0, r7
 800b580:	4540      	cmp	r0, r8
 800b582:	d844      	bhi.n	800b60e <HAL_RCC_ClockConfig+0x122>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800b584:	68b3      	ldr	r3, [r6, #8]
 800b586:	6862      	ldr	r2, [r4, #4]
 800b588:	f003 030c 	and.w	r3, r3, #12
 800b58c:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800b590:	d1f3      	bne.n	800b57a <HAL_RCC_ClockConfig+0x8e>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800b592:	4a20      	ldr	r2, [pc, #128]	; (800b614 <HAL_RCC_ClockConfig+0x128>)
 800b594:	6813      	ldr	r3, [r2, #0]
 800b596:	f003 030f 	and.w	r3, r3, #15
 800b59a:	42ab      	cmp	r3, r5
 800b59c:	d906      	bls.n	800b5ac <HAL_RCC_ClockConfig+0xc0>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800b59e:	b2eb      	uxtb	r3, r5
 800b5a0:	7013      	strb	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800b5a2:	6813      	ldr	r3, [r2, #0]
 800b5a4:	f003 030f 	and.w	r3, r3, #15
 800b5a8:	42ab      	cmp	r3, r5
 800b5aa:	d1b3      	bne.n	800b514 <HAL_RCC_ClockConfig+0x28>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800b5ac:	6823      	ldr	r3, [r4, #0]
 800b5ae:	075a      	lsls	r2, r3, #29
 800b5b0:	d506      	bpl.n	800b5c0 <HAL_RCC_ClockConfig+0xd4>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800b5b2:	4919      	ldr	r1, [pc, #100]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b5b4:	68e0      	ldr	r0, [r4, #12]
 800b5b6:	688a      	ldr	r2, [r1, #8]
 800b5b8:	f422 52e0 	bic.w	r2, r2, #7168	; 0x1c00
 800b5bc:	4302      	orrs	r2, r0
 800b5be:	608a      	str	r2, [r1, #8]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800b5c0:	071b      	lsls	r3, r3, #28
 800b5c2:	d507      	bpl.n	800b5d4 <HAL_RCC_ClockConfig+0xe8>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800b5c4:	4a14      	ldr	r2, [pc, #80]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b5c6:	6921      	ldr	r1, [r4, #16]
 800b5c8:	6893      	ldr	r3, [r2, #8]
 800b5ca:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800b5ce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800b5d2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5d4:	f7ff ff56 	bl	800b484 <HAL_RCC_GetSysClockFreq>
 800b5d8:	4a0f      	ldr	r2, [pc, #60]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b5da:	4c10      	ldr	r4, [pc, #64]	; (800b61c <HAL_RCC_ClockConfig+0x130>)
 800b5dc:	6892      	ldr	r2, [r2, #8]
 800b5de:	4910      	ldr	r1, [pc, #64]	; (800b620 <HAL_RCC_ClockConfig+0x134>)
 800b5e0:	f3c2 1203 	ubfx	r2, r2, #4, #4
 800b5e4:	4603      	mov	r3, r0
 800b5e6:	5ca2      	ldrb	r2, [r4, r2]
  HAL_InitTick (uwTickPrio);
 800b5e8:	480e      	ldr	r0, [pc, #56]	; (800b624 <HAL_RCC_ClockConfig+0x138>)
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5ea:	40d3      	lsrs	r3, r2
  HAL_InitTick (uwTickPrio);
 800b5ec:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800b5ee:	600b      	str	r3, [r1, #0]
  HAL_InitTick (uwTickPrio);
 800b5f0:	f7f6 fe78 	bl	80022e4 <HAL_InitTick>
  return HAL_OK;
 800b5f4:	2000      	movs	r0, #0
}
 800b5f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800b5fa:	0198      	lsls	r0, r3, #6
 800b5fc:	d4b1      	bmi.n	800b562 <HAL_RCC_ClockConfig+0x76>
 800b5fe:	e789      	b.n	800b514 <HAL_RCC_ClockConfig+0x28>
    return HAL_ERROR;
 800b600:	2001      	movs	r0, #1
}
 800b602:	4770      	bx	lr
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800b604:	4b04      	ldr	r3, [pc, #16]	; (800b618 <HAL_RCC_ClockConfig+0x12c>)
 800b606:	681b      	ldr	r3, [r3, #0]
 800b608:	039e      	lsls	r6, r3, #14
 800b60a:	d4aa      	bmi.n	800b562 <HAL_RCC_ClockConfig+0x76>
 800b60c:	e782      	b.n	800b514 <HAL_RCC_ClockConfig+0x28>
        return HAL_TIMEOUT;
 800b60e:	2003      	movs	r0, #3
 800b610:	e781      	b.n	800b516 <HAL_RCC_ClockConfig+0x2a>
 800b612:	bf00      	nop
 800b614:	40023c00 	.word	0x40023c00
 800b618:	40023800 	.word	0x40023800
 800b61c:	0802d988 	.word	0x0802d988
 800b620:	20000078 	.word	0x20000078
 800b624:	20000080 	.word	0x20000080

0800b628 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b628:	4b04      	ldr	r3, [pc, #16]	; (800b63c <HAL_RCC_GetPCLK1Freq+0x14>)
  return SystemCoreClock;
 800b62a:	4905      	ldr	r1, [pc, #20]	; (800b640 <HAL_RCC_GetPCLK1Freq+0x18>)
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800b62c:	689b      	ldr	r3, [r3, #8]
 800b62e:	4a05      	ldr	r2, [pc, #20]	; (800b644 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800b630:	6808      	ldr	r0, [r1, #0]
 800b632:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800b636:	5cd3      	ldrb	r3, [r2, r3]
}
 800b638:	40d8      	lsrs	r0, r3
 800b63a:	4770      	bx	lr
 800b63c:	40023800 	.word	0x40023800
 800b640:	20000078 	.word	0x20000078
 800b644:	0802d998 	.word	0x0802d998

0800b648 <HAL_RCC_GetClockConfig>:
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b648:	4b0e      	ldr	r3, [pc, #56]	; (800b684 <HAL_RCC_GetClockConfig+0x3c>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800b64a:	220f      	movs	r2, #15
 800b64c:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800b64e:	689a      	ldr	r2, [r3, #8]
 800b650:	f002 0203 	and.w	r2, r2, #3
 800b654:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800b656:	689a      	ldr	r2, [r3, #8]
 800b658:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800b65c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800b65e:	689a      	ldr	r2, [r3, #8]
 800b660:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800b664:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b666:	689b      	ldr	r3, [r3, #8]
 800b668:	08db      	lsrs	r3, r3, #3
{
 800b66a:	b410      	push	{r4}
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b66c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b670:	4c05      	ldr	r4, [pc, #20]	; (800b688 <HAL_RCC_GetClockConfig+0x40>)
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800b672:	6103      	str	r3, [r0, #16]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b674:	6823      	ldr	r3, [r4, #0]
}
 800b676:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800b67a:	f003 030f 	and.w	r3, r3, #15
 800b67e:	600b      	str	r3, [r1, #0]
}
 800b680:	4770      	bx	lr
 800b682:	bf00      	nop
 800b684:	40023800 	.word	0x40023800
 800b688:	40023c00 	.word	0x40023c00

0800b68c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800b68c:	b5f0      	push	{r4, r5, r6, r7, lr}
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 800b68e:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b690:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800b694:	b083      	sub	sp, #12
 800b696:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800b698:	d111      	bne.n	800b6be <HAL_RCCEx_PeriphCLKConfig+0x32>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b69a:	f013 0f0c 	tst.w	r3, #12
 800b69e:	d16f      	bne.n	800b780 <HAL_RCCEx_PeriphCLKConfig+0xf4>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b6a0:	0698      	lsls	r0, r3, #26
 800b6a2:	f100 80c2 	bmi.w	800b82a <HAL_RCCEx_PeriphCLKConfig+0x19e>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b6a6:	f013 0310 	ands.w	r3, r3, #16
 800b6aa:	f000 80bb 	beq.w	800b824 <HAL_RCCEx_PeriphCLKConfig+0x198>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800b6ae:	4b89      	ldr	r3, [pc, #548]	; (800b8d4 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800b6b0:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800b6b4:	f8c3 21e0 	str.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 800b6b8:	2000      	movs	r0, #0
}
 800b6ba:	b003      	add	sp, #12
 800b6bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLI2S_DISABLE();
 800b6be:	4b86      	ldr	r3, [pc, #536]	; (800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6c0:	4e86      	ldr	r6, [pc, #536]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_DISABLE();
 800b6c2:	2200      	movs	r2, #0
 800b6c4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b6c6:	f7fd fcd7 	bl	8009078 <HAL_GetTick>
 800b6ca:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6cc:	e004      	b.n	800b6d8 <HAL_RCCEx_PeriphCLKConfig+0x4c>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b6ce:	f7fd fcd3 	bl	8009078 <HAL_GetTick>
 800b6d2:	1b43      	subs	r3, r0, r5
 800b6d4:	2b02      	cmp	r3, #2
 800b6d6:	d850      	bhi.n	800b77a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800b6d8:	6833      	ldr	r3, [r6, #0]
 800b6da:	0118      	lsls	r0, r3, #4
 800b6dc:	d4f7      	bmi.n	800b6ce <HAL_RCCEx_PeriphCLKConfig+0x42>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800b6de:	6823      	ldr	r3, [r4, #0]
 800b6e0:	07d9      	lsls	r1, r3, #31
 800b6e2:	d506      	bpl.n	800b6f2 <HAL_RCCEx_PeriphCLKConfig+0x66>
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800b6e4:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800b6e8:	0712      	lsls	r2, r2, #28
 800b6ea:	ea42 1281 	orr.w	r2, r2, r1, lsl #6
 800b6ee:	f8c6 2084 	str.w	r2, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800b6f2:	079a      	lsls	r2, r3, #30
 800b6f4:	d515      	bpl.n	800b722 <HAL_RCCEx_PeriphCLKConfig+0x96>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b6f6:	4979      	ldr	r1, [pc, #484]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b6f8:	68e2      	ldr	r2, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800b6fa:	f8d1 0084 	ldr.w	r0, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800b6fe:	6865      	ldr	r5, [r4, #4]
 800b700:	0612      	lsls	r2, r2, #24
 800b702:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800b706:	ea42 1285 	orr.w	r2, r2, r5, lsl #6
 800b70a:	4302      	orrs	r2, r0
 800b70c:	f8c1 2084 	str.w	r2, [r1, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800b710:	f8d1 008c 	ldr.w	r0, [r1, #140]	; 0x8c
 800b714:	69e2      	ldr	r2, [r4, #28]
 800b716:	f020 001f 	bic.w	r0, r0, #31
 800b71a:	3a01      	subs	r2, #1
 800b71c:	4302      	orrs	r2, r0
 800b71e:	f8c1 208c 	str.w	r2, [r1, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800b722:	065b      	lsls	r3, r3, #25
 800b724:	d509      	bpl.n	800b73a <HAL_RCCEx_PeriphCLKConfig+0xae>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800b726:	1d20      	adds	r0, r4, #4
 800b728:	c80b      	ldmia	r0, {r0, r1, r3}
 800b72a:	061b      	lsls	r3, r3, #24
 800b72c:	4a6b      	ldr	r2, [pc, #428]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b72e:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b732:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
 800b736:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800b73a:	4b67      	ldr	r3, [pc, #412]	; (800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b73c:	4e67      	ldr	r6, [pc, #412]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLI2S_ENABLE();
 800b73e:	2201      	movs	r2, #1
 800b740:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800b742:	f7fd fc99 	bl	8009078 <HAL_GetTick>
 800b746:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b748:	e004      	b.n	800b754 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800b74a:	f7fd fc95 	bl	8009078 <HAL_GetTick>
 800b74e:	1b40      	subs	r0, r0, r5
 800b750:	2802      	cmp	r0, #2
 800b752:	d812      	bhi.n	800b77a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800b754:	6833      	ldr	r3, [r6, #0]
 800b756:	011f      	lsls	r7, r3, #4
 800b758:	d5f7      	bpl.n	800b74a <HAL_RCCEx_PeriphCLKConfig+0xbe>
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800b75a:	6823      	ldr	r3, [r4, #0]
 800b75c:	e79d      	b.n	800b69a <HAL_RCCEx_PeriphCLKConfig+0xe>
        tickstart = HAL_GetTick();
 800b75e:	f7fd fc8b 	bl	8009078 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b762:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800b766:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800b768:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b76a:	079b      	lsls	r3, r3, #30
 800b76c:	f100 80a5 	bmi.w	800b8ba <HAL_RCCEx_PeriphCLKConfig+0x22e>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800b770:	f7fd fc82 	bl	8009078 <HAL_GetTick>
 800b774:	1b80      	subs	r0, r0, r6
 800b776:	42b8      	cmp	r0, r7
 800b778:	d9f6      	bls.n	800b768 <HAL_RCCEx_PeriphCLKConfig+0xdc>
        return HAL_TIMEOUT;
 800b77a:	2003      	movs	r0, #3
}
 800b77c:	b003      	add	sp, #12
 800b77e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PLLSAI_DISABLE();
 800b780:	4b55      	ldr	r3, [pc, #340]	; (800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b782:	4e56      	ldr	r6, [pc, #344]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_DISABLE();
 800b784:	2200      	movs	r2, #0
 800b786:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b788:	f7fd fc76 	bl	8009078 <HAL_GetTick>
 800b78c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b78e:	e004      	b.n	800b79a <HAL_RCCEx_PeriphCLKConfig+0x10e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b790:	f7fd fc72 	bl	8009078 <HAL_GetTick>
 800b794:	1b43      	subs	r3, r0, r5
 800b796:	2b02      	cmp	r3, #2
 800b798:	d8ef      	bhi.n	800b77a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800b79a:	6833      	ldr	r3, [r6, #0]
 800b79c:	0098      	lsls	r0, r3, #2
 800b79e:	d4f7      	bmi.n	800b790 <HAL_RCCEx_PeriphCLKConfig+0x104>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800b7a0:	6822      	ldr	r2, [r4, #0]
 800b7a2:	0751      	lsls	r1, r2, #29
 800b7a4:	d515      	bpl.n	800b7d2 <HAL_RCCEx_PeriphCLKConfig+0x146>
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b7a6:	6963      	ldr	r3, [r4, #20]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800b7a8:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800b7ac:	6920      	ldr	r0, [r4, #16]
 800b7ae:	061b      	lsls	r3, r3, #24
 800b7b0:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 800b7b4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b7b8:	430b      	orrs	r3, r1
 800b7ba:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800b7be:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 800b7c2:	6a21      	ldr	r1, [r4, #32]
 800b7c4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800b7c8:	3901      	subs	r1, #1
 800b7ca:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800b7ce:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800b7d2:	0713      	lsls	r3, r2, #28
 800b7d4:	d514      	bpl.n	800b800 <HAL_RCCEx_PeriphCLKConfig+0x174>
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7d6:	4a41      	ldr	r2, [pc, #260]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7d8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800b7da:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 800b7de:	6920      	ldr	r0, [r4, #16]
 800b7e0:	071b      	lsls	r3, r3, #28
 800b7e2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 800b7e6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800b7ea:	430b      	orrs	r3, r1
 800b7ec:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800b7f0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800b7f4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800b7f6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800b7fa:	430b      	orrs	r3, r1
 800b7fc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    __HAL_RCC_PLLSAI_ENABLE();
 800b800:	4b35      	ldr	r3, [pc, #212]	; (800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b802:	4e36      	ldr	r6, [pc, #216]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    __HAL_RCC_PLLSAI_ENABLE();
 800b804:	2201      	movs	r2, #1
 800b806:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800b808:	f7fd fc36 	bl	8009078 <HAL_GetTick>
 800b80c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b80e:	e004      	b.n	800b81a <HAL_RCCEx_PeriphCLKConfig+0x18e>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800b810:	f7fd fc32 	bl	8009078 <HAL_GetTick>
 800b814:	1b40      	subs	r0, r0, r5
 800b816:	2802      	cmp	r0, #2
 800b818:	d8af      	bhi.n	800b77a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800b81a:	6833      	ldr	r3, [r6, #0]
 800b81c:	009f      	lsls	r7, r3, #2
 800b81e:	d5f7      	bpl.n	800b810 <HAL_RCCEx_PeriphCLKConfig+0x184>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800b820:	6823      	ldr	r3, [r4, #0]
 800b822:	e73d      	b.n	800b6a0 <HAL_RCCEx_PeriphCLKConfig+0x14>
  return HAL_OK;
 800b824:	4618      	mov	r0, r3
}
 800b826:	b003      	add	sp, #12
 800b828:	bdf0      	pop	{r4, r5, r6, r7, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 800b82a:	4b2c      	ldr	r3, [pc, #176]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    PWR->CR |= PWR_CR_DBP;
 800b82c:	4d2c      	ldr	r5, [pc, #176]	; (800b8e0 <HAL_RCCEx_PeriphCLKConfig+0x254>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800b82e:	2200      	movs	r2, #0
 800b830:	9201      	str	r2, [sp, #4]
 800b832:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b834:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b838:	641a      	str	r2, [r3, #64]	; 0x40
 800b83a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b83c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b840:	9301      	str	r3, [sp, #4]
 800b842:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800b844:	682b      	ldr	r3, [r5, #0]
 800b846:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b84a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800b84c:	f7fd fc14 	bl	8009078 <HAL_GetTick>
 800b850:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b852:	e004      	b.n	800b85e <HAL_RCCEx_PeriphCLKConfig+0x1d2>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800b854:	f7fd fc10 	bl	8009078 <HAL_GetTick>
 800b858:	1b83      	subs	r3, r0, r6
 800b85a:	2b02      	cmp	r3, #2
 800b85c:	d88d      	bhi.n	800b77a <HAL_RCCEx_PeriphCLKConfig+0xee>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800b85e:	682b      	ldr	r3, [r5, #0]
 800b860:	05d9      	lsls	r1, r3, #23
 800b862:	d5f7      	bpl.n	800b854 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b864:	4d1d      	ldr	r5, [pc, #116]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b866:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800b868:	6f2a      	ldr	r2, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b86a:	f412 7240 	ands.w	r2, r2, #768	; 0x300
 800b86e:	d111      	bne.n	800b894 <HAL_RCCEx_PeriphCLKConfig+0x208>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b870:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800b874:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800b878:	d021      	beq.n	800b8be <HAL_RCCEx_PeriphCLKConfig+0x232>
 800b87a:	4918      	ldr	r1, [pc, #96]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b87c:	688a      	ldr	r2, [r1, #8]
 800b87e:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b882:	608a      	str	r2, [r1, #8]
 800b884:	4a15      	ldr	r2, [pc, #84]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b886:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800b888:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b88c:	430b      	orrs	r3, r1
 800b88e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800b890:	6823      	ldr	r3, [r4, #0]
 800b892:	e708      	b.n	800b6a6 <HAL_RCCEx_PeriphCLKConfig+0x1a>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800b894:	f403 7140 	and.w	r1, r3, #768	; 0x300
 800b898:	4291      	cmp	r1, r2
 800b89a:	d0eb      	beq.n	800b874 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b89c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800b89e:	4a0e      	ldr	r2, [pc, #56]	; (800b8d8 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
 800b8a0:	2101      	movs	r1, #1
 800b8a2:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800b8a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800b8aa:	2100      	movs	r1, #0
 800b8ac:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800b8b0:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800b8b2:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800b8b4:	07da      	lsls	r2, r3, #31
 800b8b6:	f53f af52 	bmi.w	800b75e <HAL_RCCEx_PeriphCLKConfig+0xd2>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800b8ba:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b8bc:	e7d8      	b.n	800b870 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 800b8be:	4807      	ldr	r0, [pc, #28]	; (800b8dc <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800b8c0:	6882      	ldr	r2, [r0, #8]
 800b8c2:	f023 4170 	bic.w	r1, r3, #4026531840	; 0xf0000000
 800b8c6:	f421 7140 	bic.w	r1, r1, #768	; 0x300
 800b8ca:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 800b8ce:	430a      	orrs	r2, r1
 800b8d0:	6082      	str	r2, [r0, #8]
 800b8d2:	e7d7      	b.n	800b884 <HAL_RCCEx_PeriphCLKConfig+0x1f8>
 800b8d4:	42471000 	.word	0x42471000
 800b8d8:	42470000 	.word	0x42470000
 800b8dc:	40023800 	.word	0x40023800
 800b8e0:	40007000 	.word	0x40007000

0800b8e4 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800b8e4:	b1f0      	cbz	r0, 800b924 <HAL_SDRAM_Init+0x40>
{
 800b8e6:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800b8e8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b8ec:	460d      	mov	r5, r1
 800b8ee:	4604      	mov	r4, r0
 800b8f0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b8f4:	b18b      	cbz	r3, 800b91a <HAL_SDRAM_Init+0x36>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b8f6:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b8f8:	2302      	movs	r3, #2
 800b8fa:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800b8fe:	f851 0b04 	ldr.w	r0, [r1], #4
 800b902:	f000 fe51 	bl	800c5a8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800b906:	e9d4 0200 	ldrd	r0, r2, [r4]
 800b90a:	4629      	mov	r1, r5
 800b90c:	f000 fe8a 	bl	800c624 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800b910:	2301      	movs	r3, #1
 800b912:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800b916:	2000      	movs	r0, #0
}
 800b918:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
 800b91a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
    HAL_SDRAM_MspInit(hsdram);
 800b91e:	f7f6 fc79 	bl	8002214 <HAL_SDRAM_MspInit>
 800b922:	e7e8      	b.n	800b8f6 <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
 800b924:	2001      	movs	r0, #1
}
 800b926:	4770      	bx	lr

0800b928 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800b928:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b92a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800b92e:	2b02      	cmp	r3, #2
{
 800b930:	4605      	mov	r5, r0
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800b932:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800b934:	d004      	beq.n	800b940 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800b936:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800b93a:	2c01      	cmp	r4, #1
 800b93c:	d001      	beq.n	800b942 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
 800b93e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b940:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b942:	460e      	mov	r6, r1
 800b944:	2302      	movs	r3, #2
 800b946:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800b94a:	6828      	ldr	r0, [r5, #0]
 800b94c:	f000 feb6 	bl	800c6bc <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800b950:	6833      	ldr	r3, [r6, #0]
 800b952:	2b02      	cmp	r3, #2
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800b954:	bf06      	itte	eq
 800b956:	2305      	moveq	r3, #5
 800b958:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
      hsdram->State = HAL_SDRAM_STATE_READY;
 800b95c:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  return HAL_OK;
 800b960:	2000      	movs	r0, #0
}
 800b962:	bd70      	pop	{r4, r5, r6, pc}

0800b964 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800b964:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b966:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800b96a:	2b02      	cmp	r3, #2
{
 800b96c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800b96e:	b2d8      	uxtb	r0, r3
 800b970:	d005      	beq.n	800b97e <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800b972:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800b976:	2b01      	cmp	r3, #1
 800b978:	b2dd      	uxtb	r5, r3
 800b97a:	d001      	beq.n	800b980 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
 800b97c:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
 800b97e:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b980:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b982:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800b984:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800b988:	f000 fec2 	bl	800c710 <FMC_SDRAM_ProgramRefreshRate>
    hsdram->State = HAL_SDRAM_STATE_READY;
 800b98c:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  return HAL_OK;
 800b990:	2000      	movs	r0, #0
}
 800b992:	bd38      	pop	{r3, r4, r5, pc}

0800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 800b994:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b998:	b082      	sub	sp, #8
 800b99a:	461d      	mov	r5, r3
 800b99c:	4616      	mov	r6, r2
 800b99e:	460c      	mov	r4, r1
 800b9a0:	4607      	mov	r7, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 800b9a2:	f7fd fb69 	bl	8009078 <HAL_GetTick>
 800b9a6:	4435      	add	r5, r6
 800b9a8:	1a2d      	subs	r5, r5, r0
  tmp_tickstart = HAL_GetTick();
 800b9aa:	f7fd fb65 	bl	8009078 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b9ae:	4b27      	ldr	r3, [pc, #156]	; (800ba4c <SPI_WaitFlagStateUntilTimeout.constprop.0+0xb8>)
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	f3c3 33cb 	ubfx	r3, r3, #15, #12
 800b9b6:	fb05 f303 	mul.w	r3, r5, r3
  tmp_tickstart = HAL_GetTick();
 800b9ba:	4680      	mov	r8, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800b9bc:	9301      	str	r3, [sp, #4]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9be:	1c73      	adds	r3, r6, #1
 800b9c0:	6839      	ldr	r1, [r7, #0]
 800b9c2:	d107      	bne.n	800b9d4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x40>
 800b9c4:	688b      	ldr	r3, [r1, #8]
 800b9c6:	ea34 0303 	bics.w	r3, r4, r3
 800b9ca:	d0fb      	beq.n	800b9c4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x30>
      }
      count--;
    }
  }

  return HAL_OK;
 800b9cc:	2000      	movs	r0, #0
}
 800b9ce:	b002      	add	sp, #8
 800b9d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800b9d4:	688b      	ldr	r3, [r1, #8]
 800b9d6:	ea34 0303 	bics.w	r3, r4, r3
 800b9da:	d1f7      	bne.n	800b9cc <SPI_WaitFlagStateUntilTimeout.constprop.0+0x38>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800b9dc:	f7fd fb4c 	bl	8009078 <HAL_GetTick>
 800b9e0:	eba0 0008 	sub.w	r0, r0, r8
 800b9e4:	42a8      	cmp	r0, r5
 800b9e6:	d208      	bcs.n	800b9fa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
      if (count == 0U)
 800b9e8:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 800b9ea:	2b00      	cmp	r3, #0
      count--;
 800b9ec:	9b01      	ldr	r3, [sp, #4]
 800b9ee:	f103 33ff 	add.w	r3, r3, #4294967295
        tmp_timeout = 0U;
 800b9f2:	bf08      	it	eq
 800b9f4:	2500      	moveq	r5, #0
      count--;
 800b9f6:	9301      	str	r3, [sp, #4]
 800b9f8:	e7e1      	b.n	800b9be <SPI_WaitFlagStateUntilTimeout.constprop.0+0x2a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800b9fa:	e9d7 3100 	ldrd	r3, r1, [r7]
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800b9fe:	685a      	ldr	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba00:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 800ba04:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800ba08:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba0a:	d013      	beq.n	800ba34 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa0>
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 800ba0c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800ba0e:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 800ba12:	d107      	bne.n	800ba24 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
          SPI_RESET_CRC(hspi);
 800ba14:	681a      	ldr	r2, [r3, #0]
 800ba16:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800ba1a:	601a      	str	r2, [r3, #0]
 800ba1c:	681a      	ldr	r2, [r3, #0]
 800ba1e:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800ba22:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 800ba24:	2201      	movs	r2, #1
        __HAL_UNLOCK(hspi);
 800ba26:	2300      	movs	r3, #0
        hspi->State = HAL_SPI_STATE_READY;
 800ba28:	f887 2051 	strb.w	r2, [r7, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 800ba2c:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 800ba30:	2003      	movs	r0, #3
 800ba32:	e7cc      	b.n	800b9ce <SPI_WaitFlagStateUntilTimeout.constprop.0+0x3a>
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba34:	68ba      	ldr	r2, [r7, #8]
 800ba36:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba3a:	d002      	beq.n	800ba42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba3c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba40:	d1e4      	bne.n	800ba0c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
          __HAL_SPI_DISABLE(hspi);
 800ba42:	681a      	ldr	r2, [r3, #0]
 800ba44:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800ba48:	601a      	str	r2, [r3, #0]
 800ba4a:	e7df      	b.n	800ba0c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x78>
 800ba4c:	20000078 	.word	0x20000078

0800ba50 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 800ba50:	b538      	push	{r3, r4, r5, lr}
 800ba52:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba54:	6842      	ldr	r2, [r0, #4]
 800ba56:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 800ba5a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba5c:	d006      	beq.n	800ba6c <SPI_EndRxTransaction+0x1c>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba5e:	460a      	mov	r2, r1
 800ba60:	2101      	movs	r1, #1
 800ba62:	f7ff ff97 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba66:	b978      	cbnz	r0, 800ba88 <SPI_EndRxTransaction+0x38>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 800ba68:	2000      	movs	r0, #0
}
 800ba6a:	bd38      	pop	{r3, r4, r5, pc}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800ba6c:	6882      	ldr	r2, [r0, #8]
 800ba6e:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800ba72:	d01c      	beq.n	800baae <SPI_EndRxTransaction+0x5e>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800ba74:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800ba78:	d00c      	beq.n	800ba94 <SPI_EndRxTransaction+0x44>
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800ba7a:	460a      	mov	r2, r1
 800ba7c:	4620      	mov	r0, r4
 800ba7e:	2180      	movs	r1, #128	; 0x80
 800ba80:	f7ff ff88 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800ba84:	2800      	cmp	r0, #0
 800ba86:	d0ef      	beq.n	800ba68 <SPI_EndRxTransaction+0x18>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ba88:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800ba8a:	f043 0320 	orr.w	r3, r3, #32
      return HAL_TIMEOUT;
 800ba8e:	2003      	movs	r0, #3
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800ba90:	6563      	str	r3, [r4, #84]	; 0x54
}
 800ba92:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_SPI_DISABLE(hspi);
 800ba94:	6805      	ldr	r5, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800ba96:	460a      	mov	r2, r1
    __HAL_SPI_DISABLE(hspi);
 800ba98:	6829      	ldr	r1, [r5, #0]
 800ba9a:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800ba9e:	6029      	str	r1, [r5, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 800baa0:	2101      	movs	r1, #1
 800baa2:	f7ff ff77 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800baa6:	2800      	cmp	r0, #0
 800baa8:	d1ee      	bne.n	800ba88 <SPI_EndRxTransaction+0x38>
  return HAL_OK;
 800baaa:	2000      	movs	r0, #0
 800baac:	e7dd      	b.n	800ba6a <SPI_EndRxTransaction+0x1a>
    __HAL_SPI_DISABLE(hspi);
 800baae:	6800      	ldr	r0, [r0, #0]
 800bab0:	6802      	ldr	r2, [r0, #0]
 800bab2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800bab6:	6002      	str	r2, [r0, #0]
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bab8:	460a      	mov	r2, r1
 800baba:	4620      	mov	r0, r4
 800babc:	2180      	movs	r1, #128	; 0x80
 800babe:	f7ff ff69 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bac2:	2800      	cmp	r0, #0
 800bac4:	d0d0      	beq.n	800ba68 <SPI_EndRxTransaction+0x18>
 800bac6:	e7df      	b.n	800ba88 <SPI_EndRxTransaction+0x38>

0800bac8 <HAL_SPI_Init>:
  if (hspi == NULL)
 800bac8:	2800      	cmp	r0, #0
 800baca:	d05c      	beq.n	800bb86 <HAL_SPI_Init+0xbe>
{
 800bacc:	b570      	push	{r4, r5, r6, lr}
 800bace:	4604      	mov	r4, r0
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800bad0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800bad2:	2800      	cmp	r0, #0
 800bad4:	d047      	beq.n	800bb66 <HAL_SPI_Init+0x9e>
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800bad6:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800bad8:	e9c4 3304 	strd	r3, r3, [r4, #16]
  if (hspi->State == HAL_SPI_STATE_RESET)
 800badc:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800bae0:	2200      	movs	r2, #0
 800bae2:	62a2      	str	r2, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 800bae4:	f003 01ff 	and.w	r1, r3, #255	; 0xff
 800bae8:	2b00      	cmp	r3, #0
 800baea:	d042      	beq.n	800bb72 <HAL_SPI_Init+0xaa>
 800baec:	4694      	mov	ip, r2
  __HAL_SPI_DISABLE(hspi);
 800baee:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800baf0:	68a5      	ldr	r5, [r4, #8]
 800baf2:	69a2      	ldr	r2, [r4, #24]
 800baf4:	6a26      	ldr	r6, [r4, #32]
  hspi->State = HAL_SPI_STATE_BUSY;
 800baf6:	2302      	movs	r3, #2
 800baf8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800bafc:	680b      	ldr	r3, [r1, #0]
 800bafe:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bb02:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb04:	6863      	ldr	r3, [r4, #4]
 800bb06:	f405 4504 	and.w	r5, r5, #33792	; 0x8400
 800bb0a:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800bb0e:	432b      	orrs	r3, r5
 800bb10:	68e5      	ldr	r5, [r4, #12]
 800bb12:	f405 6500 	and.w	r5, r5, #2048	; 0x800
 800bb16:	432b      	orrs	r3, r5
 800bb18:	6925      	ldr	r5, [r4, #16]
 800bb1a:	f005 0502 	and.w	r5, r5, #2
 800bb1e:	432b      	orrs	r3, r5
 800bb20:	6965      	ldr	r5, [r4, #20]
 800bb22:	f005 0501 	and.w	r5, r5, #1
 800bb26:	432b      	orrs	r3, r5
 800bb28:	69e5      	ldr	r5, [r4, #28]
 800bb2a:	f006 0e80 	and.w	lr, r6, #128	; 0x80
 800bb2e:	f402 7600 	and.w	r6, r2, #512	; 0x200
 800bb32:	f005 0538 	and.w	r5, r5, #56	; 0x38
 800bb36:	4333      	orrs	r3, r6
 800bb38:	432b      	orrs	r3, r5
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb3a:	0c12      	lsrs	r2, r2, #16
 800bb3c:	f000 0010 	and.w	r0, r0, #16
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb40:	ea43 030e 	orr.w	r3, r3, lr
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb44:	f002 0204 	and.w	r2, r2, #4
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb48:	ea43 030c 	orr.w	r3, r3, ip
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb4c:	4302      	orrs	r2, r0
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb4e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb50:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb52:	69cb      	ldr	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb54:	2000      	movs	r0, #0
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb56:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
  hspi->State     = HAL_SPI_STATE_READY;
 800bb5a:	2201      	movs	r2, #1
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800bb5c:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800bb5e:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800bb60:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
}
 800bb64:	bd70      	pop	{r4, r5, r6, pc}
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bb66:	6863      	ldr	r3, [r4, #4]
 800bb68:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800bb6c:	d0b6      	beq.n	800badc <HAL_SPI_Init+0x14>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800bb6e:	61e0      	str	r0, [r4, #28]
 800bb70:	e7b4      	b.n	800badc <HAL_SPI_Init+0x14>
    HAL_SPI_MspInit(hspi);
 800bb72:	4620      	mov	r0, r4
    hspi->Lock = HAL_UNLOCKED;
 800bb74:	f884 1050 	strb.w	r1, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 800bb78:	f7f6 fac6 	bl	8002108 <HAL_SPI_MspInit>
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800bb7c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800bb80:	f403 5c00 	and.w	ip, r3, #8192	; 0x2000
 800bb84:	e7b3      	b.n	800baee <HAL_SPI_Init+0x26>
    return HAL_ERROR;
 800bb86:	2001      	movs	r0, #1
}
 800bb88:	4770      	bx	lr
 800bb8a:	bf00      	nop

0800bb8c <HAL_SPI_Transmit>:
{
 800bb8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb90:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bb92:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bb96:	2801      	cmp	r0, #1
{
 800bb98:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bb9a:	f000 8085 	beq.w	800bca8 <HAL_SPI_Transmit+0x11c>
 800bb9e:	461d      	mov	r5, r3
 800bba0:	2301      	movs	r3, #1
 800bba2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bba6:	4688      	mov	r8, r1
 800bba8:	4617      	mov	r7, r2
 800bbaa:	f7fd fa65 	bl	8009078 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800bbae:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800bbb2:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800bbb4:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800bbb6:	b2d8      	uxtb	r0, r3
 800bbb8:	d009      	beq.n	800bbce <HAL_SPI_Transmit+0x42>
    errorcode = HAL_BUSY;
 800bbba:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800bbbc:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800bbbe:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800bbc0:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800bbc4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800bbc8:	b002      	add	sp, #8
 800bbca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800bbce:	f1b8 0f00 	cmp.w	r8, #0
 800bbd2:	d0f3      	beq.n	800bbbc <HAL_SPI_Transmit+0x30>
 800bbd4:	2f00      	cmp	r7, #0
 800bbd6:	d0f1      	beq.n	800bbbc <HAL_SPI_Transmit+0x30>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbd8:	68a2      	ldr	r2, [r4, #8]
    __HAL_SPI_DISABLE(hspi);
 800bbda:	6820      	ldr	r0, [r4, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 800bbdc:	f8c4 8030 	str.w	r8, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bbe0:	2300      	movs	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bbe2:	2103      	movs	r1, #3
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbe4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800bbe8:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->RxISR       = NULL;
 800bbec:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800bbf0:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxXferSize  = Size;
 800bbf2:	86a7      	strh	r7, [r4, #52]	; 0x34
  hspi->TxXferCount = Size;
 800bbf4:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800bbf6:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 800bbf8:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 800bbfa:	87e3      	strh	r3, [r4, #62]	; 0x3e
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800bbfc:	f000 8085 	beq.w	800bd0a <HAL_SPI_Transmit+0x17e>
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bc00:	6803      	ldr	r3, [r0, #0]
 800bc02:	065b      	lsls	r3, r3, #25
    __HAL_SPI_DISABLE(hspi);
 800bc04:	4602      	mov	r2, r0
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800bc06:	d403      	bmi.n	800bc10 <HAL_SPI_Transmit+0x84>
    __HAL_SPI_ENABLE(hspi);
 800bc08:	6803      	ldr	r3, [r0, #0]
 800bc0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bc0e:	6003      	str	r3, [r0, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800bc10:	68e3      	ldr	r3, [r4, #12]
 800bc12:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bc16:	d04b      	beq.n	800bcb0 <HAL_SPI_Transmit+0x124>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bc18:	6863      	ldr	r3, [r4, #4]
 800bc1a:	2b00      	cmp	r3, #0
 800bc1c:	f000 8097 	beq.w	800bd4e <HAL_SPI_Transmit+0x1c2>
 800bc20:	2f01      	cmp	r7, #1
 800bc22:	f000 8094 	beq.w	800bd4e <HAL_SPI_Transmit+0x1c2>
    while (hspi->TxXferCount > 0U)
 800bc26:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bc28:	b29b      	uxth	r3, r3
 800bc2a:	b1ab      	cbz	r3, 800bc58 <HAL_SPI_Transmit+0xcc>
 800bc2c:	1c68      	adds	r0, r5, #1
 800bc2e:	f040 8083 	bne.w	800bd38 <HAL_SPI_Transmit+0x1ac>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bc32:	6823      	ldr	r3, [r4, #0]
 800bc34:	689a      	ldr	r2, [r3, #8]
 800bc36:	0791      	lsls	r1, r2, #30
 800bc38:	f140 8094 	bpl.w	800bd64 <HAL_SPI_Transmit+0x1d8>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bc3c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bc3e:	7812      	ldrb	r2, [r2, #0]
 800bc40:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bc42:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc44:	6b23      	ldr	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bc46:	3901      	subs	r1, #1
 800bc48:	b289      	uxth	r1, r1
 800bc4a:	86e1      	strh	r1, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bc4c:	8ee1      	ldrh	r1, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc4e:	3301      	adds	r3, #1
    while (hspi->TxXferCount > 0U)
 800bc50:	b289      	uxth	r1, r1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bc52:	6323      	str	r3, [r4, #48]	; 0x30
    while (hspi->TxXferCount > 0U)
 800bc54:	2900      	cmp	r1, #0
 800bc56:	d1ec      	bne.n	800bc32 <HAL_SPI_Transmit+0xa6>
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc58:	6861      	ldr	r1, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc5a:	4b5b      	ldr	r3, [pc, #364]	; (800bdc8 <HAL_SPI_Transmit+0x23c>)
 800bc5c:	4a5b      	ldr	r2, [pc, #364]	; (800bdcc <HAL_SPI_Transmit+0x240>)
 800bc5e:	681b      	ldr	r3, [r3, #0]
 800bc60:	fba2 2303 	umull	r2, r3, r2, r3
 800bc64:	0d5b      	lsrs	r3, r3, #21
 800bc66:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800bc6a:	fb02 f303 	mul.w	r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc6e:	f5b1 7f82 	cmp.w	r1, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bc72:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bc74:	d107      	bne.n	800bc86 <HAL_SPI_Transmit+0xfa>
 800bc76:	e098      	b.n	800bdaa <HAL_SPI_Transmit+0x21e>
    {
      if (count == 0U)
      {
        break;
      }
      count--;
 800bc78:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc7a:	6822      	ldr	r2, [r4, #0]
      count--;
 800bc7c:	3b01      	subs	r3, #1
 800bc7e:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bc80:	6893      	ldr	r3, [r2, #8]
 800bc82:	061b      	lsls	r3, r3, #24
 800bc84:	d502      	bpl.n	800bc8c <HAL_SPI_Transmit+0x100>
      if (count == 0U)
 800bc86:	9b01      	ldr	r3, [sp, #4]
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	d1f5      	bne.n	800bc78 <HAL_SPI_Transmit+0xec>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bc8c:	68a3      	ldr	r3, [r4, #8]
 800bc8e:	b933      	cbnz	r3, 800bc9e <HAL_SPI_Transmit+0x112>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bc90:	6822      	ldr	r2, [r4, #0]
 800bc92:	9300      	str	r3, [sp, #0]
 800bc94:	68d3      	ldr	r3, [r2, #12]
 800bc96:	9300      	str	r3, [sp, #0]
 800bc98:	6893      	ldr	r3, [r2, #8]
 800bc9a:	9300      	str	r3, [sp, #0]
 800bc9c:	9b00      	ldr	r3, [sp, #0]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800bc9e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800bca0:	3800      	subs	r0, #0
 800bca2:	bf18      	it	ne
 800bca4:	2001      	movne	r0, #1
error:
 800bca6:	e789      	b.n	800bbbc <HAL_SPI_Transmit+0x30>
  __HAL_LOCK(hspi);
 800bca8:	2002      	movs	r0, #2
}
 800bcaa:	b002      	add	sp, #8
 800bcac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bcb0:	6861      	ldr	r1, [r4, #4]
 800bcb2:	2900      	cmp	r1, #0
 800bcb4:	d176      	bne.n	800bda4 <HAL_SPI_Transmit+0x218>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcb6:	4643      	mov	r3, r8
 800bcb8:	f833 7b02 	ldrh.w	r7, [r3], #2
 800bcbc:	60c7      	str	r7, [r0, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bcbe:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bcc0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcc2:	3b01      	subs	r3, #1
 800bcc4:	b29b      	uxth	r3, r3
 800bcc6:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bcc8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcca:	b29b      	uxth	r3, r3
 800bccc:	2b00      	cmp	r3, #0
 800bcce:	d0c4      	beq.n	800bc5a <HAL_SPI_Transmit+0xce>
 800bcd0:	1c6b      	adds	r3, r5, #1
 800bcd2:	d15e      	bne.n	800bd92 <HAL_SPI_Transmit+0x206>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bcd4:	6883      	ldr	r3, [r0, #8]
 800bcd6:	079f      	lsls	r7, r3, #30
 800bcd8:	d50f      	bpl.n	800bcfa <HAL_SPI_Transmit+0x16e>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bcda:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bcdc:	f832 3b02 	ldrh.w	r3, [r2], #2
 800bce0:	60c3      	str	r3, [r0, #12]
        hspi->TxXferCount--;
 800bce2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bce4:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bce6:	3b01      	subs	r3, #1
 800bce8:	b29b      	uxth	r3, r3
 800bcea:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bcec:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bcee:	b29b      	uxth	r3, r3
 800bcf0:	2b00      	cmp	r3, #0
 800bcf2:	d0b1      	beq.n	800bc58 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bcf4:	6883      	ldr	r3, [r0, #8]
 800bcf6:	079f      	lsls	r7, r3, #30
 800bcf8:	d4ef      	bmi.n	800bcda <HAL_SPI_Transmit+0x14e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bcfa:	f7fd f9bd 	bl	8009078 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bcfe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd00:	b29b      	uxth	r3, r3
 800bd02:	2b00      	cmp	r3, #0
 800bd04:	d0a8      	beq.n	800bc58 <HAL_SPI_Transmit+0xcc>
 800bd06:	6820      	ldr	r0, [r4, #0]
 800bd08:	e7e4      	b.n	800bcd4 <HAL_SPI_Transmit+0x148>
    __HAL_SPI_DISABLE(hspi);
 800bd0a:	6803      	ldr	r3, [r0, #0]
 800bd0c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bd10:	6003      	str	r3, [r0, #0]
    SPI_1LINE_TX(hspi);
 800bd12:	6803      	ldr	r3, [r0, #0]
 800bd14:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800bd18:	6003      	str	r3, [r0, #0]
 800bd1a:	e771      	b.n	800bc00 <HAL_SPI_Transmit+0x74>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd1c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800bd1e:	7812      	ldrb	r2, [r2, #0]
 800bd20:	731a      	strb	r2, [r3, #12]
        hspi->TxXferCount--;
 800bd22:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd24:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd26:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd28:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bd2a:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd2c:	6322      	str	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd2e:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd32:	b29b      	uxth	r3, r3
 800bd34:	2b00      	cmp	r3, #0
 800bd36:	d08f      	beq.n	800bc58 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd38:	6823      	ldr	r3, [r4, #0]
 800bd3a:	689a      	ldr	r2, [r3, #8]
 800bd3c:	0792      	lsls	r2, r2, #30
 800bd3e:	d4ed      	bmi.n	800bd1c <HAL_SPI_Transmit+0x190>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd40:	f7fd f99a 	bl	8009078 <HAL_GetTick>
 800bd44:	1b80      	subs	r0, r0, r6
 800bd46:	42a8      	cmp	r0, r5
 800bd48:	d3f2      	bcc.n	800bd30 <HAL_SPI_Transmit+0x1a4>
          errorcode = HAL_TIMEOUT;
 800bd4a:	2003      	movs	r0, #3
 800bd4c:	e736      	b.n	800bbbc <HAL_SPI_Transmit+0x30>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bd4e:	f898 3000 	ldrb.w	r3, [r8]
 800bd52:	7303      	strb	r3, [r0, #12]
      hspi->TxXferCount--;
 800bd54:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd56:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd58:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd5a:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bd5c:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bd5e:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bd60:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bd62:	e760      	b.n	800bc26 <HAL_SPI_Transmit+0x9a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd64:	f7fd f988 	bl	8009078 <HAL_GetTick>
    while (hspi->TxXferCount > 0U)
 800bd68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd6a:	b29b      	uxth	r3, r3
 800bd6c:	2b00      	cmp	r3, #0
 800bd6e:	f47f af60 	bne.w	800bc32 <HAL_SPI_Transmit+0xa6>
 800bd72:	e771      	b.n	800bc58 <HAL_SPI_Transmit+0xcc>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bd74:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bd76:	f831 3b02 	ldrh.w	r3, [r1], #2
 800bd7a:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800bd7c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bd7e:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bd80:	3b01      	subs	r3, #1
 800bd82:	b29b      	uxth	r3, r3
 800bd84:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800bd86:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bd88:	b29b      	uxth	r3, r3
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	f43f af64 	beq.w	800bc58 <HAL_SPI_Transmit+0xcc>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800bd90:	6822      	ldr	r2, [r4, #0]
 800bd92:	6893      	ldr	r3, [r2, #8]
 800bd94:	0799      	lsls	r1, r3, #30
 800bd96:	d4ed      	bmi.n	800bd74 <HAL_SPI_Transmit+0x1e8>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800bd98:	f7fd f96e 	bl	8009078 <HAL_GetTick>
 800bd9c:	1b80      	subs	r0, r0, r6
 800bd9e:	42a8      	cmp	r0, r5
 800bda0:	d3f1      	bcc.n	800bd86 <HAL_SPI_Transmit+0x1fa>
 800bda2:	e7d2      	b.n	800bd4a <HAL_SPI_Transmit+0x1be>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bda4:	2f01      	cmp	r7, #1
 800bda6:	d18f      	bne.n	800bcc8 <HAL_SPI_Transmit+0x13c>
 800bda8:	e785      	b.n	800bcb6 <HAL_SPI_Transmit+0x12a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800bdaa:	4633      	mov	r3, r6
 800bdac:	462a      	mov	r2, r5
 800bdae:	2180      	movs	r1, #128	; 0x80
 800bdb0:	4620      	mov	r0, r4
 800bdb2:	f7ff fdef 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800bdb6:	2800      	cmp	r0, #0
 800bdb8:	f43f af68 	beq.w	800bc8c <HAL_SPI_Transmit+0x100>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdbc:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bdbe:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800bdc0:	4313      	orrs	r3, r2
 800bdc2:	6563      	str	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800bdc4:	6562      	str	r2, [r4, #84]	; 0x54
 800bdc6:	e761      	b.n	800bc8c <HAL_SPI_Transmit+0x100>
 800bdc8:	20000078 	.word	0x20000078
 800bdcc:	165e9f81 	.word	0x165e9f81

0800bdd0 <HAL_SPI_TransmitReceive>:
{
 800bdd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdd4:	4604      	mov	r4, r0
  __HAL_LOCK(hspi);
 800bdd6:	f890 0050 	ldrb.w	r0, [r0, #80]	; 0x50
 800bdda:	2801      	cmp	r0, #1
{
 800bddc:	b082      	sub	sp, #8
  __HAL_LOCK(hspi);
 800bdde:	f000 80ac 	beq.w	800bf3a <HAL_SPI_TransmitReceive+0x16a>
 800bde2:	461e      	mov	r6, r3
 800bde4:	2301      	movs	r3, #1
 800bde6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800bdea:	4690      	mov	r8, r2
 800bdec:	460f      	mov	r7, r1
 800bdee:	f7fd f943 	bl	8009078 <HAL_GetTick>
 800bdf2:	4605      	mov	r5, r0
  tmp_state           = hspi->State;
 800bdf4:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 800bdf8:	6863      	ldr	r3, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bdfa:	2801      	cmp	r0, #1
  tmp_state           = hspi->State;
 800bdfc:	b2c2      	uxtb	r2, r0
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 800bdfe:	d011      	beq.n	800be24 <HAL_SPI_TransmitReceive+0x54>
 800be00:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800be04:	d009      	beq.n	800be1a <HAL_SPI_TransmitReceive+0x4a>
    errorcode = HAL_BUSY;
 800be06:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800be08:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800be0a:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800be0c:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800be10:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800be14:	b002      	add	sp, #8
 800be16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 800be1a:	68a1      	ldr	r1, [r4, #8]
 800be1c:	2900      	cmp	r1, #0
 800be1e:	d1f2      	bne.n	800be06 <HAL_SPI_TransmitReceive+0x36>
 800be20:	2a04      	cmp	r2, #4
 800be22:	d1f0      	bne.n	800be06 <HAL_SPI_TransmitReceive+0x36>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800be24:	2f00      	cmp	r7, #0
 800be26:	f000 808c 	beq.w	800bf42 <HAL_SPI_TransmitReceive+0x172>
 800be2a:	f1b8 0f00 	cmp.w	r8, #0
 800be2e:	f000 8088 	beq.w	800bf42 <HAL_SPI_TransmitReceive+0x172>
 800be32:	2e00      	cmp	r6, #0
 800be34:	f000 8085 	beq.w	800bf42 <HAL_SPI_TransmitReceive+0x172>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be38:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 800be3c:	f8c4 8038 	str.w	r8, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800be40:	2a04      	cmp	r2, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 800be42:	bf1c      	itt	ne
 800be44:	2205      	movne	r2, #5
 800be46:	f884 2051 	strbne.w	r2, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800be4a:	2200      	movs	r2, #0
 800be4c:	6562      	str	r2, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 800be4e:	e9c4 2210 	strd	r2, r2, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be52:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferCount = Size;
 800be54:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800be56:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be58:	6811      	ldr	r1, [r2, #0]
  hspi->RxXferSize  = Size;
 800be5a:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be5c:	0649      	lsls	r1, r1, #25
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 800be5e:	6327      	str	r7, [r4, #48]	; 0x30
  hspi->TxXferSize  = Size;
 800be60:	86a6      	strh	r6, [r4, #52]	; 0x34
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800be62:	d403      	bmi.n	800be6c <HAL_SPI_TransmitReceive+0x9c>
    __HAL_SPI_ENABLE(hspi);
 800be64:	6811      	ldr	r1, [r2, #0]
 800be66:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800be6a:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800be6c:	68e1      	ldr	r1, [r4, #12]
 800be6e:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800be72:	f000 809e 	beq.w	800bfb2 <HAL_SPI_TransmitReceive+0x1e2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800be76:	2b00      	cmp	r3, #0
 800be78:	f000 8091 	beq.w	800bf9e <HAL_SPI_TransmitReceive+0x1ce>
 800be7c:	2e01      	cmp	r6, #1
 800be7e:	f000 808e 	beq.w	800bf9e <HAL_SPI_TransmitReceive+0x1ce>
 800be82:	9b08      	ldr	r3, [sp, #32]
 800be84:	3301      	adds	r3, #1
        txallowed = 1U;
 800be86:	f04f 0601 	mov.w	r6, #1
 800be8a:	d028      	beq.n	800bede <HAL_SPI_TransmitReceive+0x10e>
 800be8c:	e05b      	b.n	800bf46 <HAL_SPI_TransmitReceive+0x176>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800be8e:	6821      	ldr	r1, [r4, #0]
 800be90:	688b      	ldr	r3, [r1, #8]
 800be92:	0798      	lsls	r0, r3, #30
 800be94:	d50f      	bpl.n	800beb6 <HAL_SPI_TransmitReceive+0xe6>
 800be96:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800be98:	b29b      	uxth	r3, r3
 800be9a:	b163      	cbz	r3, 800beb6 <HAL_SPI_TransmitReceive+0xe6>
 800be9c:	b15e      	cbz	r6, 800beb6 <HAL_SPI_TransmitReceive+0xe6>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800be9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bea0:	781b      	ldrb	r3, [r3, #0]
 800bea2:	730b      	strb	r3, [r1, #12]
        hspi->TxXferCount--;
 800bea4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bea6:	6b22      	ldr	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bea8:	6821      	ldr	r1, [r4, #0]
        hspi->TxXferCount--;
 800beaa:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800beac:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800beae:	b29b      	uxth	r3, r3
        txallowed = 0U;
 800beb0:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800beb2:	86e3      	strh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800beb4:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800beb6:	688a      	ldr	r2, [r1, #8]
 800beb8:	f012 0201 	ands.w	r2, r2, #1
 800bebc:	d00d      	beq.n	800beda <HAL_SPI_TransmitReceive+0x10a>
 800bebe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bec0:	b29b      	uxth	r3, r3
 800bec2:	b153      	cbz	r3, 800beda <HAL_SPI_TransmitReceive+0x10a>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800bec4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800bec6:	68c9      	ldr	r1, [r1, #12]
 800bec8:	7019      	strb	r1, [r3, #0]
        hspi->RxXferCount--;
 800beca:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800becc:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bece:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr++;
 800bed0:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800bed2:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr++;
 800bed4:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800bed6:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 800bed8:	4616      	mov	r6, r2
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800beda:	f7fd f8cd 	bl	8009078 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bede:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bee0:	b292      	uxth	r2, r2
 800bee2:	2a00      	cmp	r2, #0
 800bee4:	d1d3      	bne.n	800be8e <HAL_SPI_TransmitReceive+0xbe>
 800bee6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bee8:	b29b      	uxth	r3, r3
 800beea:	2b00      	cmp	r3, #0
 800beec:	d1cf      	bne.n	800be8e <HAL_SPI_TransmitReceive+0xbe>
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800beee:	4b79      	ldr	r3, [pc, #484]	; (800c0d4 <HAL_SPI_TransmitReceive+0x304>)
 800bef0:	4a79      	ldr	r2, [pc, #484]	; (800c0d8 <HAL_SPI_TransmitReceive+0x308>)
 800bef2:	681b      	ldr	r3, [r3, #0]
 800bef4:	fba2 2303 	umull	r2, r3, r2, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bef8:	6862      	ldr	r2, [r4, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800befa:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800befe:	0d5b      	lsrs	r3, r3, #21
 800bf00:	fb01 f303 	mul.w	r3, r1, r3
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf04:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 800bf08:	9301      	str	r3, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800bf0a:	d107      	bne.n	800bf1c <HAL_SPI_TransmitReceive+0x14c>
 800bf0c:	e0d2      	b.n	800c0b4 <HAL_SPI_TransmitReceive+0x2e4>
      count--;
 800bf0e:	9b01      	ldr	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bf10:	6822      	ldr	r2, [r4, #0]
      count--;
 800bf12:	3b01      	subs	r3, #1
 800bf14:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800bf16:	6893      	ldr	r3, [r2, #8]
 800bf18:	061b      	lsls	r3, r3, #24
 800bf1a:	d502      	bpl.n	800bf22 <HAL_SPI_TransmitReceive+0x152>
      if (count == 0U)
 800bf1c:	9b01      	ldr	r3, [sp, #4]
 800bf1e:	2b00      	cmp	r3, #0
 800bf20:	d1f5      	bne.n	800bf0e <HAL_SPI_TransmitReceive+0x13e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800bf22:	68a0      	ldr	r0, [r4, #8]
 800bf24:	2800      	cmp	r0, #0
 800bf26:	f040 8082 	bne.w	800c02e <HAL_SPI_TransmitReceive+0x25e>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800bf2a:	6823      	ldr	r3, [r4, #0]
 800bf2c:	9000      	str	r0, [sp, #0]
 800bf2e:	68da      	ldr	r2, [r3, #12]
 800bf30:	9200      	str	r2, [sp, #0]
 800bf32:	689b      	ldr	r3, [r3, #8]
 800bf34:	9300      	str	r3, [sp, #0]
 800bf36:	9b00      	ldr	r3, [sp, #0]
 800bf38:	e766      	b.n	800be08 <HAL_SPI_TransmitReceive+0x38>
  __HAL_LOCK(hspi);
 800bf3a:	2002      	movs	r0, #2
}
 800bf3c:	b002      	add	sp, #8
 800bf3e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    errorcode = HAL_ERROR;
 800bf42:	2001      	movs	r0, #1
 800bf44:	e760      	b.n	800be08 <HAL_SPI_TransmitReceive+0x38>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800bf46:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf48:	b29b      	uxth	r3, r3
 800bf4a:	b91b      	cbnz	r3, 800bf54 <HAL_SPI_TransmitReceive+0x184>
 800bf4c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800bf4e:	b29b      	uxth	r3, r3
 800bf50:	2b00      	cmp	r3, #0
 800bf52:	d0cc      	beq.n	800beee <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bf54:	6822      	ldr	r2, [r4, #0]
 800bf56:	6893      	ldr	r3, [r2, #8]
 800bf58:	0799      	lsls	r1, r3, #30
 800bf5a:	d50f      	bpl.n	800bf7c <HAL_SPI_TransmitReceive+0x1ac>
 800bf5c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800bf5e:	b29b      	uxth	r3, r3
 800bf60:	b163      	cbz	r3, 800bf7c <HAL_SPI_TransmitReceive+0x1ac>
 800bf62:	b15e      	cbz	r6, 800bf7c <HAL_SPI_TransmitReceive+0x1ac>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800bf64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800bf66:	781b      	ldrb	r3, [r3, #0]
 800bf68:	7313      	strb	r3, [r2, #12]
        hspi->TxXferCount--;
 800bf6a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr++;
 800bf6c:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bf6e:	3b01      	subs	r3, #1
        hspi->pTxBuffPtr++;
 800bf70:	3201      	adds	r2, #1
        hspi->TxXferCount--;
 800bf72:	b29b      	uxth	r3, r3
        hspi->pTxBuffPtr++;
 800bf74:	6322      	str	r2, [r4, #48]	; 0x30
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf76:	6822      	ldr	r2, [r4, #0]
        hspi->TxXferCount--;
 800bf78:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800bf7a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bf7c:	6893      	ldr	r3, [r2, #8]
 800bf7e:	f013 0301 	ands.w	r3, r3, #1
 800bf82:	d004      	beq.n	800bf8e <HAL_SPI_TransmitReceive+0x1be>
 800bf84:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800bf86:	b289      	uxth	r1, r1
 800bf88:	2900      	cmp	r1, #0
 800bf8a:	f040 8087 	bne.w	800c09c <HAL_SPI_TransmitReceive+0x2cc>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800bf8e:	f7fd f873 	bl	8009078 <HAL_GetTick>
 800bf92:	9b08      	ldr	r3, [sp, #32]
 800bf94:	1b40      	subs	r0, r0, r5
 800bf96:	4298      	cmp	r0, r3
 800bf98:	d3d5      	bcc.n	800bf46 <HAL_SPI_TransmitReceive+0x176>
        errorcode = HAL_TIMEOUT;
 800bf9a:	2003      	movs	r0, #3
 800bf9c:	e734      	b.n	800be08 <HAL_SPI_TransmitReceive+0x38>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800bf9e:	783b      	ldrb	r3, [r7, #0]
 800bfa0:	7313      	strb	r3, [r2, #12]
      hspi->TxXferCount--;
 800bfa2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfa4:	6b22      	ldr	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfa6:	3b01      	subs	r3, #1
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfa8:	3201      	adds	r2, #1
      hspi->TxXferCount--;
 800bfaa:	b29b      	uxth	r3, r3
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800bfac:	6322      	str	r2, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfae:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bfb0:	e767      	b.n	800be82 <HAL_SPI_TransmitReceive+0xb2>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800bfb2:	2b00      	cmp	r3, #0
 800bfb4:	d13d      	bne.n	800c032 <HAL_SPI_TransmitReceive+0x262>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfb6:	f837 3b02 	ldrh.w	r3, [r7], #2
 800bfba:	60d3      	str	r3, [r2, #12]
      hspi->TxXferCount--;
 800bfbc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfbe:	6327      	str	r7, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800bfc0:	3b01      	subs	r3, #1
 800bfc2:	b29b      	uxth	r3, r3
 800bfc4:	86e3      	strh	r3, [r4, #54]	; 0x36
 800bfc6:	9b08      	ldr	r3, [sp, #32]
 800bfc8:	3301      	adds	r3, #1
{
 800bfca:	f04f 0601 	mov.w	r6, #1
 800bfce:	d025      	beq.n	800c01c <HAL_SPI_TransmitReceive+0x24c>
 800bfd0:	e032      	b.n	800c038 <HAL_SPI_TransmitReceive+0x268>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800bfd2:	6823      	ldr	r3, [r4, #0]
 800bfd4:	689a      	ldr	r2, [r3, #8]
 800bfd6:	0792      	lsls	r2, r2, #30
 800bfd8:	d50d      	bpl.n	800bff6 <HAL_SPI_TransmitReceive+0x226>
 800bfda:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800bfdc:	b292      	uxth	r2, r2
 800bfde:	b152      	cbz	r2, 800bff6 <HAL_SPI_TransmitReceive+0x226>
 800bfe0:	b14e      	cbz	r6, 800bff6 <HAL_SPI_TransmitReceive+0x226>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800bfe2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800bfe4:	f831 2b02 	ldrh.w	r2, [r1], #2
 800bfe8:	60da      	str	r2, [r3, #12]
        hspi->TxXferCount--;
 800bfea:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800bfec:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800bfee:	3a01      	subs	r2, #1
 800bff0:	b292      	uxth	r2, r2
        txallowed = 0U;
 800bff2:	2600      	movs	r6, #0
        hspi->TxXferCount--;
 800bff4:	86e2      	strh	r2, [r4, #54]	; 0x36
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800bff6:	689a      	ldr	r2, [r3, #8]
 800bff8:	f012 0201 	ands.w	r2, r2, #1
 800bffc:	d00c      	beq.n	800c018 <HAL_SPI_TransmitReceive+0x248>
 800bffe:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c000:	b289      	uxth	r1, r1
 800c002:	b149      	cbz	r1, 800c018 <HAL_SPI_TransmitReceive+0x248>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c004:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c006:	68db      	ldr	r3, [r3, #12]
 800c008:	f821 3b02 	strh.w	r3, [r1], #2
        hspi->RxXferCount--;
 800c00c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c00e:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c010:	3b01      	subs	r3, #1
 800c012:	b29b      	uxth	r3, r3
        txallowed = 1U;
 800c014:	4616      	mov	r6, r2
        hspi->RxXferCount--;
 800c016:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c018:	f7fd f82e 	bl	8009078 <HAL_GetTick>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c01c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c01e:	b29b      	uxth	r3, r3
 800c020:	2b00      	cmp	r3, #0
 800c022:	d1d6      	bne.n	800bfd2 <HAL_SPI_TransmitReceive+0x202>
 800c024:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c026:	b29b      	uxth	r3, r3
 800c028:	2b00      	cmp	r3, #0
 800c02a:	d1d2      	bne.n	800bfd2 <HAL_SPI_TransmitReceive+0x202>
 800c02c:	e75f      	b.n	800beee <HAL_SPI_TransmitReceive+0x11e>
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800c02e:	2000      	movs	r0, #0
 800c030:	e6ea      	b.n	800be08 <HAL_SPI_TransmitReceive+0x38>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800c032:	2e01      	cmp	r6, #1
 800c034:	d1c7      	bne.n	800bfc6 <HAL_SPI_TransmitReceive+0x1f6>
 800c036:	e7be      	b.n	800bfb6 <HAL_SPI_TransmitReceive+0x1e6>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800c038:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c03a:	b29b      	uxth	r3, r3
 800c03c:	b923      	cbnz	r3, 800c048 <HAL_SPI_TransmitReceive+0x278>
 800c03e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c040:	b29b      	uxth	r3, r3
 800c042:	2b00      	cmp	r3, #0
 800c044:	f43f af53 	beq.w	800beee <HAL_SPI_TransmitReceive+0x11e>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800c048:	6822      	ldr	r2, [r4, #0]
 800c04a:	6893      	ldr	r3, [r2, #8]
 800c04c:	079f      	lsls	r7, r3, #30
 800c04e:	d50d      	bpl.n	800c06c <HAL_SPI_TransmitReceive+0x29c>
 800c050:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800c052:	b29b      	uxth	r3, r3
 800c054:	b153      	cbz	r3, 800c06c <HAL_SPI_TransmitReceive+0x29c>
 800c056:	b14e      	cbz	r6, 800c06c <HAL_SPI_TransmitReceive+0x29c>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800c058:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c05a:	f831 3b02 	ldrh.w	r3, [r1], #2
 800c05e:	60d3      	str	r3, [r2, #12]
        hspi->TxXferCount--;
 800c060:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800c062:	6321      	str	r1, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800c064:	3b01      	subs	r3, #1
 800c066:	b29b      	uxth	r3, r3
 800c068:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 800c06a:	2600      	movs	r6, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800c06c:	6893      	ldr	r3, [r2, #8]
 800c06e:	f013 0301 	ands.w	r3, r3, #1
 800c072:	d00c      	beq.n	800c08e <HAL_SPI_TransmitReceive+0x2be>
 800c074:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c076:	b289      	uxth	r1, r1
 800c078:	b149      	cbz	r1, 800c08e <HAL_SPI_TransmitReceive+0x2be>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c07a:	68d1      	ldr	r1, [r2, #12]
 800c07c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c07e:	f822 1b02 	strh.w	r1, [r2], #2
        txallowed = 1U;
 800c082:	461e      	mov	r6, r3
        hspi->RxXferCount--;
 800c084:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c086:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c088:	3b01      	subs	r3, #1
 800c08a:	b29b      	uxth	r3, r3
 800c08c:	87e3      	strh	r3, [r4, #62]	; 0x3e
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800c08e:	f7fc fff3 	bl	8009078 <HAL_GetTick>
 800c092:	9b08      	ldr	r3, [sp, #32]
 800c094:	1b40      	subs	r0, r0, r5
 800c096:	4298      	cmp	r0, r3
 800c098:	d3ce      	bcc.n	800c038 <HAL_SPI_TransmitReceive+0x268>
 800c09a:	e77e      	b.n	800bf9a <HAL_SPI_TransmitReceive+0x1ca>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 800c09c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800c09e:	68d2      	ldr	r2, [r2, #12]
 800c0a0:	700a      	strb	r2, [r1, #0]
        hspi->RxXferCount--;
 800c0a2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr++;
 800c0a4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0a6:	3a01      	subs	r2, #1
        hspi->pRxBuffPtr++;
 800c0a8:	3101      	adds	r1, #1
        hspi->RxXferCount--;
 800c0aa:	b292      	uxth	r2, r2
        hspi->pRxBuffPtr++;
 800c0ac:	63a1      	str	r1, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c0ae:	87e2      	strh	r2, [r4, #62]	; 0x3e
        txallowed = 1U;
 800c0b0:	461e      	mov	r6, r3
 800c0b2:	e76c      	b.n	800bf8e <HAL_SPI_TransmitReceive+0x1be>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800c0b4:	9a08      	ldr	r2, [sp, #32]
 800c0b6:	462b      	mov	r3, r5
 800c0b8:	2180      	movs	r1, #128	; 0x80
 800c0ba:	4620      	mov	r0, r4
 800c0bc:	f7ff fc6a 	bl	800b994 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800c0c0:	2800      	cmp	r0, #0
 800c0c2:	f43f af2e 	beq.w	800bf22 <HAL_SPI_TransmitReceive+0x152>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0c6:	6d63      	ldr	r3, [r4, #84]	; 0x54
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0c8:	2220      	movs	r2, #32
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800c0ca:	4313      	orrs	r3, r2
 800c0cc:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 800c0ce:	2001      	movs	r0, #1
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c0d0:	6562      	str	r2, [r4, #84]	; 0x54
    goto error;
 800c0d2:	e699      	b.n	800be08 <HAL_SPI_TransmitReceive+0x38>
 800c0d4:	20000078 	.word	0x20000078
 800c0d8:	165e9f81 	.word	0x165e9f81

0800c0dc <HAL_SPI_Receive>:
{
 800c0dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c0e0:	6846      	ldr	r6, [r0, #4]
 800c0e2:	f5b6 7f82 	cmp.w	r6, #260	; 0x104
{
 800c0e6:	b082      	sub	sp, #8
 800c0e8:	4604      	mov	r4, r0
 800c0ea:	4690      	mov	r8, r2
 800c0ec:	461d      	mov	r5, r3
 800c0ee:	460f      	mov	r7, r1
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c0f0:	d06e      	beq.n	800c1d0 <HAL_SPI_Receive+0xf4>
  __HAL_LOCK(hspi);
 800c0f2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c0f6:	2b01      	cmp	r3, #1
 800c0f8:	d076      	beq.n	800c1e8 <HAL_SPI_Receive+0x10c>
 800c0fa:	2301      	movs	r3, #1
 800c0fc:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 800c100:	f7fc ffba 	bl	8009078 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800c104:	f894 c051 	ldrb.w	ip, [r4, #81]	; 0x51
 800c108:	f1bc 0f01 	cmp.w	ip, #1
  tickstart = HAL_GetTick();
 800c10c:	4606      	mov	r6, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800c10e:	fa5f f08c 	uxtb.w	r0, ip
 800c112:	d009      	beq.n	800c128 <HAL_SPI_Receive+0x4c>
    errorcode = HAL_BUSY;
 800c114:	2002      	movs	r0, #2
  hspi->State = HAL_SPI_STATE_READY;
 800c116:	2201      	movs	r2, #1
  __HAL_UNLOCK(hspi);
 800c118:	2300      	movs	r3, #0
  hspi->State = HAL_SPI_STATE_READY;
 800c11a:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800c11e:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 800c122:	b002      	add	sp, #8
 800c124:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if ((pData == NULL) || (Size == 0U))
 800c128:	2f00      	cmp	r7, #0
 800c12a:	d0f4      	beq.n	800c116 <HAL_SPI_Receive+0x3a>
 800c12c:	f1b8 0f00 	cmp.w	r8, #0
 800c130:	d0f1      	beq.n	800c116 <HAL_SPI_Receive+0x3a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c132:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800c134:	63a7      	str	r7, [r4, #56]	; 0x38
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c136:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    __HAL_SPI_DISABLE(hspi);
 800c13a:	6822      	ldr	r2, [r4, #0]
  hspi->RxXferSize  = Size;
 800c13c:	f8a4 803c 	strh.w	r8, [r4, #60]	; 0x3c
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c140:	f04f 0300 	mov.w	r3, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 800c144:	f04f 0104 	mov.w	r1, #4
 800c148:	f884 1051 	strb.w	r1, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800c14c:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800c150:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800c152:	6323      	str	r3, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 800c154:	86a3      	strh	r3, [r4, #52]	; 0x34
  hspi->RxXferCount = Size;
 800c156:	f8a4 803e 	strh.w	r8, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 800c15a:	86e3      	strh	r3, [r4, #54]	; 0x36
    __HAL_SPI_DISABLE(hspi);
 800c15c:	4613      	mov	r3, r2
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800c15e:	d107      	bne.n	800c170 <HAL_SPI_Receive+0x94>
    __HAL_SPI_DISABLE(hspi);
 800c160:	6811      	ldr	r1, [r2, #0]
 800c162:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 800c166:	6011      	str	r1, [r2, #0]
    SPI_1LINE_RX(hspi);
 800c168:	6811      	ldr	r1, [r2, #0]
 800c16a:	f421 4180 	bic.w	r1, r1, #16384	; 0x4000
 800c16e:	6011      	str	r1, [r2, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800c170:	6811      	ldr	r1, [r2, #0]
 800c172:	0648      	lsls	r0, r1, #25
 800c174:	d403      	bmi.n	800c17e <HAL_SPI_Receive+0xa2>
    __HAL_SPI_ENABLE(hspi);
 800c176:	6811      	ldr	r1, [r2, #0]
 800c178:	f041 0140 	orr.w	r1, r1, #64	; 0x40
 800c17c:	6011      	str	r1, [r2, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800c17e:	68e1      	ldr	r1, [r4, #12]
 800c180:	2900      	cmp	r1, #0
 800c182:	d054      	beq.n	800c22e <HAL_SPI_Receive+0x152>
    while (hspi->RxXferCount > 0U)
 800c184:	8fe1      	ldrh	r1, [r4, #62]	; 0x3e
 800c186:	b289      	uxth	r1, r1
 800c188:	b1a9      	cbz	r1, 800c1b6 <HAL_SPI_Receive+0xda>
 800c18a:	1c69      	adds	r1, r5, #1
 800c18c:	d13e      	bne.n	800c20c <HAL_SPI_Receive+0x130>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c18e:	6893      	ldr	r3, [r2, #8]
 800c190:	07db      	lsls	r3, r3, #31
 800c192:	d544      	bpl.n	800c21e <HAL_SPI_Receive+0x142>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c194:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800c196:	68d1      	ldr	r1, [r2, #12]
 800c198:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->RxXferCount--;
 800c19c:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c1a0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1a2:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c1a6:	fa1f fc8c 	uxth.w	ip, ip
 800c1aa:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c1ae:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c1b0:	b29b      	uxth	r3, r3
 800c1b2:	2b00      	cmp	r3, #0
 800c1b4:	d1eb      	bne.n	800c18e <HAL_SPI_Receive+0xb2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800c1b6:	4632      	mov	r2, r6
 800c1b8:	4629      	mov	r1, r5
 800c1ba:	4620      	mov	r0, r4
 800c1bc:	f7ff fc48 	bl	800ba50 <SPI_EndRxTransaction>
 800c1c0:	b108      	cbz	r0, 800c1c6 <HAL_SPI_Receive+0xea>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800c1c2:	2320      	movs	r3, #32
 800c1c4:	6563      	str	r3, [r4, #84]	; 0x54
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800c1c6:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800c1c8:	3800      	subs	r0, #0
 800c1ca:	bf18      	it	ne
 800c1cc:	2001      	movne	r0, #1
error :
 800c1ce:	e7a2      	b.n	800c116 <HAL_SPI_Receive+0x3a>
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800c1d0:	6883      	ldr	r3, [r0, #8]
 800c1d2:	2b00      	cmp	r3, #0
 800c1d4:	d18d      	bne.n	800c0f2 <HAL_SPI_Receive+0x16>
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1d6:	9500      	str	r5, [sp, #0]
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1d8:	2504      	movs	r5, #4
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1da:	4613      	mov	r3, r2
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800c1dc:	f880 5051 	strb.w	r5, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 800c1e0:	460a      	mov	r2, r1
 800c1e2:	f7ff fdf5 	bl	800bdd0 <HAL_SPI_TransmitReceive>
 800c1e6:	e79c      	b.n	800c122 <HAL_SPI_Receive+0x46>
  __HAL_LOCK(hspi);
 800c1e8:	2002      	movs	r0, #2
}
 800c1ea:	b002      	add	sp, #8
 800c1ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800c1f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c1f2:	68db      	ldr	r3, [r3, #12]
 800c1f4:	f822 3b02 	strh.w	r3, [r2], #2
        hspi->RxXferCount--;
 800c1f8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800c1fa:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c1fc:	3b01      	subs	r3, #1
 800c1fe:	b29b      	uxth	r3, r3
 800c200:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c202:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c204:	b29b      	uxth	r3, r3
 800c206:	2b00      	cmp	r3, #0
 800c208:	d0d5      	beq.n	800c1b6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c20a:	6823      	ldr	r3, [r4, #0]
 800c20c:	689a      	ldr	r2, [r3, #8]
 800c20e:	07d2      	lsls	r2, r2, #31
 800c210:	d4ee      	bmi.n	800c1f0 <HAL_SPI_Receive+0x114>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c212:	f7fc ff31 	bl	8009078 <HAL_GetTick>
 800c216:	1b80      	subs	r0, r0, r6
 800c218:	42a8      	cmp	r0, r5
 800c21a:	d243      	bcs.n	800c2a4 <HAL_SPI_Receive+0x1c8>
 800c21c:	e7f1      	b.n	800c202 <HAL_SPI_Receive+0x126>
 800c21e:	f7fc ff2b 	bl	8009078 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c222:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c224:	b29b      	uxth	r3, r3
 800c226:	2b00      	cmp	r3, #0
 800c228:	d0c5      	beq.n	800c1b6 <HAL_SPI_Receive+0xda>
 800c22a:	6822      	ldr	r2, [r4, #0]
 800c22c:	e7af      	b.n	800c18e <HAL_SPI_Receive+0xb2>
    while (hspi->RxXferCount > 0U)
 800c22e:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 800c230:	b292      	uxth	r2, r2
 800c232:	2a00      	cmp	r2, #0
 800c234:	d0bf      	beq.n	800c1b6 <HAL_SPI_Receive+0xda>
 800c236:	1c6f      	adds	r7, r5, #1
 800c238:	d013      	beq.n	800c262 <HAL_SPI_Receive+0x186>
 800c23a:	e02b      	b.n	800c294 <HAL_SPI_Receive+0x1b8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c23c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c23e:	7b1b      	ldrb	r3, [r3, #12]
 800c240:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c242:	f8b4 c03e 	ldrh.w	ip, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c246:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c248:	f10c 3cff 	add.w	ip, ip, #4294967295
 800c24c:	fa1f fc8c 	uxth.w	ip, ip
 800c250:	f8a4 c03e 	strh.w	ip, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c254:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c256:	3201      	adds	r2, #1
    while (hspi->RxXferCount > 0U)
 800c258:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c25a:	63a2      	str	r2, [r4, #56]	; 0x38
    while (hspi->RxXferCount > 0U)
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	d0aa      	beq.n	800c1b6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c260:	6823      	ldr	r3, [r4, #0]
 800c262:	689a      	ldr	r2, [r3, #8]
 800c264:	07d0      	lsls	r0, r2, #31
 800c266:	d4e9      	bmi.n	800c23c <HAL_SPI_Receive+0x160>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c268:	f7fc ff06 	bl	8009078 <HAL_GetTick>
    while (hspi->RxXferCount > 0U)
 800c26c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c26e:	b29b      	uxth	r3, r3
 800c270:	2b00      	cmp	r3, #0
 800c272:	d1f5      	bne.n	800c260 <HAL_SPI_Receive+0x184>
 800c274:	e79f      	b.n	800c1b6 <HAL_SPI_Receive+0xda>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800c276:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c278:	7b1b      	ldrb	r3, [r3, #12]
 800c27a:	7013      	strb	r3, [r2, #0]
        hspi->RxXferCount--;
 800c27c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c27e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c280:	3b01      	subs	r3, #1
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c282:	3201      	adds	r2, #1
        hspi->RxXferCount--;
 800c284:	b29b      	uxth	r3, r3
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800c286:	63a2      	str	r2, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 800c288:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800c28a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800c28c:	b29b      	uxth	r3, r3
 800c28e:	2b00      	cmp	r3, #0
 800c290:	d091      	beq.n	800c1b6 <HAL_SPI_Receive+0xda>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800c292:	6823      	ldr	r3, [r4, #0]
 800c294:	689a      	ldr	r2, [r3, #8]
 800c296:	07d1      	lsls	r1, r2, #31
 800c298:	d4ed      	bmi.n	800c276 <HAL_SPI_Receive+0x19a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800c29a:	f7fc feed 	bl	8009078 <HAL_GetTick>
 800c29e:	1b80      	subs	r0, r0, r6
 800c2a0:	42a8      	cmp	r0, r5
 800c2a2:	d3f2      	bcc.n	800c28a <HAL_SPI_Receive+0x1ae>
          errorcode = HAL_TIMEOUT;
 800c2a4:	2003      	movs	r0, #3
 800c2a6:	e736      	b.n	800c116 <HAL_SPI_Receive+0x3a>

0800c2a8 <HAL_TIM_Base_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800c2a8:	2800      	cmp	r0, #0
 800c2aa:	f000 8087 	beq.w	800c3bc <HAL_TIM_Base_Init+0x114>
{
 800c2ae:	b510      	push	{r4, lr}
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800c2b0:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c2b4:	4604      	mov	r4, r0
 800c2b6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c2ba:	2b00      	cmp	r3, #0
 800c2bc:	d079      	beq.n	800c3b2 <HAL_TIM_Base_Init+0x10a>

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800c2be:	6822      	ldr	r2, [r4, #0]
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2c0:	493f      	ldr	r1, [pc, #252]	; (800c3c0 <HAL_TIM_Base_Init+0x118>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c2c2:	2302      	movs	r3, #2
 800c2c4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2c8:	428a      	cmp	r2, r1
  tmpcr1 = TIMx->CR1;
 800c2ca:	6813      	ldr	r3, [r2, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c2cc:	d05d      	beq.n	800c38a <HAL_TIM_Base_Init+0xe2>
 800c2ce:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 800c2d2:	d031      	beq.n	800c338 <HAL_TIM_Base_Init+0x90>
 800c2d4:	f5a1 417c 	sub.w	r1, r1, #64512	; 0xfc00
 800c2d8:	428a      	cmp	r2, r1
 800c2da:	d02d      	beq.n	800c338 <HAL_TIM_Base_Init+0x90>
 800c2dc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2e0:	428a      	cmp	r2, r1
 800c2e2:	d029      	beq.n	800c338 <HAL_TIM_Base_Init+0x90>
 800c2e4:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c2e8:	428a      	cmp	r2, r1
 800c2ea:	d025      	beq.n	800c338 <HAL_TIM_Base_Init+0x90>
 800c2ec:	f501 4178 	add.w	r1, r1, #63488	; 0xf800
 800c2f0:	428a      	cmp	r2, r1
 800c2f2:	d04a      	beq.n	800c38a <HAL_TIM_Base_Init+0xe2>
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800c2f4:	f501 5170 	add.w	r1, r1, #15360	; 0x3c00
 800c2f8:	428a      	cmp	r2, r1
 800c2fa:	d021      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
 800c2fc:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c300:	428a      	cmp	r2, r1
 800c302:	d01d      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
 800c304:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c308:	428a      	cmp	r2, r1
 800c30a:	d019      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
 800c30c:	f5a1 3198 	sub.w	r1, r1, #77824	; 0x13000
 800c310:	428a      	cmp	r2, r1
 800c312:	d015      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
 800c314:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c318:	428a      	cmp	r2, r1
 800c31a:	d011      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
 800c31c:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800c320:	428a      	cmp	r2, r1
 800c322:	d00d      	beq.n	800c340 <HAL_TIM_Base_Init+0x98>
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c324:	69a0      	ldr	r0, [r4, #24]

  TIMx->CR1 = tmpcr1;

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c326:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c328:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c32c:	4303      	orrs	r3, r0
  TIMx->CR1 = tmpcr1;
 800c32e:	6013      	str	r3, [r2, #0]

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800c330:	6863      	ldr	r3, [r4, #4]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c332:	62d1      	str	r1, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c334:	6293      	str	r3, [r2, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800c336:	e010      	b.n	800c35a <HAL_TIM_Base_Init+0xb2>
    tmpcr1 |= Structure->CounterMode;
 800c338:	68a1      	ldr	r1, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c33a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c33e:	430b      	orrs	r3, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c340:	6920      	ldr	r0, [r4, #16]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c342:	69a1      	ldr	r1, [r4, #24]
    tmpcr1 &= ~TIM_CR1_CKD;
 800c344:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c348:	4303      	orrs	r3, r0
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c34a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c34e:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c350:	430b      	orrs	r3, r1
  TIMx->PSC = Structure->Prescaler;
 800c352:	6861      	ldr	r1, [r4, #4]
  TIMx->CR1 = tmpcr1;
 800c354:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c356:	62d0      	str	r0, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c358:	6291      	str	r1, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800c35a:	2301      	movs	r3, #1
 800c35c:	6153      	str	r3, [r2, #20]
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800c35e:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c362:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800c366:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800c36a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800c36e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800c372:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800c376:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800c37a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c37e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800c382:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 800c386:	2000      	movs	r0, #0
}
 800c388:	bd10      	pop	{r4, pc}
    tmpcr1 |= Structure->CounterMode;
 800c38a:	68a0      	ldr	r0, [r4, #8]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c38c:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800c38e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800c392:	4303      	orrs	r3, r0
    tmpcr1 &= ~TIM_CR1_CKD;
 800c394:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800c398:	430b      	orrs	r3, r1
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800c39a:	69a1      	ldr	r1, [r4, #24]
 800c39c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800c3a0:	430b      	orrs	r3, r1
  TIMx->CR1 = tmpcr1;
 800c3a2:	6013      	str	r3, [r2, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 800c3a4:	68e3      	ldr	r3, [r4, #12]
 800c3a6:	62d3      	str	r3, [r2, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 800c3a8:	6863      	ldr	r3, [r4, #4]
 800c3aa:	6293      	str	r3, [r2, #40]	; 0x28
    TIMx->RCR = Structure->RepetitionCounter;
 800c3ac:	6963      	ldr	r3, [r4, #20]
 800c3ae:	6313      	str	r3, [r2, #48]	; 0x30
 800c3b0:	e7d3      	b.n	800c35a <HAL_TIM_Base_Init+0xb2>
    htim->Lock = HAL_UNLOCKED;
 800c3b2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800c3b6:	f7f5 fee3 	bl	8002180 <HAL_TIM_Base_MspInit>
 800c3ba:	e780      	b.n	800c2be <HAL_TIM_Base_Init+0x16>
    return HAL_ERROR;
 800c3bc:	2001      	movs	r0, #1
}
 800c3be:	4770      	bx	lr
 800c3c0:	40010000 	.word	0x40010000

0800c3c4 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 800c3c4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c3c8:	2b01      	cmp	r3, #1
 800c3ca:	d12f      	bne.n	800c42c <HAL_TIM_Base_Start_IT+0x68>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3cc:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3ce:	4919      	ldr	r1, [pc, #100]	; (800c434 <HAL_TIM_Base_Start_IT+0x70>)
  htim->State = HAL_TIM_STATE_BUSY;
 800c3d0:	2202      	movs	r2, #2
 800c3d2:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3d6:	68da      	ldr	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3d8:	428b      	cmp	r3, r1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c3da:	f042 0201 	orr.w	r2, r2, #1
 800c3de:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c3e0:	d019      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c3e2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c3e6:	d016      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c3e8:	4a13      	ldr	r2, [pc, #76]	; (800c438 <HAL_TIM_Base_Start_IT+0x74>)
 800c3ea:	4293      	cmp	r3, r2
 800c3ec:	d013      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c3ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3f2:	4293      	cmp	r3, r2
 800c3f4:	d00f      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c3f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c3fa:	4293      	cmp	r3, r2
 800c3fc:	d00b      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c3fe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c402:	4293      	cmp	r3, r2
 800c404:	d007      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c406:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c40a:	4293      	cmp	r3, r2
 800c40c:	d003      	beq.n	800c416 <HAL_TIM_Base_Start_IT+0x52>
 800c40e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c412:	4293      	cmp	r3, r2
 800c414:	d104      	bne.n	800c420 <HAL_TIM_Base_Start_IT+0x5c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c416:	689a      	ldr	r2, [r3, #8]
 800c418:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c41c:	2a06      	cmp	r2, #6
 800c41e:	d007      	beq.n	800c430 <HAL_TIM_Base_Start_IT+0x6c>
    __HAL_TIM_ENABLE(htim);
 800c420:	681a      	ldr	r2, [r3, #0]
 800c422:	f042 0201 	orr.w	r2, r2, #1
  return HAL_OK;
 800c426:	2000      	movs	r0, #0
    __HAL_TIM_ENABLE(htim);
 800c428:	601a      	str	r2, [r3, #0]
 800c42a:	4770      	bx	lr
    return HAL_ERROR;
 800c42c:	2001      	movs	r0, #1
 800c42e:	4770      	bx	lr
  return HAL_OK;
 800c430:	2000      	movs	r0, #0
}
 800c432:	4770      	bx	lr
 800c434:	40010000 	.word	0x40010000
 800c438:	40000400 	.word	0x40000400

0800c43c <HAL_TIM_OC_DelayElapsedCallback>:
 800c43c:	4770      	bx	lr
 800c43e:	bf00      	nop

0800c440 <HAL_TIM_IC_CaptureCallback>:
 800c440:	4770      	bx	lr
 800c442:	bf00      	nop

0800c444 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c444:	4770      	bx	lr
 800c446:	bf00      	nop

0800c448 <HAL_TIM_TriggerCallback>:
 800c448:	4770      	bx	lr
 800c44a:	bf00      	nop

0800c44c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c44c:	6803      	ldr	r3, [r0, #0]
 800c44e:	691a      	ldr	r2, [r3, #16]
 800c450:	0791      	lsls	r1, r2, #30
{
 800c452:	b510      	push	{r4, lr}
 800c454:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c456:	d502      	bpl.n	800c45e <HAL_TIM_IRQHandler+0x12>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c458:	68da      	ldr	r2, [r3, #12]
 800c45a:	0792      	lsls	r2, r2, #30
 800c45c:	d45f      	bmi.n	800c51e <HAL_TIM_IRQHandler+0xd2>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c45e:	691a      	ldr	r2, [r3, #16]
 800c460:	0750      	lsls	r0, r2, #29
 800c462:	d502      	bpl.n	800c46a <HAL_TIM_IRQHandler+0x1e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c464:	68da      	ldr	r2, [r3, #12]
 800c466:	0751      	lsls	r1, r2, #29
 800c468:	d446      	bmi.n	800c4f8 <HAL_TIM_IRQHandler+0xac>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c46a:	691a      	ldr	r2, [r3, #16]
 800c46c:	0712      	lsls	r2, r2, #28
 800c46e:	d502      	bpl.n	800c476 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c470:	68da      	ldr	r2, [r3, #12]
 800c472:	0710      	lsls	r0, r2, #28
 800c474:	d42e      	bmi.n	800c4d4 <HAL_TIM_IRQHandler+0x88>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c476:	691a      	ldr	r2, [r3, #16]
 800c478:	06d2      	lsls	r2, r2, #27
 800c47a:	d502      	bpl.n	800c482 <HAL_TIM_IRQHandler+0x36>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c47c:	68da      	ldr	r2, [r3, #12]
 800c47e:	06d0      	lsls	r0, r2, #27
 800c480:	d418      	bmi.n	800c4b4 <HAL_TIM_IRQHandler+0x68>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c482:	691a      	ldr	r2, [r3, #16]
 800c484:	07d1      	lsls	r1, r2, #31
 800c486:	d502      	bpl.n	800c48e <HAL_TIM_IRQHandler+0x42>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c488:	68da      	ldr	r2, [r3, #12]
 800c48a:	07d2      	lsls	r2, r2, #31
 800c48c:	d45d      	bmi.n	800c54a <HAL_TIM_IRQHandler+0xfe>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c48e:	691a      	ldr	r2, [r3, #16]
 800c490:	0610      	lsls	r0, r2, #24
 800c492:	d502      	bpl.n	800c49a <HAL_TIM_IRQHandler+0x4e>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c494:	68da      	ldr	r2, [r3, #12]
 800c496:	0611      	lsls	r1, r2, #24
 800c498:	d45f      	bmi.n	800c55a <HAL_TIM_IRQHandler+0x10e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c49a:	691a      	ldr	r2, [r3, #16]
 800c49c:	0652      	lsls	r2, r2, #25
 800c49e:	d502      	bpl.n	800c4a6 <HAL_TIM_IRQHandler+0x5a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c4a0:	68da      	ldr	r2, [r3, #12]
 800c4a2:	0650      	lsls	r0, r2, #25
 800c4a4:	d461      	bmi.n	800c56a <HAL_TIM_IRQHandler+0x11e>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c4a6:	691a      	ldr	r2, [r3, #16]
 800c4a8:	0691      	lsls	r1, r2, #26
 800c4aa:	d502      	bpl.n	800c4b2 <HAL_TIM_IRQHandler+0x66>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c4ac:	68da      	ldr	r2, [r3, #12]
 800c4ae:	0692      	lsls	r2, r2, #26
 800c4b0:	d443      	bmi.n	800c53a <HAL_TIM_IRQHandler+0xee>
}
 800c4b2:	bd10      	pop	{r4, pc}
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c4b4:	f06f 0110 	mvn.w	r1, #16
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c4b8:	2208      	movs	r2, #8
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c4ba:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c4bc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c4be:	69db      	ldr	r3, [r3, #28]
 800c4c0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c4c4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c4c6:	d064      	beq.n	800c592 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 800c4c8:	f7ff ffba 	bl	800c440 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c4cc:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c4ce:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c4d0:	7722      	strb	r2, [r4, #28]
 800c4d2:	e7d6      	b.n	800c482 <HAL_TIM_IRQHandler+0x36>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c4d4:	f06f 0108 	mvn.w	r1, #8
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c4d8:	2204      	movs	r2, #4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c4da:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c4dc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c4de:	69db      	ldr	r3, [r3, #28]
 800c4e0:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800c4e2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c4e4:	d152      	bne.n	800c58c <HAL_TIM_IRQHandler+0x140>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c4e6:	f7ff ffa9 	bl	800c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c4ea:	4620      	mov	r0, r4
 800c4ec:	f7ff ffaa 	bl	800c444 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c4f0:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c4f2:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c4f4:	7722      	strb	r2, [r4, #28]
 800c4f6:	e7be      	b.n	800c476 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c4f8:	f06f 0104 	mvn.w	r1, #4
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c4fc:	2202      	movs	r2, #2
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c4fe:	6119      	str	r1, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c500:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c502:	699b      	ldr	r3, [r3, #24]
 800c504:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 800c508:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c50a:	d13c      	bne.n	800c586 <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c50c:	f7ff ff96 	bl	800c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c510:	4620      	mov	r0, r4
 800c512:	f7ff ff97 	bl	800c444 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c516:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c518:	6823      	ldr	r3, [r4, #0]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c51a:	7722      	strb	r2, [r4, #28]
 800c51c:	e7a5      	b.n	800c46a <HAL_TIM_IRQHandler+0x1e>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c51e:	f06f 0102 	mvn.w	r1, #2
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c522:	2201      	movs	r2, #1
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c524:	6119      	str	r1, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c526:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c528:	699b      	ldr	r3, [r3, #24]
 800c52a:	079b      	lsls	r3, r3, #30
 800c52c:	d025      	beq.n	800c57a <HAL_TIM_IRQHandler+0x12e>
          HAL_TIM_IC_CaptureCallback(htim);
 800c52e:	f7ff ff87 	bl	800c440 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c532:	2200      	movs	r2, #0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c534:	6823      	ldr	r3, [r4, #0]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c536:	7722      	strb	r2, [r4, #28]
 800c538:	e791      	b.n	800c45e <HAL_TIM_IRQHandler+0x12>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c53a:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 800c53e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c540:	611a      	str	r2, [r3, #16]
}
 800c542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c546:	f000 b82b 	b.w	800c5a0 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c54a:	f06f 0201 	mvn.w	r2, #1
 800c54e:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800c550:	4620      	mov	r0, r4
 800c552:	f7f5 faa1 	bl	8001a98 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c556:	6823      	ldr	r3, [r4, #0]
 800c558:	e799      	b.n	800c48e <HAL_TIM_IRQHandler+0x42>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c55a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c55e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 800c560:	4620      	mov	r0, r4
 800c562:	f000 f81f 	bl	800c5a4 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c566:	6823      	ldr	r3, [r4, #0]
 800c568:	e797      	b.n	800c49a <HAL_TIM_IRQHandler+0x4e>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c56a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c56e:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800c570:	4620      	mov	r0, r4
 800c572:	f7ff ff69 	bl	800c448 <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c576:	6823      	ldr	r3, [r4, #0]
 800c578:	e795      	b.n	800c4a6 <HAL_TIM_IRQHandler+0x5a>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c57a:	f7ff ff5f 	bl	800c43c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c57e:	4620      	mov	r0, r4
 800c580:	f7ff ff60 	bl	800c444 <HAL_TIM_PWM_PulseFinishedCallback>
 800c584:	e7d5      	b.n	800c532 <HAL_TIM_IRQHandler+0xe6>
        HAL_TIM_IC_CaptureCallback(htim);
 800c586:	f7ff ff5b 	bl	800c440 <HAL_TIM_IC_CaptureCallback>
 800c58a:	e7c4      	b.n	800c516 <HAL_TIM_IRQHandler+0xca>
        HAL_TIM_IC_CaptureCallback(htim);
 800c58c:	f7ff ff58 	bl	800c440 <HAL_TIM_IC_CaptureCallback>
 800c590:	e7ae      	b.n	800c4f0 <HAL_TIM_IRQHandler+0xa4>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c592:	f7ff ff53 	bl	800c43c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c596:	4620      	mov	r0, r4
 800c598:	f7ff ff54 	bl	800c444 <HAL_TIM_PWM_PulseFinishedCallback>
 800c59c:	e796      	b.n	800c4cc <HAL_TIM_IRQHandler+0x80>
 800c59e:	bf00      	nop

0800c5a0 <HAL_TIMEx_CommutCallback>:
 800c5a0:	4770      	bx	lr
 800c5a2:	bf00      	nop

0800c5a4 <HAL_TIMEx_BreakCallback>:
 800c5a4:	4770      	bx	lr
 800c5a6:	bf00      	nop

0800c5a8 <FMC_SDRAM_Init>:
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c5a8:	680b      	ldr	r3, [r1, #0]
{
 800c5aa:	b430      	push	{r4, r5}
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c5ac:	b9d3      	cbnz	r3, 800c5e4 <FMC_SDRAM_Init+0x3c>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c5ae:	6803      	ldr	r3, [r0, #0]
 800c5b0:	684c      	ldr	r4, [r1, #4]
 800c5b2:	688a      	ldr	r2, [r1, #8]
 800c5b4:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c5b8:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c5bc:	4323      	orrs	r3, r4
 800c5be:	4313      	orrs	r3, r2
 800c5c0:	e9d1 4203 	ldrd	r4, r2, [r1, #12]
 800c5c4:	4323      	orrs	r3, r4
 800c5c6:	4313      	orrs	r3, r2
 800c5c8:	e9d1 4205 	ldrd	r4, r2, [r1, #20]
 800c5cc:	4323      	orrs	r3, r4
 800c5ce:	e9d1 5407 	ldrd	r5, r4, [r1, #28]
 800c5d2:	4313      	orrs	r3, r2
 800c5d4:	432b      	orrs	r3, r5
 800c5d6:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800c5d8:	4323      	orrs	r3, r4
 800c5da:	4313      	orrs	r3, r2
 800c5dc:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800c5de:	bc30      	pop	{r4, r5}
 800c5e0:	2000      	movs	r0, #0
 800c5e2:	4770      	bx	lr
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c5e4:	e9d1 4207 	ldrd	r4, r2, [r1, #28]
 800c5e8:	6803      	ldr	r3, [r0, #0]
 800c5ea:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 800c5ee:	4323      	orrs	r3, r4
 800c5f0:	6a4c      	ldr	r4, [r1, #36]	; 0x24
 800c5f2:	4313      	orrs	r3, r2
 800c5f4:	4323      	orrs	r3, r4
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c5f6:	684a      	ldr	r2, [r1, #4]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c5f8:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c5fa:	6843      	ldr	r3, [r0, #4]
 800c5fc:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800c600:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800c604:	4313      	orrs	r3, r2
 800c606:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c60a:	4323      	orrs	r3, r4
 800c60c:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c610:	4313      	orrs	r3, r2
 800c612:	432b      	orrs	r3, r5
 800c614:	698a      	ldr	r2, [r1, #24]
 800c616:	4323      	orrs	r3, r4
 800c618:	4313      	orrs	r3, r2
 800c61a:	6043      	str	r3, [r0, #4]
}
 800c61c:	bc30      	pop	{r4, r5}
 800c61e:	2000      	movs	r0, #0
 800c620:	4770      	bx	lr
 800c622:	bf00      	nop

0800c624 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c624:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c626:	6883      	ldr	r3, [r0, #8]
  if (Bank == FMC_SDRAM_BANK1)
 800c628:	bb02      	cbnz	r2, 800c66c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c62a:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c62e:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c632:	3c01      	subs	r4, #1
 800c634:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c638:	3a01      	subs	r2, #1
 800c63a:	4313      	orrs	r3, r2
 800c63c:	e9d1 4202 	ldrd	r4, r2, [r1, #8]
 800c640:	3c01      	subs	r4, #1
 800c642:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
 800c646:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
 800c64a:	3a01      	subs	r2, #1
 800c64c:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800c650:	698a      	ldr	r2, [r1, #24]
 800c652:	1e69      	subs	r1, r5, #1
 800c654:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c658:	1e61      	subs	r1, r4, #1
 800c65a:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 800c65e:	3a01      	subs	r2, #1
 800c660:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c664:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800c666:	bc30      	pop	{r4, r5}
 800c668:	2000      	movs	r0, #0
 800c66a:	4770      	bx	lr
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c66c:	68cc      	ldr	r4, [r1, #12]
 800c66e:	694a      	ldr	r2, [r1, #20]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c670:	688d      	ldr	r5, [r1, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c672:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800c676:	3c01      	subs	r4, #1
 800c678:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800c67c:	ea43 3304 	orr.w	r3, r3, r4, lsl #12
 800c680:	3a01      	subs	r2, #1
 800c682:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800c686:	6083      	str	r3, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c688:	e9d1 2400 	ldrd	r2, r4, [r1]
 800c68c:	68c3      	ldr	r3, [r0, #12]
 800c68e:	3c01      	subs	r4, #1
 800c690:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800c694:	ea43 1304 	orr.w	r3, r3, r4, lsl #4
 800c698:	3a01      	subs	r2, #1
 800c69a:	690c      	ldr	r4, [r1, #16]
 800c69c:	4313      	orrs	r3, r2
 800c69e:	698a      	ldr	r2, [r1, #24]
 800c6a0:	1e69      	subs	r1, r5, #1
 800c6a2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800c6a6:	1e61      	subs	r1, r4, #1
 800c6a8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800c6ac:	3a01      	subs	r2, #1
 800c6ae:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c6b2:	60c3      	str	r3, [r0, #12]
}
 800c6b4:	bc30      	pop	{r4, r5}
 800c6b6:	2000      	movs	r0, #0
 800c6b8:	4770      	bx	lr
 800c6ba:	bf00      	nop

0800c6bc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c6bc:	b570      	push	{r4, r5, r6, lr}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c6be:	680b      	ldr	r3, [r1, #0]
{
 800c6c0:	4615      	mov	r5, r2
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c6c2:	684a      	ldr	r2, [r1, #4]
{
 800c6c4:	4604      	mov	r4, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c6c6:	4313      	orrs	r3, r2
 800c6c8:	6900      	ldr	r0, [r0, #16]
 800c6ca:	68ca      	ldr	r2, [r1, #12]
 800c6cc:	0d80      	lsrs	r0, r0, #22
 800c6ce:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
 800c6d2:	688a      	ldr	r2, [r1, #8]
 800c6d4:	0580      	lsls	r0, r0, #22
 800c6d6:	4303      	orrs	r3, r0
 800c6d8:	3a01      	subs	r2, #1
 800c6da:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800c6de:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800c6e0:	f7fc fcca 	bl	8009078 <HAL_GetTick>
 800c6e4:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c6e6:	1c6b      	adds	r3, r5, #1
 800c6e8:	d105      	bne.n	800c6f6 <FMC_SDRAM_SendCommand+0x3a>
 800c6ea:	69a3      	ldr	r3, [r4, #24]
 800c6ec:	f013 0320 	ands.w	r3, r3, #32
 800c6f0:	d1fb      	bne.n	800c6ea <FMC_SDRAM_SendCommand+0x2e>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800c6f2:	4618      	mov	r0, r3
}
 800c6f4:	bd70      	pop	{r4, r5, r6, pc}
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800c6f6:	69a3      	ldr	r3, [r4, #24]
 800c6f8:	f013 0320 	ands.w	r3, r3, #32
 800c6fc:	d0f9      	beq.n	800c6f2 <FMC_SDRAM_SendCommand+0x36>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800c6fe:	b125      	cbz	r5, 800c70a <FMC_SDRAM_SendCommand+0x4e>
 800c700:	f7fc fcba 	bl	8009078 <HAL_GetTick>
 800c704:	1b80      	subs	r0, r0, r6
 800c706:	42a8      	cmp	r0, r5
 800c708:	d9ed      	bls.n	800c6e6 <FMC_SDRAM_SendCommand+0x2a>
        return HAL_TIMEOUT;
 800c70a:	2003      	movs	r0, #3
}
 800c70c:	bd70      	pop	{r4, r5, r6, pc}
 800c70e:	bf00      	nop

0800c710 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c710:	6943      	ldr	r3, [r0, #20]
 800c712:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
{
 800c716:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c718:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800c71c:	ea43 0141 	orr.w	r1, r3, r1, lsl #1

  return HAL_OK;
}
 800c720:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c722:	6151      	str	r1, [r2, #20]
}
 800c724:	4770      	bx	lr
 800c726:	bf00      	nop

0800c728 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800c728:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800c72a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c72e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800c730:	f002 fb00 	bl	800ed34 <xTaskGetSchedulerState>
 800c734:	2801      	cmp	r0, #1
 800c736:	d100      	bne.n	800c73a <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800c738:	bd08      	pop	{r3, pc}
 800c73a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800c73e:	f000 bc41 	b.w	800cfc4 <xPortSysTickHandler>
 800c742:	bf00      	nop

0800c744 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800c744:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800c748:	b92b      	cbnz	r3, 800c756 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800c74a:	4b06      	ldr	r3, [pc, #24]	; (800c764 <osKernelInitialize+0x20>)
 800c74c:	6818      	ldr	r0, [r3, #0]
 800c74e:	b928      	cbnz	r0, 800c75c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800c750:	2201      	movs	r2, #1
 800c752:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800c754:	4770      	bx	lr
    stat = osErrorISR;
 800c756:	f06f 0005 	mvn.w	r0, #5
 800c75a:	4770      	bx	lr
    } else {
      stat = osError;
 800c75c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800c760:	4770      	bx	lr
 800c762:	bf00      	nop
 800c764:	20002268 	.word	0x20002268

0800c768 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800c768:	b510      	push	{r4, lr}
 800c76a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c76e:	b974      	cbnz	r4, 800c78e <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800c770:	4b08      	ldr	r3, [pc, #32]	; (800c794 <osKernelStart+0x2c>)
 800c772:	681a      	ldr	r2, [r3, #0]
 800c774:	2a01      	cmp	r2, #1
 800c776:	d107      	bne.n	800c788 <osKernelStart+0x20>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800c778:	4907      	ldr	r1, [pc, #28]	; (800c798 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800c77a:	2202      	movs	r2, #2
 800c77c:	77cc      	strb	r4, [r1, #31]
 800c77e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800c780:	f002 f8b2 	bl	800e8e8 <vTaskStartScheduler>
      stat = osOK;
 800c784:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800c786:	bd10      	pop	{r4, pc}
      stat = osError;
 800c788:	f04f 30ff 	mov.w	r0, #4294967295
}
 800c78c:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c78e:	f06f 0005 	mvn.w	r0, #5
}
 800c792:	bd10      	pop	{r4, pc}
 800c794:	20002268 	.word	0x20002268
 800c798:	e000ed00 	.word	0xe000ed00

0800c79c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c79c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c79e:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800c7a0:	2400      	movs	r4, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800c7a2:	4615      	mov	r5, r2
  hTask = NULL;
 800c7a4:	9405      	str	r4, [sp, #20]
 800c7a6:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800c7aa:	b9ea      	cbnz	r2, 800c7e8 <osThreadNew+0x4c>
 800c7ac:	b350      	cbz	r0, 800c804 <osThreadNew+0x68>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800c7ae:	b1f5      	cbz	r5, 800c7ee <osThreadNew+0x52>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800c7b0:	69ab      	ldr	r3, [r5, #24]
 800c7b2:	bb5b      	cbnz	r3, 800c80c <osThreadNew+0x70>
 800c7b4:	2318      	movs	r3, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c7b6:	686a      	ldr	r2, [r5, #4]
 800c7b8:	07d2      	lsls	r2, r2, #31
 800c7ba:	d423      	bmi.n	800c804 <osThreadNew+0x68>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800c7bc:	696e      	ldr	r6, [r5, #20]
 800c7be:	b34e      	cbz	r6, 800c814 <osThreadNew+0x78>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800c7c0:	ea4f 0c96 	mov.w	ip, r6, lsr #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c7c4:	68ac      	ldr	r4, [r5, #8]
      if (attr->name != NULL) {
 800c7c6:	682f      	ldr	r7, [r5, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c7c8:	b34c      	cbz	r4, 800c81e <osThreadNew+0x82>
 800c7ca:	68ea      	ldr	r2, [r5, #12]
 800c7cc:	2aab      	cmp	r2, #171	; 0xab
 800c7ce:	d919      	bls.n	800c804 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c7d0:	692d      	ldr	r5, [r5, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800c7d2:	b1bd      	cbz	r5, 800c804 <osThreadNew+0x68>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800c7d4:	b1b6      	cbz	r6, 800c804 <osThreadNew+0x68>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800c7d6:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800c7da:	9300      	str	r3, [sp, #0]
 800c7dc:	4662      	mov	r2, ip
 800c7de:	460b      	mov	r3, r1
 800c7e0:	4639      	mov	r1, r7
 800c7e2:	f001 ffbf 	bl	800e764 <xTaskCreateStatic>
 800c7e6:	4604      	mov	r4, r0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
 800c7e8:	4620      	mov	r0, r4
 800c7ea:	b007      	add	sp, #28
 800c7ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c7ee:	2280      	movs	r2, #128	; 0x80
    prio  = (UBaseType_t)osPriorityNormal;
 800c7f0:	2318      	movs	r3, #24
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c7f2:	ac05      	add	r4, sp, #20
 800c7f4:	9300      	str	r3, [sp, #0]
 800c7f6:	9401      	str	r4, [sp, #4]
 800c7f8:	460b      	mov	r3, r1
 800c7fa:	4629      	mov	r1, r5
 800c7fc:	f001 ffec 	bl	800e7d8 <xTaskCreate>
 800c800:	2801      	cmp	r0, #1
 800c802:	d00a      	beq.n	800c81a <osThreadNew+0x7e>
        return (NULL);
 800c804:	2400      	movs	r4, #0
}
 800c806:	4620      	mov	r0, r4
 800c808:	b007      	add	sp, #28
 800c80a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800c80c:	1e5c      	subs	r4, r3, #1
 800c80e:	2c37      	cmp	r4, #55	; 0x37
 800c810:	d9d1      	bls.n	800c7b6 <osThreadNew+0x1a>
 800c812:	e7f7      	b.n	800c804 <osThreadNew+0x68>
    stack = configMINIMAL_STACK_SIZE;
 800c814:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800c818:	e7d4      	b.n	800c7c4 <osThreadNew+0x28>
  return ((osThreadId_t)hTask);
 800c81a:	9c05      	ldr	r4, [sp, #20]
 800c81c:	e7e4      	b.n	800c7e8 <osThreadNew+0x4c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800c81e:	68ee      	ldr	r6, [r5, #12]
 800c820:	2e00      	cmp	r6, #0
 800c822:	d1e1      	bne.n	800c7e8 <osThreadNew+0x4c>
 800c824:	692d      	ldr	r5, [r5, #16]
 800c826:	2d00      	cmp	r5, #0
 800c828:	d1de      	bne.n	800c7e8 <osThreadNew+0x4c>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800c82a:	fa1f f28c 	uxth.w	r2, ip
 800c82e:	463d      	mov	r5, r7
 800c830:	e7df      	b.n	800c7f2 <osThreadNew+0x56>
 800c832:	bf00      	nop

0800c834 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800c834:	b510      	push	{r4, lr}
 800c836:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800c83a:	b92c      	cbnz	r4, 800c848 <osDelay+0x14>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800c83c:	b900      	cbnz	r0, 800c840 <osDelay+0xc>
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 800c83e:	bd10      	pop	{r4, pc}
      vTaskDelay(ticks);
 800c840:	f001 fffc 	bl	800e83c <vTaskDelay>
    stat = osOK;
 800c844:	4620      	mov	r0, r4
}
 800c846:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800c848:	f06f 0005 	mvn.w	r0, #5
}
 800c84c:	bd10      	pop	{r4, pc}
 800c84e:	bf00      	nop

0800c850 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800c850:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c852:	b083      	sub	sp, #12
 800c854:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800c858:	b9fe      	cbnz	r6, 800c89a <osSemaphoreNew+0x4a>
 800c85a:	b1f0      	cbz	r0, 800c89a <osSemaphoreNew+0x4a>
 800c85c:	4288      	cmp	r0, r1
 800c85e:	460f      	mov	r7, r1
 800c860:	d31b      	bcc.n	800c89a <osSemaphoreNew+0x4a>
    mem = -1;

    if (attr != NULL) {
 800c862:	4615      	mov	r5, r2
 800c864:	b192      	cbz	r2, 800c88c <osSemaphoreNew+0x3c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800c866:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
 800c86a:	b1d2      	cbz	r2, 800c8a2 <osSemaphoreNew+0x52>
 800c86c:	2b4f      	cmp	r3, #79	; 0x4f
 800c86e:	d914      	bls.n	800c89a <osSemaphoreNew+0x4a>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
 800c870:	2801      	cmp	r0, #1
 800c872:	d038      	beq.n	800c8e6 <osSemaphoreNew+0x96>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800c874:	f000 fd8c 	bl	800d390 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
 800c878:	4604      	mov	r4, r0
 800c87a:	b170      	cbz	r0, 800c89a <osSemaphoreNew+0x4a>
        if (attr != NULL) {
          name = attr->name;
 800c87c:	682d      	ldr	r5, [r5, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
 800c87e:	4620      	mov	r0, r4
 800c880:	4629      	mov	r1, r5
 800c882:	f001 fc37 	bl	800e0f4 <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800c886:	4620      	mov	r0, r4
 800c888:	b003      	add	sp, #12
 800c88a:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if (max_count == 1U) {
 800c88c:	2801      	cmp	r0, #1
 800c88e:	d012      	beq.n	800c8b6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c890:	f000 fdde 	bl	800d450 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c894:	4604      	mov	r4, r0
 800c896:	2800      	cmp	r0, #0
 800c898:	d1f1      	bne.n	800c87e <osSemaphoreNew+0x2e>
            hSemaphore = NULL;
 800c89a:	2400      	movs	r4, #0
}
 800c89c:	4620      	mov	r0, r4
 800c89e:	b003      	add	sp, #12
 800c8a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800c8a2:	2b00      	cmp	r3, #0
 800c8a4:	d1f9      	bne.n	800c89a <osSemaphoreNew+0x4a>
      if (max_count == 1U) {
 800c8a6:	2801      	cmp	r0, #1
 800c8a8:	d005      	beq.n	800c8b6 <osSemaphoreNew+0x66>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800c8aa:	f000 fdd1 	bl	800d450 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800c8ae:	4604      	mov	r4, r0
 800c8b0:	2800      	cmp	r0, #0
 800c8b2:	d1e3      	bne.n	800c87c <osSemaphoreNew+0x2c>
 800c8b4:	e7f1      	b.n	800c89a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinary();
 800c8b6:	2203      	movs	r2, #3
 800c8b8:	2100      	movs	r1, #0
 800c8ba:	2001      	movs	r0, #1
 800c8bc:	f000 fd26 	bl	800d30c <xQueueGenericCreate>
 800c8c0:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800c8c2:	2c00      	cmp	r4, #0
 800c8c4:	d0e9      	beq.n	800c89a <osSemaphoreNew+0x4a>
 800c8c6:	b917      	cbnz	r7, 800c8ce <osSemaphoreNew+0x7e>
        if (attr != NULL) {
 800c8c8:	2d00      	cmp	r5, #0
 800c8ca:	d1d7      	bne.n	800c87c <osSemaphoreNew+0x2c>
 800c8cc:	e7d7      	b.n	800c87e <osSemaphoreNew+0x2e>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c8ce:	2300      	movs	r3, #0
 800c8d0:	461a      	mov	r2, r3
 800c8d2:	4619      	mov	r1, r3
 800c8d4:	4620      	mov	r0, r4
 800c8d6:	f000 fe01 	bl	800d4dc <xQueueGenericSend>
 800c8da:	2801      	cmp	r0, #1
 800c8dc:	d0f4      	beq.n	800c8c8 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800c8de:	4620      	mov	r0, r4
 800c8e0:	f001 fbc2 	bl	800e068 <vQueueDelete>
 800c8e4:	e7d9      	b.n	800c89a <osSemaphoreNew+0x4a>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800c8e6:	4613      	mov	r3, r2
 800c8e8:	2203      	movs	r2, #3
 800c8ea:	9200      	str	r2, [sp, #0]
 800c8ec:	4631      	mov	r1, r6
 800c8ee:	4632      	mov	r2, r6
 800c8f0:	f000 fc9e 	bl	800d230 <xQueueGenericCreateStatic>
 800c8f4:	4604      	mov	r4, r0
 800c8f6:	e7e4      	b.n	800c8c2 <osSemaphoreNew+0x72>

0800c8f8 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c8f8:	b370      	cbz	r0, 800c958 <osSemaphoreAcquire+0x60>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800c8fa:	b510      	push	{r4, lr}
 800c8fc:	460c      	mov	r4, r1
 800c8fe:	b082      	sub	sp, #8
 800c900:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c904:	b1c3      	cbz	r3, 800c938 <osSemaphoreAcquire+0x40>
    if (timeout != 0U) {
 800c906:	bb21      	cbnz	r1, 800c952 <osSemaphoreAcquire+0x5a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c908:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800c90a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800c90c:	f001 fb2a 	bl	800df64 <xQueueReceiveFromISR>
 800c910:	2801      	cmp	r0, #1
 800c912:	d11a      	bne.n	800c94a <osSemaphoreAcquire+0x52>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800c914:	9b01      	ldr	r3, [sp, #4]
 800c916:	b913      	cbnz	r3, 800c91e <osSemaphoreAcquire+0x26>
  stat = osOK;
 800c918:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800c91a:	b002      	add	sp, #8
 800c91c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800c91e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c922:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c926:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c92a:	f3bf 8f4f 	dsb	sy
 800c92e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c932:	4620      	mov	r0, r4
}
 800c934:	b002      	add	sp, #8
 800c936:	bd10      	pop	{r4, pc}
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800c938:	f001 f98a 	bl	800dc50 <xQueueSemaphoreTake>
 800c93c:	2801      	cmp	r0, #1
 800c93e:	d0eb      	beq.n	800c918 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
 800c940:	b11c      	cbz	r4, 800c94a <osSemaphoreAcquire+0x52>
        stat = osErrorTimeout;
 800c942:	f06f 0001 	mvn.w	r0, #1
}
 800c946:	b002      	add	sp, #8
 800c948:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
 800c94a:	f06f 0002 	mvn.w	r0, #2
}
 800c94e:	b002      	add	sp, #8
 800c950:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
 800c952:	f06f 0003 	mvn.w	r0, #3
 800c956:	e7e0      	b.n	800c91a <osSemaphoreAcquire+0x22>
 800c958:	f06f 0003 	mvn.w	r0, #3
}
 800c95c:	4770      	bx	lr
 800c95e:	bf00      	nop

0800c960 <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800c960:	b330      	cbz	r0, 800c9b0 <osSemaphoreRelease+0x50>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800c962:	b510      	push	{r4, lr}
 800c964:	b082      	sub	sp, #8
 800c966:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800c96a:	b1ab      	cbz	r3, 800c998 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800c96c:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c96e:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800c970:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800c972:	f000 ff97 	bl	800d8a4 <xQueueGiveFromISR>
 800c976:	2801      	cmp	r0, #1
 800c978:	d117      	bne.n	800c9aa <osSemaphoreRelease+0x4a>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800c97a:	9b01      	ldr	r3, [sp, #4]
 800c97c:	b193      	cbz	r3, 800c9a4 <osSemaphoreRelease+0x44>
 800c97e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800c982:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c986:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800c98a:	f3bf 8f4f 	dsb	sy
 800c98e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800c992:	4620      	mov	r0, r4
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800c994:	b002      	add	sp, #8
 800c996:	bd10      	pop	{r4, pc}
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800c998:	461a      	mov	r2, r3
 800c99a:	4619      	mov	r1, r3
 800c99c:	f000 fd9e 	bl	800d4dc <xQueueGenericSend>
 800c9a0:	2801      	cmp	r0, #1
 800c9a2:	d102      	bne.n	800c9aa <osSemaphoreRelease+0x4a>
  stat = osOK;
 800c9a4:	2000      	movs	r0, #0
}
 800c9a6:	b002      	add	sp, #8
 800c9a8:	bd10      	pop	{r4, pc}
      stat = osErrorResource;
 800c9aa:	f06f 0002 	mvn.w	r0, #2
 800c9ae:	e7fa      	b.n	800c9a6 <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800c9b0:	f06f 0003 	mvn.w	r0, #3
}
 800c9b4:	4770      	bx	lr
 800c9b6:	bf00      	nop

0800c9b8 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800c9b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9ba:	b085      	sub	sp, #20
 800c9bc:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800c9c0:	b987      	cbnz	r7, 800c9e4 <osMessageQueueNew+0x2c>
 800c9c2:	4605      	mov	r5, r0
 800c9c4:	b170      	cbz	r0, 800c9e4 <osMessageQueueNew+0x2c>
 800c9c6:	b169      	cbz	r1, 800c9e4 <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
 800c9c8:	4614      	mov	r4, r2
 800c9ca:	b1ea      	cbz	r2, 800ca08 <osMessageQueueNew+0x50>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c9cc:	6893      	ldr	r3, [r2, #8]
 800c9ce:	b163      	cbz	r3, 800c9ea <osMessageQueueNew+0x32>
 800c9d0:	68d2      	ldr	r2, [r2, #12]
 800c9d2:	2a4f      	cmp	r2, #79	; 0x4f
 800c9d4:	d906      	bls.n	800c9e4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c9d6:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800c9d8:	b122      	cbz	r2, 800c9e4 <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800c9da:	6966      	ldr	r6, [r4, #20]
 800c9dc:	fb01 f505 	mul.w	r5, r1, r5
 800c9e0:	42ae      	cmp	r6, r5
 800c9e2:	d21c      	bcs.n	800ca1e <osMessageQueueNew+0x66>
  hQueue = NULL;
 800c9e4:	2000      	movs	r0, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800c9e6:	b005      	add	sp, #20
 800c9e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800c9ea:	68d3      	ldr	r3, [r2, #12]
 800c9ec:	2b00      	cmp	r3, #0
 800c9ee:	d1f9      	bne.n	800c9e4 <osMessageQueueNew+0x2c>
 800c9f0:	6913      	ldr	r3, [r2, #16]
 800c9f2:	2b00      	cmp	r3, #0
 800c9f4:	d1f6      	bne.n	800c9e4 <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800c9f6:	6952      	ldr	r2, [r2, #20]
 800c9f8:	2a00      	cmp	r2, #0
 800c9fa:	d1f3      	bne.n	800c9e4 <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
 800c9fc:	f000 fc86 	bl	800d30c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ca00:	2800      	cmp	r0, #0
 800ca02:	d0ef      	beq.n	800c9e4 <osMessageQueueNew+0x2c>
        name = attr->name;
 800ca04:	6824      	ldr	r4, [r4, #0]
 800ca06:	e003      	b.n	800ca10 <osMessageQueueNew+0x58>
          hQueue = xQueueCreate (msg_count, msg_size);
 800ca08:	f000 fc80 	bl	800d30c <xQueueGenericCreate>
    if (hQueue != NULL) {
 800ca0c:	2800      	cmp	r0, #0
 800ca0e:	d0e9      	beq.n	800c9e4 <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
 800ca10:	4621      	mov	r1, r4
 800ca12:	9003      	str	r0, [sp, #12]
 800ca14:	f001 fb6e 	bl	800e0f4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800ca18:	9803      	ldr	r0, [sp, #12]
}
 800ca1a:	b005      	add	sp, #20
 800ca1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800ca1e:	9700      	str	r7, [sp, #0]
 800ca20:	f000 fc06 	bl	800d230 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800ca24:	2800      	cmp	r0, #0
 800ca26:	d1ed      	bne.n	800ca04 <osMessageQueueNew+0x4c>
 800ca28:	e7dc      	b.n	800c9e4 <osMessageQueueNew+0x2c>
 800ca2a:	bf00      	nop

0800ca2c <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800ca2c:	b570      	push	{r4, r5, r6, lr}
 800ca2e:	461c      	mov	r4, r3
 800ca30:	b082      	sub	sp, #8
 800ca32:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800ca36:	b1be      	cbz	r6, 800ca68 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800ca38:	b350      	cbz	r0, 800ca90 <osMessageQueuePut+0x64>
 800ca3a:	b349      	cbz	r1, 800ca90 <osMessageQueuePut+0x64>
 800ca3c:	bb43      	cbnz	r3, 800ca90 <osMessageQueuePut+0x64>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ca3e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ca40:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800ca42:	f000 fec9 	bl	800d7d8 <xQueueGenericSendFromISR>
 800ca46:	2801      	cmp	r0, #1
 800ca48:	d11e      	bne.n	800ca88 <osMessageQueuePut+0x5c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ca4a:	9b01      	ldr	r3, [sp, #4]
 800ca4c:	b1cb      	cbz	r3, 800ca82 <osMessageQueuePut+0x56>
 800ca4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ca52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ca56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ca5a:	f3bf 8f4f 	dsb	sy
 800ca5e:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800ca62:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800ca64:	b002      	add	sp, #8
 800ca66:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800ca68:	b190      	cbz	r0, 800ca90 <osMessageQueuePut+0x64>
 800ca6a:	b189      	cbz	r1, 800ca90 <osMessageQueuePut+0x64>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800ca6c:	4633      	mov	r3, r6
 800ca6e:	4622      	mov	r2, r4
 800ca70:	f000 fd34 	bl	800d4dc <xQueueGenericSend>
 800ca74:	2801      	cmp	r0, #1
 800ca76:	d004      	beq.n	800ca82 <osMessageQueuePut+0x56>
        if (timeout != 0U) {
 800ca78:	b134      	cbz	r4, 800ca88 <osMessageQueuePut+0x5c>
          stat = osErrorTimeout;
 800ca7a:	f06f 0001 	mvn.w	r0, #1
}
 800ca7e:	b002      	add	sp, #8
 800ca80:	bd70      	pop	{r4, r5, r6, pc}
  stat = osOK;
 800ca82:	2000      	movs	r0, #0
}
 800ca84:	b002      	add	sp, #8
 800ca86:	bd70      	pop	{r4, r5, r6, pc}
          stat = osErrorResource;
 800ca88:	f06f 0002 	mvn.w	r0, #2
}
 800ca8c:	b002      	add	sp, #8
 800ca8e:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
 800ca90:	f06f 0003 	mvn.w	r0, #3
 800ca94:	e7e6      	b.n	800ca64 <osMessageQueuePut+0x38>
 800ca96:	bf00      	nop

0800ca98 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800ca98:	b530      	push	{r4, r5, lr}
 800ca9a:	461c      	mov	r4, r3
 800ca9c:	b083      	sub	sp, #12
 800ca9e:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800caa2:	b1bb      	cbz	r3, 800cad4 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800caa4:	b348      	cbz	r0, 800cafa <osMessageQueueGet+0x62>
 800caa6:	b341      	cbz	r1, 800cafa <osMessageQueueGet+0x62>
 800caa8:	bb3c      	cbnz	r4, 800cafa <osMessageQueueGet+0x62>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800caaa:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800caac:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800caae:	f001 fa59 	bl	800df64 <xQueueReceiveFromISR>
 800cab2:	2801      	cmp	r0, #1
 800cab4:	d11d      	bne.n	800caf2 <osMessageQueueGet+0x5a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cab6:	9b01      	ldr	r3, [sp, #4]
 800cab8:	b1c3      	cbz	r3, 800caec <osMessageQueueGet+0x54>
 800caba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cabe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cac2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cac6:	f3bf 8f4f 	dsb	sy
 800caca:	f3bf 8f6f 	isb	sy
  stat = osOK;
 800cace:	4620      	mov	r0, r4
      }
    }
  }

  return (stat);
}
 800cad0:	b003      	add	sp, #12
 800cad2:	bd30      	pop	{r4, r5, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cad4:	b188      	cbz	r0, 800cafa <osMessageQueueGet+0x62>
 800cad6:	b181      	cbz	r1, 800cafa <osMessageQueueGet+0x62>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cad8:	4622      	mov	r2, r4
 800cada:	f000 ff3b 	bl	800d954 <xQueueReceive>
 800cade:	2801      	cmp	r0, #1
 800cae0:	d004      	beq.n	800caec <osMessageQueueGet+0x54>
        if (timeout != 0U) {
 800cae2:	b134      	cbz	r4, 800caf2 <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 800cae4:	f06f 0001 	mvn.w	r0, #1
}
 800cae8:	b003      	add	sp, #12
 800caea:	bd30      	pop	{r4, r5, pc}
  stat = osOK;
 800caec:	2000      	movs	r0, #0
}
 800caee:	b003      	add	sp, #12
 800caf0:	bd30      	pop	{r4, r5, pc}
          stat = osErrorResource;
 800caf2:	f06f 0002 	mvn.w	r0, #2
}
 800caf6:	b003      	add	sp, #12
 800caf8:	bd30      	pop	{r4, r5, pc}
      stat = osErrorParameter;
 800cafa:	f06f 0003 	mvn.w	r0, #3
 800cafe:	e7e7      	b.n	800cad0 <osMessageQueueGet+0x38>

0800cb00 <osMessageQueueGetCount>:
 800cb00:	b130      	cbz	r0, 800cb10 <osMessageQueueGetCount+0x10>
 800cb02:	f3ef 8305 	mrs	r3, IPSR
 800cb06:	b10b      	cbz	r3, 800cb0c <osMessageQueueGetCount+0xc>
 800cb08:	f001 baa0 	b.w	800e04c <uxQueueMessagesWaitingFromISR>
 800cb0c:	f001 ba88 	b.w	800e020 <uxQueueMessagesWaiting>
 800cb10:	4770      	bx	lr
 800cb12:	bf00      	nop

0800cb14 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cb14:	4b04      	ldr	r3, [pc, #16]	; (800cb28 <vApplicationGetIdleTaskMemory+0x14>)
 800cb16:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
 800cb18:	b410      	push	{r4}
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cb1a:	2380      	movs	r3, #128	; 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cb1c:	4c03      	ldr	r4, [pc, #12]	; (800cb2c <vApplicationGetIdleTaskMemory+0x18>)
 800cb1e:	600c      	str	r4, [r1, #0]
}
 800cb20:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cb24:	6013      	str	r3, [r2, #0]
}
 800cb26:	4770      	bx	lr
 800cb28:	200021bc 	.word	0x200021bc
 800cb2c:	20001fbc 	.word	0x20001fbc

0800cb30 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800cb30:	4b05      	ldr	r3, [pc, #20]	; (800cb48 <vApplicationGetTimerTaskMemory+0x18>)
 800cb32:	6003      	str	r3, [r0, #0]
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
 800cb34:	b410      	push	{r4}
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cb36:	f44f 7380 	mov.w	r3, #256	; 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800cb3a:	4c04      	ldr	r4, [pc, #16]	; (800cb4c <vApplicationGetTimerTaskMemory+0x1c>)
 800cb3c:	600c      	str	r4, [r1, #0]
}
 800cb3e:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800cb42:	6013      	str	r3, [r2, #0]
}
 800cb44:	4770      	bx	lr
 800cb46:	bf00      	nop
 800cb48:	2000266c 	.word	0x2000266c
 800cb4c:	2000226c 	.word	0x2000226c

0800cb50 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
 800cb50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb54:	4605      	mov	r5, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
 800cb56:	f001 ff43 	bl	800e9e0 <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
 800cb5a:	4a54      	ldr	r2, [pc, #336]	; (800ccac <pvPortMalloc+0x15c>)
 800cb5c:	6816      	ldr	r6, [r2, #0]
 800cb5e:	2e00      	cmp	r6, #0
 800cb60:	d06e      	beq.n	800cc40 <pvPortMalloc+0xf0>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800cb62:	4b53      	ldr	r3, [pc, #332]	; (800ccb0 <pvPortMalloc+0x160>)
 800cb64:	681f      	ldr	r7, [r3, #0]
 800cb66:	423d      	tst	r5, r7
 800cb68:	d12e      	bne.n	800cbc8 <pvPortMalloc+0x78>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
 800cb6a:	b36d      	cbz	r5, 800cbc8 <pvPortMalloc+0x78>
			{
				xWantedSize += xHeapStructSize;
 800cb6c:	f105 0408 	add.w	r4, r5, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800cb70:	076d      	lsls	r5, r5, #29
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800cb72:	bf1c      	itt	ne
 800cb74:	f024 0407 	bicne.w	r4, r4, #7
 800cb78:	3408      	addne	r4, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800cb7a:	b32c      	cbz	r4, 800cbc8 <pvPortMalloc+0x78>
 800cb7c:	f8df c144 	ldr.w	ip, [pc, #324]	; 800ccc4 <pvPortMalloc+0x174>
 800cb80:	f8dc 5000 	ldr.w	r5, [ip]
 800cb84:	42a5      	cmp	r5, r4
 800cb86:	d31f      	bcc.n	800cbc8 <pvPortMalloc+0x78>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
 800cb88:	484a      	ldr	r0, [pc, #296]	; (800ccb4 <pvPortMalloc+0x164>)
 800cb8a:	6803      	ldr	r3, [r0, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800cb8c:	e003      	b.n	800cb96 <pvPortMalloc+0x46>
 800cb8e:	681a      	ldr	r2, [r3, #0]
 800cb90:	b122      	cbz	r2, 800cb9c <pvPortMalloc+0x4c>
 800cb92:	4618      	mov	r0, r3
 800cb94:	4613      	mov	r3, r2
 800cb96:	6859      	ldr	r1, [r3, #4]
 800cb98:	42a1      	cmp	r1, r4
 800cb9a:	d3f8      	bcc.n	800cb8e <pvPortMalloc+0x3e>
					pxBlock = pxBlock->pxNextFreeBlock;
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
 800cb9c:	42b3      	cmp	r3, r6
 800cb9e:	d013      	beq.n	800cbc8 <pvPortMalloc+0x78>
				{
					/* Return the memory space pointed to - jumping over the
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800cba0:	4698      	mov	r8, r3
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cba2:	1b0a      	subs	r2, r1, r4
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800cba4:	f858 eb08 	ldr.w	lr, [r8], #8
 800cba8:	f8c0 e000 	str.w	lr, [r0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800cbac:	2a10      	cmp	r2, #16
 800cbae:	d929      	bls.n	800cc04 <pvPortMalloc+0xb4>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800cbb0:	1919      	adds	r1, r3, r4
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800cbb2:	0748      	lsls	r0, r1, #29
 800cbb4:	d00f      	beq.n	800cbd6 <pvPortMalloc+0x86>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800cbb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cbba:	f383 8811 	msr	BASEPRI, r3
 800cbbe:	f3bf 8f6f 	isb	sy
 800cbc2:	f3bf 8f4f 	dsb	sy
 800cbc6:	e7fe      	b.n	800cbc6 <pvPortMalloc+0x76>
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
 800cbc8:	f001 ff12 	bl	800e9f0 <xTaskResumeAll>
 800cbcc:	f04f 0800 	mov.w	r8, #0
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
 800cbd0:	4640      	mov	r0, r8
 800cbd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800cbd6:	604a      	str	r2, [r1, #4]
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cbd8:	4a36      	ldr	r2, [pc, #216]	; (800ccb4 <pvPortMalloc+0x164>)
						pxBlock->xBlockSize = xWantedSize;
 800cbda:	605c      	str	r4, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cbdc:	4614      	mov	r4, r2
 800cbde:	6812      	ldr	r2, [r2, #0]
 800cbe0:	4291      	cmp	r1, r2
 800cbe2:	d8fb      	bhi.n	800cbdc <pvPortMalloc+0x8c>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cbe4:	6860      	ldr	r0, [r4, #4]
 800cbe6:	eb04 0e00 	add.w	lr, r4, r0
 800cbea:	4571      	cmp	r1, lr
 800cbec:	d04b      	beq.n	800cc86 <pvPortMalloc+0x136>
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cbee:	f8d1 e004 	ldr.w	lr, [r1, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cbf2:	eb01 000e 	add.w	r0, r1, lr
 800cbf6:	4282      	cmp	r2, r0
 800cbf8:	d051      	beq.n	800cc9e <pvPortMalloc+0x14e>

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800cbfa:	428c      	cmp	r4, r1
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cbfc:	600a      	str	r2, [r1, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cbfe:	bf18      	it	ne
 800cc00:	6021      	strne	r1, [r4, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cc02:	6859      	ldr	r1, [r3, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cc04:	4a2c      	ldr	r2, [pc, #176]	; (800ccb8 <pvPortMalloc+0x168>)
 800cc06:	6810      	ldr	r0, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cc08:	1a6d      	subs	r5, r5, r1
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800cc0a:	4285      	cmp	r5, r0
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800cc0c:	bf38      	it	cc
 800cc0e:	6015      	strcc	r5, [r2, #0]
					xNumberOfSuccessfulAllocations++;
 800cc10:	4a2a      	ldr	r2, [pc, #168]	; (800ccbc <pvPortMalloc+0x16c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800cc12:	f8cc 5000 	str.w	r5, [ip]
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800cc16:	4339      	orrs	r1, r7
					pxBlock->pxNextFreeBlock = NULL;
 800cc18:	2000      	movs	r0, #0
 800cc1a:	e9c3 0100 	strd	r0, r1, [r3]
					xNumberOfSuccessfulAllocations++;
 800cc1e:	6813      	ldr	r3, [r2, #0]
 800cc20:	3301      	adds	r3, #1
 800cc22:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800cc24:	f001 fee4 	bl	800e9f0 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800cc28:	f018 0f07 	tst.w	r8, #7
 800cc2c:	d0d0      	beq.n	800cbd0 <pvPortMalloc+0x80>
 800cc2e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cc32:	f383 8811 	msr	BASEPRI, r3
 800cc36:	f3bf 8f6f 	isb	sy
 800cc3a:	f3bf 8f4f 	dsb	sy
 800cc3e:	e7fe      	b.n	800cc3e <pvPortMalloc+0xee>
	uxAddress = ( size_t ) ucHeap;
 800cc40:	4b1f      	ldr	r3, [pc, #124]	; (800ccc0 <pvPortMalloc+0x170>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800cc42:	075e      	lsls	r6, r3, #29
 800cc44:	d118      	bne.n	800cc78 <pvPortMalloc+0x128>
 800cc46:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
 800cc4a:	4619      	mov	r1, r3
	uxAddress -= xHeapStructSize;
 800cc4c:	3e08      	subs	r6, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cc4e:	f026 0607 	bic.w	r6, r6, #7
	pxEnd = ( void * ) uxAddress;
 800cc52:	6016      	str	r6, [r2, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cc54:	4a18      	ldr	r2, [pc, #96]	; (800ccb8 <pvPortMalloc+0x168>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cc56:	4817      	ldr	r0, [pc, #92]	; (800ccb4 <pvPortMalloc+0x164>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cc58:	4c15      	ldr	r4, [pc, #84]	; (800ccb0 <pvPortMalloc+0x160>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800cc5a:	6001      	str	r1, [r0, #0]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800cc5c:	1af3      	subs	r3, r6, r3
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cc5e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cc60:	4a18      	ldr	r2, [pc, #96]	; (800ccc4 <pvPortMalloc+0x174>)
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cc62:	f04f 4700 	mov.w	r7, #2147483648	; 0x80000000
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800cc66:	6013      	str	r3, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
 800cc68:	2200      	movs	r2, #0
 800cc6a:	6042      	str	r2, [r0, #4]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800cc6c:	6027      	str	r7, [r4, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800cc6e:	e9c6 2200 	strd	r2, r2, [r6]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800cc72:	e9c1 6300 	strd	r6, r3, [r1]
}
 800cc76:	e776      	b.n	800cb66 <pvPortMalloc+0x16>
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800cc78:	1dd9      	adds	r1, r3, #7
	pucAlignedHeap = ( uint8_t * ) uxAddress;
 800cc7a:	f021 0107 	bic.w	r1, r1, #7
 800cc7e:	f503 3680 	add.w	r6, r3, #65536	; 0x10000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800cc82:	460b      	mov	r3, r1
 800cc84:	e7e2      	b.n	800cc4c <pvPortMalloc+0xfc>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cc86:	6849      	ldr	r1, [r1, #4]
 800cc88:	eb00 0e01 	add.w	lr, r0, r1
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cc8c:	eb04 010e 	add.w	r1, r4, lr
 800cc90:	428a      	cmp	r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cc92:	f8c4 e004 	str.w	lr, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cc96:	d001      	beq.n	800cc9c <pvPortMalloc+0x14c>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cc98:	6022      	str	r2, [r4, #0]
	if( pxIterator != pxBlockToInsert )
 800cc9a:	e7b2      	b.n	800cc02 <pvPortMalloc+0xb2>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cc9c:	4621      	mov	r1, r4
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cc9e:	42b2      	cmp	r2, r6
 800cca0:	d0ab      	beq.n	800cbfa <pvPortMalloc+0xaa>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cca2:	6850      	ldr	r0, [r2, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cca4:	6812      	ldr	r2, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cca6:	4470      	add	r0, lr
 800cca8:	6048      	str	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800ccaa:	e7a6      	b.n	800cbfa <pvPortMalloc+0xaa>
 800ccac:	20002718 	.word	0x20002718
 800ccb0:	2001271c 	.word	0x2001271c
 800ccb4:	20012730 	.word	0x20012730
 800ccb8:	20012724 	.word	0x20012724
 800ccbc:	20012728 	.word	0x20012728
 800ccc0:	2000271c 	.word	0x2000271c
 800ccc4:	20012720 	.word	0x20012720

0800ccc8 <vPortFree>:
	if( pv != NULL )
 800ccc8:	b1d0      	cbz	r0, 800cd00 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ccca:	4a2c      	ldr	r2, [pc, #176]	; (800cd7c <vPortFree+0xb4>)
 800cccc:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800ccd0:	6812      	ldr	r2, [r2, #0]
 800ccd2:	4213      	tst	r3, r2
 800ccd4:	d00b      	beq.n	800ccee <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800ccd6:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800ccda:	b191      	cbz	r1, 800cd02 <vPortFree+0x3a>
 800ccdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cce0:	f383 8811 	msr	BASEPRI, r3
 800cce4:	f3bf 8f6f 	isb	sy
 800cce8:	f3bf 8f4f 	dsb	sy
 800ccec:	e7fe      	b.n	800ccec <vPortFree+0x24>
 800ccee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ccf2:	f383 8811 	msr	BASEPRI, r3
 800ccf6:	f3bf 8f6f 	isb	sy
 800ccfa:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800ccfe:	e7fe      	b.n	800ccfe <vPortFree+0x36>
 800cd00:	4770      	bx	lr
{
 800cd02:	b510      	push	{r4, lr}
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cd04:	ea23 0302 	bic.w	r3, r3, r2
{
 800cd08:	b082      	sub	sp, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cd0a:	f840 3c04 	str.w	r3, [r0, #-4]
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cd0e:	4c1c      	ldr	r4, [pc, #112]	; (800cd80 <vPortFree+0xb8>)
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800cd10:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
 800cd12:	f001 fe65 	bl	800e9e0 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cd16:	9801      	ldr	r0, [sp, #4]
 800cd18:	6822      	ldr	r2, [r4, #0]
 800cd1a:	f850 1c04 	ldr.w	r1, [r0, #-4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cd1e:	4b19      	ldr	r3, [pc, #100]	; (800cd84 <vPortFree+0xbc>)
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cd20:	440a      	add	r2, r1
		puc -= xHeapStructSize;
 800cd22:	3808      	subs	r0, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800cd24:	6022      	str	r2, [r4, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800cd26:	461a      	mov	r2, r3
 800cd28:	681b      	ldr	r3, [r3, #0]
 800cd2a:	4298      	cmp	r0, r3
 800cd2c:	d8fb      	bhi.n	800cd26 <vPortFree+0x5e>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800cd2e:	6854      	ldr	r4, [r2, #4]
 800cd30:	eb02 0e04 	add.w	lr, r2, r4
 800cd34:	4570      	cmp	r0, lr
 800cd36:	d010      	beq.n	800cd5a <vPortFree+0x92>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cd38:	eb00 0c01 	add.w	ip, r0, r1
 800cd3c:	4563      	cmp	r3, ip
 800cd3e:	d014      	beq.n	800cd6a <vPortFree+0xa2>
	if( pxIterator != pxBlockToInsert )
 800cd40:	4282      	cmp	r2, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cd42:	6003      	str	r3, [r0, #0]
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800cd44:	bf18      	it	ne
 800cd46:	6010      	strne	r0, [r2, #0]
					xNumberOfSuccessfulFrees++;
 800cd48:	4a0f      	ldr	r2, [pc, #60]	; (800cd88 <vPortFree+0xc0>)
 800cd4a:	6813      	ldr	r3, [r2, #0]
 800cd4c:	3301      	adds	r3, #1
 800cd4e:	6013      	str	r3, [r2, #0]
}
 800cd50:	b002      	add	sp, #8
 800cd52:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 800cd56:	f001 be4b 	b.w	800e9f0 <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cd5a:	4421      	add	r1, r4
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cd5c:	1850      	adds	r0, r2, r1
 800cd5e:	4283      	cmp	r3, r0
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800cd60:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cd62:	d001      	beq.n	800cd68 <vPortFree+0xa0>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cd64:	6013      	str	r3, [r2, #0]
	if( pxIterator != pxBlockToInsert )
 800cd66:	e7ef      	b.n	800cd48 <vPortFree+0x80>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800cd68:	4610      	mov	r0, r2
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800cd6a:	4c08      	ldr	r4, [pc, #32]	; (800cd8c <vPortFree+0xc4>)
 800cd6c:	6824      	ldr	r4, [r4, #0]
 800cd6e:	42a3      	cmp	r3, r4
 800cd70:	d0e6      	beq.n	800cd40 <vPortFree+0x78>
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cd72:	e9d3 3400 	ldrd	r3, r4, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800cd76:	4421      	add	r1, r4
 800cd78:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800cd7a:	e7e1      	b.n	800cd40 <vPortFree+0x78>
 800cd7c:	2001271c 	.word	0x2001271c
 800cd80:	20012720 	.word	0x20012720
 800cd84:	20012730 	.word	0x20012730
 800cd88:	2001272c 	.word	0x2001272c
 800cd8c:	20002718 	.word	0x20002718

0800cd90 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cd90:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cd94:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cd98:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800cd9a:	e9c0 3101 	strd	r3, r1, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800cd9e:	e9c0 3303 	strd	r3, r3, [r0, #12]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800cda2:	6002      	str	r2, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800cda4:	4770      	bx	lr
 800cda6:	bf00      	nop

0800cda8 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800cda8:	2300      	movs	r3, #0
 800cdaa:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800cdac:	4770      	bx	lr
 800cdae:	bf00      	nop

0800cdb0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800cdb0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800cdb2:	689a      	ldr	r2, [r3, #8]
 800cdb4:	608a      	str	r2, [r1, #8]
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cdb6:	6802      	ldr	r2, [r0, #0]
{
 800cdb8:	b410      	push	{r4}
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cdba:	689c      	ldr	r4, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 800cdbc:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cdbe:	3201      	adds	r2, #1
	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800cdc0:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800cdc2:	6099      	str	r1, [r3, #8]
}
 800cdc4:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
 800cdc8:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800cdca:	6002      	str	r2, [r0, #0]
}
 800cdcc:	4770      	bx	lr
 800cdce:	bf00      	nop

0800cdd0 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800cdd0:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800cdd2:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800cdd4:	1c6b      	adds	r3, r5, #1
 800cdd6:	d010      	beq.n	800cdfa <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800cdd8:	f100 0308 	add.w	r3, r0, #8
 800cddc:	461c      	mov	r4, r3
 800cdde:	685b      	ldr	r3, [r3, #4]
 800cde0:	681a      	ldr	r2, [r3, #0]
 800cde2:	42aa      	cmp	r2, r5
 800cde4:	d9fa      	bls.n	800cddc <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800cde6:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cde8:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
 800cdea:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800cdec:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800cdee:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800cdf0:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
 800cdf2:	6108      	str	r0, [r1, #16]
}
 800cdf4:	bc30      	pop	{r4, r5}
	( pxList->uxNumberOfItems )++;
 800cdf6:	6002      	str	r2, [r0, #0]
}
 800cdf8:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
 800cdfa:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
 800cdfc:	6863      	ldr	r3, [r4, #4]
 800cdfe:	e7f2      	b.n	800cde6 <vListInsert+0x16>

0800ce00 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 800ce00:	6903      	ldr	r3, [r0, #16]
{
 800ce02:	b410      	push	{r4}

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ce04:	e9d0 1201 	ldrd	r1, r2, [r0, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800ce08:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800ce0a:	608a      	str	r2, [r1, #8]
	if( pxList->pxIndex == pxItemToRemove )
 800ce0c:	4284      	cmp	r4, r0
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800ce0e:	6051      	str	r1, [r2, #4]
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800ce10:	bf08      	it	eq
 800ce12:	605a      	streq	r2, [r3, #4]
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;
 800ce14:	681a      	ldr	r2, [r3, #0]

	return pxList->uxNumberOfItems;
}
 800ce16:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxContainer = NULL;
 800ce1a:	2100      	movs	r1, #0
	( pxList->uxNumberOfItems )--;
 800ce1c:	3a01      	subs	r2, #1
	pxItemToRemove->pxContainer = NULL;
 800ce1e:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800ce20:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
 800ce22:	6818      	ldr	r0, [r3, #0]
}
 800ce24:	4770      	bx	lr
 800ce26:	bf00      	nop

0800ce28 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800ce28:	4808      	ldr	r0, [pc, #32]	; (800ce4c <prvPortStartFirstTask+0x24>)
 800ce2a:	6800      	ldr	r0, [r0, #0]
 800ce2c:	6800      	ldr	r0, [r0, #0]
 800ce2e:	f380 8808 	msr	MSP, r0
 800ce32:	f04f 0000 	mov.w	r0, #0
 800ce36:	f380 8814 	msr	CONTROL, r0
 800ce3a:	b662      	cpsie	i
 800ce3c:	b661      	cpsie	f
 800ce3e:	f3bf 8f4f 	dsb	sy
 800ce42:	f3bf 8f6f 	isb	sy
 800ce46:	df00      	svc	0
 800ce48:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800ce4a:	0000      	.short	0x0000
 800ce4c:	e000ed08 	.word	0xe000ed08

0800ce50 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800ce50:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800ce60 <vPortEnableVFP+0x10>
 800ce54:	6801      	ldr	r1, [r0, #0]
 800ce56:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800ce5a:	6001      	str	r1, [r0, #0]
 800ce5c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800ce5e:	0000      	.short	0x0000
 800ce60:	e000ed88 	.word	0xe000ed88

0800ce64 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
 800ce64:	4b0e      	ldr	r3, [pc, #56]	; (800cea0 <prvTaskExitError+0x3c>)
 800ce66:	681b      	ldr	r3, [r3, #0]
{
 800ce68:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800ce6a:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
 800ce6c:	3301      	adds	r3, #1
volatile uint32_t ulDummy = 0;
 800ce6e:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800ce70:	d008      	beq.n	800ce84 <prvTaskExitError+0x20>
 800ce72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce76:	f383 8811 	msr	BASEPRI, r3
 800ce7a:	f3bf 8f6f 	isb	sy
 800ce7e:	f3bf 8f4f 	dsb	sy
 800ce82:	e7fe      	b.n	800ce82 <prvTaskExitError+0x1e>
 800ce84:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ce88:	f383 8811 	msr	BASEPRI, r3
 800ce8c:	f3bf 8f6f 	isb	sy
 800ce90:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800ce94:	9b01      	ldr	r3, [sp, #4]
 800ce96:	2b00      	cmp	r3, #0
 800ce98:	d0fc      	beq.n	800ce94 <prvTaskExitError+0x30>
}
 800ce9a:	b002      	add	sp, #8
 800ce9c:	4770      	bx	lr
 800ce9e:	bf00      	nop
 800cea0:	20000084 	.word	0x20000084

0800cea4 <pxPortInitialiseStack>:
{
 800cea4:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800cea6:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ceaa:	4c07      	ldr	r4, [pc, #28]	; (800cec8 <pxPortInitialiseStack+0x24>)
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800ceac:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800ceb0:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800ceb4:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800ceb8:	e940 4103 	strd	r4, r1, [r0, #-12]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800cebc:	e940 3209 	strd	r3, r2, [r0, #-36]	; 0x24
}
 800cec0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cec4:	3844      	subs	r0, #68	; 0x44
 800cec6:	4770      	bx	lr
 800cec8:	0800ce65 	.word	0x0800ce65
 800cecc:	00000000 	.word	0x00000000

0800ced0 <SVC_Handler>:
	__asm volatile (
 800ced0:	4b07      	ldr	r3, [pc, #28]	; (800cef0 <pxCurrentTCBConst2>)
 800ced2:	6819      	ldr	r1, [r3, #0]
 800ced4:	6808      	ldr	r0, [r1, #0]
 800ced6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ceda:	f380 8809 	msr	PSP, r0
 800cede:	f3bf 8f6f 	isb	sy
 800cee2:	f04f 0000 	mov.w	r0, #0
 800cee6:	f380 8811 	msr	BASEPRI, r0
 800ceea:	4770      	bx	lr
 800ceec:	f3af 8000 	nop.w

0800cef0 <pxCurrentTCBConst2>:
 800cef0:	20012780 	.word	0x20012780

0800cef4 <vPortEnterCritical>:
 800cef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cef8:	f383 8811 	msr	BASEPRI, r3
 800cefc:	f3bf 8f6f 	isb	sy
 800cf00:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800cf04:	4a0b      	ldr	r2, [pc, #44]	; (800cf34 <vPortEnterCritical+0x40>)
 800cf06:	6813      	ldr	r3, [r2, #0]
 800cf08:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800cf0a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800cf0c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800cf0e:	d000      	beq.n	800cf12 <vPortEnterCritical+0x1e>
}
 800cf10:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800cf12:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf16:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800cf1a:	b2db      	uxtb	r3, r3
 800cf1c:	2b00      	cmp	r3, #0
 800cf1e:	d0f7      	beq.n	800cf10 <vPortEnterCritical+0x1c>
 800cf20:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf24:	f383 8811 	msr	BASEPRI, r3
 800cf28:	f3bf 8f6f 	isb	sy
 800cf2c:	f3bf 8f4f 	dsb	sy
 800cf30:	e7fe      	b.n	800cf30 <vPortEnterCritical+0x3c>
 800cf32:	bf00      	nop
 800cf34:	20000084 	.word	0x20000084

0800cf38 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800cf38:	4a08      	ldr	r2, [pc, #32]	; (800cf5c <vPortExitCritical+0x24>)
 800cf3a:	6813      	ldr	r3, [r2, #0]
 800cf3c:	b943      	cbnz	r3, 800cf50 <vPortExitCritical+0x18>
 800cf3e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cf42:	f383 8811 	msr	BASEPRI, r3
 800cf46:	f3bf 8f6f 	isb	sy
 800cf4a:	f3bf 8f4f 	dsb	sy
 800cf4e:	e7fe      	b.n	800cf4e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800cf50:	3b01      	subs	r3, #1
 800cf52:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800cf54:	b90b      	cbnz	r3, 800cf5a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800cf56:	f383 8811 	msr	BASEPRI, r3
}
 800cf5a:	4770      	bx	lr
 800cf5c:	20000084 	.word	0x20000084

0800cf60 <PendSV_Handler>:
	__asm volatile
 800cf60:	f3ef 8009 	mrs	r0, PSP
 800cf64:	f3bf 8f6f 	isb	sy
 800cf68:	4b15      	ldr	r3, [pc, #84]	; (800cfc0 <pxCurrentTCBConst>)
 800cf6a:	681a      	ldr	r2, [r3, #0]
 800cf6c:	f01e 0f10 	tst.w	lr, #16
 800cf70:	bf08      	it	eq
 800cf72:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800cf76:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf7a:	6010      	str	r0, [r2, #0]
 800cf7c:	e92d 0009 	stmdb	sp!, {r0, r3}
 800cf80:	f04f 0050 	mov.w	r0, #80	; 0x50
 800cf84:	f380 8811 	msr	BASEPRI, r0
 800cf88:	f3bf 8f4f 	dsb	sy
 800cf8c:	f3bf 8f6f 	isb	sy
 800cf90:	f001 fd54 	bl	800ea3c <vTaskSwitchContext>
 800cf94:	f04f 0000 	mov.w	r0, #0
 800cf98:	f380 8811 	msr	BASEPRI, r0
 800cf9c:	bc09      	pop	{r0, r3}
 800cf9e:	6819      	ldr	r1, [r3, #0]
 800cfa0:	6808      	ldr	r0, [r1, #0]
 800cfa2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfa6:	f01e 0f10 	tst.w	lr, #16
 800cfaa:	bf08      	it	eq
 800cfac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800cfb0:	f380 8809 	msr	PSP, r0
 800cfb4:	f3bf 8f6f 	isb	sy
 800cfb8:	4770      	bx	lr
 800cfba:	bf00      	nop
 800cfbc:	f3af 8000 	nop.w

0800cfc0 <pxCurrentTCBConst>:
 800cfc0:	20012780 	.word	0x20012780

0800cfc4 <xPortSysTickHandler>:
{
 800cfc4:	b508      	push	{r3, lr}
	__asm volatile
 800cfc6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800cfca:	f383 8811 	msr	BASEPRI, r3
 800cfce:	f3bf 8f6f 	isb	sy
 800cfd2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800cfd6:	f001 fd21 	bl	800ea1c <xTaskIncrementTick>
 800cfda:	b128      	cbz	r0, 800cfe8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800cfdc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfe0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cfe4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800cfe8:	2300      	movs	r3, #0
 800cfea:	f383 8811 	msr	BASEPRI, r3
}
 800cfee:	bd08      	pop	{r3, pc}

0800cff0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800cff0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800cff4:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800cff6:	4906      	ldr	r1, [pc, #24]	; (800d010 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800cff8:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800cffa:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800cffc:	680b      	ldr	r3, [r1, #0]
 800cffe:	4905      	ldr	r1, [pc, #20]	; (800d014 <vPortSetupTimerInterrupt+0x24>)
 800d000:	fba1 1303 	umull	r1, r3, r1, r3
 800d004:	099b      	lsrs	r3, r3, #6
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d006:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d008:	3b01      	subs	r3, #1
 800d00a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d00c:	6110      	str	r0, [r2, #16]
}
 800d00e:	4770      	bx	lr
 800d010:	20000078 	.word	0x20000078
 800d014:	10624dd3 	.word	0x10624dd3

0800d018 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d018:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d01c:	4a49      	ldr	r2, [pc, #292]	; (800d144 <xPortStartScheduler+0x12c>)
 800d01e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d022:	4291      	cmp	r1, r2
 800d024:	d043      	beq.n	800d0ae <xPortStartScheduler+0x96>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d026:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d02a:	4b47      	ldr	r3, [pc, #284]	; (800d148 <xPortStartScheduler+0x130>)
 800d02c:	429a      	cmp	r2, r3
 800d02e:	d035      	beq.n	800d09c <xPortStartScheduler+0x84>
{
 800d030:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d032:	4b46      	ldr	r3, [pc, #280]	; (800d14c <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d034:	4846      	ldr	r0, [pc, #280]	; (800d150 <xPortStartScheduler+0x138>)
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d036:	781a      	ldrb	r2, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d038:	4c46      	ldr	r4, [pc, #280]	; (800d154 <xPortStartScheduler+0x13c>)
{
 800d03a:	b084      	sub	sp, #16
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d03c:	21ff      	movs	r1, #255	; 0xff
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d03e:	b2d2      	uxtb	r2, r2
 800d040:	9202      	str	r2, [sp, #8]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d042:	7019      	strb	r1, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d044:	781b      	ldrb	r3, [r3, #0]
 800d046:	b2db      	uxtb	r3, r3
 800d048:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d04c:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d050:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d054:	f003 0350 	and.w	r3, r3, #80	; 0x50
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d058:	2107      	movs	r1, #7
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d05a:	7003      	strb	r3, [r0, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d05c:	0610      	lsls	r0, r2, #24
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d05e:	6021      	str	r1, [r4, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d060:	bf48      	it	mi
 800d062:	2206      	movmi	r2, #6
 800d064:	d511      	bpl.n	800d08a <xPortStartScheduler+0x72>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d066:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d06a:	005b      	lsls	r3, r3, #1
 800d06c:	b2db      	uxtb	r3, r3
 800d06e:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d072:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d076:	0609      	lsls	r1, r1, #24
 800d078:	4610      	mov	r0, r2
 800d07a:	f102 32ff 	add.w	r2, r2, #4294967295
 800d07e:	d4f2      	bmi.n	800d066 <xPortStartScheduler+0x4e>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d080:	2803      	cmp	r0, #3
 800d082:	6020      	str	r0, [r4, #0]
 800d084:	f88d 3007 	strb.w	r3, [sp, #7]
 800d088:	d01a      	beq.n	800d0c0 <xPortStartScheduler+0xa8>
	__asm volatile
 800d08a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d08e:	f383 8811 	msr	BASEPRI, r3
 800d092:	f3bf 8f6f 	isb	sy
 800d096:	f3bf 8f4f 	dsb	sy
 800d09a:	e7fe      	b.n	800d09a <xPortStartScheduler+0x82>
 800d09c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0a0:	f383 8811 	msr	BASEPRI, r3
 800d0a4:	f3bf 8f6f 	isb	sy
 800d0a8:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d0ac:	e7fe      	b.n	800d0ac <xPortStartScheduler+0x94>
 800d0ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d0b2:	f383 8811 	msr	BASEPRI, r3
 800d0b6:	f3bf 8f6f 	isb	sy
 800d0ba:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d0be:	e7fe      	b.n	800d0be <xPortStartScheduler+0xa6>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d0c0:	9b02      	ldr	r3, [sp, #8]
 800d0c2:	4a22      	ldr	r2, [pc, #136]	; (800d14c <xPortStartScheduler+0x134>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d0c4:	f04f 25e0 	mov.w	r5, #3758153728	; 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d0c8:	f44f 7140 	mov.w	r1, #768	; 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d0cc:	b2db      	uxtb	r3, r3
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d0ce:	6021      	str	r1, [r4, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d0d0:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d0d2:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d0d6:	4c20      	ldr	r4, [pc, #128]	; (800d158 <xPortStartScheduler+0x140>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d0d8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d0dc:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d0e0:	f8d5 3d20 	ldr.w	r3, [r5, #3360]	; 0xd20
 800d0e4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d0e8:	f8c5 3d20 	str.w	r3, [r5, #3360]	; 0xd20
	uxCriticalNesting = 0;
 800d0ec:	2600      	movs	r6, #0
	vPortSetupTimerInterrupt();
 800d0ee:	f7ff ff7f 	bl	800cff0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d0f2:	6026      	str	r6, [r4, #0]
	vPortEnableVFP();
 800d0f4:	f7ff feac 	bl	800ce50 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d0f8:	f8d5 3f34 	ldr.w	r3, [r5, #3892]	; 0xf34
 800d0fc:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d100:	f8c5 3f34 	str.w	r3, [r5, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d104:	f7ff fe90 	bl	800ce28 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d108:	f001 fc98 	bl	800ea3c <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
 800d10c:	6823      	ldr	r3, [r4, #0]
volatile uint32_t ulDummy = 0;
 800d10e:	9603      	str	r6, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
 800d110:	3301      	adds	r3, #1
 800d112:	d008      	beq.n	800d126 <xPortStartScheduler+0x10e>
 800d114:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d118:	f383 8811 	msr	BASEPRI, r3
 800d11c:	f3bf 8f6f 	isb	sy
 800d120:	f3bf 8f4f 	dsb	sy
 800d124:	e7fe      	b.n	800d124 <xPortStartScheduler+0x10c>
 800d126:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d12a:	f383 8811 	msr	BASEPRI, r3
 800d12e:	f3bf 8f6f 	isb	sy
 800d132:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d136:	9b03      	ldr	r3, [sp, #12]
 800d138:	2b00      	cmp	r3, #0
 800d13a:	d0fc      	beq.n	800d136 <xPortStartScheduler+0x11e>
}
 800d13c:	2000      	movs	r0, #0
 800d13e:	b004      	add	sp, #16
 800d140:	bd70      	pop	{r4, r5, r6, pc}
 800d142:	bf00      	nop
 800d144:	410fc271 	.word	0x410fc271
 800d148:	410fc270 	.word	0x410fc270
 800d14c:	e000e400 	.word	0xe000e400
 800d150:	20012738 	.word	0x20012738
 800d154:	2001273c 	.word	0x2001273c
 800d158:	20000084 	.word	0x20000084

0800d15c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d15c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d160:	2b0f      	cmp	r3, #15
 800d162:	d90e      	bls.n	800d182 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d164:	4911      	ldr	r1, [pc, #68]	; (800d1ac <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d166:	4a12      	ldr	r2, [pc, #72]	; (800d1b0 <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d168:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d16a:	7812      	ldrb	r2, [r2, #0]
 800d16c:	429a      	cmp	r2, r3
 800d16e:	d908      	bls.n	800d182 <vPortValidateInterruptPriority+0x26>
 800d170:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d174:	f383 8811 	msr	BASEPRI, r3
 800d178:	f3bf 8f6f 	isb	sy
 800d17c:	f3bf 8f4f 	dsb	sy
 800d180:	e7fe      	b.n	800d180 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d182:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d186:	4a0b      	ldr	r2, [pc, #44]	; (800d1b4 <vPortValidateInterruptPriority+0x58>)
 800d188:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d18c:	6812      	ldr	r2, [r2, #0]
 800d18e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d192:	4293      	cmp	r3, r2
 800d194:	d908      	bls.n	800d1a8 <vPortValidateInterruptPriority+0x4c>
 800d196:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d19a:	f383 8811 	msr	BASEPRI, r3
 800d19e:	f3bf 8f6f 	isb	sy
 800d1a2:	f3bf 8f4f 	dsb	sy
 800d1a6:	e7fe      	b.n	800d1a6 <vPortValidateInterruptPriority+0x4a>
	}
 800d1a8:	4770      	bx	lr
 800d1aa:	bf00      	nop
 800d1ac:	e000e3f0 	.word	0xe000e3f0
 800d1b0:	20012738 	.word	0x20012738
 800d1b4:	2001273c 	.word	0x2001273c

0800d1b8 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
 800d1b8:	b570      	push	{r4, r5, r6, lr}
 800d1ba:	4604      	mov	r4, r0

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d1bc:	6c00      	ldr	r0, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d1be:	6ba6      	ldr	r6, [r4, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d1c0:	b920      	cbnz	r0, 800d1cc <prvCopyDataToQueue+0x14>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d1c2:	6825      	ldr	r5, [r4, #0]
 800d1c4:	b34d      	cbz	r5, 800d21a <prvCopyDataToQueue+0x62>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d1c6:	3601      	adds	r6, #1
 800d1c8:	63a6      	str	r6, [r4, #56]	; 0x38

	return xReturn;
}
 800d1ca:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d1cc:	4615      	mov	r5, r2
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d1ce:	4602      	mov	r2, r0
	else if( xPosition == queueSEND_TO_BACK )
 800d1d0:	b97d      	cbnz	r5, 800d1f2 <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d1d2:	6860      	ldr	r0, [r4, #4]
 800d1d4:	f01c fee9 	bl	8029faa <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d1d8:	6863      	ldr	r3, [r4, #4]
 800d1da:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d1dc:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d1de:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d1e0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d1e2:	4293      	cmp	r3, r2
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d1e4:	bf24      	itt	cs
 800d1e6:	6823      	ldrcs	r3, [r4, #0]
 800d1e8:	6063      	strcs	r3, [r4, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d1ea:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d1ec:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d1ee:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d1f0:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d1f2:	68e0      	ldr	r0, [r4, #12]
 800d1f4:	f01c fed9 	bl	8029faa <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d1f8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d1fa:	68e3      	ldr	r3, [r4, #12]
 800d1fc:	4251      	negs	r1, r2
 800d1fe:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d200:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d202:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d204:	4293      	cmp	r3, r2
 800d206:	d202      	bcs.n	800d20e <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d208:	68a3      	ldr	r3, [r4, #8]
 800d20a:	440b      	add	r3, r1
 800d20c:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d20e:	2d02      	cmp	r5, #2
 800d210:	d008      	beq.n	800d224 <prvCopyDataToQueue+0x6c>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d212:	3601      	adds	r6, #1
BaseType_t xReturn = pdFALSE;
 800d214:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d216:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d218:	bd70      	pop	{r4, r5, r6, pc}
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d21a:	68a0      	ldr	r0, [r4, #8]
 800d21c:	f001 fde0 	bl	800ede0 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d220:	60a5      	str	r5, [r4, #8]
 800d222:	e7d0      	b.n	800d1c6 <prvCopyDataToQueue+0xe>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d224:	2e01      	cmp	r6, #1
 800d226:	bf38      	it	cc
 800d228:	2601      	movcc	r6, #1
BaseType_t xReturn = pdFALSE;
 800d22a:	2000      	movs	r0, #0
 800d22c:	e7cc      	b.n	800d1c8 <prvCopyDataToQueue+0x10>
 800d22e:	bf00      	nop

0800d230 <xQueueGenericCreateStatic>:
	{
 800d230:	b530      	push	{r4, r5, lr}
 800d232:	b083      	sub	sp, #12
 800d234:	f89d 4018 	ldrb.w	r4, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d238:	b940      	cbnz	r0, 800d24c <xQueueGenericCreateStatic+0x1c>
 800d23a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d23e:	f383 8811 	msr	BASEPRI, r3
 800d242:	f3bf 8f6f 	isb	sy
 800d246:	f3bf 8f4f 	dsb	sy
 800d24a:	e7fe      	b.n	800d24a <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
 800d24c:	461d      	mov	r5, r3
 800d24e:	b17b      	cbz	r3, 800d270 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d250:	b302      	cbz	r2, 800d294 <xQueueGenericCreateStatic+0x64>
 800d252:	b1b1      	cbz	r1, 800d282 <xQueueGenericCreateStatic+0x52>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d254:	2350      	movs	r3, #80	; 0x50
 800d256:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d258:	9b01      	ldr	r3, [sp, #4]
 800d25a:	2b50      	cmp	r3, #80	; 0x50
 800d25c:	d023      	beq.n	800d2a6 <xQueueGenericCreateStatic+0x76>
 800d25e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d262:	f383 8811 	msr	BASEPRI, r3
 800d266:	f3bf 8f6f 	isb	sy
 800d26a:	f3bf 8f4f 	dsb	sy
 800d26e:	e7fe      	b.n	800d26e <xQueueGenericCreateStatic+0x3e>
 800d270:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d274:	f383 8811 	msr	BASEPRI, r3
 800d278:	f3bf 8f6f 	isb	sy
 800d27c:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d280:	e7fe      	b.n	800d280 <xQueueGenericCreateStatic+0x50>
 800d282:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d286:	f383 8811 	msr	BASEPRI, r3
 800d28a:	f3bf 8f6f 	isb	sy
 800d28e:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d292:	e7fe      	b.n	800d292 <xQueueGenericCreateStatic+0x62>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d294:	bb89      	cbnz	r1, 800d2fa <xQueueGenericCreateStatic+0xca>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d296:	2250      	movs	r2, #80	; 0x50
 800d298:	9201      	str	r2, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d29a:	9a01      	ldr	r2, [sp, #4]
 800d29c:	2a50      	cmp	r2, #80	; 0x50
 800d29e:	d1de      	bne.n	800d25e <xQueueGenericCreateStatic+0x2e>
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d2a0:	9a01      	ldr	r2, [sp, #4]
 800d2a2:	462a      	mov	r2, r5
 800d2a4:	e000      	b.n	800d2a8 <xQueueGenericCreateStatic+0x78>
 800d2a6:	9b01      	ldr	r3, [sp, #4]
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d2a8:	602a      	str	r2, [r5, #0]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d2aa:	2201      	movs	r2, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d2ac:	e9c5 010f 	strd	r0, r1, [r5, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d2b0:	f885 2046 	strb.w	r2, [r5, #70]	; 0x46
	taskENTER_CRITICAL();
 800d2b4:	f7ff fe1e 	bl	800cef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2b8:	e9d5 120f 	ldrd	r1, r2, [r5, #60]	; 0x3c
 800d2bc:	6828      	ldr	r0, [r5, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d2be:	6068      	str	r0, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2c0:	fb02 f101 	mul.w	r1, r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2c4:	1a8a      	subs	r2, r1, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2c6:	4401      	add	r1, r0
 800d2c8:	60a9      	str	r1, [r5, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d2ca:	2100      	movs	r1, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2cc:	4402      	add	r2, r0
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d2ce:	63a9      	str	r1, [r5, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d2d0:	21ff      	movs	r1, #255	; 0xff
 800d2d2:	f885 1044 	strb.w	r1, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d2d6:	60ea      	str	r2, [r5, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d2d8:	f885 1045 	strb.w	r1, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d2dc:	f105 0010 	add.w	r0, r5, #16
 800d2e0:	f7ff fd56 	bl	800cd90 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d2e4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d2e8:	f7ff fd52 	bl	800cd90 <vListInitialise>
	taskEXIT_CRITICAL();
 800d2ec:	f7ff fe24 	bl	800cf38 <vPortExitCritical>
	}
 800d2f0:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d2f2:	f885 404c 	strb.w	r4, [r5, #76]	; 0x4c
	}
 800d2f6:	b003      	add	sp, #12
 800d2f8:	bd30      	pop	{r4, r5, pc}
 800d2fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2fe:	f383 8811 	msr	BASEPRI, r3
 800d302:	f3bf 8f6f 	isb	sy
 800d306:	f3bf 8f4f 	dsb	sy
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d30a:	e7fe      	b.n	800d30a <xQueueGenericCreateStatic+0xda>

0800d30c <xQueueGenericCreate>:
	{
 800d30c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d30e:	b940      	cbnz	r0, 800d322 <xQueueGenericCreate+0x16>
 800d310:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d314:	f383 8811 	msr	BASEPRI, r3
 800d318:	f3bf 8f6f 	isb	sy
 800d31c:	f3bf 8f4f 	dsb	sy
 800d320:	e7fe      	b.n	800d320 <xQueueGenericCreate+0x14>
 800d322:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d324:	fb01 f000 	mul.w	r0, r1, r0
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d328:	3050      	adds	r0, #80	; 0x50
 800d32a:	460e      	mov	r6, r1
 800d32c:	4617      	mov	r7, r2
 800d32e:	f7ff fc0f 	bl	800cb50 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d332:	4604      	mov	r4, r0
 800d334:	b340      	cbz	r0, 800d388 <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d336:	2300      	movs	r3, #0
 800d338:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d33c:	b336      	cbz	r6, 800d38c <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d33e:	f100 0350 	add.w	r3, r0, #80	; 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 800d342:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d344:	e9c4 560f 	strd	r5, r6, [r4, #60]	; 0x3c
	taskENTER_CRITICAL();
 800d348:	f7ff fdd4 	bl	800cef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d34c:	e9d4 230f 	ldrd	r2, r3, [r4, #60]	; 0x3c
 800d350:	6821      	ldr	r1, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d352:	6061      	str	r1, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d354:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d358:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d35a:	440a      	add	r2, r1
 800d35c:	60a2      	str	r2, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d35e:	2200      	movs	r2, #0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d360:	440b      	add	r3, r1
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d362:	63a2      	str	r2, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d364:	22ff      	movs	r2, #255	; 0xff
 800d366:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d36a:	60e3      	str	r3, [r4, #12]
		pxQueue->cTxLock = queueUNLOCKED;
 800d36c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d370:	f104 0010 	add.w	r0, r4, #16
 800d374:	f7ff fd0c 	bl	800cd90 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d378:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d37c:	f7ff fd08 	bl	800cd90 <vListInitialise>
	taskEXIT_CRITICAL();
 800d380:	f7ff fdda 	bl	800cf38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d384:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d388:	4620      	mov	r0, r4
 800d38a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d38c:	4603      	mov	r3, r0
 800d38e:	e7d8      	b.n	800d342 <xQueueGenericCreate+0x36>

0800d390 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
 800d390:	b940      	cbnz	r0, 800d3a4 <xQueueCreateCountingSemaphoreStatic+0x14>
 800d392:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d396:	f383 8811 	msr	BASEPRI, r3
 800d39a:	f3bf 8f6f 	isb	sy
 800d39e:	f3bf 8f4f 	dsb	sy
 800d3a2:	e7fe      	b.n	800d3a2 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d3a4:	4288      	cmp	r0, r1
 800d3a6:	d208      	bcs.n	800d3ba <xQueueCreateCountingSemaphoreStatic+0x2a>
 800d3a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3ac:	f383 8811 	msr	BASEPRI, r3
 800d3b0:	f3bf 8f6f 	isb	sy
 800d3b4:	f3bf 8f4f 	dsb	sy
 800d3b8:	e7fe      	b.n	800d3b8 <xQueueCreateCountingSemaphoreStatic+0x28>
	{
 800d3ba:	b530      	push	{r4, r5, lr}
 800d3bc:	4615      	mov	r5, r2
 800d3be:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
 800d3c0:	2a00      	cmp	r2, #0
 800d3c2:	d03c      	beq.n	800d43e <xQueueCreateCountingSemaphoreStatic+0xae>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d3c4:	2350      	movs	r3, #80	; 0x50
 800d3c6:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d3c8:	9b03      	ldr	r3, [sp, #12]
 800d3ca:	2b50      	cmp	r3, #80	; 0x50
 800d3cc:	d008      	beq.n	800d3e0 <xQueueCreateCountingSemaphoreStatic+0x50>
 800d3ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3d2:	f383 8811 	msr	BASEPRI, r3
 800d3d6:	f3bf 8f6f 	isb	sy
 800d3da:	f3bf 8f4f 	dsb	sy
 800d3de:	e7fe      	b.n	800d3de <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
 800d3e0:	2400      	movs	r4, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d3e2:	2301      	movs	r3, #1
 800d3e4:	f882 3046 	strb.w	r3, [r2, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d3e8:	602a      	str	r2, [r5, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800d3ea:	e9c2 040f 	strd	r0, r4, [r2, #60]	; 0x3c
 800d3ee:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d3f0:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
 800d3f2:	f7ff fd7f 	bl	800cef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d3f6:	e9d5 030f 	ldrd	r0, r3, [r5, #60]	; 0x3c
 800d3fa:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d3fc:	63ac      	str	r4, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d3fe:	fb03 f000 	mul.w	r0, r3, r0
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d402:	1ac3      	subs	r3, r0, r3
 800d404:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d406:	4410      	add	r0, r2
		pxQueue->cRxLock = queueUNLOCKED;
 800d408:	f04f 0eff 	mov.w	lr, #255	; 0xff
 800d40c:	f885 e044 	strb.w	lr, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d410:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d412:	606a      	str	r2, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d414:	f885 e045 	strb.w	lr, [r5, #69]	; 0x45
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d418:	60a8      	str	r0, [r5, #8]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d41a:	f105 0010 	add.w	r0, r5, #16
 800d41e:	f7ff fcb7 	bl	800cd90 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d422:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d426:	f7ff fcb3 	bl	800cd90 <vListInitialise>
	taskEXIT_CRITICAL();
 800d42a:	f7ff fd85 	bl	800cf38 <vPortExitCritical>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d42e:	9901      	ldr	r1, [sp, #4]
 800d430:	63a9      	str	r1, [r5, #56]	; 0x38
		pxNewQueue->ucQueueType = ucQueueType;
 800d432:	2302      	movs	r3, #2
	}
 800d434:	4628      	mov	r0, r5
		pxNewQueue->ucQueueType = ucQueueType;
 800d436:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
	}
 800d43a:	b005      	add	sp, #20
 800d43c:	bd30      	pop	{r4, r5, pc}
 800d43e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d442:	f383 8811 	msr	BASEPRI, r3
 800d446:	f3bf 8f6f 	isb	sy
 800d44a:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
 800d44e:	e7fe      	b.n	800d44e <xQueueCreateCountingSemaphoreStatic+0xbe>

0800d450 <xQueueCreateCountingSemaphore>:
	{
 800d450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
 800d452:	b940      	cbnz	r0, 800d466 <xQueueCreateCountingSemaphore+0x16>
 800d454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d458:	f383 8811 	msr	BASEPRI, r3
 800d45c:	f3bf 8f6f 	isb	sy
 800d460:	f3bf 8f4f 	dsb	sy
 800d464:	e7fe      	b.n	800d464 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d466:	4288      	cmp	r0, r1
 800d468:	460e      	mov	r6, r1
 800d46a:	4604      	mov	r4, r0
 800d46c:	d208      	bcs.n	800d480 <xQueueCreateCountingSemaphore+0x30>
 800d46e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d472:	f383 8811 	msr	BASEPRI, r3
 800d476:	f3bf 8f6f 	isb	sy
 800d47a:	f3bf 8f4f 	dsb	sy
 800d47e:	e7fe      	b.n	800d47e <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d480:	2050      	movs	r0, #80	; 0x50
 800d482:	f7ff fb65 	bl	800cb50 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d486:	4605      	mov	r5, r0
 800d488:	b330      	cbz	r0, 800d4d8 <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d48a:	2700      	movs	r7, #0
	pxNewQueue->uxItemSize = uxItemSize;
 800d48c:	e9c0 470f 	strd	r4, r7, [r0, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d490:	f880 7046 	strb.w	r7, [r0, #70]	; 0x46
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 800d494:	6000      	str	r0, [r0, #0]
	taskENTER_CRITICAL();
 800d496:	f7ff fd2d 	bl	800cef4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d49a:	e9d5 230f 	ldrd	r2, r3, [r5, #60]	; 0x3c
 800d49e:	6829      	ldr	r1, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d4a0:	63af      	str	r7, [r5, #56]	; 0x38
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4a2:	fb03 f202 	mul.w	r2, r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4a6:	1ad3      	subs	r3, r2, r3
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4a8:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4aa:	440b      	add	r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4ac:	60aa      	str	r2, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
 800d4ae:	22ff      	movs	r2, #255	; 0xff
 800d4b0:	f885 2044 	strb.w	r2, [r5, #68]	; 0x44
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d4b4:	60eb      	str	r3, [r5, #12]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d4b6:	6069      	str	r1, [r5, #4]
		pxQueue->cTxLock = queueUNLOCKED;
 800d4b8:	f885 2045 	strb.w	r2, [r5, #69]	; 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d4bc:	f105 0010 	add.w	r0, r5, #16
 800d4c0:	f7ff fc66 	bl	800cd90 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d4c4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800d4c8:	f7ff fc62 	bl	800cd90 <vListInitialise>
	taskEXIT_CRITICAL();
 800d4cc:	f7ff fd34 	bl	800cf38 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
 800d4d0:	2302      	movs	r3, #2
 800d4d2:	f885 304c 	strb.w	r3, [r5, #76]	; 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d4d6:	63ae      	str	r6, [r5, #56]	; 0x38
	}
 800d4d8:	4628      	mov	r0, r5
 800d4da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d4dc <xQueueGenericSend>:
{
 800d4dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d4e0:	b085      	sub	sp, #20
 800d4e2:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 800d4e4:	2800      	cmp	r0, #0
 800d4e6:	f000 80a4 	beq.w	800d632 <xQueueGenericSend+0x156>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d4ea:	4688      	mov	r8, r1
 800d4ec:	461f      	mov	r7, r3
 800d4ee:	4604      	mov	r4, r0
 800d4f0:	2900      	cmp	r1, #0
 800d4f2:	f000 8091 	beq.w	800d618 <xQueueGenericSend+0x13c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d4f6:	2f02      	cmp	r7, #2
 800d4f8:	d10b      	bne.n	800d512 <xQueueGenericSend+0x36>
 800d4fa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d4fc:	2b01      	cmp	r3, #1
 800d4fe:	d008      	beq.n	800d512 <xQueueGenericSend+0x36>
 800d500:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d504:	f383 8811 	msr	BASEPRI, r3
 800d508:	f3bf 8f6f 	isb	sy
 800d50c:	f3bf 8f4f 	dsb	sy
 800d510:	e7fe      	b.n	800d510 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d512:	f001 fc0f 	bl	800ed34 <xTaskGetSchedulerState>
 800d516:	4605      	mov	r5, r0
 800d518:	2800      	cmp	r0, #0
 800d51a:	f000 8093 	beq.w	800d644 <xQueueGenericSend+0x168>
 800d51e:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d520:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800d524:	f7ff fce6 	bl	800cef4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d528:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d52a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d52c:	429a      	cmp	r2, r3
 800d52e:	f0c0 80ef 	bcc.w	800d710 <xQueueGenericSend+0x234>
 800d532:	2f02      	cmp	r7, #2
 800d534:	f000 80ec 	beq.w	800d710 <xQueueGenericSend+0x234>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d538:	9801      	ldr	r0, [sp, #4]
 800d53a:	2800      	cmp	r0, #0
 800d53c:	f000 8101 	beq.w	800d742 <xQueueGenericSend+0x266>
				else if( xEntryTimeSet == pdFALSE )
 800d540:	2d00      	cmp	r5, #0
 800d542:	f000 80e1 	beq.w	800d708 <xQueueGenericSend+0x22c>
		taskEXIT_CRITICAL();
 800d546:	f7ff fcf7 	bl	800cf38 <vPortExitCritical>
		vTaskSuspendAll();
 800d54a:	f001 fa49 	bl	800e9e0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d54e:	f7ff fcd1 	bl	800cef4 <vPortEnterCritical>
 800d552:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d556:	2bff      	cmp	r3, #255	; 0xff
 800d558:	bf04      	itt	eq
 800d55a:	2300      	moveq	r3, #0
 800d55c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800d560:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d564:	2bff      	cmp	r3, #255	; 0xff
 800d566:	bf04      	itt	eq
 800d568:	2300      	moveq	r3, #0
 800d56a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800d56e:	f7ff fce3 	bl	800cf38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d572:	a901      	add	r1, sp, #4
 800d574:	a802      	add	r0, sp, #8
 800d576:	f001 fb8f 	bl	800ec98 <xTaskCheckForTimeOut>
 800d57a:	2800      	cmp	r0, #0
 800d57c:	f040 80e6 	bne.w	800d74c <xQueueGenericSend+0x270>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d580:	f7ff fcb8 	bl	800cef4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d584:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d586:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d588:	429a      	cmp	r2, r3
 800d58a:	d068      	beq.n	800d65e <xQueueGenericSend+0x182>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d58c:	f7ff fcd4 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d590:	f7ff fcb0 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d594:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800d598:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d59a:	2d00      	cmp	r5, #0
 800d59c:	dc04      	bgt.n	800d5a8 <xQueueGenericSend+0xcc>
 800d59e:	e011      	b.n	800d5c4 <xQueueGenericSend+0xe8>
			--cTxLock;
 800d5a0:	1e6a      	subs	r2, r5, #1
 800d5a2:	b2d3      	uxtb	r3, r2
 800d5a4:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5a6:	b16b      	cbz	r3, 800d5c4 <xQueueGenericSend+0xe8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5aa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d5ac:	b153      	cbz	r3, 800d5c4 <xQueueGenericSend+0xe8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d5ae:	f001 fb1f 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d5b2:	2800      	cmp	r0, #0
 800d5b4:	d0f4      	beq.n	800d5a0 <xQueueGenericSend+0xc4>
						vTaskMissedYield();
 800d5b6:	f001 fbb7 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800d5ba:	1e6a      	subs	r2, r5, #1
 800d5bc:	b2d3      	uxtb	r3, r2
 800d5be:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d5c0:	2b00      	cmp	r3, #0
 800d5c2:	d1f1      	bne.n	800d5a8 <xQueueGenericSend+0xcc>
		pxQueue->cTxLock = queueUNLOCKED;
 800d5c4:	23ff      	movs	r3, #255	; 0xff
 800d5c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d5ca:	f7ff fcb5 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d5ce:	f7ff fc91 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d5d2:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800d5d6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d5d8:	2d00      	cmp	r5, #0
 800d5da:	dd14      	ble.n	800d606 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d5dc:	f104 0910 	add.w	r9, r4, #16
 800d5e0:	e003      	b.n	800d5ea <xQueueGenericSend+0x10e>
				--cRxLock;
 800d5e2:	1e6a      	subs	r2, r5, #1
 800d5e4:	b2d3      	uxtb	r3, r2
 800d5e6:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d5e8:	b16b      	cbz	r3, 800d606 <xQueueGenericSend+0x12a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d5ea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d5ec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d5ee:	b153      	cbz	r3, 800d606 <xQueueGenericSend+0x12a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d5f0:	f001 fafe 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d5f4:	2800      	cmp	r0, #0
 800d5f6:	d0f4      	beq.n	800d5e2 <xQueueGenericSend+0x106>
					vTaskMissedYield();
 800d5f8:	f001 fb96 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800d5fc:	1e6a      	subs	r2, r5, #1
 800d5fe:	b2d3      	uxtb	r3, r2
 800d600:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d602:	2b00      	cmp	r3, #0
 800d604:	d1f1      	bne.n	800d5ea <xQueueGenericSend+0x10e>
		pxQueue->cRxLock = queueUNLOCKED;
 800d606:	23ff      	movs	r3, #255	; 0xff
 800d608:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d60c:	f7ff fc94 	bl	800cf38 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800d610:	f001 f9ee 	bl	800e9f0 <xTaskResumeAll>
 800d614:	2501      	movs	r5, #1
 800d616:	e785      	b.n	800d524 <xQueueGenericSend+0x48>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d618:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d61a:	2b00      	cmp	r3, #0
 800d61c:	f43f af6b 	beq.w	800d4f6 <xQueueGenericSend+0x1a>
 800d620:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d624:	f383 8811 	msr	BASEPRI, r3
 800d628:	f3bf 8f6f 	isb	sy
 800d62c:	f3bf 8f4f 	dsb	sy
 800d630:	e7fe      	b.n	800d630 <xQueueGenericSend+0x154>
 800d632:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d636:	f383 8811 	msr	BASEPRI, r3
 800d63a:	f3bf 8f6f 	isb	sy
 800d63e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d642:	e7fe      	b.n	800d642 <xQueueGenericSend+0x166>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d644:	9b01      	ldr	r3, [sp, #4]
 800d646:	2b00      	cmp	r3, #0
 800d648:	f43f af6a 	beq.w	800d520 <xQueueGenericSend+0x44>
 800d64c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d650:	f383 8811 	msr	BASEPRI, r3
 800d654:	f3bf 8f6f 	isb	sy
 800d658:	f3bf 8f4f 	dsb	sy
 800d65c:	e7fe      	b.n	800d65c <xQueueGenericSend+0x180>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d65e:	f104 0910 	add.w	r9, r4, #16
	taskEXIT_CRITICAL();
 800d662:	f7ff fc69 	bl	800cf38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d666:	9901      	ldr	r1, [sp, #4]
 800d668:	4648      	mov	r0, r9
 800d66a:	f001 fa33 	bl	800ead4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800d66e:	f7ff fc41 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d672:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d676:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d678:	2d00      	cmp	r5, #0
 800d67a:	dc04      	bgt.n	800d686 <xQueueGenericSend+0x1aa>
 800d67c:	e011      	b.n	800d6a2 <xQueueGenericSend+0x1c6>
			--cTxLock;
 800d67e:	1e6b      	subs	r3, r5, #1
 800d680:	b2da      	uxtb	r2, r3
 800d682:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d684:	b16a      	cbz	r2, 800d6a2 <xQueueGenericSend+0x1c6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d686:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d688:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d68a:	b153      	cbz	r3, 800d6a2 <xQueueGenericSend+0x1c6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d68c:	f001 fab0 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d690:	2800      	cmp	r0, #0
 800d692:	d0f4      	beq.n	800d67e <xQueueGenericSend+0x1a2>
						vTaskMissedYield();
 800d694:	f001 fb48 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800d698:	1e6b      	subs	r3, r5, #1
 800d69a:	b2da      	uxtb	r2, r3
 800d69c:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d69e:	2a00      	cmp	r2, #0
 800d6a0:	d1f1      	bne.n	800d686 <xQueueGenericSend+0x1aa>
		pxQueue->cTxLock = queueUNLOCKED;
 800d6a2:	23ff      	movs	r3, #255	; 0xff
 800d6a4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d6a8:	f7ff fc46 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d6ac:	f7ff fc22 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d6b0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d6b4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6b6:	2d00      	cmp	r5, #0
 800d6b8:	dc04      	bgt.n	800d6c4 <xQueueGenericSend+0x1e8>
 800d6ba:	e011      	b.n	800d6e0 <xQueueGenericSend+0x204>
				--cRxLock;
 800d6bc:	1e6b      	subs	r3, r5, #1
 800d6be:	b2da      	uxtb	r2, r3
 800d6c0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6c2:	b16a      	cbz	r2, 800d6e0 <xQueueGenericSend+0x204>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d6c4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6c6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d6c8:	b153      	cbz	r3, 800d6e0 <xQueueGenericSend+0x204>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6ca:	f001 fa91 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d6ce:	2800      	cmp	r0, #0
 800d6d0:	d0f4      	beq.n	800d6bc <xQueueGenericSend+0x1e0>
					vTaskMissedYield();
 800d6d2:	f001 fb29 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800d6d6:	1e6b      	subs	r3, r5, #1
 800d6d8:	b2da      	uxtb	r2, r3
 800d6da:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6dc:	2a00      	cmp	r2, #0
 800d6de:	d1f1      	bne.n	800d6c4 <xQueueGenericSend+0x1e8>
		pxQueue->cRxLock = queueUNLOCKED;
 800d6e0:	23ff      	movs	r3, #255	; 0xff
 800d6e2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d6e6:	f7ff fc27 	bl	800cf38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800d6ea:	f001 f981 	bl	800e9f0 <xTaskResumeAll>
 800d6ee:	2800      	cmp	r0, #0
 800d6f0:	d190      	bne.n	800d614 <xQueueGenericSend+0x138>
					portYIELD_WITHIN_API();
 800d6f2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d6f6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d6fa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d6fe:	f3bf 8f4f 	dsb	sy
 800d702:	f3bf 8f6f 	isb	sy
 800d706:	e785      	b.n	800d614 <xQueueGenericSend+0x138>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d708:	a802      	add	r0, sp, #8
 800d70a:	f001 fab9 	bl	800ec80 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800d70e:	e71a      	b.n	800d546 <xQueueGenericSend+0x6a>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d710:	463a      	mov	r2, r7
 800d712:	4641      	mov	r1, r8
 800d714:	4620      	mov	r0, r4
 800d716:	f7ff fd4f 	bl	800d1b8 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d71a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d71c:	2b00      	cmp	r3, #0
 800d71e:	d153      	bne.n	800d7c8 <xQueueGenericSend+0x2ec>
					else if( xYieldRequired != pdFALSE )
 800d720:	b148      	cbz	r0, 800d736 <xQueueGenericSend+0x25a>
						queueYIELD_IF_USING_PREEMPTION();
 800d722:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d726:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d72a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d72e:	f3bf 8f4f 	dsb	sy
 800d732:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800d736:	f7ff fbff 	bl	800cf38 <vPortExitCritical>
				return pdPASS;
 800d73a:	2001      	movs	r0, #1
}
 800d73c:	b005      	add	sp, #20
 800d73e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d742:	9000      	str	r0, [sp, #0]
					taskEXIT_CRITICAL();
 800d744:	f7ff fbf8 	bl	800cf38 <vPortExitCritical>
					return errQUEUE_FULL;
 800d748:	9800      	ldr	r0, [sp, #0]
 800d74a:	e7f7      	b.n	800d73c <xQueueGenericSend+0x260>
	taskENTER_CRITICAL();
 800d74c:	f7ff fbd2 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d750:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d754:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d756:	2d00      	cmp	r5, #0
 800d758:	dd10      	ble.n	800d77c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d75a:	f104 0624 	add.w	r6, r4, #36	; 0x24
 800d75e:	e003      	b.n	800d768 <xQueueGenericSend+0x28c>
			--cTxLock;
 800d760:	1e6b      	subs	r3, r5, #1
 800d762:	b2da      	uxtb	r2, r3
 800d764:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d766:	b14a      	cbz	r2, 800d77c <xQueueGenericSend+0x2a0>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d768:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d76a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d76c:	b133      	cbz	r3, 800d77c <xQueueGenericSend+0x2a0>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d76e:	f001 fa3f 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d772:	2800      	cmp	r0, #0
 800d774:	d0f4      	beq.n	800d760 <xQueueGenericSend+0x284>
						vTaskMissedYield();
 800d776:	f001 fad7 	bl	800ed28 <vTaskMissedYield>
 800d77a:	e7f1      	b.n	800d760 <xQueueGenericSend+0x284>
		pxQueue->cTxLock = queueUNLOCKED;
 800d77c:	23ff      	movs	r3, #255	; 0xff
 800d77e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d782:	f7ff fbd9 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d786:	f7ff fbb5 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d78a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d78e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d790:	2d00      	cmp	r5, #0
 800d792:	dd10      	ble.n	800d7b6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d794:	f104 0610 	add.w	r6, r4, #16
 800d798:	e003      	b.n	800d7a2 <xQueueGenericSend+0x2c6>
				--cRxLock;
 800d79a:	1e6b      	subs	r3, r5, #1
 800d79c:	b2da      	uxtb	r2, r3
 800d79e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d7a0:	b14a      	cbz	r2, 800d7b6 <xQueueGenericSend+0x2da>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d7a2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d7a4:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d7a6:	b133      	cbz	r3, 800d7b6 <xQueueGenericSend+0x2da>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d7a8:	f001 fa22 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d7ac:	2800      	cmp	r0, #0
 800d7ae:	d0f4      	beq.n	800d79a <xQueueGenericSend+0x2be>
					vTaskMissedYield();
 800d7b0:	f001 faba 	bl	800ed28 <vTaskMissedYield>
 800d7b4:	e7f1      	b.n	800d79a <xQueueGenericSend+0x2be>
		pxQueue->cRxLock = queueUNLOCKED;
 800d7b6:	23ff      	movs	r3, #255	; 0xff
 800d7b8:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800d7bc:	f7ff fbbc 	bl	800cf38 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800d7c0:	f001 f916 	bl	800e9f0 <xTaskResumeAll>
			return errQUEUE_FULL;
 800d7c4:	2000      	movs	r0, #0
 800d7c6:	e7b9      	b.n	800d73c <xQueueGenericSend+0x260>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d7c8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d7cc:	f001 fa10 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d7d0:	2800      	cmp	r0, #0
 800d7d2:	d0b0      	beq.n	800d736 <xQueueGenericSend+0x25a>
 800d7d4:	e7a5      	b.n	800d722 <xQueueGenericSend+0x246>
 800d7d6:	bf00      	nop

0800d7d8 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
 800d7d8:	2800      	cmp	r0, #0
 800d7da:	d04b      	beq.n	800d874 <xQueueGenericSendFromISR+0x9c>
{
 800d7dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d7e0:	460e      	mov	r6, r1
 800d7e2:	4617      	mov	r7, r2
 800d7e4:	461d      	mov	r5, r3
 800d7e6:	4604      	mov	r4, r0
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d7e8:	b321      	cbz	r1, 800d834 <xQueueGenericSendFromISR+0x5c>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d7ea:	2d02      	cmp	r5, #2
 800d7ec:	d10b      	bne.n	800d806 <xQueueGenericSendFromISR+0x2e>
 800d7ee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d7f0:	2b01      	cmp	r3, #1
 800d7f2:	d008      	beq.n	800d806 <xQueueGenericSendFromISR+0x2e>
 800d7f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7f8:	f383 8811 	msr	BASEPRI, r3
 800d7fc:	f3bf 8f6f 	isb	sy
 800d800:	f3bf 8f4f 	dsb	sy
 800d804:	e7fe      	b.n	800d804 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d806:	f7ff fca9 	bl	800d15c <vPortValidateInterruptPriority>
	__asm volatile
 800d80a:	f3ef 8811 	mrs	r8, BASEPRI
 800d80e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d812:	f383 8811 	msr	BASEPRI, r3
 800d816:	f3bf 8f6f 	isb	sy
 800d81a:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d81e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d820:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d822:	429a      	cmp	r2, r3
 800d824:	d312      	bcc.n	800d84c <xQueueGenericSendFromISR+0x74>
 800d826:	2d02      	cmp	r5, #2
 800d828:	d010      	beq.n	800d84c <xQueueGenericSendFromISR+0x74>
			xReturn = errQUEUE_FULL;
 800d82a:	2000      	movs	r0, #0
	__asm volatile
 800d82c:	f388 8811 	msr	BASEPRI, r8
}
 800d830:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d834:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d836:	2b00      	cmp	r3, #0
 800d838:	d0d7      	beq.n	800d7ea <xQueueGenericSendFromISR+0x12>
	__asm volatile
 800d83a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d83e:	f383 8811 	msr	BASEPRI, r3
 800d842:	f3bf 8f6f 	isb	sy
 800d846:	f3bf 8f4f 	dsb	sy
 800d84a:	e7fe      	b.n	800d84a <xQueueGenericSendFromISR+0x72>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d84c:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
 800d84e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d852:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d854:	4631      	mov	r1, r6
			const int8_t cTxLock = pxQueue->cTxLock;
 800d856:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d858:	4620      	mov	r0, r4
 800d85a:	f7ff fcad 	bl	800d1b8 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800d85e:	1c6b      	adds	r3, r5, #1
 800d860:	d011      	beq.n	800d886 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d862:	1c6b      	adds	r3, r5, #1
 800d864:	b25b      	sxtb	r3, r3
 800d866:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
			xReturn = pdPASS;
 800d86a:	2001      	movs	r0, #1
	__asm volatile
 800d86c:	f388 8811 	msr	BASEPRI, r8
}
 800d870:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	__asm volatile
 800d874:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d878:	f383 8811 	msr	BASEPRI, r3
 800d87c:	f3bf 8f6f 	isb	sy
 800d880:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d884:	e7fe      	b.n	800d884 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d886:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d888:	2b00      	cmp	r3, #0
 800d88a:	d0ee      	beq.n	800d86a <xQueueGenericSendFromISR+0x92>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d88c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d890:	f001 f9ae 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d894:	2800      	cmp	r0, #0
 800d896:	d0e8      	beq.n	800d86a <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800d898:	2f00      	cmp	r7, #0
 800d89a:	d0e6      	beq.n	800d86a <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d89c:	2001      	movs	r0, #1
 800d89e:	6038      	str	r0, [r7, #0]
 800d8a0:	e7c4      	b.n	800d82c <xQueueGenericSendFromISR+0x54>
 800d8a2:	bf00      	nop

0800d8a4 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
 800d8a4:	b370      	cbz	r0, 800d904 <xQueueGiveFromISR+0x60>
	configASSERT( pxQueue->uxItemSize == 0 );
 800d8a6:	6c03      	ldr	r3, [r0, #64]	; 0x40
{
 800d8a8:	b570      	push	{r4, r5, r6, lr}
 800d8aa:	4606      	mov	r6, r0
	configASSERT( pxQueue->uxItemSize == 0 );
 800d8ac:	b143      	cbz	r3, 800d8c0 <xQueueGiveFromISR+0x1c>
 800d8ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8b2:	f383 8811 	msr	BASEPRI, r3
 800d8b6:	f3bf 8f6f 	isb	sy
 800d8ba:	f3bf 8f4f 	dsb	sy
 800d8be:	e7fe      	b.n	800d8be <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d8c0:	6803      	ldr	r3, [r0, #0]
 800d8c2:	460c      	mov	r4, r1
 800d8c4:	b33b      	cbz	r3, 800d916 <xQueueGiveFromISR+0x72>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800d8c6:	f7ff fc49 	bl	800d15c <vPortValidateInterruptPriority>
	__asm volatile
 800d8ca:	f3ef 8511 	mrs	r5, BASEPRI
 800d8ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8d2:	f383 8811 	msr	BASEPRI, r3
 800d8d6:	f3bf 8f6f 	isb	sy
 800d8da:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d8de:	6bb3      	ldr	r3, [r6, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800d8e0:	6bf2      	ldr	r2, [r6, #60]	; 0x3c
 800d8e2:	429a      	cmp	r2, r3
 800d8e4:	d923      	bls.n	800d92e <xQueueGiveFromISR+0x8a>
			const int8_t cTxLock = pxQueue->cTxLock;
 800d8e6:	f896 2045 	ldrb.w	r2, [r6, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8ea:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
 800d8ec:	2aff      	cmp	r2, #255	; 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8ee:	63b3      	str	r3, [r6, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800d8f0:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
 800d8f2:	d020      	beq.n	800d936 <xQueueGiveFromISR+0x92>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800d8f4:	3301      	adds	r3, #1
 800d8f6:	b25b      	sxtb	r3, r3
 800d8f8:	f886 3045 	strb.w	r3, [r6, #69]	; 0x45
			xReturn = pdPASS;
 800d8fc:	2001      	movs	r0, #1
	__asm volatile
 800d8fe:	f385 8811 	msr	BASEPRI, r5
}
 800d902:	bd70      	pop	{r4, r5, r6, pc}
	__asm volatile
 800d904:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d908:	f383 8811 	msr	BASEPRI, r3
 800d90c:	f3bf 8f6f 	isb	sy
 800d910:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800d914:	e7fe      	b.n	800d914 <xQueueGiveFromISR+0x70>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800d916:	6883      	ldr	r3, [r0, #8]
 800d918:	2b00      	cmp	r3, #0
 800d91a:	d0d4      	beq.n	800d8c6 <xQueueGiveFromISR+0x22>
 800d91c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d920:	f383 8811 	msr	BASEPRI, r3
 800d924:	f3bf 8f6f 	isb	sy
 800d928:	f3bf 8f4f 	dsb	sy
 800d92c:	e7fe      	b.n	800d92c <xQueueGiveFromISR+0x88>
			xReturn = errQUEUE_FULL;
 800d92e:	2000      	movs	r0, #0
	__asm volatile
 800d930:	f385 8811 	msr	BASEPRI, r5
}
 800d934:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d936:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800d938:	2b00      	cmp	r3, #0
 800d93a:	d0df      	beq.n	800d8fc <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d93c:	f106 0024 	add.w	r0, r6, #36	; 0x24
 800d940:	f001 f956 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d944:	2800      	cmp	r0, #0
 800d946:	d0d9      	beq.n	800d8fc <xQueueGiveFromISR+0x58>
							if( pxHigherPriorityTaskWoken != NULL )
 800d948:	2c00      	cmp	r4, #0
 800d94a:	d0d7      	beq.n	800d8fc <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800d94c:	2001      	movs	r0, #1
 800d94e:	6020      	str	r0, [r4, #0]
 800d950:	e7ee      	b.n	800d930 <xQueueGiveFromISR+0x8c>
 800d952:	bf00      	nop

0800d954 <xQueueReceive>:
{
 800d954:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d958:	b085      	sub	sp, #20
 800d95a:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800d95c:	2800      	cmp	r0, #0
 800d95e:	f000 815c 	beq.w	800dc1a <xQueueReceive+0x2c6>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d962:	460f      	mov	r7, r1
 800d964:	4604      	mov	r4, r0
 800d966:	2900      	cmp	r1, #0
 800d968:	d079      	beq.n	800da5e <xQueueReceive+0x10a>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d96a:	f001 f9e3 	bl	800ed34 <xTaskGetSchedulerState>
 800d96e:	2800      	cmp	r0, #0
 800d970:	f000 8081 	beq.w	800da76 <xQueueReceive+0x122>
		taskENTER_CRITICAL();
 800d974:	f7ff fabe 	bl	800cef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d978:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d97a:	2d00      	cmp	r5, #0
 800d97c:	f040 8138 	bne.w	800dbf0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d980:	9b01      	ldr	r3, [sp, #4]
 800d982:	2b00      	cmp	r3, #0
 800d984:	f000 80d5 	beq.w	800db32 <xQueueReceive+0x1de>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d988:	a802      	add	r0, sp, #8
 800d98a:	f001 f979 	bl	800ec80 <vTaskInternalSetTimeOutState>
		prvLockQueue( pxQueue );
 800d98e:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d990:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskEXIT_CRITICAL();
 800d994:	f7ff fad0 	bl	800cf38 <vPortExitCritical>
		vTaskSuspendAll();
 800d998:	f001 f822 	bl	800e9e0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d99c:	f7ff faaa 	bl	800cef4 <vPortEnterCritical>
 800d9a0:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9a4:	2bff      	cmp	r3, #255	; 0xff
 800d9a6:	bf08      	it	eq
 800d9a8:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800d9ac:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9b0:	2bff      	cmp	r3, #255	; 0xff
 800d9b2:	bf08      	it	eq
 800d9b4:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800d9b8:	f7ff fabe 	bl	800cf38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d9bc:	a901      	add	r1, sp, #4
 800d9be:	a802      	add	r0, sp, #8
 800d9c0:	f001 f96a 	bl	800ec98 <xTaskCheckForTimeOut>
 800d9c4:	2800      	cmp	r0, #0
 800d9c6:	d163      	bne.n	800da90 <xQueueReceive+0x13c>
	taskENTER_CRITICAL();
 800d9c8:	f7ff fa94 	bl	800cef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d9cc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800d9ce:	2b00      	cmp	r3, #0
 800d9d0:	f000 80b5 	beq.w	800db3e <xQueueReceive+0x1ea>
	taskEXIT_CRITICAL();
 800d9d4:	f7ff fab0 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d9d8:	f7ff fa8c 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d9dc:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9e0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9e2:	2d00      	cmp	r5, #0
 800d9e4:	dc04      	bgt.n	800d9f0 <xQueueReceive+0x9c>
 800d9e6:	e011      	b.n	800da0c <xQueueReceive+0xb8>
			--cTxLock;
 800d9e8:	1e6b      	subs	r3, r5, #1
 800d9ea:	b2da      	uxtb	r2, r3
 800d9ec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d9ee:	b16a      	cbz	r2, 800da0c <xQueueReceive+0xb8>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9f2:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d9f4:	b153      	cbz	r3, 800da0c <xQueueReceive+0xb8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d9f6:	f001 f8fb 	bl	800ebf0 <xTaskRemoveFromEventList>
 800d9fa:	2800      	cmp	r0, #0
 800d9fc:	d0f4      	beq.n	800d9e8 <xQueueReceive+0x94>
						vTaskMissedYield();
 800d9fe:	f001 f993 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800da02:	1e6b      	subs	r3, r5, #1
 800da04:	b2da      	uxtb	r2, r3
 800da06:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da08:	2a00      	cmp	r2, #0
 800da0a:	d1f1      	bne.n	800d9f0 <xQueueReceive+0x9c>
		pxQueue->cTxLock = queueUNLOCKED;
 800da0c:	23ff      	movs	r3, #255	; 0xff
 800da0e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800da12:	f7ff fa91 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800da16:	f7ff fa6d 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800da1a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800da1e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da20:	2d00      	cmp	r5, #0
 800da22:	dd14      	ble.n	800da4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da24:	f104 0910 	add.w	r9, r4, #16
 800da28:	e003      	b.n	800da32 <xQueueReceive+0xde>
				--cRxLock;
 800da2a:	1e6b      	subs	r3, r5, #1
 800da2c:	b2da      	uxtb	r2, r3
 800da2e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da30:	b16a      	cbz	r2, 800da4e <xQueueReceive+0xfa>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da32:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da34:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da36:	b153      	cbz	r3, 800da4e <xQueueReceive+0xfa>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da38:	f001 f8da 	bl	800ebf0 <xTaskRemoveFromEventList>
 800da3c:	2800      	cmp	r0, #0
 800da3e:	d0f4      	beq.n	800da2a <xQueueReceive+0xd6>
					vTaskMissedYield();
 800da40:	f001 f972 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800da44:	1e6b      	subs	r3, r5, #1
 800da46:	b2da      	uxtb	r2, r3
 800da48:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800da4a:	2a00      	cmp	r2, #0
 800da4c:	d1f1      	bne.n	800da32 <xQueueReceive+0xde>
		pxQueue->cRxLock = queueUNLOCKED;
 800da4e:	23ff      	movs	r3, #255	; 0xff
 800da50:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800da54:	f7ff fa70 	bl	800cf38 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800da58:	f000 ffca 	bl	800e9f0 <xTaskResumeAll>
		taskENTER_CRITICAL();
 800da5c:	e060      	b.n	800db20 <xQueueReceive+0x1cc>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da5e:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da60:	2b00      	cmp	r3, #0
 800da62:	d082      	beq.n	800d96a <xQueueReceive+0x16>
	__asm volatile
 800da64:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da68:	f383 8811 	msr	BASEPRI, r3
 800da6c:	f3bf 8f6f 	isb	sy
 800da70:	f3bf 8f4f 	dsb	sy
 800da74:	e7fe      	b.n	800da74 <xQueueReceive+0x120>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800da76:	9b01      	ldr	r3, [sp, #4]
 800da78:	2b00      	cmp	r3, #0
 800da7a:	f43f af7b 	beq.w	800d974 <xQueueReceive+0x20>
 800da7e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da82:	f383 8811 	msr	BASEPRI, r3
 800da86:	f3bf 8f6f 	isb	sy
 800da8a:	f3bf 8f4f 	dsb	sy
 800da8e:	e7fe      	b.n	800da8e <xQueueReceive+0x13a>
	taskENTER_CRITICAL();
 800da90:	f7ff fa30 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800da94:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800da98:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800da9a:	2d00      	cmp	r5, #0
 800da9c:	dc04      	bgt.n	800daa8 <xQueueReceive+0x154>
 800da9e:	e011      	b.n	800dac4 <xQueueReceive+0x170>
			--cTxLock;
 800daa0:	1e6b      	subs	r3, r5, #1
 800daa2:	b2da      	uxtb	r2, r3
 800daa4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800daa6:	b16a      	cbz	r2, 800dac4 <xQueueReceive+0x170>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daaa:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daac:	b153      	cbz	r3, 800dac4 <xQueueReceive+0x170>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800daae:	f001 f89f 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dab2:	2800      	cmp	r0, #0
 800dab4:	d0f4      	beq.n	800daa0 <xQueueReceive+0x14c>
						vTaskMissedYield();
 800dab6:	f001 f937 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800daba:	1e6b      	subs	r3, r5, #1
 800dabc:	b2da      	uxtb	r2, r3
 800dabe:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dac0:	2a00      	cmp	r2, #0
 800dac2:	d1f1      	bne.n	800daa8 <xQueueReceive+0x154>
		pxQueue->cTxLock = queueUNLOCKED;
 800dac4:	23ff      	movs	r3, #255	; 0xff
 800dac6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800daca:	f7ff fa35 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dace:	f7ff fa11 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dad2:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dad6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dad8:	2d00      	cmp	r5, #0
 800dada:	dd14      	ble.n	800db06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dadc:	f104 0910 	add.w	r9, r4, #16
 800dae0:	e003      	b.n	800daea <xQueueReceive+0x196>
				--cRxLock;
 800dae2:	1e6b      	subs	r3, r5, #1
 800dae4:	b2da      	uxtb	r2, r3
 800dae6:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dae8:	b16a      	cbz	r2, 800db06 <xQueueReceive+0x1b2>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800daea:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daec:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800daee:	b153      	cbz	r3, 800db06 <xQueueReceive+0x1b2>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800daf0:	f001 f87e 	bl	800ebf0 <xTaskRemoveFromEventList>
 800daf4:	2800      	cmp	r0, #0
 800daf6:	d0f4      	beq.n	800dae2 <xQueueReceive+0x18e>
					vTaskMissedYield();
 800daf8:	f001 f916 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800dafc:	1e6b      	subs	r3, r5, #1
 800dafe:	b2da      	uxtb	r2, r3
 800db00:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db02:	2a00      	cmp	r2, #0
 800db04:	d1f1      	bne.n	800daea <xQueueReceive+0x196>
		pxQueue->cRxLock = queueUNLOCKED;
 800db06:	23ff      	movs	r3, #255	; 0xff
 800db08:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800db0c:	f7ff fa14 	bl	800cf38 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800db10:	f000 ff6e 	bl	800e9f0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800db14:	f7ff f9ee 	bl	800cef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800db18:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800db1a:	b153      	cbz	r3, 800db32 <xQueueReceive+0x1de>
	taskEXIT_CRITICAL();
 800db1c:	f7ff fa0c 	bl	800cf38 <vPortExitCritical>
		taskENTER_CRITICAL();
 800db20:	f7ff f9e8 	bl	800cef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db24:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800db26:	2d00      	cmp	r5, #0
 800db28:	d162      	bne.n	800dbf0 <xQueueReceive+0x29c>
				if( xTicksToWait == ( TickType_t ) 0 )
 800db2a:	9b01      	ldr	r3, [sp, #4]
 800db2c:	2b00      	cmp	r3, #0
 800db2e:	f47f af31 	bne.w	800d994 <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
 800db32:	f7ff fa01 	bl	800cf38 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800db36:	2000      	movs	r0, #0
}
 800db38:	b005      	add	sp, #20
 800db3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800db3e:	f7ff f9fb 	bl	800cf38 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800db42:	9901      	ldr	r1, [sp, #4]
 800db44:	4630      	mov	r0, r6
 800db46:	f000 ffc5 	bl	800ead4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800db4a:	f7ff f9d3 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800db4e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800db52:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db54:	2d00      	cmp	r5, #0
 800db56:	dc04      	bgt.n	800db62 <xQueueReceive+0x20e>
 800db58:	e011      	b.n	800db7e <xQueueReceive+0x22a>
			--cTxLock;
 800db5a:	1e6b      	subs	r3, r5, #1
 800db5c:	b2da      	uxtb	r2, r3
 800db5e:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db60:	b16a      	cbz	r2, 800db7e <xQueueReceive+0x22a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db62:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db64:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800db66:	b153      	cbz	r3, 800db7e <xQueueReceive+0x22a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800db68:	f001 f842 	bl	800ebf0 <xTaskRemoveFromEventList>
 800db6c:	2800      	cmp	r0, #0
 800db6e:	d0f4      	beq.n	800db5a <xQueueReceive+0x206>
						vTaskMissedYield();
 800db70:	f001 f8da 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800db74:	1e6b      	subs	r3, r5, #1
 800db76:	b2da      	uxtb	r2, r3
 800db78:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800db7a:	2a00      	cmp	r2, #0
 800db7c:	d1f1      	bne.n	800db62 <xQueueReceive+0x20e>
		pxQueue->cTxLock = queueUNLOCKED;
 800db7e:	23ff      	movs	r3, #255	; 0xff
 800db80:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800db84:	f7ff f9d8 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800db88:	f7ff f9b4 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800db8c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800db90:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800db92:	2d00      	cmp	r5, #0
 800db94:	dd14      	ble.n	800dbc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800db96:	f104 0910 	add.w	r9, r4, #16
 800db9a:	e003      	b.n	800dba4 <xQueueReceive+0x250>
				--cRxLock;
 800db9c:	1e6b      	subs	r3, r5, #1
 800db9e:	b2da      	uxtb	r2, r3
 800dba0:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dba2:	b16a      	cbz	r2, 800dbc0 <xQueueReceive+0x26c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dba4:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dba6:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dba8:	b153      	cbz	r3, 800dbc0 <xQueueReceive+0x26c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dbaa:	f001 f821 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dbae:	2800      	cmp	r0, #0
 800dbb0:	d0f4      	beq.n	800db9c <xQueueReceive+0x248>
					vTaskMissedYield();
 800dbb2:	f001 f8b9 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800dbb6:	1e6b      	subs	r3, r5, #1
 800dbb8:	b2da      	uxtb	r2, r3
 800dbba:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dbbc:	2a00      	cmp	r2, #0
 800dbbe:	d1f1      	bne.n	800dba4 <xQueueReceive+0x250>
		pxQueue->cRxLock = queueUNLOCKED;
 800dbc0:	23ff      	movs	r3, #255	; 0xff
 800dbc2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dbc6:	f7ff f9b7 	bl	800cf38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800dbca:	f000 ff11 	bl	800e9f0 <xTaskResumeAll>
 800dbce:	2800      	cmp	r0, #0
 800dbd0:	d1a6      	bne.n	800db20 <xQueueReceive+0x1cc>
					portYIELD_WITHIN_API();
 800dbd2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dbd6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dbda:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dbde:	f3bf 8f4f 	dsb	sy
 800dbe2:	f3bf 8f6f 	isb	sy
		taskENTER_CRITICAL();
 800dbe6:	f7ff f985 	bl	800cef4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dbea:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dbec:	2d00      	cmp	r5, #0
 800dbee:	d09c      	beq.n	800db2a <xQueueReceive+0x1d6>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800dbf0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800dbf2:	b152      	cbz	r2, 800dc0a <xQueueReceive+0x2b6>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dbf4:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dbf6:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dbf8:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dbfa:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dbfc:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800dbfe:	bf24      	itt	cs
 800dc00:	6821      	ldrcs	r1, [r4, #0]
 800dc02:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dc04:	4638      	mov	r0, r7
 800dc06:	f01c f9d0 	bl	8029faa <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dc0a:	3d01      	subs	r5, #1
 800dc0c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dc0e:	6923      	ldr	r3, [r4, #16]
 800dc10:	b963      	cbnz	r3, 800dc2c <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
 800dc12:	f7ff f991 	bl	800cf38 <vPortExitCritical>
				return pdPASS;
 800dc16:	2001      	movs	r0, #1
 800dc18:	e78e      	b.n	800db38 <xQueueReceive+0x1e4>
 800dc1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc1e:	f383 8811 	msr	BASEPRI, r3
 800dc22:	f3bf 8f6f 	isb	sy
 800dc26:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800dc2a:	e7fe      	b.n	800dc2a <xQueueReceive+0x2d6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dc2c:	f104 0010 	add.w	r0, r4, #16
 800dc30:	f000 ffde 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dc34:	2800      	cmp	r0, #0
 800dc36:	d0ec      	beq.n	800dc12 <xQueueReceive+0x2be>
						queueYIELD_IF_USING_PREEMPTION();
 800dc38:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc3c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc40:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dc44:	f3bf 8f4f 	dsb	sy
 800dc48:	f3bf 8f6f 	isb	sy
 800dc4c:	e7e1      	b.n	800dc12 <xQueueReceive+0x2be>
 800dc4e:	bf00      	nop

0800dc50 <xQueueSemaphoreTake>:
{
 800dc50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc54:	b084      	sub	sp, #16
 800dc56:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dc58:	2800      	cmp	r0, #0
 800dc5a:	d05c      	beq.n	800dd16 <xQueueSemaphoreTake+0xc6>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dc5c:	6c07      	ldr	r7, [r0, #64]	; 0x40
 800dc5e:	4604      	mov	r4, r0
 800dc60:	b147      	cbz	r7, 800dc74 <xQueueSemaphoreTake+0x24>
 800dc62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc66:	f383 8811 	msr	BASEPRI, r3
 800dc6a:	f3bf 8f6f 	isb	sy
 800dc6e:	f3bf 8f4f 	dsb	sy
 800dc72:	e7fe      	b.n	800dc72 <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc74:	f001 f85e 	bl	800ed34 <xTaskGetSchedulerState>
 800dc78:	4605      	mov	r5, r0
 800dc7a:	2800      	cmp	r0, #0
 800dc7c:	d054      	beq.n	800dd28 <xQueueSemaphoreTake+0xd8>
 800dc7e:	463d      	mov	r5, r7
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dc80:	f104 0624 	add.w	r6, r4, #36	; 0x24
		taskENTER_CRITICAL();
 800dc84:	f7ff f936 	bl	800cef4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800dc88:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800dc8a:	2b00      	cmp	r3, #0
 800dc8c:	f040 8148 	bne.w	800df20 <xQueueSemaphoreTake+0x2d0>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc90:	9b01      	ldr	r3, [sp, #4]
 800dc92:	2b00      	cmp	r3, #0
 800dc94:	f000 813a 	beq.w	800df0c <xQueueSemaphoreTake+0x2bc>
				else if( xEntryTimeSet == pdFALSE )
 800dc98:	2d00      	cmp	r5, #0
 800dc9a:	f000 809d 	beq.w	800ddd8 <xQueueSemaphoreTake+0x188>
		taskEXIT_CRITICAL();
 800dc9e:	f7ff f94b 	bl	800cf38 <vPortExitCritical>
		vTaskSuspendAll();
 800dca2:	f000 fe9d 	bl	800e9e0 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dca6:	f7ff f925 	bl	800cef4 <vPortEnterCritical>
 800dcaa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dcae:	2bff      	cmp	r3, #255	; 0xff
 800dcb0:	bf04      	itt	eq
 800dcb2:	2300      	moveq	r3, #0
 800dcb4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dcb8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcbc:	2bff      	cmp	r3, #255	; 0xff
 800dcbe:	bf04      	itt	eq
 800dcc0:	2300      	moveq	r3, #0
 800dcc2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dcc6:	f7ff f937 	bl	800cf38 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dcca:	a901      	add	r1, sp, #4
 800dccc:	a802      	add	r0, sp, #8
 800dcce:	f000 ffe3 	bl	800ec98 <xTaskCheckForTimeOut>
 800dcd2:	2800      	cmp	r0, #0
 800dcd4:	d135      	bne.n	800dd42 <xQueueSemaphoreTake+0xf2>
	taskENTER_CRITICAL();
 800dcd6:	f7ff f90d 	bl	800cef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800dcda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dcdc:	2b00      	cmp	r3, #0
 800dcde:	f000 80a4 	beq.w	800de2a <xQueueSemaphoreTake+0x1da>
	taskEXIT_CRITICAL();
 800dce2:	f7ff f929 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dce6:	f7ff f905 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dcea:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dcee:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcf0:	2d00      	cmp	r5, #0
 800dcf2:	dc05      	bgt.n	800dd00 <xQueueSemaphoreTake+0xb0>
 800dcf4:	e074      	b.n	800dde0 <xQueueSemaphoreTake+0x190>
			--cTxLock;
 800dcf6:	1e6b      	subs	r3, r5, #1
 800dcf8:	b2da      	uxtb	r2, r3
 800dcfa:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dcfc:	2a00      	cmp	r2, #0
 800dcfe:	d06f      	beq.n	800dde0 <xQueueSemaphoreTake+0x190>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd00:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd02:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd04:	2b00      	cmp	r3, #0
 800dd06:	d06b      	beq.n	800dde0 <xQueueSemaphoreTake+0x190>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd08:	f000 ff72 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dd0c:	2800      	cmp	r0, #0
 800dd0e:	d0f2      	beq.n	800dcf6 <xQueueSemaphoreTake+0xa6>
						vTaskMissedYield();
 800dd10:	f001 f80a 	bl	800ed28 <vTaskMissedYield>
 800dd14:	e7ef      	b.n	800dcf6 <xQueueSemaphoreTake+0xa6>
 800dd16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd1a:	f383 8811 	msr	BASEPRI, r3
 800dd1e:	f3bf 8f6f 	isb	sy
 800dd22:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
 800dd26:	e7fe      	b.n	800dd26 <xQueueSemaphoreTake+0xd6>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd28:	9b01      	ldr	r3, [sp, #4]
 800dd2a:	2b00      	cmp	r3, #0
 800dd2c:	f000 80d4 	beq.w	800ded8 <xQueueSemaphoreTake+0x288>
 800dd30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd34:	f383 8811 	msr	BASEPRI, r3
 800dd38:	f3bf 8f6f 	isb	sy
 800dd3c:	f3bf 8f4f 	dsb	sy
 800dd40:	e7fe      	b.n	800dd40 <xQueueSemaphoreTake+0xf0>
	taskENTER_CRITICAL();
 800dd42:	f7ff f8d7 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800dd46:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dd4a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd4c:	2d00      	cmp	r5, #0
 800dd4e:	dc04      	bgt.n	800dd5a <xQueueSemaphoreTake+0x10a>
 800dd50:	e011      	b.n	800dd76 <xQueueSemaphoreTake+0x126>
			--cTxLock;
 800dd52:	1e6b      	subs	r3, r5, #1
 800dd54:	b2da      	uxtb	r2, r3
 800dd56:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd58:	b16a      	cbz	r2, 800dd76 <xQueueSemaphoreTake+0x126>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd5c:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dd5e:	b153      	cbz	r3, 800dd76 <xQueueSemaphoreTake+0x126>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dd60:	f000 ff46 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dd64:	2800      	cmp	r0, #0
 800dd66:	d0f4      	beq.n	800dd52 <xQueueSemaphoreTake+0x102>
						vTaskMissedYield();
 800dd68:	f000 ffde 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800dd6c:	1e6b      	subs	r3, r5, #1
 800dd6e:	b2da      	uxtb	r2, r3
 800dd70:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800dd72:	2a00      	cmp	r2, #0
 800dd74:	d1f1      	bne.n	800dd5a <xQueueSemaphoreTake+0x10a>
		pxQueue->cTxLock = queueUNLOCKED;
 800dd76:	23ff      	movs	r3, #255	; 0xff
 800dd78:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dd7c:	f7ff f8dc 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800dd80:	f7ff f8b8 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800dd84:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dd88:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd8a:	2d00      	cmp	r5, #0
 800dd8c:	dd14      	ble.n	800ddb8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd8e:	f104 0810 	add.w	r8, r4, #16
 800dd92:	e003      	b.n	800dd9c <xQueueSemaphoreTake+0x14c>
				--cRxLock;
 800dd94:	1e6b      	subs	r3, r5, #1
 800dd96:	b2da      	uxtb	r2, r3
 800dd98:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800dd9a:	b16a      	cbz	r2, 800ddb8 <xQueueSemaphoreTake+0x168>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dd9c:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dd9e:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dda0:	b153      	cbz	r3, 800ddb8 <xQueueSemaphoreTake+0x168>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dda2:	f000 ff25 	bl	800ebf0 <xTaskRemoveFromEventList>
 800dda6:	2800      	cmp	r0, #0
 800dda8:	d0f4      	beq.n	800dd94 <xQueueSemaphoreTake+0x144>
					vTaskMissedYield();
 800ddaa:	f000 ffbd 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800ddae:	1e6b      	subs	r3, r5, #1
 800ddb0:	b2da      	uxtb	r2, r3
 800ddb2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddb4:	2a00      	cmp	r2, #0
 800ddb6:	d1f1      	bne.n	800dd9c <xQueueSemaphoreTake+0x14c>
		pxQueue->cRxLock = queueUNLOCKED;
 800ddb8:	23ff      	movs	r3, #255	; 0xff
 800ddba:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800ddbe:	f7ff f8bb 	bl	800cf38 <vPortExitCritical>
			( void ) xTaskResumeAll();
 800ddc2:	f000 fe15 	bl	800e9f0 <xTaskResumeAll>
	taskENTER_CRITICAL();
 800ddc6:	f7ff f895 	bl	800cef4 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800ddca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800ddcc:	2b00      	cmp	r3, #0
 800ddce:	d07c      	beq.n	800deca <xQueueSemaphoreTake+0x27a>
	taskEXIT_CRITICAL();
 800ddd0:	f7ff f8b2 	bl	800cf38 <vPortExitCritical>
	return xReturn;
 800ddd4:	2501      	movs	r5, #1
 800ddd6:	e755      	b.n	800dc84 <xQueueSemaphoreTake+0x34>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800ddd8:	a802      	add	r0, sp, #8
 800ddda:	f000 ff51 	bl	800ec80 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
 800ddde:	e75e      	b.n	800dc9e <xQueueSemaphoreTake+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800dde0:	23ff      	movs	r3, #255	; 0xff
 800dde2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800dde6:	f7ff f8a7 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800ddea:	f7ff f883 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800ddee:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800ddf2:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800ddf4:	2d00      	cmp	r5, #0
 800ddf6:	dd10      	ble.n	800de1a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800ddf8:	f104 0810 	add.w	r8, r4, #16
 800ddfc:	e003      	b.n	800de06 <xQueueSemaphoreTake+0x1b6>
				--cRxLock;
 800ddfe:	1e6b      	subs	r3, r5, #1
 800de00:	b2da      	uxtb	r2, r3
 800de02:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de04:	b14a      	cbz	r2, 800de1a <xQueueSemaphoreTake+0x1ca>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de06:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de08:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de0a:	b133      	cbz	r3, 800de1a <xQueueSemaphoreTake+0x1ca>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de0c:	f000 fef0 	bl	800ebf0 <xTaskRemoveFromEventList>
 800de10:	2800      	cmp	r0, #0
 800de12:	d0f4      	beq.n	800ddfe <xQueueSemaphoreTake+0x1ae>
					vTaskMissedYield();
 800de14:	f000 ff88 	bl	800ed28 <vTaskMissedYield>
 800de18:	e7f1      	b.n	800ddfe <xQueueSemaphoreTake+0x1ae>
		pxQueue->cRxLock = queueUNLOCKED;
 800de1a:	23ff      	movs	r3, #255	; 0xff
 800de1c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800de20:	f7ff f88a 	bl	800cf38 <vPortExitCritical>
				( void ) xTaskResumeAll();
 800de24:	f000 fde4 	bl	800e9f0 <xTaskResumeAll>
 800de28:	e7d4      	b.n	800ddd4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800de2a:	f7ff f885 	bl	800cf38 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800de2e:	6823      	ldr	r3, [r4, #0]
 800de30:	2b00      	cmp	r3, #0
 800de32:	d062      	beq.n	800defa <xQueueSemaphoreTake+0x2aa>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800de34:	9901      	ldr	r1, [sp, #4]
 800de36:	4630      	mov	r0, r6
 800de38:	f000 fe4c 	bl	800ead4 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
 800de3c:	f7ff f85a 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800de40:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800de44:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de46:	2d00      	cmp	r5, #0
 800de48:	dc04      	bgt.n	800de54 <xQueueSemaphoreTake+0x204>
 800de4a:	e00d      	b.n	800de68 <xQueueSemaphoreTake+0x218>
			--cTxLock;
 800de4c:	1e6b      	subs	r3, r5, #1
 800de4e:	b2da      	uxtb	r2, r3
 800de50:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800de52:	b14a      	cbz	r2, 800de68 <xQueueSemaphoreTake+0x218>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de54:	6a63      	ldr	r3, [r4, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de56:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de58:	b133      	cbz	r3, 800de68 <xQueueSemaphoreTake+0x218>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de5a:	f000 fec9 	bl	800ebf0 <xTaskRemoveFromEventList>
 800de5e:	2800      	cmp	r0, #0
 800de60:	d0f4      	beq.n	800de4c <xQueueSemaphoreTake+0x1fc>
						vTaskMissedYield();
 800de62:	f000 ff61 	bl	800ed28 <vTaskMissedYield>
 800de66:	e7f1      	b.n	800de4c <xQueueSemaphoreTake+0x1fc>
		pxQueue->cTxLock = queueUNLOCKED;
 800de68:	23ff      	movs	r3, #255	; 0xff
 800de6a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800de6e:	f7ff f863 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800de72:	f7ff f83f 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800de76:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800de7a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de7c:	2d00      	cmp	r5, #0
 800de7e:	dd10      	ble.n	800dea2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de80:	f104 0810 	add.w	r8, r4, #16
 800de84:	e003      	b.n	800de8e <xQueueSemaphoreTake+0x23e>
				--cRxLock;
 800de86:	1e6b      	subs	r3, r5, #1
 800de88:	b2da      	uxtb	r2, r3
 800de8a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800de8c:	b14a      	cbz	r2, 800dea2 <xQueueSemaphoreTake+0x252>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de8e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de90:	4640      	mov	r0, r8
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de92:	b133      	cbz	r3, 800dea2 <xQueueSemaphoreTake+0x252>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de94:	f000 feac 	bl	800ebf0 <xTaskRemoveFromEventList>
 800de98:	2800      	cmp	r0, #0
 800de9a:	d0f4      	beq.n	800de86 <xQueueSemaphoreTake+0x236>
					vTaskMissedYield();
 800de9c:	f000 ff44 	bl	800ed28 <vTaskMissedYield>
 800dea0:	e7f1      	b.n	800de86 <xQueueSemaphoreTake+0x236>
		pxQueue->cRxLock = queueUNLOCKED;
 800dea2:	23ff      	movs	r3, #255	; 0xff
 800dea4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
	taskEXIT_CRITICAL();
 800dea8:	f7ff f846 	bl	800cf38 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
 800deac:	f000 fda0 	bl	800e9f0 <xTaskResumeAll>
 800deb0:	2800      	cmp	r0, #0
 800deb2:	d18f      	bne.n	800ddd4 <xQueueSemaphoreTake+0x184>
					portYIELD_WITHIN_API();
 800deb4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800deb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800debc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dec0:	f3bf 8f4f 	dsb	sy
 800dec4:	f3bf 8f6f 	isb	sy
 800dec8:	e784      	b.n	800ddd4 <xQueueSemaphoreTake+0x184>
	taskEXIT_CRITICAL();
 800deca:	f7ff f835 	bl	800cf38 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
 800dece:	b92f      	cbnz	r7, 800dedc <xQueueSemaphoreTake+0x28c>
}
 800ded0:	4638      	mov	r0, r7
 800ded2:	b004      	add	sp, #16
 800ded4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ded8:	4607      	mov	r7, r0
 800deda:	e6d1      	b.n	800dc80 <xQueueSemaphoreTake+0x30>
						taskENTER_CRITICAL();
 800dedc:	f7ff f80a 	bl	800cef4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800dee0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dee2:	b119      	cbz	r1, 800deec <xQueueSemaphoreTake+0x29c>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800dee4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800dee6:	6819      	ldr	r1, [r3, #0]
 800dee8:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800deec:	68a0      	ldr	r0, [r4, #8]
 800deee:	f000 ffbd 	bl	800ee6c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800def2:	2700      	movs	r7, #0
						taskEXIT_CRITICAL();
 800def4:	f7ff f820 	bl	800cf38 <vPortExitCritical>
 800def8:	e7ea      	b.n	800ded0 <xQueueSemaphoreTake+0x280>
						taskENTER_CRITICAL();
 800defa:	f7fe fffb 	bl	800cef4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800defe:	68a0      	ldr	r0, [r4, #8]
 800df00:	f000 ff28 	bl	800ed54 <xTaskPriorityInherit>
 800df04:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
 800df06:	f7ff f817 	bl	800cf38 <vPortExitCritical>
 800df0a:	e793      	b.n	800de34 <xQueueSemaphoreTake+0x1e4>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800df0c:	b197      	cbz	r7, 800df34 <xQueueSemaphoreTake+0x2e4>
 800df0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df12:	f383 8811 	msr	BASEPRI, r3
 800df16:	f3bf 8f6f 	isb	sy
 800df1a:	f3bf 8f4f 	dsb	sy
 800df1e:	e7fe      	b.n	800df1e <xQueueSemaphoreTake+0x2ce>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800df20:	6822      	ldr	r2, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800df22:	3b01      	subs	r3, #1
 800df24:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800df26:	b1ca      	cbz	r2, 800df5c <xQueueSemaphoreTake+0x30c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df28:	6923      	ldr	r3, [r4, #16]
 800df2a:	b933      	cbnz	r3, 800df3a <xQueueSemaphoreTake+0x2ea>
				taskEXIT_CRITICAL();
 800df2c:	f7ff f804 	bl	800cf38 <vPortExitCritical>
				return pdPASS;
 800df30:	2701      	movs	r7, #1
 800df32:	e7cd      	b.n	800ded0 <xQueueSemaphoreTake+0x280>
					taskEXIT_CRITICAL();
 800df34:	f7ff f800 	bl	800cf38 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800df38:	e7ca      	b.n	800ded0 <xQueueSemaphoreTake+0x280>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df3a:	f104 0010 	add.w	r0, r4, #16
 800df3e:	f000 fe57 	bl	800ebf0 <xTaskRemoveFromEventList>
 800df42:	2800      	cmp	r0, #0
 800df44:	d0f2      	beq.n	800df2c <xQueueSemaphoreTake+0x2dc>
						queueYIELD_IF_USING_PREEMPTION();
 800df46:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df4e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df52:	f3bf 8f4f 	dsb	sy
 800df56:	f3bf 8f6f 	isb	sy
 800df5a:	e7e7      	b.n	800df2c <xQueueSemaphoreTake+0x2dc>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800df5c:	f000 ffda 	bl	800ef14 <pvTaskIncrementMutexHeldCount>
 800df60:	60a0      	str	r0, [r4, #8]
 800df62:	e7e1      	b.n	800df28 <xQueueSemaphoreTake+0x2d8>

0800df64 <xQueueReceiveFromISR>:
{
 800df64:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
 800df68:	b310      	cbz	r0, 800dfb0 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df6a:	460e      	mov	r6, r1
 800df6c:	4617      	mov	r7, r2
 800df6e:	4604      	mov	r4, r0
 800df70:	b191      	cbz	r1, 800df98 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800df72:	f7ff f8f3 	bl	800d15c <vPortValidateInterruptPriority>
	__asm volatile
 800df76:	f3ef 8911 	mrs	r9, BASEPRI
 800df7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df7e:	f383 8811 	msr	BASEPRI, r3
 800df82:	f3bf 8f6f 	isb	sy
 800df86:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df8a:	6ba5      	ldr	r5, [r4, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df8c:	b9cd      	cbnz	r5, 800dfc2 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
 800df8e:	4628      	mov	r0, r5
	__asm volatile
 800df90:	f389 8811 	msr	BASEPRI, r9
}
 800df94:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800df98:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800df9a:	2b00      	cmp	r3, #0
 800df9c:	d0e9      	beq.n	800df72 <xQueueReceiveFromISR+0xe>
	__asm volatile
 800df9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfa2:	f383 8811 	msr	BASEPRI, r3
 800dfa6:	f3bf 8f6f 	isb	sy
 800dfaa:	f3bf 8f4f 	dsb	sy
 800dfae:	e7fe      	b.n	800dfae <xQueueReceiveFromISR+0x4a>
 800dfb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb4:	f383 8811 	msr	BASEPRI, r3
 800dfb8:	f3bf 8f6f 	isb	sy
 800dfbc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800dfc0:	e7fe      	b.n	800dfc0 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
 800dfc2:	f894 8044 	ldrb.w	r8, [r4, #68]	; 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800dfc6:	6c22      	ldr	r2, [r4, #64]	; 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
 800dfc8:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800dfcc:	b152      	cbz	r2, 800dfe4 <xQueueReceiveFromISR+0x80>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfce:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dfd0:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfd2:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800dfd4:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800dfd6:	60e1      	str	r1, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800dfd8:	bf24      	itt	cs
 800dfda:	6821      	ldrcs	r1, [r4, #0]
 800dfdc:	60e1      	strcs	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800dfde:	4630      	mov	r0, r6
 800dfe0:	f01b ffe3 	bl	8029faa <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dfe4:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
 800dfe6:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dfea:	63a5      	str	r5, [r4, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800dfec:	d009      	beq.n	800e002 <xQueueReceiveFromISR+0x9e>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800dfee:	f108 0301 	add.w	r3, r8, #1
 800dff2:	b25b      	sxtb	r3, r3
 800dff4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
			xReturn = pdPASS;
 800dff8:	2001      	movs	r0, #1
	__asm volatile
 800dffa:	f389 8811 	msr	BASEPRI, r9
}
 800dffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e002:	6923      	ldr	r3, [r4, #16]
 800e004:	2b00      	cmp	r3, #0
 800e006:	d0f7      	beq.n	800dff8 <xQueueReceiveFromISR+0x94>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e008:	f104 0010 	add.w	r0, r4, #16
 800e00c:	f000 fdf0 	bl	800ebf0 <xTaskRemoveFromEventList>
 800e010:	2800      	cmp	r0, #0
 800e012:	d0f1      	beq.n	800dff8 <xQueueReceiveFromISR+0x94>
						if( pxHigherPriorityTaskWoken != NULL )
 800e014:	2f00      	cmp	r7, #0
 800e016:	d0ef      	beq.n	800dff8 <xQueueReceiveFromISR+0x94>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e018:	2001      	movs	r0, #1
 800e01a:	6038      	str	r0, [r7, #0]
 800e01c:	e7b8      	b.n	800df90 <xQueueReceiveFromISR+0x2c>
 800e01e:	bf00      	nop

0800e020 <uxQueueMessagesWaiting>:
	configASSERT( xQueue );
 800e020:	b158      	cbz	r0, 800e03a <uxQueueMessagesWaiting+0x1a>
{
 800e022:	b510      	push	{r4, lr}
 800e024:	4604      	mov	r4, r0
 800e026:	b082      	sub	sp, #8
	taskENTER_CRITICAL();
 800e028:	f7fe ff64 	bl	800cef4 <vPortEnterCritical>
		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 800e02c:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800e02e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e030:	f7fe ff82 	bl	800cf38 <vPortExitCritical>
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e034:	9801      	ldr	r0, [sp, #4]
 800e036:	b002      	add	sp, #8
 800e038:	bd10      	pop	{r4, pc}
	__asm volatile
 800e03a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e03e:	f383 8811 	msr	BASEPRI, r3
 800e042:	f3bf 8f6f 	isb	sy
 800e046:	f3bf 8f4f 	dsb	sy
	configASSERT( xQueue );
 800e04a:	e7fe      	b.n	800e04a <uxQueueMessagesWaiting+0x2a>

0800e04c <uxQueueMessagesWaitingFromISR>:
	configASSERT( pxQueue );
 800e04c:	b108      	cbz	r0, 800e052 <uxQueueMessagesWaitingFromISR+0x6>
	uxReturn = pxQueue->uxMessagesWaiting;
 800e04e:	6b80      	ldr	r0, [r0, #56]	; 0x38
} /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 800e050:	4770      	bx	lr
 800e052:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e056:	f383 8811 	msr	BASEPRI, r3
 800e05a:	f3bf 8f6f 	isb	sy
 800e05e:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e062:	e7fe      	b.n	800e062 <uxQueueMessagesWaitingFromISR+0x16>
 800e064:	0000      	movs	r0, r0
	...

0800e068 <vQueueDelete>:
	configASSERT( pxQueue );
 800e068:	b1f0      	cbz	r0, 800e0a8 <vQueueDelete+0x40>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e06a:	4b21      	ldr	r3, [pc, #132]	; (800e0f0 <vQueueDelete+0x88>)
 800e06c:	685a      	ldr	r2, [r3, #4]
 800e06e:	4290      	cmp	r0, r2
 800e070:	d025      	beq.n	800e0be <vQueueDelete+0x56>
 800e072:	68da      	ldr	r2, [r3, #12]
 800e074:	4290      	cmp	r0, r2
 800e076:	d02c      	beq.n	800e0d2 <vQueueDelete+0x6a>
 800e078:	695a      	ldr	r2, [r3, #20]
 800e07a:	4290      	cmp	r0, r2
 800e07c:	d02b      	beq.n	800e0d6 <vQueueDelete+0x6e>
 800e07e:	69da      	ldr	r2, [r3, #28]
 800e080:	4290      	cmp	r0, r2
 800e082:	d02a      	beq.n	800e0da <vQueueDelete+0x72>
 800e084:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800e086:	4290      	cmp	r0, r2
 800e088:	d029      	beq.n	800e0de <vQueueDelete+0x76>
 800e08a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e08c:	4290      	cmp	r0, r2
 800e08e:	d01e      	beq.n	800e0ce <vQueueDelete+0x66>
 800e090:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800e092:	4290      	cmp	r0, r2
 800e094:	d025      	beq.n	800e0e2 <vQueueDelete+0x7a>
 800e096:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800e098:	4290      	cmp	r0, r2
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e09a:	bf08      	it	eq
 800e09c:	2207      	moveq	r2, #7
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e09e:	d00f      	beq.n	800e0c0 <vQueueDelete+0x58>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e0a0:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800e0a4:	b14b      	cbz	r3, 800e0ba <vQueueDelete+0x52>
}
 800e0a6:	4770      	bx	lr
 800e0a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ac:	f383 8811 	msr	BASEPRI, r3
 800e0b0:	f3bf 8f6f 	isb	sy
 800e0b4:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
 800e0b8:	e7fe      	b.n	800e0b8 <vQueueDelete+0x50>
			vPortFree( pxQueue );
 800e0ba:	f7fe be05 	b.w	800ccc8 <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e0be:	2200      	movs	r2, #0
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e0c0:	ed9f 7b09 	vldr	d7, [pc, #36]	; 800e0e8 <vQueueDelete+0x80>
 800e0c4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800e0c8:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
 800e0cc:	e7e8      	b.n	800e0a0 <vQueueDelete+0x38>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e0ce:	2205      	movs	r2, #5
 800e0d0:	e7f6      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0d2:	2201      	movs	r2, #1
 800e0d4:	e7f4      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0d6:	2202      	movs	r2, #2
 800e0d8:	e7f2      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0da:	2203      	movs	r2, #3
 800e0dc:	e7f0      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0de:	2204      	movs	r2, #4
 800e0e0:	e7ee      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0e2:	2206      	movs	r2, #6
 800e0e4:	e7ec      	b.n	800e0c0 <vQueueDelete+0x58>
 800e0e6:	bf00      	nop
	...
 800e0f0:	20012740 	.word	0x20012740

0800e0f4 <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e0f4:	4b12      	ldr	r3, [pc, #72]	; (800e140 <vQueueAddToRegistry+0x4c>)
 800e0f6:	681a      	ldr	r2, [r3, #0]
 800e0f8:	b17a      	cbz	r2, 800e11a <vQueueAddToRegistry+0x26>
 800e0fa:	689a      	ldr	r2, [r3, #8]
 800e0fc:	b162      	cbz	r2, 800e118 <vQueueAddToRegistry+0x24>
 800e0fe:	691a      	ldr	r2, [r3, #16]
 800e100:	b192      	cbz	r2, 800e128 <vQueueAddToRegistry+0x34>
 800e102:	699a      	ldr	r2, [r3, #24]
 800e104:	b192      	cbz	r2, 800e12c <vQueueAddToRegistry+0x38>
 800e106:	6a1a      	ldr	r2, [r3, #32]
 800e108:	b192      	cbz	r2, 800e130 <vQueueAddToRegistry+0x3c>
 800e10a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800e10c:	b192      	cbz	r2, 800e134 <vQueueAddToRegistry+0x40>
 800e10e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e110:	b192      	cbz	r2, 800e138 <vQueueAddToRegistry+0x44>
 800e112:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e114:	b192      	cbz	r2, 800e13c <vQueueAddToRegistry+0x48>
	}
 800e116:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e118:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e11a:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e11e:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e122:	f8cc 0004 	str.w	r0, [ip, #4]
	}
 800e126:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e128:	2202      	movs	r2, #2
 800e12a:	e7f6      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e12c:	2203      	movs	r2, #3
 800e12e:	e7f4      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e130:	2204      	movs	r2, #4
 800e132:	e7f2      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e134:	2205      	movs	r2, #5
 800e136:	e7f0      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e138:	2206      	movs	r2, #6
 800e13a:	e7ee      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e13c:	2207      	movs	r2, #7
 800e13e:	e7ec      	b.n	800e11a <vQueueAddToRegistry+0x26>
 800e140:	20012740 	.word	0x20012740

0800e144 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e144:	b570      	push	{r4, r5, r6, lr}
 800e146:	4605      	mov	r5, r0
 800e148:	460e      	mov	r6, r1
 800e14a:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e14c:	f7fe fed2 	bl	800cef4 <vPortEnterCritical>
 800e150:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e154:	2bff      	cmp	r3, #255	; 0xff
 800e156:	bf04      	itt	eq
 800e158:	2300      	moveq	r3, #0
 800e15a:	f885 3044 	strbeq.w	r3, [r5, #68]	; 0x44
 800e15e:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e162:	2bff      	cmp	r3, #255	; 0xff
 800e164:	bf04      	itt	eq
 800e166:	2300      	moveq	r3, #0
 800e168:	f885 3045 	strbeq.w	r3, [r5, #69]	; 0x45
 800e16c:	f7fe fee4 	bl	800cf38 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e170:	6bab      	ldr	r3, [r5, #56]	; 0x38
 800e172:	2b00      	cmp	r3, #0
 800e174:	d043      	beq.n	800e1fe <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
 800e176:	f7fe febd 	bl	800cef4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800e17a:	f895 3045 	ldrb.w	r3, [r5, #69]	; 0x45
 800e17e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e180:	2c00      	cmp	r4, #0
 800e182:	dd14      	ble.n	800e1ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e184:	f105 0624 	add.w	r6, r5, #36	; 0x24
 800e188:	e003      	b.n	800e192 <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
 800e18a:	1e63      	subs	r3, r4, #1
 800e18c:	b2da      	uxtb	r2, r3
 800e18e:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e190:	b16a      	cbz	r2, 800e1ae <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e192:	6a6b      	ldr	r3, [r5, #36]	; 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e194:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800e196:	b153      	cbz	r3, 800e1ae <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800e198:	f000 fd2a 	bl	800ebf0 <xTaskRemoveFromEventList>
 800e19c:	2800      	cmp	r0, #0
 800e19e:	d0f4      	beq.n	800e18a <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
 800e1a0:	f000 fdc2 	bl	800ed28 <vTaskMissedYield>
			--cTxLock;
 800e1a4:	1e63      	subs	r3, r4, #1
 800e1a6:	b2da      	uxtb	r2, r3
 800e1a8:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800e1aa:	2a00      	cmp	r2, #0
 800e1ac:	d1f1      	bne.n	800e192 <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
 800e1ae:	23ff      	movs	r3, #255	; 0xff
 800e1b0:	f885 3045 	strb.w	r3, [r5, #69]	; 0x45
	taskEXIT_CRITICAL();
 800e1b4:	f7fe fec0 	bl	800cf38 <vPortExitCritical>
	taskENTER_CRITICAL();
 800e1b8:	f7fe fe9c 	bl	800cef4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800e1bc:	f895 3044 	ldrb.w	r3, [r5, #68]	; 0x44
 800e1c0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1c2:	2c00      	cmp	r4, #0
 800e1c4:	dd14      	ble.n	800e1f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1c6:	f105 0610 	add.w	r6, r5, #16
 800e1ca:	e003      	b.n	800e1d4 <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
 800e1cc:	1e63      	subs	r3, r4, #1
 800e1ce:	b2da      	uxtb	r2, r3
 800e1d0:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1d2:	b16a      	cbz	r2, 800e1f0 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1d4:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1d6:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1d8:	b153      	cbz	r3, 800e1f0 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1da:	f000 fd09 	bl	800ebf0 <xTaskRemoveFromEventList>
 800e1de:	2800      	cmp	r0, #0
 800e1e0:	d0f4      	beq.n	800e1cc <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
 800e1e2:	f000 fda1 	bl	800ed28 <vTaskMissedYield>
				--cRxLock;
 800e1e6:	1e63      	subs	r3, r4, #1
 800e1e8:	b2da      	uxtb	r2, r3
 800e1ea:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800e1ec:	2a00      	cmp	r2, #0
 800e1ee:	d1f1      	bne.n	800e1d4 <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
 800e1f0:	23ff      	movs	r3, #255	; 0xff
 800e1f2:	f885 3044 	strb.w	r3, [r5, #68]	; 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
 800e1f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800e1fa:	f7fe be9d 	b.w	800cf38 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e1fe:	4622      	mov	r2, r4
 800e200:	4631      	mov	r1, r6
 800e202:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800e206:	f000 fca9 	bl	800eb5c <vTaskPlaceOnEventListRestricted>
 800e20a:	e7b4      	b.n	800e176 <vQueueWaitForMessageRestricted+0x32>

0800e20c <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e20c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e210:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e212:	f7fe fe6f 	bl	800cef4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e216:	4a34      	ldr	r2, [pc, #208]	; (800e2e8 <prvAddNewTaskToReadyList+0xdc>)
		if( pxCurrentTCB == NULL )
 800e218:	4e34      	ldr	r6, [pc, #208]	; (800e2ec <prvAddNewTaskToReadyList+0xe0>)
		uxCurrentNumberOfTasks++;
 800e21a:	6813      	ldr	r3, [r2, #0]
 800e21c:	3301      	adds	r3, #1
 800e21e:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800e220:	6833      	ldr	r3, [r6, #0]
 800e222:	2b00      	cmp	r3, #0
 800e224:	d032      	beq.n	800e28c <prvAddNewTaskToReadyList+0x80>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800e226:	4c32      	ldr	r4, [pc, #200]	; (800e2f0 <prvAddNewTaskToReadyList+0xe4>)
 800e228:	6823      	ldr	r3, [r4, #0]
 800e22a:	b33b      	cbz	r3, 800e27c <prvAddNewTaskToReadyList+0x70>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e22c:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e22e:	4f31      	ldr	r7, [pc, #196]	; (800e2f4 <prvAddNewTaskToReadyList+0xe8>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800e230:	4a31      	ldr	r2, [pc, #196]	; (800e2f8 <prvAddNewTaskToReadyList+0xec>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800e232:	4932      	ldr	r1, [pc, #200]	; (800e2fc <prvAddNewTaskToReadyList+0xf0>)
		uxTaskNumber++;
 800e234:	6813      	ldr	r3, [r2, #0]
 800e236:	3301      	adds	r3, #1
 800e238:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e23a:	646b      	str	r3, [r5, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e23c:	680b      	ldr	r3, [r1, #0]
 800e23e:	4283      	cmp	r3, r0
 800e240:	bf38      	it	cc
 800e242:	6008      	strcc	r0, [r1, #0]
 800e244:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800e248:	eb07 0080 	add.w	r0, r7, r0, lsl #2
 800e24c:	1d29      	adds	r1, r5, #4
 800e24e:	f7fe fdaf 	bl	800cdb0 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800e252:	f7fe fe71 	bl	800cf38 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800e256:	6823      	ldr	r3, [r4, #0]
 800e258:	b173      	cbz	r3, 800e278 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e25a:	6832      	ldr	r2, [r6, #0]
 800e25c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800e25e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e260:	429a      	cmp	r2, r3
 800e262:	d209      	bcs.n	800e278 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800e264:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e268:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e26c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e270:	f3bf 8f4f 	dsb	sy
 800e274:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800e278:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e27c:	6833      	ldr	r3, [r6, #0]
 800e27e:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e280:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e282:	4f1c      	ldr	r7, [pc, #112]	; (800e2f4 <prvAddNewTaskToReadyList+0xe8>)
 800e284:	4283      	cmp	r3, r0
					pxCurrentTCB = pxNewTCB;
 800e286:	bf98      	it	ls
 800e288:	6035      	strls	r5, [r6, #0]
 800e28a:	e7d1      	b.n	800e230 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
 800e28c:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e28e:	6813      	ldr	r3, [r2, #0]
 800e290:	2b01      	cmp	r3, #1
 800e292:	d003      	beq.n	800e29c <prvAddNewTaskToReadyList+0x90>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e294:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
 800e296:	4f17      	ldr	r7, [pc, #92]	; (800e2f4 <prvAddNewTaskToReadyList+0xe8>)
 800e298:	4c15      	ldr	r4, [pc, #84]	; (800e2f0 <prvAddNewTaskToReadyList+0xe4>)
 800e29a:	e7c9      	b.n	800e230 <prvAddNewTaskToReadyList+0x24>
 800e29c:	4f15      	ldr	r7, [pc, #84]	; (800e2f4 <prvAddNewTaskToReadyList+0xe8>)
 800e29e:	463c      	mov	r4, r7
 800e2a0:	f507 688c 	add.w	r8, r7, #1120	; 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2a4:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2a6:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2a8:	f7fe fd72 	bl	800cd90 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2ac:	45a0      	cmp	r8, r4
 800e2ae:	d1f9      	bne.n	800e2a4 <prvAddNewTaskToReadyList+0x98>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e2b0:	f8df 9060 	ldr.w	r9, [pc, #96]	; 800e314 <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
 800e2b4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800e318 <prvAddNewTaskToReadyList+0x10c>
 800e2b8:	4c0d      	ldr	r4, [pc, #52]	; (800e2f0 <prvAddNewTaskToReadyList+0xe4>)
	vListInitialise( &xDelayedTaskList1 );
 800e2ba:	4648      	mov	r0, r9
 800e2bc:	f7fe fd68 	bl	800cd90 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e2c0:	4640      	mov	r0, r8
 800e2c2:	f7fe fd65 	bl	800cd90 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e2c6:	480e      	ldr	r0, [pc, #56]	; (800e300 <prvAddNewTaskToReadyList+0xf4>)
 800e2c8:	f7fe fd62 	bl	800cd90 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e2cc:	480d      	ldr	r0, [pc, #52]	; (800e304 <prvAddNewTaskToReadyList+0xf8>)
 800e2ce:	f7fe fd5f 	bl	800cd90 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e2d2:	480d      	ldr	r0, [pc, #52]	; (800e308 <prvAddNewTaskToReadyList+0xfc>)
 800e2d4:	f7fe fd5c 	bl	800cd90 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e2d8:	4b0c      	ldr	r3, [pc, #48]	; (800e30c <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
 800e2da:	6ae8      	ldr	r0, [r5, #44]	; 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
 800e2dc:	f8c3 9000 	str.w	r9, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e2e0:	4b0b      	ldr	r3, [pc, #44]	; (800e310 <prvAddNewTaskToReadyList+0x104>)
 800e2e2:	f8c3 8000 	str.w	r8, [r3]
}
 800e2e6:	e7a3      	b.n	800e230 <prvAddNewTaskToReadyList+0x24>
 800e2e8:	20012bec 	.word	0x20012bec
 800e2ec:	20012780 	.word	0x20012780
 800e2f0:	20012c48 	.word	0x20012c48
 800e2f4:	2001278c 	.word	0x2001278c
 800e2f8:	20012bf8 	.word	0x20012bf8
 800e2fc:	20012bfc 	.word	0x20012bfc
 800e300:	20012c34 	.word	0x20012c34
 800e304:	20012c60 	.word	0x20012c60
 800e308:	20012c4c 	.word	0x20012c4c
 800e30c:	20012784 	.word	0x20012784
 800e310:	20012788 	.word	0x20012788
 800e314:	20012c00 	.word	0x20012c00
 800e318:	20012c14 	.word	0x20012c14

0800e31c <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e31c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e320:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e322:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e326:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e32a:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e32c:	4606      	mov	r6, r0
 800e32e:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e330:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e332:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e334:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e336:	f01b fd12 	bl	8029d5e <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e33a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e33c:	f1a9 0904 	sub.w	r9, r9, #4
 800e340:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e342:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 800e346:	2d00      	cmp	r5, #0
 800e348:	d079      	beq.n	800e43e <prvInitialiseNewTask.constprop.0+0x122>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e34a:	782b      	ldrb	r3, [r5, #0]
 800e34c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
			if( pcName[ x ] == ( char ) 0x00 )
 800e350:	2b00      	cmp	r3, #0
 800e352:	d03b      	beq.n	800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e354:	786b      	ldrb	r3, [r5, #1]
 800e356:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
			if( pcName[ x ] == ( char ) 0x00 )
 800e35a:	2b00      	cmp	r3, #0
 800e35c:	d036      	beq.n	800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e35e:	78ab      	ldrb	r3, [r5, #2]
 800e360:	f884 3036 	strb.w	r3, [r4, #54]	; 0x36
			if( pcName[ x ] == ( char ) 0x00 )
 800e364:	b393      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e366:	78eb      	ldrb	r3, [r5, #3]
 800e368:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
			if( pcName[ x ] == ( char ) 0x00 )
 800e36c:	b373      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e36e:	792b      	ldrb	r3, [r5, #4]
 800e370:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
			if( pcName[ x ] == ( char ) 0x00 )
 800e374:	b353      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e376:	796b      	ldrb	r3, [r5, #5]
 800e378:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
			if( pcName[ x ] == ( char ) 0x00 )
 800e37c:	b333      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e37e:	79ab      	ldrb	r3, [r5, #6]
 800e380:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
 800e384:	b313      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e386:	79eb      	ldrb	r3, [r5, #7]
 800e388:	f884 303b 	strb.w	r3, [r4, #59]	; 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
 800e38c:	b1f3      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e38e:	7a2b      	ldrb	r3, [r5, #8]
 800e390:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
 800e394:	b1d3      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e396:	7a6b      	ldrb	r3, [r5, #9]
 800e398:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
 800e39c:	b1b3      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e39e:	7aab      	ldrb	r3, [r5, #10]
 800e3a0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
 800e3a4:	b193      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e3a6:	7aeb      	ldrb	r3, [r5, #11]
 800e3a8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
 800e3ac:	b173      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e3ae:	7b2b      	ldrb	r3, [r5, #12]
 800e3b0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
			if( pcName[ x ] == ( char ) 0x00 )
 800e3b4:	b153      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e3b6:	7b6b      	ldrb	r3, [r5, #13]
 800e3b8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
			if( pcName[ x ] == ( char ) 0x00 )
 800e3bc:	b133      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e3be:	7bab      	ldrb	r3, [r5, #14]
 800e3c0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
			if( pcName[ x ] == ( char ) 0x00 )
 800e3c4:	b113      	cbz	r3, 800e3cc <prvInitialiseNewTask.constprop.0+0xb0>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e3c6:	7beb      	ldrb	r3, [r5, #15]
 800e3c8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e3cc:	2300      	movs	r3, #0
 800e3ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e3d2:	9d08      	ldr	r5, [sp, #32]
 800e3d4:	2d37      	cmp	r5, #55	; 0x37
 800e3d6:	bf28      	it	cs
 800e3d8:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e3da:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e3de:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e3e0:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e3e2:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e3e4:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e3e8:	f7fe fcde 	bl	800cda8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e3ec:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e3f0:	f104 0018 	add.w	r0, r4, #24
 800e3f4:	f7fe fcd8 	bl	800cda8 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e3f8:	61a5      	str	r5, [r4, #24]
		pxNewTCB->ulNotifiedValue = 0;
 800e3fa:	f8c4 a0a4 	str.w	sl, [r4, #164]	; 0xa4
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e3fe:	4651      	mov	r1, sl
 800e400:	224c      	movs	r2, #76	; 0x4c
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e402:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e404:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e406:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e40a:	f884 a0a8 	strb.w	sl, [r4, #168]	; 0xa8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e40e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e412:	f01b fca4 	bl	8029d5e <memset>
 800e416:	4b0b      	ldr	r3, [pc, #44]	; (800e444 <prvInitialiseNewTask.constprop.0+0x128>)
 800e418:	65e3      	str	r3, [r4, #92]	; 0x5c
 800e41a:	f103 0568 	add.w	r5, r3, #104	; 0x68
 800e41e:	33d0      	adds	r3, #208	; 0xd0
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e420:	463a      	mov	r2, r7
 800e422:	4631      	mov	r1, r6
 800e424:	4648      	mov	r0, r9
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 800e426:	6625      	str	r5, [r4, #96]	; 0x60
 800e428:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e42a:	f7fe fd3b 	bl	800cea4 <pxPortInitialiseStack>
 800e42e:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e430:	f1b8 0f00 	cmp.w	r8, #0
 800e434:	d001      	beq.n	800e43a <prvInitialiseNewTask.constprop.0+0x11e>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e436:	f8c8 4000 	str.w	r4, [r8]
}
 800e43a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e43e:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e442:	e7c6      	b.n	800e3d2 <prvInitialiseNewTask.constprop.0+0xb6>
 800e444:	20013710 	.word	0x20013710

0800e448 <prvIdleTask>:
{
 800e448:	b580      	push	{r7, lr}
 800e44a:	4d23      	ldr	r5, [pc, #140]	; (800e4d8 <prvIdleTask+0x90>)
 800e44c:	4f23      	ldr	r7, [pc, #140]	; (800e4dc <prvIdleTask+0x94>)
 800e44e:	4e24      	ldr	r6, [pc, #144]	; (800e4e0 <prvIdleTask+0x98>)
 800e450:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800e4e4 <prvIdleTask+0x9c>
				taskYIELD();
 800e454:	f04f 2ae0 	mov.w	sl, #3758153728	; 0xe000e000
 800e458:	f04f 5980 	mov.w	r9, #268435456	; 0x10000000
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e45c:	682b      	ldr	r3, [r5, #0]
 800e45e:	b35b      	cbz	r3, 800e4b8 <prvIdleTask+0x70>
		{
			taskENTER_CRITICAL();
 800e460:	f7fe fd48 	bl	800cef4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e464:	68fb      	ldr	r3, [r7, #12]
 800e466:	68dc      	ldr	r4, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e468:	1d20      	adds	r0, r4, #4
 800e46a:	f7fe fcc9 	bl	800ce00 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e46e:	6833      	ldr	r3, [r6, #0]
 800e470:	3b01      	subs	r3, #1
 800e472:	6033      	str	r3, [r6, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e474:	682b      	ldr	r3, [r5, #0]
 800e476:	3b01      	subs	r3, #1
 800e478:	602b      	str	r3, [r5, #0]
			}
			taskEXIT_CRITICAL();
 800e47a:	f7fe fd5d 	bl	800cf38 <vPortExitCritical>
		to the task to free any memory allocated at the application level.
		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
		for additional information. */
		#if ( configUSE_NEWLIB_REENTRANT == 1 )
		{
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 800e47e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800e482:	f01b fcb5 	bl	8029df0 <_reclaim_reent>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e486:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e48a:	b163      	cbz	r3, 800e4a6 <prvIdleTask+0x5e>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e48c:	2b01      	cmp	r3, #1
 800e48e:	d01e      	beq.n	800e4ce <prvIdleTask+0x86>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e490:	2b02      	cmp	r3, #2
 800e492:	d0e3      	beq.n	800e45c <prvIdleTask+0x14>
 800e494:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e498:	f383 8811 	msr	BASEPRI, r3
 800e49c:	f3bf 8f6f 	isb	sy
 800e4a0:	f3bf 8f4f 	dsb	sy
 800e4a4:	e7fe      	b.n	800e4a4 <prvIdleTask+0x5c>
				vPortFree( pxTCB->pxStack );
 800e4a6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e4a8:	f7fe fc0e 	bl	800ccc8 <vPortFree>
				vPortFree( pxTCB );
 800e4ac:	4620      	mov	r0, r4
 800e4ae:	f7fe fc0b 	bl	800ccc8 <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e4b2:	682b      	ldr	r3, [r5, #0]
 800e4b4:	2b00      	cmp	r3, #0
 800e4b6:	d1d3      	bne.n	800e460 <prvIdleTask+0x18>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e4b8:	f8d8 3000 	ldr.w	r3, [r8]
 800e4bc:	2b01      	cmp	r3, #1
 800e4be:	d9cd      	bls.n	800e45c <prvIdleTask+0x14>
				taskYIELD();
 800e4c0:	f8ca 9d04 	str.w	r9, [sl, #3332]	; 0xd04
 800e4c4:	f3bf 8f4f 	dsb	sy
 800e4c8:	f3bf 8f6f 	isb	sy
 800e4cc:	e7c6      	b.n	800e45c <prvIdleTask+0x14>
				vPortFree( pxTCB );
 800e4ce:	4620      	mov	r0, r4
 800e4d0:	f7fe fbfa 	bl	800ccc8 <vPortFree>
 800e4d4:	e7c2      	b.n	800e45c <prvIdleTask+0x14>
 800e4d6:	bf00      	nop
 800e4d8:	20012bf0 	.word	0x20012bf0
 800e4dc:	20012c60 	.word	0x20012c60
 800e4e0:	20012bec 	.word	0x20012bec
 800e4e4:	2001278c 	.word	0x2001278c

0800e4e8 <xTaskIncrementTick.part.0>:
BaseType_t xTaskIncrementTick( void )
 800e4e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e4ec:	4b47      	ldr	r3, [pc, #284]	; (800e60c <xTaskIncrementTick.part.0+0x124>)
 800e4ee:	681e      	ldr	r6, [r3, #0]
 800e4f0:	3601      	adds	r6, #1
BaseType_t xTaskIncrementTick( void )
 800e4f2:	b083      	sub	sp, #12
		xTickCount = xConstTickCount;
 800e4f4:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e4f6:	2e00      	cmp	r6, #0
 800e4f8:	d040      	beq.n	800e57c <xTaskIncrementTick.part.0+0x94>
 800e4fa:	f8df b124 	ldr.w	fp, [pc, #292]	; 800e620 <xTaskIncrementTick.part.0+0x138>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e4fe:	f8db 3000 	ldr.w	r3, [fp]
 800e502:	429e      	cmp	r6, r3
 800e504:	d347      	bcc.n	800e596 <xTaskIncrementTick.part.0+0xae>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e506:	4f42      	ldr	r7, [pc, #264]	; (800e610 <xTaskIncrementTick.part.0+0x128>)
 800e508:	f8df 9118 	ldr.w	r9, [pc, #280]	; 800e624 <xTaskIncrementTick.part.0+0x13c>
 800e50c:	683b      	ldr	r3, [r7, #0]
 800e50e:	f8df a118 	ldr.w	sl, [pc, #280]	; 800e628 <xTaskIncrementTick.part.0+0x140>
 800e512:	681d      	ldr	r5, [r3, #0]
 800e514:	2d00      	cmp	r5, #0
 800e516:	d073      	beq.n	800e600 <xTaskIncrementTick.part.0+0x118>
					prvAddTaskToReadyList( pxTCB );
 800e518:	f8df 8110 	ldr.w	r8, [pc, #272]	; 800e62c <xTaskIncrementTick.part.0+0x144>
BaseType_t xSwitchRequired = pdFALSE;
 800e51c:	2500      	movs	r5, #0
 800e51e:	e022      	b.n	800e566 <xTaskIncrementTick.part.0+0x7e>
 800e520:	9101      	str	r1, [sp, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e522:	f7fe fc6d 	bl	800ce00 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e526:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800e528:	9901      	ldr	r1, [sp, #4]
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e52a:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e52e:	b113      	cbz	r3, 800e536 <xTaskIncrementTick.part.0+0x4e>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e530:	f7fe fc66 	bl	800ce00 <uxListRemove>
 800e534:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e536:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e538:	f8d8 2000 	ldr.w	r2, [r8]
 800e53c:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e540:	4293      	cmp	r3, r2
 800e542:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e546:	bf88      	it	hi
 800e548:	f8c8 3000 	strhi.w	r3, [r8]
 800e54c:	f7fe fc30 	bl	800cdb0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e550:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e554:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e556:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e558:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e55a:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
 800e55c:	4291      	cmp	r1, r2
 800e55e:	bf28      	it	cs
 800e560:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e562:	2b00      	cmp	r3, #0
 800e564:	d04c      	beq.n	800e600 <xTaskIncrementTick.part.0+0x118>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e566:	683b      	ldr	r3, [r7, #0]
 800e568:	68db      	ldr	r3, [r3, #12]
 800e56a:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e56c:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e56e:	1d21      	adds	r1, r4, #4
					if( xConstTickCount < xItemValue )
 800e570:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e572:	4608      	mov	r0, r1
					if( xConstTickCount < xItemValue )
 800e574:	d2d4      	bcs.n	800e520 <xTaskIncrementTick.part.0+0x38>
						xNextTaskUnblockTime = xItemValue;
 800e576:	f8cb 3000 	str.w	r3, [fp]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e57a:	e011      	b.n	800e5a0 <xTaskIncrementTick.part.0+0xb8>
			taskSWITCH_DELAYED_LISTS();
 800e57c:	4b24      	ldr	r3, [pc, #144]	; (800e610 <xTaskIncrementTick.part.0+0x128>)
 800e57e:	681a      	ldr	r2, [r3, #0]
 800e580:	6812      	ldr	r2, [r2, #0]
 800e582:	b30a      	cbz	r2, 800e5c8 <xTaskIncrementTick.part.0+0xe0>
 800e584:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e588:	f383 8811 	msr	BASEPRI, r3
 800e58c:	f3bf 8f6f 	isb	sy
 800e590:	f3bf 8f4f 	dsb	sy
 800e594:	e7fe      	b.n	800e594 <xTaskIncrementTick.part.0+0xac>
 800e596:	f8df 908c 	ldr.w	r9, [pc, #140]	; 800e624 <xTaskIncrementTick.part.0+0x13c>
 800e59a:	f8df a08c 	ldr.w	sl, [pc, #140]	; 800e628 <xTaskIncrementTick.part.0+0x140>
BaseType_t xSwitchRequired = pdFALSE;
 800e59e:	2500      	movs	r5, #0
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e5a0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
 800e5a4:	491b      	ldr	r1, [pc, #108]	; (800e614 <xTaskIncrementTick.part.0+0x12c>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e5a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e5a8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800e5ac:	009b      	lsls	r3, r3, #2
 800e5ae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
 800e5b2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
 800e5b4:	2a02      	cmp	r2, #2
 800e5b6:	bf28      	it	cs
 800e5b8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
 800e5ba:	2b00      	cmp	r3, #0
}
 800e5bc:	bf0c      	ite	eq
 800e5be:	4628      	moveq	r0, r5
 800e5c0:	2001      	movne	r0, #1
 800e5c2:	b003      	add	sp, #12
 800e5c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
 800e5c8:	4a13      	ldr	r2, [pc, #76]	; (800e618 <xTaskIncrementTick.part.0+0x130>)
 800e5ca:	6818      	ldr	r0, [r3, #0]
 800e5cc:	6811      	ldr	r1, [r2, #0]
 800e5ce:	6019      	str	r1, [r3, #0]
 800e5d0:	4912      	ldr	r1, [pc, #72]	; (800e61c <xTaskIncrementTick.part.0+0x134>)
 800e5d2:	6010      	str	r0, [r2, #0]
 800e5d4:	680a      	ldr	r2, [r1, #0]
 800e5d6:	3201      	adds	r2, #1
 800e5d8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e5da:	681a      	ldr	r2, [r3, #0]
 800e5dc:	6812      	ldr	r2, [r2, #0]
 800e5de:	b932      	cbnz	r2, 800e5ee <xTaskIncrementTick.part.0+0x106>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800e5e0:	f8df b03c 	ldr.w	fp, [pc, #60]	; 800e620 <xTaskIncrementTick.part.0+0x138>
 800e5e4:	f04f 33ff 	mov.w	r3, #4294967295
 800e5e8:	f8cb 3000 	str.w	r3, [fp]
 800e5ec:	e787      	b.n	800e4fe <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e5ee:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e5f0:	f8df b02c 	ldr.w	fp, [pc, #44]	; 800e620 <xTaskIncrementTick.part.0+0x138>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e5f4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e5f6:	68db      	ldr	r3, [r3, #12]
 800e5f8:	685b      	ldr	r3, [r3, #4]
 800e5fa:	f8cb 3000 	str.w	r3, [fp]
	}
}
 800e5fe:	e77e      	b.n	800e4fe <xTaskIncrementTick.part.0+0x16>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e600:	f04f 33ff 	mov.w	r3, #4294967295
 800e604:	f8cb 3000 	str.w	r3, [fp]
					break;
 800e608:	e7ca      	b.n	800e5a0 <xTaskIncrementTick.part.0+0xb8>
 800e60a:	bf00      	nop
 800e60c:	20012c74 	.word	0x20012c74
 800e610:	20012784 	.word	0x20012784
 800e614:	20012c78 	.word	0x20012c78
 800e618:	20012788 	.word	0x20012788
 800e61c:	20012c2c 	.word	0x20012c2c
 800e620:	20012c28 	.word	0x20012c28
 800e624:	2001278c 	.word	0x2001278c
 800e628:	20012780 	.word	0x20012780
 800e62c:	20012bfc 	.word	0x20012bfc

0800e630 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
 800e630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
 800e634:	4d41      	ldr	r5, [pc, #260]	; (800e73c <xTaskResumeAll.part.0+0x10c>)
BaseType_t xTaskResumeAll( void )
 800e636:	b083      	sub	sp, #12
	taskENTER_CRITICAL();
 800e638:	f7fe fc5c 	bl	800cef4 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e63c:	682b      	ldr	r3, [r5, #0]
 800e63e:	3b01      	subs	r3, #1
 800e640:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e642:	682b      	ldr	r3, [r5, #0]
 800e644:	2b00      	cmp	r3, #0
 800e646:	d161      	bne.n	800e70c <xTaskResumeAll.part.0+0xdc>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e648:	4b3d      	ldr	r3, [pc, #244]	; (800e740 <xTaskResumeAll.part.0+0x110>)
 800e64a:	681b      	ldr	r3, [r3, #0]
 800e64c:	2b00      	cmp	r3, #0
 800e64e:	d05d      	beq.n	800e70c <xTaskResumeAll.part.0+0xdc>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e650:	4e3c      	ldr	r6, [pc, #240]	; (800e744 <xTaskResumeAll.part.0+0x114>)
 800e652:	6833      	ldr	r3, [r6, #0]
 800e654:	2b00      	cmp	r3, #0
 800e656:	d06e      	beq.n	800e736 <xTaskResumeAll.part.0+0x106>
 800e658:	4f3b      	ldr	r7, [pc, #236]	; (800e748 <xTaskResumeAll.part.0+0x118>)
 800e65a:	f8df 90fc 	ldr.w	r9, [pc, #252]	; 800e758 <xTaskResumeAll.part.0+0x128>
 800e65e:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 800e75c <xTaskResumeAll.part.0+0x12c>
 800e662:	f8df a0fc 	ldr.w	sl, [pc, #252]	; 800e760 <xTaskResumeAll.part.0+0x130>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e666:	68f3      	ldr	r3, [r6, #12]
 800e668:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e66a:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e66e:	f104 0018 	add.w	r0, r4, #24
 800e672:	f7fe fbc5 	bl	800ce00 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e676:	4658      	mov	r0, fp
 800e678:	f7fe fbc2 	bl	800ce00 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e67c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e67e:	683a      	ldr	r2, [r7, #0]
 800e680:	eb03 0083 	add.w	r0, r3, r3, lsl #2
 800e684:	4293      	cmp	r3, r2
 800e686:	4659      	mov	r1, fp
 800e688:	eb09 0080 	add.w	r0, r9, r0, lsl #2
 800e68c:	bf88      	it	hi
 800e68e:	603b      	strhi	r3, [r7, #0]
 800e690:	f7fe fb8e 	bl	800cdb0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e694:	f8d8 3000 	ldr.w	r3, [r8]
 800e698:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e69a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e69c:	429a      	cmp	r2, r3
 800e69e:	d33d      	bcc.n	800e71c <xTaskResumeAll.part.0+0xec>
						xYieldPending = pdTRUE;
 800e6a0:	2301      	movs	r3, #1
 800e6a2:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e6a6:	6833      	ldr	r3, [r6, #0]
 800e6a8:	2b00      	cmp	r3, #0
 800e6aa:	d1dc      	bne.n	800e666 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6ac:	4b27      	ldr	r3, [pc, #156]	; (800e74c <xTaskResumeAll.part.0+0x11c>)
 800e6ae:	681a      	ldr	r2, [r3, #0]
 800e6b0:	6812      	ldr	r2, [r2, #0]
 800e6b2:	2a00      	cmp	r2, #0
 800e6b4:	d03a      	beq.n	800e72c <xTaskResumeAll.part.0+0xfc>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6b6:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e6b8:	4b25      	ldr	r3, [pc, #148]	; (800e750 <xTaskResumeAll.part.0+0x120>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6ba:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e6bc:	68d2      	ldr	r2, [r2, #12]
 800e6be:	6852      	ldr	r2, [r2, #4]
 800e6c0:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e6c2:	4e24      	ldr	r6, [pc, #144]	; (800e754 <xTaskResumeAll.part.0+0x124>)
 800e6c4:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e6c6:	b194      	cbz	r4, 800e6ee <xTaskResumeAll.part.0+0xbe>
								xYieldPending = pdTRUE;
 800e6c8:	2701      	movs	r7, #1
 800e6ca:	e006      	b.n	800e6da <xTaskResumeAll.part.0+0xaa>
 800e6cc:	f7ff ff0c 	bl	800e4e8 <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
 800e6d0:	b108      	cbz	r0, 800e6d6 <xTaskResumeAll.part.0+0xa6>
								xYieldPending = pdTRUE;
 800e6d2:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e6d6:	3c01      	subs	r4, #1
 800e6d8:	d008      	beq.n	800e6ec <xTaskResumeAll.part.0+0xbc>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e6da:	682b      	ldr	r3, [r5, #0]
 800e6dc:	2b00      	cmp	r3, #0
 800e6de:	d0f5      	beq.n	800e6cc <xTaskResumeAll.part.0+0x9c>
		++xPendedTicks;
 800e6e0:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e6e2:	3c01      	subs	r4, #1
		++xPendedTicks;
 800e6e4:	f103 0301 	add.w	r3, r3, #1
 800e6e8:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e6ea:	d1f6      	bne.n	800e6da <xTaskResumeAll.part.0+0xaa>
						xPendedTicks = 0;
 800e6ec:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
 800e6ee:	f8da 3000 	ldr.w	r3, [sl]
 800e6f2:	b15b      	cbz	r3, 800e70c <xTaskResumeAll.part.0+0xdc>
					taskYIELD_IF_USING_PREEMPTION();
 800e6f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e6f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e6fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e700:	f3bf 8f4f 	dsb	sy
 800e704:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e708:	2001      	movs	r0, #1
 800e70a:	e000      	b.n	800e70e <xTaskResumeAll.part.0+0xde>
BaseType_t xAlreadyYielded = pdFALSE;
 800e70c:	2000      	movs	r0, #0
 800e70e:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800e710:	f7fe fc12 	bl	800cf38 <vPortExitCritical>
}
 800e714:	9801      	ldr	r0, [sp, #4]
 800e716:	b003      	add	sp, #12
 800e718:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e71c:	6833      	ldr	r3, [r6, #0]
 800e71e:	2b00      	cmp	r3, #0
 800e720:	d1a1      	bne.n	800e666 <xTaskResumeAll.part.0+0x36>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e722:	4b0a      	ldr	r3, [pc, #40]	; (800e74c <xTaskResumeAll.part.0+0x11c>)
 800e724:	681a      	ldr	r2, [r3, #0]
 800e726:	6812      	ldr	r2, [r2, #0]
 800e728:	2a00      	cmp	r2, #0
 800e72a:	d1c4      	bne.n	800e6b6 <xTaskResumeAll.part.0+0x86>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e72c:	4b08      	ldr	r3, [pc, #32]	; (800e750 <xTaskResumeAll.part.0+0x120>)
 800e72e:	f04f 32ff 	mov.w	r2, #4294967295
 800e732:	601a      	str	r2, [r3, #0]
 800e734:	e7c5      	b.n	800e6c2 <xTaskResumeAll.part.0+0x92>
 800e736:	f8df a028 	ldr.w	sl, [pc, #40]	; 800e760 <xTaskResumeAll.part.0+0x130>
 800e73a:	e7c2      	b.n	800e6c2 <xTaskResumeAll.part.0+0x92>
 800e73c:	20012bf4 	.word	0x20012bf4
 800e740:	20012bec 	.word	0x20012bec
 800e744:	20012c34 	.word	0x20012c34
 800e748:	20012bfc 	.word	0x20012bfc
 800e74c:	20012784 	.word	0x20012784
 800e750:	20012c28 	.word	0x20012c28
 800e754:	20012c30 	.word	0x20012c30
 800e758:	2001278c 	.word	0x2001278c
 800e75c:	20012780 	.word	0x20012780
 800e760:	20012c78 	.word	0x20012c78

0800e764 <xTaskCreateStatic>:
	{
 800e764:	b530      	push	{r4, r5, lr}
 800e766:	b087      	sub	sp, #28
 800e768:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e76a:	b1c4      	cbz	r4, 800e79e <xTaskCreateStatic+0x3a>
		configASSERT( pxTaskBuffer != NULL );
 800e76c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e76e:	b16d      	cbz	r5, 800e78c <xTaskCreateStatic+0x28>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e770:	25ac      	movs	r5, #172	; 0xac
 800e772:	9505      	str	r5, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e774:	9d05      	ldr	r5, [sp, #20]
 800e776:	2dac      	cmp	r5, #172	; 0xac
 800e778:	d01a      	beq.n	800e7b0 <xTaskCreateStatic+0x4c>
 800e77a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e77e:	f383 8811 	msr	BASEPRI, r3
 800e782:	f3bf 8f6f 	isb	sy
 800e786:	f3bf 8f4f 	dsb	sy
 800e78a:	e7fe      	b.n	800e78a <xTaskCreateStatic+0x26>
 800e78c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e790:	f383 8811 	msr	BASEPRI, r3
 800e794:	f3bf 8f6f 	isb	sy
 800e798:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e79c:	e7fe      	b.n	800e79c <xTaskCreateStatic+0x38>
 800e79e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a2:	f383 8811 	msr	BASEPRI, r3
 800e7a6:	f3bf 8f6f 	isb	sy
 800e7aa:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e7ae:	e7fe      	b.n	800e7ae <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e7b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e7b2:	632c      	str	r4, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e7b4:	2402      	movs	r4, #2
 800e7b6:	f885 40a9 	strb.w	r4, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7ba:	ac04      	add	r4, sp, #16
 800e7bc:	e9cd 4501 	strd	r4, r5, [sp, #4]
 800e7c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800e7c2:	9400      	str	r4, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e7c4:	9c05      	ldr	r4, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e7c6:	f7ff fda9 	bl	800e31c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e7ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 800e7cc:	f7ff fd1e 	bl	800e20c <prvAddNewTaskToReadyList>
	}
 800e7d0:	9804      	ldr	r0, [sp, #16]
 800e7d2:	b007      	add	sp, #28
 800e7d4:	bd30      	pop	{r4, r5, pc}
 800e7d6:	bf00      	nop

0800e7d8 <xTaskCreate>:
	{
 800e7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e7dc:	4607      	mov	r7, r0
 800e7de:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e7e0:	0090      	lsls	r0, r2, #2
	{
 800e7e2:	4615      	mov	r5, r2
 800e7e4:	4688      	mov	r8, r1
 800e7e6:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e7e8:	f7fe f9b2 	bl	800cb50 <pvPortMalloc>
			if( pxStack != NULL )
 800e7ec:	b1d8      	cbz	r0, 800e826 <xTaskCreate+0x4e>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e7ee:	4604      	mov	r4, r0
 800e7f0:	20ac      	movs	r0, #172	; 0xac
 800e7f2:	f7fe f9ad 	bl	800cb50 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e7f6:	4606      	mov	r6, r0
 800e7f8:	b1d0      	cbz	r0, 800e830 <xTaskCreate+0x58>
					pxNewTCB->pxStack = pxStack;
 800e7fa:	6304      	str	r4, [r0, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e7fc:	2400      	movs	r4, #0
 800e7fe:	f886 40a9 	strb.w	r4, [r6, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e802:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800e804:	9401      	str	r4, [sp, #4]
 800e806:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800e808:	9602      	str	r6, [sp, #8]
 800e80a:	464b      	mov	r3, r9
 800e80c:	462a      	mov	r2, r5
 800e80e:	4641      	mov	r1, r8
 800e810:	4638      	mov	r0, r7
 800e812:	9400      	str	r4, [sp, #0]
 800e814:	f7ff fd82 	bl	800e31c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e818:	4630      	mov	r0, r6
 800e81a:	f7ff fcf7 	bl	800e20c <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e81e:	2001      	movs	r0, #1
	}
 800e820:	b005      	add	sp, #20
 800e822:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e826:	f04f 30ff 	mov.w	r0, #4294967295
	}
 800e82a:	b005      	add	sp, #20
 800e82c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e830:	4620      	mov	r0, r4
 800e832:	f7fe fa49 	bl	800ccc8 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e836:	f04f 30ff 	mov.w	r0, #4294967295
 800e83a:	e7f1      	b.n	800e820 <xTaskCreate+0x48>

0800e83c <vTaskDelay>:
	{
 800e83c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e83e:	b950      	cbnz	r0, 800e856 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e840:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e844:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e848:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e84c:	f3bf 8f4f 	dsb	sy
 800e850:	f3bf 8f6f 	isb	sy
	}
 800e854:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e856:	4d1e      	ldr	r5, [pc, #120]	; (800e8d0 <vTaskDelay+0x94>)
 800e858:	682b      	ldr	r3, [r5, #0]
 800e85a:	b143      	cbz	r3, 800e86e <vTaskDelay+0x32>
 800e85c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e860:	f383 8811 	msr	BASEPRI, r3
 800e864:	f3bf 8f6f 	isb	sy
 800e868:	f3bf 8f4f 	dsb	sy
 800e86c:	e7fe      	b.n	800e86c <vTaskDelay+0x30>
	++uxSchedulerSuspended;
 800e86e:	682b      	ldr	r3, [r5, #0]
 800e870:	3301      	adds	r3, #1
 800e872:	4604      	mov	r4, r0
 800e874:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e876:	4b17      	ldr	r3, [pc, #92]	; (800e8d4 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e878:	4e17      	ldr	r6, [pc, #92]	; (800e8d8 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
 800e87a:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e87c:	6830      	ldr	r0, [r6, #0]
 800e87e:	3004      	adds	r0, #4
 800e880:	f7fe fabe 	bl	800ce00 <uxListRemove>
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e884:	6833      	ldr	r3, [r6, #0]
 800e886:	19e4      	adds	r4, r4, r7
 800e888:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
 800e88a:	d310      	bcc.n	800e8ae <vTaskDelay+0x72>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e88c:	4b13      	ldr	r3, [pc, #76]	; (800e8dc <vTaskDelay+0xa0>)
 800e88e:	6818      	ldr	r0, [r3, #0]
 800e890:	6831      	ldr	r1, [r6, #0]
 800e892:	3104      	adds	r1, #4
 800e894:	f7fe fa9c 	bl	800cdd0 <vListInsert>
	configASSERT( uxSchedulerSuspended );
 800e898:	682b      	ldr	r3, [r5, #0]
 800e89a:	b9a3      	cbnz	r3, 800e8c6 <vTaskDelay+0x8a>
 800e89c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e8a0:	f383 8811 	msr	BASEPRI, r3
 800e8a4:	f3bf 8f6f 	isb	sy
 800e8a8:	f3bf 8f4f 	dsb	sy
 800e8ac:	e7fe      	b.n	800e8ac <vTaskDelay+0x70>
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e8ae:	4b0c      	ldr	r3, [pc, #48]	; (800e8e0 <vTaskDelay+0xa4>)
 800e8b0:	6818      	ldr	r0, [r3, #0]
 800e8b2:	6831      	ldr	r1, [r6, #0]
 800e8b4:	3104      	adds	r1, #4
 800e8b6:	f7fe fa8b 	bl	800cdd0 <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
 800e8ba:	4b0a      	ldr	r3, [pc, #40]	; (800e8e4 <vTaskDelay+0xa8>)
 800e8bc:	681a      	ldr	r2, [r3, #0]
 800e8be:	4294      	cmp	r4, r2
				{
					xNextTaskUnblockTime = xTimeToWake;
 800e8c0:	bf38      	it	cc
 800e8c2:	601c      	strcc	r4, [r3, #0]
 800e8c4:	e7e8      	b.n	800e898 <vTaskDelay+0x5c>
 800e8c6:	f7ff feb3 	bl	800e630 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
 800e8ca:	2800      	cmp	r0, #0
 800e8cc:	d0b8      	beq.n	800e840 <vTaskDelay+0x4>
	}
 800e8ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e8d0:	20012bf4 	.word	0x20012bf4
 800e8d4:	20012c74 	.word	0x20012c74
 800e8d8:	20012780 	.word	0x20012780
 800e8dc:	20012788 	.word	0x20012788
 800e8e0:	20012784 	.word	0x20012784
 800e8e4:	20012c28 	.word	0x20012c28

0800e8e8 <vTaskStartScheduler>:
{
 800e8e8:	b530      	push	{r4, r5, lr}
 800e8ea:	b08b      	sub	sp, #44	; 0x2c
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8ec:	aa07      	add	r2, sp, #28
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e8ee:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8f0:	a906      	add	r1, sp, #24
 800e8f2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e8f4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8f8:	f7fe f90c 	bl	800cb14 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e8fc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e900:	9d05      	ldr	r5, [sp, #20]
		configASSERT( puxStackBuffer != NULL );
 800e902:	b1bb      	cbz	r3, 800e934 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
 800e904:	b16d      	cbz	r5, 800e922 <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e906:	21ac      	movs	r1, #172	; 0xac
 800e908:	9109      	str	r1, [sp, #36]	; 0x24
			configASSERT( xSize == sizeof( TCB_t ) );
 800e90a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800e90c:	29ac      	cmp	r1, #172	; 0xac
 800e90e:	d01a      	beq.n	800e946 <vTaskStartScheduler+0x5e>
 800e910:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e914:	f383 8811 	msr	BASEPRI, r3
 800e918:	f3bf 8f6f 	isb	sy
 800e91c:	f3bf 8f4f 	dsb	sy
 800e920:	e7fe      	b.n	800e920 <vTaskStartScheduler+0x38>
 800e922:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e926:	f383 8811 	msr	BASEPRI, r3
 800e92a:	f3bf 8f6f 	isb	sy
 800e92e:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
 800e932:	e7fe      	b.n	800e932 <vTaskStartScheduler+0x4a>
 800e934:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e938:	f383 8811 	msr	BASEPRI, r3
 800e93c:	f3bf 8f6f 	isb	sy
 800e940:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
 800e944:	e7fe      	b.n	800e944 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e946:	2102      	movs	r1, #2
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e948:	a808      	add	r0, sp, #32
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e94a:	632b      	str	r3, [r5, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e94c:	f885 10a9 	strb.w	r1, [r5, #169]	; 0xa9
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e950:	4623      	mov	r3, r4
 800e952:	e9cd 0501 	strd	r0, r5, [sp, #4]
 800e956:	491b      	ldr	r1, [pc, #108]	; (800e9c4 <vTaskStartScheduler+0xdc>)
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e958:	9809      	ldr	r0, [sp, #36]	; 0x24
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e95a:	9400      	str	r4, [sp, #0]
 800e95c:	481a      	ldr	r0, [pc, #104]	; (800e9c8 <vTaskStartScheduler+0xe0>)
 800e95e:	f7ff fcdd 	bl	800e31c <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e962:	4628      	mov	r0, r5
 800e964:	f7ff fc52 	bl	800e20c <prvAddNewTaskToReadyList>
		return xReturn;
 800e968:	9b08      	ldr	r3, [sp, #32]
		if( xIdleTaskHandle != NULL )
 800e96a:	b1eb      	cbz	r3, 800e9a8 <vTaskStartScheduler+0xc0>
			xReturn = xTimerCreateTimerTask();
 800e96c:	f000 fc6e 	bl	800f24c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e970:	2801      	cmp	r0, #1
 800e972:	d11b      	bne.n	800e9ac <vTaskStartScheduler+0xc4>
 800e974:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e978:	f383 8811 	msr	BASEPRI, r3
 800e97c:	f3bf 8f6f 	isb	sy
 800e980:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e984:	4b11      	ldr	r3, [pc, #68]	; (800e9cc <vTaskStartScheduler+0xe4>)
 800e986:	4a12      	ldr	r2, [pc, #72]	; (800e9d0 <vTaskStartScheduler+0xe8>)
 800e988:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800e98a:	4912      	ldr	r1, [pc, #72]	; (800e9d4 <vTaskStartScheduler+0xec>)
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800e98c:	3358      	adds	r3, #88	; 0x58
 800e98e:	6013      	str	r3, [r2, #0]
		xSchedulerRunning = pdTRUE;
 800e990:	4a11      	ldr	r2, [pc, #68]	; (800e9d8 <vTaskStartScheduler+0xf0>)
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e992:	4b12      	ldr	r3, [pc, #72]	; (800e9dc <vTaskStartScheduler+0xf4>)
		xNextTaskUnblockTime = portMAX_DELAY;
 800e994:	f04f 35ff 	mov.w	r5, #4294967295
 800e998:	600d      	str	r5, [r1, #0]
		xSchedulerRunning = pdTRUE;
 800e99a:	6010      	str	r0, [r2, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e99c:	601c      	str	r4, [r3, #0]
}
 800e99e:	b00b      	add	sp, #44	; 0x2c
 800e9a0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e9a4:	f7fe bb38 	b.w	800d018 <xPortStartScheduler>
}
 800e9a8:	b00b      	add	sp, #44	; 0x2c
 800e9aa:	bd30      	pop	{r4, r5, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e9ac:	3001      	adds	r0, #1
 800e9ae:	d1fb      	bne.n	800e9a8 <vTaskStartScheduler+0xc0>
 800e9b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9b4:	f383 8811 	msr	BASEPRI, r3
 800e9b8:	f3bf 8f6f 	isb	sy
 800e9bc:	f3bf 8f4f 	dsb	sy
 800e9c0:	e7fe      	b.n	800e9c0 <vTaskStartScheduler+0xd8>
 800e9c2:	bf00      	nop
 800e9c4:	0802d9bc 	.word	0x0802d9bc
 800e9c8:	0800e449 	.word	0x0800e449
 800e9cc:	20012780 	.word	0x20012780
 800e9d0:	20000160 	.word	0x20000160
 800e9d4:	20012c28 	.word	0x20012c28
 800e9d8:	20012c48 	.word	0x20012c48
 800e9dc:	20012c74 	.word	0x20012c74

0800e9e0 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e9e0:	4a02      	ldr	r2, [pc, #8]	; (800e9ec <vTaskSuspendAll+0xc>)
 800e9e2:	6813      	ldr	r3, [r2, #0]
 800e9e4:	3301      	adds	r3, #1
 800e9e6:	6013      	str	r3, [r2, #0]
}
 800e9e8:	4770      	bx	lr
 800e9ea:	bf00      	nop
 800e9ec:	20012bf4 	.word	0x20012bf4

0800e9f0 <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
 800e9f0:	4b06      	ldr	r3, [pc, #24]	; (800ea0c <xTaskResumeAll+0x1c>)
 800e9f2:	681b      	ldr	r3, [r3, #0]
 800e9f4:	b943      	cbnz	r3, 800ea08 <xTaskResumeAll+0x18>
 800e9f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9fa:	f383 8811 	msr	BASEPRI, r3
 800e9fe:	f3bf 8f6f 	isb	sy
 800ea02:	f3bf 8f4f 	dsb	sy
 800ea06:	e7fe      	b.n	800ea06 <xTaskResumeAll+0x16>
 800ea08:	f7ff be12 	b.w	800e630 <xTaskResumeAll.part.0>
 800ea0c:	20012bf4 	.word	0x20012bf4

0800ea10 <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ea10:	4b01      	ldr	r3, [pc, #4]	; (800ea18 <xTaskGetTickCount+0x8>)
 800ea12:	6818      	ldr	r0, [r3, #0]
}
 800ea14:	4770      	bx	lr
 800ea16:	bf00      	nop
 800ea18:	20012c74 	.word	0x20012c74

0800ea1c <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ea1c:	4b05      	ldr	r3, [pc, #20]	; (800ea34 <xTaskIncrementTick+0x18>)
 800ea1e:	681b      	ldr	r3, [r3, #0]
 800ea20:	b90b      	cbnz	r3, 800ea26 <xTaskIncrementTick+0xa>
 800ea22:	f7ff bd61 	b.w	800e4e8 <xTaskIncrementTick.part.0>
		++xPendedTicks;
 800ea26:	4a04      	ldr	r2, [pc, #16]	; (800ea38 <xTaskIncrementTick+0x1c>)
 800ea28:	6813      	ldr	r3, [r2, #0]
 800ea2a:	3301      	adds	r3, #1
}
 800ea2c:	2000      	movs	r0, #0
		++xPendedTicks;
 800ea2e:	6013      	str	r3, [r2, #0]
}
 800ea30:	4770      	bx	lr
 800ea32:	bf00      	nop
 800ea34:	20012bf4 	.word	0x20012bf4
 800ea38:	20012c30 	.word	0x20012c30

0800ea3c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800ea3c:	4b1f      	ldr	r3, [pc, #124]	; (800eabc <vTaskSwitchContext+0x80>)
 800ea3e:	681b      	ldr	r3, [r3, #0]
 800ea40:	b11b      	cbz	r3, 800ea4a <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
 800ea42:	4b1f      	ldr	r3, [pc, #124]	; (800eac0 <vTaskSwitchContext+0x84>)
 800ea44:	2201      	movs	r2, #1
 800ea46:	601a      	str	r2, [r3, #0]
 800ea48:	4770      	bx	lr
		xYieldPending = pdFALSE;
 800ea4a:	4a1d      	ldr	r2, [pc, #116]	; (800eac0 <vTaskSwitchContext+0x84>)
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea4c:	491d      	ldr	r1, [pc, #116]	; (800eac4 <vTaskSwitchContext+0x88>)
{
 800ea4e:	b410      	push	{r4}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea50:	4c1d      	ldr	r4, [pc, #116]	; (800eac8 <vTaskSwitchContext+0x8c>)
		xYieldPending = pdFALSE;
 800ea52:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea54:	6823      	ldr	r3, [r4, #0]
 800ea56:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ea5a:	0092      	lsls	r2, r2, #2
 800ea5c:	0098      	lsls	r0, r3, #2
 800ea5e:	588a      	ldr	r2, [r1, r2]
 800ea60:	b942      	cbnz	r2, 800ea74 <vTaskSwitchContext+0x38>
 800ea62:	b313      	cbz	r3, 800eaaa <vTaskSwitchContext+0x6e>
 800ea64:	3b01      	subs	r3, #1
 800ea66:	eb03 0283 	add.w	r2, r3, r3, lsl #2
 800ea6a:	0098      	lsls	r0, r3, #2
 800ea6c:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800ea70:	2a00      	cmp	r2, #0
 800ea72:	d0f6      	beq.n	800ea62 <vTaskSwitchContext+0x26>
 800ea74:	4418      	add	r0, r3
 800ea76:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
 800ea7a:	4662      	mov	r2, ip
 800ea7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800ea80:	6849      	ldr	r1, [r1, #4]
 800ea82:	f8cc 1004 	str.w	r1, [ip, #4]
 800ea86:	3208      	adds	r2, #8
 800ea88:	4291      	cmp	r1, r2
 800ea8a:	bf08      	it	eq
 800ea8c:	6849      	ldreq	r1, [r1, #4]
 800ea8e:	4a0f      	ldr	r2, [pc, #60]	; (800eacc <vTaskSwitchContext+0x90>)
 800ea90:	bf08      	it	eq
 800ea92:	f8cc 1004 	streq.w	r1, [ip, #4]
 800ea96:	68c9      	ldr	r1, [r1, #12]
 800ea98:	6011      	str	r1, [r2, #0]
 800ea9a:	6023      	str	r3, [r4, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800ea9c:	6813      	ldr	r3, [r2, #0]
 800ea9e:	4a0c      	ldr	r2, [pc, #48]	; (800ead0 <vTaskSwitchContext+0x94>)
}
 800eaa0:	f85d 4b04 	ldr.w	r4, [sp], #4
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800eaa4:	3358      	adds	r3, #88	; 0x58
 800eaa6:	6013      	str	r3, [r2, #0]
}
 800eaa8:	4770      	bx	lr
 800eaaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eaae:	f383 8811 	msr	BASEPRI, r3
 800eab2:	f3bf 8f6f 	isb	sy
 800eab6:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800eaba:	e7fe      	b.n	800eaba <vTaskSwitchContext+0x7e>
 800eabc:	20012bf4 	.word	0x20012bf4
 800eac0:	20012c78 	.word	0x20012c78
 800eac4:	2001278c 	.word	0x2001278c
 800eac8:	20012bfc 	.word	0x20012bfc
 800eacc:	20012780 	.word	0x20012780
 800ead0:	20000160 	.word	0x20000160

0800ead4 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
 800ead4:	b1d0      	cbz	r0, 800eb0c <vTaskPlaceOnEventList+0x38>
{
 800ead6:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ead8:	4d1a      	ldr	r5, [pc, #104]	; (800eb44 <vTaskPlaceOnEventList+0x70>)
 800eada:	460c      	mov	r4, r1
 800eadc:	6829      	ldr	r1, [r5, #0]
 800eade:	3118      	adds	r1, #24
 800eae0:	f7fe f976 	bl	800cdd0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eae4:	4b18      	ldr	r3, [pc, #96]	; (800eb48 <vTaskPlaceOnEventList+0x74>)
 800eae6:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eae8:	6828      	ldr	r0, [r5, #0]
 800eaea:	3004      	adds	r0, #4
 800eaec:	f7fe f988 	bl	800ce00 <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800eaf0:	1c63      	adds	r3, r4, #1
 800eaf2:	d014      	beq.n	800eb1e <vTaskPlaceOnEventList+0x4a>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eaf4:	682b      	ldr	r3, [r5, #0]
 800eaf6:	19a4      	adds	r4, r4, r6
 800eaf8:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eafa:	d317      	bcc.n	800eb2c <vTaskPlaceOnEventList+0x58>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eafc:	4b13      	ldr	r3, [pc, #76]	; (800eb4c <vTaskPlaceOnEventList+0x78>)
 800eafe:	6818      	ldr	r0, [r3, #0]
 800eb00:	6829      	ldr	r1, [r5, #0]
}
 800eb02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb06:	3104      	adds	r1, #4
 800eb08:	f7fe b962 	b.w	800cdd0 <vListInsert>
 800eb0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb10:	f383 8811 	msr	BASEPRI, r3
 800eb14:	f3bf 8f6f 	isb	sy
 800eb18:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
 800eb1c:	e7fe      	b.n	800eb1c <vTaskPlaceOnEventList+0x48>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb1e:	6829      	ldr	r1, [r5, #0]
 800eb20:	480b      	ldr	r0, [pc, #44]	; (800eb50 <vTaskPlaceOnEventList+0x7c>)
}
 800eb22:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb26:	3104      	adds	r1, #4
 800eb28:	f7fe b942 	b.w	800cdb0 <vListInsertEnd>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb2c:	4b09      	ldr	r3, [pc, #36]	; (800eb54 <vTaskPlaceOnEventList+0x80>)
 800eb2e:	6818      	ldr	r0, [r3, #0]
 800eb30:	6829      	ldr	r1, [r5, #0]
 800eb32:	3104      	adds	r1, #4
 800eb34:	f7fe f94c 	bl	800cdd0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800eb38:	4b07      	ldr	r3, [pc, #28]	; (800eb58 <vTaskPlaceOnEventList+0x84>)
 800eb3a:	681a      	ldr	r2, [r3, #0]
 800eb3c:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800eb3e:	bf38      	it	cc
 800eb40:	601c      	strcc	r4, [r3, #0]
}
 800eb42:	bd70      	pop	{r4, r5, r6, pc}
 800eb44:	20012780 	.word	0x20012780
 800eb48:	20012c74 	.word	0x20012c74
 800eb4c:	20012788 	.word	0x20012788
 800eb50:	20012c4c 	.word	0x20012c4c
 800eb54:	20012784 	.word	0x20012784
 800eb58:	20012c28 	.word	0x20012c28

0800eb5c <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
 800eb5c:	b330      	cbz	r0, 800ebac <vTaskPlaceOnEventListRestricted+0x50>
	{
 800eb5e:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800eb60:	4e1d      	ldr	r6, [pc, #116]	; (800ebd8 <vTaskPlaceOnEventListRestricted+0x7c>)
 800eb62:	460c      	mov	r4, r1
 800eb64:	6831      	ldr	r1, [r6, #0]
 800eb66:	4615      	mov	r5, r2
 800eb68:	3118      	adds	r1, #24
 800eb6a:	f7fe f921 	bl	800cdb0 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
 800eb6e:	4b1b      	ldr	r3, [pc, #108]	; (800ebdc <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
 800eb70:	b985      	cbnz	r5, 800eb94 <vTaskPlaceOnEventListRestricted+0x38>
const TickType_t xConstTickCount = xTickCount;
 800eb72:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb74:	6830      	ldr	r0, [r6, #0]
 800eb76:	3004      	adds	r0, #4
 800eb78:	f7fe f942 	bl	800ce00 <uxListRemove>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800eb7c:	6833      	ldr	r3, [r6, #0]
 800eb7e:	1964      	adds	r4, r4, r5
 800eb80:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800eb82:	d31c      	bcc.n	800ebbe <vTaskPlaceOnEventListRestricted+0x62>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb84:	4b16      	ldr	r3, [pc, #88]	; (800ebe0 <vTaskPlaceOnEventListRestricted+0x84>)
 800eb86:	6818      	ldr	r0, [r3, #0]
 800eb88:	6831      	ldr	r1, [r6, #0]
	}
 800eb8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb8e:	3104      	adds	r1, #4
 800eb90:	f7fe b91e 	b.w	800cdd0 <vListInsert>
const TickType_t xConstTickCount = xTickCount;
 800eb94:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eb96:	6830      	ldr	r0, [r6, #0]
 800eb98:	3004      	adds	r0, #4
 800eb9a:	f7fe f931 	bl	800ce00 <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eb9e:	6831      	ldr	r1, [r6, #0]
 800eba0:	4810      	ldr	r0, [pc, #64]	; (800ebe4 <vTaskPlaceOnEventListRestricted+0x88>)
	}
 800eba2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800eba6:	3104      	adds	r1, #4
 800eba8:	f7fe b902 	b.w	800cdb0 <vListInsertEnd>
 800ebac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebb0:	f383 8811 	msr	BASEPRI, r3
 800ebb4:	f3bf 8f6f 	isb	sy
 800ebb8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
 800ebbc:	e7fe      	b.n	800ebbc <vTaskPlaceOnEventListRestricted+0x60>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ebbe:	4b0a      	ldr	r3, [pc, #40]	; (800ebe8 <vTaskPlaceOnEventListRestricted+0x8c>)
 800ebc0:	6818      	ldr	r0, [r3, #0]
 800ebc2:	6831      	ldr	r1, [r6, #0]
 800ebc4:	3104      	adds	r1, #4
 800ebc6:	f7fe f903 	bl	800cdd0 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ebca:	4b08      	ldr	r3, [pc, #32]	; (800ebec <vTaskPlaceOnEventListRestricted+0x90>)
 800ebcc:	681a      	ldr	r2, [r3, #0]
 800ebce:	4294      	cmp	r4, r2
					xNextTaskUnblockTime = xTimeToWake;
 800ebd0:	bf38      	it	cc
 800ebd2:	601c      	strcc	r4, [r3, #0]
	}
 800ebd4:	bd70      	pop	{r4, r5, r6, pc}
 800ebd6:	bf00      	nop
 800ebd8:	20012780 	.word	0x20012780
 800ebdc:	20012c74 	.word	0x20012c74
 800ebe0:	20012788 	.word	0x20012788
 800ebe4:	20012c4c 	.word	0x20012c4c
 800ebe8:	20012784 	.word	0x20012784
 800ebec:	20012c28 	.word	0x20012c28

0800ebf0 <xTaskRemoveFromEventList>:
{
 800ebf0:	b530      	push	{r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ebf2:	68c3      	ldr	r3, [r0, #12]
 800ebf4:	68dc      	ldr	r4, [r3, #12]
{
 800ebf6:	b083      	sub	sp, #12
	configASSERT( pxUnblockedTCB );
 800ebf8:	2c00      	cmp	r4, #0
 800ebfa:	d02b      	beq.n	800ec54 <xTaskRemoveFromEventList+0x64>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ebfc:	f104 0518 	add.w	r5, r4, #24
 800ec00:	4628      	mov	r0, r5
 800ec02:	f7fe f8fd 	bl	800ce00 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ec06:	4b18      	ldr	r3, [pc, #96]	; (800ec68 <xTaskRemoveFromEventList+0x78>)
 800ec08:	681b      	ldr	r3, [r3, #0]
 800ec0a:	b17b      	cbz	r3, 800ec2c <xTaskRemoveFromEventList+0x3c>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800ec0c:	4817      	ldr	r0, [pc, #92]	; (800ec6c <xTaskRemoveFromEventList+0x7c>)
 800ec0e:	4629      	mov	r1, r5
 800ec10:	f7fe f8ce 	bl	800cdb0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ec14:	4b16      	ldr	r3, [pc, #88]	; (800ec70 <xTaskRemoveFromEventList+0x80>)
 800ec16:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ec18:	681b      	ldr	r3, [r3, #0]
 800ec1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec1c:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800ec1e:	bf85      	ittet	hi
 800ec20:	4b14      	ldrhi	r3, [pc, #80]	; (800ec74 <xTaskRemoveFromEventList+0x84>)
 800ec22:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800ec24:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800ec26:	6018      	strhi	r0, [r3, #0]
}
 800ec28:	b003      	add	sp, #12
 800ec2a:	bd30      	pop	{r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800ec2c:	1d21      	adds	r1, r4, #4
 800ec2e:	4608      	mov	r0, r1
 800ec30:	9101      	str	r1, [sp, #4]
 800ec32:	f7fe f8e5 	bl	800ce00 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800ec36:	4a10      	ldr	r2, [pc, #64]	; (800ec78 <xTaskRemoveFromEventList+0x88>)
 800ec38:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ec3a:	6810      	ldr	r0, [r2, #0]
 800ec3c:	9901      	ldr	r1, [sp, #4]
 800ec3e:	4283      	cmp	r3, r0
 800ec40:	480e      	ldr	r0, [pc, #56]	; (800ec7c <xTaskRemoveFromEventList+0x8c>)
 800ec42:	bf88      	it	hi
 800ec44:	6013      	strhi	r3, [r2, #0]
 800ec46:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ec4a:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ec4e:	f7fe f8af 	bl	800cdb0 <vListInsertEnd>
 800ec52:	e7df      	b.n	800ec14 <xTaskRemoveFromEventList+0x24>
 800ec54:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec58:	f383 8811 	msr	BASEPRI, r3
 800ec5c:	f3bf 8f6f 	isb	sy
 800ec60:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
 800ec64:	e7fe      	b.n	800ec64 <xTaskRemoveFromEventList+0x74>
 800ec66:	bf00      	nop
 800ec68:	20012bf4 	.word	0x20012bf4
 800ec6c:	20012c34 	.word	0x20012c34
 800ec70:	20012780 	.word	0x20012780
 800ec74:	20012c78 	.word	0x20012c78
 800ec78:	20012bfc 	.word	0x20012bfc
 800ec7c:	2001278c 	.word	0x2001278c

0800ec80 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ec80:	4a03      	ldr	r2, [pc, #12]	; (800ec90 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ec82:	4b04      	ldr	r3, [pc, #16]	; (800ec94 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ec84:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ec86:	681b      	ldr	r3, [r3, #0]
 800ec88:	e9c0 2300 	strd	r2, r3, [r0]
}
 800ec8c:	4770      	bx	lr
 800ec8e:	bf00      	nop
 800ec90:	20012c2c 	.word	0x20012c2c
 800ec94:	20012c74 	.word	0x20012c74

0800ec98 <xTaskCheckForTimeOut>:
	configASSERT( pxTimeOut );
 800ec98:	b328      	cbz	r0, 800ece6 <xTaskCheckForTimeOut+0x4e>
{
 800ec9a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec9c:	460d      	mov	r5, r1
 800ec9e:	b083      	sub	sp, #12
	configASSERT( pxTicksToWait );
 800eca0:	b1c1      	cbz	r1, 800ecd4 <xTaskCheckForTimeOut+0x3c>
 800eca2:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800eca4:	f7fe f926 	bl	800cef4 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
 800eca8:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
 800ecaa:	4a1d      	ldr	r2, [pc, #116]	; (800ed20 <xTaskCheckForTimeOut+0x88>)
			if( *pxTicksToWait == portMAX_DELAY )
 800ecac:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
 800ecae:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800ecb0:	d030      	beq.n	800ed14 <xTaskCheckForTimeOut+0x7c>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800ecb2:	f8df c070 	ldr.w	ip, [pc, #112]	; 800ed24 <xTaskCheckForTimeOut+0x8c>
 800ecb6:	e9d4 6000 	ldrd	r6, r0, [r4]
 800ecba:	f8dc 7000 	ldr.w	r7, [ip]
 800ecbe:	42be      	cmp	r6, r7
 800ecc0:	d01a      	beq.n	800ecf8 <xTaskCheckForTimeOut+0x60>
 800ecc2:	4288      	cmp	r0, r1
 800ecc4:	d818      	bhi.n	800ecf8 <xTaskCheckForTimeOut+0x60>
			xReturn = pdTRUE;
 800ecc6:	2001      	movs	r0, #1
 800ecc8:	9001      	str	r0, [sp, #4]
	taskEXIT_CRITICAL();
 800ecca:	f7fe f935 	bl	800cf38 <vPortExitCritical>
}
 800ecce:	9801      	ldr	r0, [sp, #4]
 800ecd0:	b003      	add	sp, #12
 800ecd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ecd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecd8:	f383 8811 	msr	BASEPRI, r3
 800ecdc:	f3bf 8f6f 	isb	sy
 800ece0:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
 800ece4:	e7fe      	b.n	800ece4 <xTaskCheckForTimeOut+0x4c>
 800ece6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecea:	f383 8811 	msr	BASEPRI, r3
 800ecee:	f3bf 8f6f 	isb	sy
 800ecf2:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
 800ecf6:	e7fe      	b.n	800ecf6 <xTaskCheckForTimeOut+0x5e>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800ecf8:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800ecfc:	4573      	cmp	r3, lr
 800ecfe:	d90b      	bls.n	800ed18 <xTaskCheckForTimeOut+0x80>
			*pxTicksToWait -= xElapsedTime;
 800ed00:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ed02:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ed06:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
 800ed08:	4403      	add	r3, r0
 800ed0a:	602b      	str	r3, [r5, #0]
			xReturn = pdFALSE;
 800ed0c:	2000      	movs	r0, #0
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ed0e:	e9c4 1200 	strd	r1, r2, [r4]
			xReturn = pdFALSE;
 800ed12:	e7d9      	b.n	800ecc8 <xTaskCheckForTimeOut+0x30>
				xReturn = pdFALSE;
 800ed14:	2000      	movs	r0, #0
 800ed16:	e7d7      	b.n	800ecc8 <xTaskCheckForTimeOut+0x30>
			*pxTicksToWait = 0;
 800ed18:	2300      	movs	r3, #0
 800ed1a:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
 800ed1c:	2001      	movs	r0, #1
 800ed1e:	e7d3      	b.n	800ecc8 <xTaskCheckForTimeOut+0x30>
 800ed20:	20012c74 	.word	0x20012c74
 800ed24:	20012c2c 	.word	0x20012c2c

0800ed28 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800ed28:	4b01      	ldr	r3, [pc, #4]	; (800ed30 <vTaskMissedYield+0x8>)
 800ed2a:	2201      	movs	r2, #1
 800ed2c:	601a      	str	r2, [r3, #0]
}
 800ed2e:	4770      	bx	lr
 800ed30:	20012c78 	.word	0x20012c78

0800ed34 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800ed34:	4b05      	ldr	r3, [pc, #20]	; (800ed4c <xTaskGetSchedulerState+0x18>)
 800ed36:	681b      	ldr	r3, [r3, #0]
 800ed38:	b133      	cbz	r3, 800ed48 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ed3a:	4b05      	ldr	r3, [pc, #20]	; (800ed50 <xTaskGetSchedulerState+0x1c>)
 800ed3c:	6818      	ldr	r0, [r3, #0]
 800ed3e:	fab0 f080 	clz	r0, r0
 800ed42:	0940      	lsrs	r0, r0, #5
 800ed44:	0040      	lsls	r0, r0, #1
 800ed46:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ed48:	2001      	movs	r0, #1
	}
 800ed4a:	4770      	bx	lr
 800ed4c:	20012c48 	.word	0x20012c48
 800ed50:	20012bf4 	.word	0x20012bf4

0800ed54 <xTaskPriorityInherit>:
	{
 800ed54:	b570      	push	{r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ed56:	4604      	mov	r4, r0
	{
 800ed58:	b082      	sub	sp, #8
		if( pxMutexHolder != NULL )
 800ed5a:	b1c8      	cbz	r0, 800ed90 <xTaskPriorityInherit+0x3c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ed5c:	4d1d      	ldr	r5, [pc, #116]	; (800edd4 <xTaskPriorityInherit+0x80>)
 800ed5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed60:	682a      	ldr	r2, [r5, #0]
 800ed62:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ed64:	4293      	cmp	r3, r2
 800ed66:	d215      	bcs.n	800ed94 <xTaskPriorityInherit+0x40>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed68:	6982      	ldr	r2, [r0, #24]
 800ed6a:	2a00      	cmp	r2, #0
 800ed6c:	db04      	blt.n	800ed78 <xTaskPriorityInherit+0x24>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed6e:	682a      	ldr	r2, [r5, #0]
 800ed70:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ed72:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800ed76:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ed78:	4e17      	ldr	r6, [pc, #92]	; (800edd8 <xTaskPriorityInherit+0x84>)
 800ed7a:	6962      	ldr	r2, [r4, #20]
 800ed7c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ed80:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ed84:	429a      	cmp	r2, r3
 800ed86:	d00e      	beq.n	800eda6 <xTaskPriorityInherit+0x52>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ed88:	682b      	ldr	r3, [r5, #0]
 800ed8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed8c:	62e3      	str	r3, [r4, #44]	; 0x2c
				xReturn = pdTRUE;
 800ed8e:	2001      	movs	r0, #1
	}
 800ed90:	b002      	add	sp, #8
 800ed92:	bd70      	pop	{r4, r5, r6, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ed94:	682b      	ldr	r3, [r5, #0]
 800ed96:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ed98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed9a:	4298      	cmp	r0, r3
 800ed9c:	bf2c      	ite	cs
 800ed9e:	2000      	movcs	r0, #0
 800eda0:	2001      	movcc	r0, #1
	}
 800eda2:	b002      	add	sp, #8
 800eda4:	bd70      	pop	{r4, r5, r6, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eda6:	1d21      	adds	r1, r4, #4
 800eda8:	4608      	mov	r0, r1
 800edaa:	9101      	str	r1, [sp, #4]
 800edac:	f7fe f828 	bl	800ce00 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800edb0:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800edb2:	4b0a      	ldr	r3, [pc, #40]	; (800eddc <xTaskPriorityInherit+0x88>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800edb4:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800edb6:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800edb8:	62e0      	str	r0, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800edba:	4290      	cmp	r0, r2
 800edbc:	bf88      	it	hi
 800edbe:	6018      	strhi	r0, [r3, #0]
 800edc0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800edc4:	eb06 0080 	add.w	r0, r6, r0, lsl #2
 800edc8:	9901      	ldr	r1, [sp, #4]
 800edca:	f7fd fff1 	bl	800cdb0 <vListInsertEnd>
				xReturn = pdTRUE;
 800edce:	2001      	movs	r0, #1
 800edd0:	e7de      	b.n	800ed90 <xTaskPriorityInherit+0x3c>
 800edd2:	bf00      	nop
 800edd4:	20012780 	.word	0x20012780
 800edd8:	2001278c 	.word	0x2001278c
 800eddc:	20012bfc 	.word	0x20012bfc

0800ede0 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
 800ede0:	b318      	cbz	r0, 800ee2a <xTaskPriorityDisinherit+0x4a>
	{
 800ede2:	b510      	push	{r4, lr}
			configASSERT( pxTCB == pxCurrentTCB );
 800ede4:	4b1e      	ldr	r3, [pc, #120]	; (800ee60 <xTaskPriorityDisinherit+0x80>)
 800ede6:	681c      	ldr	r4, [r3, #0]
 800ede8:	4284      	cmp	r4, r0
	{
 800edea:	b082      	sub	sp, #8
			configASSERT( pxTCB == pxCurrentTCB );
 800edec:	d008      	beq.n	800ee00 <xTaskPriorityDisinherit+0x20>
 800edee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800edf2:	f383 8811 	msr	BASEPRI, r3
 800edf6:	f3bf 8f6f 	isb	sy
 800edfa:	f3bf 8f4f 	dsb	sy
 800edfe:	e7fe      	b.n	800edfe <xTaskPriorityDisinherit+0x1e>
			configASSERT( pxTCB->uxMutexesHeld );
 800ee00:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ee02:	b14b      	cbz	r3, 800ee18 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ee04:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ee06:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ee08:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ee0a:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ee0c:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ee0e:	d000      	beq.n	800ee12 <xTaskPriorityDisinherit+0x32>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ee10:	b16b      	cbz	r3, 800ee2e <xTaskPriorityDisinherit+0x4e>
	BaseType_t xReturn = pdFALSE;
 800ee12:	2000      	movs	r0, #0
	}
 800ee14:	b002      	add	sp, #8
 800ee16:	bd10      	pop	{r4, pc}
 800ee18:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee1c:	f383 8811 	msr	BASEPRI, r3
 800ee20:	f3bf 8f6f 	isb	sy
 800ee24:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800ee28:	e7fe      	b.n	800ee28 <xTaskPriorityDisinherit+0x48>
	BaseType_t xReturn = pdFALSE;
 800ee2a:	2000      	movs	r0, #0
	}
 800ee2c:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ee2e:	1d21      	adds	r1, r4, #4
 800ee30:	4608      	mov	r0, r1
 800ee32:	9101      	str	r1, [sp, #4]
 800ee34:	f7fd ffe4 	bl	800ce00 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ee38:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ee3a:	4a0a      	ldr	r2, [pc, #40]	; (800ee64 <xTaskPriorityDisinherit+0x84>)
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ee3c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ee3e:	f1c3 0038 	rsb	r0, r3, #56	; 0x38
 800ee42:	61a0      	str	r0, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800ee44:	6810      	ldr	r0, [r2, #0]
 800ee46:	9901      	ldr	r1, [sp, #4]
 800ee48:	4283      	cmp	r3, r0
 800ee4a:	4807      	ldr	r0, [pc, #28]	; (800ee68 <xTaskPriorityDisinherit+0x88>)
 800ee4c:	bf88      	it	hi
 800ee4e:	6013      	strhi	r3, [r2, #0]
 800ee50:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 800ee54:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800ee58:	f7fd ffaa 	bl	800cdb0 <vListInsertEnd>
					xReturn = pdTRUE;
 800ee5c:	2001      	movs	r0, #1
		return xReturn;
 800ee5e:	e7d9      	b.n	800ee14 <xTaskPriorityDisinherit+0x34>
 800ee60:	20012780 	.word	0x20012780
 800ee64:	20012bfc 	.word	0x20012bfc
 800ee68:	2001278c 	.word	0x2001278c

0800ee6c <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
 800ee6c:	2800      	cmp	r0, #0
 800ee6e:	d041      	beq.n	800eef4 <vTaskPriorityDisinheritAfterTimeout+0x88>
	{
 800ee70:	b530      	push	{r4, r5, lr}
			configASSERT( pxTCB->uxMutexesHeld );
 800ee72:	6d03      	ldr	r3, [r0, #80]	; 0x50
	{
 800ee74:	b083      	sub	sp, #12
 800ee76:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
 800ee78:	b153      	cbz	r3, 800ee90 <vTaskPriorityDisinheritAfterTimeout+0x24>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ee7a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ee7c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ee7e:	4281      	cmp	r1, r0
 800ee80:	bf38      	it	cc
 800ee82:	4601      	movcc	r1, r0
 800ee84:	428a      	cmp	r2, r1
 800ee86:	d001      	beq.n	800ee8c <vTaskPriorityDisinheritAfterTimeout+0x20>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ee88:	2b01      	cmp	r3, #1
 800ee8a:	d00a      	beq.n	800eea2 <vTaskPriorityDisinheritAfterTimeout+0x36>
	}
 800ee8c:	b003      	add	sp, #12
 800ee8e:	bd30      	pop	{r4, r5, pc}
 800ee90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee94:	f383 8811 	msr	BASEPRI, r3
 800ee98:	f3bf 8f6f 	isb	sy
 800ee9c:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
 800eea0:	e7fe      	b.n	800eea0 <vTaskPriorityDisinheritAfterTimeout+0x34>
					configASSERT( pxTCB != pxCurrentTCB );
 800eea2:	4b19      	ldr	r3, [pc, #100]	; (800ef08 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
 800eea4:	681b      	ldr	r3, [r3, #0]
 800eea6:	42a3      	cmp	r3, r4
 800eea8:	d025      	beq.n	800eef6 <vTaskPriorityDisinheritAfterTimeout+0x8a>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800eeaa:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
 800eeac:	62e1      	str	r1, [r4, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800eeae:	2b00      	cmp	r3, #0
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eeb0:	bfa8      	it	ge
 800eeb2:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800eeb6:	4d15      	ldr	r5, [pc, #84]	; (800ef0c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eeb8:	bfa8      	it	ge
 800eeba:	61a1      	strge	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800eebc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 800eec0:	6961      	ldr	r1, [r4, #20]
 800eec2:	eb05 0382 	add.w	r3, r5, r2, lsl #2
 800eec6:	4299      	cmp	r1, r3
 800eec8:	d1e0      	bne.n	800ee8c <vTaskPriorityDisinheritAfterTimeout+0x20>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800eeca:	1d21      	adds	r1, r4, #4
 800eecc:	4608      	mov	r0, r1
 800eece:	9101      	str	r1, [sp, #4]
 800eed0:	f7fd ff96 	bl	800ce00 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800eed4:	4b0e      	ldr	r3, [pc, #56]	; (800ef10 <vTaskPriorityDisinheritAfterTimeout+0xa4>)
 800eed6:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800eed8:	681a      	ldr	r2, [r3, #0]
 800eeda:	9901      	ldr	r1, [sp, #4]
 800eedc:	4290      	cmp	r0, r2
 800eede:	bf88      	it	hi
 800eee0:	6018      	strhi	r0, [r3, #0]
 800eee2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 800eee6:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
 800eeea:	b003      	add	sp, #12
 800eeec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800eef0:	f7fd bf5e 	b.w	800cdb0 <vListInsertEnd>
 800eef4:	4770      	bx	lr
 800eef6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eefa:	f383 8811 	msr	BASEPRI, r3
 800eefe:	f3bf 8f6f 	isb	sy
 800ef02:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
 800ef06:	e7fe      	b.n	800ef06 <vTaskPriorityDisinheritAfterTimeout+0x9a>
 800ef08:	20012780 	.word	0x20012780
 800ef0c:	2001278c 	.word	0x2001278c
 800ef10:	20012bfc 	.word	0x20012bfc

0800ef14 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ef14:	4b04      	ldr	r3, [pc, #16]	; (800ef28 <pvTaskIncrementMutexHeldCount+0x14>)
 800ef16:	681a      	ldr	r2, [r3, #0]
 800ef18:	b11a      	cbz	r2, 800ef22 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ef1a:	6819      	ldr	r1, [r3, #0]
 800ef1c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ef1e:	3201      	adds	r2, #1
 800ef20:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ef22:	6818      	ldr	r0, [r3, #0]
	}
 800ef24:	4770      	bx	lr
 800ef26:	bf00      	nop
 800ef28:	20012780 	.word	0x20012780

0800ef2c <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
 800ef2c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ef30:	4e22      	ldr	r6, [pc, #136]	; (800efbc <prvSwitchTimerLists+0x90>)
	if( xTimerQueue != NULL )
 800ef32:	f8df 9090 	ldr.w	r9, [pc, #144]	; 800efc4 <prvSwitchTimerLists+0x98>
{
 800ef36:	b085      	sub	sp, #20
		xMessage.xMessageID = xCommandID;
 800ef38:	f04f 0800 	mov.w	r8, #0

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ef3c:	e00d      	b.n	800ef5a <prvSwitchTimerLists+0x2e>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef3e:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef40:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef42:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ef44:	1d25      	adds	r5, r4, #4
 800ef46:	4628      	mov	r0, r5
 800ef48:	f7fd ff5a 	bl	800ce00 <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ef4c:	6a23      	ldr	r3, [r4, #32]
 800ef4e:	4620      	mov	r0, r4
 800ef50:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ef52:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ef56:	075b      	lsls	r3, r3, #29
 800ef58:	d40a      	bmi.n	800ef70 <prvSwitchTimerLists+0x44>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ef5a:	6833      	ldr	r3, [r6, #0]
 800ef5c:	681a      	ldr	r2, [r3, #0]
 800ef5e:	2a00      	cmp	r2, #0
 800ef60:	d1ed      	bne.n	800ef3e <prvSwitchTimerLists+0x12>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
 800ef62:	4a17      	ldr	r2, [pc, #92]	; (800efc0 <prvSwitchTimerLists+0x94>)
 800ef64:	6811      	ldr	r1, [r2, #0]
 800ef66:	6031      	str	r1, [r6, #0]
	pxOverflowTimerList = pxTemp;
 800ef68:	6013      	str	r3, [r2, #0]
}
 800ef6a:	b005      	add	sp, #20
 800ef6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ef70:	69a3      	ldr	r3, [r4, #24]
 800ef72:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
 800ef74:	429f      	cmp	r7, r3
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef76:	4629      	mov	r1, r5
			if( xReloadTime > xNextExpireTime )
 800ef78:	d205      	bcs.n	800ef86 <prvSwitchTimerLists+0x5a>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef7a:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ef7c:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ef7e:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef80:	f7fd ff26 	bl	800cdd0 <vListInsert>
 800ef84:	e7e9      	b.n	800ef5a <prvSwitchTimerLists+0x2e>
	if( xTimerQueue != NULL )
 800ef86:	f8d9 3000 	ldr.w	r3, [r9]
 800ef8a:	b16b      	cbz	r3, 800efa8 <prvSwitchTimerLists+0x7c>
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ef8c:	e9cd 8700 	strd	r8, r7, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ef90:	9402      	str	r4, [sp, #8]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ef92:	f7ff fecf 	bl	800ed34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ef96:	2300      	movs	r3, #0
 800ef98:	f8d9 0000 	ldr.w	r0, [r9]
 800ef9c:	461a      	mov	r2, r3
 800ef9e:	4669      	mov	r1, sp
 800efa0:	f7fe fa9c 	bl	800d4dc <xQueueGenericSend>
				configASSERT( xResult );
 800efa4:	2800      	cmp	r0, #0
 800efa6:	d1d8      	bne.n	800ef5a <prvSwitchTimerLists+0x2e>
 800efa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800efac:	f383 8811 	msr	BASEPRI, r3
 800efb0:	f3bf 8f6f 	isb	sy
 800efb4:	f3bf 8f4f 	dsb	sy
 800efb8:	e7fe      	b.n	800efb8 <prvSwitchTimerLists+0x8c>
 800efba:	bf00      	nop
 800efbc:	20012c7c 	.word	0x20012c7c
 800efc0:	20012c80 	.word	0x20012c80
 800efc4:	20012da0 	.word	0x20012da0

0800efc8 <prvTimerTask>:
{
 800efc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efcc:	4e9b      	ldr	r6, [pc, #620]	; (800f23c <prvTimerTask+0x274>)
 800efce:	4d9c      	ldr	r5, [pc, #624]	; (800f240 <prvTimerTask+0x278>)
 800efd0:	4c9c      	ldr	r4, [pc, #624]	; (800f244 <prvTimerTask+0x27c>)
 800efd2:	b08b      	sub	sp, #44	; 0x2c
					portYIELD_WITHIN_API();
 800efd4:	f04f 29e0 	mov.w	r9, #3758153728	; 0xe000e000
 800efd8:	f04f 5880 	mov.w	r8, #268435456	; 0x10000000
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800efdc:	6833      	ldr	r3, [r6, #0]
 800efde:	681f      	ldr	r7, [r3, #0]
 800efe0:	2f00      	cmp	r7, #0
 800efe2:	f000 80a8 	beq.w	800f136 <prvTimerTask+0x16e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800efe6:	68db      	ldr	r3, [r3, #12]
 800efe8:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
 800efea:	f7ff fcf9 	bl	800e9e0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800efee:	f7ff fd0f 	bl	800ea10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800eff2:	682a      	ldr	r2, [r5, #0]
 800eff4:	4290      	cmp	r0, r2
	xTimeNow = xTaskGetTickCount();
 800eff6:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800eff8:	f0c0 80ae 	bcc.w	800f158 <prvTimerTask+0x190>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800effc:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
 800effe:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800f000:	f240 80b4 	bls.w	800f16c <prvTimerTask+0x1a4>
 800f004:	2200      	movs	r2, #0
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f006:	6820      	ldr	r0, [r4, #0]
 800f008:	eba7 010a 	sub.w	r1, r7, sl
 800f00c:	f7ff f89a 	bl	800e144 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f010:	f7ff fcee 	bl	800e9f0 <xTaskResumeAll>
 800f014:	b928      	cbnz	r0, 800f022 <prvTimerTask+0x5a>
					portYIELD_WITHIN_API();
 800f016:	f8c9 8d04 	str.w	r8, [r9, #3332]	; 0xd04
 800f01a:	f3bf 8f4f 	dsb	sy
 800f01e:	f3bf 8f6f 	isb	sy
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f022:	6820      	ldr	r0, [r4, #0]
 800f024:	2200      	movs	r2, #0
 800f026:	a902      	add	r1, sp, #8
 800f028:	f7fe fc94 	bl	800d954 <xQueueReceive>
 800f02c:	2800      	cmp	r0, #0
 800f02e:	d0d5      	beq.n	800efdc <prvTimerTask+0x14>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f030:	9b02      	ldr	r3, [sp, #8]
 800f032:	2b00      	cmp	r3, #0
 800f034:	db76      	blt.n	800f124 <prvTimerTask+0x15c>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f036:	9f04      	ldr	r7, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f038:	697b      	ldr	r3, [r7, #20]
 800f03a:	b113      	cbz	r3, 800f042 <prvTimerTask+0x7a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f03c:	1d38      	adds	r0, r7, #4
 800f03e:	f7fd fedf 	bl	800ce00 <uxListRemove>
	xTimeNow = xTaskGetTickCount();
 800f042:	f7ff fce5 	bl	800ea10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f046:	682b      	ldr	r3, [r5, #0]
 800f048:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 800f04a:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f04c:	f0c0 808b 	bcc.w	800f166 <prvTimerTask+0x19e>
			switch( xMessage.xMessageID )
 800f050:	9b02      	ldr	r3, [sp, #8]
	xLastTime = xTimeNow;
 800f052:	f8c5 a000 	str.w	sl, [r5]
			switch( xMessage.xMessageID )
 800f056:	2b09      	cmp	r3, #9
 800f058:	d8e3      	bhi.n	800f022 <prvTimerTask+0x5a>
 800f05a:	e8df f003 	tbb	[pc, r3]
 800f05e:	0505      	.short	0x0505
 800f060:	5a3d5305 	.word	0x5a3d5305
 800f064:	3d530505 	.word	0x3d530505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f068:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f06c:	69ba      	ldr	r2, [r7, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f06e:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f070:	f043 0301 	orr.w	r3, r3, #1
 800f074:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f078:	9b03      	ldr	r3, [sp, #12]
 800f07a:	1899      	adds	r1, r3, r2
 800f07c:	bf2c      	ite	cs
 800f07e:	2001      	movcs	r0, #1
 800f080:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
 800f082:	4551      	cmp	r1, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f084:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f086:	f200 808c 	bhi.w	800f1a2 <prvTimerTask+0x1da>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f08a:	ebaa 0303 	sub.w	r3, sl, r3
 800f08e:	429a      	cmp	r2, r3
 800f090:	d832      	bhi.n	800f0f8 <prvTimerTask+0x130>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f092:	6a3b      	ldr	r3, [r7, #32]
 800f094:	4638      	mov	r0, r7
 800f096:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f098:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f09c:	075b      	lsls	r3, r3, #29
 800f09e:	d5c0      	bpl.n	800f022 <prvTimerTask+0x5a>
	if( xTimerQueue != NULL )
 800f0a0:	6822      	ldr	r2, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f0a2:	9903      	ldr	r1, [sp, #12]
 800f0a4:	69bb      	ldr	r3, [r7, #24]
	if( xTimerQueue != NULL )
 800f0a6:	b172      	cbz	r2, 800f0c6 <prvTimerTask+0xfe>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f0a8:	440b      	add	r3, r1
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f0aa:	e9cd 3707 	strd	r3, r7, [sp, #28]
		xMessage.xMessageID = xCommandID;
 800f0ae:	2300      	movs	r3, #0
 800f0b0:	9306      	str	r3, [sp, #24]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f0b2:	f7ff fe3f 	bl	800ed34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f0b6:	2300      	movs	r3, #0
 800f0b8:	6820      	ldr	r0, [r4, #0]
 800f0ba:	461a      	mov	r2, r3
 800f0bc:	a906      	add	r1, sp, #24
 800f0be:	f7fe fa0d 	bl	800d4dc <xQueueGenericSend>
							configASSERT( xResult );
 800f0c2:	2800      	cmp	r0, #0
 800f0c4:	d1ad      	bne.n	800f022 <prvTimerTask+0x5a>
 800f0c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0ca:	f383 8811 	msr	BASEPRI, r3
 800f0ce:	f3bf 8f6f 	isb	sy
 800f0d2:	f3bf 8f4f 	dsb	sy
 800f0d6:	e7fe      	b.n	800f0d6 <prvTimerTask+0x10e>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f0d8:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f0dc:	f043 0301 	orr.w	r3, r3, #1
 800f0e0:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f0e4:	9b03      	ldr	r3, [sp, #12]
 800f0e6:	61bb      	str	r3, [r7, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f0e8:	2b00      	cmp	r3, #0
 800f0ea:	f000 809d 	beq.w	800f228 <prvTimerTask+0x260>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f0ee:	4453      	add	r3, sl
	if( xNextExpiryTime <= xTimeNow )
 800f0f0:	4553      	cmp	r3, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f0f2:	607b      	str	r3, [r7, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f0f4:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
 800f0f6:	d85e      	bhi.n	800f1b6 <prvTimerTask+0x1ee>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f0f8:	4b53      	ldr	r3, [pc, #332]	; (800f248 <prvTimerTask+0x280>)
 800f0fa:	1d39      	adds	r1, r7, #4
 800f0fc:	6818      	ldr	r0, [r3, #0]
 800f0fe:	f7fd fe67 	bl	800cdd0 <vListInsert>
	return xProcessTimerNow;
 800f102:	e78e      	b.n	800f022 <prvTimerTask+0x5a>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f104:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f108:	f023 0301 	bic.w	r3, r3, #1
 800f10c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
					break;
 800f110:	e787      	b.n	800f022 <prvTimerTask+0x5a>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f112:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800f116:	079a      	lsls	r2, r3, #30
 800f118:	d552      	bpl.n	800f1c0 <prvTimerTask+0x1f8>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f11a:	f023 0301 	bic.w	r3, r3, #1
 800f11e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
 800f122:	e77e      	b.n	800f022 <prvTimerTask+0x5a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f124:	9b03      	ldr	r3, [sp, #12]
 800f126:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800f12a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f12c:	9b02      	ldr	r3, [sp, #8]
 800f12e:	2b00      	cmp	r3, #0
 800f130:	f6ff af77 	blt.w	800f022 <prvTimerTask+0x5a>
 800f134:	e77f      	b.n	800f036 <prvTimerTask+0x6e>
	vTaskSuspendAll();
 800f136:	f7ff fc53 	bl	800e9e0 <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 800f13a:	f7ff fc69 	bl	800ea10 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800f13e:	682a      	ldr	r2, [r5, #0]
 800f140:	4282      	cmp	r2, r0
	xTimeNow = xTaskGetTickCount();
 800f142:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
 800f144:	d808      	bhi.n	800f158 <prvTimerTask+0x190>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f146:	4b40      	ldr	r3, [pc, #256]	; (800f248 <prvTimerTask+0x280>)
	xLastTime = xTimeNow;
 800f148:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f14c:	681a      	ldr	r2, [r3, #0]
 800f14e:	6812      	ldr	r2, [r2, #0]
 800f150:	fab2 f282 	clz	r2, r2
 800f154:	0952      	lsrs	r2, r2, #5
 800f156:	e756      	b.n	800f006 <prvTimerTask+0x3e>
		prvSwitchTimerLists();
 800f158:	f7ff fee8 	bl	800ef2c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800f15c:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
 800f160:	f7ff fc46 	bl	800e9f0 <xTaskResumeAll>
 800f164:	e75d      	b.n	800f022 <prvTimerTask+0x5a>
		prvSwitchTimerLists();
 800f166:	f7ff fee1 	bl	800ef2c <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
 800f16a:	e771      	b.n	800f050 <prvTimerTask+0x88>
				( void ) xTaskResumeAll();
 800f16c:	f7ff fc40 	bl	800e9f0 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800f170:	6832      	ldr	r2, [r6, #0]
 800f172:	68d2      	ldr	r2, [r2, #12]
 800f174:	f8d2 b00c 	ldr.w	fp, [r2, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f178:	f10b 0104 	add.w	r1, fp, #4
 800f17c:	4608      	mov	r0, r1
 800f17e:	9101      	str	r1, [sp, #4]
 800f180:	f7fd fe3e 	bl	800ce00 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f184:	f89b 0028 	ldrb.w	r0, [fp, #40]	; 0x28
 800f188:	9901      	ldr	r1, [sp, #4]
 800f18a:	f010 0f04 	tst.w	r0, #4
 800f18e:	d11b      	bne.n	800f1c8 <prvTimerTask+0x200>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f190:	f020 0001 	bic.w	r0, r0, #1
 800f194:	f88b 0028 	strb.w	r0, [fp, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f198:	f8db 3020 	ldr.w	r3, [fp, #32]
 800f19c:	4658      	mov	r0, fp
 800f19e:	4798      	blx	r3
}
 800f1a0:	e73f      	b.n	800f022 <prvTimerTask+0x5a>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800f1a2:	4553      	cmp	r3, sl
 800f1a4:	d902      	bls.n	800f1ac <prvTimerTask+0x1e4>
 800f1a6:	2800      	cmp	r0, #0
 800f1a8:	f43f af73 	beq.w	800f092 <prvTimerTask+0xca>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1ac:	6830      	ldr	r0, [r6, #0]
 800f1ae:	1d39      	adds	r1, r7, #4
 800f1b0:	f7fd fe0e 	bl	800cdd0 <vListInsert>
	return xProcessTimerNow;
 800f1b4:	e735      	b.n	800f022 <prvTimerTask+0x5a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1b6:	6830      	ldr	r0, [r6, #0]
 800f1b8:	1d39      	adds	r1, r7, #4
 800f1ba:	f7fd fe09 	bl	800cdd0 <vListInsert>
 800f1be:	e730      	b.n	800f022 <prvTimerTask+0x5a>
							vPortFree( pxTimer );
 800f1c0:	4638      	mov	r0, r7
 800f1c2:	f7fd fd81 	bl	800ccc8 <vPortFree>
 800f1c6:	e72c      	b.n	800f022 <prvTimerTask+0x5a>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f1c8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800f1cc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800f1d0:	18b8      	adds	r0, r7, r2
	if( xNextExpiryTime <= xTimeNow )
 800f1d2:	4550      	cmp	r0, sl
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800f1d4:	f8cb 0004 	str.w	r0, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
 800f1d8:	d903      	bls.n	800f1e2 <prvTimerTask+0x21a>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800f1da:	6830      	ldr	r0, [r6, #0]
 800f1dc:	f7fd fdf8 	bl	800cdd0 <vListInsert>
	return xProcessTimerNow;
 800f1e0:	e7da      	b.n	800f198 <prvTimerTask+0x1d0>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800f1e2:	ebaa 0307 	sub.w	r3, sl, r7
 800f1e6:	429a      	cmp	r2, r3
 800f1e8:	d819      	bhi.n	800f21e <prvTimerTask+0x256>
	if( xTimerQueue != NULL )
 800f1ea:	6823      	ldr	r3, [r4, #0]
 800f1ec:	b173      	cbz	r3, 800f20c <prvTimerTask+0x244>
		xMessage.xMessageID = xCommandID;
 800f1ee:	2300      	movs	r3, #0
 800f1f0:	9306      	str	r3, [sp, #24]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800f1f2:	9707      	str	r7, [sp, #28]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800f1f4:	f8cd b020 	str.w	fp, [sp, #32]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800f1f8:	f7ff fd9c 	bl	800ed34 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800f1fc:	2300      	movs	r3, #0
 800f1fe:	6820      	ldr	r0, [r4, #0]
 800f200:	461a      	mov	r2, r3
 800f202:	a906      	add	r1, sp, #24
 800f204:	f7fe f96a 	bl	800d4dc <xQueueGenericSend>
			configASSERT( xResult );
 800f208:	2800      	cmp	r0, #0
 800f20a:	d1c5      	bne.n	800f198 <prvTimerTask+0x1d0>
 800f20c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f210:	f383 8811 	msr	BASEPRI, r3
 800f214:	f3bf 8f6f 	isb	sy
 800f218:	f3bf 8f4f 	dsb	sy
 800f21c:	e7fe      	b.n	800f21c <prvTimerTask+0x254>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800f21e:	4b0a      	ldr	r3, [pc, #40]	; (800f248 <prvTimerTask+0x280>)
 800f220:	6818      	ldr	r0, [r3, #0]
 800f222:	f7fd fdd5 	bl	800cdd0 <vListInsert>
	return xProcessTimerNow;
 800f226:	e7b7      	b.n	800f198 <prvTimerTask+0x1d0>
 800f228:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f22c:	f383 8811 	msr	BASEPRI, r3
 800f230:	f3bf 8f6f 	isb	sy
 800f234:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f238:	e7fe      	b.n	800f238 <prvTimerTask+0x270>
 800f23a:	bf00      	nop
 800f23c:	20012c7c 	.word	0x20012c7c
 800f240:	20012d4c 	.word	0x20012d4c
 800f244:	20012da0 	.word	0x20012da0
 800f248:	20012c80 	.word	0x20012c80

0800f24c <xTimerCreateTimerTask>:
{
 800f24c:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800f24e:	4c23      	ldr	r4, [pc, #140]	; (800f2dc <xTimerCreateTimerTask+0x90>)
{
 800f250:	b089      	sub	sp, #36	; 0x24
	taskENTER_CRITICAL();
 800f252:	f7fd fe4f 	bl	800cef4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800f256:	6825      	ldr	r5, [r4, #0]
 800f258:	b335      	cbz	r5, 800f2a8 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800f25a:	f7fd fe6d 	bl	800cf38 <vPortExitCritical>
	if( xTimerQueue != NULL )
 800f25e:	6823      	ldr	r3, [r4, #0]
 800f260:	b1cb      	cbz	r3, 800f296 <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800f262:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f264:	aa07      	add	r2, sp, #28
 800f266:	a906      	add	r1, sp, #24
 800f268:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800f26a:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800f26e:	f7fd fc5f 	bl	800cb30 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800f272:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
 800f276:	2302      	movs	r3, #2
 800f278:	e9cd 1001 	strd	r1, r0, [sp, #4]
 800f27c:	9300      	str	r3, [sp, #0]
 800f27e:	9a07      	ldr	r2, [sp, #28]
 800f280:	4917      	ldr	r1, [pc, #92]	; (800f2e0 <xTimerCreateTimerTask+0x94>)
 800f282:	4818      	ldr	r0, [pc, #96]	; (800f2e4 <xTimerCreateTimerTask+0x98>)
 800f284:	4623      	mov	r3, r4
 800f286:	f7ff fa6d 	bl	800e764 <xTaskCreateStatic>
 800f28a:	4b17      	ldr	r3, [pc, #92]	; (800f2e8 <xTimerCreateTimerTask+0x9c>)
 800f28c:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800f28e:	b110      	cbz	r0, 800f296 <xTimerCreateTimerTask+0x4a>
}
 800f290:	2001      	movs	r0, #1
 800f292:	b009      	add	sp, #36	; 0x24
 800f294:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f296:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f29a:	f383 8811 	msr	BASEPRI, r3
 800f29e:	f3bf 8f6f 	isb	sy
 800f2a2:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800f2a6:	e7fe      	b.n	800f2a6 <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
 800f2a8:	4f10      	ldr	r7, [pc, #64]	; (800f2ec <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
 800f2aa:	4e11      	ldr	r6, [pc, #68]	; (800f2f0 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
 800f2ac:	4638      	mov	r0, r7
 800f2ae:	f7fd fd6f 	bl	800cd90 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800f2b2:	4630      	mov	r0, r6
 800f2b4:	f7fd fd6c 	bl	800cd90 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800f2b8:	4a0e      	ldr	r2, [pc, #56]	; (800f2f4 <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f2ba:	9500      	str	r5, [sp, #0]
			pxCurrentTimerList = &xActiveTimerList1;
 800f2bc:	6017      	str	r7, [r2, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800f2be:	4a0e      	ldr	r2, [pc, #56]	; (800f2f8 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f2c0:	4b0e      	ldr	r3, [pc, #56]	; (800f2fc <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
 800f2c2:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800f2c4:	2110      	movs	r1, #16
 800f2c6:	4a0e      	ldr	r2, [pc, #56]	; (800f300 <xTimerCreateTimerTask+0xb4>)
 800f2c8:	200a      	movs	r0, #10
 800f2ca:	f7fd ffb1 	bl	800d230 <xQueueGenericCreateStatic>
 800f2ce:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
 800f2d0:	2800      	cmp	r0, #0
 800f2d2:	d0c2      	beq.n	800f25a <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800f2d4:	490b      	ldr	r1, [pc, #44]	; (800f304 <xTimerCreateTimerTask+0xb8>)
 800f2d6:	f7fe ff0d 	bl	800e0f4 <vQueueAddToRegistry>
 800f2da:	e7be      	b.n	800f25a <xTimerCreateTimerTask+0xe>
 800f2dc:	20012da0 	.word	0x20012da0
 800f2e0:	0802d9cc 	.word	0x0802d9cc
 800f2e4:	0800efc9 	.word	0x0800efc9
 800f2e8:	20012da4 	.word	0x20012da4
 800f2ec:	20012d24 	.word	0x20012d24
 800f2f0:	20012d38 	.word	0x20012d38
 800f2f4:	20012c7c 	.word	0x20012c7c
 800f2f8:	20012c80 	.word	0x20012c80
 800f2fc:	20012d50 	.word	0x20012d50
 800f300:	20012c84 	.word	0x20012c84
 800f304:	0802d9c4 	.word	0x0802d9c4

0800f308 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f308:	8880      	ldrh	r0, [r0, #4]
 800f30a:	4770      	bx	lr

0800f30c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f30c:	b570      	push	{r4, r5, r6, lr}
 800f30e:	6803      	ldr	r3, [r0, #0]
 800f310:	4605      	mov	r5, r0
 800f312:	460c      	mov	r4, r1
 800f314:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f316:	2100      	movs	r1, #0
 800f318:	4798      	blx	r3
 800f31a:	682b      	ldr	r3, [r5, #0]
 800f31c:	4606      	mov	r6, r0
 800f31e:	6a1b      	ldr	r3, [r3, #32]
 800f320:	4628      	mov	r0, r5
 800f322:	4798      	blx	r3
 800f324:	1ba4      	subs	r4, r4, r6
 800f326:	b2a4      	uxth	r4, r4
 800f328:	fbb4 f0f0 	udiv	r0, r4, r0
 800f32c:	bd70      	pop	{r4, r5, r6, pc}

0800f32e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f32e:	2300      	movs	r3, #0
 800f330:	8083      	strh	r3, [r0, #4]
 800f332:	4770      	bx	lr

0800f334 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f334:	b510      	push	{r4, lr}
 800f336:	6803      	ldr	r3, [r0, #0]
 800f338:	8881      	ldrh	r1, [r0, #4]
 800f33a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f33c:	4604      	mov	r4, r0
 800f33e:	4798      	blx	r3
 800f340:	88a3      	ldrh	r3, [r4, #4]
 800f342:	3301      	adds	r3, #1
 800f344:	80a3      	strh	r3, [r4, #4]
 800f346:	bd10      	pop	{r4, pc}

0800f348 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f348:	6803      	ldr	r3, [r0, #0]
 800f34a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f34c:	4718      	bx	r3

0800f34e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f34e:	4770      	bx	lr

0800f350 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f350:	4a02      	ldr	r2, [pc, #8]	; (800f35c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f352:	6002      	str	r2, [r0, #0]
 800f354:	2200      	movs	r2, #0
 800f356:	8082      	strh	r2, [r0, #4]
 800f358:	4770      	bx	lr
 800f35a:	bf00      	nop
 800f35c:	0802d9dc 	.word	0x0802d9dc

0800f360 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f360:	b510      	push	{r4, lr}
 800f362:	6803      	ldr	r3, [r0, #0]
 800f364:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f368:	4604      	mov	r4, r0
 800f36a:	4798      	blx	r3
 800f36c:	b110      	cbz	r0, 800f374 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f36e:	4620      	mov	r0, r4
 800f370:	f7f1 fe54 	bl	800101c <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f374:	bd10      	pop	{r4, pc}

0800f376 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f376:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f37a:	4770      	bx	lr

0800f37c <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f37c:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f380:	4770      	bx	lr

0800f382 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f382:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f386:	4770      	bx	lr

0800f388 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f388:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f38c:	4770      	bx	lr

0800f38e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f38e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f390:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f394:	461e      	mov	r6, r3
 800f396:	6803      	ldr	r3, [r0, #0]
 800f398:	460f      	mov	r7, r1
 800f39a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f39e:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f3a2:	4604      	mov	r4, r0
 800f3a4:	4615      	mov	r5, r2
 800f3a6:	4798      	blx	r3
 800f3a8:	b93e      	cbnz	r6, 800f3ba <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f3aa:	1bed      	subs	r5, r5, r7
 800f3ac:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f3b0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f3b4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f3b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f3ba:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f3be:	e7f7      	b.n	800f3b0 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f3c0 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f3c0:	b510      	push	{r4, lr}
 800f3c2:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f3c6:	600c      	str	r4, [r1, #0]
 800f3c8:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f3cc:	6011      	str	r1, [r2, #0]
 800f3ce:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f3d2:	801a      	strh	r2, [r3, #0]
 800f3d4:	9b02      	ldr	r3, [sp, #8]
 800f3d6:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f3da:	801a      	strh	r2, [r3, #0]
 800f3dc:	bd10      	pop	{r4, pc}

0800f3de <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f3de:	b510      	push	{r4, lr}
 800f3e0:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f3e4:	600c      	str	r4, [r1, #0]
 800f3e6:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f3ea:	6011      	str	r1, [r2, #0]
 800f3ec:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f3f0:	801a      	strh	r2, [r3, #0]
 800f3f2:	bd10      	pop	{r4, pc}

0800f3f4 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f3f4:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f3f8:	600b      	str	r3, [r1, #0]
 800f3fa:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f3fe:	6013      	str	r3, [r2, #0]
 800f400:	4770      	bx	lr

0800f402 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f402:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f406:	4770      	bx	lr

0800f408 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f408:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f40c:	4770      	bx	lr

0800f40e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f40e:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f412:	4770      	bx	lr

0800f414 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f414:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f418:	4770      	bx	lr

0800f41a <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f41a:	4770      	bx	lr

0800f41c <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f41c:	b510      	push	{r4, lr}
 800f41e:	21b4      	movs	r1, #180	; 0xb4
 800f420:	4604      	mov	r4, r0
 800f422:	f019 fc84 	bl	8028d2e <_ZdlPvj>
 800f426:	4620      	mov	r0, r4
 800f428:	bd10      	pop	{r4, pc}

0800f42a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f42a:	b570      	push	{r4, r5, r6, lr}
 800f42c:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f430:	428d      	cmp	r5, r1
 800f432:	bfb8      	it	lt
 800f434:	460d      	movlt	r5, r1
 800f436:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f43a:	428d      	cmp	r5, r1
 800f43c:	4604      	mov	r4, r0
 800f43e:	bfa8      	it	ge
 800f440:	460d      	movge	r5, r1
 800f442:	4616      	mov	r6, r2
 800f444:	b99a      	cbnz	r2, 800f46e <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f446:	6803      	ldr	r3, [r0, #0]
 800f448:	4629      	mov	r1, r5
 800f44a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f44e:	4798      	blx	r3
 800f450:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f454:	b368      	cbz	r0, 800f4b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f456:	6803      	ldr	r3, [r0, #0]
 800f458:	68db      	ldr	r3, [r3, #12]
 800f45a:	4798      	blx	r3
 800f45c:	b348      	cbz	r0, 800f4b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f45e:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f462:	6803      	ldr	r3, [r0, #0]
 800f464:	4621      	mov	r1, r4
 800f466:	689b      	ldr	r3, [r3, #8]
 800f468:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f46c:	4718      	bx	r3
 800f46e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f472:	2b00      	cmp	r3, #0
 800f474:	dd08      	ble.n	800f488 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f476:	f005 fbe3 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800f47a:	4621      	mov	r1, r4
 800f47c:	3004      	adds	r0, #4
 800f47e:	f005 fc2c 	bl	8014cda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f482:	2300      	movs	r3, #0
 800f484:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f488:	6823      	ldr	r3, [r4, #0]
 800f48a:	4620      	mov	r0, r4
 800f48c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f490:	4798      	blx	r3
 800f492:	2300      	movs	r3, #0
 800f494:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f498:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f49c:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f4a0:	f005 fbce 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800f4a4:	4621      	mov	r1, r4
 800f4a6:	3004      	adds	r0, #4
 800f4a8:	f005 fcc0 	bl	8014e2c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f4ac:	2301      	movs	r3, #1
 800f4ae:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f4b2:	bd70      	pop	{r4, r5, r6, pc}

0800f4b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f4b4:	b510      	push	{r4, lr}
 800f4b6:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f4ba:	4299      	cmp	r1, r3
 800f4bc:	bfb8      	it	lt
 800f4be:	4619      	movlt	r1, r3
 800f4c0:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f4c4:	4299      	cmp	r1, r3
 800f4c6:	bfa8      	it	ge
 800f4c8:	4619      	movge	r1, r3
 800f4ca:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f4ce:	428b      	cmp	r3, r1
 800f4d0:	4604      	mov	r4, r0
 800f4d2:	d010      	beq.n	800f4f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f4d4:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f4d8:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f4dc:	b158      	cbz	r0, 800f4f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f4de:	6803      	ldr	r3, [r0, #0]
 800f4e0:	68db      	ldr	r3, [r3, #12]
 800f4e2:	4798      	blx	r3
 800f4e4:	b138      	cbz	r0, 800f4f6 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f4e6:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f4ea:	6803      	ldr	r3, [r0, #0]
 800f4ec:	4621      	mov	r1, r4
 800f4ee:	689b      	ldr	r3, [r3, #8]
 800f4f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f4f4:	4718      	bx	r3
 800f4f6:	bd10      	pop	{r4, pc}

0800f4f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f4f8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4fa:	4604      	mov	r4, r0
 800f4fc:	460d      	mov	r5, r1
 800f4fe:	b1a9      	cbz	r1, 800f52c <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f500:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f504:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f508:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f50c:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f510:	ab01      	add	r3, sp, #4
 800f512:	1a12      	subs	r2, r2, r0
 800f514:	1b89      	subs	r1, r1, r6
 800f516:	1a38      	subs	r0, r7, r0
 800f518:	f006 fe48 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 800f51c:	4629      	mov	r1, r5
 800f51e:	ab01      	add	r3, sp, #4
 800f520:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f524:	4430      	add	r0, r6
 800f526:	f006 fe41 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 800f52a:	b285      	uxth	r5, r0
 800f52c:	4628      	mov	r0, r5
 800f52e:	b003      	add	sp, #12
 800f530:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f532 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f532:	b570      	push	{r4, r5, r6, lr}
 800f534:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f538:	4604      	mov	r4, r0
 800f53a:	2b00      	cmp	r3, #0
 800f53c:	d035      	beq.n	800f5aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f53e:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f542:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f546:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f54a:	3001      	adds	r0, #1
 800f54c:	1ad2      	subs	r2, r2, r3
 800f54e:	b212      	sxth	r2, r2
 800f550:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f554:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f558:	2100      	movs	r1, #0
 800f55a:	b280      	uxth	r0, r0
 800f55c:	47a8      	blx	r5
 800f55e:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f562:	6823      	ldr	r3, [r4, #0]
 800f564:	4401      	add	r1, r0
 800f566:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f56a:	4620      	mov	r0, r4
 800f56c:	4798      	blx	r3
 800f56e:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f572:	429a      	cmp	r2, r3
 800f574:	db19      	blt.n	800f5aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f576:	2500      	movs	r5, #0
 800f578:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f57c:	f005 fb60 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800f580:	4621      	mov	r1, r4
 800f582:	3004      	adds	r0, #4
 800f584:	f005 fba9 	bl	8014cda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f588:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f58c:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f590:	b158      	cbz	r0, 800f5aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f592:	6803      	ldr	r3, [r0, #0]
 800f594:	68db      	ldr	r3, [r3, #12]
 800f596:	4798      	blx	r3
 800f598:	b138      	cbz	r0, 800f5aa <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f59a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f59e:	6803      	ldr	r3, [r0, #0]
 800f5a0:	4621      	mov	r1, r4
 800f5a2:	689b      	ldr	r3, [r3, #8]
 800f5a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5a8:	4718      	bx	r3
 800f5aa:	bd70      	pop	{r4, r5, r6, pc}

0800f5ac <_ZN8touchgfx8DrawableC1Ev>:
 800f5ac:	4a0a      	ldr	r2, [pc, #40]	; (800f5d8 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800f5ae:	6002      	str	r2, [r0, #0]
 800f5b0:	2200      	movs	r2, #0
 800f5b2:	8082      	strh	r2, [r0, #4]
 800f5b4:	80c2      	strh	r2, [r0, #6]
 800f5b6:	8102      	strh	r2, [r0, #8]
 800f5b8:	8142      	strh	r2, [r0, #10]
 800f5ba:	8182      	strh	r2, [r0, #12]
 800f5bc:	81c2      	strh	r2, [r0, #14]
 800f5be:	8202      	strh	r2, [r0, #16]
 800f5c0:	8242      	strh	r2, [r0, #18]
 800f5c2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f5c6:	61c2      	str	r2, [r0, #28]
 800f5c8:	8402      	strh	r2, [r0, #32]
 800f5ca:	8442      	strh	r2, [r0, #34]	; 0x22
 800f5cc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800f5d0:	2201      	movs	r2, #1
 800f5d2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800f5d6:	4770      	bx	lr
 800f5d8:	0802e17c 	.word	0x0802e17c

0800f5dc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800f5dc:	b570      	push	{r4, r5, r6, lr}
 800f5de:	6803      	ldr	r3, [r0, #0]
 800f5e0:	4604      	mov	r4, r0
 800f5e2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f5e4:	4615      	mov	r5, r2
 800f5e6:	4798      	blx	r3
 800f5e8:	6823      	ldr	r3, [r4, #0]
 800f5ea:	4629      	mov	r1, r5
 800f5ec:	4620      	mov	r0, r4
 800f5ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f5f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f5f4:	4718      	bx	r3

0800f5f6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f5f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5fa:	4604      	mov	r4, r0
 800f5fc:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f600:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f604:	460e      	mov	r6, r1
 800f606:	4615      	mov	r5, r2
 800f608:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f60c:	4619      	mov	r1, r3
 800f60e:	463a      	mov	r2, r7
 800f610:	3058      	adds	r0, #88	; 0x58
 800f612:	4698      	mov	r8, r3
 800f614:	f7ff ffe2 	bl	800f5dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f618:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f61c:	4446      	add	r6, r8
 800f61e:	42b3      	cmp	r3, r6
 800f620:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f624:	bfb8      	it	lt
 800f626:	8126      	strhlt	r6, [r4, #8]
 800f628:	443d      	add	r5, r7
 800f62a:	42ab      	cmp	r3, r5
 800f62c:	bfb8      	it	lt
 800f62e:	8165      	strhlt	r5, [r4, #10]
 800f630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f634 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f634:	b510      	push	{r4, lr}
 800f636:	4604      	mov	r4, r0
 800f638:	302c      	adds	r0, #44	; 0x2c
 800f63a:	f002 fdf8 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f63e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f642:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f646:	4620      	mov	r0, r4
 800f648:	f7ff ffc8 	bl	800f5dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f64c:	bd10      	pop	{r4, pc}
	...

0800f650 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f652:	4604      	mov	r4, r0
 800f654:	4626      	mov	r6, r4
 800f656:	2500      	movs	r5, #0
 800f658:	f7ff ffa8 	bl	800f5ac <_ZN8touchgfx8DrawableC1Ev>
 800f65c:	4b23      	ldr	r3, [pc, #140]	; (800f6ec <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f65e:	62a5      	str	r5, [r4, #40]	; 0x28
 800f660:	f846 3b2c 	str.w	r3, [r6], #44
 800f664:	2226      	movs	r2, #38	; 0x26
 800f666:	4629      	mov	r1, r5
 800f668:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f66c:	4630      	mov	r0, r6
 800f66e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f672:	f01a fb74 	bl	8029d5e <memset>
 800f676:	4630      	mov	r0, r6
 800f678:	f7ff ff98 	bl	800f5ac <_ZN8touchgfx8DrawableC1Ev>
 800f67c:	a902      	add	r1, sp, #8
 800f67e:	4b1c      	ldr	r3, [pc, #112]	; (800f6f0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f680:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f682:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f686:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f68a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f68e:	4630      	mov	r0, r6
 800f690:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f694:	f002 fdcb 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f698:	4638      	mov	r0, r7
 800f69a:	f7ff ff87 	bl	800f5ac <_ZN8touchgfx8DrawableC1Ev>
 800f69e:	4b15      	ldr	r3, [pc, #84]	; (800f6f4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f6a0:	65a3      	str	r3, [r4, #88]	; 0x58
 800f6a2:	2364      	movs	r3, #100	; 0x64
 800f6a4:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f6a8:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f6ac:	4b12      	ldr	r3, [pc, #72]	; (800f6f8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f6ae:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f6b2:	4629      	mov	r1, r5
 800f6b4:	4630      	mov	r0, r6
 800f6b6:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f6ba:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f6be:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f6c2:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f6c6:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f6ca:	f7f1 fc03 	bl	8000ed4 <_ZN8touchgfx8Drawable4setXEs>
 800f6ce:	4629      	mov	r1, r5
 800f6d0:	4630      	mov	r0, r6
 800f6d2:	f7f1 fc01 	bl	8000ed8 <_ZN8touchgfx8Drawable4setYEs>
 800f6d6:	4631      	mov	r1, r6
 800f6d8:	4620      	mov	r0, r4
 800f6da:	f000 f819 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f6de:	4620      	mov	r0, r4
 800f6e0:	4639      	mov	r1, r7
 800f6e2:	f000 f815 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f6e6:	4620      	mov	r0, r4
 800f6e8:	b003      	add	sp, #12
 800f6ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6ec:	0802da10 	.word	0x0802da10
 800f6f0:	0802e038 	.word	0x0802e038
 800f6f4:	0802dae4 	.word	0x0802dae4
 800f6f8:	0801690b 	.word	0x0801690b

0800f6fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f6fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f6fe:	2000      	movs	r0, #0
 800f700:	b12b      	cbz	r3, 800f70e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f702:	b920      	cbnz	r0, 800f70e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f704:	1a5a      	subs	r2, r3, r1
 800f706:	4250      	negs	r0, r2
 800f708:	4150      	adcs	r0, r2
 800f70a:	699b      	ldr	r3, [r3, #24]
 800f70c:	e7f8      	b.n	800f700 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f70e:	4770      	bx	lr

0800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f710:	2300      	movs	r3, #0
 800f712:	6148      	str	r0, [r1, #20]
 800f714:	618b      	str	r3, [r1, #24]
 800f716:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f718:	b913      	cbnz	r3, 800f720 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f71a:	6281      	str	r1, [r0, #40]	; 0x28
 800f71c:	4770      	bx	lr
 800f71e:	4613      	mov	r3, r2
 800f720:	699a      	ldr	r2, [r3, #24]
 800f722:	2a00      	cmp	r2, #0
 800f724:	d1fb      	bne.n	800f71e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f726:	6199      	str	r1, [r3, #24]
 800f728:	4770      	bx	lr

0800f72a <_ZN8touchgfx9Container9removeAllEv>:
 800f72a:	2200      	movs	r2, #0
 800f72c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f72e:	b123      	cbz	r3, 800f73a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f730:	6999      	ldr	r1, [r3, #24]
 800f732:	6281      	str	r1, [r0, #40]	; 0x28
 800f734:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f738:	e7f8      	b.n	800f72c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f73a:	4770      	bx	lr

0800f73c <_ZN8touchgfx9Container6unlinkEv>:
 800f73c:	2300      	movs	r3, #0
 800f73e:	6283      	str	r3, [r0, #40]	; 0x28
 800f740:	4770      	bx	lr

0800f742 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f742:	2200      	movs	r2, #0
 800f744:	8002      	strh	r2, [r0, #0]
 800f746:	8042      	strh	r2, [r0, #2]
 800f748:	8082      	strh	r2, [r0, #4]
 800f74a:	80c2      	strh	r2, [r0, #6]
 800f74c:	4770      	bx	lr

0800f74e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f74e:	b570      	push	{r4, r5, r6, lr}
 800f750:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f752:	460d      	mov	r5, r1
 800f754:	4616      	mov	r6, r2
 800f756:	b13c      	cbz	r4, 800f768 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f758:	6823      	ldr	r3, [r4, #0]
 800f75a:	4620      	mov	r0, r4
 800f75c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f75e:	4632      	mov	r2, r6
 800f760:	4629      	mov	r1, r5
 800f762:	4798      	blx	r3
 800f764:	69a4      	ldr	r4, [r4, #24]
 800f766:	e7f6      	b.n	800f756 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f768:	bd70      	pop	{r4, r5, r6, pc}

0800f76a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f76a:	b538      	push	{r3, r4, r5, lr}
 800f76c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f76e:	460d      	mov	r5, r1
 800f770:	b134      	cbz	r4, 800f780 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f772:	682b      	ldr	r3, [r5, #0]
 800f774:	4621      	mov	r1, r4
 800f776:	689b      	ldr	r3, [r3, #8]
 800f778:	4628      	mov	r0, r5
 800f77a:	4798      	blx	r3
 800f77c:	69a4      	ldr	r4, [r4, #24]
 800f77e:	e7f7      	b.n	800f770 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f780:	bd38      	pop	{r3, r4, r5, pc}

0800f782 <_ZN8touchgfx9ContainerD1Ev>:
 800f782:	4770      	bx	lr

0800f784 <_ZN8touchgfx9ContainerD0Ev>:
 800f784:	b510      	push	{r4, lr}
 800f786:	212c      	movs	r1, #44	; 0x2c
 800f788:	4604      	mov	r4, r0
 800f78a:	f019 fad0 	bl	8028d2e <_ZdlPvj>
 800f78e:	4620      	mov	r0, r4
 800f790:	bd10      	pop	{r4, pc}

0800f792 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f792:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f794:	b19b      	cbz	r3, 800f7be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f796:	428b      	cmp	r3, r1
 800f798:	d109      	bne.n	800f7ae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f79a:	699a      	ldr	r2, [r3, #24]
 800f79c:	2100      	movs	r1, #0
 800f79e:	6159      	str	r1, [r3, #20]
 800f7a0:	6282      	str	r2, [r0, #40]	; 0x28
 800f7a2:	b902      	cbnz	r2, 800f7a6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f7a4:	4770      	bx	lr
 800f7a6:	6199      	str	r1, [r3, #24]
 800f7a8:	4770      	bx	lr
 800f7aa:	4613      	mov	r3, r2
 800f7ac:	b13a      	cbz	r2, 800f7be <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f7ae:	699a      	ldr	r2, [r3, #24]
 800f7b0:	428a      	cmp	r2, r1
 800f7b2:	d1fa      	bne.n	800f7aa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f7b4:	698a      	ldr	r2, [r1, #24]
 800f7b6:	619a      	str	r2, [r3, #24]
 800f7b8:	2300      	movs	r3, #0
 800f7ba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f7be:	4770      	bx	lr

0800f7c0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f7c0:	b410      	push	{r4}
 800f7c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f7c4:	4604      	mov	r4, r0
 800f7c6:	b92b      	cbnz	r3, 800f7d4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f7c8:	6803      	ldr	r3, [r0, #0]
 800f7ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f7ce:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f7d0:	4611      	mov	r1, r2
 800f7d2:	4718      	bx	r3
 800f7d4:	b941      	cbnz	r1, 800f7e8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f7d6:	6193      	str	r3, [r2, #24]
 800f7d8:	6282      	str	r2, [r0, #40]	; 0x28
 800f7da:	6154      	str	r4, [r2, #20]
 800f7dc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f7e0:	4770      	bx	lr
 800f7e2:	4603      	mov	r3, r0
 800f7e4:	2800      	cmp	r0, #0
 800f7e6:	d0f9      	beq.n	800f7dc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f7e8:	4299      	cmp	r1, r3
 800f7ea:	6998      	ldr	r0, [r3, #24]
 800f7ec:	d1f9      	bne.n	800f7e2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f7ee:	6190      	str	r0, [r2, #24]
 800f7f0:	618a      	str	r2, [r1, #24]
 800f7f2:	e7f2      	b.n	800f7da <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f7f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f7f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7f8:	461f      	mov	r7, r3
 800f7fa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f7fe:	460d      	mov	r5, r1
 800f800:	4616      	mov	r6, r2
 800f802:	b103      	cbz	r3, 800f806 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f804:	6038      	str	r0, [r7, #0]
 800f806:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f808:	b314      	cbz	r4, 800f850 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f80a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f80e:	b1eb      	cbz	r3, 800f84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f810:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f814:	428d      	cmp	r5, r1
 800f816:	db19      	blt.n	800f84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f818:	8923      	ldrh	r3, [r4, #8]
 800f81a:	b289      	uxth	r1, r1
 800f81c:	440b      	add	r3, r1
 800f81e:	b21b      	sxth	r3, r3
 800f820:	429d      	cmp	r5, r3
 800f822:	da13      	bge.n	800f84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f824:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f828:	4296      	cmp	r6, r2
 800f82a:	db0f      	blt.n	800f84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f82c:	8963      	ldrh	r3, [r4, #10]
 800f82e:	b292      	uxth	r2, r2
 800f830:	4413      	add	r3, r2
 800f832:	b21b      	sxth	r3, r3
 800f834:	429e      	cmp	r6, r3
 800f836:	da09      	bge.n	800f84c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f838:	6823      	ldr	r3, [r4, #0]
 800f83a:	1ab2      	subs	r2, r6, r2
 800f83c:	1a69      	subs	r1, r5, r1
 800f83e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f842:	b212      	sxth	r2, r2
 800f844:	463b      	mov	r3, r7
 800f846:	b209      	sxth	r1, r1
 800f848:	4620      	mov	r0, r4
 800f84a:	47c0      	blx	r8
 800f84c:	69a4      	ldr	r4, [r4, #24]
 800f84e:	e7db      	b.n	800f808 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f858:	4c6e      	ldr	r4, [pc, #440]	; (800fa14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f85a:	b0a1      	sub	sp, #132	; 0x84
 800f85c:	6824      	ldr	r4, [r4, #0]
 800f85e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f860:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f864:	9303      	str	r3, [sp, #12]
 800f866:	2400      	movs	r4, #0
 800f868:	802c      	strh	r4, [r5, #0]
 800f86a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f86c:	802c      	strh	r4, [r5, #0]
 800f86e:	601c      	str	r4, [r3, #0]
 800f870:	4606      	mov	r6, r0
 800f872:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f876:	f7ff ffbd 	bl	800f7f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f87a:	f1b9 0f03 	cmp.w	r9, #3
 800f87e:	f340 80c2 	ble.w	800fa06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f882:	4631      	mov	r1, r6
 800f884:	a80c      	add	r0, sp, #48	; 0x30
 800f886:	f006 fb5f 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f88a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f88e:	9306      	str	r3, [sp, #24]
 800f890:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f894:	9307      	str	r3, [sp, #28]
 800f896:	9b03      	ldr	r3, [sp, #12]
 800f898:	f8d3 a000 	ldr.w	sl, [r3]
 800f89c:	f1ba 0f00 	cmp.w	sl, #0
 800f8a0:	f000 80b4 	beq.w	800fa0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f8a4:	4651      	mov	r1, sl
 800f8a6:	a810      	add	r0, sp, #64	; 0x40
 800f8a8:	f006 fb4e 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8ac:	9b01      	ldr	r3, [sp, #4]
 800f8ae:	9a06      	ldr	r2, [sp, #24]
 800f8b0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f8b4:	189d      	adds	r5, r3, r2
 800f8b6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f8ba:	9a07      	ldr	r2, [sp, #28]
 800f8bc:	2002      	movs	r0, #2
 800f8be:	fb91 f1f0 	sdiv	r1, r1, r0
 800f8c2:	4419      	add	r1, r3
 800f8c4:	1a6d      	subs	r5, r5, r1
 800f8c6:	9b02      	ldr	r3, [sp, #8]
 800f8c8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f8cc:	4413      	add	r3, r2
 800f8ce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f8d2:	fb92 f2f0 	sdiv	r2, r2, r0
 800f8d6:	440a      	add	r2, r1
 800f8d8:	1a9b      	subs	r3, r3, r2
 800f8da:	435b      	muls	r3, r3
 800f8dc:	fb05 3505 	mla	r5, r5, r5, r3
 800f8e0:	4f4d      	ldr	r7, [pc, #308]	; (800fa18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f8e2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f8e4:	ac10      	add	r4, sp, #64	; 0x40
 800f8e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f8e8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f8ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f8ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f8ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f8f0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f8f4:	f1b9 0f0c 	cmp.w	r9, #12
 800f8f8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f8fc:	f04f 0303 	mov.w	r3, #3
 800f900:	bfc8      	it	gt
 800f902:	4698      	movgt	r8, r3
 800f904:	f8cd 9000 	str.w	r9, [sp]
 800f908:	f04f 0400 	mov.w	r4, #0
 800f90c:	bfdc      	itt	le
 800f90e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f912:	fb92 f8f3 	sdivle	r8, r2, r3
 800f916:	1c63      	adds	r3, r4, #1
 800f918:	aa10      	add	r2, sp, #64	; 0x40
 800f91a:	f004 0401 	and.w	r4, r4, #1
 800f91e:	9308      	str	r3, [sp, #32]
 800f920:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f924:	9b00      	ldr	r3, [sp, #0]
 800f926:	fb93 f3f8 	sdiv	r3, r3, r8
 800f92a:	b29b      	uxth	r3, r3
 800f92c:	3404      	adds	r4, #4
 800f92e:	f04f 0b00 	mov.w	fp, #0
 800f932:	9304      	str	r3, [sp, #16]
 800f934:	9a04      	ldr	r2, [sp, #16]
 800f936:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f93a:	fb13 f302 	smulbb	r3, r3, r2
 800f93e:	9a01      	ldr	r2, [sp, #4]
 800f940:	b29b      	uxth	r3, r3
 800f942:	1899      	adds	r1, r3, r2
 800f944:	9305      	str	r3, [sp, #20]
 800f946:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f94a:	b209      	sxth	r1, r1
 800f94c:	4299      	cmp	r1, r3
 800f94e:	db4d      	blt.n	800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f950:	8932      	ldrh	r2, [r6, #8]
 800f952:	4413      	add	r3, r2
 800f954:	b21b      	sxth	r3, r3
 800f956:	4299      	cmp	r1, r3
 800f958:	da48      	bge.n	800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f95a:	9b04      	ldr	r3, [sp, #16]
 800f95c:	6827      	ldr	r7, [r4, #0]
 800f95e:	fb17 f703 	smulbb	r7, r7, r3
 800f962:	9b02      	ldr	r3, [sp, #8]
 800f964:	b2bf      	uxth	r7, r7
 800f966:	18fa      	adds	r2, r7, r3
 800f968:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f96c:	b212      	sxth	r2, r2
 800f96e:	429a      	cmp	r2, r3
 800f970:	db3c      	blt.n	800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f972:	8970      	ldrh	r0, [r6, #10]
 800f974:	4403      	add	r3, r0
 800f976:	b21b      	sxth	r3, r3
 800f978:	429a      	cmp	r2, r3
 800f97a:	da37      	bge.n	800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f97c:	2300      	movs	r3, #0
 800f97e:	930b      	str	r3, [sp, #44]	; 0x2c
 800f980:	4630      	mov	r0, r6
 800f982:	ab0b      	add	r3, sp, #44	; 0x2c
 800f984:	f7ff ff36 	bl	800f7f4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f988:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f98a:	b37a      	cbz	r2, 800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f98c:	4552      	cmp	r2, sl
 800f98e:	d02d      	beq.n	800f9ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f990:	4611      	mov	r1, r2
 800f992:	a80e      	add	r0, sp, #56	; 0x38
 800f994:	9209      	str	r2, [sp, #36]	; 0x24
 800f996:	f006 fad7 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f99a:	9a06      	ldr	r2, [sp, #24]
 800f99c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f9a0:	9b01      	ldr	r3, [sp, #4]
 800f9a2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f9a6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f9aa:	4413      	add	r3, r2
 800f9ac:	f04f 0e02 	mov.w	lr, #2
 800f9b0:	fb91 f1fe 	sdiv	r1, r1, lr
 800f9b4:	4401      	add	r1, r0
 800f9b6:	1a58      	subs	r0, r3, r1
 800f9b8:	9a07      	ldr	r2, [sp, #28]
 800f9ba:	9b02      	ldr	r3, [sp, #8]
 800f9bc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f9c0:	fb9c fcfe 	sdiv	ip, ip, lr
 800f9c4:	4413      	add	r3, r2
 800f9c6:	448c      	add	ip, r1
 800f9c8:	eba3 030c 	sub.w	r3, r3, ip
 800f9cc:	435b      	muls	r3, r3
 800f9ce:	fb00 3300 	mla	r3, r0, r0, r3
 800f9d2:	42ab      	cmp	r3, r5
 800f9d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f9d6:	d208      	bcs.n	800f9ea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f9d8:	9803      	ldr	r0, [sp, #12]
 800f9da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f9dc:	6001      	str	r1, [r0, #0]
 800f9de:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f9e0:	9805      	ldr	r0, [sp, #20]
 800f9e2:	8008      	strh	r0, [r1, #0]
 800f9e4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f9e6:	461d      	mov	r5, r3
 800f9e8:	800f      	strh	r7, [r1, #0]
 800f9ea:	4692      	mov	sl, r2
 800f9ec:	f10b 0b01 	add.w	fp, fp, #1
 800f9f0:	f1bb 0f04 	cmp.w	fp, #4
 800f9f4:	f104 0408 	add.w	r4, r4, #8
 800f9f8:	d19c      	bne.n	800f934 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f9fa:	9b00      	ldr	r3, [sp, #0]
 800f9fc:	9c08      	ldr	r4, [sp, #32]
 800f9fe:	444b      	add	r3, r9
 800fa00:	4544      	cmp	r4, r8
 800fa02:	9300      	str	r3, [sp, #0]
 800fa04:	d187      	bne.n	800f916 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fa06:	b021      	add	sp, #132	; 0x84
 800fa08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa0c:	f04f 35ff 	mov.w	r5, #4294967295
 800fa10:	e766      	b.n	800f8e0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fa12:	bf00      	nop
 800fa14:	20012db4 	.word	0x20012db4
 800fa18:	0802aa6c 	.word	0x0802aa6c

0800fa1c <_ZN8touchgfx4RectaNERKS0_>:
 800fa1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa20:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fa24:	888c      	ldrh	r4, [r1, #4]
 800fa26:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fa2a:	443c      	add	r4, r7
 800fa2c:	b2a4      	uxth	r4, r4
 800fa2e:	fa0f f884 	sxth.w	r8, r4
 800fa32:	45c1      	cmp	r9, r8
 800fa34:	da2f      	bge.n	800fa96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa36:	8882      	ldrh	r2, [r0, #4]
 800fa38:	444a      	add	r2, r9
 800fa3a:	b292      	uxth	r2, r2
 800fa3c:	fa0f fe82 	sxth.w	lr, r2
 800fa40:	4577      	cmp	r7, lr
 800fa42:	da28      	bge.n	800fa96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800fa48:	88cb      	ldrh	r3, [r1, #6]
 800fa4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fa4e:	442b      	add	r3, r5
 800fa50:	b21b      	sxth	r3, r3
 800fa52:	429e      	cmp	r6, r3
 800fa54:	da1f      	bge.n	800fa96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa56:	88c3      	ldrh	r3, [r0, #6]
 800fa58:	4433      	add	r3, r6
 800fa5a:	b29b      	uxth	r3, r3
 800fa5c:	fa0f fc83 	sxth.w	ip, r3
 800fa60:	4565      	cmp	r5, ip
 800fa62:	da18      	bge.n	800fa96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa64:	454f      	cmp	r7, r9
 800fa66:	bfb8      	it	lt
 800fa68:	464f      	movlt	r7, r9
 800fa6a:	42b5      	cmp	r5, r6
 800fa6c:	bfb8      	it	lt
 800fa6e:	4635      	movlt	r5, r6
 800fa70:	45f0      	cmp	r8, lr
 800fa72:	bfd8      	it	le
 800fa74:	4622      	movle	r2, r4
 800fa76:	1bd2      	subs	r2, r2, r7
 800fa78:	8082      	strh	r2, [r0, #4]
 800fa7a:	884a      	ldrh	r2, [r1, #2]
 800fa7c:	88c9      	ldrh	r1, [r1, #6]
 800fa7e:	8007      	strh	r7, [r0, #0]
 800fa80:	440a      	add	r2, r1
 800fa82:	b292      	uxth	r2, r2
 800fa84:	b211      	sxth	r1, r2
 800fa86:	458c      	cmp	ip, r1
 800fa88:	bfa8      	it	ge
 800fa8a:	4613      	movge	r3, r2
 800fa8c:	1b5b      	subs	r3, r3, r5
 800fa8e:	80c3      	strh	r3, [r0, #6]
 800fa90:	8045      	strh	r5, [r0, #2]
 800fa92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fa96:	2300      	movs	r3, #0
 800fa98:	8003      	strh	r3, [r0, #0]
 800fa9a:	8043      	strh	r3, [r0, #2]
 800fa9c:	8083      	strh	r3, [r0, #4]
 800fa9e:	80c3      	strh	r3, [r0, #6]
 800faa0:	e7f7      	b.n	800fa92 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800faa2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800faa6:	2b00      	cmp	r3, #0
 800faa8:	dd06      	ble.n	800fab8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800faaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800faae:	2800      	cmp	r0, #0
 800fab0:	bfcc      	ite	gt
 800fab2:	2000      	movgt	r0, #0
 800fab4:	2001      	movle	r0, #1
 800fab6:	4770      	bx	lr
 800fab8:	2001      	movs	r0, #1
 800faba:	4770      	bx	lr

0800fabc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fabc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fac0:	2300      	movs	r3, #0
 800fac2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fac4:	8003      	strh	r3, [r0, #0]
 800fac6:	4604      	mov	r4, r0
 800fac8:	8043      	strh	r3, [r0, #2]
 800faca:	8083      	strh	r3, [r0, #4]
 800facc:	80c3      	strh	r3, [r0, #6]
 800face:	2d00      	cmp	r5, #0
 800fad0:	d040      	beq.n	800fb54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fad2:	1d28      	adds	r0, r5, #4
 800fad4:	f7ff ffe5 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fad8:	b988      	cbnz	r0, 800fafe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fada:	4620      	mov	r0, r4
 800fadc:	f7ff ffe1 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fae0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fae4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fae8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800faec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800faf0:	b138      	cbz	r0, 800fb02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800faf2:	8022      	strh	r2, [r4, #0]
 800faf4:	8063      	strh	r3, [r4, #2]
 800faf6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fafa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fafe:	69ad      	ldr	r5, [r5, #24]
 800fb00:	e7e5      	b.n	800face <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fb02:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fb0e:	4290      	cmp	r0, r2
 800fb10:	4607      	mov	r7, r0
 800fb12:	bfa8      	it	ge
 800fb14:	4617      	movge	r7, r2
 800fb16:	4472      	add	r2, lr
 800fb18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fb1c:	8027      	strh	r7, [r4, #0]
 800fb1e:	4299      	cmp	r1, r3
 800fb20:	460e      	mov	r6, r1
 800fb22:	4440      	add	r0, r8
 800fb24:	bfa8      	it	ge
 800fb26:	461e      	movge	r6, r3
 800fb28:	4471      	add	r1, lr
 800fb2a:	4463      	add	r3, ip
 800fb2c:	b200      	sxth	r0, r0
 800fb2e:	b212      	sxth	r2, r2
 800fb30:	b209      	sxth	r1, r1
 800fb32:	b21b      	sxth	r3, r3
 800fb34:	4290      	cmp	r0, r2
 800fb36:	bfac      	ite	ge
 800fb38:	ebc7 0200 	rsbge	r2, r7, r0
 800fb3c:	ebc7 0202 	rsblt	r2, r7, r2
 800fb40:	4299      	cmp	r1, r3
 800fb42:	bfac      	ite	ge
 800fb44:	ebc6 0301 	rsbge	r3, r6, r1
 800fb48:	ebc6 0303 	rsblt	r3, r6, r3
 800fb4c:	8066      	strh	r6, [r4, #2]
 800fb4e:	80a2      	strh	r2, [r4, #4]
 800fb50:	80e3      	strh	r3, [r4, #6]
 800fb52:	e7d4      	b.n	800fafe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fb54:	4620      	mov	r0, r4
 800fb56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fb5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fb5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fb62:	b383      	cbz	r3, 800fbc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fb64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fb66:	b374      	cbz	r4, 800fbc6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fb68:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fb6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fb70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fb74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fb78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fb7c:	b303      	cbz	r3, 800fbc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fb7e:	4668      	mov	r0, sp
 800fb80:	1d21      	adds	r1, r4, #4
 800fb82:	f8ad 5000 	strh.w	r5, [sp]
 800fb86:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fb8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fb8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fb92:	f7ff ff43 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 800fb96:	4668      	mov	r0, sp
 800fb98:	f7ff ff83 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb9c:	b980      	cbnz	r0, 800fbc0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fb9e:	f8bd 3000 	ldrh.w	r3, [sp]
 800fba2:	88a2      	ldrh	r2, [r4, #4]
 800fba4:	1a9b      	subs	r3, r3, r2
 800fba6:	f8ad 3000 	strh.w	r3, [sp]
 800fbaa:	88e2      	ldrh	r2, [r4, #6]
 800fbac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fbb0:	1a9b      	subs	r3, r3, r2
 800fbb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fbb6:	6823      	ldr	r3, [r4, #0]
 800fbb8:	4669      	mov	r1, sp
 800fbba:	689b      	ldr	r3, [r3, #8]
 800fbbc:	4620      	mov	r0, r4
 800fbbe:	4798      	blx	r3
 800fbc0:	69a4      	ldr	r4, [r4, #24]
 800fbc2:	2c00      	cmp	r4, #0
 800fbc4:	d1d8      	bne.n	800fb78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fbc6:	b002      	add	sp, #8
 800fbc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fbcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fbcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fbce:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fbd2:	460d      	mov	r5, r1
 800fbd4:	4616      	mov	r6, r2
 800fbd6:	b323      	cbz	r3, 800fc22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fbd8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbda:	b314      	cbz	r4, 800fc22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fbdc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fbe0:	b1eb      	cbz	r3, 800fc1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fbe2:	6828      	ldr	r0, [r5, #0]
 800fbe4:	6869      	ldr	r1, [r5, #4]
 800fbe6:	466b      	mov	r3, sp
 800fbe8:	c303      	stmia	r3!, {r0, r1}
 800fbea:	4668      	mov	r0, sp
 800fbec:	1d21      	adds	r1, r4, #4
 800fbee:	f7ff ff15 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 800fbf2:	4668      	mov	r0, sp
 800fbf4:	f7ff ff55 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbf8:	b988      	cbnz	r0, 800fc1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fbfa:	f8bd 3000 	ldrh.w	r3, [sp]
 800fbfe:	88a2      	ldrh	r2, [r4, #4]
 800fc00:	1a9b      	subs	r3, r3, r2
 800fc02:	f8ad 3000 	strh.w	r3, [sp]
 800fc06:	88e2      	ldrh	r2, [r4, #6]
 800fc08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc0c:	1a9b      	subs	r3, r3, r2
 800fc0e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc12:	6823      	ldr	r3, [r4, #0]
 800fc14:	4632      	mov	r2, r6
 800fc16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fc18:	4669      	mov	r1, sp
 800fc1a:	4620      	mov	r0, r4
 800fc1c:	4798      	blx	r3
 800fc1e:	69a4      	ldr	r4, [r4, #24]
 800fc20:	e7db      	b.n	800fbda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fc22:	b002      	add	sp, #8
 800fc24:	bd70      	pop	{r4, r5, r6, pc}

0800fc26 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fc26:	b513      	push	{r0, r1, r4, lr}
 800fc28:	6803      	ldr	r3, [r0, #0]
 800fc2a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fc2e:	2300      	movs	r3, #0
 800fc30:	e9cd 3300 	strd	r3, r3, [sp]
 800fc34:	466b      	mov	r3, sp
 800fc36:	47a0      	blx	r4
 800fc38:	b002      	add	sp, #8
 800fc3a:	bd10      	pop	{r4, pc}

0800fc3c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fc3c:	2301      	movs	r3, #1
 800fc3e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fc42:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fc46:	4770      	bx	lr

0800fc48 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fc48:	2301      	movs	r3, #1
 800fc4a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fc4e:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fc52:	4770      	bx	lr

0800fc54 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fc54:	6843      	ldr	r3, [r0, #4]
 800fc56:	2201      	movs	r2, #1
 800fc58:	725a      	strb	r2, [r3, #9]
 800fc5a:	6840      	ldr	r0, [r0, #4]
 800fc5c:	6803      	ldr	r3, [r0, #0]
 800fc5e:	691b      	ldr	r3, [r3, #16]
 800fc60:	4718      	bx	r3

0800fc62 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fc62:	6840      	ldr	r0, [r0, #4]
 800fc64:	6803      	ldr	r3, [r0, #0]
 800fc66:	689b      	ldr	r3, [r3, #8]
 800fc68:	4718      	bx	r3

0800fc6a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fc6a:	b530      	push	{r4, r5, lr}
 800fc6c:	b08b      	sub	sp, #44	; 0x2c
 800fc6e:	6804      	ldr	r4, [r0, #0]
 800fc70:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fc74:	9509      	str	r5, [sp, #36]	; 0x24
 800fc76:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fc7a:	9508      	str	r5, [sp, #32]
 800fc7c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fc80:	9507      	str	r5, [sp, #28]
 800fc82:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fc86:	9506      	str	r5, [sp, #24]
 800fc88:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fc8c:	9505      	str	r5, [sp, #20]
 800fc8e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fc92:	9504      	str	r5, [sp, #16]
 800fc94:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fc98:	9503      	str	r5, [sp, #12]
 800fc9a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fc9e:	9502      	str	r5, [sp, #8]
 800fca0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fca4:	e9cd 3500 	strd	r3, r5, [sp]
 800fca8:	4613      	mov	r3, r2
 800fcaa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fcac:	2200      	movs	r2, #0
 800fcae:	47a0      	blx	r4
 800fcb0:	b00b      	add	sp, #44	; 0x2c
 800fcb2:	bd30      	pop	{r4, r5, pc}

0800fcb4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fcb4:	4b04      	ldr	r3, [pc, #16]	; (800fcc8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fcb6:	781b      	ldrb	r3, [r3, #0]
 800fcb8:	b123      	cbz	r3, 800fcc4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fcba:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fcbe:	f080 0001 	eor.w	r0, r0, #1
 800fcc2:	4770      	bx	lr
 800fcc4:	2001      	movs	r0, #1
 800fcc6:	4770      	bx	lr
 800fcc8:	20012db2 	.word	0x20012db2

0800fccc <_ZN8touchgfx3HAL8endFrameEv>:
 800fccc:	b510      	push	{r4, lr}
 800fcce:	4604      	mov	r4, r0
 800fcd0:	6840      	ldr	r0, [r0, #4]
 800fcd2:	6803      	ldr	r3, [r0, #0]
 800fcd4:	689b      	ldr	r3, [r3, #8]
 800fcd6:	4798      	blx	r3
 800fcd8:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fcdc:	b113      	cbz	r3, 800fce4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fcde:	2301      	movs	r3, #1
 800fce0:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fce4:	bd10      	pop	{r4, pc}

0800fce6 <_ZN8touchgfx3HAL10initializeEv>:
 800fce6:	b510      	push	{r4, lr}
 800fce8:	4604      	mov	r4, r0
 800fcea:	f7f0 fedf 	bl	8000aac <_ZN8touchgfx10OSWrappers10initializeEv>
 800fcee:	f7f0 fdeb 	bl	80008c8 <_ZN8touchgfx4GPIO4initEv>
 800fcf2:	6860      	ldr	r0, [r4, #4]
 800fcf4:	6803      	ldr	r3, [r0, #0]
 800fcf6:	68db      	ldr	r3, [r3, #12]
 800fcf8:	4798      	blx	r3
 800fcfa:	68e0      	ldr	r0, [r4, #12]
 800fcfc:	6803      	ldr	r3, [r0, #0]
 800fcfe:	689b      	ldr	r3, [r3, #8]
 800fd00:	4798      	blx	r3
 800fd02:	6823      	ldr	r3, [r4, #0]
 800fd04:	4620      	mov	r0, r4
 800fd06:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fd08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd0c:	4718      	bx	r3
	...

0800fd10 <_ZN8touchgfx3HAL4tickEv>:
 800fd10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd12:	6803      	ldr	r3, [r0, #0]
 800fd14:	4d5b      	ldr	r5, [pc, #364]	; (800fe84 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fd16:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fd1a:	4604      	mov	r4, r0
 800fd1c:	4798      	blx	r3
 800fd1e:	2800      	cmp	r0, #0
 800fd20:	f000 8095 	beq.w	800fe4e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fd24:	2001      	movs	r0, #1
 800fd26:	f7f0 fd81 	bl	800082c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fd2a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fd2e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fd32:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fd36:	2600      	movs	r6, #0
 800fd38:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fd3c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fd40:	b133      	cbz	r3, 800fd50 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fd42:	6823      	ldr	r3, [r4, #0]
 800fd44:	4620      	mov	r0, r4
 800fd46:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fd4a:	4798      	blx	r3
 800fd4c:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fd50:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fd54:	6862      	ldr	r2, [r4, #4]
 800fd56:	f083 0301 	eor.w	r3, r3, #1
 800fd5a:	7253      	strb	r3, [r2, #9]
 800fd5c:	2601      	movs	r6, #1
 800fd5e:	702e      	strb	r6, [r5, #0]
 800fd60:	f004 ff6e 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800fd64:	6803      	ldr	r3, [r0, #0]
 800fd66:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fd68:	4798      	blx	r3
 800fd6a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fd6e:	b90b      	cbnz	r3, 800fd74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fd70:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fd74:	f004 ff64 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800fd78:	6803      	ldr	r3, [r0, #0]
 800fd7a:	695b      	ldr	r3, [r3, #20]
 800fd7c:	4798      	blx	r3
 800fd7e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fd80:	6803      	ldr	r3, [r0, #0]
 800fd82:	691b      	ldr	r3, [r3, #16]
 800fd84:	4798      	blx	r3
 800fd86:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fd8a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fd8e:	3b01      	subs	r3, #1
 800fd90:	b2db      	uxtb	r3, r3
 800fd92:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fd96:	b10a      	cbz	r2, 800fd9c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fd98:	2b00      	cmp	r3, #0
 800fd9a:	d1eb      	bne.n	800fd74 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fd9c:	4a3a      	ldr	r2, [pc, #232]	; (800fe88 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fd9e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fda2:	7813      	ldrb	r3, [r2, #0]
 800fda4:	3301      	adds	r3, #1
 800fda6:	b25b      	sxtb	r3, r3
 800fda8:	4299      	cmp	r1, r3
 800fdaa:	7013      	strb	r3, [r2, #0]
 800fdac:	dc10      	bgt.n	800fdd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fdae:	68e0      	ldr	r0, [r4, #12]
 800fdb0:	2300      	movs	r3, #0
 800fdb2:	7013      	strb	r3, [r2, #0]
 800fdb4:	6803      	ldr	r3, [r0, #0]
 800fdb6:	aa03      	add	r2, sp, #12
 800fdb8:	68db      	ldr	r3, [r3, #12]
 800fdba:	a902      	add	r1, sp, #8
 800fdbc:	4798      	blx	r3
 800fdbe:	6823      	ldr	r3, [r4, #0]
 800fdc0:	2800      	cmp	r0, #0
 800fdc2:	d050      	beq.n	800fe66 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fdc4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fdc8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fdcc:	4620      	mov	r0, r4
 800fdce:	4798      	blx	r3
 800fdd0:	6960      	ldr	r0, [r4, #20]
 800fdd2:	2300      	movs	r3, #0
 800fdd4:	f88d 3007 	strb.w	r3, [sp, #7]
 800fdd8:	b158      	cbz	r0, 800fdf2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fdda:	6803      	ldr	r3, [r0, #0]
 800fddc:	f10d 0107 	add.w	r1, sp, #7
 800fde0:	68db      	ldr	r3, [r3, #12]
 800fde2:	4798      	blx	r3
 800fde4:	b128      	cbz	r0, 800fdf2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fde6:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fde8:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fdec:	6803      	ldr	r3, [r0, #0]
 800fdee:	68db      	ldr	r3, [r3, #12]
 800fdf0:	4798      	blx	r3
 800fdf2:	f104 001c 	add.w	r0, r4, #28
 800fdf6:	f015 feb9 	bl	8025b6c <_ZN8touchgfx8Gestures4tickEv>
 800fdfa:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fdfe:	b30b      	cbz	r3, 800fe44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe00:	6920      	ldr	r0, [r4, #16]
 800fe02:	6803      	ldr	r3, [r0, #0]
 800fe04:	691b      	ldr	r3, [r3, #16]
 800fe06:	4798      	blx	r3
 800fe08:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe0a:	4606      	mov	r6, r0
 800fe0c:	b903      	cbnz	r3, 800fe10 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fe0e:	6760      	str	r0, [r4, #116]	; 0x74
 800fe10:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe12:	4a1e      	ldr	r2, [pc, #120]	; (800fe8c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fe14:	1af3      	subs	r3, r6, r3
 800fe16:	4293      	cmp	r3, r2
 800fe18:	d914      	bls.n	800fe44 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe1a:	6920      	ldr	r0, [r4, #16]
 800fe1c:	6803      	ldr	r3, [r0, #0]
 800fe1e:	699b      	ldr	r3, [r3, #24]
 800fe20:	4798      	blx	r3
 800fe22:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe24:	2264      	movs	r2, #100	; 0x64
 800fe26:	1af3      	subs	r3, r6, r3
 800fe28:	fbb3 f3f2 	udiv	r3, r3, r2
 800fe2c:	fbb0 f0f3 	udiv	r0, r0, r3
 800fe30:	2800      	cmp	r0, #0
 800fe32:	dc1d      	bgt.n	800fe70 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fe34:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fe38:	6920      	ldr	r0, [r4, #16]
 800fe3a:	6803      	ldr	r3, [r0, #0]
 800fe3c:	2100      	movs	r1, #0
 800fe3e:	69db      	ldr	r3, [r3, #28]
 800fe40:	4798      	blx	r3
 800fe42:	6766      	str	r6, [r4, #116]	; 0x74
 800fe44:	f004 fefc 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 800fe48:	6803      	ldr	r3, [r0, #0]
 800fe4a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fe4c:	4798      	blx	r3
 800fe4e:	6823      	ldr	r3, [r4, #0]
 800fe50:	4620      	mov	r0, r4
 800fe52:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fe56:	4798      	blx	r3
 800fe58:	2001      	movs	r0, #1
 800fe5a:	f7f0 fcff 	bl	800085c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fe5e:	2300      	movs	r3, #0
 800fe60:	702b      	strb	r3, [r5, #0]
 800fe62:	b004      	add	sp, #16
 800fe64:	bd70      	pop	{r4, r5, r6, pc}
 800fe66:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fe6a:	4620      	mov	r0, r4
 800fe6c:	4798      	blx	r3
 800fe6e:	e7af      	b.n	800fdd0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fe70:	2863      	cmp	r0, #99	; 0x63
 800fe72:	bfcb      	itete	gt
 800fe74:	2300      	movgt	r3, #0
 800fe76:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fe7a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fe7e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fe82:	e7d9      	b.n	800fe38 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fe84:	20012db8 	.word	0x20012db8
 800fe88:	20012db9 	.word	0x20012db9
 800fe8c:	05f5e100 	.word	0x05f5e100

0800fe90 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fe90:	b510      	push	{r4, lr}
 800fe92:	4604      	mov	r4, r0
 800fe94:	f7f0 fe3a 	bl	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fe98:	6863      	ldr	r3, [r4, #4]
 800fe9a:	2200      	movs	r2, #0
 800fe9c:	729a      	strb	r2, [r3, #10]
 800fe9e:	bd10      	pop	{r4, pc}

0800fea0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fea0:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fea2:	301c      	adds	r0, #28
 800fea4:	f015 be60 	b.w	8025b68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fea8 <_ZN8touchgfx3HAL5touchEll>:
 800fea8:	b530      	push	{r4, r5, lr}
 800feaa:	b087      	sub	sp, #28
 800feac:	4604      	mov	r4, r0
 800feae:	a804      	add	r0, sp, #16
 800feb0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800feb4:	f004 fc90 	bl	80147d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800feb8:	9b04      	ldr	r3, [sp, #16]
 800feba:	f8ad 300c 	strh.w	r3, [sp, #12]
 800febe:	a906      	add	r1, sp, #24
 800fec0:	9b05      	ldr	r3, [sp, #20]
 800fec2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fec6:	a803      	add	r0, sp, #12
 800fec8:	f004 fcd8 	bl	801487c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fecc:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fed0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fed4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fed8:	f104 001c 	add.w	r0, r4, #28
 800fedc:	b189      	cbz	r1, 800ff02 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fede:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fee2:	9300      	str	r3, [sp, #0]
 800fee4:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fee8:	4613      	mov	r3, r2
 800feea:	462a      	mov	r2, r5
 800feec:	f015 fe4c 	bl	8025b88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fef0:	b128      	cbz	r0, 800fefe <_ZN8touchgfx3HAL5touchEll+0x56>
 800fef2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fef6:	6623      	str	r3, [r4, #96]	; 0x60
 800fef8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fefc:	6663      	str	r3, [r4, #100]	; 0x64
 800fefe:	b007      	add	sp, #28
 800ff00:	bd30      	pop	{r4, r5, pc}
 800ff02:	f015 fe81 	bl	8025c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ff06:	2301      	movs	r3, #1
 800ff08:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ff0c:	e7f1      	b.n	800fef2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ff0e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ff0e:	b510      	push	{r4, lr}
 800ff10:	2b00      	cmp	r3, #0
 800ff12:	d046      	beq.n	800ffa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff14:	ea81 0002 	eor.w	r0, r1, r2
 800ff18:	07c4      	lsls	r4, r0, #31
 800ff1a:	d508      	bpl.n	800ff2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ff1c:	440b      	add	r3, r1
 800ff1e:	3a01      	subs	r2, #1
 800ff20:	428b      	cmp	r3, r1
 800ff22:	d93e      	bls.n	800ffa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff24:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ff28:	f801 0b01 	strb.w	r0, [r1], #1
 800ff2c:	e7f8      	b.n	800ff20 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ff2e:	07d0      	lsls	r0, r2, #31
 800ff30:	bf42      	ittt	mi
 800ff32:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ff36:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ff3a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ff3e:	2b01      	cmp	r3, #1
 800ff40:	d911      	bls.n	800ff66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ff42:	ea81 0402 	eor.w	r4, r1, r2
 800ff46:	07a4      	lsls	r4, r4, #30
 800ff48:	4610      	mov	r0, r2
 800ff4a:	d022      	beq.n	800ff92 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ff4c:	f023 0401 	bic.w	r4, r3, #1
 800ff50:	440c      	add	r4, r1
 800ff52:	428c      	cmp	r4, r1
 800ff54:	4602      	mov	r2, r0
 800ff56:	d904      	bls.n	800ff62 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ff58:	8812      	ldrh	r2, [r2, #0]
 800ff5a:	f821 2b02 	strh.w	r2, [r1], #2
 800ff5e:	3002      	adds	r0, #2
 800ff60:	e7f7      	b.n	800ff52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ff62:	f003 0301 	and.w	r3, r3, #1
 800ff66:	f023 0003 	bic.w	r0, r3, #3
 800ff6a:	4408      	add	r0, r1
 800ff6c:	4288      	cmp	r0, r1
 800ff6e:	4614      	mov	r4, r2
 800ff70:	d904      	bls.n	800ff7c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ff72:	6824      	ldr	r4, [r4, #0]
 800ff74:	f841 4b04 	str.w	r4, [r1], #4
 800ff78:	3204      	adds	r2, #4
 800ff7a:	e7f7      	b.n	800ff6c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ff7c:	f003 0303 	and.w	r3, r3, #3
 800ff80:	440b      	add	r3, r1
 800ff82:	3a01      	subs	r2, #1
 800ff84:	428b      	cmp	r3, r1
 800ff86:	d90c      	bls.n	800ffa2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff88:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ff8c:	f801 0b01 	strb.w	r0, [r1], #1
 800ff90:	e7f8      	b.n	800ff84 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800ff92:	0790      	lsls	r0, r2, #30
 800ff94:	d0e7      	beq.n	800ff66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ff96:	f832 0b02 	ldrh.w	r0, [r2], #2
 800ff9a:	f821 0b02 	strh.w	r0, [r1], #2
 800ff9e:	3b02      	subs	r3, #2
 800ffa0:	e7e1      	b.n	800ff66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ffa2:	2001      	movs	r0, #1
 800ffa4:	bd10      	pop	{r4, pc}

0800ffa6 <_ZN8touchgfx3HAL7noTouchEv>:
 800ffa6:	b510      	push	{r4, lr}
 800ffa8:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800ffac:	4604      	mov	r4, r0
 800ffae:	b153      	cbz	r3, 800ffc6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800ffb0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800ffb4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800ffb8:	2101      	movs	r1, #1
 800ffba:	301c      	adds	r0, #28
 800ffbc:	f015 fe24 	bl	8025c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ffc0:	2300      	movs	r3, #0
 800ffc2:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ffc6:	bd10      	pop	{r4, pc}

0800ffc8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800ffc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ffcc:	b085      	sub	sp, #20
 800ffce:	ad04      	add	r5, sp, #16
 800ffd0:	4604      	mov	r4, r0
 800ffd2:	2000      	movs	r0, #0
 800ffd4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800ffd8:	69a0      	ldr	r0, [r4, #24]
 800ffda:	6806      	ldr	r6, [r0, #0]
 800ffdc:	9501      	str	r5, [sp, #4]
 800ffde:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800ffe2:	9500      	str	r5, [sp, #0]
 800ffe4:	6835      	ldr	r5, [r6, #0]
 800ffe6:	4699      	mov	r9, r3
 800ffe8:	460f      	mov	r7, r1
 800ffea:	4690      	mov	r8, r2
 800ffec:	47a8      	blx	r5
 800ffee:	4d10      	ldr	r5, [pc, #64]	; (8010030 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fff0:	4606      	mov	r6, r0
 800fff2:	f8a5 9000 	strh.w	r9, [r5]
 800fff6:	f7f3 fc41 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 800fffa:	6803      	ldr	r3, [r0, #0]
 800fffc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fffe:	4798      	blx	r3
 8010000:	b128      	cbz	r0, 801000e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010002:	2801      	cmp	r0, #1
 8010004:	d00b      	beq.n	801001e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010006:	4630      	mov	r0, r6
 8010008:	b005      	add	sp, #20
 801000a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801000e:	882b      	ldrh	r3, [r5, #0]
 8010010:	fb08 7203 	mla	r2, r8, r3, r7
 8010014:	9b03      	ldr	r3, [sp, #12]
 8010016:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801001a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801001c:	e7f3      	b.n	8010006 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801001e:	882a      	ldrh	r2, [r5, #0]
 8010020:	9b03      	ldr	r3, [sp, #12]
 8010022:	fb08 7202 	mla	r2, r8, r2, r7
 8010026:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801002a:	1a9a      	subs	r2, r3, r2
 801002c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801002e:	e7ea      	b.n	8010006 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010030:	20012dae 	.word	0x20012dae

08010034 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010034:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010036:	b08b      	sub	sp, #44	; 0x2c
 8010038:	4617      	mov	r7, r2
 801003a:	4604      	mov	r4, r0
 801003c:	460e      	mov	r6, r1
 801003e:	461d      	mov	r5, r3
 8010040:	f7f3 fc1c 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8010044:	6803      	ldr	r3, [r0, #0]
 8010046:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010048:	4798      	blx	r3
 801004a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 801004e:	9007      	str	r0, [sp, #28]
 8010050:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010054:	4b0d      	ldr	r3, [pc, #52]	; (801008c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010056:	6822      	ldr	r2, [r4, #0]
 8010058:	881b      	ldrh	r3, [r3, #0]
 801005a:	9306      	str	r3, [sp, #24]
 801005c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8010060:	9305      	str	r3, [sp, #20]
 8010062:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8010066:	9304      	str	r3, [sp, #16]
 8010068:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801006c:	9303      	str	r3, [sp, #12]
 801006e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010072:	9302      	str	r3, [sp, #8]
 8010074:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010078:	e9cd 5300 	strd	r5, r3, [sp]
 801007c:	4631      	mov	r1, r6
 801007e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8010080:	463b      	mov	r3, r7
 8010082:	2200      	movs	r2, #0
 8010084:	4620      	mov	r0, r4
 8010086:	47a8      	blx	r5
 8010088:	b00b      	add	sp, #44	; 0x2c
 801008a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801008c:	20012dae 	.word	0x20012dae

08010090 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010090:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010094:	4698      	mov	r8, r3
 8010096:	6803      	ldr	r3, [r0, #0]
 8010098:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 801009a:	4b15      	ldr	r3, [pc, #84]	; (80100f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 801009c:	b08b      	sub	sp, #44	; 0x2c
 801009e:	4617      	mov	r7, r2
 80100a0:	f8b3 9000 	ldrh.w	r9, [r3]
 80100a4:	460e      	mov	r6, r1
 80100a6:	4604      	mov	r4, r0
 80100a8:	f7f3 fbe8 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80100ac:	6803      	ldr	r3, [r0, #0]
 80100ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80100b0:	4798      	blx	r3
 80100b2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80100b6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80100ba:	2302      	movs	r3, #2
 80100bc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 80100c0:	2301      	movs	r3, #1
 80100c2:	9305      	str	r3, [sp, #20]
 80100c4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80100c8:	9304      	str	r3, [sp, #16]
 80100ca:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80100ce:	9303      	str	r3, [sp, #12]
 80100d0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80100d4:	9302      	str	r3, [sp, #8]
 80100d6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80100da:	2200      	movs	r2, #0
 80100dc:	e9cd 8300 	strd	r8, r3, [sp]
 80100e0:	4631      	mov	r1, r6
 80100e2:	463b      	mov	r3, r7
 80100e4:	4620      	mov	r0, r4
 80100e6:	47a8      	blx	r5
 80100e8:	b00b      	add	sp, #44	; 0x2c
 80100ea:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80100ee:	bf00      	nop
 80100f0:	20012dae 	.word	0x20012dae

080100f4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 80100f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80100f8:	4698      	mov	r8, r3
 80100fa:	6803      	ldr	r3, [r0, #0]
 80100fc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 80100fe:	4b11      	ldr	r3, [pc, #68]	; (8010144 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010100:	b087      	sub	sp, #28
 8010102:	f8b3 9000 	ldrh.w	r9, [r3]
 8010106:	460e      	mov	r6, r1
 8010108:	4617      	mov	r7, r2
 801010a:	4604      	mov	r4, r0
 801010c:	f7f3 fbb6 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8010110:	6803      	ldr	r3, [r0, #0]
 8010112:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010114:	4798      	blx	r3
 8010116:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801011a:	f8cd 900c 	str.w	r9, [sp, #12]
 801011e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010122:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010126:	9302      	str	r3, [sp, #8]
 8010128:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801012c:	9301      	str	r3, [sp, #4]
 801012e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010132:	9300      	str	r3, [sp, #0]
 8010134:	463a      	mov	r2, r7
 8010136:	4643      	mov	r3, r8
 8010138:	4631      	mov	r1, r6
 801013a:	4620      	mov	r0, r4
 801013c:	47a8      	blx	r5
 801013e:	b007      	add	sp, #28
 8010140:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010144:	20012dae 	.word	0x20012dae

08010148 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8010148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801014c:	4604      	mov	r4, r0
 801014e:	b08f      	sub	sp, #60	; 0x3c
 8010150:	4610      	mov	r0, r2
 8010152:	460d      	mov	r5, r1
 8010154:	4691      	mov	r9, r2
 8010156:	461e      	mov	r6, r3
 8010158:	f008 f8f0 	bl	801833c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801015c:	2800      	cmp	r0, #0
 801015e:	f000 809d 	beq.w	801029c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8010162:	6823      	ldr	r3, [r4, #0]
 8010164:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010300 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8010168:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801016a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010304 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801016e:	4f61      	ldr	r7, [pc, #388]	; (80102f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010170:	4620      	mov	r0, r4
 8010172:	4798      	blx	r3
 8010174:	6823      	ldr	r3, [r4, #0]
 8010176:	4620      	mov	r0, r4
 8010178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801017a:	4798      	blx	r3
 801017c:	f8bb 3000 	ldrh.w	r3, [fp]
 8010180:	9301      	str	r3, [sp, #4]
 8010182:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8010186:	f8ba 3000 	ldrh.w	r3, [sl]
 801018a:	9302      	str	r3, [sp, #8]
 801018c:	883b      	ldrh	r3, [r7, #0]
 801018e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8010192:	9303      	str	r3, [sp, #12]
 8010194:	4b58      	ldr	r3, [pc, #352]	; (80102f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010196:	9305      	str	r3, [sp, #20]
 8010198:	881a      	ldrh	r2, [r3, #0]
 801019a:	9204      	str	r2, [sp, #16]
 801019c:	4640      	mov	r0, r8
 801019e:	f008 f961 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80101a2:	8038      	strh	r0, [r7, #0]
 80101a4:	4640      	mov	r0, r8
 80101a6:	f008 f991 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80101aa:	9b05      	ldr	r3, [sp, #20]
 80101ac:	b280      	uxth	r0, r0
 80101ae:	8018      	strh	r0, [r3, #0]
 80101b0:	4b52      	ldr	r3, [pc, #328]	; (80102fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 80101b2:	781b      	ldrb	r3, [r3, #0]
 80101b4:	2b00      	cmp	r3, #0
 80101b6:	d174      	bne.n	80102a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 80101b8:	883b      	ldrh	r3, [r7, #0]
 80101ba:	f8ab 3000 	strh.w	r3, [fp]
 80101be:	f8aa 0000 	strh.w	r0, [sl]
 80101c2:	4648      	mov	r0, r9
 80101c4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 80101c8:	f008 f8b8 	bl	801833c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80101cc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 80101d0:	2200      	movs	r2, #0
 80101d2:	4611      	mov	r1, r2
 80101d4:	4628      	mov	r0, r5
 80101d6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80101da:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80101de:	f7f2 fa92 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 80101e2:	2301      	movs	r3, #1
 80101e4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 80101e8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 80101ec:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80101f0:	2b00      	cmp	r3, #0
 80101f2:	dd5c      	ble.n	80102ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80101f4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	dd58      	ble.n	80102ae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80101fc:	462a      	mov	r2, r5
 80101fe:	ab0a      	add	r3, sp, #40	; 0x28
 8010200:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010204:	6851      	ldr	r1, [r2, #4]
 8010206:	c303      	stmia	r3!, {r0, r1}
 8010208:	4631      	mov	r1, r6
 801020a:	a80a      	add	r0, sp, #40	; 0x28
 801020c:	f7ff fc06 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8010210:	4b38      	ldr	r3, [pc, #224]	; (80102f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010212:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010216:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801021a:	2100      	movs	r1, #0
 801021c:	aa0a      	add	r2, sp, #40	; 0x28
 801021e:	4b36      	ldr	r3, [pc, #216]	; (80102f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010220:	910c      	str	r1, [sp, #48]	; 0x30
 8010222:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010226:	f9b3 3000 	ldrsh.w	r3, [r3]
 801022a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801022e:	ab08      	add	r3, sp, #32
 8010230:	e883 0003 	stmia.w	r3, {r0, r1}
 8010234:	4618      	mov	r0, r3
 8010236:	a90c      	add	r1, sp, #48	; 0x30
 8010238:	f7ff fbf0 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801023c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801023e:	2b00      	cmp	r3, #0
 8010240:	d13c      	bne.n	80102bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8010242:	2000      	movs	r0, #0
 8010244:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 8010248:	2600      	movs	r6, #0
 801024a:	682a      	ldr	r2, [r5, #0]
 801024c:	696b      	ldr	r3, [r5, #20]
 801024e:	616e      	str	r6, [r5, #20]
 8010250:	9305      	str	r3, [sp, #20]
 8010252:	6892      	ldr	r2, [r2, #8]
 8010254:	a908      	add	r1, sp, #32
 8010256:	4628      	mov	r0, r5
 8010258:	4790      	blx	r2
 801025a:	9b05      	ldr	r3, [sp, #20]
 801025c:	616b      	str	r3, [r5, #20]
 801025e:	4652      	mov	r2, sl
 8010260:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010264:	4649      	mov	r1, r9
 8010266:	4628      	mov	r0, r5
 8010268:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801026c:	f7f2 fa4b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8010270:	4b23      	ldr	r3, [pc, #140]	; (8010300 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010272:	9a01      	ldr	r2, [sp, #4]
 8010274:	801a      	strh	r2, [r3, #0]
 8010276:	4b23      	ldr	r3, [pc, #140]	; (8010304 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010278:	9a02      	ldr	r2, [sp, #8]
 801027a:	801a      	strh	r2, [r3, #0]
 801027c:	4b1d      	ldr	r3, [pc, #116]	; (80102f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801027e:	9a03      	ldr	r2, [sp, #12]
 8010280:	801a      	strh	r2, [r3, #0]
 8010282:	4b1d      	ldr	r3, [pc, #116]	; (80102f8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010284:	9a04      	ldr	r2, [sp, #16]
 8010286:	801a      	strh	r2, [r3, #0]
 8010288:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801028c:	6823      	ldr	r3, [r4, #0]
 801028e:	4620      	mov	r0, r4
 8010290:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010292:	4798      	blx	r3
 8010294:	6823      	ldr	r3, [r4, #0]
 8010296:	4620      	mov	r0, r4
 8010298:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801029a:	4798      	blx	r3
 801029c:	b00f      	add	sp, #60	; 0x3c
 801029e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102a2:	883b      	ldrh	r3, [r7, #0]
 80102a4:	f8ab 0000 	strh.w	r0, [fp]
 80102a8:	f8aa 3000 	strh.w	r3, [sl]
 80102ac:	e789      	b.n	80101c2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 80102ae:	462a      	mov	r2, r5
 80102b0:	ab0a      	add	r3, sp, #40	; 0x28
 80102b2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80102b6:	6851      	ldr	r1, [r2, #4]
 80102b8:	c303      	stmia	r3!, {r0, r1}
 80102ba:	e7a9      	b.n	8010210 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 80102bc:	a807      	add	r0, sp, #28
 80102be:	f008 fa41 	bl	8018744 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80102c2:	4606      	mov	r6, r0
 80102c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80102c6:	6803      	ldr	r3, [r0, #0]
 80102c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102ca:	4798      	blx	r3
 80102cc:	4286      	cmp	r6, r0
 80102ce:	d1b8      	bne.n	8010242 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80102d0:	f7f3 fad4 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80102d4:	6803      	ldr	r3, [r0, #0]
 80102d6:	4606      	mov	r6, r0
 80102d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80102da:	9305      	str	r3, [sp, #20]
 80102dc:	a807      	add	r0, sp, #28
 80102de:	f008 fa31 	bl	8018744 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80102e2:	9b05      	ldr	r3, [sp, #20]
 80102e4:	4601      	mov	r1, r0
 80102e6:	4630      	mov	r0, r6
 80102e8:	4798      	blx	r3
 80102ea:	f080 0001 	eor.w	r0, r0, #1
 80102ee:	b2c0      	uxtb	r0, r0
 80102f0:	e7a8      	b.n	8010244 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80102f2:	bf00      	nop
 80102f4:	20012da8 	.word	0x20012da8
 80102f8:	20012daa 	.word	0x20012daa
 80102fc:	20012dac 	.word	0x20012dac
 8010300:	20012dae 	.word	0x20012dae
 8010304:	20012db0 	.word	0x20012db0

08010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010308:	b510      	push	{r4, lr}
 801030a:	4b07      	ldr	r3, [pc, #28]	; (8010328 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801030c:	781b      	ldrb	r3, [r3, #0]
 801030e:	4604      	mov	r4, r0
 8010310:	b13b      	cbz	r3, 8010322 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010312:	6803      	ldr	r3, [r0, #0]
 8010314:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010316:	4798      	blx	r3
 8010318:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801031a:	4283      	cmp	r3, r0
 801031c:	d101      	bne.n	8010322 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801031e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010320:	bd10      	pop	{r4, pc}
 8010322:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010324:	e7fc      	b.n	8010320 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010326:	bf00      	nop
 8010328:	20012db2 	.word	0x20012db2

0801032c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801032c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010330:	b08a      	sub	sp, #40	; 0x28
 8010332:	461d      	mov	r5, r3
 8010334:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010338:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801033c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010340:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010344:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010348:	f8ad 301a 	strh.w	r3, [sp, #26]
 801034c:	2400      	movs	r4, #0
 801034e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010352:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010356:	f8ad 301c 	strh.w	r3, [sp, #28]
 801035a:	4690      	mov	r8, r2
 801035c:	4607      	mov	r7, r0
 801035e:	9404      	str	r4, [sp, #16]
 8010360:	f88d 4020 	strb.w	r4, [sp, #32]
 8010364:	f7ff ffd0 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010368:	fb06 8505 	mla	r5, r6, r5, r8
 801036c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010370:	6878      	ldr	r0, [r7, #4]
 8010372:	9505      	str	r5, [sp, #20]
 8010374:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010378:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801037c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010380:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010384:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010388:	6803      	ldr	r3, [r0, #0]
 801038a:	a901      	add	r1, sp, #4
 801038c:	685b      	ldr	r3, [r3, #4]
 801038e:	4798      	blx	r3
 8010390:	b00a      	add	sp, #40	; 0x28
 8010392:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010396 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010396:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801039a:	b08b      	sub	sp, #44	; 0x2c
 801039c:	2400      	movs	r4, #0
 801039e:	461d      	mov	r5, r3
 80103a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80103a4:	4688      	mov	r8, r1
 80103a6:	4691      	mov	r9, r2
 80103a8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80103ac:	9404      	str	r4, [sp, #16]
 80103ae:	4607      	mov	r7, r0
 80103b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80103b4:	f7ff ffa8 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80103b8:	fb06 9505 	mla	r5, r6, r5, r9
 80103bc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80103c0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80103c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80103c8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80103cc:	6878      	ldr	r0, [r7, #4]
 80103ce:	9505      	str	r5, [sp, #20]
 80103d0:	f8ad 301a 	strh.w	r3, [sp, #26]
 80103d4:	f8ad 401c 	strh.w	r4, [sp, #28]
 80103d8:	f8ad 601e 	strh.w	r6, [sp, #30]
 80103dc:	f8cd 8010 	str.w	r8, [sp, #16]
 80103e0:	f8ad 4020 	strh.w	r4, [sp, #32]
 80103e4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80103e8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80103ec:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80103f0:	6803      	ldr	r3, [r0, #0]
 80103f2:	a901      	add	r1, sp, #4
 80103f4:	685b      	ldr	r3, [r3, #4]
 80103f6:	4798      	blx	r3
 80103f8:	b00b      	add	sp, #44	; 0x2c
 80103fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010400 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010404:	b08a      	sub	sp, #40	; 0x28
 8010406:	4698      	mov	r8, r3
 8010408:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801040c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010410:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010414:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010418:	2300      	movs	r3, #0
 801041a:	2d0b      	cmp	r5, #11
 801041c:	4606      	mov	r6, r0
 801041e:	9304      	str	r3, [sp, #16]
 8010420:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010424:	d138      	bne.n	8010498 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010426:	2380      	movs	r3, #128	; 0x80
 8010428:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801042c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010430:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010434:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010438:	f8ad 301a 	strh.w	r3, [sp, #26]
 801043c:	f88d 0020 	strb.w	r0, [sp, #32]
 8010440:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010444:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010448:	4630      	mov	r0, r6
 801044a:	9203      	str	r2, [sp, #12]
 801044c:	f7ff ff5c 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010450:	2c0b      	cmp	r4, #11
 8010452:	bf98      	it	ls
 8010454:	4b1b      	ldrls	r3, [pc, #108]	; (80104c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010456:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801045a:	bf98      	it	ls
 801045c:	5d19      	ldrbls	r1, [r3, r4]
 801045e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010462:	bf88      	it	hi
 8010464:	2100      	movhi	r1, #0
 8010466:	fb02 8307 	mla	r3, r2, r7, r8
 801046a:	10c9      	asrs	r1, r1, #3
 801046c:	fb01 0003 	mla	r0, r1, r3, r0
 8010470:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010474:	9005      	str	r0, [sp, #20]
 8010476:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801047a:	6870      	ldr	r0, [r6, #4]
 801047c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010480:	2300      	movs	r3, #0
 8010482:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010486:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801048a:	6803      	ldr	r3, [r0, #0]
 801048c:	a901      	add	r1, sp, #4
 801048e:	685b      	ldr	r3, [r3, #4]
 8010490:	4798      	blx	r3
 8010492:	b00a      	add	sp, #40	; 0x28
 8010494:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010498:	2d02      	cmp	r5, #2
 801049a:	d109      	bne.n	80104b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801049c:	28ff      	cmp	r0, #255	; 0xff
 801049e:	d105      	bne.n	80104ac <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 80104a0:	f1bc 0f00 	cmp.w	ip, #0
 80104a4:	bf14      	ite	ne
 80104a6:	2340      	movne	r3, #64	; 0x40
 80104a8:	2320      	moveq	r3, #32
 80104aa:	e7bd      	b.n	8010428 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80104ac:	2340      	movs	r3, #64	; 0x40
 80104ae:	e7bb      	b.n	8010428 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80104b0:	28ff      	cmp	r0, #255	; 0xff
 80104b2:	d105      	bne.n	80104c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 80104b4:	f1bc 0f00 	cmp.w	ip, #0
 80104b8:	bf14      	ite	ne
 80104ba:	2304      	movne	r3, #4
 80104bc:	2301      	moveq	r3, #1
 80104be:	e7b3      	b.n	8010428 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80104c0:	2304      	movs	r3, #4
 80104c2:	e7b1      	b.n	8010428 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80104c4:	0802db6c 	.word	0x0802db6c

080104c8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80104c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104cc:	b08b      	sub	sp, #44	; 0x2c
 80104ce:	461d      	mov	r5, r3
 80104d0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 80104d4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 80104d8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 80104dc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80104e0:	bf14      	ite	ne
 80104e2:	2308      	movne	r3, #8
 80104e4:	2302      	moveq	r3, #2
 80104e6:	2400      	movs	r4, #0
 80104e8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80104ec:	4688      	mov	r8, r1
 80104ee:	4693      	mov	fp, r2
 80104f0:	9404      	str	r4, [sp, #16]
 80104f2:	4607      	mov	r7, r0
 80104f4:	f7ff ff08 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80104f8:	2e0b      	cmp	r6, #11
 80104fa:	bf98      	it	ls
 80104fc:	4b15      	ldrls	r3, [pc, #84]	; (8010554 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80104fe:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010502:	bf98      	it	ls
 8010504:	5d9c      	ldrbls	r4, [r3, r6]
 8010506:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801050a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801050e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010512:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010516:	f8ad 301a 	strh.w	r3, [sp, #26]
 801051a:	10e4      	asrs	r4, r4, #3
 801051c:	fb04 0405 	mla	r4, r4, r5, r0
 8010520:	2300      	movs	r3, #0
 8010522:	6878      	ldr	r0, [r7, #4]
 8010524:	9405      	str	r4, [sp, #20]
 8010526:	f8ad 301c 	strh.w	r3, [sp, #28]
 801052a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801052e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010532:	f88d 9020 	strb.w	r9, [sp, #32]
 8010536:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801053a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801053e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8010542:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8010546:	6803      	ldr	r3, [r0, #0]
 8010548:	a901      	add	r1, sp, #4
 801054a:	685b      	ldr	r3, [r3, #4]
 801054c:	4798      	blx	r3
 801054e:	b00b      	add	sp, #44	; 0x2c
 8010550:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010554:	0802db6c 	.word	0x0802db6c

08010558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010558:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801055c:	461e      	mov	r6, r3
 801055e:	4b0a      	ldr	r3, [pc, #40]	; (8010588 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010560:	460f      	mov	r7, r1
 8010562:	881d      	ldrh	r5, [r3, #0]
 8010564:	4690      	mov	r8, r2
 8010566:	f7f3 f989 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 801056a:	6803      	ldr	r3, [r0, #0]
 801056c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801056e:	4798      	blx	r3
 8010570:	280b      	cmp	r0, #11
 8010572:	bf9a      	itte	ls
 8010574:	4b05      	ldrls	r3, [pc, #20]	; (801058c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010576:	5c1c      	ldrbls	r4, [r3, r0]
 8010578:	2400      	movhi	r4, #0
 801057a:	fb08 7005 	mla	r0, r8, r5, r7
 801057e:	10e4      	asrs	r4, r4, #3
 8010580:	fb04 6000 	mla	r0, r4, r0, r6
 8010584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010588:	20012dae 	.word	0x20012dae
 801058c:	0802db6c 	.word	0x0802db6c

08010590 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010590:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010592:	b08b      	sub	sp, #44	; 0x2c
 8010594:	461f      	mov	r7, r3
 8010596:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801059a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801059e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80105a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80105a6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80105aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80105ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80105b2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80105b6:	2500      	movs	r5, #0
 80105b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80105bc:	f88d 3020 	strb.w	r3, [sp, #32]
 80105c0:	4604      	mov	r4, r0
 80105c2:	4616      	mov	r6, r2
 80105c4:	9504      	str	r5, [sp, #16]
 80105c6:	f7ff fe9f 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105ca:	463a      	mov	r2, r7
 80105cc:	4631      	mov	r1, r6
 80105ce:	4603      	mov	r3, r0
 80105d0:	4620      	mov	r0, r4
 80105d2:	f7ff ffc1 	bl	8010558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80105d6:	4b0e      	ldr	r3, [pc, #56]	; (8010610 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80105d8:	9005      	str	r0, [sp, #20]
 80105da:	881b      	ldrh	r3, [r3, #0]
 80105dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 80105e0:	f7f3 f94c 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80105e4:	6803      	ldr	r3, [r0, #0]
 80105e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105e8:	4798      	blx	r3
 80105ea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80105ec:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80105f0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80105f4:	9304      	str	r3, [sp, #16]
 80105f6:	6860      	ldr	r0, [r4, #4]
 80105f8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80105fc:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010600:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010604:	6803      	ldr	r3, [r0, #0]
 8010606:	a901      	add	r1, sp, #4
 8010608:	685b      	ldr	r3, [r3, #4]
 801060a:	4798      	blx	r3
 801060c:	b00b      	add	sp, #44	; 0x2c
 801060e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010610:	20012dae 	.word	0x20012dae

08010614 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010614:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010616:	b08d      	sub	sp, #52	; 0x34
 8010618:	466b      	mov	r3, sp
 801061a:	e883 0006 	stmia.w	r3, {r1, r2}
 801061e:	2300      	movs	r3, #0
 8010620:	9306      	str	r3, [sp, #24]
 8010622:	6803      	ldr	r3, [r0, #0]
 8010624:	f8bd 6000 	ldrh.w	r6, [sp]
 8010628:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801062a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801062e:	2501      	movs	r5, #1
 8010630:	9503      	str	r5, [sp, #12]
 8010632:	4604      	mov	r4, r0
 8010634:	4798      	blx	r3
 8010636:	463a      	mov	r2, r7
 8010638:	4631      	mov	r1, r6
 801063a:	4603      	mov	r3, r0
 801063c:	4620      	mov	r0, r4
 801063e:	f7ff ff8b 	bl	8010558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010642:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8010644:	9307      	str	r3, [sp, #28]
 8010646:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801064a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801064e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010652:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010656:	4b0f      	ldr	r3, [pc, #60]	; (8010694 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010658:	9004      	str	r0, [sp, #16]
 801065a:	881b      	ldrh	r3, [r3, #0]
 801065c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010660:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010664:	f7f3 f90a 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8010668:	6803      	ldr	r3, [r0, #0]
 801066a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801066c:	4798      	blx	r3
 801066e:	23ff      	movs	r3, #255	; 0xff
 8010670:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010674:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010678:	6860      	ldr	r0, [r4, #4]
 801067a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801067e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010682:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010686:	6803      	ldr	r3, [r0, #0]
 8010688:	a903      	add	r1, sp, #12
 801068a:	685b      	ldr	r3, [r3, #4]
 801068c:	4798      	blx	r3
 801068e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010690:	b00d      	add	sp, #52	; 0x34
 8010692:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010694:	20012dae 	.word	0x20012dae

08010698 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801069c:	b08c      	sub	sp, #48	; 0x30
 801069e:	461e      	mov	r6, r3
 80106a0:	466d      	mov	r5, sp
 80106a2:	2300      	movs	r3, #0
 80106a4:	e885 0006 	stmia.w	r5, {r1, r2}
 80106a8:	9306      	str	r3, [sp, #24]
 80106aa:	6803      	ldr	r3, [r0, #0]
 80106ac:	f8bd 7000 	ldrh.w	r7, [sp]
 80106b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80106b2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 80106b6:	2501      	movs	r5, #1
 80106b8:	9503      	str	r5, [sp, #12]
 80106ba:	4604      	mov	r4, r0
 80106bc:	4798      	blx	r3
 80106be:	4642      	mov	r2, r8
 80106c0:	4639      	mov	r1, r7
 80106c2:	4603      	mov	r3, r0
 80106c4:	4620      	mov	r0, r4
 80106c6:	f7ff ff47 	bl	8010558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80106ca:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80106ce:	f8ad 3020 	strh.w	r3, [sp, #32]
 80106d2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80106d6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80106da:	4b11      	ldr	r3, [pc, #68]	; (8010720 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80106dc:	9004      	str	r0, [sp, #16]
 80106de:	881b      	ldrh	r3, [r3, #0]
 80106e0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80106e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80106e6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80106ea:	9607      	str	r6, [sp, #28]
 80106ec:	f7f3 f8c6 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 80106f0:	6803      	ldr	r3, [r0, #0]
 80106f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106f4:	4798      	blx	r3
 80106f6:	23ff      	movs	r3, #255	; 0xff
 80106f8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80106fc:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010700:	6860      	ldr	r0, [r4, #4]
 8010702:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010706:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801070a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801070e:	6803      	ldr	r3, [r0, #0]
 8010710:	a903      	add	r1, sp, #12
 8010712:	685b      	ldr	r3, [r3, #4]
 8010714:	4798      	blx	r3
 8010716:	4630      	mov	r0, r6
 8010718:	b00c      	add	sp, #48	; 0x30
 801071a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801071e:	bf00      	nop
 8010720:	20012dae 	.word	0x20012dae

08010724 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010724:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010726:	b085      	sub	sp, #20
 8010728:	ac02      	add	r4, sp, #8
 801072a:	e884 0006 	stmia.w	r4, {r1, r2}
 801072e:	4605      	mov	r5, r0
 8010730:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010734:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010738:	f7ff fde6 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801073c:	463a      	mov	r2, r7
 801073e:	4603      	mov	r3, r0
 8010740:	4631      	mov	r1, r6
 8010742:	4628      	mov	r0, r5
 8010744:	f7ff ff08 	bl	8010558 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010748:	4a05      	ldr	r2, [pc, #20]	; (8010760 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801074a:	682b      	ldr	r3, [r5, #0]
 801074c:	8812      	ldrh	r2, [r2, #0]
 801074e:	9200      	str	r2, [sp, #0]
 8010750:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010752:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010756:	4603      	mov	r3, r0
 8010758:	4628      	mov	r0, r5
 801075a:	47b0      	blx	r6
 801075c:	b005      	add	sp, #20
 801075e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010760:	20012dae 	.word	0x20012dae

08010764 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010764:	b570      	push	{r4, r5, r6, lr}
 8010766:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801076a:	4604      	mov	r4, r0
 801076c:	b19b      	cbz	r3, 8010796 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801076e:	2002      	movs	r0, #2
 8010770:	f7f0 f88c 	bl	800088c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010774:	2300      	movs	r3, #0
 8010776:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801077a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801077e:	6823      	ldr	r3, [r4, #0]
 8010780:	4620      	mov	r0, r4
 8010782:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010786:	f7ff fdbf 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801078a:	462b      	mov	r3, r5
 801078c:	4601      	mov	r1, r0
 801078e:	4620      	mov	r0, r4
 8010790:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010794:	4718      	bx	r3
 8010796:	bd70      	pop	{r4, r5, r6, pc}

08010798 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010798:	b538      	push	{r3, r4, r5, lr}
 801079a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801079e:	428b      	cmp	r3, r1
 80107a0:	4604      	mov	r4, r0
 80107a2:	460d      	mov	r5, r1
 80107a4:	d006      	beq.n	80107b4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80107a6:	6803      	ldr	r3, [r0, #0]
 80107a8:	b929      	cbnz	r1, 80107b6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80107aa:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 80107ae:	4798      	blx	r3
 80107b0:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 80107b4:	bd38      	pop	{r3, r4, r5, pc}
 80107b6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 80107ba:	e7f8      	b.n	80107ae <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080107bc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80107bc:	b510      	push	{r4, lr}
 80107be:	4b0d      	ldr	r3, [pc, #52]	; (80107f4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80107c0:	781b      	ldrb	r3, [r3, #0]
 80107c2:	4604      	mov	r4, r0
 80107c4:	b95b      	cbnz	r3, 80107de <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80107c6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80107ca:	2b02      	cmp	r3, #2
 80107cc:	d007      	beq.n	80107de <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80107ce:	6840      	ldr	r0, [r0, #4]
 80107d0:	f000 f92c 	bl	8010a2c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80107d4:	b118      	cbz	r0, 80107de <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80107d6:	6862      	ldr	r2, [r4, #4]
 80107d8:	7a53      	ldrb	r3, [r2, #9]
 80107da:	2b00      	cmp	r3, #0
 80107dc:	d0fc      	beq.n	80107d8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80107de:	f7f0 f98d 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80107e2:	4620      	mov	r0, r4
 80107e4:	2100      	movs	r1, #0
 80107e6:	f7ff ffd7 	bl	8010798 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80107ea:	4620      	mov	r0, r4
 80107ec:	f7ff fd8c 	bl	8010308 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80107f0:	bd10      	pop	{r4, pc}
 80107f2:	bf00      	nop
 80107f4:	20012db2 	.word	0x20012db2

080107f8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80107f8:	b570      	push	{r4, r5, r6, lr}
 80107fa:	4604      	mov	r4, r0
 80107fc:	6803      	ldr	r3, [r0, #0]
 80107fe:	b919      	cbnz	r1, 8010808 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010800:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010802:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010806:	4718      	bx	r3
 8010808:	2200      	movs	r2, #0
 801080a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801080e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 8010812:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010814:	4798      	blx	r3
 8010816:	6863      	ldr	r3, [r4, #4]
 8010818:	2101      	movs	r1, #1
 801081a:	4605      	mov	r5, r0
 801081c:	7299      	strb	r1, [r3, #10]
 801081e:	4620      	mov	r0, r4
 8010820:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010824:	f7ff ffb8 	bl	8010798 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010828:	4628      	mov	r0, r5
 801082a:	bd70      	pop	{r4, r5, r6, pc}

0801082c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801082c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010830:	1a13      	subs	r3, r2, r0
 8010832:	4258      	negs	r0, r3
 8010834:	4158      	adcs	r0, r3
 8010836:	4770      	bx	lr

08010838 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010838:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801083c:	1a9b      	subs	r3, r3, r2
 801083e:	2b00      	cmp	r3, #0
 8010840:	bfdc      	itt	le
 8010842:	6882      	ldrle	r2, [r0, #8]
 8010844:	189b      	addle	r3, r3, r2
 8010846:	2b01      	cmp	r3, #1
 8010848:	bfcc      	ite	gt
 801084a:	2000      	movgt	r0, #0
 801084c:	2001      	movle	r0, #1
 801084e:	4770      	bx	lr

08010850 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010850:	6902      	ldr	r2, [r0, #16]
 8010852:	6843      	ldr	r3, [r0, #4]
 8010854:	2024      	movs	r0, #36	; 0x24
 8010856:	fb00 3002 	mla	r0, r0, r2, r3
 801085a:	4770      	bx	lr

0801085c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801085c:	6803      	ldr	r3, [r0, #0]
 801085e:	691b      	ldr	r3, [r3, #16]
 8010860:	4718      	bx	r3

08010862 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010862:	b570      	push	{r4, r5, r6, lr}
 8010864:	2301      	movs	r3, #1
 8010866:	7203      	strb	r3, [r0, #8]
 8010868:	4604      	mov	r4, r0
 801086a:	6840      	ldr	r0, [r0, #4]
 801086c:	6803      	ldr	r3, [r0, #0]
 801086e:	699b      	ldr	r3, [r3, #24]
 8010870:	4798      	blx	r3
 8010872:	6803      	ldr	r3, [r0, #0]
 8010874:	2b40      	cmp	r3, #64	; 0x40
 8010876:	4605      	mov	r5, r0
 8010878:	d00c      	beq.n	8010894 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801087a:	d810      	bhi.n	801089e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801087c:	2b04      	cmp	r3, #4
 801087e:	d01d      	beq.n	80108bc <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010880:	d804      	bhi.n	801088c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010882:	2b01      	cmp	r3, #1
 8010884:	d006      	beq.n	8010894 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010886:	2b02      	cmp	r3, #2
 8010888:	d02c      	beq.n	80108e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801088a:	bd70      	pop	{r4, r5, r6, pc}
 801088c:	2b08      	cmp	r3, #8
 801088e:	d01d      	beq.n	80108cc <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010890:	2b20      	cmp	r3, #32
 8010892:	d1fa      	bne.n	801088a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010894:	6823      	ldr	r3, [r4, #0]
 8010896:	4620      	mov	r0, r4
 8010898:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801089a:	4798      	blx	r3
 801089c:	e013      	b.n	80108c6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801089e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80108a2:	d0f7      	beq.n	8010894 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80108a4:	d804      	bhi.n	80108b0 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80108a6:	2b80      	cmp	r3, #128	; 0x80
 80108a8:	d0f4      	beq.n	8010894 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80108aa:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80108ae:	e7f0      	b.n	8010892 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80108b0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80108b4:	d0ee      	beq.n	8010894 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80108b6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80108ba:	e7e5      	b.n	8010888 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 80108bc:	6823      	ldr	r3, [r4, #0]
 80108be:	7f01      	ldrb	r1, [r0, #28]
 80108c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80108c2:	4620      	mov	r0, r4
 80108c4:	4798      	blx	r3
 80108c6:	6823      	ldr	r3, [r4, #0]
 80108c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80108ca:	e006      	b.n	80108da <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80108cc:	6823      	ldr	r3, [r4, #0]
 80108ce:	7f01      	ldrb	r1, [r0, #28]
 80108d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80108d2:	4620      	mov	r0, r4
 80108d4:	4798      	blx	r3
 80108d6:	6823      	ldr	r3, [r4, #0]
 80108d8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80108da:	4629      	mov	r1, r5
 80108dc:	4620      	mov	r0, r4
 80108de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80108e2:	4718      	bx	r3
 80108e4:	6823      	ldr	r3, [r4, #0]
 80108e6:	4620      	mov	r0, r4
 80108e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80108ea:	4798      	blx	r3
 80108ec:	e7f3      	b.n	80108d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080108ee <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80108ee:	4770      	bx	lr

080108f0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80108f0:	4770      	bx	lr

080108f2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80108f2:	4770      	bx	lr

080108f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80108f4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80108f8:	1ad2      	subs	r2, r2, r3
 80108fa:	2a00      	cmp	r2, #0
 80108fc:	b510      	push	{r4, lr}
 80108fe:	bfdc      	itt	le
 8010900:	6884      	ldrle	r4, [r0, #8]
 8010902:	1912      	addle	r2, r2, r4
 8010904:	2a01      	cmp	r2, #1
 8010906:	dd16      	ble.n	8010936 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010908:	6842      	ldr	r2, [r0, #4]
 801090a:	2424      	movs	r4, #36	; 0x24
 801090c:	fb04 2303 	mla	r3, r4, r3, r2
 8010910:	f101 0220 	add.w	r2, r1, #32
 8010914:	f851 4b04 	ldr.w	r4, [r1], #4
 8010918:	f843 4b04 	str.w	r4, [r3], #4
 801091c:	4291      	cmp	r1, r2
 801091e:	d1f9      	bne.n	8010914 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010920:	780a      	ldrb	r2, [r1, #0]
 8010922:	701a      	strb	r2, [r3, #0]
 8010924:	68c3      	ldr	r3, [r0, #12]
 8010926:	6882      	ldr	r2, [r0, #8]
 8010928:	f3bf 8f5b 	dmb	ish
 801092c:	3301      	adds	r3, #1
 801092e:	429a      	cmp	r2, r3
 8010930:	bfd8      	it	le
 8010932:	1a9b      	suble	r3, r3, r2
 8010934:	60c3      	str	r3, [r0, #12]
 8010936:	bd10      	pop	{r4, pc}

08010938 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010938:	6903      	ldr	r3, [r0, #16]
 801093a:	6882      	ldr	r2, [r0, #8]
 801093c:	f3bf 8f5b 	dmb	ish
 8010940:	3301      	adds	r3, #1
 8010942:	429a      	cmp	r2, r3
 8010944:	bfd8      	it	le
 8010946:	1a9b      	suble	r3, r3, r2
 8010948:	6103      	str	r3, [r0, #16]
 801094a:	4770      	bx	lr

0801094c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801094c:	b570      	push	{r4, r5, r6, lr}
 801094e:	4604      	mov	r4, r0
 8010950:	460e      	mov	r6, r1
 8010952:	6860      	ldr	r0, [r4, #4]
 8010954:	6803      	ldr	r3, [r0, #0]
 8010956:	685b      	ldr	r3, [r3, #4]
 8010958:	4798      	blx	r3
 801095a:	2800      	cmp	r0, #0
 801095c:	d1f9      	bne.n	8010952 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801095e:	4d0d      	ldr	r5, [pc, #52]	; (8010994 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010960:	6828      	ldr	r0, [r5, #0]
 8010962:	6803      	ldr	r3, [r0, #0]
 8010964:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010966:	4798      	blx	r3
 8010968:	f7f0 f8d6 	bl	8000b18 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801096c:	6828      	ldr	r0, [r5, #0]
 801096e:	2101      	movs	r1, #1
 8010970:	f7ff ff12 	bl	8010798 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010974:	6860      	ldr	r0, [r4, #4]
 8010976:	6803      	ldr	r3, [r0, #0]
 8010978:	4631      	mov	r1, r6
 801097a:	689b      	ldr	r3, [r3, #8]
 801097c:	4798      	blx	r3
 801097e:	6823      	ldr	r3, [r4, #0]
 8010980:	4620      	mov	r0, r4
 8010982:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010984:	4798      	blx	r3
 8010986:	6828      	ldr	r0, [r5, #0]
 8010988:	6803      	ldr	r3, [r0, #0]
 801098a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801098e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010990:	4718      	bx	r3
 8010992:	bf00      	nop
 8010994:	20012db4 	.word	0x20012db4

08010998 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010998:	b508      	push	{r3, lr}
 801099a:	f7f0 f8af 	bl	8000afc <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801099e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80109a2:	f7f0 b8b3 	b.w	8000b0c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080109a6 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80109a6:	b510      	push	{r4, lr}
 80109a8:	2114      	movs	r1, #20
 80109aa:	4604      	mov	r4, r0
 80109ac:	f018 f9bf 	bl	8028d2e <_ZdlPvj>
 80109b0:	4620      	mov	r0, r4
 80109b2:	bd10      	pop	{r4, pc}

080109b4 <_ZN8touchgfx13DMA_Interface5startEv>:
 80109b4:	b510      	push	{r4, lr}
 80109b6:	4604      	mov	r4, r0
 80109b8:	6840      	ldr	r0, [r0, #4]
 80109ba:	6803      	ldr	r3, [r0, #0]
 80109bc:	681b      	ldr	r3, [r3, #0]
 80109be:	4798      	blx	r3
 80109c0:	b948      	cbnz	r0, 80109d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80109c2:	7a63      	ldrb	r3, [r4, #9]
 80109c4:	b13b      	cbz	r3, 80109d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80109c6:	7a23      	ldrb	r3, [r4, #8]
 80109c8:	b92b      	cbnz	r3, 80109d6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80109ca:	6823      	ldr	r3, [r4, #0]
 80109cc:	4620      	mov	r0, r4
 80109ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80109d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80109d4:	4718      	bx	r3
 80109d6:	bd10      	pop	{r4, pc}

080109d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80109d8:	b570      	push	{r4, r5, r6, lr}
 80109da:	4604      	mov	r4, r0
 80109dc:	6840      	ldr	r0, [r0, #4]
 80109de:	6803      	ldr	r3, [r0, #0]
 80109e0:	681b      	ldr	r3, [r3, #0]
 80109e2:	4798      	blx	r3
 80109e4:	4605      	mov	r5, r0
 80109e6:	b930      	cbnz	r0, 80109f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80109e8:	7a23      	ldrb	r3, [r4, #8]
 80109ea:	b123      	cbz	r3, 80109f6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80109ec:	6860      	ldr	r0, [r4, #4]
 80109ee:	6803      	ldr	r3, [r0, #0]
 80109f0:	695b      	ldr	r3, [r3, #20]
 80109f2:	4798      	blx	r3
 80109f4:	7225      	strb	r5, [r4, #8]
 80109f6:	6860      	ldr	r0, [r4, #4]
 80109f8:	6803      	ldr	r3, [r0, #0]
 80109fa:	681b      	ldr	r3, [r3, #0]
 80109fc:	4798      	blx	r3
 80109fe:	b928      	cbnz	r0, 8010a0c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010a00:	6823      	ldr	r3, [r4, #0]
 8010a02:	4620      	mov	r0, r4
 8010a04:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a06:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a0a:	4718      	bx	r3
 8010a0c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a10:	f7f0 b88a 	b.w	8000b28 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010a14 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010a14:	b510      	push	{r4, lr}
 8010a16:	4c04      	ldr	r4, [pc, #16]	; (8010a28 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010a18:	6082      	str	r2, [r0, #8]
 8010a1a:	2200      	movs	r2, #0
 8010a1c:	e9c0 4100 	strd	r4, r1, [r0]
 8010a20:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010a24:	bd10      	pop	{r4, pc}
 8010a26:	bf00      	nop
 8010a28:	0802db80 	.word	0x0802db80

08010a2c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010a2c:	6840      	ldr	r0, [r0, #4]
 8010a2e:	6803      	ldr	r3, [r0, #0]
 8010a30:	681b      	ldr	r3, [r3, #0]
 8010a32:	4718      	bx	r3

08010a34 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010a34:	4b06      	ldr	r3, [pc, #24]	; (8010a50 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010a36:	60c1      	str	r1, [r0, #12]
 8010a38:	094a      	lsrs	r2, r1, #5
 8010a3a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010a3e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010a42:	4313      	orrs	r3, r2
 8010a44:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010a48:	4319      	orrs	r1, r3
 8010a4a:	8201      	strh	r1, [r0, #16]
 8010a4c:	4770      	bx	lr
 8010a4e:	bf00      	nop
 8010a50:	fffff800 	.word	0xfffff800

08010a54 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010a54:	f1a0 0008 	sub.w	r0, r0, #8
 8010a58:	e7ec      	b.n	8010a34 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010a5a:	bf00      	nop

08010a5c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010a5c:	b508      	push	{r3, lr}
 8010a5e:	4b05      	ldr	r3, [pc, #20]	; (8010a74 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010a60:	6818      	ldr	r0, [r3, #0]
 8010a62:	6803      	ldr	r3, [r0, #0]
 8010a64:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010a68:	4798      	blx	r3
 8010a6a:	1e43      	subs	r3, r0, #1
 8010a6c:	4258      	negs	r0, r3
 8010a6e:	4158      	adcs	r0, r3
 8010a70:	bd08      	pop	{r3, pc}
 8010a72:	bf00      	nop
 8010a74:	20012db4 	.word	0x20012db4

08010a78 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010a78:	4770      	bx	lr

08010a7a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010a7a:	3808      	subs	r0, #8
 8010a7c:	4770      	bx	lr

08010a7e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010a7e:	b430      	push	{r4, r5}
 8010a80:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010a84:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010a88:	8a02      	ldrh	r2, [r0, #16]
 8010a8a:	9202      	str	r2, [sp, #8]
 8010a8c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010a90:	68c2      	ldr	r2, [r0, #12]
 8010a92:	4629      	mov	r1, r5
 8010a94:	4620      	mov	r0, r4
 8010a96:	bc30      	pop	{r4, r5}
 8010a98:	f7f0 bb08 	b.w	80010ac <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010a9c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010a9c:	f7f0 bb04 	b.w	80010a8 <_ZN8touchgfx5paint8tearDownEv>

08010aa0 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010aa0:	b510      	push	{r4, lr}
 8010aa2:	2114      	movs	r1, #20
 8010aa4:	4604      	mov	r4, r0
 8010aa6:	f018 f942 	bl	8028d2e <_ZdlPvj>
 8010aaa:	4620      	mov	r0, r4
 8010aac:	bd10      	pop	{r4, pc}

08010aae <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010aae:	f1a0 0008 	sub.w	r0, r0, #8
 8010ab2:	e7f5      	b.n	8010aa0 <_ZN8touchgfx13PainterRGB565D0Ev>

08010ab4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010ab4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010ab6:	6803      	ldr	r3, [r0, #0]
 8010ab8:	460d      	mov	r5, r1
 8010aba:	4604      	mov	r4, r0
 8010abc:	4601      	mov	r1, r0
 8010abe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010ac0:	a802      	add	r0, sp, #8
 8010ac2:	4798      	blx	r3
 8010ac4:	6828      	ldr	r0, [r5, #0]
 8010ac6:	6869      	ldr	r1, [r5, #4]
 8010ac8:	466b      	mov	r3, sp
 8010aca:	c303      	stmia	r3!, {r0, r1}
 8010acc:	4668      	mov	r0, sp
 8010ace:	4619      	mov	r1, r3
 8010ad0:	f7fe ffa4 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8010ad4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010ad6:	b188      	cbz	r0, 8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010ad8:	6803      	ldr	r3, [r0, #0]
 8010ada:	1d21      	adds	r1, r4, #4
 8010adc:	68db      	ldr	r3, [r3, #12]
 8010ade:	4798      	blx	r3
 8010ae0:	b160      	cbz	r0, 8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010ae2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010ae6:	2b00      	cmp	r3, #0
 8010ae8:	dd08      	ble.n	8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010aea:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010aee:	2d00      	cmp	r5, #0
 8010af0:	dd04      	ble.n	8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010af2:	4a2b      	ldr	r2, [pc, #172]	; (8010ba0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010af4:	7812      	ldrb	r2, [r2, #0]
 8010af6:	b11a      	cbz	r2, 8010b00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010af8:	2a01      	cmp	r2, #1
 8010afa:	d029      	beq.n	8010b50 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010afc:	b004      	add	sp, #16
 8010afe:	bd70      	pop	{r4, r5, r6, pc}
 8010b00:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b04:	441d      	add	r5, r3
 8010b06:	b2ad      	uxth	r5, r5
 8010b08:	b22e      	sxth	r6, r5
 8010b0a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010b0e:	42b3      	cmp	r3, r6
 8010b10:	daf4      	bge.n	8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b12:	6823      	ldr	r3, [r4, #0]
 8010b14:	4669      	mov	r1, sp
 8010b16:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010b18:	4620      	mov	r0, r4
 8010b1a:	4798      	blx	r3
 8010b1c:	b940      	cbnz	r0, 8010b30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010b1e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010b22:	2b01      	cmp	r3, #1
 8010b24:	d004      	beq.n	8010b30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010b26:	3301      	adds	r3, #1
 8010b28:	105b      	asrs	r3, r3, #1
 8010b2a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010b2e:	e7f0      	b.n	8010b12 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010b30:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010b34:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b38:	4413      	add	r3, r2
 8010b3a:	b29b      	uxth	r3, r3
 8010b3c:	441a      	add	r2, r3
 8010b3e:	b212      	sxth	r2, r2
 8010b40:	4296      	cmp	r6, r2
 8010b42:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010b46:	dae0      	bge.n	8010b0a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010b48:	1aeb      	subs	r3, r5, r3
 8010b4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010b4e:	e7dc      	b.n	8010b0a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010b50:	f8bd 5000 	ldrh.w	r5, [sp]
 8010b54:	441d      	add	r5, r3
 8010b56:	b2ad      	uxth	r5, r5
 8010b58:	b22e      	sxth	r6, r5
 8010b5a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010b5e:	42b3      	cmp	r3, r6
 8010b60:	dacc      	bge.n	8010afc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b62:	6823      	ldr	r3, [r4, #0]
 8010b64:	4669      	mov	r1, sp
 8010b66:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010b68:	4620      	mov	r0, r4
 8010b6a:	4798      	blx	r3
 8010b6c:	b940      	cbnz	r0, 8010b80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010b6e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010b72:	2b01      	cmp	r3, #1
 8010b74:	d004      	beq.n	8010b80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010b76:	3301      	adds	r3, #1
 8010b78:	105b      	asrs	r3, r3, #1
 8010b7a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010b7e:	e7f0      	b.n	8010b62 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010b80:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010b84:	f8bd 3000 	ldrh.w	r3, [sp]
 8010b88:	4413      	add	r3, r2
 8010b8a:	b29b      	uxth	r3, r3
 8010b8c:	441a      	add	r2, r3
 8010b8e:	b212      	sxth	r2, r2
 8010b90:	4296      	cmp	r6, r2
 8010b92:	f8ad 3000 	strh.w	r3, [sp]
 8010b96:	dae0      	bge.n	8010b5a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010b98:	1aeb      	subs	r3, r5, r3
 8010b9a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010b9e:	e7dc      	b.n	8010b5a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010ba0:	20012dac 	.word	0x20012dac

08010ba4 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010ba4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010ba6:	6803      	ldr	r3, [r0, #0]
 8010ba8:	4604      	mov	r4, r0
 8010baa:	4601      	mov	r1, r0
 8010bac:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010bae:	4668      	mov	r0, sp
 8010bb0:	4798      	blx	r3
 8010bb2:	2100      	movs	r1, #0
 8010bb4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010bb8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010bbc:	9102      	str	r1, [sp, #8]
 8010bbe:	4668      	mov	r0, sp
 8010bc0:	a902      	add	r1, sp, #8
 8010bc2:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010bc6:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010bca:	f7fe ff27 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8010bce:	6823      	ldr	r3, [r4, #0]
 8010bd0:	4669      	mov	r1, sp
 8010bd2:	691b      	ldr	r3, [r3, #16]
 8010bd4:	4620      	mov	r0, r4
 8010bd6:	4798      	blx	r3
 8010bd8:	b004      	add	sp, #16
 8010bda:	bd10      	pop	{r4, pc}

08010bdc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010bdc:	2101      	movs	r1, #1
 8010bde:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010be2:	490b      	ldr	r1, [pc, #44]	; (8010c10 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010be4:	6001      	str	r1, [r0, #0]
 8010be6:	2200      	movs	r2, #0
 8010be8:	21ff      	movs	r1, #255	; 0xff
 8010bea:	8082      	strh	r2, [r0, #4]
 8010bec:	80c2      	strh	r2, [r0, #6]
 8010bee:	8102      	strh	r2, [r0, #8]
 8010bf0:	8142      	strh	r2, [r0, #10]
 8010bf2:	8182      	strh	r2, [r0, #12]
 8010bf4:	81c2      	strh	r2, [r0, #14]
 8010bf6:	8202      	strh	r2, [r0, #16]
 8010bf8:	8242      	strh	r2, [r0, #18]
 8010bfa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010bfe:	61c2      	str	r2, [r0, #28]
 8010c00:	8402      	strh	r2, [r0, #32]
 8010c02:	8442      	strh	r2, [r0, #34]	; 0x22
 8010c04:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010c08:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010c0c:	6282      	str	r2, [r0, #40]	; 0x28
 8010c0e:	4770      	bx	lr
 8010c10:	0802dbdc 	.word	0x0802dbdc

08010c14 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010c14:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010c18:	4602      	mov	r2, r0
 8010c1a:	cb03      	ldmia	r3!, {r0, r1}
 8010c1c:	6010      	str	r0, [r2, #0]
 8010c1e:	6051      	str	r1, [r2, #4]
 8010c20:	4610      	mov	r0, r2
 8010c22:	4770      	bx	lr

08010c24 <_ZN8touchgfx4LineD1Ev>:
 8010c24:	4770      	bx	lr

08010c26 <_ZN8touchgfx4LineD0Ev>:
 8010c26:	b510      	push	{r4, lr}
 8010c28:	2170      	movs	r1, #112	; 0x70
 8010c2a:	4604      	mov	r4, r0
 8010c2c:	f018 f87f 	bl	8028d2e <_ZdlPvj>
 8010c30:	4620      	mov	r0, r4
 8010c32:	bd10      	pop	{r4, pc}

08010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010c34:	b507      	push	{r0, r1, r2, lr}
 8010c36:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010c3a:	ab01      	add	r3, sp, #4
 8010c3c:	6809      	ldr	r1, [r1, #0]
 8010c3e:	6800      	ldr	r0, [r0, #0]
 8010c40:	f005 fab4 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 8010c44:	b003      	add	sp, #12
 8010c46:	f85d fb04 	ldr.w	pc, [sp], #4

08010c4a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010c4a:	6800      	ldr	r0, [r0, #0]
 8010c4c:	2800      	cmp	r0, #0
 8010c4e:	bfb9      	ittee	lt
 8010c50:	2320      	movlt	r3, #32
 8010c52:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010c56:	301f      	addge	r0, #31
 8010c58:	1140      	asrge	r0, r0, #5
 8010c5a:	4770      	bx	lr

08010c5c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010c5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c60:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010c64:	b089      	sub	sp, #36	; 0x24
 8010c66:	4604      	mov	r4, r0
 8010c68:	b353      	cbz	r3, 8010cc0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010c6a:	6803      	ldr	r3, [r0, #0]
 8010c6c:	4601      	mov	r1, r0
 8010c6e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010c70:	a802      	add	r0, sp, #8
 8010c72:	4798      	blx	r3
 8010c74:	2220      	movs	r2, #32
 8010c76:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010c7a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010c7c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010c80:	fb91 f5f2 	sdiv	r5, r1, r2
 8010c84:	1b40      	subs	r0, r0, r5
 8010c86:	2800      	cmp	r0, #0
 8010c88:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010c8a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010c8e:	bfb8      	it	lt
 8010c90:	4240      	neglt	r0, r0
 8010c92:	0076      	lsls	r6, r6, #1
 8010c94:	4286      	cmp	r6, r0
 8010c96:	f8d4 b000 	ldr.w	fp, [r4]
 8010c9a:	dc0c      	bgt.n	8010cb6 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010c9c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010c9e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010ca2:	fb95 f0f2 	sdiv	r0, r5, r2
 8010ca6:	fb98 f7f2 	sdiv	r7, r8, r2
 8010caa:	1bc0      	subs	r0, r0, r7
 8010cac:	2800      	cmp	r0, #0
 8010cae:	bfb8      	it	lt
 8010cb0:	4240      	neglt	r0, r0
 8010cb2:	4286      	cmp	r6, r0
 8010cb4:	dd07      	ble.n	8010cc6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010cb6:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010cba:	a902      	add	r1, sp, #8
 8010cbc:	4620      	mov	r0, r4
 8010cbe:	4798      	blx	r3
 8010cc0:	b009      	add	sp, #36	; 0x24
 8010cc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010cc6:	3301      	adds	r3, #1
 8010cc8:	2002      	movs	r0, #2
 8010cca:	f10d 0920 	add.w	r9, sp, #32
 8010cce:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010cd2:	4103      	asrs	r3, r0
 8010cd4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010cd8:	eb01 060a 	add.w	r6, r1, sl
 8010cdc:	eb08 0705 	add.w	r7, r8, r5
 8010ce0:	fb96 f6f0 	sdiv	r6, r6, r0
 8010ce4:	fb97 f7f0 	sdiv	r7, r7, r0
 8010ce8:	4648      	mov	r0, r9
 8010cea:	9101      	str	r1, [sp, #4]
 8010cec:	b236      	sxth	r6, r6
 8010cee:	b23f      	sxth	r7, r7
 8010cf0:	fb96 f6f2 	sdiv	r6, r6, r2
 8010cf4:	fb97 f7f2 	sdiv	r7, r7, r2
 8010cf8:	f7ff ffa7 	bl	8010c4a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010cfc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010d00:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010d04:	9901      	ldr	r1, [sp, #4]
 8010d06:	4293      	cmp	r3, r2
 8010d08:	fa1f fe87 	uxth.w	lr, r7
 8010d0c:	fa1f fc86 	uxth.w	ip, r6
 8010d10:	eba1 0a0a 	sub.w	sl, r1, sl
 8010d14:	b280      	uxth	r0, r0
 8010d16:	da54      	bge.n	8010dc2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010d18:	ebac 0100 	sub.w	r1, ip, r0
 8010d1c:	b289      	uxth	r1, r1
 8010d1e:	4460      	add	r0, ip
 8010d20:	f1ba 0f00 	cmp.w	sl, #0
 8010d24:	b20e      	sxth	r6, r1
 8010d26:	b280      	uxth	r0, r0
 8010d28:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010d2c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010d30:	da29      	bge.n	8010d86 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010d32:	eba8 0505 	sub.w	r5, r8, r5
 8010d36:	2d00      	cmp	r5, #0
 8010d38:	da2a      	bge.n	8010d90 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010d3a:	fa1f f88a 	uxth.w	r8, sl
 8010d3e:	eba0 0008 	sub.w	r0, r0, r8
 8010d42:	fa1f f58c 	uxth.w	r5, ip
 8010d46:	4443      	add	r3, r8
 8010d48:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010d4c:	1a59      	subs	r1, r3, r1
 8010d4e:	ebae 0005 	sub.w	r0, lr, r5
 8010d52:	f8ad a010 	strh.w	sl, [sp, #16]
 8010d56:	f8ad c012 	strh.w	ip, [sp, #18]
 8010d5a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010d5e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010d62:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010d66:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010d6a:	442a      	add	r2, r5
 8010d6c:	eba2 0e0e 	sub.w	lr, r2, lr
 8010d70:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010d74:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010d78:	a904      	add	r1, sp, #16
 8010d7a:	4620      	mov	r0, r4
 8010d7c:	4798      	blx	r3
 8010d7e:	6823      	ldr	r3, [r4, #0]
 8010d80:	4649      	mov	r1, r9
 8010d82:	691b      	ldr	r3, [r3, #16]
 8010d84:	e79a      	b.n	8010cbc <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010d86:	d003      	beq.n	8010d90 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010d88:	eba8 0505 	sub.w	r5, r8, r5
 8010d8c:	2d00      	cmp	r5, #0
 8010d8e:	dcd4      	bgt.n	8010d3a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010d90:	fa1f f88a 	uxth.w	r8, sl
 8010d94:	4443      	add	r3, r8
 8010d96:	fa1f f58c 	uxth.w	r5, ip
 8010d9a:	1a59      	subs	r1, r3, r1
 8010d9c:	eba0 0008 	sub.w	r0, r0, r8
 8010da0:	ebae 0305 	sub.w	r3, lr, r5
 8010da4:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010da8:	f8ad c012 	strh.w	ip, [sp, #18]
 8010dac:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010db0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010db4:	f8ad a018 	strh.w	sl, [sp, #24]
 8010db8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010dbc:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010dc0:	e7d3      	b.n	8010d6a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010dc2:	ebae 0100 	sub.w	r1, lr, r0
 8010dc6:	b289      	uxth	r1, r1
 8010dc8:	4470      	add	r0, lr
 8010dca:	f1ba 0f00 	cmp.w	sl, #0
 8010dce:	b20f      	sxth	r7, r1
 8010dd0:	b280      	uxth	r0, r0
 8010dd2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010dd6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010dda:	da20      	bge.n	8010e1e <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010ddc:	eba8 0505 	sub.w	r5, r8, r5
 8010de0:	2d00      	cmp	r5, #0
 8010de2:	da21      	bge.n	8010e28 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010de4:	fa1f f88e 	uxth.w	r8, lr
 8010de8:	fa1f f58a 	uxth.w	r5, sl
 8010dec:	4443      	add	r3, r8
 8010dee:	442a      	add	r2, r5
 8010df0:	f8ad e010 	strh.w	lr, [sp, #16]
 8010df4:	1b40      	subs	r0, r0, r5
 8010df6:	ebac 0e08 	sub.w	lr, ip, r8
 8010dfa:	1a51      	subs	r1, r2, r1
 8010dfc:	eba3 0c0c 	sub.w	ip, r3, ip
 8010e00:	f8ad a012 	strh.w	sl, [sp, #18]
 8010e04:	f8ad e014 	strh.w	lr, [sp, #20]
 8010e08:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010e0c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010e10:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010e14:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010e18:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010e1c:	e7aa      	b.n	8010d74 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010e1e:	d003      	beq.n	8010e28 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010e20:	eba8 0505 	sub.w	r5, r8, r5
 8010e24:	2d00      	cmp	r5, #0
 8010e26:	dcdd      	bgt.n	8010de4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010e28:	fa1f f58e 	uxth.w	r5, lr
 8010e2c:	fa1f f88a 	uxth.w	r8, sl
 8010e30:	4442      	add	r2, r8
 8010e32:	442b      	add	r3, r5
 8010e34:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010e38:	1a51      	subs	r1, r2, r1
 8010e3a:	ebac 0705 	sub.w	r7, ip, r5
 8010e3e:	eba0 0008 	sub.w	r0, r0, r8
 8010e42:	eba3 0c0c 	sub.w	ip, r3, ip
 8010e46:	f8ad e010 	strh.w	lr, [sp, #16]
 8010e4a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010e4e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010e52:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010e56:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010e5a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010e5e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010e62:	e787      	b.n	8010d74 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010e64 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010e64:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010e68:	fb90 f2f3 	sdiv	r2, r0, r3
 8010e6c:	fb02 0013 	mls	r0, r2, r3, r0
 8010e70:	2800      	cmp	r0, #0
 8010e72:	bfb8      	it	lt
 8010e74:	18c0      	addlt	r0, r0, r3
 8010e76:	285a      	cmp	r0, #90	; 0x5a
 8010e78:	4b09      	ldr	r3, [pc, #36]	; (8010ea0 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010e7a:	dc02      	bgt.n	8010e82 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010e7c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010e80:	4770      	bx	lr
 8010e82:	28b4      	cmp	r0, #180	; 0xb4
 8010e84:	dc02      	bgt.n	8010e8c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010e86:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010e8a:	e7f7      	b.n	8010e7c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010e8c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010e90:	bfd4      	ite	le
 8010e92:	38b4      	suble	r0, #180	; 0xb4
 8010e94:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010e98:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010e9c:	4240      	negs	r0, r0
 8010e9e:	4770      	bx	lr
 8010ea0:	0802dca8 	.word	0x0802dca8

08010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8010ea4:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 8010ea8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010eaa:	fb90 f2f3 	sdiv	r2, r0, r3
 8010eae:	fb02 0013 	mls	r0, r2, r3, r0
 8010eb2:	2800      	cmp	r0, #0
 8010eb4:	bfb8      	it	lt
 8010eb6:	18c0      	addlt	r0, r0, r3
 8010eb8:	1144      	asrs	r4, r0, #5
 8010eba:	f000 061f 	and.w	r6, r0, #31
 8010ebe:	4620      	mov	r0, r4
 8010ec0:	f7ff ffd0 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 8010ec4:	4605      	mov	r5, r0
 8010ec6:	b90e      	cbnz	r6, 8010ecc <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 8010ec8:	b002      	add	sp, #8
 8010eca:	bd70      	pop	{r4, r5, r6, pc}
 8010ecc:	1c60      	adds	r0, r4, #1
 8010ece:	f7ff ffc9 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 8010ed2:	ab01      	add	r3, sp, #4
 8010ed4:	2220      	movs	r2, #32
 8010ed6:	4631      	mov	r1, r6
 8010ed8:	1b40      	subs	r0, r0, r5
 8010eda:	f005 f967 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 8010ede:	4428      	add	r0, r5
 8010ee0:	e7f2      	b.n	8010ec8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08010ee2 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010ee2:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010ee6:	bf2c      	ite	cs
 8010ee8:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010eec:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010ef0:	2300      	movs	r3, #0
 8010ef2:	1899      	adds	r1, r3, r2
 8010ef4:	4288      	cmp	r0, r1
 8010ef6:	bf24      	itt	cs
 8010ef8:	1853      	addcs	r3, r2, r1
 8010efa:	1a40      	subcs	r0, r0, r1
 8010efc:	0892      	lsrs	r2, r2, #2
 8010efe:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010f02:	d1f6      	bne.n	8010ef2 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010f04:	4618      	mov	r0, r3
 8010f06:	4770      	bx	lr

08010f08 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010f08:	b510      	push	{r4, lr}
 8010f0a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010f0e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010f12:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010f16:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010f1a:	13a4      	asrs	r4, r4, #14
 8010f1c:	139b      	asrs	r3, r3, #14
 8010f1e:	429c      	cmp	r4, r3
 8010f20:	bfb8      	it	lt
 8010f22:	461c      	movlt	r4, r3
 8010f24:	2c01      	cmp	r4, #1
 8010f26:	dd07      	ble.n	8010f38 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010f28:	fb91 f1f4 	sdiv	r1, r1, r4
 8010f2c:	fb90 f0f4 	sdiv	r0, r0, r4
 8010f30:	f7ff ffea 	bl	8010f08 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f34:	4360      	muls	r0, r4
 8010f36:	bd10      	pop	{r4, pc}
 8010f38:	4340      	muls	r0, r0
 8010f3a:	fb01 0001 	mla	r0, r1, r1, r0
 8010f3e:	f7ff ffd0 	bl	8010ee2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010f42:	e7f8      	b.n	8010f36 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

08010f44 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010f44:	2800      	cmp	r0, #0
 8010f46:	b508      	push	{r3, lr}
 8010f48:	da05      	bge.n	8010f56 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010f4a:	4240      	negs	r0, r0
 8010f4c:	f7ff fffa 	bl	8010f44 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010f50:	4240      	negs	r0, r0
 8010f52:	b240      	sxtb	r0, r0
 8010f54:	bd08      	pop	{r3, pc}
 8010f56:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010f5a:	dc11      	bgt.n	8010f80 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010f5c:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010f60:	dd09      	ble.n	8010f76 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010f62:	4340      	muls	r0, r0
 8010f64:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010f68:	f7ff ffbb 	bl	8010ee2 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010f6c:	f7ff ffea 	bl	8010f44 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010f70:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010f74:	e7ed      	b.n	8010f52 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010f76:	3003      	adds	r0, #3
 8010f78:	10c0      	asrs	r0, r0, #3
 8010f7a:	4b02      	ldr	r3, [pc, #8]	; (8010f84 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010f7c:	5618      	ldrsb	r0, [r3, r0]
 8010f7e:	e7e9      	b.n	8010f54 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010f80:	2000      	movs	r0, #0
 8010f82:	e7e7      	b.n	8010f54 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010f84:	0802dc4c 	.word	0x0802dc4c

08010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010f88:	4281      	cmp	r1, r0
 8010f8a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010f8c:	460c      	mov	r4, r1
 8010f8e:	4615      	mov	r5, r2
 8010f90:	dd07      	ble.n	8010fa2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010f92:	4601      	mov	r1, r0
 8010f94:	4620      	mov	r0, r4
 8010f96:	f7ff fff7 	bl	8010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010f9a:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010f9e:	b003      	add	sp, #12
 8010fa0:	bd30      	pop	{r4, r5, pc}
 8010fa2:	f7ff ffb1 	bl	8010f08 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010fa6:	6028      	str	r0, [r5, #0]
 8010fa8:	2800      	cmp	r0, #0
 8010faa:	d0f8      	beq.n	8010f9e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010fac:	4602      	mov	r2, r0
 8010fae:	ab01      	add	r3, sp, #4
 8010fb0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010fb4:	4620      	mov	r0, r4
 8010fb6:	f005 f8f9 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 8010fba:	f7ff ffc3 	bl	8010f44 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010fbe:	e7ee      	b.n	8010f9e <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010fc0 <_ZN8touchgfx4LineC1Ev>:
 8010fc0:	b510      	push	{r4, lr}
 8010fc2:	4604      	mov	r4, r0
 8010fc4:	f7ff fe0a 	bl	8010bdc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010fc8:	4b0c      	ldr	r3, [pc, #48]	; (8010ffc <_ZN8touchgfx4LineC1Ev+0x3c>)
 8010fca:	6023      	str	r3, [r4, #0]
 8010fcc:	2220      	movs	r2, #32
 8010fce:	2300      	movs	r3, #0
 8010fd0:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010fd2:	2212      	movs	r2, #18
 8010fd4:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010fd8:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8010fdc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010fe0:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010fe4:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010fe8:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8010fec:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010ff0:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010ff4:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010ff6:	60a3      	str	r3, [r4, #8]
 8010ff8:	4620      	mov	r0, r4
 8010ffa:	bd10      	pop	{r4, pc}
 8010ffc:	0802dd68 	.word	0x0802dd68

08011000 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011000:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011004:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8011006:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011008:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801100a:	6b02      	ldr	r2, [r0, #48]	; 0x30
 801100c:	1aff      	subs	r7, r7, r3
 801100e:	4604      	mov	r4, r0
 8011010:	eba5 0502 	sub.w	r5, r5, r2
 8011014:	d142      	bne.n	801109c <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8011016:	b955      	cbnz	r5, 801102e <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8011018:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 801101c:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011020:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011024:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8011028:	b002      	add	sp, #8
 801102a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801102e:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011032:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8011036:	4629      	mov	r1, r5
 8011038:	4642      	mov	r2, r8
 801103a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801103c:	f005 f8d5 	bl	80161ea <_ZN8touchgfx6muldivElll>
 8011040:	2502      	movs	r5, #2
 8011042:	4642      	mov	r2, r8
 8011044:	fb90 f6f5 	sdiv	r6, r0, r5
 8011048:	4639      	mov	r1, r7
 801104a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 801104c:	f005 f8cd 	bl	80161ea <_ZN8touchgfx6muldivElll>
 8011050:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8011054:	fb90 f5f5 	sdiv	r5, r0, r5
 8011058:	f1b9 0f00 	cmp.w	r9, #0
 801105c:	d067      	beq.n	801112e <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 801105e:	f1b9 0f02 	cmp.w	r9, #2
 8011062:	d878      	bhi.n	8011156 <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8011064:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011066:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011068:	1b93      	subs	r3, r2, r6
 801106a:	1b5b      	subs	r3, r3, r5
 801106c:	6463      	str	r3, [r4, #68]	; 0x44
 801106e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011070:	18e9      	adds	r1, r5, r3
 8011072:	1b89      	subs	r1, r1, r6
 8011074:	6561      	str	r1, [r4, #84]	; 0x54
 8011076:	1b81      	subs	r1, r0, r6
 8011078:	4429      	add	r1, r5
 801107a:	64a1      	str	r1, [r4, #72]	; 0x48
 801107c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 801107e:	4430      	add	r0, r6
 8011080:	186f      	adds	r7, r5, r1
 8011082:	4432      	add	r2, r6
 8011084:	1b49      	subs	r1, r1, r5
 8011086:	4437      	add	r7, r6
 8011088:	4428      	add	r0, r5
 801108a:	4431      	add	r1, r6
 801108c:	1b52      	subs	r2, r2, r5
 801108e:	1b5b      	subs	r3, r3, r5
 8011090:	65a7      	str	r7, [r4, #88]	; 0x58
 8011092:	64e0      	str	r0, [r4, #76]	; 0x4c
 8011094:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011096:	6522      	str	r2, [r4, #80]	; 0x50
 8011098:	1b9b      	subs	r3, r3, r6
 801109a:	e05b      	b.n	8011154 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 801109c:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80110a0:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80110a4:	2d00      	cmp	r5, #0
 80110a6:	d0c6      	beq.n	8011036 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80110a8:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 80110ac:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 80110b0:	fb93 f2f8 	sdiv	r2, r3, r8
 80110b4:	fb08 3312 	mls	r3, r8, r2, r3
 80110b8:	b353      	cbz	r3, 8011110 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 80110ba:	fb98 f2f3 	sdiv	r2, r8, r3
 80110be:	fb03 8812 	mls	r8, r3, r2, r8
 80110c2:	f1b8 0f00 	cmp.w	r8, #0
 80110c6:	d1f3      	bne.n	80110b0 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 80110c8:	2b01      	cmp	r3, #1
 80110ca:	bf1c      	itt	ne
 80110cc:	fb95 f5f3 	sdivne	r5, r5, r3
 80110d0:	fb97 f7f3 	sdivne	r7, r7, r3
 80110d4:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 80110d8:	f24b 5104 	movw	r1, #46340	; 0xb504
 80110dc:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 80110e0:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 80110e4:	428b      	cmp	r3, r1
 80110e6:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 80110ea:	4608      	mov	r0, r1
 80110ec:	dd01      	ble.n	80110f2 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 80110ee:	428a      	cmp	r2, r1
 80110f0:	dc10      	bgt.n	8011114 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 80110f2:	fb90 f3f3 	sdiv	r3, r0, r3
 80110f6:	fb90 f2f2 	sdiv	r2, r0, r2
 80110fa:	4293      	cmp	r3, r2
 80110fc:	bfa8      	it	ge
 80110fe:	4613      	movge	r3, r2
 8011100:	435f      	muls	r7, r3
 8011102:	435d      	muls	r5, r3
 8011104:	4629      	mov	r1, r5
 8011106:	4638      	mov	r0, r7
 8011108:	f7ff fefe 	bl	8010f08 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801110c:	4680      	mov	r8, r0
 801110e:	e792      	b.n	8011036 <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011110:	4643      	mov	r3, r8
 8011112:	e7d9      	b.n	80110c8 <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011114:	fb93 f3f1 	sdiv	r3, r3, r1
 8011118:	fb92 f2f1 	sdiv	r2, r2, r1
 801111c:	4293      	cmp	r3, r2
 801111e:	bfcc      	ite	gt
 8011120:	3301      	addgt	r3, #1
 8011122:	1c53      	addle	r3, r2, #1
 8011124:	fb97 f7f3 	sdiv	r7, r7, r3
 8011128:	fb95 f5f3 	sdiv	r5, r5, r3
 801112c:	e7ea      	b.n	8011104 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 801112e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011130:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011132:	1b93      	subs	r3, r2, r6
 8011134:	6463      	str	r3, [r4, #68]	; 0x44
 8011136:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011138:	18e9      	adds	r1, r5, r3
 801113a:	6561      	str	r1, [r4, #84]	; 0x54
 801113c:	1b81      	subs	r1, r0, r6
 801113e:	64a1      	str	r1, [r4, #72]	; 0x48
 8011140:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011142:	4430      	add	r0, r6
 8011144:	186f      	adds	r7, r5, r1
 8011146:	4432      	add	r2, r6
 8011148:	1b49      	subs	r1, r1, r5
 801114a:	65a7      	str	r7, [r4, #88]	; 0x58
 801114c:	64e0      	str	r0, [r4, #76]	; 0x4c
 801114e:	65e1      	str	r1, [r4, #92]	; 0x5c
 8011150:	6522      	str	r2, [r4, #80]	; 0x50
 8011152:	1b5b      	subs	r3, r3, r5
 8011154:	6623      	str	r3, [r4, #96]	; 0x60
 8011156:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8011158:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801115a:	9200      	str	r2, [sp, #0]
 801115c:	9301      	str	r3, [sp, #4]
 801115e:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8011162:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8011166:	680f      	ldr	r7, [r1, #0]
 8011168:	9800      	ldr	r0, [sp, #0]
 801116a:	42ba      	cmp	r2, r7
 801116c:	bfa8      	it	ge
 801116e:	463a      	movge	r2, r7
 8011170:	4287      	cmp	r7, r0
 8011172:	bfc8      	it	gt
 8011174:	9700      	strgt	r7, [sp, #0]
 8011176:	690f      	ldr	r7, [r1, #16]
 8011178:	9801      	ldr	r0, [sp, #4]
 801117a:	42bb      	cmp	r3, r7
 801117c:	bfa8      	it	ge
 801117e:	463b      	movge	r3, r7
 8011180:	3104      	adds	r1, #4
 8011182:	4287      	cmp	r7, r0
 8011184:	bfc8      	it	gt
 8011186:	9701      	strgt	r7, [sp, #4]
 8011188:	458c      	cmp	ip, r1
 801118a:	d1ec      	bne.n	8011166 <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 801118c:	4668      	mov	r0, sp
 801118e:	2720      	movs	r7, #32
 8011190:	fb92 f8f7 	sdiv	r8, r2, r7
 8011194:	fb93 f7f7 	sdiv	r7, r3, r7
 8011198:	f7ff fd57 	bl	8010c4a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801119c:	4682      	mov	sl, r0
 801119e:	a801      	add	r0, sp, #4
 80111a0:	f7ff fd53 	bl	8010c4a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80111a4:	ebaa 0208 	sub.w	r2, sl, r8
 80111a8:	1bc0      	subs	r0, r0, r7
 80111aa:	f1b9 0f01 	cmp.w	r9, #1
 80111ae:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 80111b2:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 80111b6:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 80111ba:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 80111be:	f47f af33 	bne.w	8011028 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 80111c2:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 80111c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80111c6:	1b83      	subs	r3, r0, r6
 80111c8:	6463      	str	r3, [r4, #68]	; 0x44
 80111ca:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80111cc:	18ea      	adds	r2, r5, r3
 80111ce:	6562      	str	r2, [r4, #84]	; 0x54
 80111d0:	1b8a      	subs	r2, r1, r6
 80111d2:	64a2      	str	r2, [r4, #72]	; 0x48
 80111d4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80111d6:	4431      	add	r1, r6
 80111d8:	18af      	adds	r7, r5, r2
 80111da:	4406      	add	r6, r0
 80111dc:	1b52      	subs	r2, r2, r5
 80111de:	1b5d      	subs	r5, r3, r5
 80111e0:	65a7      	str	r7, [r4, #88]	; 0x58
 80111e2:	64e1      	str	r1, [r4, #76]	; 0x4c
 80111e4:	65e2      	str	r2, [r4, #92]	; 0x5c
 80111e6:	6526      	str	r6, [r4, #80]	; 0x50
 80111e8:	6625      	str	r5, [r4, #96]	; 0x60
 80111ea:	e71d      	b.n	8011028 <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

080111ec <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 80111ec:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80111ee:	428b      	cmp	r3, r1
 80111f0:	d102      	bne.n	80111f8 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 80111f2:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80111f4:	4293      	cmp	r3, r2
 80111f6:	d003      	beq.n	8011200 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 80111f8:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 80111fc:	f7ff bf00 	b.w	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011200:	4770      	bx	lr

08011202 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011202:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011204:	428b      	cmp	r3, r1
 8011206:	d102      	bne.n	801120e <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8011208:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801120a:	4293      	cmp	r3, r2
 801120c:	d003      	beq.n	8011216 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 801120e:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011212:	f7ff bef5 	b.w	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011216:	4770      	bx	lr

08011218 <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8011218:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 801121c:	f7ff bef0 	b.w	8011000 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011220 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011224:	b0a0      	sub	sp, #128	; 0x80
 8011226:	4604      	mov	r4, r0
 8011228:	460a      	mov	r2, r1
 801122a:	4601      	mov	r1, r0
 801122c:	a804      	add	r0, sp, #16
 801122e:	f014 fe3b 	bl	8025ea8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011232:	2300      	movs	r3, #0
 8011234:	9301      	str	r3, [sp, #4]
 8011236:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801123a:	2b01      	cmp	r3, #1
 801123c:	d17c      	bne.n	8011338 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 801123e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011240:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011242:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011244:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011246:	1ac0      	subs	r0, r0, r3
 8011248:	eba1 0102 	sub.w	r1, r1, r2
 801124c:	d437      	bmi.n	80112be <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 801124e:	2900      	cmp	r1, #0
 8011250:	aa01      	add	r2, sp, #4
 8011252:	db2e      	blt.n	80112b2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8011254:	f7ff fe98 	bl	8010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011258:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 801125c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801125e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011260:	a804      	add	r0, sp, #16
 8011262:	f014 ffa1 	bl	80261a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011266:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011268:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801126a:	a804      	add	r0, sp, #16
 801126c:	f014 ffe9 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011270:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011272:	2db3      	cmp	r5, #179	; 0xb3
 8011274:	dc33      	bgt.n	80112de <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 8011276:	eba6 0805 	sub.w	r8, r6, r5
 801127a:	4640      	mov	r0, r8
 801127c:	f7ff fdf2 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 8011280:	a902      	add	r1, sp, #8
 8011282:	9002      	str	r0, [sp, #8]
 8011284:	a801      	add	r0, sp, #4
 8011286:	f7ff fcd5 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801128a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801128c:	1847      	adds	r7, r0, r1
 801128e:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011292:	f7ff fde7 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 8011296:	a903      	add	r1, sp, #12
 8011298:	9003      	str	r0, [sp, #12]
 801129a:	a801      	add	r0, sp, #4
 801129c:	f7ff fcca 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80112a0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80112a2:	4639      	mov	r1, r7
 80112a4:	1a12      	subs	r2, r2, r0
 80112a6:	a804      	add	r0, sp, #16
 80112a8:	f014 ffcb 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112ac:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80112ae:	441d      	add	r5, r3
 80112b0:	e7df      	b.n	8011272 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 80112b2:	4249      	negs	r1, r1
 80112b4:	f7ff fe68 	bl	8010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112b8:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 80112bc:	e7ce      	b.n	801125c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80112be:	2900      	cmp	r1, #0
 80112c0:	f1c0 0000 	rsb	r0, r0, #0
 80112c4:	aa01      	add	r2, sp, #4
 80112c6:	db04      	blt.n	80112d2 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 80112c8:	f7ff fe5e 	bl	8010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112cc:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 80112d0:	e7c4      	b.n	801125c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80112d2:	4249      	negs	r1, r1
 80112d4:	f7ff fe58 	bl	8010f88 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112d8:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 80112dc:	e7be      	b.n	801125c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 80112de:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80112e0:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80112e2:	a804      	add	r0, sp, #16
 80112e4:	f014 ffad 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112e8:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80112ea:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80112ec:	a804      	add	r0, sp, #16
 80112ee:	f014 ffa8 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112f2:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80112f4:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 80112f8:	2d00      	cmp	r5, #0
 80112fa:	dd31      	ble.n	8011360 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80112fc:	eb05 0806 	add.w	r8, r5, r6
 8011300:	4640      	mov	r0, r8
 8011302:	f7ff fdaf 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 8011306:	a902      	add	r1, sp, #8
 8011308:	9002      	str	r0, [sp, #8]
 801130a:	a801      	add	r0, sp, #4
 801130c:	f7ff fc92 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011310:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011312:	1847      	adds	r7, r0, r1
 8011314:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011318:	f7ff fda4 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 801131c:	a903      	add	r1, sp, #12
 801131e:	9003      	str	r0, [sp, #12]
 8011320:	a801      	add	r0, sp, #4
 8011322:	f7ff fc87 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011326:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8011328:	4639      	mov	r1, r7
 801132a:	1a12      	subs	r2, r2, r0
 801132c:	a804      	add	r0, sp, #16
 801132e:	f014 ff88 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011332:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011334:	1aed      	subs	r5, r5, r3
 8011336:	e7df      	b.n	80112f8 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 8011338:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801133a:	6c61      	ldr	r1, [r4, #68]	; 0x44
 801133c:	a804      	add	r0, sp, #16
 801133e:	f014 ff33 	bl	80261a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011342:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011344:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8011346:	a804      	add	r0, sp, #16
 8011348:	f014 ff7b 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801134c:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 801134e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011350:	a804      	add	r0, sp, #16
 8011352:	f014 ff76 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011356:	6e22      	ldr	r2, [r4, #96]	; 0x60
 8011358:	6d21      	ldr	r1, [r4, #80]	; 0x50
 801135a:	a804      	add	r0, sp, #16
 801135c:	f014 ff71 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011360:	21ff      	movs	r1, #255	; 0xff
 8011362:	a804      	add	r0, sp, #16
 8011364:	f014 fe5c 	bl	8026020 <_ZN8touchgfx6Canvas6renderEh>
 8011368:	4b04      	ldr	r3, [pc, #16]	; (801137c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801136a:	9304      	str	r3, [sp, #16]
 801136c:	4604      	mov	r4, r0
 801136e:	a80c      	add	r0, sp, #48	; 0x30
 8011370:	f001 f8cc 	bl	801250c <_ZN8touchgfx7OutlineD1Ev>
 8011374:	4620      	mov	r0, r4
 8011376:	b020      	add	sp, #128	; 0x80
 8011378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801137c:	0802e590 	.word	0x0802e590

08011380 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011380:	2000      	movs	r0, #0
 8011382:	4770      	bx	lr

08011384 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011384:	4b07      	ldr	r3, [pc, #28]	; (80113a4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011386:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011388:	881b      	ldrh	r3, [r3, #0]
 801138a:	4293      	cmp	r3, r2
 801138c:	bf81      	itttt	hi
 801138e:	4b06      	ldrhi	r3, [pc, #24]	; (80113a8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011390:	681b      	ldrhi	r3, [r3, #0]
 8011392:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011396:	7858      	ldrbhi	r0, [r3, #1]
 8011398:	bf8c      	ite	hi
 801139a:	f000 0003 	andhi.w	r0, r0, #3
 801139e:	2000      	movls	r0, #0
 80113a0:	4770      	bx	lr
 80113a2:	bf00      	nop
 80113a4:	20012e10 	.word	0x20012e10
 80113a8:	20012e0c 	.word	0x20012e0c

080113ac <_ZN8touchgfx8TextAreaD1Ev>:
 80113ac:	4770      	bx	lr
	...

080113b0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80113b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113b4:	4b10      	ldr	r3, [pc, #64]	; (80113f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80113b6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80113b8:	881b      	ldrh	r3, [r3, #0]
 80113ba:	428b      	cmp	r3, r1
 80113bc:	4604      	mov	r4, r0
 80113be:	d918      	bls.n	80113f2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80113c0:	6803      	ldr	r3, [r0, #0]
 80113c2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80113c4:	4b0d      	ldr	r3, [pc, #52]	; (80113fc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80113c6:	6818      	ldr	r0, [r3, #0]
 80113c8:	f7f6 feb2 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80113cc:	6823      	ldr	r3, [r4, #0]
 80113ce:	4606      	mov	r6, r0
 80113d0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80113d2:	4620      	mov	r0, r4
 80113d4:	4798      	blx	r3
 80113d6:	6823      	ldr	r3, [r4, #0]
 80113d8:	4607      	mov	r7, r0
 80113da:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80113de:	4620      	mov	r0, r4
 80113e0:	4798      	blx	r3
 80113e2:	463a      	mov	r2, r7
 80113e4:	4603      	mov	r3, r0
 80113e6:	4631      	mov	r1, r6
 80113e8:	4620      	mov	r0, r4
 80113ea:	46ac      	mov	ip, r5
 80113ec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80113f0:	4760      	bx	ip
 80113f2:	2000      	movs	r0, #0
 80113f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113f8:	20012e10 	.word	0x20012e10
 80113fc:	20012e18 	.word	0x20012e18

08011400 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011400:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011404:	4b17      	ldr	r3, [pc, #92]	; (8011464 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011406:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011408:	881b      	ldrh	r3, [r3, #0]
 801140a:	428b      	cmp	r3, r1
 801140c:	4604      	mov	r4, r0
 801140e:	d926      	bls.n	801145e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011410:	4b15      	ldr	r3, [pc, #84]	; (8011468 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011412:	681b      	ldr	r3, [r3, #0]
 8011414:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011418:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801141c:	4b13      	ldr	r3, [pc, #76]	; (801146c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801141e:	7855      	ldrb	r5, [r2, #1]
 8011420:	681b      	ldr	r3, [r3, #0]
 8011422:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011426:	6833      	ldr	r3, [r6, #0]
 8011428:	69df      	ldr	r7, [r3, #28]
 801142a:	4b11      	ldr	r3, [pc, #68]	; (8011470 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801142c:	6818      	ldr	r0, [r3, #0]
 801142e:	f7f6 fe7f 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8011432:	6823      	ldr	r3, [r4, #0]
 8011434:	4680      	mov	r8, r0
 8011436:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011438:	4620      	mov	r0, r4
 801143a:	4798      	blx	r3
 801143c:	6823      	ldr	r3, [r4, #0]
 801143e:	4681      	mov	r9, r0
 8011440:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011444:	4620      	mov	r0, r4
 8011446:	4798      	blx	r3
 8011448:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801144c:	9000      	str	r0, [sp, #0]
 801144e:	464b      	mov	r3, r9
 8011450:	4642      	mov	r2, r8
 8011452:	4629      	mov	r1, r5
 8011454:	4630      	mov	r0, r6
 8011456:	47b8      	blx	r7
 8011458:	b003      	add	sp, #12
 801145a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801145e:	2000      	movs	r0, #0
 8011460:	e7fa      	b.n	8011458 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011462:	bf00      	nop
 8011464:	20012e10 	.word	0x20012e10
 8011468:	20012e0c 	.word	0x20012e0c
 801146c:	20012e14 	.word	0x20012e14
 8011470:	20012e18 	.word	0x20012e18

08011474 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011474:	b40e      	push	{r1, r2, r3}
 8011476:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801147a:	4b2f      	ldr	r3, [pc, #188]	; (8011538 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801147c:	881a      	ldrh	r2, [r3, #0]
 801147e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011480:	429a      	cmp	r2, r3
 8011482:	b09d      	sub	sp, #116	; 0x74
 8011484:	4604      	mov	r4, r0
 8011486:	d954      	bls.n	8011532 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011488:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801153c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801148c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011540 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011490:	aa26      	add	r2, sp, #152	; 0x98
 8011492:	9202      	str	r2, [sp, #8]
 8011494:	f8d9 2000 	ldr.w	r2, [r9]
 8011498:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801149c:	f8d8 3000 	ldr.w	r3, [r8]
 80114a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80114a4:	682b      	ldr	r3, [r5, #0]
 80114a6:	4628      	mov	r0, r5
 80114a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80114aa:	4798      	blx	r3
 80114ac:	b207      	sxth	r7, r0
 80114ae:	4606      	mov	r6, r0
 80114b0:	a803      	add	r0, sp, #12
 80114b2:	f005 fa57 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 80114b6:	682b      	ldr	r3, [r5, #0]
 80114b8:	4628      	mov	r0, r5
 80114ba:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80114bc:	4798      	blx	r3
 80114be:	682b      	ldr	r3, [r5, #0]
 80114c0:	4682      	mov	sl, r0
 80114c2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80114c4:	4628      	mov	r0, r5
 80114c6:	4798      	blx	r3
 80114c8:	4653      	mov	r3, sl
 80114ca:	9000      	str	r0, [sp, #0]
 80114cc:	9a02      	ldr	r2, [sp, #8]
 80114ce:	9925      	ldr	r1, [sp, #148]	; 0x94
 80114d0:	a803      	add	r0, sp, #12
 80114d2:	f005 faa2 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80114d6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80114d8:	f8d9 3000 	ldr.w	r3, [r9]
 80114dc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 80114e0:	8925      	ldrh	r5, [r4, #8]
 80114e2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 80114e6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 80114ea:	eba5 050c 	sub.w	r5, r5, ip
 80114ee:	784a      	ldrb	r2, [r1, #1]
 80114f0:	f8d8 3000 	ldr.w	r3, [r8]
 80114f4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 80114f8:	b22d      	sxth	r5, r5
 80114fa:	9500      	str	r5, [sp, #0]
 80114fc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011500:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011504:	a803      	add	r0, sp, #12
 8011506:	f002 feed 	bl	80142e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801150a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801150e:	18b9      	adds	r1, r7, r2
 8011510:	2900      	cmp	r1, #0
 8011512:	b203      	sxth	r3, r0
 8011514:	dd0b      	ble.n	801152e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011516:	3b01      	subs	r3, #1
 8011518:	fb13 f302 	smulbb	r3, r3, r2
 801151c:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011520:	b21f      	sxth	r7, r3
 8011522:	4638      	mov	r0, r7
 8011524:	b01d      	add	sp, #116	; 0x74
 8011526:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801152a:	b003      	add	sp, #12
 801152c:	4770      	bx	lr
 801152e:	2b00      	cmp	r3, #0
 8011530:	dcf7      	bgt.n	8011522 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011532:	2700      	movs	r7, #0
 8011534:	e7f5      	b.n	8011522 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011536:	bf00      	nop
 8011538:	20012e10 	.word	0x20012e10
 801153c:	20012e0c 	.word	0x20012e0c
 8011540:	20012e14 	.word	0x20012e14

08011544 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011544:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011548:	4bbc      	ldr	r3, [pc, #752]	; (801183c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801154a:	460c      	mov	r4, r1
 801154c:	881b      	ldrh	r3, [r3, #0]
 801154e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011550:	428b      	cmp	r3, r1
 8011552:	b0a9      	sub	sp, #164	; 0xa4
 8011554:	4680      	mov	r8, r0
 8011556:	d809      	bhi.n	801156c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011558:	2300      	movs	r3, #0
 801155a:	f04f 32ff 	mov.w	r2, #4294967295
 801155e:	e9c0 3200 	strd	r3, r2, [r0]
 8011562:	6083      	str	r3, [r0, #8]
 8011564:	4640      	mov	r0, r8
 8011566:	b029      	add	sp, #164	; 0xa4
 8011568:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801156c:	4eb4      	ldr	r6, [pc, #720]	; (8011840 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 801156e:	6833      	ldr	r3, [r6, #0]
 8011570:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011574:	4bb3      	ldr	r3, [pc, #716]	; (8011844 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011576:	681b      	ldr	r3, [r3, #0]
 8011578:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801157c:	4bb2      	ldr	r3, [pc, #712]	; (8011848 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 801157e:	6818      	ldr	r0, [r3, #0]
 8011580:	f7f6 fdd6 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8011584:	682b      	ldr	r3, [r5, #0]
 8011586:	4681      	mov	r9, r0
 8011588:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801158a:	4628      	mov	r0, r5
 801158c:	4798      	blx	r3
 801158e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011590:	b203      	sxth	r3, r0
 8011592:	4407      	add	r7, r0
 8011594:	9304      	str	r3, [sp, #16]
 8011596:	b2bb      	uxth	r3, r7
 8011598:	9303      	str	r3, [sp, #12]
 801159a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801159e:	4682      	mov	sl, r0
 80115a0:	a80f      	add	r0, sp, #60	; 0x3c
 80115a2:	2b00      	cmp	r3, #0
 80115a4:	f040 80a6 	bne.w	80116f4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80115a8:	f005 f9dc 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 80115ac:	682b      	ldr	r3, [r5, #0]
 80115ae:	4628      	mov	r0, r5
 80115b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80115b2:	4798      	blx	r3
 80115b4:	682b      	ldr	r3, [r5, #0]
 80115b6:	4606      	mov	r6, r0
 80115b8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80115ba:	4628      	mov	r0, r5
 80115bc:	4798      	blx	r3
 80115be:	6823      	ldr	r3, [r4, #0]
 80115c0:	4607      	mov	r7, r0
 80115c2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80115c4:	4620      	mov	r0, r4
 80115c6:	4798      	blx	r3
 80115c8:	6823      	ldr	r3, [r4, #0]
 80115ca:	4683      	mov	fp, r0
 80115cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80115d0:	4620      	mov	r0, r4
 80115d2:	4798      	blx	r3
 80115d4:	463b      	mov	r3, r7
 80115d6:	e9cd b000 	strd	fp, r0, [sp]
 80115da:	4649      	mov	r1, r9
 80115dc:	4632      	mov	r2, r6
 80115de:	a80f      	add	r0, sp, #60	; 0x3c
 80115e0:	f005 fa30 	bl	8016a44 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 80115e4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 80115e8:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011840 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 80115ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 80115f0:	f04f 0600 	mov.w	r6, #0
 80115f4:	bf0c      	ite	eq
 80115f6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 80115fa:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 80115fe:	4637      	mov	r7, r6
 8011600:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011602:	f8db 3000 	ldr.w	r3, [fp]
 8011606:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801160a:	4629      	mov	r1, r5
 801160c:	785b      	ldrb	r3, [r3, #1]
 801160e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011612:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011616:	a80f      	add	r0, sp, #60	; 0x3c
 8011618:	f002 fb7f 	bl	8013d1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801161c:	9b03      	ldr	r3, [sp, #12]
 801161e:	4286      	cmp	r6, r0
 8011620:	bfb8      	it	lt
 8011622:	4606      	movlt	r6, r0
 8011624:	3701      	adds	r7, #1
 8011626:	eba9 0903 	sub.w	r9, r9, r3
 801162a:	a80f      	add	r0, sp, #60	; 0x3c
 801162c:	b236      	sxth	r6, r6
 801162e:	b2bf      	uxth	r7, r7
 8011630:	fa0f f989 	sxth.w	r9, r9
 8011634:	f005 f9bd 	bl	80169b2 <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011638:	b918      	cbnz	r0, 8011642 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801163a:	7a2b      	ldrb	r3, [r5, #8]
 801163c:	444b      	add	r3, r9
 801163e:	2b00      	cmp	r3, #0
 8011640:	dcde      	bgt.n	8011600 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011642:	9b03      	ldr	r3, [sp, #12]
 8011644:	9a04      	ldr	r2, [sp, #16]
 8011646:	f895 9009 	ldrb.w	r9, [r5, #9]
 801164a:	fb13 f707 	smulbb	r7, r3, r7
 801164e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011650:	1aff      	subs	r7, r7, r3
 8011652:	b2bf      	uxth	r7, r7
 8011654:	b23b      	sxth	r3, r7
 8011656:	429a      	cmp	r2, r3
 8011658:	bfa8      	it	ge
 801165a:	4657      	movge	r7, sl
 801165c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011660:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011664:	6823      	ldr	r3, [r4, #0]
 8011666:	bf08      	it	eq
 8011668:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 801166c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801166e:	bf18      	it	ne
 8011670:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011674:	4620      	mov	r0, r4
 8011676:	4798      	blx	r3
 8011678:	444f      	add	r7, r9
 801167a:	fa1f f987 	uxth.w	r9, r7
 801167e:	2801      	cmp	r0, #1
 8011680:	fa0f f789 	sxth.w	r7, r9
 8011684:	b2b3      	uxth	r3, r6
 8011686:	f000 80e1 	beq.w	801184c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 801168a:	2802      	cmp	r0, #2
 801168c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011690:	f000 80e2 	beq.w	8011858 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011694:	7aea      	ldrb	r2, [r5, #11]
 8011696:	7b2d      	ldrb	r5, [r5, #12]
 8011698:	b236      	sxth	r6, r6
 801169a:	1ab6      	subs	r6, r6, r2
 801169c:	442a      	add	r2, r5
 801169e:	4413      	add	r3, r2
 80116a0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80116a4:	fa1f fa86 	uxth.w	sl, r6
 80116a8:	b29b      	uxth	r3, r3
 80116aa:	2a02      	cmp	r2, #2
 80116ac:	fa0f fb8a 	sxth.w	fp, sl
 80116b0:	b21e      	sxth	r6, r3
 80116b2:	f000 80d5 	beq.w	8011860 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80116b6:	2a03      	cmp	r2, #3
 80116b8:	f000 80dd 	beq.w	8011876 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80116bc:	2a01      	cmp	r2, #1
 80116be:	f040 80e5 	bne.w	801188c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80116c2:	8925      	ldrh	r5, [r4, #8]
 80116c4:	4633      	mov	r3, r6
 80116c6:	eba5 0909 	sub.w	r9, r5, r9
 80116ca:	463e      	mov	r6, r7
 80116cc:	465d      	mov	r5, fp
 80116ce:	461f      	mov	r7, r3
 80116d0:	fa0f fb89 	sxth.w	fp, r9
 80116d4:	4b5c      	ldr	r3, [pc, #368]	; (8011848 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80116d6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80116d8:	6818      	ldr	r0, [r3, #0]
 80116da:	f7f6 fd29 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80116de:	f8a8 b000 	strh.w	fp, [r8]
 80116e2:	f8a8 5002 	strh.w	r5, [r8, #2]
 80116e6:	f8a8 6004 	strh.w	r6, [r8, #4]
 80116ea:	f8a8 7006 	strh.w	r7, [r8, #6]
 80116ee:	f8c8 0008 	str.w	r0, [r8, #8]
 80116f2:	e737      	b.n	8011564 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 80116f4:	f005 f936 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 80116f8:	682b      	ldr	r3, [r5, #0]
 80116fa:	4628      	mov	r0, r5
 80116fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80116fe:	4798      	blx	r3
 8011700:	682b      	ldr	r3, [r5, #0]
 8011702:	4607      	mov	r7, r0
 8011704:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011706:	4628      	mov	r0, r5
 8011708:	4798      	blx	r3
 801170a:	6823      	ldr	r3, [r4, #0]
 801170c:	4683      	mov	fp, r0
 801170e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011710:	4620      	mov	r0, r4
 8011712:	4798      	blx	r3
 8011714:	6822      	ldr	r2, [r4, #0]
 8011716:	9005      	str	r0, [sp, #20]
 8011718:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801171c:	4620      	mov	r0, r4
 801171e:	4790      	blx	r2
 8011720:	9b05      	ldr	r3, [sp, #20]
 8011722:	9001      	str	r0, [sp, #4]
 8011724:	463a      	mov	r2, r7
 8011726:	4649      	mov	r1, r9
 8011728:	9300      	str	r3, [sp, #0]
 801172a:	a80f      	add	r0, sp, #60	; 0x3c
 801172c:	465b      	mov	r3, fp
 801172e:	f005 f989 	bl	8016a44 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011732:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011736:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 801173a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801173c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011740:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011744:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011748:	bf0a      	itet	eq
 801174a:	464a      	moveq	r2, r9
 801174c:	461a      	movne	r2, r3
 801174e:	4699      	moveq	r9, r3
 8011750:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011754:	1ad2      	subs	r2, r2, r3
 8011756:	6833      	ldr	r3, [r6, #0]
 8011758:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 801175c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011760:	af0f      	add	r7, sp, #60	; 0x3c
 8011762:	7859      	ldrb	r1, [r3, #1]
 8011764:	9707      	str	r7, [sp, #28]
 8011766:	2300      	movs	r3, #0
 8011768:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801176c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011770:	f88d 1020 	strb.w	r1, [sp, #32]
 8011774:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011778:	9509      	str	r5, [sp, #36]	; 0x24
 801177a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801177e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011782:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011786:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801178a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801178e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011792:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011796:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801179a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801179e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 80117a2:	b350      	cbz	r0, 80117fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80117a4:	682b      	ldr	r3, [r5, #0]
 80117a6:	4628      	mov	r0, r5
 80117a8:	695b      	ldr	r3, [r3, #20]
 80117aa:	4798      	blx	r3
 80117ac:	4607      	mov	r7, r0
 80117ae:	b320      	cbz	r0, 80117fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80117b0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80117b2:	6803      	ldr	r3, [r0, #0]
 80117b4:	4639      	mov	r1, r7
 80117b6:	68db      	ldr	r3, [r3, #12]
 80117b8:	4798      	blx	r3
 80117ba:	4606      	mov	r6, r0
 80117bc:	b1e8      	cbz	r0, 80117fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80117be:	7b43      	ldrb	r3, [r0, #13]
 80117c0:	7a82      	ldrb	r2, [r0, #10]
 80117c2:	005b      	lsls	r3, r3, #1
 80117c4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80117c8:	4313      	orrs	r3, r2
 80117ca:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 80117ce:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 80117d2:	2b06      	cmp	r3, #6
 80117d4:	d111      	bne.n	80117fa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 80117d6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80117d8:	6803      	ldr	r3, [r0, #0]
 80117da:	4632      	mov	r2, r6
 80117dc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80117de:	4639      	mov	r1, r7
 80117e0:	4798      	blx	r3
 80117e2:	7b73      	ldrb	r3, [r6, #13]
 80117e4:	005b      	lsls	r3, r3, #1
 80117e6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80117ea:	7ab3      	ldrb	r3, [r6, #10]
 80117ec:	4313      	orrs	r3, r2
 80117ee:	4418      	add	r0, r3
 80117f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80117f4:	4418      	add	r0, r3
 80117f6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 80117fa:	2600      	movs	r6, #0
 80117fc:	4637      	mov	r7, r6
 80117fe:	a806      	add	r0, sp, #24
 8011800:	f002 fc6c 	bl	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011804:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011808:	9b03      	ldr	r3, [sp, #12]
 801180a:	4286      	cmp	r6, r0
 801180c:	eba9 0903 	sub.w	r9, r9, r3
 8011810:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011814:	bfb8      	it	lt
 8011816:	4606      	movlt	r6, r0
 8011818:	3701      	adds	r7, #1
 801181a:	b236      	sxth	r6, r6
 801181c:	b2bf      	uxth	r7, r7
 801181e:	fa0f f989 	sxth.w	r9, r9
 8011822:	2b00      	cmp	r3, #0
 8011824:	f43f af0d 	beq.w	8011642 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011828:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 801182c:	2b00      	cmp	r3, #0
 801182e:	f47f af08 	bne.w	8011642 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011832:	7a2b      	ldrb	r3, [r5, #8]
 8011834:	444b      	add	r3, r9
 8011836:	2b00      	cmp	r3, #0
 8011838:	dce1      	bgt.n	80117fe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 801183a:	e702      	b.n	8011642 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801183c:	20012e10 	.word	0x20012e10
 8011840:	20012e0c 	.word	0x20012e0c
 8011844:	20012e14 	.word	0x20012e14
 8011848:	20012e18 	.word	0x20012e18
 801184c:	ebaa 0606 	sub.w	r6, sl, r6
 8011850:	2002      	movs	r0, #2
 8011852:	fb96 f6f0 	sdiv	r6, r6, r0
 8011856:	e71d      	b.n	8011694 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011858:	441e      	add	r6, r3
 801185a:	ebaa 0606 	sub.w	r6, sl, r6
 801185e:	e719      	b.n	8011694 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011860:	8925      	ldrh	r5, [r4, #8]
 8011862:	1aed      	subs	r5, r5, r3
 8011864:	eba5 050a 	sub.w	r5, r5, sl
 8011868:	fa0f fb85 	sxth.w	fp, r5
 801186c:	8965      	ldrh	r5, [r4, #10]
 801186e:	eba5 0509 	sub.w	r5, r5, r9
 8011872:	b22d      	sxth	r5, r5
 8011874:	e72e      	b.n	80116d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011876:	8965      	ldrh	r5, [r4, #10]
 8011878:	1aed      	subs	r5, r5, r3
 801187a:	eba5 050a 	sub.w	r5, r5, sl
 801187e:	4633      	mov	r3, r6
 8011880:	b22d      	sxth	r5, r5
 8011882:	463e      	mov	r6, r7
 8011884:	f04f 0b00 	mov.w	fp, #0
 8011888:	461f      	mov	r7, r3
 801188a:	e723      	b.n	80116d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801188c:	2500      	movs	r5, #0
 801188e:	e721      	b.n	80116d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011890 <_ZN8touchgfx8TextAreaD0Ev>:
 8011890:	b510      	push	{r4, lr}
 8011892:	2148      	movs	r1, #72	; 0x48
 8011894:	4604      	mov	r4, r0
 8011896:	f017 fa4a 	bl	8028d2e <_ZdlPvj>
 801189a:	4620      	mov	r0, r4
 801189c:	bd10      	pop	{r4, pc}
	...

080118a0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 80118a0:	b513      	push	{r0, r1, r4, lr}
 80118a2:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 80118a6:	4604      	mov	r4, r0
 80118a8:	b1fb      	cbz	r3, 80118ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80118aa:	4b16      	ldr	r3, [pc, #88]	; (8011904 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 80118ac:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80118ae:	881b      	ldrh	r3, [r3, #0]
 80118b0:	428b      	cmp	r3, r1
 80118b2:	d91a      	bls.n	80118ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80118b4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80118b8:	2b00      	cmp	r3, #0
 80118ba:	dd16      	ble.n	80118ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80118bc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80118c0:	2b00      	cmp	r3, #0
 80118c2:	dd12      	ble.n	80118ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80118c4:	4b10      	ldr	r3, [pc, #64]	; (8011908 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 80118c6:	6818      	ldr	r0, [r3, #0]
 80118c8:	f7f6 fc32 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80118cc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 80118d0:	6822      	ldr	r2, [r4, #0]
 80118d2:	2b00      	cmp	r3, #0
 80118d4:	db06      	blt.n	80118e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80118d6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 80118da:	2b00      	cmp	r3, #0
 80118dc:	db02      	blt.n	80118e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80118de:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80118e0:	4298      	cmp	r0, r3
 80118e2:	d004      	beq.n	80118ee <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80118e4:	6953      	ldr	r3, [r2, #20]
 80118e6:	4620      	mov	r0, r4
 80118e8:	4798      	blx	r3
 80118ea:	b002      	add	sp, #8
 80118ec:	bd10      	pop	{r4, pc}
 80118ee:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 80118f2:	c903      	ldmia	r1, {r0, r1}
 80118f4:	466b      	mov	r3, sp
 80118f6:	e883 0003 	stmia.w	r3, {r0, r1}
 80118fa:	6912      	ldr	r2, [r2, #16]
 80118fc:	4619      	mov	r1, r3
 80118fe:	4620      	mov	r0, r4
 8011900:	4790      	blx	r2
 8011902:	e7f2      	b.n	80118ea <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011904:	20012e10 	.word	0x20012e10
 8011908:	20012e18 	.word	0x20012e18

0801190c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801190c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011910:	4b44      	ldr	r3, [pc, #272]	; (8011a24 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011912:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011914:	881b      	ldrh	r3, [r3, #0]
 8011916:	4293      	cmp	r3, r2
 8011918:	b08e      	sub	sp, #56	; 0x38
 801191a:	4604      	mov	r4, r0
 801191c:	d97e      	bls.n	8011a1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801191e:	6808      	ldr	r0, [r1, #0]
 8011920:	4d41      	ldr	r5, [pc, #260]	; (8011a28 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011922:	6849      	ldr	r1, [r1, #4]
 8011924:	ab05      	add	r3, sp, #20
 8011926:	c303      	stmia	r3!, {r0, r1}
 8011928:	4611      	mov	r1, r2
 801192a:	6828      	ldr	r0, [r5, #0]
 801192c:	f7f6 fc00 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8011930:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011934:	2b00      	cmp	r3, #0
 8011936:	db11      	blt.n	801195c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011938:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801193c:	2b00      	cmp	r3, #0
 801193e:	db0d      	blt.n	801195c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011940:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011942:	4298      	cmp	r0, r3
 8011944:	d10a      	bne.n	801195c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011946:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801194a:	e892 0003 	ldmia.w	r2, {r0, r1}
 801194e:	ab09      	add	r3, sp, #36	; 0x24
 8011950:	e883 0003 	stmia.w	r3, {r0, r1}
 8011954:	4619      	mov	r1, r3
 8011956:	a805      	add	r0, sp, #20
 8011958:	f7fe f860 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801195c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011960:	2b00      	cmp	r3, #0
 8011962:	dd5b      	ble.n	8011a1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011964:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011968:	2b00      	cmp	r3, #0
 801196a:	dd57      	ble.n	8011a1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801196c:	4f2f      	ldr	r7, [pc, #188]	; (8011a2c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801196e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011970:	683b      	ldr	r3, [r7, #0]
 8011972:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011976:	4b2e      	ldr	r3, [pc, #184]	; (8011a30 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011978:	681b      	ldr	r3, [r3, #0]
 801197a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801197e:	2e00      	cmp	r6, #0
 8011980:	d04c      	beq.n	8011a1c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011982:	6823      	ldr	r3, [r4, #0]
 8011984:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011988:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801198a:	4620      	mov	r0, r4
 801198c:	4798      	blx	r3
 801198e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011990:	683b      	ldr	r3, [r7, #0]
 8011992:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011996:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801199a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801199e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80119a0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80119a4:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 80119a8:	785b      	ldrb	r3, [r3, #1]
 80119aa:	9609      	str	r6, [sp, #36]	; 0x24
 80119ac:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80119b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80119b4:	4b1f      	ldr	r3, [pc, #124]	; (8011a34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 80119b6:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 80119ba:	681b      	ldr	r3, [r3, #0]
 80119bc:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 80119c0:	910b      	str	r1, [sp, #44]	; 0x2c
 80119c2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 80119c6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 80119ca:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 80119ce:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 80119d2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80119d6:	b10a      	cbz	r2, 80119dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80119d8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 80119da:	b906      	cbnz	r6, 80119de <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80119dc:	689e      	ldr	r6, [r3, #8]
 80119de:	af07      	add	r7, sp, #28
 80119e0:	4621      	mov	r1, r4
 80119e2:	4638      	mov	r0, r7
 80119e4:	f004 fab0 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80119e8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 80119ea:	6828      	ldr	r0, [r5, #0]
 80119ec:	f7f6 fba0 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 80119f0:	6823      	ldr	r3, [r4, #0]
 80119f2:	4605      	mov	r5, r0
 80119f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80119f6:	4620      	mov	r0, r4
 80119f8:	4798      	blx	r3
 80119fa:	6823      	ldr	r3, [r4, #0]
 80119fc:	4680      	mov	r8, r0
 80119fe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011a02:	4620      	mov	r0, r4
 8011a04:	4798      	blx	r3
 8011a06:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011a0a:	ab09      	add	r3, sp, #36	; 0x24
 8011a0c:	9300      	str	r3, [sp, #0]
 8011a0e:	9501      	str	r5, [sp, #4]
 8011a10:	ab05      	add	r3, sp, #20
 8011a12:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011a16:	4630      	mov	r0, r6
 8011a18:	f7f6 fb3c 	bl	8008094 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011a1c:	b00e      	add	sp, #56	; 0x38
 8011a1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011a22:	bf00      	nop
 8011a24:	20012e10 	.word	0x20012e10
 8011a28:	20012e18 	.word	0x20012e18
 8011a2c:	20012e0c 	.word	0x20012e0c
 8011a30:	20012e14 	.word	0x20012e14
 8011a34:	20012db4 	.word	0x20012db4

08011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011a38:	b538      	push	{r3, r4, r5, lr}
 8011a3a:	4b0e      	ldr	r3, [pc, #56]	; (8011a74 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011a3c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011a3e:	881b      	ldrh	r3, [r3, #0]
 8011a40:	429a      	cmp	r2, r3
 8011a42:	4604      	mov	r4, r0
 8011a44:	d214      	bcs.n	8011a70 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011a46:	6803      	ldr	r3, [r0, #0]
 8011a48:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011a4a:	4798      	blx	r3
 8011a4c:	6823      	ldr	r3, [r4, #0]
 8011a4e:	4605      	mov	r5, r0
 8011a50:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011a52:	4620      	mov	r0, r4
 8011a54:	4798      	blx	r3
 8011a56:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011a5a:	b22d      	sxth	r5, r5
 8011a5c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011a60:	4601      	mov	r1, r0
 8011a62:	bf06      	itte	eq
 8011a64:	4602      	moveq	r2, r0
 8011a66:	4629      	moveq	r1, r5
 8011a68:	462a      	movne	r2, r5
 8011a6a:	4620      	mov	r0, r4
 8011a6c:	f7fd fdb6 	bl	800f5dc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011a70:	bd38      	pop	{r3, r4, r5, pc}
 8011a72:	bf00      	nop
 8011a74:	20012e10 	.word	0x20012e10

08011a78 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011a78:	b530      	push	{r4, r5, lr}
 8011a7a:	888b      	ldrh	r3, [r1, #4]
 8011a7c:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011a7e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011a82:	b085      	sub	sp, #20
 8011a84:	4604      	mov	r4, r0
 8011a86:	b923      	cbnz	r3, 8011a92 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011a88:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011a8c:	b90b      	cbnz	r3, 8011a92 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011a8e:	f7ff ffd3 	bl	8011a38 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011a92:	6823      	ldr	r3, [r4, #0]
 8011a94:	466d      	mov	r5, sp
 8011a96:	4621      	mov	r1, r4
 8011a98:	4628      	mov	r0, r5
 8011a9a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011a9e:	4798      	blx	r3
 8011aa0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011aa4:	343c      	adds	r4, #60	; 0x3c
 8011aa6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011aaa:	b005      	add	sp, #20
 8011aac:	bd30      	pop	{r4, r5, pc}

08011aae <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011aae:	2300      	movs	r3, #0
 8011ab0:	8083      	strh	r3, [r0, #4]
 8011ab2:	80c3      	strh	r3, [r0, #6]
 8011ab4:	8003      	strh	r3, [r0, #0]
 8011ab6:	8043      	strh	r3, [r0, #2]
 8011ab8:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011abc:	2bff      	cmp	r3, #255	; 0xff
 8011abe:	bf01      	itttt	eq
 8011ac0:	890b      	ldrheq	r3, [r1, #8]
 8011ac2:	8083      	strheq	r3, [r0, #4]
 8011ac4:	894b      	ldrheq	r3, [r1, #10]
 8011ac6:	80c3      	strheq	r3, [r0, #6]
 8011ac8:	4770      	bx	lr
	...

08011acc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011acc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011ace:	4604      	mov	r4, r0
 8011ad0:	6808      	ldr	r0, [r1, #0]
 8011ad2:	6849      	ldr	r1, [r1, #4]
 8011ad4:	466b      	mov	r3, sp
 8011ad6:	c303      	stmia	r3!, {r0, r1}
 8011ad8:	6823      	ldr	r3, [r4, #0]
 8011ada:	4669      	mov	r1, sp
 8011adc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011ade:	4620      	mov	r0, r4
 8011ae0:	4798      	blx	r3
 8011ae2:	4b08      	ldr	r3, [pc, #32]	; (8011b04 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011ae4:	681b      	ldr	r3, [r3, #0]
 8011ae6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011aea:	b10a      	cbz	r2, 8011af0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011aec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011aee:	b900      	cbnz	r0, 8011af2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011af0:	6898      	ldr	r0, [r3, #8]
 8011af2:	6803      	ldr	r3, [r0, #0]
 8011af4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011af6:	6a1d      	ldr	r5, [r3, #32]
 8011af8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011afc:	4669      	mov	r1, sp
 8011afe:	47a8      	blx	r5
 8011b00:	b003      	add	sp, #12
 8011b02:	bd30      	pop	{r4, r5, pc}
 8011b04:	20012db4 	.word	0x20012db4

08011b08 <_ZN8touchgfx3BoxD1Ev>:
 8011b08:	4770      	bx	lr

08011b0a <_ZN8touchgfx3BoxD0Ev>:
 8011b0a:	b510      	push	{r4, lr}
 8011b0c:	212c      	movs	r1, #44	; 0x2c
 8011b0e:	4604      	mov	r4, r0
 8011b10:	f017 f90d 	bl	8028d2e <_ZdlPvj>
 8011b14:	4620      	mov	r0, r4
 8011b16:	bd10      	pop	{r4, pc}

08011b18 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011b18:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011b1c:	b12a      	cbz	r2, 8011b2a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011b1e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011b22:	b112      	cbz	r2, 8011b2a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011b24:	6803      	ldr	r3, [r0, #0]
 8011b26:	695b      	ldr	r3, [r3, #20]
 8011b28:	4718      	bx	r3
 8011b2a:	4770      	bx	lr

08011b2c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 8011b2c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 8011b30:	600b      	str	r3, [r1, #0]
 8011b32:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 8011b36:	6013      	str	r3, [r2, #0]
 8011b38:	4770      	bx	lr

08011b3a <_ZN8touchgfx5Gauge8setWidthEs>:
 8011b3a:	8101      	strh	r1, [r0, #8]
 8011b3c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 8011b40:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 8011b44:	4770      	bx	lr

08011b46 <_ZN8touchgfx5Gauge9setHeightEs>:
 8011b46:	8141      	strh	r1, [r0, #10]
 8011b48:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 8011b4c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 8011b50:	4770      	bx	lr

08011b52 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 8011b52:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 8011b56:	4770      	bx	lr

08011b58 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 8011b58:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 8011b5c:	4770      	bx	lr

08011b5e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 8011b5e:	4770      	bx	lr

08011b60 <_ZN8touchgfx5GaugeD1Ev>:
 8011b60:	4770      	bx	lr

08011b62 <_ZN8touchgfx5Gauge8setAlphaEh>:
 8011b62:	b538      	push	{r3, r4, r5, lr}
 8011b64:	4604      	mov	r4, r0
 8011b66:	460d      	mov	r5, r1
 8011b68:	f7fd fc51 	bl	800f40e <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011b6c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 8011b70:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 8011b74:	bd38      	pop	{r3, r4, r5, pc}

08011b76 <_ZN8touchgfx5GaugeD0Ev>:
 8011b76:	b510      	push	{r4, lr}
 8011b78:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8011b7c:	4604      	mov	r4, r0
 8011b7e:	f017 f8d6 	bl	8028d2e <_ZdlPvj>
 8011b82:	4620      	mov	r0, r4
 8011b84:	bd10      	pop	{r4, pc}

08011b86 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 8011b86:	b510      	push	{r4, lr}
 8011b88:	6803      	ldr	r3, [r0, #0]
 8011b8a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011b8e:	4604      	mov	r4, r0
 8011b90:	4798      	blx	r3
 8011b92:	b170      	cbz	r0, 8011bb2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011b94:	6823      	ldr	r3, [r4, #0]
 8011b96:	4620      	mov	r0, r4
 8011b98:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 8011b9c:	4798      	blx	r3
 8011b9e:	b140      	cbz	r0, 8011bb2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011ba0:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8011ba4:	b12b      	cbz	r3, 8011bb2 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 8011ba6:	6823      	ldr	r3, [r4, #0]
 8011ba8:	4620      	mov	r0, r4
 8011baa:	695b      	ldr	r3, [r3, #20]
 8011bac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011bb0:	4718      	bx	r3
 8011bb2:	bd10      	pop	{r4, pc}

08011bb4 <_ZN8touchgfx5GaugeC1Ev>:
 8011bb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011bb6:	4604      	mov	r4, r0
 8011bb8:	4626      	mov	r6, r4
 8011bba:	f7fd fd49 	bl	800f650 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011bbe:	4b18      	ldr	r3, [pc, #96]	; (8011c20 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 8011bc0:	f846 3bb4 	str.w	r3, [r6], #180
 8011bc4:	a902      	add	r1, sp, #8
 8011bc6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011bca:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8011bce:	4630      	mov	r0, r6
 8011bd0:	f015 f970 	bl	8026eb4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 8011bd4:	2500      	movs	r5, #0
 8011bd6:	2301      	movs	r3, #1
 8011bd8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 8011bdc:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 8011be0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 8011be4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 8011be8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 8011bec:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 8011bf0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 8011bf4:	4638      	mov	r0, r7
 8011bf6:	f014 fba1 	bl	802633c <_ZN8touchgfx6CircleC1Ev>
 8011bfa:	f104 0158 	add.w	r1, r4, #88	; 0x58
 8011bfe:	4620      	mov	r0, r4
 8011c00:	f7fd fdc7 	bl	800f792 <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 8011c04:	4639      	mov	r1, r7
 8011c06:	4620      	mov	r0, r4
 8011c08:	f7fd fd82 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011c0c:	4620      	mov	r0, r4
 8011c0e:	4631      	mov	r1, r6
 8011c10:	f7fd fd7e 	bl	800f710 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011c14:	4620      	mov	r0, r4
 8011c16:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 8011c1a:	b003      	add	sp, #12
 8011c1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011c1e:	bf00      	nop
 8011c20:	0802ded8 	.word	0x0802ded8

08011c24 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011c24:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 8011c28:	4770      	bx	lr

08011c2a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 8011c2a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 8011c2e:	4770      	bx	lr

08011c30 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 8011c30:	b538      	push	{r3, r4, r5, lr}
 8011c32:	8902      	ldrh	r2, [r0, #8]
 8011c34:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011c38:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 8011c3c:	4604      	mov	r4, r0
 8011c3e:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 8011c42:	2200      	movs	r2, #0
 8011c44:	4611      	mov	r1, r2
 8011c46:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 8011c4a:	4628      	mov	r0, r5
 8011c4c:	f7f0 fd5b 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8011c50:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 8011c54:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011c58:	1a9b      	subs	r3, r3, r2
 8011c5a:	ee07 3a90 	vmov	s15, r3
 8011c5e:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 8011c62:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 8011c66:	1a9b      	subs	r3, r3, r2
 8011c68:	ee07 3a10 	vmov	s14, r3
 8011c6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011c70:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011c74:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 8011c78:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 8011c7c:	4628      	mov	r0, r5
 8011c7e:	f015 f965 	bl	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011c82:	4b16      	ldr	r3, [pc, #88]	; (8011cdc <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 8011c84:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8011c88:	4628      	mov	r0, r5
 8011c8a:	f015 f95f 	bl	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011c8e:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 8011c92:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 8011c96:	ee07 3a90 	vmov	s15, r3
 8011c9a:	ee07 2a10 	vmov	s14, r2
 8011c9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011ca2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8011ca6:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 8011caa:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 8011cae:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 8011cb2:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 8011cb6:	4628      	mov	r0, r5
 8011cb8:	f015 f948 	bl	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011cbc:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 8011cc0:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 8011cc4:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 8011cc8:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 8011ccc:	4628      	mov	r0, r5
 8011cce:	f015 f93d 	bl	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 8011cd2:	2301      	movs	r3, #1
 8011cd4:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011cd8:	bd38      	pop	{r3, r4, r5, pc}
 8011cda:	bf00      	nop
 8011cdc:	43960000 	.word	0x43960000

08011ce0 <_ZN8touchgfx5Gauge9setNeedleEtss>:
 8011ce0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011ce2:	4604      	mov	r4, r0
 8011ce4:	a802      	add	r0, sp, #8
 8011ce6:	4616      	mov	r6, r2
 8011ce8:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8011cec:	461d      	mov	r5, r3
 8011cee:	4601      	mov	r1, r0
 8011cf0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011cf4:	f015 fa80 	bl	80271f8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 8011cf8:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 8011cfc:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 8011d00:	4620      	mov	r0, r4
 8011d02:	f7ff ff95 	bl	8011c30 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011d06:	b002      	add	sp, #8
 8011d08:	bd70      	pop	{r4, r5, r6, pc}

08011d0a <_ZN8touchgfx5Gauge9setCenterEii>:
 8011d0a:	b570      	push	{r4, r5, r6, lr}
 8011d0c:	4606      	mov	r6, r0
 8011d0e:	460d      	mov	r5, r1
 8011d10:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 8011d14:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 8011d18:	4614      	mov	r4, r2
 8011d1a:	f7ff ff89 	bl	8011c30 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 8011d1e:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 8011d22:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 8011d26:	1aa4      	subs	r4, r4, r2
 8011d28:	1a6d      	subs	r5, r5, r1
 8011d2a:	0164      	lsls	r4, r4, #5
 8011d2c:	016d      	lsls	r5, r5, #5
 8011d2e:	3410      	adds	r4, #16
 8011d30:	3510      	adds	r5, #16
 8011d32:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 8011d36:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 8011d3a:	bd70      	pop	{r4, r5, r6, pc}

08011d3c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 8011d3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011d3e:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8011d40:	0149      	lsls	r1, r1, #5
 8011d42:	4299      	cmp	r1, r3
 8011d44:	4604      	mov	r4, r0
 8011d46:	9101      	str	r1, [sp, #4]
 8011d48:	d00b      	beq.n	8011d62 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 8011d4a:	4601      	mov	r1, r0
 8011d4c:	aa01      	add	r2, sp, #4
 8011d4e:	a802      	add	r0, sp, #8
 8011d50:	f014 fcf2 	bl	8026738 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011d54:	9b01      	ldr	r3, [sp, #4]
 8011d56:	63e3      	str	r3, [r4, #60]	; 0x3c
 8011d58:	6823      	ldr	r3, [r4, #0]
 8011d5a:	a902      	add	r1, sp, #8
 8011d5c:	691b      	ldr	r3, [r3, #16]
 8011d5e:	4620      	mov	r0, r4
 8011d60:	4798      	blx	r3
 8011d62:	b004      	add	sp, #16
 8011d64:	bd10      	pop	{r4, pc}
	...

08011d68 <_ZN8touchgfx5Gauge8setValueEi>:
 8011d68:	b570      	push	{r4, r5, r6, lr}
 8011d6a:	4604      	mov	r4, r0
 8011d6c:	f7fd fba2 	bl	800f4b4 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011d70:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 8011d74:	429a      	cmp	r2, r3
 8011d76:	bfac      	ite	ge
 8011d78:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 8011d7c:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 8011d80:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 8011d84:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 8011d88:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011d8c:	1ac9      	subs	r1, r1, r3
 8011d8e:	2900      	cmp	r1, #0
 8011d90:	bfb8      	it	lt
 8011d92:	4249      	neglt	r1, r1
 8011d94:	b289      	uxth	r1, r1
 8011d96:	4620      	mov	r0, r4
 8011d98:	f7fd fbae 	bl	800f4f8 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011d9c:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8011da0:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 8011da4:	eddf 6a19 	vldr	s13, [pc, #100]	; 8011e0c <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 8011da8:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8011e10 <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 8011dac:	429a      	cmp	r2, r3
 8011dae:	4605      	mov	r5, r0
 8011db0:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8011db4:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8011db8:	da15      	bge.n	8011de6 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 8011dba:	1b5b      	subs	r3, r3, r5
 8011dbc:	ee07 3a90 	vmov	s15, r3
 8011dc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011dc4:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011dc8:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011dcc:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011dd0:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011dd4:	f015 f829 	bl	8026e2a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011dd8:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011ddc:	1b49      	subs	r1, r1, r5
 8011dde:	4630      	mov	r0, r6
 8011de0:	f7ff ffac 	bl	8011d3c <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 8011de4:	bd70      	pop	{r4, r5, r6, pc}
 8011de6:	442b      	add	r3, r5
 8011de8:	ee07 3a90 	vmov	s15, r3
 8011dec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011df0:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 8011df4:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 8011df8:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 8011dfc:	ee21 1a07 	vmul.f32	s2, s2, s14
 8011e00:	f015 f813 	bl	8026e2a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 8011e04:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 8011e08:	4429      	add	r1, r5
 8011e0a:	e7e8      	b.n	8011dde <_ZN8touchgfx5Gauge8setValueEi+0x76>
 8011e0c:	43340000 	.word	0x43340000
 8011e10:	40490fdb 	.word	0x40490fdb

08011e14 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 8011e14:	b510      	push	{r4, lr}
 8011e16:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 8011e1a:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 8011e1e:	0149      	lsls	r1, r1, #5
 8011e20:	0152      	lsls	r2, r2, #5
 8011e22:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 8011e26:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 8011e2a:	4604      	mov	r4, r0
 8011e2c:	f7fd faec 	bl	800f408 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011e30:	4601      	mov	r1, r0
 8011e32:	4620      	mov	r0, r4
 8011e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e38:	f7ff bf96 	b.w	8011d68 <_ZN8touchgfx5Gauge8setValueEi>

08011e3c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011e3c:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011e40:	4770      	bx	lr

08011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011e42:	b570      	push	{r4, r5, r6, lr}
 8011e44:	880b      	ldrh	r3, [r1, #0]
 8011e46:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011e48:	4605      	mov	r5, r0
 8011e4a:	8813      	ldrh	r3, [r2, #0]
 8011e4c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011e50:	4604      	mov	r4, r0
 8011e52:	4628      	mov	r0, r5
 8011e54:	f006 fb06 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e58:	4606      	mov	r6, r0
 8011e5a:	4628      	mov	r0, r5
 8011e5c:	f006 fb36 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e60:	6823      	ldr	r3, [r4, #0]
 8011e62:	4605      	mov	r5, r0
 8011e64:	4631      	mov	r1, r6
 8011e66:	4620      	mov	r0, r4
 8011e68:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011e6a:	4798      	blx	r3
 8011e6c:	6823      	ldr	r3, [r4, #0]
 8011e6e:	4629      	mov	r1, r5
 8011e70:	4620      	mov	r0, r4
 8011e72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e78:	4718      	bx	r3

08011e7a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011e7a:	b510      	push	{r4, lr}
 8011e7c:	4604      	mov	r4, r0
 8011e7e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011e80:	b150      	cbz	r0, 8011e98 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011e82:	6803      	ldr	r3, [r0, #0]
 8011e84:	68db      	ldr	r3, [r3, #12]
 8011e86:	4798      	blx	r3
 8011e88:	b130      	cbz	r0, 8011e98 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011e8a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011e8c:	6803      	ldr	r3, [r0, #0]
 8011e8e:	4621      	mov	r1, r4
 8011e90:	689b      	ldr	r3, [r3, #8]
 8011e92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e96:	4718      	bx	r3
 8011e98:	bd10      	pop	{r4, pc}

08011e9a <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011e9a:	b510      	push	{r4, lr}
 8011e9c:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011ea0:	2bff      	cmp	r3, #255	; 0xff
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	d006      	beq.n	8011eb4 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011ea6:	2300      	movs	r3, #0
 8011ea8:	8003      	strh	r3, [r0, #0]
 8011eaa:	8043      	strh	r3, [r0, #2]
 8011eac:	8083      	strh	r3, [r0, #4]
 8011eae:	80c3      	strh	r3, [r0, #6]
 8011eb0:	4620      	mov	r0, r4
 8011eb2:	bd10      	pop	{r4, pc}
 8011eb4:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011eb8:	b11b      	cbz	r3, 8011ec2 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011eba:	3130      	adds	r1, #48	; 0x30
 8011ebc:	f006 fb3a 	bl	8018534 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011ec0:	e7f6      	b.n	8011eb0 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011ec2:	312e      	adds	r1, #46	; 0x2e
 8011ec4:	e7fa      	b.n	8011ebc <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011ec8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ecc:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011ed0:	b08a      	sub	sp, #40	; 0x28
 8011ed2:	4604      	mov	r4, r0
 8011ed4:	4688      	mov	r8, r1
 8011ed6:	2b00      	cmp	r3, #0
 8011ed8:	d066      	beq.n	8011fa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011eda:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011edc:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011ee0:	a805      	add	r0, sp, #20
 8011ee2:	f006 fabf 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011ee6:	4607      	mov	r7, r0
 8011ee8:	a805      	add	r0, sp, #20
 8011eea:	f006 faef 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011eee:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011ef2:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011ef6:	4432      	add	r2, r6
 8011ef8:	b292      	uxth	r2, r2
 8011efa:	2300      	movs	r3, #0
 8011efc:	fa0f fc82 	sxth.w	ip, r2
 8011f00:	459c      	cmp	ip, r3
 8011f02:	9306      	str	r3, [sp, #24]
 8011f04:	dd52      	ble.n	8011fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f06:	42b7      	cmp	r7, r6
 8011f08:	dd50      	ble.n	8011fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f0a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011f0e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011f12:	442b      	add	r3, r5
 8011f14:	b29b      	uxth	r3, r3
 8011f16:	b219      	sxth	r1, r3
 8011f18:	2900      	cmp	r1, #0
 8011f1a:	dd47      	ble.n	8011fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f1c:	42a8      	cmp	r0, r5
 8011f1e:	dd45      	ble.n	8011fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f20:	4567      	cmp	r7, ip
 8011f22:	bfb8      	it	lt
 8011f24:	b2ba      	uxthlt	r2, r7
 8011f26:	4288      	cmp	r0, r1
 8011f28:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011f2c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011f30:	bfb8      	it	lt
 8011f32:	b283      	uxthlt	r3, r0
 8011f34:	1b92      	subs	r2, r2, r6
 8011f36:	1b5b      	subs	r3, r3, r5
 8011f38:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011f3c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011f40:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011f44:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011f48:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011f4c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011f50:	429a      	cmp	r2, r3
 8011f52:	d026      	beq.n	8011fa2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f54:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011f58:	2b00      	cmp	r3, #0
 8011f5a:	dd22      	ble.n	8011fa2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f5c:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011f60:	2b00      	cmp	r3, #0
 8011f62:	dd1e      	ble.n	8011fa2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f64:	2300      	movs	r3, #0
 8011f66:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011f6a:	6823      	ldr	r3, [r4, #0]
 8011f6c:	a908      	add	r1, sp, #32
 8011f6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f70:	4620      	mov	r0, r4
 8011f72:	4798      	blx	r3
 8011f74:	4b0f      	ldr	r3, [pc, #60]	; (8011fb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011f76:	681b      	ldr	r3, [r3, #0]
 8011f78:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011f7c:	b10a      	cbz	r2, 8011f82 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011f7e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011f80:	b900      	cbnz	r0, 8011f84 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011f82:	6898      	ldr	r0, [r3, #8]
 8011f84:	6801      	ldr	r1, [r0, #0]
 8011f86:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011f8a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011f8e:	2501      	movs	r5, #1
 8011f90:	9502      	str	r5, [sp, #8]
 8011f92:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011f96:	9401      	str	r4, [sp, #4]
 8011f98:	ac06      	add	r4, sp, #24
 8011f9a:	9400      	str	r4, [sp, #0]
 8011f9c:	688c      	ldr	r4, [r1, #8]
 8011f9e:	a905      	add	r1, sp, #20
 8011fa0:	47a0      	blx	r4
 8011fa2:	b00a      	add	sp, #40	; 0x28
 8011fa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011fa8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011faa:	e797      	b.n	8011edc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011fac:	2300      	movs	r3, #0
 8011fae:	9307      	str	r3, [sp, #28]
 8011fb0:	e7ca      	b.n	8011f48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011fb2:	bf00      	nop
 8011fb4:	20012db4 	.word	0x20012db4

08011fb8 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011fb8:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011fbc:	b12a      	cbz	r2, 8011fca <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011fbe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011fc2:	b112      	cbz	r2, 8011fca <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011fc4:	6803      	ldr	r3, [r0, #0]
 8011fc6:	695b      	ldr	r3, [r3, #20]
 8011fc8:	4718      	bx	r3
 8011fca:	4770      	bx	lr

08011fcc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011fcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011fd0:	4b2f      	ldr	r3, [pc, #188]	; (8012090 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011fd2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011fd4:	881b      	ldrh	r3, [r3, #0]
 8011fd6:	4293      	cmp	r3, r2
 8011fd8:	b08d      	sub	sp, #52	; 0x34
 8011fda:	4604      	mov	r4, r0
 8011fdc:	460f      	mov	r7, r1
 8011fde:	d954      	bls.n	801208a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011fe0:	4b2c      	ldr	r3, [pc, #176]	; (8012094 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8011fe2:	6819      	ldr	r1, [r3, #0]
 8011fe4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8011fe8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8011fec:	4a2a      	ldr	r2, [pc, #168]	; (8012098 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8011fee:	6812      	ldr	r2, [r2, #0]
 8011ff0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8011ff4:	2900      	cmp	r1, #0
 8011ff6:	d048      	beq.n	801208a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8011ff8:	785a      	ldrb	r2, [r3, #1]
 8011ffa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011ffe:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012002:	4b26      	ldr	r3, [pc, #152]	; (801209c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012004:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012008:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801200c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012010:	6b26      	ldr	r6, [r4, #48]	; 0x30
 8012012:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 8012016:	9107      	str	r1, [sp, #28]
 8012018:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801201c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012020:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 8012024:	681a      	ldr	r2, [r3, #0]
 8012026:	f88d 8020 	strb.w	r8, [sp, #32]
 801202a:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 801202e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 8012032:	9609      	str	r6, [sp, #36]	; 0x24
 8012034:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012038:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801203c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012040:	b10b      	cbz	r3, 8012046 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012042:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 8012044:	b905      	cbnz	r5, 8012048 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012046:	6895      	ldr	r5, [r2, #8]
 8012048:	ae05      	add	r6, sp, #20
 801204a:	4621      	mov	r1, r4
 801204c:	4630      	mov	r0, r6
 801204e:	f003 ff7b 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012052:	4b13      	ldr	r3, [pc, #76]	; (80120a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 8012054:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8012056:	6818      	ldr	r0, [r3, #0]
 8012058:	f7f6 f86a 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 801205c:	6823      	ldr	r3, [r4, #0]
 801205e:	4680      	mov	r8, r0
 8012060:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8012062:	4620      	mov	r0, r4
 8012064:	4798      	blx	r3
 8012066:	6823      	ldr	r3, [r4, #0]
 8012068:	4681      	mov	r9, r0
 801206a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801206e:	4620      	mov	r0, r4
 8012070:	4798      	blx	r3
 8012072:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012076:	ab07      	add	r3, sp, #28
 8012078:	9300      	str	r3, [sp, #0]
 801207a:	f8cd 8004 	str.w	r8, [sp, #4]
 801207e:	463b      	mov	r3, r7
 8012080:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012084:	4628      	mov	r0, r5
 8012086:	f7f6 f805 	bl	8008094 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801208a:	b00d      	add	sp, #52	; 0x34
 801208c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012090:	20012e10 	.word	0x20012e10
 8012094:	20012e0c 	.word	0x20012e0c
 8012098:	20012e14 	.word	0x20012e14
 801209c:	20012db4 	.word	0x20012db4
 80120a0:	20012e18 	.word	0x20012e18

080120a4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 80120a4:	4770      	bx	lr

080120a6 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 80120a6:	4770      	bx	lr

080120a8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 80120a8:	b510      	push	{r4, lr}
 80120aa:	213c      	movs	r1, #60	; 0x3c
 80120ac:	4604      	mov	r4, r0
 80120ae:	f016 fe3e 	bl	8028d2e <_ZdlPvj>
 80120b2:	4620      	mov	r0, r4
 80120b4:	bd10      	pop	{r4, pc}

080120b6 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 80120b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120ba:	461c      	mov	r4, r3
 80120bc:	4606      	mov	r6, r0
 80120be:	9f06      	ldr	r7, [sp, #24]
 80120c0:	f7ff febf 	bl	8011e42 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80120c4:	8823      	ldrh	r3, [r4, #0]
 80120c6:	86b3      	strh	r3, [r6, #52]	; 0x34
 80120c8:	883b      	ldrh	r3, [r7, #0]
 80120ca:	86f3      	strh	r3, [r6, #54]	; 0x36
 80120cc:	4638      	mov	r0, r7
 80120ce:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 80120d2:	f006 f9c7 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80120d6:	f04f 0802 	mov.w	r8, #2
 80120da:	fb95 f5f8 	sdiv	r5, r5, r8
 80120de:	b2ad      	uxth	r5, r5
 80120e0:	fb90 f0f8 	sdiv	r0, r0, r8
 80120e4:	1a2d      	subs	r5, r5, r0
 80120e6:	8735      	strh	r5, [r6, #56]	; 0x38
 80120e8:	4638      	mov	r0, r7
 80120ea:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 80120ee:	fb94 f4f8 	sdiv	r4, r4, r8
 80120f2:	f006 f9eb 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80120f6:	b2a4      	uxth	r4, r4
 80120f8:	fb90 f0f8 	sdiv	r0, r0, r8
 80120fc:	1a24      	subs	r4, r4, r0
 80120fe:	8774      	strh	r4, [r6, #58]	; 0x3a
 8012100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012104 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012104:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012108:	4604      	mov	r4, r0
 801210a:	b08c      	sub	sp, #48	; 0x30
 801210c:	460d      	mov	r5, r1
 801210e:	f7ff fedb 	bl	8011ec8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012112:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012116:	2b00      	cmp	r3, #0
 8012118:	d05d      	beq.n	80121d6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 801211a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801211c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012120:	a805      	add	r0, sp, #20
 8012122:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 8012126:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 801212a:	f006 f99b 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801212e:	4606      	mov	r6, r0
 8012130:	a805      	add	r0, sp, #20
 8012132:	f006 f9cb 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012136:	6869      	ldr	r1, [r5, #4]
 8012138:	f8ad 001e 	strh.w	r0, [sp, #30]
 801213c:	6828      	ldr	r0, [r5, #0]
 801213e:	f8ad 8018 	strh.w	r8, [sp, #24]
 8012142:	ab08      	add	r3, sp, #32
 8012144:	ad08      	add	r5, sp, #32
 8012146:	c303      	stmia	r3!, {r0, r1}
 8012148:	a906      	add	r1, sp, #24
 801214a:	4628      	mov	r0, r5
 801214c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8012150:	f8ad 601c 	strh.w	r6, [sp, #28]
 8012154:	f7fd fc62 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8012158:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801215c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012160:	429a      	cmp	r2, r3
 8012162:	d035      	beq.n	80121d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012164:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8012168:	2b00      	cmp	r3, #0
 801216a:	dd31      	ble.n	80121d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 801216c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 8012170:	2b00      	cmp	r3, #0
 8012172:	dd2d      	ble.n	80121d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012174:	2300      	movs	r3, #0
 8012176:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 801217a:	6823      	ldr	r3, [r4, #0]
 801217c:	a90a      	add	r1, sp, #40	; 0x28
 801217e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012180:	4620      	mov	r0, r4
 8012182:	4798      	blx	r3
 8012184:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012188:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801218a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801218e:	1a9b      	subs	r3, r3, r2
 8012190:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012194:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 8012196:	1ac9      	subs	r1, r1, r3
 8012198:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 801219c:	490f      	ldr	r1, [pc, #60]	; (80121dc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801219e:	6809      	ldr	r1, [r1, #0]
 80121a0:	f891 0058 	ldrb.w	r0, [r1, #88]	; 0x58
 80121a4:	b108      	cbz	r0, 80121aa <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 80121a6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 80121a8:	b900      	cbnz	r0, 80121ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 80121aa:	6888      	ldr	r0, [r1, #8]
 80121ac:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 80121b0:	440b      	add	r3, r1
 80121b2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80121b6:	2601      	movs	r6, #1
 80121b8:	440a      	add	r2, r1
 80121ba:	6801      	ldr	r1, [r0, #0]
 80121bc:	9602      	str	r6, [sp, #8]
 80121be:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 80121c2:	e9cd 5400 	strd	r5, r4, [sp]
 80121c6:	b21b      	sxth	r3, r3
 80121c8:	688c      	ldr	r4, [r1, #8]
 80121ca:	b212      	sxth	r2, r2
 80121cc:	a905      	add	r1, sp, #20
 80121ce:	47a0      	blx	r4
 80121d0:	b00c      	add	sp, #48	; 0x30
 80121d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80121d6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80121d8:	e7a0      	b.n	801211c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 80121da:	bf00      	nop
 80121dc:	20012db4 	.word	0x20012db4

080121e0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 80121e0:	b510      	push	{r4, lr}
 80121e2:	2101      	movs	r1, #1
 80121e4:	2200      	movs	r2, #0
 80121e6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80121ea:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80121ee:	4c0e      	ldr	r4, [pc, #56]	; (8012228 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 80121f0:	8082      	strh	r2, [r0, #4]
 80121f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80121f6:	80c2      	strh	r2, [r0, #6]
 80121f8:	8102      	strh	r2, [r0, #8]
 80121fa:	8142      	strh	r2, [r0, #10]
 80121fc:	8182      	strh	r2, [r0, #12]
 80121fe:	81c2      	strh	r2, [r0, #14]
 8012200:	8202      	strh	r2, [r0, #16]
 8012202:	8242      	strh	r2, [r0, #18]
 8012204:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012208:	61c2      	str	r2, [r0, #28]
 801220a:	8402      	strh	r2, [r0, #32]
 801220c:	8442      	strh	r2, [r0, #34]	; 0x22
 801220e:	6282      	str	r2, [r0, #40]	; 0x28
 8012210:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012214:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012216:	8601      	strh	r1, [r0, #48]	; 0x30
 8012218:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801221c:	6004      	str	r4, [r0, #0]
 801221e:	8681      	strh	r1, [r0, #52]	; 0x34
 8012220:	86c1      	strh	r1, [r0, #54]	; 0x36
 8012222:	8702      	strh	r2, [r0, #56]	; 0x38
 8012224:	8742      	strh	r2, [r0, #58]	; 0x3a
 8012226:	bd10      	pop	{r4, pc}
 8012228:	0802dfc0 	.word	0x0802dfc0

0801222c <_ZN8touchgfx5ImageD1Ev>:
 801222c:	4770      	bx	lr

0801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801222e:	b570      	push	{r4, r5, r6, lr}
 8012230:	880b      	ldrh	r3, [r1, #0]
 8012232:	84c3      	strh	r3, [r0, #38]	; 0x26
 8012234:	4604      	mov	r4, r0
 8012236:	4608      	mov	r0, r1
 8012238:	460d      	mov	r5, r1
 801223a:	f006 f913 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801223e:	4606      	mov	r6, r0
 8012240:	4628      	mov	r0, r5
 8012242:	f006 f943 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012246:	6823      	ldr	r3, [r4, #0]
 8012248:	4605      	mov	r5, r0
 801224a:	4631      	mov	r1, r6
 801224c:	4620      	mov	r0, r4
 801224e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012250:	4798      	blx	r3
 8012252:	6823      	ldr	r3, [r4, #0]
 8012254:	4629      	mov	r1, r5
 8012256:	4620      	mov	r0, r4
 8012258:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801225a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801225e:	4718      	bx	r3

08012260 <_ZN8touchgfx5ImageD0Ev>:
 8012260:	b510      	push	{r4, lr}
 8012262:	212c      	movs	r1, #44	; 0x2c
 8012264:	4604      	mov	r4, r0
 8012266:	f016 fd62 	bl	8028d2e <_ZdlPvj>
 801226a:	4620      	mov	r0, r4
 801226c:	bd10      	pop	{r4, pc}

0801226e <_ZNK8touchgfx5Image12getSolidRectEv>:
 801226e:	b510      	push	{r4, lr}
 8012270:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8012274:	2bff      	cmp	r3, #255	; 0xff
 8012276:	4604      	mov	r4, r0
 8012278:	d006      	beq.n	8012288 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801227a:	2300      	movs	r3, #0
 801227c:	8003      	strh	r3, [r0, #0]
 801227e:	8043      	strh	r3, [r0, #2]
 8012280:	8083      	strh	r3, [r0, #4]
 8012282:	80c3      	strh	r3, [r0, #6]
 8012284:	4620      	mov	r0, r4
 8012286:	bd10      	pop	{r4, pc}
 8012288:	3126      	adds	r1, #38	; 0x26
 801228a:	f006 f953 	bl	8018534 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801228e:	e7f9      	b.n	8012284 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

08012290 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8012290:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 8012294:	b12a      	cbz	r2, 80122a2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8012296:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801229a:	b112      	cbz	r2, 80122a2 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801229c:	6803      	ldr	r3, [r0, #0]
 801229e:	695b      	ldr	r3, [r3, #20]
 80122a0:	4718      	bx	r3
 80122a2:	4770      	bx	lr

080122a4 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80122a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122a8:	4604      	mov	r4, r0
 80122aa:	b088      	sub	sp, #32
 80122ac:	f854 3b26 	ldr.w	r3, [r4], #38
 80122b0:	2500      	movs	r5, #0
 80122b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80122b4:	460f      	mov	r7, r1
 80122b6:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80122ba:	a904      	add	r1, sp, #16
 80122bc:	4606      	mov	r6, r0
 80122be:	4798      	blx	r3
 80122c0:	4620      	mov	r0, r4
 80122c2:	f006 f8cf 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80122c6:	4680      	mov	r8, r0
 80122c8:	4620      	mov	r0, r4
 80122ca:	f006 f8ff 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80122ce:	9506      	str	r5, [sp, #24]
 80122d0:	ad06      	add	r5, sp, #24
 80122d2:	f8ad 001e 	strh.w	r0, [sp, #30]
 80122d6:	4639      	mov	r1, r7
 80122d8:	4628      	mov	r0, r5
 80122da:	f8ad 801c 	strh.w	r8, [sp, #28]
 80122de:	f7fd fb9d 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 80122e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80122e6:	2b00      	cmp	r3, #0
 80122e8:	dd19      	ble.n	801231e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80122ea:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80122ee:	2b00      	cmp	r3, #0
 80122f0:	dd15      	ble.n	801231e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80122f2:	4b0c      	ldr	r3, [pc, #48]	; (8012324 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80122f4:	681b      	ldr	r3, [r3, #0]
 80122f6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80122fa:	b10a      	cbz	r2, 8012300 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80122fc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80122fe:	b900      	cbnz	r0, 8012302 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012300:	6898      	ldr	r0, [r3, #8]
 8012302:	6801      	ldr	r1, [r0, #0]
 8012304:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012308:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801230c:	2701      	movs	r7, #1
 801230e:	9702      	str	r7, [sp, #8]
 8012310:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 8012314:	e9cd 5600 	strd	r5, r6, [sp]
 8012318:	688d      	ldr	r5, [r1, #8]
 801231a:	4621      	mov	r1, r4
 801231c:	47a8      	blx	r5
 801231e:	b008      	add	sp, #32
 8012320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012324:	20012db4 	.word	0x20012db4

08012328 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012328:	4770      	bx	lr

0801232a <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801232a:	b510      	push	{r4, lr}
 801232c:	2148      	movs	r1, #72	; 0x48
 801232e:	4604      	mov	r4, r0
 8012330:	f016 fcfd 	bl	8028d2e <_ZdlPvj>
 8012334:	4620      	mov	r0, r4
 8012336:	bd10      	pop	{r4, pc}

08012338 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012338:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801233c:	b08d      	sub	sp, #52	; 0x34
 801233e:	4604      	mov	r4, r0
 8012340:	460f      	mov	r7, r1
 8012342:	f7ff fdc1 	bl	8011ec8 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012346:	4a55      	ldr	r2, [pc, #340]	; (801249c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012348:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801234a:	8812      	ldrh	r2, [r2, #0]
 801234c:	429a      	cmp	r2, r3
 801234e:	f240 8082 	bls.w	8012456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012352:	4d53      	ldr	r5, [pc, #332]	; (80124a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012354:	682a      	ldr	r2, [r5, #0]
 8012356:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801235a:	4b52      	ldr	r3, [pc, #328]	; (80124a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 801235c:	681b      	ldr	r3, [r3, #0]
 801235e:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012362:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 8012366:	2200      	movs	r2, #0
 8012368:	e9cd 2203 	strd	r2, r2, [sp, #12]
 801236c:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012370:	2a03      	cmp	r2, #3
 8012372:	d811      	bhi.n	8012398 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012374:	e8df f002 	tbb	[pc, r2]
 8012378:	89727902 	.word	0x89727902
 801237c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012380:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012384:	1ad2      	subs	r2, r2, r3
 8012386:	2002      	movs	r0, #2
 8012388:	f8ad 1010 	strh.w	r1, [sp, #16]
 801238c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012390:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012394:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012398:	f10d 080c 	add.w	r8, sp, #12
 801239c:	e898 0003 	ldmia.w	r8, {r0, r1}
 80123a0:	f10d 0914 	add.w	r9, sp, #20
 80123a4:	e889 0003 	stmia.w	r9, {r0, r1}
 80123a8:	4639      	mov	r1, r7
 80123aa:	4648      	mov	r0, r9
 80123ac:	f7fd fb36 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 80123b0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80123b4:	2b00      	cmp	r3, #0
 80123b6:	dd4e      	ble.n	8012456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80123b8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80123bc:	2b00      	cmp	r3, #0
 80123be:	dd4a      	ble.n	8012456 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80123c0:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80123c4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80123c8:	1a9b      	subs	r3, r3, r2
 80123ca:	f8ad 3014 	strh.w	r3, [sp, #20]
 80123ce:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 80123d2:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 80123d6:	1a9b      	subs	r3, r3, r2
 80123d8:	f8ad 3016 	strh.w	r3, [sp, #22]
 80123dc:	6823      	ldr	r3, [r4, #0]
 80123de:	4641      	mov	r1, r8
 80123e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80123e2:	4620      	mov	r0, r4
 80123e4:	4798      	blx	r3
 80123e6:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80123ea:	2b00      	cmp	r3, #0
 80123ec:	d053      	beq.n	8012496 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80123ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80123f0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80123f2:	682b      	ldr	r3, [r5, #0]
 80123f4:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80123f8:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80123fc:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012400:	785b      	ldrb	r3, [r3, #1]
 8012402:	9209      	str	r2, [sp, #36]	; 0x24
 8012404:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012408:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801240c:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012410:	2300      	movs	r3, #0
 8012412:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8012416:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801241a:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801241e:	4b22      	ldr	r3, [pc, #136]	; (80124a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012420:	9607      	str	r6, [sp, #28]
 8012422:	681b      	ldr	r3, [r3, #0]
 8012424:	f88d 5020 	strb.w	r5, [sp, #32]
 8012428:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 801242c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012430:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8012434:	b10a      	cbz	r2, 801243a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012436:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 8012438:	b904      	cbnz	r4, 801243c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 801243a:	689c      	ldr	r4, [r3, #8]
 801243c:	4b1b      	ldr	r3, [pc, #108]	; (80124ac <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 801243e:	6818      	ldr	r0, [r3, #0]
 8012440:	f7f5 fe76 	bl	8008130 <_ZNK8touchgfx5Texts7getTextEt>
 8012444:	ab07      	add	r3, sp, #28
 8012446:	9001      	str	r0, [sp, #4]
 8012448:	9300      	str	r3, [sp, #0]
 801244a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801244e:	464b      	mov	r3, r9
 8012450:	4620      	mov	r0, r4
 8012452:	f7f5 fe1f 	bl	8008094 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012456:	b00d      	add	sp, #52	; 0x34
 8012458:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801245c:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012460:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012464:	1ad2      	subs	r2, r2, r3
 8012466:	3201      	adds	r2, #1
 8012468:	e78d      	b.n	8012386 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 801246a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801246e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012472:	1ad2      	subs	r2, r2, r3
 8012474:	3201      	adds	r2, #1
 8012476:	2002      	movs	r0, #2
 8012478:	f8ad 3010 	strh.w	r3, [sp, #16]
 801247c:	fb92 f2f0 	sdiv	r2, r2, r0
 8012480:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012484:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012488:	e786      	b.n	8012398 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801248a:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 801248e:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012492:	1ad2      	subs	r2, r2, r3
 8012494:	e7ef      	b.n	8012476 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012496:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012498:	e7aa      	b.n	80123f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 801249a:	bf00      	nop
 801249c:	20012e10 	.word	0x20012e10
 80124a0:	20012e0c 	.word	0x20012e0c
 80124a4:	20012e14 	.word	0x20012e14
 80124a8:	20012db4 	.word	0x20012db4
 80124ac:	20012e18 	.word	0x20012e18

080124b0 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 80124b0:	b510      	push	{r4, lr}
 80124b2:	2101      	movs	r1, #1
 80124b4:	4c13      	ldr	r4, [pc, #76]	; (8012504 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 80124b6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80124ba:	2200      	movs	r2, #0
 80124bc:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 80124c0:	6004      	str	r4, [r0, #0]
 80124c2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80124c6:	4c10      	ldr	r4, [pc, #64]	; (8012508 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 80124c8:	8082      	strh	r2, [r0, #4]
 80124ca:	80c2      	strh	r2, [r0, #6]
 80124cc:	8102      	strh	r2, [r0, #8]
 80124ce:	8142      	strh	r2, [r0, #10]
 80124d0:	8182      	strh	r2, [r0, #12]
 80124d2:	81c2      	strh	r2, [r0, #14]
 80124d4:	8202      	strh	r2, [r0, #16]
 80124d6:	8242      	strh	r2, [r0, #18]
 80124d8:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80124dc:	61c2      	str	r2, [r0, #28]
 80124de:	8402      	strh	r2, [r0, #32]
 80124e0:	8442      	strh	r2, [r0, #34]	; 0x22
 80124e2:	6282      	str	r2, [r0, #40]	; 0x28
 80124e4:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80124e8:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80124ea:	8601      	strh	r1, [r0, #48]	; 0x30
 80124ec:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80124f0:	6344      	str	r4, [r0, #52]	; 0x34
 80124f2:	8701      	strh	r1, [r0, #56]	; 0x38
 80124f4:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80124f8:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80124fc:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012500:	bd10      	pop	{r4, pc}
 8012502:	bf00      	nop
 8012504:	0802e0a4 	.word	0x0802e0a4
 8012508:	0802b4f8 	.word	0x0802b4f8

0801250c <_ZN8touchgfx7OutlineD1Ev>:
 801250c:	4770      	bx	lr

0801250e <_ZN8touchgfx7OutlineD0Ev>:
 801250e:	b510      	push	{r4, lr}
 8012510:	2130      	movs	r1, #48	; 0x30
 8012512:	4604      	mov	r4, r0
 8012514:	f016 fc0b 	bl	8028d2e <_ZdlPvj>
 8012518:	4620      	mov	r0, r4
 801251a:	bd10      	pop	{r4, pc}

0801251c <_ZN8touchgfx7Outline5resetEv>:
 801251c:	b510      	push	{r4, lr}
 801251e:	4604      	mov	r4, r0
 8012520:	f000 fe96 	bl	8013250 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8012524:	60e0      	str	r0, [r4, #12]
 8012526:	f000 fe99 	bl	801325c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801252a:	68e3      	ldr	r3, [r4, #12]
 801252c:	6123      	str	r3, [r4, #16]
 801252e:	08c0      	lsrs	r0, r0, #3
 8012530:	2200      	movs	r2, #0
 8012532:	f647 71ff 	movw	r1, #32767	; 0x7fff
 8012536:	3801      	subs	r0, #1
 8012538:	6060      	str	r0, [r4, #4]
 801253a:	60a2      	str	r2, [r4, #8]
 801253c:	8019      	strh	r1, [r3, #0]
 801253e:	8059      	strh	r1, [r3, #2]
 8012540:	809a      	strh	r2, [r3, #4]
 8012542:	80da      	strh	r2, [r3, #6]
 8012544:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012546:	f023 0301 	bic.w	r3, r3, #1
 801254a:	f043 0302 	orr.w	r3, r3, #2
 801254e:	6263      	str	r3, [r4, #36]	; 0x24
 8012550:	bd10      	pop	{r4, pc}
	...

08012554 <_ZN8touchgfx7OutlineC1Ev>:
 8012554:	b510      	push	{r4, lr}
 8012556:	4b0a      	ldr	r3, [pc, #40]	; (8012580 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012558:	6003      	str	r3, [r0, #0]
 801255a:	2300      	movs	r3, #0
 801255c:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012560:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012564:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012568:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801256c:	6243      	str	r3, [r0, #36]	; 0x24
 801256e:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8012572:	4604      	mov	r4, r0
 8012574:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012578:	f7ff ffd0 	bl	801251c <_ZN8touchgfx7Outline5resetEv>
 801257c:	4620      	mov	r0, r4
 801257e:	bd10      	pop	{r4, pc}
 8012580:	0802e118 	.word	0x0802e118

08012584 <_ZN8touchgfx7Outline10renderLineEiiii>:
 8012584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012588:	b093      	sub	sp, #76	; 0x4c
 801258a:	1156      	asrs	r6, r2, #5
 801258c:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801258e:	9305      	str	r3, [sp, #20]
 8012590:	f004 051f 	and.w	r5, r4, #31
 8012594:	1153      	asrs	r3, r2, #5
 8012596:	9504      	str	r5, [sp, #16]
 8012598:	1165      	asrs	r5, r4, #5
 801259a:	9303      	str	r3, [sp, #12]
 801259c:	42ae      	cmp	r6, r5
 801259e:	ea4f 1364 	mov.w	r3, r4, asr #5
 80125a2:	9306      	str	r3, [sp, #24]
 80125a4:	f002 031f 	and.w	r3, r2, #31
 80125a8:	f040 80f8 	bne.w	801279c <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 80125ac:	9c04      	ldr	r4, [sp, #16]
 80125ae:	9a05      	ldr	r2, [sp, #20]
 80125b0:	42a3      	cmp	r3, r4
 80125b2:	ea4f 1e62 	mov.w	lr, r2, asr #5
 80125b6:	6902      	ldr	r2, [r0, #16]
 80125b8:	d125      	bne.n	8012606 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 80125ba:	f9b2 3000 	ldrsh.w	r3, [r2]
 80125be:	459e      	cmp	lr, r3
 80125c0:	d103      	bne.n	80125ca <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 80125c2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80125c6:	429e      	cmp	r6, r3
 80125c8:	d035      	beq.n	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80125ca:	88d1      	ldrh	r1, [r2, #6]
 80125cc:	8893      	ldrh	r3, [r2, #4]
 80125ce:	430b      	orrs	r3, r1
 80125d0:	d010      	beq.n	80125f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80125d2:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 80125d6:	2b00      	cmp	r3, #0
 80125d8:	db0c      	blt.n	80125f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80125da:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80125dc:	428b      	cmp	r3, r1
 80125de:	da09      	bge.n	80125f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 80125e0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80125e4:	428b      	cmp	r3, r1
 80125e6:	bf38      	it	cc
 80125e8:	3208      	addcc	r2, #8
 80125ea:	f103 0301 	add.w	r3, r3, #1
 80125ee:	bf38      	it	cc
 80125f0:	6102      	strcc	r2, [r0, #16]
 80125f2:	6083      	str	r3, [r0, #8]
 80125f4:	6903      	ldr	r3, [r0, #16]
 80125f6:	9a03      	ldr	r2, [sp, #12]
 80125f8:	f8a3 e000 	strh.w	lr, [r3]
 80125fc:	805a      	strh	r2, [r3, #2]
 80125fe:	2200      	movs	r2, #0
 8012600:	809a      	strh	r2, [r3, #4]
 8012602:	80da      	strh	r2, [r3, #6]
 8012604:	e017      	b.n	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012606:	9c05      	ldr	r4, [sp, #20]
 8012608:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801260c:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012610:	f004 041f 	and.w	r4, r4, #31
 8012614:	114e      	asrs	r6, r1, #5
 8012616:	9402      	str	r4, [sp, #8]
 8012618:	9c04      	ldr	r4, [sp, #16]
 801261a:	4576      	cmp	r6, lr
 801261c:	f001 0c1f 	and.w	ip, r1, #31
 8012620:	eba4 0403 	sub.w	r4, r4, r3
 8012624:	d10a      	bne.n	801263c <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 8012626:	9b02      	ldr	r3, [sp, #8]
 8012628:	449c      	add	ip, r3
 801262a:	44a0      	add	r8, r4
 801262c:	fb04 a40c 	mla	r4, r4, ip, sl
 8012630:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012634:	80d4      	strh	r4, [r2, #6]
 8012636:	b013      	add	sp, #76	; 0x4c
 8012638:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801263c:	9d05      	ldr	r5, [sp, #20]
 801263e:	1a69      	subs	r1, r5, r1
 8012640:	bf5b      	ittet	pl
 8012642:	f1cc 0520 	rsbpl	r5, ip, #32
 8012646:	436c      	mulpl	r4, r5
 8012648:	2500      	movmi	r5, #0
 801264a:	2520      	movpl	r5, #32
 801264c:	bf44      	itt	mi
 801264e:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012652:	4249      	negmi	r1, r1
 8012654:	9501      	str	r5, [sp, #4]
 8012656:	9f01      	ldr	r7, [sp, #4]
 8012658:	fb94 f5f1 	sdiv	r5, r4, r1
 801265c:	fb01 4415 	mls	r4, r1, r5, r4
 8012660:	bf54      	ite	pl
 8012662:	f04f 0901 	movpl.w	r9, #1
 8012666:	f04f 39ff 	movmi.w	r9, #4294967295
 801266a:	2c00      	cmp	r4, #0
 801266c:	bfb8      	it	lt
 801266e:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012672:	44bc      	add	ip, r7
 8012674:	44a8      	add	r8, r5
 8012676:	fb05 ac0c 	mla	ip, r5, ip, sl
 801267a:	f8a2 8004 	strh.w	r8, [r2, #4]
 801267e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012682:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012686:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801268a:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801268e:	bfb8      	it	lt
 8012690:	1864      	addlt	r4, r4, r1
 8012692:	ea58 0202 	orrs.w	r2, r8, r2
 8012696:	444e      	add	r6, r9
 8012698:	d011      	beq.n	80126be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801269a:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801269e:	f1b8 0f00 	cmp.w	r8, #0
 80126a2:	db0c      	blt.n	80126be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80126a4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80126a6:	4590      	cmp	r8, r2
 80126a8:	da09      	bge.n	80126be <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 80126aa:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 80126ae:	4590      	cmp	r8, r2
 80126b0:	bf3c      	itt	cc
 80126b2:	f10c 0208 	addcc.w	r2, ip, #8
 80126b6:	6102      	strcc	r2, [r0, #16]
 80126b8:	f108 0201 	add.w	r2, r8, #1
 80126bc:	6082      	str	r2, [r0, #8]
 80126be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126c2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80126c6:	f8ac 6000 	strh.w	r6, [ip]
 80126ca:	2700      	movs	r7, #0
 80126cc:	45b6      	cmp	lr, r6
 80126ce:	f8ac 2002 	strh.w	r2, [ip, #2]
 80126d2:	f8ac 7004 	strh.w	r7, [ip, #4]
 80126d6:	f8ac 7006 	strh.w	r7, [ip, #6]
 80126da:	442b      	add	r3, r5
 80126dc:	d04d      	beq.n	801277a <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 80126de:	9f04      	ldr	r7, [sp, #16]
 80126e0:	1aff      	subs	r7, r7, r3
 80126e2:	443d      	add	r5, r7
 80126e4:	016d      	lsls	r5, r5, #5
 80126e6:	fb95 f8f1 	sdiv	r8, r5, r1
 80126ea:	fb01 5518 	mls	r5, r1, r8, r5
 80126ee:	2d00      	cmp	r5, #0
 80126f0:	bfb8      	it	lt
 80126f2:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80126f6:	f108 0701 	add.w	r7, r8, #1
 80126fa:	bfb8      	it	lt
 80126fc:	186d      	addlt	r5, r5, r1
 80126fe:	1a64      	subs	r4, r4, r1
 8012700:	9703      	str	r7, [sp, #12]
 8012702:	f04f 0a00 	mov.w	sl, #0
 8012706:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801270a:	1964      	adds	r4, r4, r5
 801270c:	bf58      	it	pl
 801270e:	9f03      	ldrpl	r7, [sp, #12]
 8012710:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012714:	bf48      	it	mi
 8012716:	4647      	movmi	r7, r8
 8012718:	44bb      	add	fp, r7
 801271a:	f8ac b004 	strh.w	fp, [ip, #4]
 801271e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012722:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012726:	f8ac b006 	strh.w	fp, [ip, #6]
 801272a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801272e:	443b      	add	r3, r7
 8012730:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012734:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012738:	bf58      	it	pl
 801273a:	1a64      	subpl	r4, r4, r1
 801273c:	ea5b 0707 	orrs.w	r7, fp, r7
 8012740:	444e      	add	r6, r9
 8012742:	d011      	beq.n	8012768 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012744:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012748:	f1bb 0f00 	cmp.w	fp, #0
 801274c:	db0c      	blt.n	8012768 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801274e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012750:	45bb      	cmp	fp, r7
 8012752:	da09      	bge.n	8012768 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012754:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012758:	45bb      	cmp	fp, r7
 801275a:	bf3c      	itt	cc
 801275c:	f10c 0708 	addcc.w	r7, ip, #8
 8012760:	6107      	strcc	r7, [r0, #16]
 8012762:	f10b 0701 	add.w	r7, fp, #1
 8012766:	6087      	str	r7, [r0, #8]
 8012768:	6907      	ldr	r7, [r0, #16]
 801276a:	45b6      	cmp	lr, r6
 801276c:	803e      	strh	r6, [r7, #0]
 801276e:	807a      	strh	r2, [r7, #2]
 8012770:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012774:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012778:	d1c5      	bne.n	8012706 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801277a:	9a04      	ldr	r2, [sp, #16]
 801277c:	1ad3      	subs	r3, r2, r3
 801277e:	6902      	ldr	r2, [r0, #16]
 8012780:	8891      	ldrh	r1, [r2, #4]
 8012782:	88d6      	ldrh	r6, [r2, #6]
 8012784:	4419      	add	r1, r3
 8012786:	8091      	strh	r1, [r2, #4]
 8012788:	9902      	ldr	r1, [sp, #8]
 801278a:	f101 0c20 	add.w	ip, r1, #32
 801278e:	9901      	ldr	r1, [sp, #4]
 8012790:	ebac 0c01 	sub.w	ip, ip, r1
 8012794:	fb03 630c 	mla	r3, r3, ip, r6
 8012798:	80d3      	strh	r3, [r2, #6]
 801279a:	e74c      	b.n	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801279c:	9d05      	ldr	r5, [sp, #20]
 801279e:	1aa2      	subs	r2, r4, r2
 80127a0:	eba5 0501 	sub.w	r5, r5, r1
 80127a4:	9508      	str	r5, [sp, #32]
 80127a6:	9202      	str	r2, [sp, #8]
 80127a8:	f140 8128 	bpl.w	80129fc <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 80127ac:	9a03      	ldr	r2, [sp, #12]
 80127ae:	2a00      	cmp	r2, #0
 80127b0:	f6ff af41 	blt.w	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80127b4:	9a02      	ldr	r2, [sp, #8]
 80127b6:	4252      	negs	r2, r2
 80127b8:	9202      	str	r2, [sp, #8]
 80127ba:	9a06      	ldr	r2, [sp, #24]
 80127bc:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 80127c0:	f04f 34ff 	mov.w	r4, #4294967295
 80127c4:	9206      	str	r2, [sp, #24]
 80127c6:	462a      	mov	r2, r5
 80127c8:	940b      	str	r4, [sp, #44]	; 0x2c
 80127ca:	435a      	muls	r2, r3
 80127cc:	2400      	movs	r4, #0
 80127ce:	9d02      	ldr	r5, [sp, #8]
 80127d0:	9401      	str	r4, [sp, #4]
 80127d2:	9c02      	ldr	r4, [sp, #8]
 80127d4:	fb92 f4f4 	sdiv	r4, r2, r4
 80127d8:	fb05 2214 	mls	r2, r5, r4, r2
 80127dc:	2a00      	cmp	r2, #0
 80127de:	9207      	str	r2, [sp, #28]
 80127e0:	bfbc      	itt	lt
 80127e2:	1952      	addlt	r2, r2, r5
 80127e4:	9207      	strlt	r2, [sp, #28]
 80127e6:	9a01      	ldr	r2, [sp, #4]
 80127e8:	6905      	ldr	r5, [r0, #16]
 80127ea:	bfb8      	it	lt
 80127ec:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80127f0:	eb04 0901 	add.w	r9, r4, r1
 80127f4:	429a      	cmp	r2, r3
 80127f6:	ea4f 1669 	mov.w	r6, r9, asr #5
 80127fa:	f040 8112 	bne.w	8012a22 <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80127fe:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012802:	429e      	cmp	r6, r3
 8012804:	d104      	bne.n	8012810 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012806:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801280a:	9a03      	ldr	r2, [sp, #12]
 801280c:	429a      	cmp	r2, r3
 801280e:	d01b      	beq.n	8012848 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012810:	88ea      	ldrh	r2, [r5, #6]
 8012812:	88ab      	ldrh	r3, [r5, #4]
 8012814:	4313      	orrs	r3, r2
 8012816:	d010      	beq.n	801283a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012818:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801281c:	2a00      	cmp	r2, #0
 801281e:	db0c      	blt.n	801283a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012820:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012822:	429a      	cmp	r2, r3
 8012824:	da09      	bge.n	801283a <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012826:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801282a:	429a      	cmp	r2, r3
 801282c:	bf38      	it	cc
 801282e:	3508      	addcc	r5, #8
 8012830:	f102 0201 	add.w	r2, r2, #1
 8012834:	bf38      	it	cc
 8012836:	6105      	strcc	r5, [r0, #16]
 8012838:	6082      	str	r2, [r0, #8]
 801283a:	6903      	ldr	r3, [r0, #16]
 801283c:	9a03      	ldr	r2, [sp, #12]
 801283e:	805a      	strh	r2, [r3, #2]
 8012840:	2200      	movs	r2, #0
 8012842:	801e      	strh	r6, [r3, #0]
 8012844:	809a      	strh	r2, [r3, #4]
 8012846:	80da      	strh	r2, [r3, #6]
 8012848:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801284a:	9a03      	ldr	r2, [sp, #12]
 801284c:	6901      	ldr	r1, [r0, #16]
 801284e:	441a      	add	r2, r3
 8012850:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012854:	42b3      	cmp	r3, r6
 8012856:	d103      	bne.n	8012860 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012858:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801285c:	429a      	cmp	r2, r3
 801285e:	d01a      	beq.n	8012896 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012860:	88cc      	ldrh	r4, [r1, #6]
 8012862:	888b      	ldrh	r3, [r1, #4]
 8012864:	4323      	orrs	r3, r4
 8012866:	d010      	beq.n	801288a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012868:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801286c:	2c00      	cmp	r4, #0
 801286e:	db0c      	blt.n	801288a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012870:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012872:	429c      	cmp	r4, r3
 8012874:	da09      	bge.n	801288a <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012876:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801287a:	429c      	cmp	r4, r3
 801287c:	bf38      	it	cc
 801287e:	3108      	addcc	r1, #8
 8012880:	f104 0401 	add.w	r4, r4, #1
 8012884:	bf38      	it	cc
 8012886:	6101      	strcc	r1, [r0, #16]
 8012888:	6084      	str	r4, [r0, #8]
 801288a:	6903      	ldr	r3, [r0, #16]
 801288c:	2100      	movs	r1, #0
 801288e:	801e      	strh	r6, [r3, #0]
 8012890:	805a      	strh	r2, [r3, #2]
 8012892:	8099      	strh	r1, [r3, #4]
 8012894:	80d9      	strh	r1, [r3, #6]
 8012896:	9b06      	ldr	r3, [sp, #24]
 8012898:	4293      	cmp	r3, r2
 801289a:	f000 8082 	beq.w	80129a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801289e:	9b08      	ldr	r3, [sp, #32]
 80128a0:	9c02      	ldr	r4, [sp, #8]
 80128a2:	9902      	ldr	r1, [sp, #8]
 80128a4:	015b      	lsls	r3, r3, #5
 80128a6:	fb93 f1f1 	sdiv	r1, r3, r1
 80128aa:	fb04 3311 	mls	r3, r4, r1, r3
 80128ae:	2b00      	cmp	r3, #0
 80128b0:	9103      	str	r1, [sp, #12]
 80128b2:	9308      	str	r3, [sp, #32]
 80128b4:	da04      	bge.n	80128c0 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 80128b6:	1e4b      	subs	r3, r1, #1
 80128b8:	9303      	str	r3, [sp, #12]
 80128ba:	9b08      	ldr	r3, [sp, #32]
 80128bc:	4423      	add	r3, r4
 80128be:	9308      	str	r3, [sp, #32]
 80128c0:	9b07      	ldr	r3, [sp, #28]
 80128c2:	9902      	ldr	r1, [sp, #8]
 80128c4:	1a5b      	subs	r3, r3, r1
 80128c6:	9307      	str	r3, [sp, #28]
 80128c8:	9b01      	ldr	r3, [sp, #4]
 80128ca:	f1c3 0320 	rsb	r3, r3, #32
 80128ce:	930e      	str	r3, [sp, #56]	; 0x38
 80128d0:	990e      	ldr	r1, [sp, #56]	; 0x38
 80128d2:	9b01      	ldr	r3, [sp, #4]
 80128d4:	1a5b      	subs	r3, r3, r1
 80128d6:	464f      	mov	r7, r9
 80128d8:	930a      	str	r3, [sp, #40]	; 0x28
 80128da:	2600      	movs	r6, #0
 80128dc:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 80128e0:	185b      	adds	r3, r3, r1
 80128e2:	bf58      	it	pl
 80128e4:	9902      	ldrpl	r1, [sp, #8]
 80128e6:	9307      	str	r3, [sp, #28]
 80128e8:	bf5d      	ittte	pl
 80128ea:	1a5b      	subpl	r3, r3, r1
 80128ec:	9307      	strpl	r3, [sp, #28]
 80128ee:	9b03      	ldrpl	r3, [sp, #12]
 80128f0:	9903      	ldrmi	r1, [sp, #12]
 80128f2:	bf58      	it	pl
 80128f4:	1c59      	addpl	r1, r3, #1
 80128f6:	4489      	add	r9, r1
 80128f8:	2a00      	cmp	r2, #0
 80128fa:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80128fe:	db2e      	blt.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012900:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012902:	4293      	cmp	r3, r2
 8012904:	dd2b      	ble.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012906:	9c01      	ldr	r4, [sp, #4]
 8012908:	6905      	ldr	r5, [r0, #16]
 801290a:	46a0      	mov	r8, r4
 801290c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801290e:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012912:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012916:	45a0      	cmp	r8, r4
 8012918:	f040 814f 	bne.w	8012bba <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801291c:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012920:	4551      	cmp	r1, sl
 8012922:	d103      	bne.n	801292c <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012924:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012928:	4291      	cmp	r1, r2
 801292a:	d018      	beq.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801292c:	ea5c 010e 	orrs.w	r1, ip, lr
 8012930:	d00f      	beq.n	8012952 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012932:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012936:	2900      	cmp	r1, #0
 8012938:	db0b      	blt.n	8012952 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801293a:	428b      	cmp	r3, r1
 801293c:	dd09      	ble.n	8012952 <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801293e:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012942:	4299      	cmp	r1, r3
 8012944:	bf38      	it	cc
 8012946:	3508      	addcc	r5, #8
 8012948:	f101 0101 	add.w	r1, r1, #1
 801294c:	bf38      	it	cc
 801294e:	6105      	strcc	r5, [r0, #16]
 8012950:	6081      	str	r1, [r0, #8]
 8012952:	6903      	ldr	r3, [r0, #16]
 8012954:	f8a3 a000 	strh.w	sl, [r3]
 8012958:	805a      	strh	r2, [r3, #2]
 801295a:	809e      	strh	r6, [r3, #4]
 801295c:	80de      	strh	r6, [r3, #6]
 801295e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012960:	6901      	ldr	r1, [r0, #16]
 8012962:	441a      	add	r2, r3
 8012964:	88cc      	ldrh	r4, [r1, #6]
 8012966:	888b      	ldrh	r3, [r1, #4]
 8012968:	4323      	orrs	r3, r4
 801296a:	d010      	beq.n	801298e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801296c:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012970:	2c00      	cmp	r4, #0
 8012972:	db0c      	blt.n	801298e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012974:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012976:	429c      	cmp	r4, r3
 8012978:	da09      	bge.n	801298e <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801297a:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801297e:	429c      	cmp	r4, r3
 8012980:	bf38      	it	cc
 8012982:	3108      	addcc	r1, #8
 8012984:	f104 0401 	add.w	r4, r4, #1
 8012988:	bf38      	it	cc
 801298a:	6101      	strcc	r1, [r0, #16]
 801298c:	6084      	str	r4, [r0, #8]
 801298e:	6903      	ldr	r3, [r0, #16]
 8012990:	f8a3 a000 	strh.w	sl, [r3]
 8012994:	805a      	strh	r2, [r3, #2]
 8012996:	809e      	strh	r6, [r3, #4]
 8012998:	80de      	strh	r6, [r3, #6]
 801299a:	9b06      	ldr	r3, [sp, #24]
 801299c:	4293      	cmp	r3, r2
 801299e:	464f      	mov	r7, r9
 80129a0:	d19c      	bne.n	80128dc <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 80129a2:	9b01      	ldr	r3, [sp, #4]
 80129a4:	6907      	ldr	r7, [r0, #16]
 80129a6:	f1c3 0620 	rsb	r6, r3, #32
 80129aa:	9b05      	ldr	r3, [sp, #20]
 80129ac:	ea4f 1e63 	mov.w	lr, r3, asr #5
 80129b0:	9b04      	ldr	r3, [sp, #16]
 80129b2:	429e      	cmp	r6, r3
 80129b4:	f040 81cc 	bne.w	8012d50 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 80129b8:	f9b7 3000 	ldrsh.w	r3, [r7]
 80129bc:	459e      	cmp	lr, r3
 80129be:	d104      	bne.n	80129ca <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 80129c0:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80129c4:	429a      	cmp	r2, r3
 80129c6:	f43f ae36 	beq.w	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80129ca:	88f9      	ldrh	r1, [r7, #6]
 80129cc:	88bb      	ldrh	r3, [r7, #4]
 80129ce:	430b      	orrs	r3, r1
 80129d0:	d010      	beq.n	80129f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80129d2:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80129d6:	2b00      	cmp	r3, #0
 80129d8:	db0c      	blt.n	80129f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80129da:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80129dc:	428b      	cmp	r3, r1
 80129de:	da09      	bge.n	80129f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 80129e0:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 80129e4:	428b      	cmp	r3, r1
 80129e6:	bf38      	it	cc
 80129e8:	3708      	addcc	r7, #8
 80129ea:	f103 0301 	add.w	r3, r3, #1
 80129ee:	bf38      	it	cc
 80129f0:	6107      	strcc	r7, [r0, #16]
 80129f2:	6083      	str	r3, [r0, #8]
 80129f4:	6903      	ldr	r3, [r0, #16]
 80129f6:	f8a3 e000 	strh.w	lr, [r3]
 80129fa:	e5ff      	b.n	80125fc <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80129fc:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80129fe:	9c03      	ldr	r4, [sp, #12]
 8012a00:	42a2      	cmp	r2, r4
 8012a02:	f6ff ae18 	blt.w	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a06:	9c06      	ldr	r4, [sp, #24]
 8012a08:	42a2      	cmp	r2, r4
 8012a0a:	bfb8      	it	lt
 8012a0c:	3201      	addlt	r2, #1
 8012a0e:	9c08      	ldr	r4, [sp, #32]
 8012a10:	bfb8      	it	lt
 8012a12:	9206      	strlt	r2, [sp, #24]
 8012a14:	f1c3 0220 	rsb	r2, r3, #32
 8012a18:	4362      	muls	r2, r4
 8012a1a:	2401      	movs	r4, #1
 8012a1c:	940b      	str	r4, [sp, #44]	; 0x2c
 8012a1e:	2420      	movs	r4, #32
 8012a20:	e6d5      	b.n	80127ce <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012a22:	f009 021f 	and.w	r2, r9, #31
 8012a26:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012a2a:	920c      	str	r2, [sp, #48]	; 0x30
 8012a2c:	9a01      	ldr	r2, [sp, #4]
 8012a2e:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012a32:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012a36:	45b0      	cmp	r8, r6
 8012a38:	f001 011f 	and.w	r1, r1, #31
 8012a3c:	eba2 0203 	sub.w	r2, r2, r3
 8012a40:	d108      	bne.n	8012a54 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012a42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012a44:	4419      	add	r1, r3
 8012a46:	4496      	add	lr, r2
 8012a48:	fb02 a101 	mla	r1, r2, r1, sl
 8012a4c:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012a50:	80e9      	strh	r1, [r5, #6]
 8012a52:	e6f9      	b.n	8012848 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a54:	2c00      	cmp	r4, #0
 8012a56:	f2c0 80a9 	blt.w	8012bac <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012a5a:	2701      	movs	r7, #1
 8012a5c:	f1c1 0c20 	rsb	ip, r1, #32
 8012a60:	970a      	str	r7, [sp, #40]	; 0x28
 8012a62:	fb02 f20c 	mul.w	r2, r2, ip
 8012a66:	2720      	movs	r7, #32
 8012a68:	9709      	str	r7, [sp, #36]	; 0x24
 8012a6a:	fb92 fcf4 	sdiv	ip, r2, r4
 8012a6e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012a70:	fb04 221c 	mls	r2, r4, ip, r2
 8012a74:	2a00      	cmp	r2, #0
 8012a76:	bfb8      	it	lt
 8012a78:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012a7c:	4439      	add	r1, r7
 8012a7e:	fb0c a101 	mla	r1, ip, r1, sl
 8012a82:	80e9      	strh	r1, [r5, #6]
 8012a84:	44e6      	add	lr, ip
 8012a86:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012a88:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012a8c:	eb08 0501 	add.w	r5, r8, r1
 8012a90:	6901      	ldr	r1, [r0, #16]
 8012a92:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012a96:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012a9a:	bfb8      	it	lt
 8012a9c:	1912      	addlt	r2, r2, r4
 8012a9e:	ea58 070e 	orrs.w	r7, r8, lr
 8012aa2:	d010      	beq.n	8012ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012aa4:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012aa8:	f1be 0f00 	cmp.w	lr, #0
 8012aac:	db0b      	blt.n	8012ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012aae:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012ab0:	45be      	cmp	lr, r7
 8012ab2:	da08      	bge.n	8012ac6 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012ab4:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012ab8:	45be      	cmp	lr, r7
 8012aba:	bf3c      	itt	cc
 8012abc:	3108      	addcc	r1, #8
 8012abe:	6101      	strcc	r1, [r0, #16]
 8012ac0:	f10e 0101 	add.w	r1, lr, #1
 8012ac4:	6081      	str	r1, [r0, #8]
 8012ac6:	6901      	ldr	r1, [r0, #16]
 8012ac8:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012acc:	800d      	strh	r5, [r1, #0]
 8012ace:	f04f 0e00 	mov.w	lr, #0
 8012ad2:	42ae      	cmp	r6, r5
 8012ad4:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012ad8:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012adc:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012ae0:	4463      	add	r3, ip
 8012ae2:	d054      	beq.n	8012b8e <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012ae4:	9901      	ldr	r1, [sp, #4]
 8012ae6:	1ac9      	subs	r1, r1, r3
 8012ae8:	4461      	add	r1, ip
 8012aea:	0149      	lsls	r1, r1, #5
 8012aec:	fb91 fef4 	sdiv	lr, r1, r4
 8012af0:	fb04 111e 	mls	r1, r4, lr, r1
 8012af4:	2900      	cmp	r1, #0
 8012af6:	bfb8      	it	lt
 8012af8:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012afc:	f10e 0701 	add.w	r7, lr, #1
 8012b00:	bfb8      	it	lt
 8012b02:	1909      	addlt	r1, r1, r4
 8012b04:	1b12      	subs	r2, r2, r4
 8012b06:	970d      	str	r7, [sp, #52]	; 0x34
 8012b08:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012b0c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012b0e:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012b12:	1852      	adds	r2, r2, r1
 8012b14:	bf54      	ite	pl
 8012b16:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012b1a:	46f4      	movmi	ip, lr
 8012b1c:	44e3      	add	fp, ip
 8012b1e:	f8aa b004 	strh.w	fp, [sl, #4]
 8012b22:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012b26:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012b2a:	f8aa b006 	strh.w	fp, [sl, #6]
 8012b2e:	4463      	add	r3, ip
 8012b30:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012b34:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012b38:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012b3c:	bf58      	it	pl
 8012b3e:	1b12      	subpl	r2, r2, r4
 8012b40:	443d      	add	r5, r7
 8012b42:	ea5b 070a 	orrs.w	r7, fp, sl
 8012b46:	d014      	beq.n	8012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b48:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012b4c:	f1ba 0f00 	cmp.w	sl, #0
 8012b50:	db0f      	blt.n	8012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b52:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012b54:	45ba      	cmp	sl, r7
 8012b56:	da0c      	bge.n	8012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b58:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012b5c:	45ba      	cmp	sl, r7
 8012b5e:	bf38      	it	cc
 8012b60:	f10c 0c08 	addcc.w	ip, ip, #8
 8012b64:	f10a 0a01 	add.w	sl, sl, #1
 8012b68:	bf38      	it	cc
 8012b6a:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012b6e:	f8c0 a008 	str.w	sl, [r0, #8]
 8012b72:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012b76:	f04f 0700 	mov.w	r7, #0
 8012b7a:	42ae      	cmp	r6, r5
 8012b7c:	f8ac 5000 	strh.w	r5, [ip]
 8012b80:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012b84:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012b88:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012b8c:	d1bc      	bne.n	8012b08 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012b8e:	6904      	ldr	r4, [r0, #16]
 8012b90:	9a01      	ldr	r2, [sp, #4]
 8012b92:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012b94:	1ad3      	subs	r3, r2, r3
 8012b96:	88a2      	ldrh	r2, [r4, #4]
 8012b98:	441a      	add	r2, r3
 8012b9a:	80a2      	strh	r2, [r4, #4]
 8012b9c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012b9e:	3120      	adds	r1, #32
 8012ba0:	1a89      	subs	r1, r1, r2
 8012ba2:	88e2      	ldrh	r2, [r4, #6]
 8012ba4:	fb03 2301 	mla	r3, r3, r1, r2
 8012ba8:	80e3      	strh	r3, [r4, #6]
 8012baa:	e64d      	b.n	8012848 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012bac:	f04f 37ff 	mov.w	r7, #4294967295
 8012bb0:	970a      	str	r7, [sp, #40]	; 0x28
 8012bb2:	434a      	muls	r2, r1
 8012bb4:	4264      	negs	r4, r4
 8012bb6:	2700      	movs	r7, #0
 8012bb8:	e756      	b.n	8012a68 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012bba:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012bbe:	f009 031f 	and.w	r3, r9, #31
 8012bc2:	45d0      	cmp	r8, sl
 8012bc4:	f007 071f 	and.w	r7, r7, #31
 8012bc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8012bca:	fa1f fc8c 	uxth.w	ip, ip
 8012bce:	fa1f fe8e 	uxth.w	lr, lr
 8012bd2:	d10a      	bne.n	8012bea <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012bd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012bd6:	449c      	add	ip, r3
 8012bd8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012bda:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012bde:	441f      	add	r7, r3
 8012be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012be2:	fb03 e707 	mla	r7, r3, r7, lr
 8012be6:	80ef      	strh	r7, [r5, #6]
 8012be8:	e6b9      	b.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012bea:	2900      	cmp	r1, #0
 8012bec:	f2c0 80a8 	blt.w	8012d40 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012bf0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012bf2:	f1c7 0320 	rsb	r3, r7, #32
 8012bf6:	4363      	muls	r3, r4
 8012bf8:	2401      	movs	r4, #1
 8012bfa:	940d      	str	r4, [sp, #52]	; 0x34
 8012bfc:	2420      	movs	r4, #32
 8012bfe:	940c      	str	r4, [sp, #48]	; 0x30
 8012c00:	fb93 f4f1 	sdiv	r4, r3, r1
 8012c04:	fb01 3b14 	mls	fp, r1, r4, r3
 8012c08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012c0a:	f1bb 0f00 	cmp.w	fp, #0
 8012c0e:	bfb8      	it	lt
 8012c10:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012c14:	441f      	add	r7, r3
 8012c16:	fb04 e707 	mla	r7, r4, r7, lr
 8012c1a:	44a4      	add	ip, r4
 8012c1c:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012c20:	80ef      	strh	r7, [r5, #6]
 8012c22:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012c26:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012c28:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012c2c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012c30:	bfb8      	it	lt
 8012c32:	448b      	addlt	fp, r1
 8012c34:	eb08 0503 	add.w	r5, r8, r3
 8012c38:	ea5e 0307 	orrs.w	r3, lr, r7
 8012c3c:	d011      	beq.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012c3e:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012c42:	f1be 0f00 	cmp.w	lr, #0
 8012c46:	db0c      	blt.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012c48:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c4a:	45be      	cmp	lr, r7
 8012c4c:	da09      	bge.n	8012c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012c4e:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012c52:	45be      	cmp	lr, r7
 8012c54:	bf3c      	itt	cc
 8012c56:	f10c 0708 	addcc.w	r7, ip, #8
 8012c5a:	6107      	strcc	r7, [r0, #16]
 8012c5c:	f10e 0701 	add.w	r7, lr, #1
 8012c60:	6087      	str	r7, [r0, #8]
 8012c62:	6907      	ldr	r7, [r0, #16]
 8012c64:	b213      	sxth	r3, r2
 8012c66:	9310      	str	r3, [sp, #64]	; 0x40
 8012c68:	807b      	strh	r3, [r7, #2]
 8012c6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c6c:	803d      	strh	r5, [r7, #0]
 8012c6e:	4555      	cmp	r5, sl
 8012c70:	80be      	strh	r6, [r7, #4]
 8012c72:	80fe      	strh	r6, [r7, #6]
 8012c74:	eb04 0c03 	add.w	ip, r4, r3
 8012c78:	d051      	beq.n	8012d1e <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012c7a:	9b01      	ldr	r3, [sp, #4]
 8012c7c:	eba3 070c 	sub.w	r7, r3, ip
 8012c80:	443c      	add	r4, r7
 8012c82:	0164      	lsls	r4, r4, #5
 8012c84:	fb94 f8f1 	sdiv	r8, r4, r1
 8012c88:	fb01 4418 	mls	r4, r1, r8, r4
 8012c8c:	2c00      	cmp	r4, #0
 8012c8e:	bfb8      	it	lt
 8012c90:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012c94:	ebab 0301 	sub.w	r3, fp, r1
 8012c98:	f108 0701 	add.w	r7, r8, #1
 8012c9c:	bfb8      	it	lt
 8012c9e:	1864      	addlt	r4, r4, r1
 8012ca0:	9309      	str	r3, [sp, #36]	; 0x24
 8012ca2:	9711      	str	r7, [sp, #68]	; 0x44
 8012ca4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012ca6:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012caa:	191b      	adds	r3, r3, r4
 8012cac:	bf58      	it	pl
 8012cae:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012cb0:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012cb4:	9309      	str	r3, [sp, #36]	; 0x24
 8012cb6:	bf48      	it	mi
 8012cb8:	4647      	movmi	r7, r8
 8012cba:	44bb      	add	fp, r7
 8012cbc:	f8ae b004 	strh.w	fp, [lr, #4]
 8012cc0:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012cc4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012cc8:	f8ae b006 	strh.w	fp, [lr, #6]
 8012ccc:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012cd0:	44bc      	add	ip, r7
 8012cd2:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012cd4:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012cd8:	443d      	add	r5, r7
 8012cda:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012cde:	bf5c      	itt	pl
 8012ce0:	1a5b      	subpl	r3, r3, r1
 8012ce2:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012ce4:	ea5b 0307 	orrs.w	r3, fp, r7
 8012ce8:	d011      	beq.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012cea:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012cee:	f1bb 0f00 	cmp.w	fp, #0
 8012cf2:	db0c      	blt.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012cf4:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012cf6:	45bb      	cmp	fp, r7
 8012cf8:	da09      	bge.n	8012d0e <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012cfa:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012cfe:	45bb      	cmp	fp, r7
 8012d00:	bf3c      	itt	cc
 8012d02:	f10e 0708 	addcc.w	r7, lr, #8
 8012d06:	6107      	strcc	r7, [r0, #16]
 8012d08:	f10b 0701 	add.w	r7, fp, #1
 8012d0c:	6087      	str	r7, [r0, #8]
 8012d0e:	6907      	ldr	r7, [r0, #16]
 8012d10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d12:	803d      	strh	r5, [r7, #0]
 8012d14:	4555      	cmp	r5, sl
 8012d16:	807b      	strh	r3, [r7, #2]
 8012d18:	80be      	strh	r6, [r7, #4]
 8012d1a:	80fe      	strh	r6, [r7, #6]
 8012d1c:	d1c2      	bne.n	8012ca4 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012d1e:	9b01      	ldr	r3, [sp, #4]
 8012d20:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012d22:	eba3 0c0c 	sub.w	ip, r3, ip
 8012d26:	6903      	ldr	r3, [r0, #16]
 8012d28:	8899      	ldrh	r1, [r3, #4]
 8012d2a:	4461      	add	r1, ip
 8012d2c:	8099      	strh	r1, [r3, #4]
 8012d2e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012d30:	3720      	adds	r7, #32
 8012d32:	1a7f      	subs	r7, r7, r1
 8012d34:	88d9      	ldrh	r1, [r3, #6]
 8012d36:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012d3a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012d3e:	e60e      	b.n	801295e <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012d42:	f04f 34ff 	mov.w	r4, #4294967295
 8012d46:	940d      	str	r4, [sp, #52]	; 0x34
 8012d48:	437b      	muls	r3, r7
 8012d4a:	4249      	negs	r1, r1
 8012d4c:	2400      	movs	r4, #0
 8012d4e:	e756      	b.n	8012bfe <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012d50:	9905      	ldr	r1, [sp, #20]
 8012d52:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012d56:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012d5a:	f001 011f 	and.w	r1, r1, #31
 8012d5e:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012d62:	9102      	str	r1, [sp, #8]
 8012d64:	9904      	ldr	r1, [sp, #16]
 8012d66:	45f3      	cmp	fp, lr
 8012d68:	f009 0c1f 	and.w	ip, r9, #31
 8012d6c:	eba1 0406 	sub.w	r4, r1, r6
 8012d70:	d108      	bne.n	8012d84 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012d72:	9b02      	ldr	r3, [sp, #8]
 8012d74:	449c      	add	ip, r3
 8012d76:	44a0      	add	r8, r4
 8012d78:	fb04 a40c 	mla	r4, r4, ip, sl
 8012d7c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d80:	80fc      	strh	r4, [r7, #6]
 8012d82:	e458      	b.n	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d84:	9905      	ldr	r1, [sp, #20]
 8012d86:	ebb1 0109 	subs.w	r1, r1, r9
 8012d8a:	bf5b      	ittet	pl
 8012d8c:	f1cc 0520 	rsbpl	r5, ip, #32
 8012d90:	436c      	mulpl	r4, r5
 8012d92:	2500      	movmi	r5, #0
 8012d94:	2520      	movpl	r5, #32
 8012d96:	bf44      	itt	mi
 8012d98:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012d9c:	4249      	negmi	r1, r1
 8012d9e:	9501      	str	r5, [sp, #4]
 8012da0:	9b01      	ldr	r3, [sp, #4]
 8012da2:	fb94 f5f1 	sdiv	r5, r4, r1
 8012da6:	fb01 4415 	mls	r4, r1, r5, r4
 8012daa:	bf54      	ite	pl
 8012dac:	f04f 0901 	movpl.w	r9, #1
 8012db0:	f04f 39ff 	movmi.w	r9, #4294967295
 8012db4:	2c00      	cmp	r4, #0
 8012db6:	bfb8      	it	lt
 8012db8:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012dbc:	449c      	add	ip, r3
 8012dbe:	44a8      	add	r8, r5
 8012dc0:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012dc4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012dc8:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012dcc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dd0:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012dd4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012dd8:	bfb8      	it	lt
 8012dda:	1864      	addlt	r4, r4, r1
 8012ddc:	ea58 0707 	orrs.w	r7, r8, r7
 8012de0:	eb0b 0309 	add.w	r3, fp, r9
 8012de4:	d011      	beq.n	8012e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012de6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012dea:	f1b8 0f00 	cmp.w	r8, #0
 8012dee:	db0c      	blt.n	8012e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012df0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012df2:	45b8      	cmp	r8, r7
 8012df4:	da09      	bge.n	8012e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012df6:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012dfa:	45b8      	cmp	r8, r7
 8012dfc:	bf3c      	itt	cc
 8012dfe:	f10c 0708 	addcc.w	r7, ip, #8
 8012e02:	6107      	strcc	r7, [r0, #16]
 8012e04:	f108 0701 	add.w	r7, r8, #1
 8012e08:	6087      	str	r7, [r0, #8]
 8012e0a:	6907      	ldr	r7, [r0, #16]
 8012e0c:	f04f 0c00 	mov.w	ip, #0
 8012e10:	b212      	sxth	r2, r2
 8012e12:	459e      	cmp	lr, r3
 8012e14:	803b      	strh	r3, [r7, #0]
 8012e16:	807a      	strh	r2, [r7, #2]
 8012e18:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012e1c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012e20:	442e      	add	r6, r5
 8012e22:	d04d      	beq.n	8012ec0 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012e24:	9f04      	ldr	r7, [sp, #16]
 8012e26:	1bbf      	subs	r7, r7, r6
 8012e28:	443d      	add	r5, r7
 8012e2a:	016d      	lsls	r5, r5, #5
 8012e2c:	fb95 f8f1 	sdiv	r8, r5, r1
 8012e30:	fb01 5518 	mls	r5, r1, r8, r5
 8012e34:	4565      	cmp	r5, ip
 8012e36:	bfb8      	it	lt
 8012e38:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012e3c:	f108 0701 	add.w	r7, r8, #1
 8012e40:	bfb8      	it	lt
 8012e42:	186d      	addlt	r5, r5, r1
 8012e44:	1a64      	subs	r4, r4, r1
 8012e46:	9703      	str	r7, [sp, #12]
 8012e48:	f04f 0a00 	mov.w	sl, #0
 8012e4c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e50:	1964      	adds	r4, r4, r5
 8012e52:	bf58      	it	pl
 8012e54:	9f03      	ldrpl	r7, [sp, #12]
 8012e56:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012e5a:	bf48      	it	mi
 8012e5c:	4647      	movmi	r7, r8
 8012e5e:	44bb      	add	fp, r7
 8012e60:	f8ac b004 	strh.w	fp, [ip, #4]
 8012e64:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e68:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012e6c:	f8ac b006 	strh.w	fp, [ip, #6]
 8012e70:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e74:	443e      	add	r6, r7
 8012e76:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e7a:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e7e:	bf58      	it	pl
 8012e80:	1a64      	subpl	r4, r4, r1
 8012e82:	ea5b 0707 	orrs.w	r7, fp, r7
 8012e86:	444b      	add	r3, r9
 8012e88:	d011      	beq.n	8012eae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e8a:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012e8e:	f1bb 0f00 	cmp.w	fp, #0
 8012e92:	db0c      	blt.n	8012eae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e94:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e96:	45bb      	cmp	fp, r7
 8012e98:	da09      	bge.n	8012eae <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e9a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012e9e:	45bb      	cmp	fp, r7
 8012ea0:	bf3c      	itt	cc
 8012ea2:	f10c 0708 	addcc.w	r7, ip, #8
 8012ea6:	6107      	strcc	r7, [r0, #16]
 8012ea8:	f10b 0701 	add.w	r7, fp, #1
 8012eac:	6087      	str	r7, [r0, #8]
 8012eae:	6907      	ldr	r7, [r0, #16]
 8012eb0:	459e      	cmp	lr, r3
 8012eb2:	803b      	strh	r3, [r7, #0]
 8012eb4:	807a      	strh	r2, [r7, #2]
 8012eb6:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012eba:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012ebe:	d1c5      	bne.n	8012e4c <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012ec0:	9b04      	ldr	r3, [sp, #16]
 8012ec2:	1b9e      	subs	r6, r3, r6
 8012ec4:	6903      	ldr	r3, [r0, #16]
 8012ec6:	889a      	ldrh	r2, [r3, #4]
 8012ec8:	4432      	add	r2, r6
 8012eca:	809a      	strh	r2, [r3, #4]
 8012ecc:	9a02      	ldr	r2, [sp, #8]
 8012ece:	f102 0c20 	add.w	ip, r2, #32
 8012ed2:	9a01      	ldr	r2, [sp, #4]
 8012ed4:	ebac 0c02 	sub.w	ip, ip, r2
 8012ed8:	88da      	ldrh	r2, [r3, #6]
 8012eda:	fb06 260c 	mla	r6, r6, ip, r2
 8012ede:	80de      	strh	r6, [r3, #6]
 8012ee0:	f7ff bba9 	b.w	8012636 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012ee4 <_ZN8touchgfx7Outline6lineToEii>:
 8012ee4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012ee6:	079b      	lsls	r3, r3, #30
 8012ee8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012eea:	460e      	mov	r6, r1
 8012eec:	4615      	mov	r5, r2
 8012eee:	d511      	bpl.n	8012f14 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012ef0:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012ef4:	ea86 0701 	eor.w	r7, r6, r1
 8012ef8:	ea85 0302 	eor.w	r3, r5, r2
 8012efc:	433b      	orrs	r3, r7
 8012efe:	d009      	beq.n	8012f14 <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012f00:	4633      	mov	r3, r6
 8012f02:	9500      	str	r5, [sp, #0]
 8012f04:	f7ff fb3e 	bl	8012584 <_ZN8touchgfx7Outline10renderLineEiiii>
 8012f08:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012f0a:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012f0e:	f043 0301 	orr.w	r3, r3, #1
 8012f12:	6243      	str	r3, [r0, #36]	; 0x24
 8012f14:	b003      	add	sp, #12
 8012f16:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012f18 <_ZN8touchgfx7Outline6moveToEii>:
 8012f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012f1a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012f1c:	4615      	mov	r5, r2
 8012f1e:	079a      	lsls	r2, r3, #30
 8012f20:	4604      	mov	r4, r0
 8012f22:	460e      	mov	r6, r1
 8012f24:	d401      	bmi.n	8012f2a <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012f26:	f7ff faf9 	bl	801251c <_ZN8touchgfx7Outline5resetEv>
 8012f2a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012f2c:	07db      	lsls	r3, r3, #31
 8012f2e:	d504      	bpl.n	8012f3a <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012f30:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012f34:	4620      	mov	r0, r4
 8012f36:	f7ff ffd5 	bl	8012ee4 <_ZN8touchgfx7Outline6lineToEii>
 8012f3a:	6923      	ldr	r3, [r4, #16]
 8012f3c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012f40:	1170      	asrs	r0, r6, #5
 8012f42:	4290      	cmp	r0, r2
 8012f44:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012f48:	d103      	bne.n	8012f52 <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8012f4a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012f4e:	4291      	cmp	r1, r2
 8012f50:	d01a      	beq.n	8012f88 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012f52:	88df      	ldrh	r7, [r3, #6]
 8012f54:	889a      	ldrh	r2, [r3, #4]
 8012f56:	433a      	orrs	r2, r7
 8012f58:	d010      	beq.n	8012f7c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f5a:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012f5e:	2a00      	cmp	r2, #0
 8012f60:	db0c      	blt.n	8012f7c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f62:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012f64:	42ba      	cmp	r2, r7
 8012f66:	da09      	bge.n	8012f7c <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f68:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012f6c:	42ba      	cmp	r2, r7
 8012f6e:	bf38      	it	cc
 8012f70:	3308      	addcc	r3, #8
 8012f72:	f102 0201 	add.w	r2, r2, #1
 8012f76:	bf38      	it	cc
 8012f78:	6123      	strcc	r3, [r4, #16]
 8012f7a:	60a2      	str	r2, [r4, #8]
 8012f7c:	6923      	ldr	r3, [r4, #16]
 8012f7e:	2200      	movs	r2, #0
 8012f80:	8018      	strh	r0, [r3, #0]
 8012f82:	8059      	strh	r1, [r3, #2]
 8012f84:	809a      	strh	r2, [r3, #4]
 8012f86:	80da      	strh	r2, [r3, #6]
 8012f88:	6166      	str	r6, [r4, #20]
 8012f8a:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012f8e:	6225      	str	r5, [r4, #32]
 8012f90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012f92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012f92:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f96:	b0d0      	sub	sp, #320	; 0x140
 8012f98:	466c      	mov	r4, sp
 8012f9a:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012f9e:	4627      	mov	r7, r4
 8012fa0:	1a0d      	subs	r5, r1, r0
 8012fa2:	2d48      	cmp	r5, #72	; 0x48
 8012fa4:	f100 0308 	add.w	r3, r0, #8
 8012fa8:	f340 80d5 	ble.w	8013156 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012fac:	112d      	asrs	r5, r5, #4
 8012fae:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012fb2:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012fb6:	6816      	ldr	r6, [r2, #0]
 8012fb8:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012fbc:	6006      	str	r6, [r0, #0]
 8012fbe:	6856      	ldr	r6, [r2, #4]
 8012fc0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012fc4:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012fc8:	6046      	str	r6, [r0, #4]
 8012fca:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012fce:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012fd2:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012fd6:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012fda:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012fde:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012fe2:	4565      	cmp	r5, ip
 8012fe4:	f1a1 0208 	sub.w	r2, r1, #8
 8012fe8:	db06      	blt.n	8012ff8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012fea:	d119      	bne.n	8013020 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012fec:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012ff0:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012ff4:	42ae      	cmp	r6, r5
 8012ff6:	dd13      	ble.n	8013020 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012ff8:	460e      	mov	r6, r1
 8012ffa:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012ffe:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013002:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8013006:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801300a:	601d      	str	r5, [r3, #0]
 801300c:	6875      	ldr	r5, [r6, #4]
 801300e:	605d      	str	r5, [r3, #4]
 8013010:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013014:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013018:	f821 8c04 	strh.w	r8, [r1, #-4]
 801301c:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013020:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8013024:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013028:	42ae      	cmp	r6, r5
 801302a:	db06      	blt.n	801303a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801302c:	d116      	bne.n	801305c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801302e:	f9b0 c000 	ldrsh.w	ip, [r0]
 8013032:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8013036:	45ac      	cmp	ip, r5
 8013038:	da10      	bge.n	801305c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801303a:	681d      	ldr	r5, [r3, #0]
 801303c:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013040:	6005      	str	r5, [r0, #0]
 8013042:	685d      	ldr	r5, [r3, #4]
 8013044:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013048:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801304c:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013050:	6045      	str	r5, [r0, #4]
 8013052:	8146      	strh	r6, [r0, #10]
 8013054:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013058:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801305c:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013060:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 8013064:	4565      	cmp	r5, ip
 8013066:	db06      	blt.n	8013076 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013068:	d119      	bne.n	801309e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801306a:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801306e:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013072:	42ae      	cmp	r6, r5
 8013074:	da13      	bge.n	801309e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013076:	460e      	mov	r6, r1
 8013078:	f9b0 9000 	ldrsh.w	r9, [r0]
 801307c:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013080:	6005      	str	r5, [r0, #0]
 8013082:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 8013086:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801308a:	6875      	ldr	r5, [r6, #4]
 801308c:	6045      	str	r5, [r0, #4]
 801308e:	f821 9c08 	strh.w	r9, [r1, #-8]
 8013092:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013096:	f821 8c04 	strh.w	r8, [r1, #-4]
 801309a:	f821 ec02 	strh.w	lr, [r1, #-2]
 801309e:	3308      	adds	r3, #8
 80130a0:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80130a4:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80130a8:	45e6      	cmp	lr, ip
 80130aa:	dbf8      	blt.n	801309e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80130ac:	d105      	bne.n	80130ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80130ae:	f9b3 6000 	ldrsh.w	r6, [r3]
 80130b2:	f9b0 5000 	ldrsh.w	r5, [r0]
 80130b6:	42ae      	cmp	r6, r5
 80130b8:	dbf1      	blt.n	801309e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80130ba:	4615      	mov	r5, r2
 80130bc:	3a08      	subs	r2, #8
 80130be:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 80130c2:	45b4      	cmp	ip, r6
 80130c4:	dbf9      	blt.n	80130ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80130c6:	d105      	bne.n	80130d4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 80130c8:	f9b0 8000 	ldrsh.w	r8, [r0]
 80130cc:	f9b2 6000 	ldrsh.w	r6, [r2]
 80130d0:	45b0      	cmp	r8, r6
 80130d2:	dbf2      	blt.n	80130ba <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 80130d4:	4293      	cmp	r3, r2
 80130d6:	f1a5 0608 	sub.w	r6, r5, #8
 80130da:	d816      	bhi.n	801310a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 80130dc:	f8d6 c000 	ldr.w	ip, [r6]
 80130e0:	f9b3 a000 	ldrsh.w	sl, [r3]
 80130e4:	f8c3 c000 	str.w	ip, [r3]
 80130e8:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80130ec:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80130f0:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80130f4:	f8c3 c004 	str.w	ip, [r3, #4]
 80130f8:	f825 ac08 	strh.w	sl, [r5, #-8]
 80130fc:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013100:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013104:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013108:	e7c9      	b.n	801309e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801310a:	f8d6 e000 	ldr.w	lr, [r6]
 801310e:	f9b0 a000 	ldrsh.w	sl, [r0]
 8013112:	f8c0 e000 	str.w	lr, [r0]
 8013116:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801311a:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801311e:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8013122:	f8c0 e004 	str.w	lr, [r0, #4]
 8013126:	f825 ac08 	strh.w	sl, [r5, #-8]
 801312a:	f825 cc06 	strh.w	ip, [r5, #-6]
 801312e:	f825 9c04 	strh.w	r9, [r5, #-4]
 8013132:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013136:	1acd      	subs	r5, r1, r3
 8013138:	1a16      	subs	r6, r2, r0
 801313a:	10ed      	asrs	r5, r5, #3
 801313c:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8013140:	bfb5      	itete	lt
 8013142:	e9c4 0200 	strdlt	r0, r2, [r4]
 8013146:	e9c4 3100 	strdge	r3, r1, [r4]
 801314a:	460a      	movlt	r2, r1
 801314c:	4603      	movge	r3, r0
 801314e:	3408      	adds	r4, #8
 8013150:	4618      	mov	r0, r3
 8013152:	4611      	mov	r1, r2
 8013154:	e724      	b.n	8012fa0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013156:	4299      	cmp	r1, r3
 8013158:	d928      	bls.n	80131ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801315a:	f1a3 0210 	sub.w	r2, r3, #16
 801315e:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 8013162:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 8013166:	45ac      	cmp	ip, r5
 8013168:	db06      	blt.n	8013178 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801316a:	d11d      	bne.n	80131a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801316c:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8013170:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 8013174:	42ae      	cmp	r6, r5
 8013176:	da17      	bge.n	80131a8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013178:	4615      	mov	r5, r2
 801317a:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801317e:	f855 6f08 	ldr.w	r6, [r5, #8]!
 8013182:	6116      	str	r6, [r2, #16]
 8013184:	686e      	ldr	r6, [r5, #4]
 8013186:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801318a:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801318e:	f8a2 9008 	strh.w	r9, [r2, #8]
 8013192:	42a8      	cmp	r0, r5
 8013194:	6156      	str	r6, [r2, #20]
 8013196:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801319a:	f8a2 800c 	strh.w	r8, [r2, #12]
 801319e:	f8a2 e00e 	strh.w	lr, [r2, #14]
 80131a2:	f1a2 0208 	sub.w	r2, r2, #8
 80131a6:	d1da      	bne.n	801315e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80131a8:	3308      	adds	r3, #8
 80131aa:	e7d4      	b.n	8013156 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 80131ac:	42bc      	cmp	r4, r7
 80131ae:	d903      	bls.n	80131b8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 80131b0:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 80131b4:	3c08      	subs	r4, #8
 80131b6:	e6f3      	b.n	8012fa0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80131b8:	b050      	add	sp, #320	; 0x140
 80131ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080131be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 80131be:	b510      	push	{r4, lr}
 80131c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131c2:	07da      	lsls	r2, r3, #31
 80131c4:	4604      	mov	r4, r0
 80131c6:	d507      	bpl.n	80131d8 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 80131c8:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 80131cc:	f7ff fe8a 	bl	8012ee4 <_ZN8touchgfx7Outline6lineToEii>
 80131d0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80131d2:	f023 0301 	bic.w	r3, r3, #1
 80131d6:	6243      	str	r3, [r0, #36]	; 0x24
 80131d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80131da:	079b      	lsls	r3, r3, #30
 80131dc:	d521      	bpl.n	8013222 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 80131de:	6923      	ldr	r3, [r4, #16]
 80131e0:	88d9      	ldrh	r1, [r3, #6]
 80131e2:	889a      	ldrh	r2, [r3, #4]
 80131e4:	430a      	orrs	r2, r1
 80131e6:	d010      	beq.n	801320a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131e8:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131ec:	2a00      	cmp	r2, #0
 80131ee:	db0c      	blt.n	801320a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131f0:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80131f2:	428a      	cmp	r2, r1
 80131f4:	da09      	bge.n	801320a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131f6:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80131fa:	4291      	cmp	r1, r2
 80131fc:	bf88      	it	hi
 80131fe:	3308      	addhi	r3, #8
 8013200:	f102 0201 	add.w	r2, r2, #1
 8013204:	bf88      	it	hi
 8013206:	6123      	strhi	r3, [r4, #16]
 8013208:	60a2      	str	r2, [r4, #8]
 801320a:	68a1      	ldr	r1, [r4, #8]
 801320c:	b129      	cbz	r1, 801321a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801320e:	6863      	ldr	r3, [r4, #4]
 8013210:	4299      	cmp	r1, r3
 8013212:	d802      	bhi.n	801321a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013214:	68e0      	ldr	r0, [r4, #12]
 8013216:	f7ff febc 	bl	8012f92 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801321a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801321c:	f023 0302 	bic.w	r3, r3, #2
 8013220:	6263      	str	r3, [r4, #36]	; 0x24
 8013222:	68e0      	ldr	r0, [r4, #12]
 8013224:	bd10      	pop	{r4, pc}
	...

08013228 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013228:	4b02      	ldr	r3, [pc, #8]	; (8013234 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801322a:	6018      	str	r0, [r3, #0]
 801322c:	4b02      	ldr	r3, [pc, #8]	; (8013238 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801322e:	6019      	str	r1, [r3, #0]
 8013230:	4770      	bx	lr
 8013232:	bf00      	nop
 8013234:	20012dbc 	.word	0x20012dbc
 8013238:	20012dc0 	.word	0x20012dc0

0801323c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 801323c:	4a02      	ldr	r2, [pc, #8]	; (8013248 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 801323e:	2300      	movs	r3, #0
 8013240:	6013      	str	r3, [r2, #0]
 8013242:	4a02      	ldr	r2, [pc, #8]	; (801324c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8013244:	6013      	str	r3, [r2, #0]
 8013246:	4770      	bx	lr
 8013248:	20012dbc 	.word	0x20012dbc
 801324c:	20012dc0 	.word	0x20012dc0

08013250 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013250:	4b01      	ldr	r3, [pc, #4]	; (8013258 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 8013252:	6818      	ldr	r0, [r3, #0]
 8013254:	4770      	bx	lr
 8013256:	bf00      	nop
 8013258:	20012dbc 	.word	0x20012dbc

0801325c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801325c:	4b01      	ldr	r3, [pc, #4]	; (8013264 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801325e:	6818      	ldr	r0, [r3, #0]
 8013260:	4770      	bx	lr
 8013262:	bf00      	nop
 8013264:	20012dc0 	.word	0x20012dc0

08013268 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013268:	b510      	push	{r4, lr}
 801326a:	6803      	ldr	r3, [r0, #0]
 801326c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801326e:	460c      	mov	r4, r1
 8013270:	4798      	blx	r3
 8013272:	1b03      	subs	r3, r0, r4
 8013274:	4258      	negs	r0, r3
 8013276:	4158      	adcs	r0, r3
 8013278:	bd10      	pop	{r4, pc}
	...

0801327c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801327c:	4b01      	ldr	r3, [pc, #4]	; (8013284 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801327e:	6019      	str	r1, [r3, #0]
 8013280:	4770      	bx	lr
 8013282:	bf00      	nop
 8013284:	20012dc4 	.word	0x20012dc4

08013288 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801328c:	4696      	mov	lr, r2
 801328e:	4605      	mov	r5, r0
 8013290:	4614      	mov	r4, r2
 8013292:	460e      	mov	r6, r1
 8013294:	461f      	mov	r7, r3
 8013296:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801329a:	b097      	sub	sp, #92	; 0x5c
 801329c:	f10d 0c1c 	add.w	ip, sp, #28
 80132a0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132a4:	f8de 3000 	ldr.w	r3, [lr]
 80132a8:	f8cc 3000 	str.w	r3, [ip]
 80132ac:	f104 0e14 	add.w	lr, r4, #20
 80132b0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80132b4:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80132b8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132bc:	f8de 3000 	ldr.w	r3, [lr]
 80132c0:	f8cc 3000 	str.w	r3, [ip]
 80132c4:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80132c8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80132cc:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80132d0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132d4:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 80132d8:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 80132dc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 80132e0:	f8de 3000 	ldr.w	r3, [lr]
 80132e4:	f8cc 3000 	str.w	r3, [ip]
 80132e8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80132ea:	682b      	ldr	r3, [r5, #0]
 80132ec:	9201      	str	r2, [sp, #4]
 80132ee:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80132f2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80132f4:	9200      	str	r2, [sp, #0]
 80132f6:	f8cd 8008 	str.w	r8, [sp, #8]
 80132fa:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80132fe:	aa07      	add	r2, sp, #28
 8013300:	463b      	mov	r3, r7
 8013302:	4631      	mov	r1, r6
 8013304:	4628      	mov	r0, r5
 8013306:	47d8      	blx	fp
 8013308:	46a6      	mov	lr, r4
 801330a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801330e:	f10d 0c1c 	add.w	ip, sp, #28
 8013312:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013316:	f8de 3000 	ldr.w	r3, [lr]
 801331a:	f8cc 3000 	str.w	r3, [ip]
 801331e:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013322:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013326:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801332a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801332e:	343c      	adds	r4, #60	; 0x3c
 8013330:	f8de 3000 	ldr.w	r3, [lr]
 8013334:	f8cc 3000 	str.w	r3, [ip]
 8013338:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801333a:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801333e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013342:	6823      	ldr	r3, [r4, #0]
 8013344:	f8cc 3000 	str.w	r3, [ip]
 8013348:	682b      	ldr	r3, [r5, #0]
 801334a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801334e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013350:	9201      	str	r2, [sp, #4]
 8013352:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8013354:	9200      	str	r2, [sp, #0]
 8013356:	f8cd 8008 	str.w	r8, [sp, #8]
 801335a:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801335c:	aa07      	add	r2, sp, #28
 801335e:	463b      	mov	r3, r7
 8013360:	4631      	mov	r1, r6
 8013362:	4628      	mov	r0, r5
 8013364:	47a0      	blx	r4
 8013366:	b017      	add	sp, #92	; 0x5c
 8013368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801336c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801336c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013370:	b08d      	sub	sp, #52	; 0x34
 8013372:	4688      	mov	r8, r1
 8013374:	9916      	ldr	r1, [sp, #88]	; 0x58
 8013376:	f8d3 c000 	ldr.w	ip, [r3]
 801337a:	680f      	ldr	r7, [r1, #0]
 801337c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013380:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8013384:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013388:	edd3 6a07 	vldr	s13, [r3, #28]
 801338c:	9918      	ldr	r1, [sp, #96]	; 0x60
 801338e:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8013392:	f9b1 9000 	ldrsh.w	r9, [r1]
 8013396:	f9ba 1000 	ldrsh.w	r1, [sl]
 801339a:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801339e:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80133a2:	eba7 070c 	sub.w	r7, r7, ip
 80133a6:	42bc      	cmp	r4, r7
 80133a8:	bfa8      	it	ge
 80133aa:	463c      	movge	r4, r7
 80133ac:	ee07 4a90 	vmov	s15, r4
 80133b0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80133b4:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80133b8:	ee25 4a04 	vmul.f32	s8, s10, s8
 80133bc:	ee65 4a24 	vmul.f32	s9, s10, s9
 80133c0:	ee25 5a27 	vmul.f32	s10, s10, s15
 80133c4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80133c8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80133cc:	eb09 0e0c 	add.w	lr, r9, ip
 80133d0:	4571      	cmp	r1, lr
 80133d2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80133d6:	ee32 1a05 	vadd.f32	s2, s4, s10
 80133da:	ee36 0a84 	vadd.f32	s0, s13, s8
 80133de:	ee61 1a87 	vmul.f32	s3, s3, s14
 80133e2:	ee22 2a07 	vmul.f32	s4, s4, s14
 80133e6:	f340 808d 	ble.w	8013504 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80133ea:	eba1 060e 	sub.w	r6, r1, lr
 80133ee:	fb96 f5f4 	sdiv	r5, r6, r4
 80133f2:	ee07 5a10 	vmov	s14, r5
 80133f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133fa:	2d00      	cmp	r5, #0
 80133fc:	fb04 6615 	mls	r6, r4, r5, r6
 8013400:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013404:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013408:	eea7 1a05 	vfma.f32	s2, s14, s10
 801340c:	dd13      	ble.n	8013436 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801340e:	ee70 6a44 	vsub.f32	s13, s0, s8
 8013412:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013416:	eef5 6a40 	vcmp.f32	s13, #0.0
 801341a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801341e:	bf18      	it	ne
 8013420:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013424:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013428:	bf08      	it	eq
 801342a:	eeb0 7a67 	vmoveq.f32	s14, s15
 801342e:	ee61 1a87 	vmul.f32	s3, s3, s14
 8013432:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013436:	fb05 f204 	mul.w	r2, r5, r4
 801343a:	1abf      	subs	r7, r7, r2
 801343c:	4494      	add	ip, r2
 801343e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8013442:	4411      	add	r1, r2
 8013444:	eb09 020c 	add.w	r2, r9, ip
 8013448:	443a      	add	r2, r7
 801344a:	b209      	sxth	r1, r1
 801344c:	428a      	cmp	r2, r1
 801344e:	bfc4      	itt	gt
 8013450:	eba1 0209 	subgt.w	r2, r1, r9
 8013454:	eba2 070c 	subgt.w	r7, r2, ip
 8013458:	2f00      	cmp	r7, #0
 801345a:	dd50      	ble.n	80134fe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801345c:	fb97 f1f4 	sdiv	r1, r7, r4
 8013460:	fb04 7211 	mls	r2, r4, r1, r7
 8013464:	b90a      	cbnz	r2, 801346a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8013466:	3901      	subs	r1, #1
 8013468:	4622      	mov	r2, r4
 801346a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801346e:	6840      	ldr	r0, [r0, #4]
 8013470:	900b      	str	r0, [sp, #44]	; 0x2c
 8013472:	f8d0 a000 	ldr.w	sl, [r0]
 8013476:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013478:	9008      	str	r0, [sp, #32]
 801347a:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801347e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013480:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8013484:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013488:	695b      	ldr	r3, [r3, #20]
 801348a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801348c:	445b      	add	r3, fp
 801348e:	eef0 6a42 	vmov.f32	s13, s4
 8013492:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8013496:	ee21 3a23 	vmul.f32	s6, s2, s7
 801349a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801349e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80134a2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80134a6:	9307      	str	r3, [sp, #28]
 80134a8:	ee17 7a90 	vmov	r7, s15
 80134ac:	ee73 7a42 	vsub.f32	s15, s6, s4
 80134b0:	eeb0 7a61 	vmov.f32	s14, s3
 80134b4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80134b8:	ee16 3a90 	vmov	r3, s13
 80134bc:	fb97 f7f4 	sdiv	r7, r7, r4
 80134c0:	ee17 ca90 	vmov	ip, s15
 80134c4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80134c8:	fb9c fcf4 	sdiv	ip, ip, r4
 80134cc:	fb0c 3306 	mla	r3, ip, r6, r3
 80134d0:	9302      	str	r3, [sp, #8]
 80134d2:	ee17 3a10 	vmov	r3, s14
 80134d6:	44b6      	add	lr, r6
 80134d8:	fb04 e505 	mla	r5, r4, r5, lr
 80134dc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80134e0:	fb07 3706 	mla	r7, r7, r6, r3
 80134e4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80134e8:	e9cd 4700 	strd	r4, r7, [sp]
 80134ec:	2900      	cmp	r1, #0
 80134ee:	bfcc      	ite	gt
 80134f0:	46a1      	movgt	r9, r4
 80134f2:	4691      	movle	r9, r2
 80134f4:	eba9 0306 	sub.w	r3, r9, r6
 80134f8:	f8da 4008 	ldr.w	r4, [sl, #8]
 80134fc:	47a0      	blx	r4
 80134fe:	b00d      	add	sp, #52	; 0x34
 8013500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013504:	2500      	movs	r5, #0
 8013506:	462e      	mov	r6, r5
 8013508:	e799      	b.n	801343e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801350c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801350c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013510:	b0db      	sub	sp, #364	; 0x16c
 8013512:	461d      	mov	r5, r3
 8013514:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013518:	930a      	str	r3, [sp, #40]	; 0x28
 801351a:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801351e:	930b      	str	r3, [sp, #44]	; 0x2c
 8013520:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 8013524:	9310      	str	r3, [sp, #64]	; 0x40
 8013526:	6803      	ldr	r3, [r0, #0]
 8013528:	910f      	str	r1, [sp, #60]	; 0x3c
 801352a:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801352c:	9009      	str	r0, [sp, #36]	; 0x24
 801352e:	4614      	mov	r4, r2
 8013530:	4629      	mov	r1, r5
 8013532:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013536:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801353a:	47b8      	blx	r7
 801353c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801353e:	6058      	str	r0, [r3, #4]
 8013540:	2800      	cmp	r0, #0
 8013542:	f000 83a1 	beq.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013546:	682b      	ldr	r3, [r5, #0]
 8013548:	9314      	str	r3, [sp, #80]	; 0x50
 801354a:	686b      	ldr	r3, [r5, #4]
 801354c:	9315      	str	r3, [sp, #84]	; 0x54
 801354e:	4bc4      	ldr	r3, [pc, #784]	; (8013860 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013550:	ed94 7a02 	vldr	s14, [r4, #8]
 8013554:	7819      	ldrb	r1, [r3, #0]
 8013556:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801355a:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801355e:	2900      	cmp	r1, #0
 8013560:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013564:	bf16      	itet	ne
 8013566:	4619      	movne	r1, r3
 8013568:	4611      	moveq	r1, r2
 801356a:	4613      	movne	r3, r2
 801356c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013570:	9116      	str	r1, [sp, #88]	; 0x58
 8013572:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 8013576:	f240 8387 	bls.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801357a:	ed94 7a07 	vldr	s14, [r4, #28]
 801357e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013582:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013586:	f240 837f 	bls.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801358a:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801358e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013592:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013596:	f240 8377 	bls.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801359a:	6822      	ldr	r2, [r4, #0]
 801359c:	4bb1      	ldr	r3, [pc, #708]	; (8013864 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801359e:	429a      	cmp	r2, r3
 80135a0:	f2c0 8372 	blt.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135a4:	49b0      	ldr	r1, [pc, #704]	; (8013868 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80135a6:	6963      	ldr	r3, [r4, #20]
 80135a8:	428a      	cmp	r2, r1
 80135aa:	f300 836d 	bgt.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135ae:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80135b2:	48ae      	ldr	r0, [pc, #696]	; (801386c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80135b4:	33ff      	adds	r3, #255	; 0xff
 80135b6:	4283      	cmp	r3, r0
 80135b8:	f200 8366 	bhi.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135bc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80135be:	4dac      	ldr	r5, [pc, #688]	; (8013870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80135c0:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80135c4:	33ff      	adds	r3, #255	; 0xff
 80135c6:	42ab      	cmp	r3, r5
 80135c8:	f200 835e 	bhi.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135cc:	6862      	ldr	r2, [r4, #4]
 80135ce:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80135d2:	33ff      	adds	r3, #255	; 0xff
 80135d4:	4283      	cmp	r3, r0
 80135d6:	f200 8357 	bhi.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135da:	69a1      	ldr	r1, [r4, #24]
 80135dc:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80135e0:	33ff      	adds	r3, #255	; 0xff
 80135e2:	4283      	cmp	r3, r0
 80135e4:	f200 8350 	bhi.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80135ea:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80135ee:	30ff      	adds	r0, #255	; 0xff
 80135f0:	42a8      	cmp	r0, r5
 80135f2:	f200 8349 	bhi.w	8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135f6:	428a      	cmp	r2, r1
 80135f8:	f280 8110 	bge.w	801381c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80135fc:	429a      	cmp	r2, r3
 80135fe:	f300 8119 	bgt.w	8013834 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8013602:	4299      	cmp	r1, r3
 8013604:	f280 811d 	bge.w	8013842 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013608:	2502      	movs	r5, #2
 801360a:	2701      	movs	r7, #1
 801360c:	46a9      	mov	r9, r5
 801360e:	46b8      	mov	r8, r7
 8013610:	f04f 0a00 	mov.w	sl, #0
 8013614:	4621      	mov	r1, r4
 8013616:	a849      	add	r0, sp, #292	; 0x124
 8013618:	f003 feec 	bl	80173f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801361c:	4622      	mov	r2, r4
 801361e:	4653      	mov	r3, sl
 8013620:	a949      	add	r1, sp, #292	; 0x124
 8013622:	f8cd 9000 	str.w	r9, [sp]
 8013626:	a819      	add	r0, sp, #100	; 0x64
 8013628:	f004 f814 	bl	8017654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801362c:	4622      	mov	r2, r4
 801362e:	4653      	mov	r3, sl
 8013630:	a949      	add	r1, sp, #292	; 0x124
 8013632:	f8cd 8000 	str.w	r8, [sp]
 8013636:	a829      	add	r0, sp, #164	; 0xa4
 8013638:	f004 f80c 	bl	8017654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801363c:	4643      	mov	r3, r8
 801363e:	4622      	mov	r2, r4
 8013640:	a949      	add	r1, sp, #292	; 0x124
 8013642:	f8cd 9000 	str.w	r9, [sp]
 8013646:	a839      	add	r0, sp, #228	; 0xe4
 8013648:	f004 f804 	bl	8017654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801364c:	42af      	cmp	r7, r5
 801364e:	bfb5      	itete	lt
 8013650:	2300      	movlt	r3, #0
 8013652:	2301      	movge	r3, #1
 8013654:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013656:	930e      	strge	r3, [sp, #56]	; 0x38
 8013658:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801365a:	e893 0003 	ldmia.w	r3, {r0, r1}
 801365e:	af12      	add	r7, sp, #72	; 0x48
 8013660:	bfb9      	ittee	lt
 8013662:	ad29      	addlt	r5, sp, #164	; 0xa4
 8013664:	ac19      	addlt	r4, sp, #100	; 0x64
 8013666:	ad19      	addge	r5, sp, #100	; 0x64
 8013668:	ac29      	addge	r4, sp, #164	; 0xa4
 801366a:	e887 0003 	stmia.w	r7, {r0, r1}
 801366e:	b928      	cbnz	r0, 801367c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013670:	4b80      	ldr	r3, [pc, #512]	; (8013874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8013672:	6818      	ldr	r0, [r3, #0]
 8013674:	6803      	ldr	r3, [r0, #0]
 8013676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013678:	4798      	blx	r3
 801367a:	6038      	str	r0, [r7, #0]
 801367c:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801367e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013682:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013686:	930c      	str	r3, [sp, #48]	; 0x30
 8013688:	990c      	ldr	r1, [sp, #48]	; 0x30
 801368a:	6963      	ldr	r3, [r4, #20]
 801368c:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801368e:	440b      	add	r3, r1
 8013690:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013694:	4408      	add	r0, r1
 8013696:	b200      	sxth	r0, r0
 8013698:	4283      	cmp	r3, r0
 801369a:	900d      	str	r0, [sp, #52]	; 0x34
 801369c:	f280 80dd 	bge.w	801385a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80136a0:	428b      	cmp	r3, r1
 80136a2:	da08      	bge.n	80136b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80136a4:	2a00      	cmp	r2, #0
 80136a6:	dd06      	ble.n	80136b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80136a8:	1acb      	subs	r3, r1, r3
 80136aa:	429a      	cmp	r2, r3
 80136ac:	f2c0 80e4 	blt.w	8013878 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80136b0:	2b00      	cmp	r3, #0
 80136b2:	f300 80e2 	bgt.w	801387a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80136b6:	6967      	ldr	r7, [r4, #20]
 80136b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80136ba:	443b      	add	r3, r7
 80136bc:	461f      	mov	r7, r3
 80136be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80136c0:	1bdf      	subs	r7, r3, r7
 80136c2:	4297      	cmp	r7, r2
 80136c4:	bfa8      	it	ge
 80136c6:	4617      	movge	r7, r2
 80136c8:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80136cc:	2f00      	cmp	r7, #0
 80136ce:	f340 8166 	ble.w	801399e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80136d2:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80136d4:	6829      	ldr	r1, [r5, #0]
 80136d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80136da:	f9bb 3000 	ldrsh.w	r3, [fp]
 80136de:	6820      	ldr	r0, [r4, #0]
 80136e0:	4411      	add	r1, r2
 80136e2:	4299      	cmp	r1, r3
 80136e4:	dd1a      	ble.n	801371c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80136e6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80136ea:	440b      	add	r3, r1
 80136ec:	4402      	add	r2, r0
 80136ee:	b21b      	sxth	r3, r3
 80136f0:	429a      	cmp	r2, r3
 80136f2:	dc13      	bgt.n	801371c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80136f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80136f6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80136f8:	681b      	ldr	r3, [r3, #0]
 80136fa:	9206      	str	r2, [sp, #24]
 80136fc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80136fe:	9205      	str	r2, [sp, #20]
 8013700:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013702:	9500      	str	r5, [sp, #0]
 8013704:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013708:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801370a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801370c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013710:	a912      	add	r1, sp, #72	; 0x48
 8013712:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013716:	aa49      	add	r2, sp, #292	; 0x124
 8013718:	4623      	mov	r3, r4
 801371a:	47c8      	blx	r9
 801371c:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013720:	441a      	add	r2, r3
 8013722:	6963      	ldr	r3, [r4, #20]
 8013724:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013728:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801372c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013730:	68a1      	ldr	r1, [r4, #8]
 8013732:	ed94 6a08 	vldr	s12, [r4, #32]
 8013736:	6022      	str	r2, [r4, #0]
 8013738:	3301      	adds	r3, #1
 801373a:	6163      	str	r3, [r4, #20]
 801373c:	69a3      	ldr	r3, [r4, #24]
 801373e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013742:	3b01      	subs	r3, #1
 8013744:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013748:	61a3      	str	r3, [r4, #24]
 801374a:	6923      	ldr	r3, [r4, #16]
 801374c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013750:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013754:	edd4 6a07 	vldr	s13, [r4, #28]
 8013758:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801375c:	440b      	add	r3, r1
 801375e:	68e1      	ldr	r1, [r4, #12]
 8013760:	6123      	str	r3, [r4, #16]
 8013762:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013766:	428b      	cmp	r3, r1
 8013768:	edc4 6a07 	vstr	s13, [r4, #28]
 801376c:	db15      	blt.n	801379a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801376e:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013772:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013776:	3201      	adds	r2, #1
 8013778:	edc4 6a07 	vstr	s13, [r4, #28]
 801377c:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013780:	6022      	str	r2, [r4, #0]
 8013782:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013786:	1a5b      	subs	r3, r3, r1
 8013788:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801378c:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013790:	6123      	str	r3, [r4, #16]
 8013792:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013796:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801379a:	e9d5 2300 	ldrd	r2, r3, [r5]
 801379e:	441a      	add	r2, r3
 80137a0:	696b      	ldr	r3, [r5, #20]
 80137a2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80137a6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80137aa:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80137ae:	68a9      	ldr	r1, [r5, #8]
 80137b0:	ed95 6a08 	vldr	s12, [r5, #32]
 80137b4:	602a      	str	r2, [r5, #0]
 80137b6:	3301      	adds	r3, #1
 80137b8:	616b      	str	r3, [r5, #20]
 80137ba:	69ab      	ldr	r3, [r5, #24]
 80137bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80137c0:	3b01      	subs	r3, #1
 80137c2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80137c6:	61ab      	str	r3, [r5, #24]
 80137c8:	692b      	ldr	r3, [r5, #16]
 80137ca:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80137ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80137d2:	edd5 6a07 	vldr	s13, [r5, #28]
 80137d6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80137da:	440b      	add	r3, r1
 80137dc:	68e9      	ldr	r1, [r5, #12]
 80137de:	612b      	str	r3, [r5, #16]
 80137e0:	ee76 6a86 	vadd.f32	s13, s13, s12
 80137e4:	428b      	cmp	r3, r1
 80137e6:	edc5 6a07 	vstr	s13, [r5, #28]
 80137ea:	db15      	blt.n	8013818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80137ec:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80137f0:	ee76 6a26 	vadd.f32	s13, s12, s13
 80137f4:	3201      	adds	r2, #1
 80137f6:	edc5 6a07 	vstr	s13, [r5, #28]
 80137fa:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80137fe:	602a      	str	r2, [r5, #0]
 8013800:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013804:	1a5b      	subs	r3, r3, r1
 8013806:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801380a:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801380e:	612b      	str	r3, [r5, #16]
 8013810:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013814:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013818:	3f01      	subs	r7, #1
 801381a:	e757      	b.n	80136cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801381c:	4299      	cmp	r1, r3
 801381e:	dc13      	bgt.n	8013848 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013820:	429a      	cmp	r2, r3
 8013822:	da14      	bge.n	801384e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013824:	2502      	movs	r5, #2
 8013826:	2703      	movs	r7, #3
 8013828:	46a9      	mov	r9, r5
 801382a:	f04f 0800 	mov.w	r8, #0
 801382e:	f04f 0a01 	mov.w	sl, #1
 8013832:	e6ef      	b.n	8013614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013834:	2501      	movs	r5, #1
 8013836:	2700      	movs	r7, #0
 8013838:	46a9      	mov	r9, r5
 801383a:	46b8      	mov	r8, r7
 801383c:	f04f 0a02 	mov.w	sl, #2
 8013840:	e6e8      	b.n	8013614 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013842:	2501      	movs	r5, #1
 8013844:	2702      	movs	r7, #2
 8013846:	e6e1      	b.n	801360c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013848:	2500      	movs	r5, #0
 801384a:	2701      	movs	r7, #1
 801384c:	e7f4      	b.n	8013838 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801384e:	2702      	movs	r7, #2
 8013850:	2503      	movs	r5, #3
 8013852:	f04f 0900 	mov.w	r9, #0
 8013856:	46b8      	mov	r8, r7
 8013858:	e7e9      	b.n	801382e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801385a:	4613      	mov	r3, r2
 801385c:	e728      	b.n	80136b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801385e:	bf00      	nop
 8013860:	20012dac 	.word	0x20012dac
 8013864:	fffd8f01 	.word	0xfffd8f01
 8013868:	00027100 	.word	0x00027100
 801386c:	0004e1ff 	.word	0x0004e1ff
 8013870:	0004e1fe 	.word	0x0004e1fe
 8013874:	20012db4 	.word	0x20012db4
 8013878:	4613      	mov	r3, r2
 801387a:	992b      	ldr	r1, [sp, #172]	; 0xac
 801387c:	9111      	str	r1, [sp, #68]	; 0x44
 801387e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013882:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013886:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013888:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801388c:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013890:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013894:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013898:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801389c:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80138a0:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80138a4:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80138a8:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80138ac:	469e      	mov	lr, r3
 80138ae:	469c      	mov	ip, r3
 80138b0:	f04f 0900 	mov.w	r9, #0
 80138b4:	f1bc 0f00 	cmp.w	ip, #0
 80138b8:	d147      	bne.n	801394a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80138ba:	eb03 0c07 	add.w	ip, r3, r7
 80138be:	1ad7      	subs	r7, r2, r3
 80138c0:	f1b9 0f00 	cmp.w	r9, #0
 80138c4:	d009      	beq.n	80138da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80138c6:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80138ca:	9029      	str	r0, [sp, #164]	; 0xa4
 80138cc:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80138d0:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80138d4:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80138d8:	912d      	str	r1, [sp, #180]	; 0xb4
 80138da:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80138dc:	9111      	str	r1, [sp, #68]	; 0x44
 80138de:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80138e2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80138e6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80138ea:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80138ee:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80138f2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80138f6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80138fa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80138fe:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013902:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013906:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801390a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801390e:	f04f 0800 	mov.w	r8, #0
 8013912:	f1be 0f00 	cmp.w	lr, #0
 8013916:	d031      	beq.n	801397c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013918:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801391a:	4431      	add	r1, r6
 801391c:	4549      	cmp	r1, r9
 801391e:	4450      	add	r0, sl
 8013920:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013924:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013928:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801392c:	db08      	blt.n	8013940 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801392e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013932:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013936:	ee37 7a06 	vadd.f32	s14, s14, s12
 801393a:	3001      	adds	r0, #1
 801393c:	eba1 0109 	sub.w	r1, r1, r9
 8013940:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013944:	f04f 0801 	mov.w	r8, #1
 8013948:	e7e3      	b.n	8013912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801394a:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801394c:	4431      	add	r1, r6
 801394e:	4541      	cmp	r1, r8
 8013950:	4450      	add	r0, sl
 8013952:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013956:	ee77 7a84 	vadd.f32	s15, s15, s8
 801395a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801395e:	db08      	blt.n	8013972 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013960:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013964:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013968:	ee77 7a86 	vadd.f32	s15, s15, s12
 801396c:	3001      	adds	r0, #1
 801396e:	eba1 0108 	sub.w	r1, r1, r8
 8013972:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013976:	f04f 0901 	mov.w	r9, #1
 801397a:	e79b      	b.n	80138b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801397c:	449c      	add	ip, r3
 801397e:	1aff      	subs	r7, r7, r3
 8013980:	f1b8 0f00 	cmp.w	r8, #0
 8013984:	d009      	beq.n	801399a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013986:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801398a:	9019      	str	r0, [sp, #100]	; 0x64
 801398c:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013990:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013994:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013998:	911d      	str	r1, [sp, #116]	; 0x74
 801399a:	1ad2      	subs	r2, r2, r3
 801399c:	e68b      	b.n	80136b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801399e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80139a0:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80139a2:	2b00      	cmp	r3, #0
 80139a4:	f000 80d1 	beq.w	8013b4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80139a8:	ad19      	add	r5, sp, #100	; 0x64
 80139aa:	ac39      	add	r4, sp, #228	; 0xe4
 80139ac:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80139ae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80139b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80139b6:	930c      	str	r3, [sp, #48]	; 0x30
 80139b8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80139ba:	6963      	ldr	r3, [r4, #20]
 80139bc:	440b      	add	r3, r1
 80139be:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80139c2:	4408      	add	r0, r1
 80139c4:	b200      	sxth	r0, r0
 80139c6:	4283      	cmp	r3, r0
 80139c8:	900d      	str	r0, [sp, #52]	; 0x34
 80139ca:	f280 80c1 	bge.w	8013b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80139ce:	428b      	cmp	r3, r1
 80139d0:	da08      	bge.n	80139e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80139d2:	2a00      	cmp	r2, #0
 80139d4:	dd06      	ble.n	80139e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80139d6:	1acb      	subs	r3, r1, r3
 80139d8:	429a      	cmp	r2, r3
 80139da:	f2c0 80bb 	blt.w	8013b54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80139de:	2b00      	cmp	r3, #0
 80139e0:	f300 80b9 	bgt.w	8013b56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80139e4:	6967      	ldr	r7, [r4, #20]
 80139e6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80139e8:	443b      	add	r3, r7
 80139ea:	461f      	mov	r7, r3
 80139ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139ee:	1bdf      	subs	r7, r3, r7
 80139f0:	4297      	cmp	r7, r2
 80139f2:	bfa8      	it	ge
 80139f4:	4617      	movge	r7, r2
 80139f6:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80139fa:	2f00      	cmp	r7, #0
 80139fc:	f340 813c 	ble.w	8013c78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013a00:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013a02:	6829      	ldr	r1, [r5, #0]
 8013a04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013a08:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013a0c:	6820      	ldr	r0, [r4, #0]
 8013a0e:	4411      	add	r1, r2
 8013a10:	4299      	cmp	r1, r3
 8013a12:	dd1a      	ble.n	8013a4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013a14:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013a18:	440b      	add	r3, r1
 8013a1a:	4402      	add	r2, r0
 8013a1c:	b21b      	sxth	r3, r3
 8013a1e:	429a      	cmp	r2, r3
 8013a20:	dc13      	bgt.n	8013a4a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013a22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a24:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013a26:	681b      	ldr	r3, [r3, #0]
 8013a28:	9206      	str	r2, [sp, #24]
 8013a2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013a2c:	9205      	str	r2, [sp, #20]
 8013a2e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013a30:	9500      	str	r5, [sp, #0]
 8013a32:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013a36:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013a38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013a3a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013a3e:	a912      	add	r1, sp, #72	; 0x48
 8013a40:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013a44:	aa49      	add	r2, sp, #292	; 0x124
 8013a46:	4623      	mov	r3, r4
 8013a48:	47c8      	blx	r9
 8013a4a:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013a4e:	441a      	add	r2, r3
 8013a50:	6963      	ldr	r3, [r4, #20]
 8013a52:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013a56:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013a5a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013a5e:	68a1      	ldr	r1, [r4, #8]
 8013a60:	ed94 6a08 	vldr	s12, [r4, #32]
 8013a64:	6022      	str	r2, [r4, #0]
 8013a66:	3301      	adds	r3, #1
 8013a68:	6163      	str	r3, [r4, #20]
 8013a6a:	69a3      	ldr	r3, [r4, #24]
 8013a6c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a70:	3b01      	subs	r3, #1
 8013a72:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013a76:	61a3      	str	r3, [r4, #24]
 8013a78:	6923      	ldr	r3, [r4, #16]
 8013a7a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a82:	edd4 6a07 	vldr	s13, [r4, #28]
 8013a86:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a8a:	440b      	add	r3, r1
 8013a8c:	68e1      	ldr	r1, [r4, #12]
 8013a8e:	6123      	str	r3, [r4, #16]
 8013a90:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a94:	428b      	cmp	r3, r1
 8013a96:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a9a:	db15      	blt.n	8013ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013a9c:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013aa0:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013aa4:	3201      	adds	r2, #1
 8013aa6:	edc4 6a07 	vstr	s13, [r4, #28]
 8013aaa:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013aae:	6022      	str	r2, [r4, #0]
 8013ab0:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013ab4:	1a5b      	subs	r3, r3, r1
 8013ab6:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013aba:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013abe:	6123      	str	r3, [r4, #16]
 8013ac0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013ac4:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013ac8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013acc:	441a      	add	r2, r3
 8013ace:	696b      	ldr	r3, [r5, #20]
 8013ad0:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013ad4:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013ad8:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013adc:	68a9      	ldr	r1, [r5, #8]
 8013ade:	ed95 6a08 	vldr	s12, [r5, #32]
 8013ae2:	602a      	str	r2, [r5, #0]
 8013ae4:	3301      	adds	r3, #1
 8013ae6:	616b      	str	r3, [r5, #20]
 8013ae8:	69ab      	ldr	r3, [r5, #24]
 8013aea:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013aee:	3b01      	subs	r3, #1
 8013af0:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013af4:	61ab      	str	r3, [r5, #24]
 8013af6:	692b      	ldr	r3, [r5, #16]
 8013af8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013afc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013b00:	edd5 6a07 	vldr	s13, [r5, #28]
 8013b04:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013b08:	440b      	add	r3, r1
 8013b0a:	68e9      	ldr	r1, [r5, #12]
 8013b0c:	612b      	str	r3, [r5, #16]
 8013b0e:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013b12:	428b      	cmp	r3, r1
 8013b14:	edc5 6a07 	vstr	s13, [r5, #28]
 8013b18:	db15      	blt.n	8013b46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013b1a:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013b1e:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013b22:	3201      	adds	r2, #1
 8013b24:	edc5 6a07 	vstr	s13, [r5, #28]
 8013b28:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013b2c:	602a      	str	r2, [r5, #0]
 8013b2e:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013b32:	1a5b      	subs	r3, r3, r1
 8013b34:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013b38:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013b3c:	612b      	str	r3, [r5, #16]
 8013b3e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013b42:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013b46:	3f01      	subs	r7, #1
 8013b48:	e757      	b.n	80139fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013b4a:	ad39      	add	r5, sp, #228	; 0xe4
 8013b4c:	ac19      	add	r4, sp, #100	; 0x64
 8013b4e:	e72d      	b.n	80139ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013b50:	4613      	mov	r3, r2
 8013b52:	e744      	b.n	80139de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013b54:	4613      	mov	r3, r2
 8013b56:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013b5a:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013b5c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013b60:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013b64:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013b68:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013b6c:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013b70:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013b74:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013b78:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013b7a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013b7e:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013b82:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013b86:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013b8a:	960e      	str	r6, [sp, #56]	; 0x38
 8013b8c:	469e      	mov	lr, r3
 8013b8e:	461f      	mov	r7, r3
 8013b90:	f04f 0900 	mov.w	r9, #0
 8013b94:	2f00      	cmp	r7, #0
 8013b96:	d146      	bne.n	8013c26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013b98:	449c      	add	ip, r3
 8013b9a:	1ad7      	subs	r7, r2, r3
 8013b9c:	f1b9 0f00 	cmp.w	r9, #0
 8013ba0:	d009      	beq.n	8013bb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013ba2:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013ba6:	9039      	str	r0, [sp, #228]	; 0xe4
 8013ba8:	913d      	str	r1, [sp, #244]	; 0xf4
 8013baa:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013bae:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013bb2:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013bb6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013bb8:	910e      	str	r1, [sp, #56]	; 0x38
 8013bba:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013bbe:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013bc2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013bc6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013bca:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013bce:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013bd2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013bd6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013bda:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013bde:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013be2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013be6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013bea:	f04f 0800 	mov.w	r8, #0
 8013bee:	f1be 0f00 	cmp.w	lr, #0
 8013bf2:	d030      	beq.n	8013c56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013bf4:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013bf6:	4431      	add	r1, r6
 8013bf8:	4549      	cmp	r1, r9
 8013bfa:	4450      	add	r0, sl
 8013bfc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013c00:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013c04:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013c08:	db08      	blt.n	8013c1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013c0a:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013c0e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013c12:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013c16:	3001      	adds	r0, #1
 8013c18:	eba1 0109 	sub.w	r1, r1, r9
 8013c1c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013c20:	f04f 0801 	mov.w	r8, #1
 8013c24:	e7e3      	b.n	8013bee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013c26:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013c28:	4431      	add	r1, r6
 8013c2a:	4541      	cmp	r1, r8
 8013c2c:	4450      	add	r0, sl
 8013c2e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013c32:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013c36:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013c3a:	db08      	blt.n	8013c4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013c3c:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013c40:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013c44:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013c48:	3001      	adds	r0, #1
 8013c4a:	eba1 0108 	sub.w	r1, r1, r8
 8013c4e:	3f01      	subs	r7, #1
 8013c50:	f04f 0901 	mov.w	r9, #1
 8013c54:	e79e      	b.n	8013b94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013c56:	449c      	add	ip, r3
 8013c58:	1aff      	subs	r7, r7, r3
 8013c5a:	f1b8 0f00 	cmp.w	r8, #0
 8013c5e:	d009      	beq.n	8013c74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013c60:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013c64:	9019      	str	r0, [sp, #100]	; 0x64
 8013c66:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013c6a:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013c6e:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013c72:	911d      	str	r1, [sp, #116]	; 0x74
 8013c74:	1ad2      	subs	r2, r2, r3
 8013c76:	e6b5      	b.n	80139e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c78:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c7a:	681b      	ldr	r3, [r3, #0]
 8013c7c:	b923      	cbnz	r3, 8013c88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c7e:	4b04      	ldr	r3, [pc, #16]	; (8013c90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013c80:	6818      	ldr	r0, [r3, #0]
 8013c82:	6803      	ldr	r3, [r0, #0]
 8013c84:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c86:	4798      	blx	r3
 8013c88:	b05b      	add	sp, #364	; 0x16c
 8013c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c8e:	bf00      	nop
 8013c90:	20012db4 	.word	0x20012db4

08013c94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013c94:	b570      	push	{r4, r5, r6, lr}
 8013c96:	4604      	mov	r4, r0
 8013c98:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013c9c:	9805      	ldr	r0, [sp, #20]
 8013c9e:	6061      	str	r1, [r4, #4]
 8013ca0:	2500      	movs	r5, #0
 8013ca2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013ca6:	8263      	strh	r3, [r4, #18]
 8013ca8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013cac:	8025      	strh	r5, [r4, #0]
 8013cae:	7221      	strb	r1, [r4, #8]
 8013cb0:	7266      	strb	r6, [r4, #9]
 8013cb2:	60e0      	str	r0, [r4, #12]
 8013cb4:	8222      	strh	r2, [r4, #16]
 8013cb6:	82a3      	strh	r3, [r4, #20]
 8013cb8:	82e5      	strh	r5, [r4, #22]
 8013cba:	8325      	strh	r5, [r4, #24]
 8013cbc:	8365      	strh	r5, [r4, #26]
 8013cbe:	83a5      	strh	r5, [r4, #28]
 8013cc0:	83e5      	strh	r5, [r4, #30]
 8013cc2:	8425      	strh	r5, [r4, #32]
 8013cc4:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013cc8:	b32e      	cbz	r6, 8013d16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013cca:	6803      	ldr	r3, [r0, #0]
 8013ccc:	695b      	ldr	r3, [r3, #20]
 8013cce:	4798      	blx	r3
 8013cd0:	4606      	mov	r6, r0
 8013cd2:	b300      	cbz	r0, 8013d16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013cd4:	68e0      	ldr	r0, [r4, #12]
 8013cd6:	6803      	ldr	r3, [r0, #0]
 8013cd8:	4631      	mov	r1, r6
 8013cda:	68db      	ldr	r3, [r3, #12]
 8013cdc:	4798      	blx	r3
 8013cde:	4605      	mov	r5, r0
 8013ce0:	b1c8      	cbz	r0, 8013d16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013ce2:	7b43      	ldrb	r3, [r0, #13]
 8013ce4:	7a82      	ldrb	r2, [r0, #10]
 8013ce6:	005b      	lsls	r3, r3, #1
 8013ce8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013cec:	4313      	orrs	r3, r2
 8013cee:	8423      	strh	r3, [r4, #32]
 8013cf0:	7a63      	ldrb	r3, [r4, #9]
 8013cf2:	2b06      	cmp	r3, #6
 8013cf4:	d10f      	bne.n	8013d16 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013cf6:	68e0      	ldr	r0, [r4, #12]
 8013cf8:	6803      	ldr	r3, [r0, #0]
 8013cfa:	462a      	mov	r2, r5
 8013cfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013cfe:	4631      	mov	r1, r6
 8013d00:	4798      	blx	r3
 8013d02:	7b6b      	ldrb	r3, [r5, #13]
 8013d04:	005b      	lsls	r3, r3, #1
 8013d06:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013d0a:	7aab      	ldrb	r3, [r5, #10]
 8013d0c:	4313      	orrs	r3, r2
 8013d0e:	4418      	add	r0, r3
 8013d10:	8c23      	ldrh	r3, [r4, #32]
 8013d12:	4418      	add	r0, r3
 8013d14:	8420      	strh	r0, [r4, #32]
 8013d16:	4620      	mov	r0, r4
 8013d18:	bd70      	pop	{r4, r5, r6, pc}

08013d1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013d1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d1e:	2400      	movs	r4, #0
 8013d20:	b085      	sub	sp, #20
 8013d22:	4681      	mov	r9, r0
 8013d24:	4688      	mov	r8, r1
 8013d26:	4692      	mov	sl, r2
 8013d28:	469b      	mov	fp, r3
 8013d2a:	4627      	mov	r7, r4
 8013d2c:	4625      	mov	r5, r4
 8013d2e:	4626      	mov	r6, r4
 8013d30:	4554      	cmp	r4, sl
 8013d32:	da2a      	bge.n	8013d8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013d34:	2300      	movs	r3, #0
 8013d36:	9303      	str	r3, [sp, #12]
 8013d38:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013d3c:	429d      	cmp	r5, r3
 8013d3e:	d004      	beq.n	8013d4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013d40:	f242 030b 	movw	r3, #8203	; 0x200b
 8013d44:	429d      	cmp	r5, r3
 8013d46:	bf18      	it	ne
 8013d48:	462f      	movne	r7, r5
 8013d4a:	ab03      	add	r3, sp, #12
 8013d4c:	4642      	mov	r2, r8
 8013d4e:	4659      	mov	r1, fp
 8013d50:	4648      	mov	r0, r9
 8013d52:	f003 f965 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013d56:	4605      	mov	r5, r0
 8013d58:	b1b8      	cbz	r0, 8013d8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013d5a:	280a      	cmp	r0, #10
 8013d5c:	d015      	beq.n	8013d8a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013d5e:	9a03      	ldr	r2, [sp, #12]
 8013d60:	b18a      	cbz	r2, 8013d86 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013d62:	7b50      	ldrb	r0, [r2, #13]
 8013d64:	7a93      	ldrb	r3, [r2, #10]
 8013d66:	8895      	ldrh	r5, [r2, #4]
 8013d68:	0040      	lsls	r0, r0, #1
 8013d6a:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013d6e:	4303      	orrs	r3, r0
 8013d70:	9301      	str	r3, [sp, #4]
 8013d72:	f8d8 3000 	ldr.w	r3, [r8]
 8013d76:	4639      	mov	r1, r7
 8013d78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013d7a:	4640      	mov	r0, r8
 8013d7c:	4798      	blx	r3
 8013d7e:	9b01      	ldr	r3, [sp, #4]
 8013d80:	4418      	add	r0, r3
 8013d82:	4406      	add	r6, r0
 8013d84:	b2b6      	uxth	r6, r6
 8013d86:	3401      	adds	r4, #1
 8013d88:	e7d2      	b.n	8013d30 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013d8a:	4630      	mov	r0, r6
 8013d8c:	b005      	add	sp, #20
 8013d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013d92:	2a02      	cmp	r2, #2
 8013d94:	b530      	push	{r4, r5, lr}
 8013d96:	d011      	beq.n	8013dbc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013d98:	2a03      	cmp	r2, #3
 8013d9a:	d01c      	beq.n	8013dd6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013d9c:	2a01      	cmp	r2, #1
 8013d9e:	d10c      	bne.n	8013dba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013da0:	888b      	ldrh	r3, [r1, #4]
 8013da2:	8801      	ldrh	r1, [r0, #0]
 8013da4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013da8:	8844      	ldrh	r4, [r0, #2]
 8013daa:	8004      	strh	r4, [r0, #0]
 8013dac:	1a5b      	subs	r3, r3, r1
 8013dae:	1a9b      	subs	r3, r3, r2
 8013db0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013db4:	8043      	strh	r3, [r0, #2]
 8013db6:	8081      	strh	r1, [r0, #4]
 8013db8:	80c2      	strh	r2, [r0, #6]
 8013dba:	bd30      	pop	{r4, r5, pc}
 8013dbc:	88cb      	ldrh	r3, [r1, #6]
 8013dbe:	8842      	ldrh	r2, [r0, #2]
 8013dc0:	1a9b      	subs	r3, r3, r2
 8013dc2:	88c2      	ldrh	r2, [r0, #6]
 8013dc4:	1a9b      	subs	r3, r3, r2
 8013dc6:	888a      	ldrh	r2, [r1, #4]
 8013dc8:	8801      	ldrh	r1, [r0, #0]
 8013dca:	8043      	strh	r3, [r0, #2]
 8013dcc:	1a52      	subs	r2, r2, r1
 8013dce:	8881      	ldrh	r1, [r0, #4]
 8013dd0:	1a52      	subs	r2, r2, r1
 8013dd2:	8002      	strh	r2, [r0, #0]
 8013dd4:	e7f1      	b.n	8013dba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013dd6:	88cb      	ldrh	r3, [r1, #6]
 8013dd8:	8841      	ldrh	r1, [r0, #2]
 8013dda:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013dde:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013de2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013de6:	8045      	strh	r5, [r0, #2]
 8013de8:	1a5b      	subs	r3, r3, r1
 8013dea:	1a9b      	subs	r3, r3, r2
 8013dec:	8003      	strh	r3, [r0, #0]
 8013dee:	8082      	strh	r2, [r0, #4]
 8013df0:	80c4      	strh	r4, [r0, #6]
 8013df2:	e7e2      	b.n	8013dba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013df8:	b09f      	sub	sp, #124	; 0x7c
 8013dfa:	9116      	str	r1, [sp, #88]	; 0x58
 8013dfc:	9317      	str	r3, [sp, #92]	; 0x5c
 8013dfe:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013e00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013e02:	8809      	ldrh	r1, [r1, #0]
 8013e04:	889b      	ldrh	r3, [r3, #4]
 8013e06:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013e0a:	9212      	str	r2, [sp, #72]	; 0x48
 8013e0c:	440b      	add	r3, r1
 8013e0e:	b21b      	sxth	r3, r3
 8013e10:	9310      	str	r3, [sp, #64]	; 0x40
 8013e12:	f8d8 3000 	ldr.w	r3, [r8]
 8013e16:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013e1a:	7b19      	ldrb	r1, [r3, #12]
 8013e1c:	7adb      	ldrb	r3, [r3, #11]
 8013e1e:	9011      	str	r0, [sp, #68]	; 0x44
 8013e20:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013e24:	9114      	str	r1, [sp, #80]	; 0x50
 8013e26:	9315      	str	r3, [sp, #84]	; 0x54
 8013e28:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8013e2c:	2a00      	cmp	r2, #0
 8013e2e:	d06a      	beq.n	8013f06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013e30:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013e34:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013e36:	2b06      	cmp	r3, #6
 8013e38:	bf14      	ite	ne
 8013e3a:	2301      	movne	r3, #1
 8013e3c:	2302      	moveq	r3, #2
 8013e3e:	4413      	add	r3, r2
 8013e40:	f04f 0900 	mov.w	r9, #0
 8013e44:	930f      	str	r3, [sp, #60]	; 0x3c
 8013e46:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013e4a:	464c      	mov	r4, r9
 8013e4c:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013e50:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013e54:	4293      	cmp	r3, r2
 8013e56:	f280 808f 	bge.w	8013f78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013e5a:	2300      	movs	r3, #0
 8013e5c:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013e60:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013e64:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013e68:	429c      	cmp	r4, r3
 8013e6a:	d006      	beq.n	8013e7a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8013e6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e6e:	f242 020b 	movw	r2, #8203	; 0x200b
 8013e72:	4294      	cmp	r4, r2
 8013e74:	bf18      	it	ne
 8013e76:	4623      	movne	r3, r4
 8013e78:	930d      	str	r3, [sp, #52]	; 0x34
 8013e7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e7c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013e7e:	f8d8 2000 	ldr.w	r2, [r8]
 8013e82:	428b      	cmp	r3, r1
 8013e84:	db41      	blt.n	8013f0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013e86:	6813      	ldr	r3, [r2, #0]
 8013e88:	4610      	mov	r0, r2
 8013e8a:	695b      	ldr	r3, [r3, #20]
 8013e8c:	4798      	blx	r3
 8013e8e:	4604      	mov	r4, r0
 8013e90:	f8d8 0000 	ldr.w	r0, [r8]
 8013e94:	6803      	ldr	r3, [r0, #0]
 8013e96:	aa1d      	add	r2, sp, #116	; 0x74
 8013e98:	689d      	ldr	r5, [r3, #8]
 8013e9a:	4621      	mov	r1, r4
 8013e9c:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013ea0:	47a8      	blx	r5
 8013ea2:	901c      	str	r0, [sp, #112]	; 0x70
 8013ea4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013ea8:	429c      	cmp	r4, r3
 8013eaa:	f000 80eb 	beq.w	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013eae:	f242 030b 	movw	r3, #8203	; 0x200b
 8013eb2:	429c      	cmp	r4, r3
 8013eb4:	f000 80e6 	beq.w	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013eb8:	2c00      	cmp	r4, #0
 8013eba:	f000 80f8 	beq.w	80140ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013ebe:	2c0a      	cmp	r4, #10
 8013ec0:	d060      	beq.n	8013f84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013ec2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013ec4:	b36a      	cbz	r2, 8013f22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013ec6:	8894      	ldrh	r4, [r2, #4]
 8013ec8:	f1bb 0f00 	cmp.w	fp, #0
 8013ecc:	d03b      	beq.n	8013f46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013ece:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013ed2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013ed6:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013eda:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013ede:	f1bb 0f01 	cmp.w	fp, #1
 8013ee2:	ea49 0903 	orr.w	r9, r9, r3
 8013ee6:	d134      	bne.n	8013f52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013ee8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013eea:	eba6 0609 	sub.w	r6, r6, r9
 8013eee:	2b00      	cmp	r3, #0
 8013ef0:	d14f      	bne.n	8013f92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013ef2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013ef4:	eb09 0306 	add.w	r3, r9, r6
 8013ef8:	4413      	add	r3, r2
 8013efa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013efc:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013f00:	4293      	cmp	r3, r2
 8013f02:	da51      	bge.n	8013fa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013f04:	e038      	b.n	8013f78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013f06:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013f08:	e79a      	b.n	8013e40 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8013f0a:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013f0e:	9301      	str	r3, [sp, #4]
 8013f10:	ab1d      	add	r3, sp, #116	; 0x74
 8013f12:	9300      	str	r3, [sp, #0]
 8013f14:	4659      	mov	r1, fp
 8013f16:	ab1c      	add	r3, sp, #112	; 0x70
 8013f18:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013f1a:	f003 f8ca 	bl	80170b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013f1e:	4604      	mov	r4, r0
 8013f20:	e7c0      	b.n	8013ea4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013f22:	f8d8 0000 	ldr.w	r0, [r8]
 8013f26:	6803      	ldr	r3, [r0, #0]
 8013f28:	691b      	ldr	r3, [r3, #16]
 8013f2a:	4798      	blx	r3
 8013f2c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013f30:	4298      	cmp	r0, r3
 8013f32:	f000 80a7 	beq.w	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f36:	f242 030b 	movw	r3, #8203	; 0x200b
 8013f3a:	4298      	cmp	r0, r3
 8013f3c:	f000 80a2 	beq.w	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f40:	f1bb 0f00 	cmp.w	fp, #0
 8013f44:	d100      	bne.n	8013f48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013f46:	444e      	add	r6, r9
 8013f48:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013f4a:	2a00      	cmp	r2, #0
 8013f4c:	d1bf      	bne.n	8013ece <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013f4e:	4691      	mov	r9, r2
 8013f50:	e098      	b.n	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f54:	2b00      	cmp	r3, #0
 8013f56:	f000 80ac 	beq.w	80140b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8013f5a:	f1bb 0f00 	cmp.w	fp, #0
 8013f5e:	d118      	bne.n	8013f92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013f60:	f8d8 0000 	ldr.w	r0, [r8]
 8013f64:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013f66:	6803      	ldr	r3, [r0, #0]
 8013f68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f6a:	4798      	blx	r3
 8013f6c:	4406      	add	r6, r0
 8013f6e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013f70:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f72:	1af3      	subs	r3, r6, r3
 8013f74:	4293      	cmp	r3, r2
 8013f76:	dd17      	ble.n	8013fa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013f78:	2c00      	cmp	r4, #0
 8013f7a:	f000 8098 	beq.w	80140ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013f7e:	2c0a      	cmp	r4, #10
 8013f80:	f040 8086 	bne.w	8014090 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013f84:	240a      	movs	r4, #10
 8013f86:	fab4 f084 	clz	r0, r4
 8013f8a:	0940      	lsrs	r0, r0, #5
 8013f8c:	b01f      	add	sp, #124	; 0x7c
 8013f8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f92:	f8d8 0000 	ldr.w	r0, [r8]
 8013f96:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013f98:	6803      	ldr	r3, [r0, #0]
 8013f9a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f9c:	4798      	blx	r3
 8013f9e:	f1bb 0f01 	cmp.w	fp, #1
 8013fa2:	eba6 0600 	sub.w	r6, r6, r0
 8013fa6:	d0a4      	beq.n	8013ef2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013fa8:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013faa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013fac:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013fb0:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013fb4:	7b43      	ldrb	r3, [r0, #13]
 8013fb6:	015b      	lsls	r3, r3, #5
 8013fb8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013fbc:	7983      	ldrb	r3, [r0, #6]
 8013fbe:	4431      	add	r1, r6
 8013fc0:	4313      	orrs	r3, r2
 8013fc2:	440b      	add	r3, r1
 8013fc4:	42bb      	cmp	r3, r7
 8013fc6:	db5d      	blt.n	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013fc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013fca:	4299      	cmp	r1, r3
 8013fcc:	da5a      	bge.n	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013fce:	f8d8 0000 	ldr.w	r0, [r8]
 8013fd2:	6803      	ldr	r3, [r0, #0]
 8013fd4:	42b7      	cmp	r7, r6
 8013fd6:	bfc8      	it	gt
 8013fd8:	1bbf      	subgt	r7, r7, r6
 8013fda:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013fdc:	bfcc      	ite	gt
 8013fde:	b2bf      	uxthgt	r7, r7
 8013fe0:	2700      	movle	r7, #0
 8013fe2:	4798      	blx	r3
 8013fe4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013fe6:	7b5a      	ldrb	r2, [r3, #13]
 8013fe8:	00d1      	lsls	r1, r2, #3
 8013fea:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8013fee:	7a19      	ldrb	r1, [r3, #8]
 8013ff0:	4329      	orrs	r1, r5
 8013ff2:	0655      	lsls	r5, r2, #25
 8013ff4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013ff6:	bf44      	itt	mi
 8013ff8:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8013ffc:	b209      	sxthmi	r1, r1
 8013ffe:	1945      	adds	r5, r0, r5
 8014000:	1a6d      	subs	r5, r5, r1
 8014002:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014004:	b2ad      	uxth	r5, r5
 8014006:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801400a:	fa0f fa85 	sxth.w	sl, r5
 801400e:	4551      	cmp	r1, sl
 8014010:	dd3c      	ble.n	801408c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8014012:	0112      	lsls	r2, r2, #4
 8014014:	79d8      	ldrb	r0, [r3, #7]
 8014016:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801401a:	4302      	orrs	r2, r0
 801401c:	4492      	add	sl, r2
 801401e:	4551      	cmp	r1, sl
 8014020:	dc30      	bgt.n	8014084 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014022:	1b4d      	subs	r5, r1, r5
 8014024:	b22d      	sxth	r5, r5
 8014026:	468a      	mov	sl, r1
 8014028:	9319      	str	r3, [sp, #100]	; 0x64
 801402a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801402c:	f8d8 0000 	ldr.w	r0, [r8]
 8014030:	681a      	ldr	r2, [r3, #0]
 8014032:	6801      	ldr	r1, [r0, #0]
 8014034:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8014036:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8014038:	9313      	str	r3, [sp, #76]	; 0x4c
 801403a:	9218      	str	r2, [sp, #96]	; 0x60
 801403c:	6c09      	ldr	r1, [r1, #64]	; 0x40
 801403e:	4788      	blx	r1
 8014040:	f898 1006 	ldrb.w	r1, [r8, #6]
 8014044:	910b      	str	r1, [sp, #44]	; 0x2c
 8014046:	f898 100e 	ldrb.w	r1, [r8, #14]
 801404a:	910a      	str	r1, [sp, #40]	; 0x28
 801404c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014050:	9109      	str	r1, [sp, #36]	; 0x24
 8014052:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8014056:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014058:	9305      	str	r3, [sp, #20]
 801405a:	b2ad      	uxth	r5, r5
 801405c:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014060:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8014064:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014066:	9304      	str	r3, [sp, #16]
 8014068:	4437      	add	r7, r6
 801406a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801406c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801406e:	9206      	str	r2, [sp, #24]
 8014070:	b23f      	sxth	r7, r7
 8014072:	f8cd a004 	str.w	sl, [sp, #4]
 8014076:	9700      	str	r7, [sp, #0]
 8014078:	681a      	ldr	r2, [r3, #0]
 801407a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801407c:	685b      	ldr	r3, [r3, #4]
 801407e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014080:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014082:	47a8      	blx	r5
 8014084:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014086:	3301      	adds	r3, #1
 8014088:	930e      	str	r3, [sp, #56]	; 0x38
 801408a:	e6e1      	b.n	8013e50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801408c:	2500      	movs	r5, #0
 801408e:	e7cb      	b.n	8014028 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014090:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8014092:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014094:	3501      	adds	r5, #1
 8014096:	429d      	cmp	r5, r3
 8014098:	f6bf af75 	bge.w	8013f86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801409c:	4659      	mov	r1, fp
 801409e:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80140a0:	f7f3 ffb4 	bl	800800c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80140a4:	4604      	mov	r4, r0
 80140a6:	b110      	cbz	r0, 80140ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80140a8:	280a      	cmp	r0, #10
 80140aa:	d1f2      	bne.n	8014092 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 80140ac:	e76a      	b.n	8013f84 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 80140ae:	2400      	movs	r4, #0
 80140b0:	e769      	b.n	8013f86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 80140b2:	f1bb 0f00 	cmp.w	fp, #0
 80140b6:	f43f af5a 	beq.w	8013f6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 80140ba:	e775      	b.n	8013fa8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

080140bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 80140bc:	b530      	push	{r4, r5, lr}
 80140be:	8ac4      	ldrh	r4, [r0, #22]
 80140c0:	8b45      	ldrh	r5, [r0, #26]
 80140c2:	8343      	strh	r3, [r0, #26]
 80140c4:	442c      	add	r4, r5
 80140c6:	1ae4      	subs	r4, r4, r3
 80140c8:	82c4      	strh	r4, [r0, #22]
 80140ca:	8b83      	ldrh	r3, [r0, #28]
 80140cc:	8b04      	ldrh	r4, [r0, #24]
 80140ce:	4422      	add	r2, r4
 80140d0:	440c      	add	r4, r1
 80140d2:	1a59      	subs	r1, r3, r1
 80140d4:	83c2      	strh	r2, [r0, #30]
 80140d6:	8304      	strh	r4, [r0, #24]
 80140d8:	8381      	strh	r1, [r0, #28]
 80140da:	bd30      	pop	{r4, r5, pc}

080140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 80140dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140e0:	4604      	mov	r4, r0
 80140e2:	8a47      	ldrh	r7, [r0, #18]
 80140e4:	68c0      	ldr	r0, [r0, #12]
 80140e6:	6803      	ldr	r3, [r0, #0]
 80140e8:	b085      	sub	sp, #20
 80140ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80140ec:	4798      	blx	r3
 80140ee:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80140f2:	7a63      	ldrb	r3, [r4, #9]
 80140f4:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80140f8:	42b7      	cmp	r7, r6
 80140fa:	f103 33ff 	add.w	r3, r3, #4294967295
 80140fe:	bfac      	ite	ge
 8014100:	f04f 0900 	movge.w	r9, #0
 8014104:	f04f 0901 	movlt.w	r9, #1
 8014108:	2b05      	cmp	r3, #5
 801410a:	d804      	bhi.n	8014116 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 801410c:	e8df f003 	tbb	[pc, r3]
 8014110:	470e0854 	.word	0x470e0854
 8014114:	4c4c      	.short	0x4c4c
 8014116:	2500      	movs	r5, #0
 8014118:	46a9      	mov	r9, r5
 801411a:	462e      	mov	r6, r5
 801411c:	462f      	mov	r7, r5
 801411e:	e00d      	b.n	801413c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014120:	42b7      	cmp	r7, r6
 8014122:	bfb4      	ite	lt
 8014124:	2600      	movlt	r6, #0
 8014126:	2601      	movge	r6, #1
 8014128:	2500      	movs	r5, #0
 801412a:	e7f7      	b.n	801411c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801412c:	42b7      	cmp	r7, r6
 801412e:	464d      	mov	r5, r9
 8014130:	f04f 0900 	mov.w	r9, #0
 8014134:	bfb4      	ite	lt
 8014136:	2600      	movlt	r6, #0
 8014138:	2601      	movge	r6, #1
 801413a:	464f      	mov	r7, r9
 801413c:	f04f 0800 	mov.w	r8, #0
 8014140:	f8a4 8016 	strh.w	r8, [r4, #22]
 8014144:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014148:	f8cd 8004 	str.w	r8, [sp, #4]
 801414c:	2300      	movs	r3, #0
 801414e:	9303      	str	r3, [sp, #12]
 8014150:	8823      	ldrh	r3, [r4, #0]
 8014152:	2b20      	cmp	r3, #32
 8014154:	d034      	beq.n	80141c0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8014156:	f242 010b 	movw	r1, #8203	; 0x200b
 801415a:	1a5a      	subs	r2, r3, r1
 801415c:	f1d2 0a00 	rsbs	sl, r2, #0
 8014160:	eb4a 0a02 	adc.w	sl, sl, r2
 8014164:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014168:	4293      	cmp	r3, r2
 801416a:	d009      	beq.n	8014180 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 801416c:	428b      	cmp	r3, r1
 801416e:	9a01      	ldr	r2, [sp, #4]
 8014170:	bf18      	it	ne
 8014172:	461a      	movne	r2, r3
 8014174:	9201      	str	r2, [sp, #4]
 8014176:	bf0c      	ite	eq
 8014178:	f04f 0a01 	moveq.w	sl, #1
 801417c:	f04f 0a00 	movne.w	sl, #0
 8014180:	ab03      	add	r3, sp, #12
 8014182:	68e2      	ldr	r2, [r4, #12]
 8014184:	7a21      	ldrb	r1, [r4, #8]
 8014186:	6860      	ldr	r0, [r4, #4]
 8014188:	f002 ff4a 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801418c:	8020      	strh	r0, [r4, #0]
 801418e:	b9d8      	cbnz	r0, 80141c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014190:	8ba2      	ldrh	r2, [r4, #28]
 8014192:	2300      	movs	r3, #0
 8014194:	4611      	mov	r1, r2
 8014196:	4620      	mov	r0, r4
 8014198:	f7ff ff90 	bl	80140bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801419c:	e06e      	b.n	801427c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801419e:	2500      	movs	r5, #0
 80141a0:	46a9      	mov	r9, r5
 80141a2:	462e      	mov	r6, r5
 80141a4:	2701      	movs	r7, #1
 80141a6:	e7c9      	b.n	801413c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80141a8:	42b7      	cmp	r7, r6
 80141aa:	f04f 0500 	mov.w	r5, #0
 80141ae:	bfb4      	ite	lt
 80141b0:	2700      	movlt	r7, #0
 80141b2:	2701      	movge	r7, #1
 80141b4:	462e      	mov	r6, r5
 80141b6:	e7c1      	b.n	801413c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80141b8:	2500      	movs	r5, #0
 80141ba:	46a9      	mov	r9, r5
 80141bc:	2601      	movs	r6, #1
 80141be:	e7ad      	b.n	801411c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80141c0:	9301      	str	r3, [sp, #4]
 80141c2:	f04f 0a01 	mov.w	sl, #1
 80141c6:	e7db      	b.n	8014180 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80141c8:	8b63      	ldrh	r3, [r4, #26]
 80141ca:	280a      	cmp	r0, #10
 80141cc:	f103 0301 	add.w	r3, r3, #1
 80141d0:	8363      	strh	r3, [r4, #26]
 80141d2:	d0dd      	beq.n	8014190 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 80141d4:	9a03      	ldr	r2, [sp, #12]
 80141d6:	bb62      	cbnz	r2, 8014232 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 80141d8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80141dc:	4298      	cmp	r0, r3
 80141de:	d003      	beq.n	80141e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80141e0:	f242 030b 	movw	r3, #8203	; 0x200b
 80141e4:	4298      	cmp	r0, r3
 80141e6:	d1b1      	bne.n	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80141e8:	8823      	ldrh	r3, [r4, #0]
 80141ea:	8ba1      	ldrh	r1, [r4, #28]
 80141ec:	2b20      	cmp	r3, #32
 80141ee:	d003      	beq.n	80141f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80141f0:	f242 000b 	movw	r0, #8203	; 0x200b
 80141f4:	4283      	cmp	r3, r0
 80141f6:	d131      	bne.n	801425c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80141f8:	f1ba 0f00 	cmp.w	sl, #0
 80141fc:	bf0a      	itet	eq
 80141fe:	4688      	moveq	r8, r1
 8014200:	4650      	movne	r0, sl
 8014202:	2001      	moveq	r0, #1
 8014204:	440a      	add	r2, r1
 8014206:	8b23      	ldrh	r3, [r4, #24]
 8014208:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801420c:	b292      	uxth	r2, r2
 801420e:	83a2      	strh	r2, [r4, #28]
 8014210:	4413      	add	r3, r2
 8014212:	f1b9 0f00 	cmp.w	r9, #0
 8014216:	d102      	bne.n	801421e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014218:	2d00      	cmp	r5, #0
 801421a:	d042      	beq.n	80142a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 801421c:	b300      	cbz	r0, 8014260 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801421e:	8c21      	ldrh	r1, [r4, #32]
 8014220:	4419      	add	r1, r3
 8014222:	458c      	cmp	ip, r1
 8014224:	da37      	bge.n	8014296 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014226:	8ae1      	ldrh	r1, [r4, #22]
 8014228:	2900      	cmp	r1, #0
 801422a:	d034      	beq.n	8014296 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801422c:	4563      	cmp	r3, ip
 801422e:	dd8d      	ble.n	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014230:	e01d      	b.n	801426e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8014232:	8893      	ldrh	r3, [r2, #4]
 8014234:	8023      	strh	r3, [r4, #0]
 8014236:	f892 b00d 	ldrb.w	fp, [r2, #13]
 801423a:	9901      	ldr	r1, [sp, #4]
 801423c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8014240:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8014244:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014248:	ea4b 0b00 	orr.w	fp, fp, r0
 801424c:	68e0      	ldr	r0, [r4, #12]
 801424e:	6803      	ldr	r3, [r0, #0]
 8014250:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014252:	4798      	blx	r3
 8014254:	eb0b 0200 	add.w	r2, fp, r0
 8014258:	b292      	uxth	r2, r2
 801425a:	e7c5      	b.n	80141e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801425c:	2000      	movs	r0, #0
 801425e:	e7d1      	b.n	8014204 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014260:	4563      	cmp	r3, ip
 8014262:	f77f af73 	ble.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014266:	8ae3      	ldrh	r3, [r4, #22]
 8014268:	2b00      	cmp	r3, #0
 801426a:	f43f af6f 	beq.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801426e:	2301      	movs	r3, #1
 8014270:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8014274:	8c22      	ldrh	r2, [r4, #32]
 8014276:	8be3      	ldrh	r3, [r4, #30]
 8014278:	4413      	add	r3, r2
 801427a:	83e3      	strh	r3, [r4, #30]
 801427c:	68e0      	ldr	r0, [r4, #12]
 801427e:	6803      	ldr	r3, [r0, #0]
 8014280:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014282:	4798      	blx	r3
 8014284:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014288:	4418      	add	r0, r3
 801428a:	8a63      	ldrh	r3, [r4, #18]
 801428c:	1a18      	subs	r0, r3, r0
 801428e:	8260      	strh	r0, [r4, #18]
 8014290:	b005      	add	sp, #20
 8014292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014296:	2300      	movs	r3, #0
 8014298:	4611      	mov	r1, r2
 801429a:	4620      	mov	r0, r4
 801429c:	f7ff ff0e 	bl	80140bc <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80142a0:	e754      	b.n	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142a2:	4563      	cmp	r3, ip
 80142a4:	dd14      	ble.n	80142d0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80142a6:	b117      	cbz	r7, 80142ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80142a8:	2301      	movs	r3, #1
 80142aa:	460a      	mov	r2, r1
 80142ac:	e772      	b.n	8014194 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80142ae:	2e00      	cmp	r6, #0
 80142b0:	f43f af4c 	beq.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142b4:	2800      	cmp	r0, #0
 80142b6:	f47f af49 	bne.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142ba:	f1ba 0f00 	cmp.w	sl, #0
 80142be:	d002      	beq.n	80142c6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 80142c0:	2301      	movs	r3, #1
 80142c2:	4642      	mov	r2, r8
 80142c4:	e767      	b.n	8014196 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 80142c6:	8ae3      	ldrh	r3, [r4, #22]
 80142c8:	2b00      	cmp	r3, #0
 80142ca:	f43f af3f 	beq.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142ce:	e7d5      	b.n	801427c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80142d0:	2800      	cmp	r0, #0
 80142d2:	f47f af3b 	bne.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142d6:	f1ba 0f00 	cmp.w	sl, #0
 80142da:	f43f af37 	beq.w	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80142de:	2301      	movs	r3, #1
 80142e0:	4642      	mov	r2, r8
 80142e2:	e7da      	b.n	801429a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

080142e4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 80142e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142e6:	4605      	mov	r5, r0
 80142e8:	b08f      	sub	sp, #60	; 0x3c
 80142ea:	4617      	mov	r7, r2
 80142ec:	461c      	mov	r4, r3
 80142ee:	460e      	mov	r6, r1
 80142f0:	b1d1      	cbz	r1, 8014328 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80142f2:	681b      	ldr	r3, [r3, #0]
 80142f4:	4620      	mov	r0, r4
 80142f6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142f8:	4798      	blx	r3
 80142fa:	4240      	negs	r0, r0
 80142fc:	b200      	sxth	r0, r0
 80142fe:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8014302:	9603      	str	r6, [sp, #12]
 8014304:	9700      	str	r7, [sp, #0]
 8014306:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801430a:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801430e:	4629      	mov	r1, r5
 8014310:	a805      	add	r0, sp, #20
 8014312:	f7ff fcbf 	bl	8013c94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014316:	2401      	movs	r4, #1
 8014318:	a805      	add	r0, sp, #20
 801431a:	f7ff fedf 	bl	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801431e:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8014322:	b163      	cbz	r3, 801433e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8014324:	3401      	adds	r4, #1
 8014326:	e7f7      	b.n	8014318 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014328:	f002 ff48 	bl	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801432c:	2401      	movs	r4, #1
 801432e:	280a      	cmp	r0, #10
 8014330:	4628      	mov	r0, r5
 8014332:	bf08      	it	eq
 8014334:	3401      	addeq	r4, #1
 8014336:	f002 ff41 	bl	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801433a:	2800      	cmp	r0, #0
 801433c:	d1f7      	bne.n	801432e <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801433e:	b2a0      	uxth	r0, r4
 8014340:	b00f      	add	sp, #60	; 0x3c
 8014342:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014344 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8014344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014348:	b0e3      	sub	sp, #396	; 0x18c
 801434a:	461c      	mov	r4, r3
 801434c:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 801434e:	4683      	mov	fp, r0
 8014350:	4688      	mov	r8, r1
 8014352:	2b00      	cmp	r3, #0
 8014354:	f000 8112 	beq.w	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014358:	6823      	ldr	r3, [r4, #0]
 801435a:	2b00      	cmp	r3, #0
 801435c:	f000 810e 	beq.w	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014360:	7ba3      	ldrb	r3, [r4, #14]
 8014362:	2b00      	cmp	r3, #0
 8014364:	f000 810a 	beq.w	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014368:	6810      	ldr	r0, [r2, #0]
 801436a:	6851      	ldr	r1, [r2, #4]
 801436c:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014370:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8014374:	ad0a      	add	r5, sp, #40	; 0x28
 8014376:	462b      	mov	r3, r5
 8014378:	c303      	stmia	r3!, {r0, r1}
 801437a:	2100      	movs	r1, #0
 801437c:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014380:	910c      	str	r1, [sp, #48]	; 0x30
 8014382:	79a2      	ldrb	r2, [r4, #6]
 8014384:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014388:	a90c      	add	r1, sp, #48	; 0x30
 801438a:	4628      	mov	r0, r5
 801438c:	f7ff fd01 	bl	8013d92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014390:	a90c      	add	r1, sp, #48	; 0x30
 8014392:	4608      	mov	r0, r1
 8014394:	79a2      	ldrb	r2, [r4, #6]
 8014396:	f7ff fcfc 	bl	8013d92 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801439a:	a817      	add	r0, sp, #92	; 0x5c
 801439c:	f002 fae2 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 80143a0:	6820      	ldr	r0, [r4, #0]
 80143a2:	6803      	ldr	r3, [r0, #0]
 80143a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80143a6:	4798      	blx	r3
 80143a8:	4606      	mov	r6, r0
 80143aa:	6820      	ldr	r0, [r4, #0]
 80143ac:	6803      	ldr	r3, [r0, #0]
 80143ae:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80143b0:	4798      	blx	r3
 80143b2:	4633      	mov	r3, r6
 80143b4:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80143b6:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80143b8:	9000      	str	r0, [sp, #0]
 80143ba:	a817      	add	r0, sp, #92	; 0x5c
 80143bc:	f002 fb2d 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80143c0:	6820      	ldr	r0, [r4, #0]
 80143c2:	f894 a004 	ldrb.w	sl, [r4, #4]
 80143c6:	6803      	ldr	r3, [r0, #0]
 80143c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80143ca:	4798      	blx	r3
 80143cc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80143d0:	6823      	ldr	r3, [r4, #0]
 80143d2:	4607      	mov	r7, r0
 80143d4:	4406      	add	r6, r0
 80143d6:	a830      	add	r0, sp, #192	; 0xc0
 80143d8:	f893 9009 	ldrb.w	r9, [r3, #9]
 80143dc:	f002 fac2 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 80143e0:	7c23      	ldrb	r3, [r4, #16]
 80143e2:	b17b      	cbz	r3, 8014404 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80143e4:	6820      	ldr	r0, [r4, #0]
 80143e6:	6803      	ldr	r3, [r0, #0]
 80143e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80143ea:	4798      	blx	r3
 80143ec:	9009      	str	r0, [sp, #36]	; 0x24
 80143ee:	6820      	ldr	r0, [r4, #0]
 80143f0:	6802      	ldr	r2, [r0, #0]
 80143f2:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80143f4:	4790      	blx	r2
 80143f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143f8:	9000      	str	r0, [sp, #0]
 80143fa:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80143fc:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80143fe:	a830      	add	r0, sp, #192	; 0xc0
 8014400:	f002 fb0b 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014404:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014408:	7be2      	ldrb	r2, [r4, #15]
 801440a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801440e:	1a8a      	subs	r2, r1, r2
 8014410:	7c21      	ldrb	r1, [r4, #16]
 8014412:	9103      	str	r1, [sp, #12]
 8014414:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014418:	9102      	str	r1, [sp, #8]
 801441a:	6821      	ldr	r1, [r4, #0]
 801441c:	9101      	str	r1, [sp, #4]
 801441e:	7961      	ldrb	r1, [r4, #5]
 8014420:	9100      	str	r1, [sp, #0]
 8014422:	b292      	uxth	r2, r2
 8014424:	a930      	add	r1, sp, #192	; 0xc0
 8014426:	a80e      	add	r0, sp, #56	; 0x38
 8014428:	f7ff fc34 	bl	8013c94 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801442c:	2e00      	cmp	r6, #0
 801442e:	dc5b      	bgt.n	80144e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014430:	af17      	add	r7, sp, #92	; 0x5c
 8014432:	f04f 0900 	mov.w	r9, #0
 8014436:	7c23      	ldrb	r3, [r4, #16]
 8014438:	2b00      	cmp	r3, #0
 801443a:	f000 80b1 	beq.w	80145a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801443e:	a80e      	add	r0, sp, #56	; 0x38
 8014440:	f7ff fe4c 	bl	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014444:	f1ba 0f00 	cmp.w	sl, #0
 8014448:	f000 80a5 	beq.w	8014596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801444c:	7c23      	ldrb	r3, [r4, #16]
 801444e:	9309      	str	r3, [sp, #36]	; 0x24
 8014450:	2264      	movs	r2, #100	; 0x64
 8014452:	4639      	mov	r1, r7
 8014454:	a849      	add	r0, sp, #292	; 0x124
 8014456:	f015 fda8 	bl	8029faa <memcpy>
 801445a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801445c:	2b00      	cmp	r3, #0
 801445e:	f000 80a7 	beq.w	80145b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014462:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 8014466:	7922      	ldrb	r2, [r4, #4]
 8014468:	2a01      	cmp	r2, #1
 801446a:	f040 808a 	bne.w	8014582 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801446e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8014472:	1ac0      	subs	r0, r0, r3
 8014474:	2302      	movs	r3, #2
 8014476:	fb90 f0f3 	sdiv	r0, r0, r3
 801447a:	b200      	sxth	r0, r0
 801447c:	7c23      	ldrb	r3, [r4, #16]
 801447e:	2b00      	cmp	r3, #0
 8014480:	f000 808b 	beq.w	801459a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014484:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014488:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 801448c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014490:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014494:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014498:	4410      	add	r0, r2
 801449a:	b200      	sxth	r0, r0
 801449c:	9000      	str	r0, [sp, #0]
 801449e:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80144a2:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80144a6:	4642      	mov	r2, r8
 80144a8:	2100      	movs	r1, #0
 80144aa:	4658      	mov	r0, fp
 80144ac:	f7ff fca2 	bl	8013df4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80144b0:	2800      	cmp	r0, #0
 80144b2:	d163      	bne.n	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144b4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80144b8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80144bc:	b2b2      	uxth	r2, r6
 80144be:	4413      	add	r3, r2
 80144c0:	1a8a      	subs	r2, r1, r2
 80144c2:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80144c6:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80144ca:	b21b      	sxth	r3, r3
 80144cc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80144d0:	2a00      	cmp	r2, #0
 80144d2:	d153      	bne.n	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144d4:	6822      	ldr	r2, [r4, #0]
 80144d6:	8869      	ldrh	r1, [r5, #2]
 80144d8:	7a12      	ldrb	r2, [r2, #8]
 80144da:	1a9b      	subs	r3, r3, r2
 80144dc:	88ea      	ldrh	r2, [r5, #6]
 80144de:	440a      	add	r2, r1
 80144e0:	b212      	sxth	r2, r2
 80144e2:	4293      	cmp	r3, r2
 80144e4:	dda7      	ble.n	8014436 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80144e6:	e049      	b.n	801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144e8:	7c23      	ldrb	r3, [r4, #16]
 80144ea:	444f      	add	r7, r9
 80144ec:	b1c3      	cbz	r3, 8014520 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80144ee:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80144f2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80144f6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80144fa:	443b      	add	r3, r7
 80144fc:	4293      	cmp	r3, r2
 80144fe:	da97      	bge.n	8014430 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014500:	a80e      	add	r0, sp, #56	; 0x38
 8014502:	f7ff fdeb 	bl	80140dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014506:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 801450a:	3b01      	subs	r3, #1
 801450c:	b29b      	uxth	r3, r3
 801450e:	454b      	cmp	r3, r9
 8014510:	9309      	str	r3, [sp, #36]	; 0x24
 8014512:	d021      	beq.n	8014558 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014514:	7961      	ldrb	r1, [r4, #5]
 8014516:	a817      	add	r0, sp, #92	; 0x5c
 8014518:	f7f3 fd78 	bl	800800c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801451c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801451e:	e7f4      	b.n	801450a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014520:	fa1f f986 	uxth.w	r9, r6
 8014524:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014528:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801452c:	443b      	add	r3, r7
 801452e:	4293      	cmp	r3, r2
 8014530:	f6bf af7e 	bge.w	8014430 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014534:	a817      	add	r0, sp, #92	; 0x5c
 8014536:	f002 fe41 	bl	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 801453a:	b1f8      	cbz	r0, 801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801453c:	280a      	cmp	r0, #10
 801453e:	d1f1      	bne.n	8014524 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014540:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014544:	444b      	add	r3, r9
 8014546:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801454a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801454e:	eba3 0309 	sub.w	r3, r3, r9
 8014552:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014556:	e7e5      	b.n	8014524 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014558:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801455c:	b2b3      	uxth	r3, r6
 801455e:	441a      	add	r2, r3
 8014560:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8014564:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014568:	1ad3      	subs	r3, r2, r3
 801456a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801456e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014572:	b11b      	cbz	r3, 801457c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014574:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014578:	2b00      	cmp	r3, #0
 801457a:	d0ba      	beq.n	80144f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801457c:	b063      	add	sp, #396	; 0x18c
 801457e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014582:	2a02      	cmp	r2, #2
 8014584:	d105      	bne.n	8014592 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014586:	7be2      	ldrb	r2, [r4, #15]
 8014588:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801458c:	1a80      	subs	r0, r0, r2
 801458e:	1ac0      	subs	r0, r0, r3
 8014590:	e773      	b.n	801447a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014592:	2000      	movs	r0, #0
 8014594:	e772      	b.n	801447c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014596:	7be0      	ldrb	r0, [r4, #15]
 8014598:	e770      	b.n	801447c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801459a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801459e:	e773      	b.n	8014488 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80145a0:	f1ba 0f00 	cmp.w	sl, #0
 80145a4:	d0f7      	beq.n	8014596 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80145a6:	2264      	movs	r2, #100	; 0x64
 80145a8:	4639      	mov	r1, r7
 80145aa:	a849      	add	r0, sp, #292	; 0x124
 80145ac:	f015 fcfd 	bl	8029faa <memcpy>
 80145b0:	2300      	movs	r3, #0
 80145b2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80145b6:	6821      	ldr	r1, [r4, #0]
 80145b8:	a849      	add	r0, sp, #292	; 0x124
 80145ba:	f7ff fbae 	bl	8013d1a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80145be:	b203      	sxth	r3, r0
 80145c0:	e751      	b.n	8014466 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080145c2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80145c2:	2b03      	cmp	r3, #3
 80145c4:	d818      	bhi.n	80145f8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80145c6:	e8df f003 	tbb	[pc, r3]
 80145ca:	0602      	.short	0x0602
 80145cc:	130d      	.short	0x130d
 80145ce:	f9b0 2000 	ldrsh.w	r2, [r0]
 80145d2:	1850      	adds	r0, r2, r1
 80145d4:	4770      	bx	lr
 80145d6:	8803      	ldrh	r3, [r0, #0]
 80145d8:	8880      	ldrh	r0, [r0, #4]
 80145da:	4418      	add	r0, r3
 80145dc:	b200      	sxth	r0, r0
 80145de:	1a80      	subs	r0, r0, r2
 80145e0:	3801      	subs	r0, #1
 80145e2:	4770      	bx	lr
 80145e4:	8803      	ldrh	r3, [r0, #0]
 80145e6:	8880      	ldrh	r0, [r0, #4]
 80145e8:	4418      	add	r0, r3
 80145ea:	b200      	sxth	r0, r0
 80145ec:	1a40      	subs	r0, r0, r1
 80145ee:	e7f7      	b.n	80145e0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80145f0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80145f4:	4410      	add	r0, r2
 80145f6:	4770      	bx	lr
 80145f8:	2000      	movs	r0, #0
 80145fa:	4770      	bx	lr

080145fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80145fc:	2b03      	cmp	r3, #3
 80145fe:	d817      	bhi.n	8014630 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014600:	e8df f003 	tbb	[pc, r3]
 8014604:	10090602 	.word	0x10090602
 8014608:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801460c:	1850      	adds	r0, r2, r1
 801460e:	4770      	bx	lr
 8014610:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014614:	e7fa      	b.n	801460c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014616:	8843      	ldrh	r3, [r0, #2]
 8014618:	88c0      	ldrh	r0, [r0, #6]
 801461a:	4418      	add	r0, r3
 801461c:	b200      	sxth	r0, r0
 801461e:	1a80      	subs	r0, r0, r2
 8014620:	3801      	subs	r0, #1
 8014622:	4770      	bx	lr
 8014624:	8843      	ldrh	r3, [r0, #2]
 8014626:	88c0      	ldrh	r0, [r0, #6]
 8014628:	4418      	add	r0, r3
 801462a:	b200      	sxth	r0, r0
 801462c:	1a40      	subs	r0, r0, r1
 801462e:	e7f7      	b.n	8014620 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014630:	2000      	movs	r0, #0
 8014632:	4770      	bx	lr

08014634 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014634:	4b01      	ldr	r3, [pc, #4]	; (801463c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014636:	2200      	movs	r2, #0
 8014638:	601a      	str	r2, [r3, #0]
 801463a:	4770      	bx	lr
 801463c:	20012dc4 	.word	0x20012dc4

08014640 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014640:	4603      	mov	r3, r0
 8014642:	b1c8      	cbz	r0, 8014678 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014644:	0c02      	lsrs	r2, r0, #16
 8014646:	0412      	lsls	r2, r2, #16
 8014648:	b9a2      	cbnz	r2, 8014674 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801464a:	0403      	lsls	r3, r0, #16
 801464c:	2010      	movs	r0, #16
 801464e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8014652:	bf04      	itt	eq
 8014654:	021b      	lsleq	r3, r3, #8
 8014656:	3008      	addeq	r0, #8
 8014658:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801465c:	bf04      	itt	eq
 801465e:	011b      	lsleq	r3, r3, #4
 8014660:	3004      	addeq	r0, #4
 8014662:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8014666:	bf04      	itt	eq
 8014668:	009b      	lsleq	r3, r3, #2
 801466a:	3002      	addeq	r0, #2
 801466c:	2b00      	cmp	r3, #0
 801466e:	db04      	blt.n	801467a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014670:	3001      	adds	r0, #1
 8014672:	4770      	bx	lr
 8014674:	2000      	movs	r0, #0
 8014676:	e7ea      	b.n	801464e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014678:	2020      	movs	r0, #32
 801467a:	4770      	bx	lr

0801467c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801467c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014680:	b087      	sub	sp, #28
 8014682:	460d      	mov	r5, r1
 8014684:	4616      	mov	r6, r2
 8014686:	4698      	mov	r8, r3
 8014688:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801468c:	4601      	mov	r1, r0
 801468e:	b120      	cbz	r0, 801469a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014690:	b11a      	cbz	r2, 801469a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014692:	2d1f      	cmp	r5, #31
 8014694:	d801      	bhi.n	801469a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014696:	2b1f      	cmp	r3, #31
 8014698:	d904      	bls.n	80146a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801469a:	2000      	movs	r0, #0
 801469c:	6038      	str	r0, [r7, #0]
 801469e:	b007      	add	sp, #28
 80146a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146a4:	b97d      	cbnz	r5, 80146c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80146a6:	b143      	cbz	r3, 80146ba <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80146a8:	4602      	mov	r2, r0
 80146aa:	e9cd 4700 	strd	r4, r7, [sp]
 80146ae:	462b      	mov	r3, r5
 80146b0:	4641      	mov	r1, r8
 80146b2:	4630      	mov	r0, r6
 80146b4:	f7ff ffe2 	bl	801467c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80146b8:	e7f1      	b.n	801469e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80146ba:	f04f 33ff 	mov.w	r3, #4294967295
 80146be:	603b      	str	r3, [r7, #0]
 80146c0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80146c4:	e7eb      	b.n	801469e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80146c6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80146ca:	d106      	bne.n	80146da <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80146cc:	4346      	muls	r6, r0
 80146ce:	fbb6 f0f4 	udiv	r0, r6, r4
 80146d2:	fb04 6610 	mls	r6, r4, r0, r6
 80146d6:	603e      	str	r6, [r7, #0]
 80146d8:	e7e1      	b.n	801469e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80146da:	2201      	movs	r2, #1
 80146dc:	40aa      	lsls	r2, r5
 80146de:	3a01      	subs	r2, #1
 80146e0:	4016      	ands	r6, r2
 80146e2:	fa00 fb05 	lsl.w	fp, r0, r5
 80146e6:	4630      	mov	r0, r6
 80146e8:	fbbb f9f4 	udiv	r9, fp, r4
 80146ec:	fb0a f309 	mul.w	r3, sl, r9
 80146f0:	9303      	str	r3, [sp, #12]
 80146f2:	f7ff ffa5 	bl	8014640 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80146f6:	462b      	mov	r3, r5
 80146f8:	460a      	mov	r2, r1
 80146fa:	e9cd 4700 	strd	r4, r7, [sp]
 80146fe:	4601      	mov	r1, r0
 8014700:	4630      	mov	r0, r6
 8014702:	f7ff ffbb 	bl	801467c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014706:	fb04 b919 	mls	r9, r4, r9, fp
 801470a:	4606      	mov	r6, r0
 801470c:	4648      	mov	r0, r9
 801470e:	eb05 0108 	add.w	r1, r5, r8
 8014712:	f7ff ff95 	bl	8014640 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014716:	ab05      	add	r3, sp, #20
 8014718:	e9cd 4300 	strd	r4, r3, [sp]
 801471c:	464a      	mov	r2, r9
 801471e:	4603      	mov	r3, r0
 8014720:	4650      	mov	r0, sl
 8014722:	f7ff ffab 	bl	801467c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014726:	6839      	ldr	r1, [r7, #0]
 8014728:	9a05      	ldr	r2, [sp, #20]
 801472a:	9b03      	ldr	r3, [sp, #12]
 801472c:	4411      	add	r1, r2
 801472e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014732:	18d3      	adds	r3, r2, r3
 8014734:	441e      	add	r6, r3
 8014736:	fb04 1412 	mls	r4, r4, r2, r1
 801473a:	4430      	add	r0, r6
 801473c:	603c      	str	r4, [r7, #0]
 801473e:	e7ae      	b.n	801469e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014740 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014740:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014744:	b085      	sub	sp, #20
 8014746:	f1b0 0900 	subs.w	r9, r0, #0
 801474a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801474c:	461d      	mov	r5, r3
 801474e:	bfbf      	itttt	lt
 8014750:	6823      	ldrlt	r3, [r4, #0]
 8014752:	425b      	neglt	r3, r3
 8014754:	f1c9 0900 	rsblt	r9, r9, #0
 8014758:	6023      	strlt	r3, [r4, #0]
 801475a:	bfb4      	ite	lt
 801475c:	f04f 36ff 	movlt.w	r6, #4294967295
 8014760:	2601      	movge	r6, #1
 8014762:	2a00      	cmp	r2, #0
 8014764:	4617      	mov	r7, r2
 8014766:	da04      	bge.n	8014772 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014768:	6823      	ldr	r3, [r4, #0]
 801476a:	425b      	negs	r3, r3
 801476c:	4257      	negs	r7, r2
 801476e:	4276      	negs	r6, r6
 8014770:	6023      	str	r3, [r4, #0]
 8014772:	2d00      	cmp	r5, #0
 8014774:	4638      	mov	r0, r7
 8014776:	bfba      	itte	lt
 8014778:	426d      	neglt	r5, r5
 801477a:	f04f 38ff 	movlt.w	r8, #4294967295
 801477e:	f04f 0801 	movge.w	r8, #1
 8014782:	f7ff ff5d 	bl	8014640 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014786:	ab03      	add	r3, sp, #12
 8014788:	e9cd 5300 	strd	r5, r3, [sp]
 801478c:	463a      	mov	r2, r7
 801478e:	4603      	mov	r3, r0
 8014790:	4648      	mov	r0, r9
 8014792:	f7ff ff73 	bl	801467c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014796:	6823      	ldr	r3, [r4, #0]
 8014798:	9a03      	ldr	r2, [sp, #12]
 801479a:	4546      	cmp	r6, r8
 801479c:	441a      	add	r2, r3
 801479e:	fb92 f3f5 	sdiv	r3, r2, r5
 80147a2:	4418      	add	r0, r3
 80147a4:	bf18      	it	ne
 80147a6:	4240      	negne	r0, r0
 80147a8:	fb05 2313 	mls	r3, r5, r3, r2
 80147ac:	1c72      	adds	r2, r6, #1
 80147ae:	6023      	str	r3, [r4, #0]
 80147b0:	d105      	bne.n	80147be <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80147b2:	2b00      	cmp	r3, #0
 80147b4:	f1c3 0200 	rsb	r2, r3, #0
 80147b8:	db0b      	blt.n	80147d2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80147ba:	6022      	str	r2, [r4, #0]
 80147bc:	e006      	b.n	80147cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80147be:	2e01      	cmp	r6, #1
 80147c0:	d104      	bne.n	80147cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80147c2:	2b00      	cmp	r3, #0
 80147c4:	da02      	bge.n	80147cc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80147c6:	442b      	add	r3, r5
 80147c8:	3801      	subs	r0, #1
 80147ca:	6023      	str	r3, [r4, #0]
 80147cc:	b005      	add	sp, #20
 80147ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80147d2:	3801      	subs	r0, #1
 80147d4:	1b52      	subs	r2, r2, r5
 80147d6:	e7f0      	b.n	80147ba <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080147d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80147d8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80147dc:	4c1c      	ldr	r4, [pc, #112]	; (8014850 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80147de:	6807      	ldr	r7, [r0, #0]
 80147e0:	69a3      	ldr	r3, [r4, #24]
 80147e2:	4605      	mov	r5, r0
 80147e4:	b92b      	cbnz	r3, 80147f2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80147e6:	6840      	ldr	r0, [r0, #4]
 80147e8:	e9c5 7000 	strd	r7, r0, [r5]
 80147ec:	b004      	add	sp, #16
 80147ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80147f2:	68a2      	ldr	r2, [r4, #8]
 80147f4:	6820      	ldr	r0, [r4, #0]
 80147f6:	ae04      	add	r6, sp, #16
 80147f8:	f04f 0802 	mov.w	r8, #2
 80147fc:	fb93 f1f8 	sdiv	r1, r3, r8
 8014800:	440a      	add	r2, r1
 8014802:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014806:	69e1      	ldr	r1, [r4, #28]
 8014808:	9600      	str	r6, [sp, #0]
 801480a:	463a      	mov	r2, r7
 801480c:	f7ff ff98 	bl	8014740 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014810:	69a3      	ldr	r3, [r4, #24]
 8014812:	686a      	ldr	r2, [r5, #4]
 8014814:	6a21      	ldr	r1, [r4, #32]
 8014816:	9600      	str	r6, [sp, #0]
 8014818:	4607      	mov	r7, r0
 801481a:	6860      	ldr	r0, [r4, #4]
 801481c:	f7ff ff90 	bl	8014740 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014820:	6962      	ldr	r2, [r4, #20]
 8014822:	69a3      	ldr	r3, [r4, #24]
 8014824:	fb93 f8f8 	sdiv	r8, r3, r8
 8014828:	4442      	add	r2, r8
 801482a:	9203      	str	r2, [sp, #12]
 801482c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801482e:	682a      	ldr	r2, [r5, #0]
 8014830:	9600      	str	r6, [sp, #0]
 8014832:	4407      	add	r7, r0
 8014834:	68e0      	ldr	r0, [r4, #12]
 8014836:	f7ff ff83 	bl	8014740 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801483a:	9600      	str	r6, [sp, #0]
 801483c:	4680      	mov	r8, r0
 801483e:	69a3      	ldr	r3, [r4, #24]
 8014840:	686a      	ldr	r2, [r5, #4]
 8014842:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014844:	6920      	ldr	r0, [r4, #16]
 8014846:	f7ff ff7b 	bl	8014740 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801484a:	4440      	add	r0, r8
 801484c:	e7cc      	b.n	80147e8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801484e:	bf00      	nop
 8014850:	20012dc8 	.word	0x20012dc8

08014854 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014854:	4b07      	ldr	r3, [pc, #28]	; (8014874 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014856:	781b      	ldrb	r3, [r3, #0]
 8014858:	2b01      	cmp	r3, #1
 801485a:	d109      	bne.n	8014870 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801485c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014860:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014864:	8003      	strh	r3, [r0, #0]
 8014866:	4b04      	ldr	r3, [pc, #16]	; (8014878 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014868:	881b      	ldrh	r3, [r3, #0]
 801486a:	3b01      	subs	r3, #1
 801486c:	1a9b      	subs	r3, r3, r2
 801486e:	800b      	strh	r3, [r1, #0]
 8014870:	4770      	bx	lr
 8014872:	bf00      	nop
 8014874:	20012dac 	.word	0x20012dac
 8014878:	20012da8 	.word	0x20012da8

0801487c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801487c:	b510      	push	{r4, lr}
 801487e:	4b07      	ldr	r3, [pc, #28]	; (801489c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014880:	781b      	ldrb	r3, [r3, #0]
 8014882:	2b01      	cmp	r3, #1
 8014884:	d108      	bne.n	8014898 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014886:	4b06      	ldr	r3, [pc, #24]	; (80148a0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014888:	880c      	ldrh	r4, [r1, #0]
 801488a:	881b      	ldrh	r3, [r3, #0]
 801488c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014890:	3b01      	subs	r3, #1
 8014892:	1b1b      	subs	r3, r3, r4
 8014894:	8003      	strh	r3, [r0, #0]
 8014896:	800a      	strh	r2, [r1, #0]
 8014898:	bd10      	pop	{r4, pc}
 801489a:	bf00      	nop
 801489c:	20012dac 	.word	0x20012dac
 80148a0:	20012da8 	.word	0x20012da8

080148a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80148a4:	b510      	push	{r4, lr}
 80148a6:	4b0a      	ldr	r3, [pc, #40]	; (80148d0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80148a8:	781b      	ldrb	r3, [r3, #0]
 80148aa:	2b01      	cmp	r3, #1
 80148ac:	d10e      	bne.n	80148cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80148ae:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80148b2:	8843      	ldrh	r3, [r0, #2]
 80148b4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80148b8:	8044      	strh	r4, [r0, #2]
 80148ba:	18ca      	adds	r2, r1, r3
 80148bc:	4b05      	ldr	r3, [pc, #20]	; (80148d4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80148be:	881b      	ldrh	r3, [r3, #0]
 80148c0:	1a9b      	subs	r3, r3, r2
 80148c2:	8003      	strh	r3, [r0, #0]
 80148c4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80148c8:	80c3      	strh	r3, [r0, #6]
 80148ca:	8081      	strh	r1, [r0, #4]
 80148cc:	bd10      	pop	{r4, pc}
 80148ce:	bf00      	nop
 80148d0:	20012dac 	.word	0x20012dac
 80148d4:	20012da8 	.word	0x20012da8

080148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80148d8:	4b08      	ldr	r3, [pc, #32]	; (80148fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80148da:	781b      	ldrb	r3, [r3, #0]
 80148dc:	2b01      	cmp	r3, #1
 80148de:	d10c      	bne.n	80148fa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80148e0:	8803      	ldrh	r3, [r0, #0]
 80148e2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80148e6:	8842      	ldrh	r2, [r0, #2]
 80148e8:	8002      	strh	r2, [r0, #0]
 80148ea:	185a      	adds	r2, r3, r1
 80148ec:	4b04      	ldr	r3, [pc, #16]	; (8014900 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80148ee:	881b      	ldrh	r3, [r3, #0]
 80148f0:	1a9b      	subs	r3, r3, r2
 80148f2:	8043      	strh	r3, [r0, #2]
 80148f4:	88c3      	ldrh	r3, [r0, #6]
 80148f6:	8083      	strh	r3, [r0, #4]
 80148f8:	80c1      	strh	r1, [r0, #6]
 80148fa:	4770      	bx	lr
 80148fc:	20012dac 	.word	0x20012dac
 8014900:	20012da8 	.word	0x20012da8

08014904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014904:	b510      	push	{r4, lr}
 8014906:	4b07      	ldr	r3, [pc, #28]	; (8014924 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014908:	781b      	ldrb	r3, [r3, #0]
 801490a:	2b01      	cmp	r3, #1
 801490c:	d108      	bne.n	8014920 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801490e:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014912:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014916:	8003      	strh	r3, [r0, #0]
 8014918:	8893      	ldrh	r3, [r2, #4]
 801491a:	3b01      	subs	r3, #1
 801491c:	1b1b      	subs	r3, r3, r4
 801491e:	800b      	strh	r3, [r1, #0]
 8014920:	bd10      	pop	{r4, pc}
 8014922:	bf00      	nop
 8014924:	20012dac 	.word	0x20012dac

08014928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014928:	4b0b      	ldr	r3, [pc, #44]	; (8014958 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 801492a:	781b      	ldrb	r3, [r3, #0]
 801492c:	2b01      	cmp	r3, #1
 801492e:	d111      	bne.n	8014954 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014930:	680b      	ldr	r3, [r1, #0]
 8014932:	ed90 7a00 	vldr	s14, [r0]
 8014936:	6003      	str	r3, [r0, #0]
 8014938:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 801493c:	eddf 6a07 	vldr	s13, [pc, #28]	; 801495c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014940:	ee07 3a90 	vmov	s15, r3
 8014944:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014948:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801494c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014950:	edc1 7a00 	vstr	s15, [r1]
 8014954:	4770      	bx	lr
 8014956:	bf00      	nop
 8014958:	20012dac 	.word	0x20012dac
 801495c:	38d1b717 	.word	0x38d1b717

08014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014960:	b510      	push	{r4, lr}
 8014962:	4b0a      	ldr	r3, [pc, #40]	; (801498c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014964:	781b      	ldrb	r3, [r3, #0]
 8014966:	2b01      	cmp	r3, #1
 8014968:	460a      	mov	r2, r1
 801496a:	d10d      	bne.n	8014988 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801496c:	8881      	ldrh	r1, [r0, #4]
 801496e:	8803      	ldrh	r3, [r0, #0]
 8014970:	440b      	add	r3, r1
 8014972:	4601      	mov	r1, r0
 8014974:	3b01      	subs	r3, #1
 8014976:	f821 3b02 	strh.w	r3, [r1], #2
 801497a:	f7ff ffc3 	bl	8014904 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801497e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014982:	88c2      	ldrh	r2, [r0, #6]
 8014984:	8082      	strh	r2, [r0, #4]
 8014986:	80c3      	strh	r3, [r0, #6]
 8014988:	bd10      	pop	{r4, pc}
 801498a:	bf00      	nop
 801498c:	20012dac 	.word	0x20012dac

08014990 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014990:	4b06      	ldr	r3, [pc, #24]	; (80149ac <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014992:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014996:	4b06      	ldr	r3, [pc, #24]	; (80149b0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014998:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 801499c:	f9b3 3000 	ldrsh.w	r3, [r3]
 80149a0:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 80149a4:	2100      	movs	r1, #0
 80149a6:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80149aa:	4770      	bx	lr
 80149ac:	20012da8 	.word	0x20012da8
 80149b0:	20012daa 	.word	0x20012daa

080149b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80149b4:	4b03      	ldr	r3, [pc, #12]	; (80149c4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80149b6:	6818      	ldr	r0, [r3, #0]
 80149b8:	b110      	cbz	r0, 80149c0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80149ba:	6803      	ldr	r3, [r0, #0]
 80149bc:	699b      	ldr	r3, [r3, #24]
 80149be:	4718      	bx	r3
 80149c0:	4770      	bx	lr
 80149c2:	bf00      	nop
 80149c4:	20012df8 	.word	0x20012df8

080149c8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80149c8:	4770      	bx	lr
	...

080149cc <_ZN8touchgfx11Application4drawEv>:
 80149cc:	b507      	push	{r0, r1, r2, lr}
 80149ce:	4b09      	ldr	r3, [pc, #36]	; (80149f4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80149d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80149d4:	4b08      	ldr	r3, [pc, #32]	; (80149f8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80149d6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80149da:	f9b3 3000 	ldrsh.w	r3, [r3]
 80149de:	f8ad 3006 	strh.w	r3, [sp, #6]
 80149e2:	6803      	ldr	r3, [r0, #0]
 80149e4:	2100      	movs	r1, #0
 80149e6:	9100      	str	r1, [sp, #0]
 80149e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80149ea:	4669      	mov	r1, sp
 80149ec:	4798      	blx	r3
 80149ee:	b003      	add	sp, #12
 80149f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80149f4:	20012da8 	.word	0x20012da8
 80149f8:	20012daa 	.word	0x20012daa

080149fc <_ZN8touchgfx11Application10invalidateEv>:
 80149fc:	4b09      	ldr	r3, [pc, #36]	; (8014a24 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80149fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014a02:	4b09      	ldr	r3, [pc, #36]	; (8014a28 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014a04:	b082      	sub	sp, #8
 8014a06:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014a0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014a0e:	2100      	movs	r1, #0
 8014a10:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014a14:	9100      	str	r1, [sp, #0]
 8014a16:	6803      	ldr	r3, [r0, #0]
 8014a18:	aa02      	add	r2, sp, #8
 8014a1a:	e912 0006 	ldmdb	r2, {r1, r2}
 8014a1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014a20:	b002      	add	sp, #8
 8014a22:	4718      	bx	r3
 8014a24:	20012da8 	.word	0x20012da8
 8014a28:	20012daa 	.word	0x20012daa

08014a2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014a2c:	4b03      	ldr	r3, [pc, #12]	; (8014a3c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014a2e:	6818      	ldr	r0, [r3, #0]
 8014a30:	b110      	cbz	r0, 8014a38 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014a32:	6803      	ldr	r3, [r0, #0]
 8014a34:	69db      	ldr	r3, [r3, #28]
 8014a36:	4718      	bx	r3
 8014a38:	4770      	bx	lr
 8014a3a:	bf00      	nop
 8014a3c:	20012df8 	.word	0x20012df8

08014a40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014a40:	4b03      	ldr	r3, [pc, #12]	; (8014a50 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014a42:	6818      	ldr	r0, [r3, #0]
 8014a44:	b110      	cbz	r0, 8014a4c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014a46:	6803      	ldr	r3, [r0, #0]
 8014a48:	6a1b      	ldr	r3, [r3, #32]
 8014a4a:	4718      	bx	r3
 8014a4c:	4770      	bx	lr
 8014a4e:	bf00      	nop
 8014a50:	20012df8 	.word	0x20012df8

08014a54 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014a54:	2300      	movs	r3, #0
 8014a56:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014a5a:	4770      	bx	lr

08014a5c <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014a5c:	4b03      	ldr	r3, [pc, #12]	; (8014a6c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014a5e:	6818      	ldr	r0, [r3, #0]
 8014a60:	b110      	cbz	r0, 8014a68 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014a62:	6803      	ldr	r3, [r0, #0]
 8014a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014a66:	4718      	bx	r3
 8014a68:	4770      	bx	lr
 8014a6a:	bf00      	nop
 8014a6c:	20012df8 	.word	0x20012df8

08014a70 <_ZN8touchgfx11ApplicationD1Ev>:
 8014a70:	4770      	bx	lr

08014a72 <_ZN8touchgfx11ApplicationD0Ev>:
 8014a72:	b510      	push	{r4, lr}
 8014a74:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014a78:	4604      	mov	r4, r0
 8014a7a:	f014 f958 	bl	8028d2e <_ZdlPvj>
 8014a7e:	4620      	mov	r0, r4
 8014a80:	bd10      	pop	{r4, pc}

08014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014a82:	b510      	push	{r4, lr}
 8014a84:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014a88:	888a      	ldrh	r2, [r1, #4]
 8014a8a:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014a8e:	4422      	add	r2, r4
 8014a90:	b212      	sxth	r2, r2
 8014a92:	4293      	cmp	r3, r2
 8014a94:	da15      	bge.n	8014ac2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a96:	8882      	ldrh	r2, [r0, #4]
 8014a98:	4413      	add	r3, r2
 8014a9a:	b21b      	sxth	r3, r3
 8014a9c:	429c      	cmp	r4, r3
 8014a9e:	da10      	bge.n	8014ac2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014aa0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014aa4:	88c9      	ldrh	r1, [r1, #6]
 8014aa6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014aaa:	4419      	add	r1, r3
 8014aac:	b209      	sxth	r1, r1
 8014aae:	428a      	cmp	r2, r1
 8014ab0:	da07      	bge.n	8014ac2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014ab2:	88c0      	ldrh	r0, [r0, #6]
 8014ab4:	4410      	add	r0, r2
 8014ab6:	b200      	sxth	r0, r0
 8014ab8:	4283      	cmp	r3, r0
 8014aba:	bfac      	ite	ge
 8014abc:	2000      	movge	r0, #0
 8014abe:	2001      	movlt	r0, #1
 8014ac0:	bd10      	pop	{r4, pc}
 8014ac2:	2000      	movs	r0, #0
 8014ac4:	e7fc      	b.n	8014ac0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014ac6 <_ZN8touchgfx4Rect10restrictToEss>:
 8014ac6:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014aca:	2b00      	cmp	r3, #0
 8014acc:	b510      	push	{r4, lr}
 8014ace:	da04      	bge.n	8014ada <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014ad0:	8884      	ldrh	r4, [r0, #4]
 8014ad2:	4423      	add	r3, r4
 8014ad4:	8083      	strh	r3, [r0, #4]
 8014ad6:	2300      	movs	r3, #0
 8014ad8:	8003      	strh	r3, [r0, #0]
 8014ada:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014ade:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014ae2:	1b09      	subs	r1, r1, r4
 8014ae4:	428b      	cmp	r3, r1
 8014ae6:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014aea:	bfc8      	it	gt
 8014aec:	8081      	strhgt	r1, [r0, #4]
 8014aee:	2b00      	cmp	r3, #0
 8014af0:	da04      	bge.n	8014afc <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014af2:	88c1      	ldrh	r1, [r0, #6]
 8014af4:	440b      	add	r3, r1
 8014af6:	80c3      	strh	r3, [r0, #6]
 8014af8:	2300      	movs	r3, #0
 8014afa:	8043      	strh	r3, [r0, #2]
 8014afc:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014b00:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014b04:	1a52      	subs	r2, r2, r1
 8014b06:	4293      	cmp	r3, r2
 8014b08:	bfc8      	it	gt
 8014b0a:	80c2      	strhgt	r2, [r0, #6]
 8014b0c:	bd10      	pop	{r4, pc}
	...

08014b10 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014b10:	b510      	push	{r4, lr}
 8014b12:	4b10      	ldr	r3, [pc, #64]	; (8014b54 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014b14:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014b18:	4b0f      	ldr	r3, [pc, #60]	; (8014b58 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014b1a:	460c      	mov	r4, r1
 8014b1c:	4620      	mov	r0, r4
 8014b1e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014b22:	f7ff ffd0 	bl	8014ac6 <_ZN8touchgfx4Rect10restrictToEss>
 8014b26:	4b0d      	ldr	r3, [pc, #52]	; (8014b5c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014b28:	6818      	ldr	r0, [r3, #0]
 8014b2a:	b190      	cbz	r0, 8014b52 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014b2c:	6803      	ldr	r3, [r0, #0]
 8014b2e:	4621      	mov	r1, r4
 8014b30:	689b      	ldr	r3, [r3, #8]
 8014b32:	4798      	blx	r3
 8014b34:	4b0a      	ldr	r3, [pc, #40]	; (8014b60 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014b36:	6818      	ldr	r0, [r3, #0]
 8014b38:	b118      	cbz	r0, 8014b42 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014b3a:	6803      	ldr	r3, [r0, #0]
 8014b3c:	4621      	mov	r1, r4
 8014b3e:	689b      	ldr	r3, [r3, #8]
 8014b40:	4798      	blx	r3
 8014b42:	4b08      	ldr	r3, [pc, #32]	; (8014b64 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014b44:	6818      	ldr	r0, [r3, #0]
 8014b46:	6803      	ldr	r3, [r0, #0]
 8014b48:	4621      	mov	r1, r4
 8014b4a:	69db      	ldr	r3, [r3, #28]
 8014b4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b50:	4718      	bx	r3
 8014b52:	bd10      	pop	{r4, pc}
 8014b54:	20012daa 	.word	0x20012daa
 8014b58:	20012da8 	.word	0x20012da8
 8014b5c:	20012df8 	.word	0x20012df8
 8014b60:	20012df4 	.word	0x20012df4
 8014b64:	20012db4 	.word	0x20012db4

08014b68 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014b68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b6a:	4606      	mov	r6, r0
 8014b6c:	4608      	mov	r0, r1
 8014b6e:	460f      	mov	r7, r1
 8014b70:	f7fa ff97 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b74:	b9e8      	cbnz	r0, 8014bb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b76:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014b7a:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014b7e:	42a5      	cmp	r5, r4
 8014b80:	db17      	blt.n	8014bb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b82:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014b86:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014b8a:	429a      	cmp	r2, r3
 8014b8c:	db11      	blt.n	8014bb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b8e:	88b9      	ldrh	r1, [r7, #4]
 8014b90:	440d      	add	r5, r1
 8014b92:	88b1      	ldrh	r1, [r6, #4]
 8014b94:	440c      	add	r4, r1
 8014b96:	b22d      	sxth	r5, r5
 8014b98:	b224      	sxth	r4, r4
 8014b9a:	42a5      	cmp	r5, r4
 8014b9c:	dc09      	bgt.n	8014bb2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b9e:	88f8      	ldrh	r0, [r7, #6]
 8014ba0:	4410      	add	r0, r2
 8014ba2:	88f2      	ldrh	r2, [r6, #6]
 8014ba4:	4413      	add	r3, r2
 8014ba6:	b200      	sxth	r0, r0
 8014ba8:	b21b      	sxth	r3, r3
 8014baa:	4298      	cmp	r0, r3
 8014bac:	bfcc      	ite	gt
 8014bae:	2000      	movgt	r0, #0
 8014bb0:	2001      	movle	r0, #1
 8014bb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014bb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014bb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014bb6:	4604      	mov	r4, r0
 8014bb8:	4608      	mov	r0, r1
 8014bba:	460d      	mov	r5, r1
 8014bbc:	f7fa ff71 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014bc0:	b978      	cbnz	r0, 8014be2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014bc2:	4620      	mov	r0, r4
 8014bc4:	f7fa ff6d 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014bc8:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014bcc:	b150      	cbz	r0, 8014be4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014bce:	8026      	strh	r6, [r4, #0]
 8014bd0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014bd4:	8063      	strh	r3, [r4, #2]
 8014bd6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014bda:	80a3      	strh	r3, [r4, #4]
 8014bdc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014be0:	80e3      	strh	r3, [r4, #6]
 8014be2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014be4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014be8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014bec:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014bf0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014bf4:	88ed      	ldrh	r5, [r5, #6]
 8014bf6:	42b1      	cmp	r1, r6
 8014bf8:	460f      	mov	r7, r1
 8014bfa:	bfa8      	it	ge
 8014bfc:	4637      	movge	r7, r6
 8014bfe:	4293      	cmp	r3, r2
 8014c00:	4618      	mov	r0, r3
 8014c02:	4466      	add	r6, ip
 8014c04:	bfa8      	it	ge
 8014c06:	4610      	movge	r0, r2
 8014c08:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014c0c:	8027      	strh	r7, [r4, #0]
 8014c0e:	442a      	add	r2, r5
 8014c10:	88e5      	ldrh	r5, [r4, #6]
 8014c12:	8060      	strh	r0, [r4, #2]
 8014c14:	4461      	add	r1, ip
 8014c16:	442b      	add	r3, r5
 8014c18:	b236      	sxth	r6, r6
 8014c1a:	b209      	sxth	r1, r1
 8014c1c:	b212      	sxth	r2, r2
 8014c1e:	b21b      	sxth	r3, r3
 8014c20:	428e      	cmp	r6, r1
 8014c22:	bfac      	ite	ge
 8014c24:	ebc7 0106 	rsbge	r1, r7, r6
 8014c28:	ebc7 0101 	rsblt	r1, r7, r1
 8014c2c:	429a      	cmp	r2, r3
 8014c2e:	bfac      	ite	ge
 8014c30:	ebc0 0202 	rsbge	r2, r0, r2
 8014c34:	ebc0 0203 	rsblt	r2, r0, r3
 8014c38:	80a1      	strh	r1, [r4, #4]
 8014c3a:	80e2      	strh	r2, [r4, #6]
 8014c3c:	e7d1      	b.n	8014be2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014c40 <_ZN8touchgfx11Application11getInstanceEv>:
 8014c40:	4b01      	ldr	r3, [pc, #4]	; (8014c48 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014c42:	6818      	ldr	r0, [r3, #0]
 8014c44:	4770      	bx	lr
 8014c46:	bf00      	nop
 8014c48:	20012e08 	.word	0x20012e08

08014c4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014c4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c4e:	4b10      	ldr	r3, [pc, #64]	; (8014c90 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014c50:	781b      	ldrb	r3, [r3, #0]
 8014c52:	4605      	mov	r5, r0
 8014c54:	b1d3      	cbz	r3, 8014c8c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014c56:	4b0f      	ldr	r3, [pc, #60]	; (8014c94 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014c58:	4f0f      	ldr	r7, [pc, #60]	; (8014c98 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014c5a:	881c      	ldrh	r4, [r3, #0]
 8014c5c:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014c60:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014c64:	42a3      	cmp	r3, r4
 8014c66:	d90e      	bls.n	8014c86 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014c68:	683b      	ldr	r3, [r7, #0]
 8014c6a:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014c6e:	b10a      	cbz	r2, 8014c74 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014c70:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014c72:	b900      	cbnz	r0, 8014c76 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014c74:	6898      	ldr	r0, [r3, #8]
 8014c76:	6803      	ldr	r3, [r0, #0]
 8014c78:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014c7c:	69db      	ldr	r3, [r3, #28]
 8014c7e:	3401      	adds	r4, #1
 8014c80:	4798      	blx	r3
 8014c82:	b2a4      	uxth	r4, r4
 8014c84:	e7ec      	b.n	8014c60 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014c86:	2300      	movs	r3, #0
 8014c88:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014c8c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014c8e:	bf00      	nop
 8014c90:	20012db2 	.word	0x20012db2
 8014c94:	20000088 	.word	0x20000088
 8014c98:	20012db4 	.word	0x20012db4

08014c9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014c9c:	b510      	push	{r4, lr}
 8014c9e:	2300      	movs	r3, #0
 8014ca0:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014ca4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014ca8:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014cac:	4604      	mov	r4, r0
 8014cae:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014cb2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014cb6:	429a      	cmp	r2, r3
 8014cb8:	d90e      	bls.n	8014cd8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014cba:	18e2      	adds	r2, r4, r3
 8014cbc:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014cc0:	b122      	cbz	r2, 8014ccc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014cc2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014cc6:	6803      	ldr	r3, [r0, #0]
 8014cc8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014cca:	4798      	blx	r3
 8014ccc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014cd0:	3301      	adds	r3, #1
 8014cd2:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014cd6:	e7ea      	b.n	8014cae <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014cd8:	bd10      	pop	{r4, pc}

08014cda <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014cda:	b530      	push	{r4, r5, lr}
 8014cdc:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014ce0:	2200      	movs	r2, #0
 8014ce2:	b293      	uxth	r3, r2
 8014ce4:	429d      	cmp	r5, r3
 8014ce6:	d90e      	bls.n	8014d06 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014ce8:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014cec:	428b      	cmp	r3, r1
 8014cee:	d10b      	bne.n	8014d08 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014cf0:	1884      	adds	r4, r0, r2
 8014cf2:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014cf6:	b13b      	cbz	r3, 8014d08 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014cf8:	3b01      	subs	r3, #1
 8014cfa:	b2db      	uxtb	r3, r3
 8014cfc:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014d00:	b90b      	cbnz	r3, 8014d06 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014d02:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014d06:	bd30      	pop	{r4, r5, pc}
 8014d08:	3201      	adds	r2, #1
 8014d0a:	e7ea      	b.n	8014ce2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014d0c:	2300      	movs	r3, #0
 8014d0e:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014d12:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014d16:	30a4      	adds	r0, #164	; 0xa4
 8014d18:	f802 3b01 	strb.w	r3, [r2], #1
 8014d1c:	4282      	cmp	r2, r0
 8014d1e:	d1fb      	bne.n	8014d18 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014d20:	4770      	bx	lr
	...

08014d24 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014d24:	b570      	push	{r4, r5, r6, lr}
 8014d26:	4c0b      	ldr	r4, [pc, #44]	; (8014d54 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014d28:	4605      	mov	r5, r0
 8014d2a:	6820      	ldr	r0, [r4, #0]
 8014d2c:	460e      	mov	r6, r1
 8014d2e:	b110      	cbz	r0, 8014d36 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014d30:	6803      	ldr	r3, [r0, #0]
 8014d32:	695b      	ldr	r3, [r3, #20]
 8014d34:	4798      	blx	r3
 8014d36:	1d28      	adds	r0, r5, #4
 8014d38:	f7ff ffe8 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014d3c:	6026      	str	r6, [r4, #0]
 8014d3e:	6833      	ldr	r3, [r6, #0]
 8014d40:	4630      	mov	r0, r6
 8014d42:	68db      	ldr	r3, [r3, #12]
 8014d44:	4798      	blx	r3
 8014d46:	682b      	ldr	r3, [r5, #0]
 8014d48:	4628      	mov	r0, r5
 8014d4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014d50:	4718      	bx	r3
 8014d52:	bf00      	nop
 8014d54:	20012df8 	.word	0x20012df8

08014d58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014d58:	2300      	movs	r3, #0
 8014d5a:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014d5e:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014d62:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d64:	461a      	mov	r2, r3
 8014d66:	461c      	mov	r4, r3
 8014d68:	461d      	mov	r5, r3
 8014d6a:	459c      	cmp	ip, r3
 8014d6c:	dd1a      	ble.n	8014da4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014d6e:	18c6      	adds	r6, r0, r3
 8014d70:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014d74:	b16e      	cbz	r6, 8014d92 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014d76:	429a      	cmp	r2, r3
 8014d78:	d008      	beq.n	8014d8c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014d7a:	fa1f fe82 	uxth.w	lr, r2
 8014d7e:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014d82:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014d86:	1887      	adds	r7, r0, r2
 8014d88:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014d8c:	3201      	adds	r2, #1
 8014d8e:	3301      	adds	r3, #1
 8014d90:	e7eb      	b.n	8014d6a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014d92:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014d96:	4299      	cmp	r1, r3
 8014d98:	bfa8      	it	ge
 8014d9a:	3501      	addge	r5, #1
 8014d9c:	429e      	cmp	r6, r3
 8014d9e:	bfc8      	it	gt
 8014da0:	3401      	addgt	r4, #1
 8014da2:	e7f4      	b.n	8014d8e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014da4:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014da8:	1b49      	subs	r1, r1, r5
 8014daa:	1b1b      	subs	r3, r3, r4
 8014dac:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8014db0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014db4:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014db8:	4293      	cmp	r3, r2
 8014dba:	dd03      	ble.n	8014dc4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014dbc:	3b01      	subs	r3, #1
 8014dbe:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014dc2:	e7f7      	b.n	8014db4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014dc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014dc8 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014dc8:	b570      	push	{r4, r5, r6, lr}
 8014dca:	4d16      	ldr	r5, [pc, #88]	; (8014e24 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014dcc:	4604      	mov	r4, r0
 8014dce:	6828      	ldr	r0, [r5, #0]
 8014dd0:	b140      	cbz	r0, 8014de4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014dd2:	7a03      	ldrb	r3, [r0, #8]
 8014dd4:	b933      	cbnz	r3, 8014de4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014dd6:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014dda:	6803      	ldr	r3, [r0, #0]
 8014ddc:	689b      	ldr	r3, [r3, #8]
 8014dde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014de2:	4718      	bx	r3
 8014de4:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8014de8:	4e0f      	ldr	r6, [pc, #60]	; (8014e28 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014dea:	b973      	cbnz	r3, 8014e0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014dec:	b168      	cbz	r0, 8014e0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014dee:	7a03      	ldrb	r3, [r0, #8]
 8014df0:	b15b      	cbz	r3, 8014e0a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014df2:	6830      	ldr	r0, [r6, #0]
 8014df4:	b110      	cbz	r0, 8014dfc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014df6:	6803      	ldr	r3, [r0, #0]
 8014df8:	691b      	ldr	r3, [r3, #16]
 8014dfa:	4798      	blx	r3
 8014dfc:	6828      	ldr	r0, [r5, #0]
 8014dfe:	6803      	ldr	r3, [r0, #0]
 8014e00:	68db      	ldr	r3, [r3, #12]
 8014e02:	4798      	blx	r3
 8014e04:	2301      	movs	r3, #1
 8014e06:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014e0a:	3404      	adds	r4, #4
 8014e0c:	4620      	mov	r0, r4
 8014e0e:	f7ff ff45 	bl	8014c9c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014e12:	4620      	mov	r0, r4
 8014e14:	f7ff ffa0 	bl	8014d58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014e18:	6830      	ldr	r0, [r6, #0]
 8014e1a:	b110      	cbz	r0, 8014e22 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014e1c:	6803      	ldr	r3, [r0, #0]
 8014e1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014e20:	e7dd      	b.n	8014dde <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014e22:	bd70      	pop	{r4, r5, r6, pc}
 8014e24:	20012dfc 	.word	0x20012dfc
 8014e28:	20012df8 	.word	0x20012df8

08014e2c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014e2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e2e:	2300      	movs	r3, #0
 8014e30:	4604      	mov	r4, r0
 8014e32:	460d      	mov	r5, r1
 8014e34:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014e38:	4618      	mov	r0, r3
 8014e3a:	b29a      	uxth	r2, r3
 8014e3c:	4291      	cmp	r1, r2
 8014e3e:	d911      	bls.n	8014e64 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014e40:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014e44:	18e6      	adds	r6, r4, r3
 8014e46:	42af      	cmp	r7, r5
 8014e48:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8014e4c:	d105      	bne.n	8014e5a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014e4e:	2aff      	cmp	r2, #255	; 0xff
 8014e50:	d002      	beq.n	8014e58 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014e52:	3201      	adds	r2, #1
 8014e54:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014e58:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e5a:	2a00      	cmp	r2, #0
 8014e5c:	bf08      	it	eq
 8014e5e:	2001      	moveq	r0, #1
 8014e60:	3301      	adds	r3, #1
 8014e62:	e7ea      	b.n	8014e3a <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014e64:	b120      	cbz	r0, 8014e70 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014e66:	2920      	cmp	r1, #32
 8014e68:	d102      	bne.n	8014e70 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014e6a:	4620      	mov	r0, r4
 8014e6c:	f7ff ff74 	bl	8014d58 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014e70:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014e74:	2b1f      	cmp	r3, #31
 8014e76:	d8ef      	bhi.n	8014e58 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014e78:	18e2      	adds	r2, r4, r3
 8014e7a:	2101      	movs	r1, #1
 8014e7c:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014e80:	185a      	adds	r2, r3, r1
 8014e82:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014e86:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8014e8a:	e7e5      	b.n	8014e58 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014e8c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014e8c:	4603      	mov	r3, r0
 8014e8e:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014e92:	2200      	movs	r2, #0
 8014e94:	801a      	strh	r2, [r3, #0]
 8014e96:	805a      	strh	r2, [r3, #2]
 8014e98:	809a      	strh	r2, [r3, #4]
 8014e9a:	80da      	strh	r2, [r3, #6]
 8014e9c:	3308      	adds	r3, #8
 8014e9e:	428b      	cmp	r3, r1
 8014ea0:	d1f8      	bne.n	8014e94 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014ea2:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014ea6:	4770      	bx	lr

08014ea8 <_ZN8touchgfx11ApplicationC1Ev>:
 8014ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014eaa:	4606      	mov	r6, r0
 8014eac:	4b1c      	ldr	r3, [pc, #112]	; (8014f20 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014eae:	f846 3b04 	str.w	r3, [r6], #4
 8014eb2:	4604      	mov	r4, r0
 8014eb4:	2500      	movs	r5, #0
 8014eb6:	22a8      	movs	r2, #168	; 0xa8
 8014eb8:	2100      	movs	r1, #0
 8014eba:	4630      	mov	r0, r6
 8014ebc:	f014 ff4f 	bl	8029d5e <memset>
 8014ec0:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014ec4:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014ec8:	f7ff ffe0 	bl	8014e8c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014ecc:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014ed0:	f7ff ffdc 	bl	8014e8c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014ed4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014ed8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8014edc:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014ee0:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014ee4:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014ee8:	490e      	ldr	r1, [pc, #56]	; (8014f24 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014eea:	480f      	ldr	r0, [pc, #60]	; (8014f28 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014eec:	4f0f      	ldr	r7, [pc, #60]	; (8014f2c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014eee:	f010 fde9 	bl	8025ac4 <CRC_Lock>
 8014ef2:	4b0f      	ldr	r3, [pc, #60]	; (8014f30 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014ef4:	b158      	cbz	r0, 8014f0e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014ef6:	801d      	strh	r5, [r3, #0]
 8014ef8:	4a0e      	ldr	r2, [pc, #56]	; (8014f34 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014efa:	2300      	movs	r3, #0
 8014efc:	6013      	str	r3, [r2, #0]
 8014efe:	4a0e      	ldr	r2, [pc, #56]	; (8014f38 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014f00:	603b      	str	r3, [r7, #0]
 8014f02:	4630      	mov	r0, r6
 8014f04:	6013      	str	r3, [r2, #0]
 8014f06:	f7ff ff01 	bl	8014d0c <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014f0a:	4620      	mov	r0, r4
 8014f0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014f0e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014f12:	2002      	movs	r0, #2
 8014f14:	801a      	strh	r2, [r3, #0]
 8014f16:	6038      	str	r0, [r7, #0]
 8014f18:	f001 fb4a 	bl	80165b0 <_ZN8touchgfx6Screen4drawEv>
 8014f1c:	e7ec      	b.n	8014ef8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014f1e:	bf00      	nop
 8014f20:	0802e128 	.word	0x0802e128
 8014f24:	b5e8b5cd 	.word	0xb5e8b5cd
 8014f28:	f407a5c2 	.word	0xf407a5c2
 8014f2c:	20012df8 	.word	0x20012df8
 8014f30:	20000088 	.word	0x20000088
 8014f34:	20012e08 	.word	0x20012e08
 8014f38:	20012dfc 	.word	0x20012dfc

08014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014f3c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014f40:	3b01      	subs	r3, #1
 8014f42:	b29b      	uxth	r3, r3
 8014f44:	428b      	cmp	r3, r1
 8014f46:	b510      	push	{r4, lr}
 8014f48:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8014f4c:	d908      	bls.n	8014f60 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014f4e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014f52:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014f56:	681a      	ldr	r2, [r3, #0]
 8014f58:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014f5c:	685a      	ldr	r2, [r3, #4]
 8014f5e:	6062      	str	r2, [r4, #4]
 8014f60:	bd10      	pop	{r4, pc}
	...

08014f64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014f64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f68:	4b8f      	ldr	r3, [pc, #572]	; (80151a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014f6a:	b08f      	sub	sp, #60	; 0x3c
 8014f6c:	ac0a      	add	r4, sp, #40	; 0x28
 8014f6e:	e884 0006 	stmia.w	r4, {r1, r2}
 8014f72:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f76:	4b8d      	ldr	r3, [pc, #564]	; (80151ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014f78:	4683      	mov	fp, r0
 8014f7a:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014f7e:	4620      	mov	r0, r4
 8014f80:	f7ff fda1 	bl	8014ac6 <_ZN8touchgfx4Rect10restrictToEss>
 8014f84:	4620      	mov	r0, r4
 8014f86:	f7fa fd8c 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f8a:	2800      	cmp	r0, #0
 8014f8c:	d16a      	bne.n	8015064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014f8e:	9403      	str	r4, [sp, #12]
 8014f90:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014f94:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014f98:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014f9c:	35a4      	adds	r5, #164	; 0xa4
 8014f9e:	9301      	str	r3, [sp, #4]
 8014fa0:	b15c      	cbz	r4, 8014fba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014fa2:	4629      	mov	r1, r5
 8014fa4:	9803      	ldr	r0, [sp, #12]
 8014fa6:	f7ff fddf 	bl	8014b68 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014faa:	3c01      	subs	r4, #1
 8014fac:	b118      	cbz	r0, 8014fb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014fae:	b2a1      	uxth	r1, r4
 8014fb0:	9801      	ldr	r0, [sp, #4]
 8014fb2:	f7ff ffc3 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014fb6:	3d08      	subs	r5, #8
 8014fb8:	e7f2      	b.n	8014fa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014fba:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8014fbe:	f8cd a010 	str.w	sl, [sp, #16]
 8014fc2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014fc6:	9302      	str	r3, [sp, #8]
 8014fc8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014fcc:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014fd0:	9306      	str	r3, [sp, #24]
 8014fd2:	445c      	add	r4, fp
 8014fd4:	2500      	movs	r5, #0
 8014fd6:	4626      	mov	r6, r4
 8014fd8:	f8cd a014 	str.w	sl, [sp, #20]
 8014fdc:	462f      	mov	r7, r5
 8014fde:	9b05      	ldr	r3, [sp, #20]
 8014fe0:	2b00      	cmp	r3, #0
 8014fe2:	d073      	beq.n	80150cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014fe4:	9903      	ldr	r1, [sp, #12]
 8014fe6:	4630      	mov	r0, r6
 8014fe8:	f7ff fd4b 	bl	8014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014fec:	b350      	cbz	r0, 8015044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014fee:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014ff2:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014ff6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8014ffa:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014ffe:	45e6      	cmp	lr, ip
 8015000:	db33      	blt.n	801506a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015002:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015006:	88b3      	ldrh	r3, [r6, #4]
 8015008:	4472      	add	r2, lr
 801500a:	4463      	add	r3, ip
 801500c:	b212      	sxth	r2, r2
 801500e:	b21b      	sxth	r3, r3
 8015010:	429a      	cmp	r2, r3
 8015012:	dc2a      	bgt.n	801506a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8015014:	88f3      	ldrh	r3, [r6, #6]
 8015016:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801501a:	fa1f f289 	uxth.w	r2, r9
 801501e:	4413      	add	r3, r2
 8015020:	b29b      	uxth	r3, r3
 8015022:	45c8      	cmp	r8, r9
 8015024:	fa1f fc88 	uxth.w	ip, r8
 8015028:	fa0f fe83 	sxth.w	lr, r3
 801502c:	db0f      	blt.n	801504e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801502e:	eba3 030c 	sub.w	r3, r3, ip
 8015032:	1ac9      	subs	r1, r1, r3
 8015034:	b209      	sxth	r1, r1
 8015036:	2900      	cmp	r1, #0
 8015038:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801503c:	dd12      	ble.n	8015064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801503e:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8015042:	4605      	mov	r5, r0
 8015044:	9b05      	ldr	r3, [sp, #20]
 8015046:	3b01      	subs	r3, #1
 8015048:	9305      	str	r3, [sp, #20]
 801504a:	3e08      	subs	r6, #8
 801504c:	e7c7      	b.n	8014fde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801504e:	4461      	add	r1, ip
 8015050:	b209      	sxth	r1, r1
 8015052:	4571      	cmp	r1, lr
 8015054:	dc38      	bgt.n	80150c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015056:	eba2 020c 	sub.w	r2, r2, ip
 801505a:	b212      	sxth	r2, r2
 801505c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015060:	2a00      	cmp	r2, #0
 8015062:	dcee      	bgt.n	8015042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8015064:	b00f      	add	sp, #60	; 0x3c
 8015066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801506a:	45c8      	cmp	r8, r9
 801506c:	db2c      	blt.n	80150c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801506e:	88f3      	ldrh	r3, [r6, #6]
 8015070:	4499      	add	r9, r3
 8015072:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8015076:	4498      	add	r8, r3
 8015078:	fa0f f989 	sxth.w	r9, r9
 801507c:	fa0f f888 	sxth.w	r8, r8
 8015080:	45c1      	cmp	r9, r8
 8015082:	db21      	blt.n	80150c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015084:	88b3      	ldrh	r3, [r6, #4]
 8015086:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801508a:	fa1f f28c 	uxth.w	r2, ip
 801508e:	4413      	add	r3, r2
 8015090:	b29b      	uxth	r3, r3
 8015092:	45e6      	cmp	lr, ip
 8015094:	fa1f f88e 	uxth.w	r8, lr
 8015098:	fa0f f983 	sxth.w	r9, r3
 801509c:	db0a      	blt.n	80150b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801509e:	eba3 0308 	sub.w	r3, r3, r8
 80150a2:	1ac9      	subs	r1, r1, r3
 80150a4:	b209      	sxth	r1, r1
 80150a6:	2900      	cmp	r1, #0
 80150a8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80150ac:	ddda      	ble.n	8015064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80150ae:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80150b2:	e7c6      	b.n	8015042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80150b4:	4441      	add	r1, r8
 80150b6:	b209      	sxth	r1, r1
 80150b8:	4549      	cmp	r1, r9
 80150ba:	dc05      	bgt.n	80150c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80150bc:	eba2 0208 	sub.w	r2, r2, r8
 80150c0:	b212      	sxth	r2, r2
 80150c2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80150c6:	e7cb      	b.n	8015060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80150c8:	4607      	mov	r7, r0
 80150ca:	e7bb      	b.n	8015044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80150cc:	2d00      	cmp	r5, #0
 80150ce:	d181      	bne.n	8014fd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80150d0:	2f00      	cmp	r7, #0
 80150d2:	f000 81dd 	beq.w	8015490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80150d6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80150da:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80150de:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 80150e2:	b2b3      	uxth	r3, r6
 80150e4:	9305      	str	r3, [sp, #20]
 80150e6:	9a05      	ldr	r2, [sp, #20]
 80150e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80150ec:	4413      	add	r3, r2
 80150ee:	b2ba      	uxth	r2, r7
 80150f0:	4492      	add	sl, r2
 80150f2:	b29b      	uxth	r3, r3
 80150f4:	fa1f fa8a 	uxth.w	sl, sl
 80150f8:	fa0f f883 	sxth.w	r8, r3
 80150fc:	fa0f f98a 	sxth.w	r9, sl
 8015100:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8015104:	9b04      	ldr	r3, [sp, #16]
 8015106:	2b00      	cmp	r3, #0
 8015108:	d052      	beq.n	80151b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801510a:	9903      	ldr	r1, [sp, #12]
 801510c:	4620      	mov	r0, r4
 801510e:	f7ff fcb8 	bl	8014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015112:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8015116:	b1c0      	cbz	r0, 801514a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015118:	f9b4 e000 	ldrsh.w	lr, [r4]
 801511c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015120:	4576      	cmp	r6, lr
 8015122:	dc22      	bgt.n	801516a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015124:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015128:	44f4      	add	ip, lr
 801512a:	fa0f fc8c 	sxth.w	ip, ip
 801512e:	45e0      	cmp	r8, ip
 8015130:	db1b      	blt.n	801516a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8015132:	428f      	cmp	r7, r1
 8015134:	fa1f fc81 	uxth.w	ip, r1
 8015138:	88e1      	ldrh	r1, [r4, #6]
 801513a:	dc0d      	bgt.n	8015158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801513c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8015140:	eba1 010c 	sub.w	r1, r1, ip
 8015144:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015148:	80e1      	strh	r1, [r4, #6]
 801514a:	4628      	mov	r0, r5
 801514c:	9904      	ldr	r1, [sp, #16]
 801514e:	3901      	subs	r1, #1
 8015150:	9104      	str	r1, [sp, #16]
 8015152:	3c08      	subs	r4, #8
 8015154:	4605      	mov	r5, r0
 8015156:	e7d3      	b.n	8015100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015158:	4461      	add	r1, ip
 801515a:	b209      	sxth	r1, r1
 801515c:	4549      	cmp	r1, r9
 801515e:	dcf5      	bgt.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015160:	eba2 0c0c 	sub.w	ip, r2, ip
 8015164:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015168:	e7ef      	b.n	801514a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801516a:	428f      	cmp	r7, r1
 801516c:	dcee      	bgt.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801516e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8015172:	4461      	add	r1, ip
 8015174:	b209      	sxth	r1, r1
 8015176:	4589      	cmp	r9, r1
 8015178:	dbe8      	blt.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801517a:	4576      	cmp	r6, lr
 801517c:	fa1f fc8e 	uxth.w	ip, lr
 8015180:	88a1      	ldrh	r1, [r4, #4]
 8015182:	dc07      	bgt.n	8015194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8015184:	eba3 0c0c 	sub.w	ip, r3, ip
 8015188:	eba1 010c 	sub.w	r1, r1, ip
 801518c:	f8a4 8000 	strh.w	r8, [r4]
 8015190:	80a1      	strh	r1, [r4, #4]
 8015192:	e7da      	b.n	801514a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015194:	4461      	add	r1, ip
 8015196:	b209      	sxth	r1, r1
 8015198:	4588      	cmp	r8, r1
 801519a:	dbd7      	blt.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801519c:	9905      	ldr	r1, [sp, #20]
 801519e:	eba1 0c0c 	sub.w	ip, r1, ip
 80151a2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80151a6:	e7d0      	b.n	801514a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80151a8:	20012daa 	.word	0x20012daa
 80151ac:	20012da8 	.word	0x20012da8
 80151b0:	2d00      	cmp	r5, #0
 80151b2:	f000 816d 	beq.w	8015490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80151b6:	9b06      	ldr	r3, [sp, #24]
 80151b8:	445b      	add	r3, fp
 80151ba:	461c      	mov	r4, r3
 80151bc:	9b02      	ldr	r3, [sp, #8]
 80151be:	3301      	adds	r3, #1
 80151c0:	f000 8166 	beq.w	8015490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80151c4:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 80151c8:	4629      	mov	r1, r5
 80151ca:	9803      	ldr	r0, [sp, #12]
 80151cc:	f7ff fccc 	bl	8014b68 <_ZNK8touchgfx4Rect8includesERKS0_>
 80151d0:	b120      	cbz	r0, 80151dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80151d2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80151d6:	9801      	ldr	r0, [sp, #4]
 80151d8:	f7ff feb0 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80151dc:	9903      	ldr	r1, [sp, #12]
 80151de:	4628      	mov	r0, r5
 80151e0:	f7ff fc4f 	bl	8014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80151e4:	2800      	cmp	r0, #0
 80151e6:	f000 809c 	beq.w	8015322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80151ea:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80151ee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80151f2:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80151f6:	9309      	str	r3, [sp, #36]	; 0x24
 80151f8:	fa1f f189 	uxth.w	r1, r9
 80151fc:	eb01 0c03 	add.w	ip, r1, r3
 8015200:	fa1f fa8c 	uxth.w	sl, ip
 8015204:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015208:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801520c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015210:	b283      	uxth	r3, r0
 8015212:	eb03 050c 	add.w	r5, r3, ip
 8015216:	b2ad      	uxth	r5, r5
 8015218:	9505      	str	r5, [sp, #20]
 801521a:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801521e:	9504      	str	r5, [sp, #16]
 8015220:	4548      	cmp	r0, r9
 8015222:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8015226:	f340 8099 	ble.w	801535c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801522a:	1a5b      	subs	r3, r3, r1
 801522c:	b29b      	uxth	r3, r3
 801522e:	4596      	cmp	lr, r2
 8015230:	fa0f f08a 	sxth.w	r0, sl
 8015234:	b21e      	sxth	r6, r3
 8015236:	dd2e      	ble.n	8015296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8015238:	9f02      	ldr	r7, [sp, #8]
 801523a:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801523e:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8015242:	9f04      	ldr	r7, [sp, #16]
 8015244:	1a3f      	subs	r7, r7, r0
 8015246:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 801524a:	fa1f fe8e 	uxth.w	lr, lr
 801524e:	b292      	uxth	r2, r2
 8015250:	ebae 0102 	sub.w	r1, lr, r2
 8015254:	44a6      	add	lr, r4
 8015256:	4402      	add	r2, r0
 8015258:	b289      	uxth	r1, r1
 801525a:	fa0f fe8e 	sxth.w	lr, lr
 801525e:	b212      	sxth	r2, r2
 8015260:	b20d      	sxth	r5, r1
 8015262:	ebae 0202 	sub.w	r2, lr, r2
 8015266:	436f      	muls	r7, r5
 8015268:	4372      	muls	r2, r6
 801526a:	4297      	cmp	r7, r2
 801526c:	db09      	blt.n	8015282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801526e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8015272:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8015276:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801527a:	449c      	add	ip, r3
 801527c:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015280:	e686      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015282:	4421      	add	r1, r4
 8015284:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015288:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 801528c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015290:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015294:	e67c      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015296:	9f04      	ldr	r7, [sp, #16]
 8015298:	42b8      	cmp	r0, r7
 801529a:	da27      	bge.n	80152ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801529c:	9902      	ldr	r1, [sp, #8]
 801529e:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 80152a2:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80152a6:	eb05 010e 	add.w	r1, r5, lr
 80152aa:	fa1f f881 	uxth.w	r8, r1
 80152ae:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 80152b2:	4411      	add	r1, r2
 80152b4:	eba1 0108 	sub.w	r1, r1, r8
 80152b8:	b289      	uxth	r1, r1
 80152ba:	fa0f f988 	sxth.w	r9, r8
 80152be:	eba2 020e 	sub.w	r2, r2, lr
 80152c2:	fa0f f881 	sxth.w	r8, r1
 80152c6:	1a3f      	subs	r7, r7, r0
 80152c8:	4372      	muls	r2, r6
 80152ca:	fb08 f707 	mul.w	r7, r8, r7
 80152ce:	42ba      	cmp	r2, r7
 80152d0:	dc06      	bgt.n	80152e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80152d2:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 80152d6:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 80152da:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 80152de:	e7ca      	b.n	8015276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80152e0:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 80152e4:	4429      	add	r1, r5
 80152e6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80152ea:	e651      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80152ec:	9805      	ldr	r0, [sp, #20]
 80152ee:	ebaa 0000 	sub.w	r0, sl, r0
 80152f2:	b280      	uxth	r0, r0
 80152f4:	2d06      	cmp	r5, #6
 80152f6:	fa0f fe80 	sxth.w	lr, r0
 80152fa:	d817      	bhi.n	801532c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80152fc:	9b04      	ldr	r3, [sp, #16]
 80152fe:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8015302:	1c6b      	adds	r3, r5, #1
 8015304:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015308:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 801530c:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015310:	9b01      	ldr	r3, [sp, #4]
 8015312:	9801      	ldr	r0, [sp, #4]
 8015314:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015318:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801531c:	805a      	strh	r2, [r3, #2]
 801531e:	809e      	strh	r6, [r3, #4]
 8015320:	80d9      	strh	r1, [r3, #6]
 8015322:	9b02      	ldr	r3, [sp, #8]
 8015324:	3b01      	subs	r3, #1
 8015326:	9302      	str	r3, [sp, #8]
 8015328:	3c08      	subs	r4, #8
 801532a:	e747      	b.n	80151bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801532c:	9a02      	ldr	r2, [sp, #8]
 801532e:	45b6      	cmp	lr, r6
 8015330:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015334:	db0d      	blt.n	8015352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8015336:	449c      	add	ip, r3
 8015338:	fa1f fc8c 	uxth.w	ip, ip
 801533c:	445a      	add	r2, fp
 801533e:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015342:	448c      	add	ip, r1
 8015344:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015348:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 801534c:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015350:	e61e      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015352:	445a      	add	r2, fp
 8015354:	4484      	add	ip, r0
 8015356:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 801535a:	e78f      	b.n	801527c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801535c:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015360:	fa1f f18e 	uxth.w	r1, lr
 8015364:	eb01 0806 	add.w	r8, r1, r6
 8015368:	b293      	uxth	r3, r2
 801536a:	fa1f f888 	uxth.w	r8, r8
 801536e:	9306      	str	r3, [sp, #24]
 8015370:	fa0f f388 	sxth.w	r3, r8
 8015374:	9307      	str	r3, [sp, #28]
 8015376:	9f06      	ldr	r7, [sp, #24]
 8015378:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801537c:	443b      	add	r3, r7
 801537e:	b29b      	uxth	r3, r3
 8015380:	4596      	cmp	lr, r2
 8015382:	9308      	str	r3, [sp, #32]
 8015384:	da24      	bge.n	80153d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8015386:	9905      	ldr	r1, [sp, #20]
 8015388:	eba3 0308 	sub.w	r3, r3, r8
 801538c:	ebaa 0401 	sub.w	r4, sl, r1
 8015390:	b2a4      	uxth	r4, r4
 8015392:	b29b      	uxth	r3, r3
 8015394:	b225      	sxth	r5, r4
 8015396:	b219      	sxth	r1, r3
 8015398:	eba2 020e 	sub.w	r2, r2, lr
 801539c:	eba9 0000 	sub.w	r0, r9, r0
 80153a0:	436a      	muls	r2, r5
 80153a2:	4348      	muls	r0, r1
 80153a4:	4282      	cmp	r2, r0
 80153a6:	9a02      	ldr	r2, [sp, #8]
 80153a8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80153ac:	445a      	add	r2, fp
 80153ae:	dc06      	bgt.n	80153be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80153b0:	9b07      	ldr	r3, [sp, #28]
 80153b2:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 80153b6:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 80153ba:	44a4      	add	ip, r4
 80153bc:	e75e      	b.n	801527c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80153be:	9904      	ldr	r1, [sp, #16]
 80153c0:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 80153c4:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 80153c8:	4433      	add	r3, r6
 80153ca:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80153ce:	e5df      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80153d0:	9f06      	ldr	r7, [sp, #24]
 80153d2:	9b04      	ldr	r3, [sp, #16]
 80153d4:	1bc9      	subs	r1, r1, r7
 80153d6:	fa0f f78a 	sxth.w	r7, sl
 80153da:	b289      	uxth	r1, r1
 80153dc:	429f      	cmp	r7, r3
 80153de:	fa0f fe81 	sxth.w	lr, r1
 80153e2:	dd23      	ble.n	801542c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80153e4:	9a05      	ldr	r2, [sp, #20]
 80153e6:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80153ea:	9d07      	ldr	r5, [sp, #28]
 80153ec:	ebaa 0202 	sub.w	r2, sl, r2
 80153f0:	b292      	uxth	r2, r2
 80153f2:	eba5 0a03 	sub.w	sl, r5, r3
 80153f6:	b214      	sxth	r4, r2
 80153f8:	eba9 0000 	sub.w	r0, r9, r0
 80153fc:	9b02      	ldr	r3, [sp, #8]
 80153fe:	fb0e f000 	mul.w	r0, lr, r0
 8015402:	fb04 fa0a 	mul.w	sl, r4, sl
 8015406:	00db      	lsls	r3, r3, #3
 8015408:	4550      	cmp	r0, sl
 801540a:	445b      	add	r3, fp
 801540c:	db03      	blt.n	8015416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801540e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8015412:	4494      	add	ip, r2
 8015414:	e732      	b.n	801527c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015416:	9a04      	ldr	r2, [sp, #16]
 8015418:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 801541c:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015420:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8015424:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015428:	4431      	add	r1, r6
 801542a:	e75c      	b.n	80152e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801542c:	9b08      	ldr	r3, [sp, #32]
 801542e:	eba3 0308 	sub.w	r3, r3, r8
 8015432:	b29b      	uxth	r3, r3
 8015434:	2d06      	cmp	r5, #6
 8015436:	b218      	sxth	r0, r3
 8015438:	d813      	bhi.n	8015462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801543a:	9b07      	ldr	r3, [sp, #28]
 801543c:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8015440:	1c6b      	adds	r3, r5, #1
 8015442:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8015446:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 801544a:	9b01      	ldr	r3, [sp, #4]
 801544c:	9901      	ldr	r1, [sp, #4]
 801544e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015452:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8015456:	805a      	strh	r2, [r3, #2]
 8015458:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801545a:	809a      	strh	r2, [r3, #4]
 801545c:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015460:	e75f      	b.n	8015322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015462:	9c02      	ldr	r4, [sp, #8]
 8015464:	4570      	cmp	r0, lr
 8015466:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801546a:	db0d      	blt.n	8015488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801546c:	4431      	add	r1, r6
 801546e:	9b06      	ldr	r3, [sp, #24]
 8015470:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8015474:	b289      	uxth	r1, r1
 8015476:	445c      	add	r4, fp
 8015478:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801547c:	4419      	add	r1, r3
 801547e:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8015482:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8015486:	e583      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015488:	445c      	add	r4, fp
 801548a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 801548e:	e79b      	b.n	80153c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015490:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8015494:	1e65      	subs	r5, r4, #1
 8015496:	b2ad      	uxth	r5, r5
 8015498:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801549c:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80154a0:	42b5      	cmp	r5, r6
 80154a2:	d044      	beq.n	801552e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80154a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80154a8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 80154ac:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80154b0:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 80154b4:	4282      	cmp	r2, r0
 80154b6:	d11f      	bne.n	80154f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80154b8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80154bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80154c0:	459c      	cmp	ip, r3
 80154c2:	d119      	bne.n	80154f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80154c4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 80154c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80154cc:	19d8      	adds	r0, r3, r7
 80154ce:	b200      	sxth	r0, r0
 80154d0:	4288      	cmp	r0, r1
 80154d2:	d109      	bne.n	80154e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80154d4:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80154d8:	4413      	add	r3, r2
 80154da:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80154de:	4629      	mov	r1, r5
 80154e0:	9801      	ldr	r0, [sp, #4]
 80154e2:	f7ff fd2b 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80154e6:	e003      	b.n	80154f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154e8:	4411      	add	r1, r2
 80154ea:	b209      	sxth	r1, r1
 80154ec:	42b9      	cmp	r1, r7
 80154ee:	d0f3      	beq.n	80154d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80154f0:	3d01      	subs	r5, #1
 80154f2:	b2ad      	uxth	r5, r5
 80154f4:	3c08      	subs	r4, #8
 80154f6:	e7d3      	b.n	80154a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80154f8:	42b9      	cmp	r1, r7
 80154fa:	d1f9      	bne.n	80154f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154fc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015500:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015504:	4299      	cmp	r1, r3
 8015506:	d1f3      	bne.n	80154f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015508:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 801550c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015510:	181f      	adds	r7, r3, r0
 8015512:	b23f      	sxth	r7, r7
 8015514:	42ba      	cmp	r2, r7
 8015516:	d105      	bne.n	8015524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015518:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 801551c:	440b      	add	r3, r1
 801551e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015522:	e7dc      	b.n	80154de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015524:	440a      	add	r2, r1
 8015526:	b212      	sxth	r2, r2
 8015528:	4290      	cmp	r0, r2
 801552a:	d1e1      	bne.n	80154f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801552c:	e7f6      	b.n	801551c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801552e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8015532:	2e07      	cmp	r6, #7
 8015534:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015538:	d812      	bhi.n	8015560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801553a:	1c75      	adds	r5, r6, #1
 801553c:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8015540:	9d01      	ldr	r5, [sp, #4]
 8015542:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8015546:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801554a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801554e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8015552:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8015556:	442c      	add	r4, r5
 8015558:	8061      	strh	r1, [r4, #2]
 801555a:	80a2      	strh	r2, [r4, #4]
 801555c:	80e3      	strh	r3, [r4, #6]
 801555e:	e581      	b.n	8015064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015560:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015564:	3e01      	subs	r6, #1
 8015566:	445c      	add	r4, fp
 8015568:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801556c:	f04f 37ff 	mov.w	r7, #4294967295
 8015570:	2500      	movs	r5, #0
 8015572:	9305      	str	r3, [sp, #20]
 8015574:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015578:	9302      	str	r3, [sp, #8]
 801557a:	1e72      	subs	r2, r6, #1
 801557c:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015580:	9304      	str	r3, [sp, #16]
 8015582:	4691      	mov	r9, r2
 8015584:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015588:	f1b9 3fff 	cmp.w	r9, #4294967295
 801558c:	bf14      	ite	ne
 801558e:	9905      	ldrne	r1, [sp, #20]
 8015590:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8015594:	6818      	ldr	r0, [r3, #0]
 8015596:	9207      	str	r2, [sp, #28]
 8015598:	bf18      	it	ne
 801559a:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801559e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80155a2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80155a6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80155aa:	9306      	str	r3, [sp, #24]
 80155ac:	fb18 f801 	smulbb	r8, r8, r1
 80155b0:	6859      	ldr	r1, [r3, #4]
 80155b2:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80155b6:	4671      	mov	r1, lr
 80155b8:	a80c      	add	r0, sp, #48	; 0x30
 80155ba:	f7ff fafb 	bl	8014bb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80155be:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80155c2:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80155c6:	9b04      	ldr	r3, [sp, #16]
 80155c8:	9a02      	ldr	r2, [sp, #8]
 80155ca:	fb10 f001 	smulbb	r0, r0, r1
 80155ce:	fb02 8803 	mla	r8, r2, r3, r8
 80155d2:	eba0 0108 	sub.w	r1, r0, r8
 80155d6:	f04f 0c08 	mov.w	ip, #8
 80155da:	fb90 f0fc 	sdiv	r0, r0, ip
 80155de:	4288      	cmp	r0, r1
 80155e0:	dc20      	bgt.n	8015624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80155e2:	4551      	cmp	r1, sl
 80155e4:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80155e8:	da03      	bge.n	80155f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80155ea:	b1d9      	cbz	r1, 8015624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80155ec:	468a      	mov	sl, r1
 80155ee:	464f      	mov	r7, r9
 80155f0:	4635      	mov	r5, r6
 80155f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80155f6:	f119 0f02 	cmn.w	r9, #2
 80155fa:	d1c5      	bne.n	8015588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80155fc:	4616      	mov	r6, r2
 80155fe:	3201      	adds	r2, #1
 8015600:	f1a4 0408 	sub.w	r4, r4, #8
 8015604:	d1b6      	bne.n	8015574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015606:	9b01      	ldr	r3, [sp, #4]
 8015608:	b2ac      	uxth	r4, r5
 801560a:	00ed      	lsls	r5, r5, #3
 801560c:	1958      	adds	r0, r3, r5
 801560e:	1c7b      	adds	r3, r7, #1
 8015610:	d10b      	bne.n	801562a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8015612:	4601      	mov	r1, r0
 8015614:	9803      	ldr	r0, [sp, #12]
 8015616:	f7ff facd 	bl	8014bb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801561a:	4621      	mov	r1, r4
 801561c:	9801      	ldr	r0, [sp, #4]
 801561e:	f7ff fc8d 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015622:	e4b5      	b.n	8014f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015624:	464f      	mov	r7, r9
 8015626:	4635      	mov	r5, r6
 8015628:	e7ed      	b.n	8015606 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 801562a:	9b01      	ldr	r3, [sp, #4]
 801562c:	00ff      	lsls	r7, r7, #3
 801562e:	19d9      	adds	r1, r3, r7
 8015630:	f7ff fac0 	bl	8014bb4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015634:	9b03      	ldr	r3, [sp, #12]
 8015636:	cb03      	ldmia	r3!, {r0, r1}
 8015638:	445f      	add	r7, fp
 801563a:	445d      	add	r5, fp
 801563c:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8015640:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 8015644:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015648:	9b03      	ldr	r3, [sp, #12]
 801564a:	6869      	ldr	r1, [r5, #4]
 801564c:	c303      	stmia	r3!, {r0, r1}
 801564e:	e7e4      	b.n	801561a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015650 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015654:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015658:	b09b      	sub	sp, #108	; 0x6c
 801565a:	4604      	mov	r4, r0
 801565c:	4630      	mov	r0, r6
 801565e:	f7fa fa20 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015662:	4605      	mov	r5, r0
 8015664:	b948      	cbnz	r0, 801567a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8015666:	6823      	ldr	r3, [r4, #0]
 8015668:	e896 0006 	ldmia.w	r6, {r1, r2}
 801566c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801566e:	4620      	mov	r0, r4
 8015670:	4798      	blx	r3
 8015672:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8015676:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 801567a:	4bc6      	ldr	r3, [pc, #792]	; (8015994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 801567c:	681b      	ldr	r3, [r3, #0]
 801567e:	2b00      	cmp	r3, #0
 8015680:	d03f      	beq.n	8015702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015682:	4dc5      	ldr	r5, [pc, #788]	; (8015998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8015684:	4628      	mov	r0, r5
 8015686:	f7fa fa0c 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801568a:	4606      	mov	r6, r0
 801568c:	2800      	cmp	r0, #0
 801568e:	d138      	bne.n	8015702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015690:	4628      	mov	r0, r5
 8015692:	f7ff f907 	bl	80148a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015696:	6823      	ldr	r3, [r4, #0]
 8015698:	6829      	ldr	r1, [r5, #0]
 801569a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801569c:	686a      	ldr	r2, [r5, #4]
 801569e:	4620      	mov	r0, r4
 80156a0:	4798      	blx	r3
 80156a2:	802e      	strh	r6, [r5, #0]
 80156a4:	806e      	strh	r6, [r5, #2]
 80156a6:	80ae      	strh	r6, [r5, #4]
 80156a8:	80ee      	strh	r6, [r5, #6]
 80156aa:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 80156ae:	4dbb      	ldr	r5, [pc, #748]	; (801599c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80156b0:	4640      	mov	r0, r8
 80156b2:	f7ff fbeb 	bl	8014e8c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80156b6:	882e      	ldrh	r6, [r5, #0]
 80156b8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80156bc:	4633      	mov	r3, r6
 80156be:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80156c2:	42bb      	cmp	r3, r7
 80156c4:	d224      	bcs.n	8015710 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80156c6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80156ca:	2907      	cmp	r1, #7
 80156cc:	d816      	bhi.n	80156fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80156ce:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80156d2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80156d6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80156da:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80156de:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80156e2:	1c4a      	adds	r2, r1, #1
 80156e4:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80156e8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80156ec:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80156f0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80156f4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80156f8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80156fc:	3301      	adds	r3, #1
 80156fe:	b29b      	uxth	r3, r3
 8015700:	e7df      	b.n	80156c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8015702:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015706:	2b00      	cmp	r3, #0
 8015708:	d1cf      	bne.n	80156aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801570a:	b01b      	add	sp, #108	; 0x6c
 801570c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015710:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 8015714:	42b3      	cmp	r3, r6
 8015716:	d90c      	bls.n	8015732 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015718:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801571c:	6822      	ldr	r2, [r4, #0]
 801571e:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8015722:	6c17      	ldr	r7, [r2, #64]	; 0x40
 8015724:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015728:	4620      	mov	r0, r4
 801572a:	3601      	adds	r6, #1
 801572c:	47b8      	blx	r7
 801572e:	b2b6      	uxth	r6, r6
 8015730:	e7ee      	b.n	8015710 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015732:	4a9b      	ldr	r2, [pc, #620]	; (80159a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015734:	6813      	ldr	r3, [r2, #0]
 8015736:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801573a:	2b01      	cmp	r3, #1
 801573c:	4691      	mov	r9, r2
 801573e:	f040 80e2 	bne.w	8015906 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8015742:	8829      	ldrh	r1, [r5, #0]
 8015744:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015748:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801574c:	33ae      	adds	r3, #174	; 0xae
 801574e:	2600      	movs	r6, #0
 8015750:	428f      	cmp	r7, r1
 8015752:	f103 0308 	add.w	r3, r3, #8
 8015756:	dd0a      	ble.n	801576e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015758:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801575c:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015760:	4402      	add	r2, r0
 8015762:	b212      	sxth	r2, r2
 8015764:	4296      	cmp	r6, r2
 8015766:	bfb8      	it	lt
 8015768:	4616      	movlt	r6, r2
 801576a:	3101      	adds	r1, #1
 801576c:	e7f0      	b.n	8015750 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801576e:	4b8d      	ldr	r3, [pc, #564]	; (80159a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015770:	f8df 922c 	ldr.w	r9, [pc, #556]	; 80159a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8015774:	881b      	ldrh	r3, [r3, #0]
 8015776:	2b0f      	cmp	r3, #15
 8015778:	bf88      	it	hi
 801577a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801577e:	f04f 0300 	mov.w	r3, #0
 8015782:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8015786:	bf98      	it	ls
 8015788:	f04f 0b01 	movls.w	fp, #1
 801578c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015790:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8015794:	4b82      	ldr	r3, [pc, #520]	; (80159a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8015796:	4438      	add	r0, r7
 8015798:	b207      	sxth	r7, r0
 801579a:	6818      	ldr	r0, [r3, #0]
 801579c:	42b7      	cmp	r7, r6
 801579e:	6803      	ldr	r3, [r0, #0]
 80157a0:	f280 8083 	bge.w	80158aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80157a4:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80157a8:	4798      	blx	r3
 80157aa:	eb07 030b 	add.w	r3, r7, fp
 80157ae:	4298      	cmp	r0, r3
 80157b0:	da07      	bge.n	80157c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80157b2:	42b0      	cmp	r0, r6
 80157b4:	da05      	bge.n	80157c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80157b6:	4287      	cmp	r7, r0
 80157b8:	dd6c      	ble.n	8015894 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80157ba:	2f00      	cmp	r7, #0
 80157bc:	dd6a      	ble.n	8015894 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80157be:	4630      	mov	r0, r6
 80157c0:	e004      	b.n	80157cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80157c2:	4287      	cmp	r7, r0
 80157c4:	dcfb      	bgt.n	80157be <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80157c6:	42b0      	cmp	r0, r6
 80157c8:	bfa8      	it	ge
 80157ca:	4630      	movge	r0, r6
 80157cc:	4b76      	ldr	r3, [pc, #472]	; (80159a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80157ce:	f8ad 7016 	strh.w	r7, [sp, #22]
 80157d2:	1bc0      	subs	r0, r0, r7
 80157d4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80157d8:	882f      	ldrh	r7, [r5, #0]
 80157da:	f8ad 3018 	strh.w	r3, [sp, #24]
 80157de:	2200      	movs	r2, #0
 80157e0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80157e4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80157e8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80157ec:	42bb      	cmp	r3, r7
 80157ee:	d9cd      	bls.n	801578c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80157f0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80157f4:	ab07      	add	r3, sp, #28
 80157f6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80157fa:	6851      	ldr	r1, [r2, #4]
 80157fc:	c303      	stmia	r3!, {r0, r1}
 80157fe:	a905      	add	r1, sp, #20
 8015800:	a807      	add	r0, sp, #28
 8015802:	f7ff f93e 	bl	8014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015806:	2800      	cmp	r0, #0
 8015808:	d04c      	beq.n	80158a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801580a:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801580e:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015812:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015816:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801581a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801581e:	9302      	str	r3, [sp, #8]
 8015820:	4686      	mov	lr, r0
 8015822:	4290      	cmp	r0, r2
 8015824:	4450      	add	r0, sl
 8015826:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801582a:	bfb8      	it	lt
 801582c:	4696      	movlt	lr, r2
 801582e:	4452      	add	r2, sl
 8015830:	4299      	cmp	r1, r3
 8015832:	b280      	uxth	r0, r0
 8015834:	b292      	uxth	r2, r2
 8015836:	468c      	mov	ip, r1
 8015838:	fa0f fa82 	sxth.w	sl, r2
 801583c:	bfb8      	it	lt
 801583e:	469c      	movlt	ip, r3
 8015840:	b203      	sxth	r3, r0
 8015842:	4553      	cmp	r3, sl
 8015844:	bfb8      	it	lt
 8015846:	4602      	movlt	r2, r0
 8015848:	eba2 020e 	sub.w	r2, r2, lr
 801584c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015850:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015854:	9b02      	ldr	r3, [sp, #8]
 8015856:	f8ad e01c 	strh.w	lr, [sp, #28]
 801585a:	4411      	add	r1, r2
 801585c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015860:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015864:	4413      	add	r3, r2
 8015866:	b289      	uxth	r1, r1
 8015868:	b29b      	uxth	r3, r3
 801586a:	b208      	sxth	r0, r1
 801586c:	b21a      	sxth	r2, r3
 801586e:	4290      	cmp	r0, r2
 8015870:	bfb8      	it	lt
 8015872:	460b      	movlt	r3, r1
 8015874:	eba3 030c 	sub.w	r3, r3, ip
 8015878:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801587c:	a807      	add	r0, sp, #28
 801587e:	f7fa f910 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015882:	b920      	cbnz	r0, 801588e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015884:	6823      	ldr	r3, [r4, #0]
 8015886:	a907      	add	r1, sp, #28
 8015888:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801588a:	4620      	mov	r0, r4
 801588c:	4798      	blx	r3
 801588e:	3701      	adds	r7, #1
 8015890:	b2bf      	uxth	r7, r7
 8015892:	e7a9      	b.n	80157e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015894:	f8d9 0000 	ldr.w	r0, [r9]
 8015898:	6803      	ldr	r3, [r0, #0]
 801589a:	2101      	movs	r1, #1
 801589c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80158a0:	4798      	blx	r3
 80158a2:	e773      	b.n	801578c <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80158a4:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80158a8:	e7e8      	b.n	801587c <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80158aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80158ac:	4798      	blx	r3
 80158ae:	4b3f      	ldr	r3, [pc, #252]	; (80159ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80158b0:	781b      	ldrb	r3, [r3, #0]
 80158b2:	2b00      	cmp	r3, #0
 80158b4:	f43f af29 	beq.w	801570a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80158b8:	2300      	movs	r3, #0
 80158ba:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80158be:	882b      	ldrh	r3, [r5, #0]
 80158c0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80158c4:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80158c8:	42ab      	cmp	r3, r5
 80158ca:	f4bf af1e 	bcs.w	801570a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80158ce:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80158d2:	2907      	cmp	r1, #7
 80158d4:	d814      	bhi.n	8015900 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80158d6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80158da:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80158de:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80158e2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80158e6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80158ea:	1c4a      	adds	r2, r1, #1
 80158ec:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80158f0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80158f4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80158f8:	f8a2 c002 	strh.w	ip, [r2, #2]
 80158fc:	8097      	strh	r7, [r2, #4]
 80158fe:	80d6      	strh	r6, [r2, #6]
 8015900:	3301      	adds	r3, #1
 8015902:	b29b      	uxth	r3, r3
 8015904:	e7e0      	b.n	80158c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015906:	2b02      	cmp	r3, #2
 8015908:	f040 8133 	bne.w	8015b72 <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 801590c:	4b28      	ldr	r3, [pc, #160]	; (80159b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801590e:	781b      	ldrb	r3, [r3, #0]
 8015910:	2b01      	cmp	r3, #1
 8015912:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015916:	f000 8098 	beq.w	8015a4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801591a:	882a      	ldrh	r2, [r5, #0]
 801591c:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015920:	3201      	adds	r2, #1
 8015922:	b292      	uxth	r2, r2
 8015924:	2900      	cmp	r1, #0
 8015926:	d0c2      	beq.n	80158ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015928:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 801592c:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015930:	441e      	add	r6, r3
 8015932:	b236      	sxth	r6, r6
 8015934:	4694      	mov	ip, r2
 8015936:	f04f 0900 	mov.w	r9, #0
 801593a:	fa1f f38c 	uxth.w	r3, ip
 801593e:	4299      	cmp	r1, r3
 8015940:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015944:	f240 80bf 	bls.w	8015ac6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015948:	4427      	add	r7, r4
 801594a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801594e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015952:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015956:	4283      	cmp	r3, r0
 8015958:	f340 80a1 	ble.w	8015a9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 801595c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015960:	4406      	add	r6, r0
 8015962:	b236      	sxth	r6, r6
 8015964:	429e      	cmp	r6, r3
 8015966:	bfa8      	it	ge
 8015968:	461e      	movge	r6, r3
 801596a:	46e1      	mov	r9, ip
 801596c:	f10c 0c01 	add.w	ip, ip, #1
 8015970:	e7e3      	b.n	801593a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015972:	d10a      	bne.n	801598a <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015974:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015978:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 801597c:	4562      	cmp	r2, ip
 801597e:	bfb8      	it	lt
 8015980:	4662      	movlt	r2, ip
 8015982:	4288      	cmp	r0, r1
 8015984:	bfb8      	it	lt
 8015986:	461f      	movlt	r7, r3
 8015988:	e087      	b.n	8015a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801598a:	428a      	cmp	r2, r1
 801598c:	bfb8      	it	lt
 801598e:	460a      	movlt	r2, r1
 8015990:	e083      	b.n	8015a9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015992:	bf00      	nop
 8015994:	20012df4 	.word	0x20012df4
 8015998:	20012e00 	.word	0x20012e00
 801599c:	20000088 	.word	0x20000088
 80159a0:	20012db4 	.word	0x20012db4
 80159a4:	20012daa 	.word	0x20012daa
 80159a8:	20012da8 	.word	0x20012da8
 80159ac:	20012db2 	.word	0x20012db2
 80159b0:	20012dac 	.word	0x20012dac
 80159b4:	19a1      	adds	r1, r4, r6
 80159b6:	ab07      	add	r3, sp, #28
 80159b8:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80159bc:	6849      	ldr	r1, [r1, #4]
 80159be:	c303      	stmia	r3!, {r0, r1}
 80159c0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80159c4:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80159c8:	2b13      	cmp	r3, #19
 80159ca:	bfd8      	it	le
 80159cc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80159d0:	f8ad 201c 	strh.w	r2, [sp, #28]
 80159d4:	440b      	add	r3, r1
 80159d6:	1a9b      	subs	r3, r3, r2
 80159d8:	a807      	add	r0, sp, #28
 80159da:	f8ad 3020 	strh.w	r3, [sp, #32]
 80159de:	f7fe ff7b 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80159e2:	a807      	add	r0, sp, #28
 80159e4:	f7fa f85d 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80159e8:	bb78      	cbnz	r0, 8015a4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80159ea:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80159ee:	f8d9 0000 	ldr.w	r0, [r9]
 80159f2:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80159f6:	f8d0 e000 	ldr.w	lr, [r0]
 80159fa:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80159fe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015a02:	f1bc 0f14 	cmp.w	ip, #20
 8015a06:	bfa8      	it	ge
 8015a08:	f04f 0c14 	movge.w	ip, #20
 8015a0c:	fa1f fc8c 	uxth.w	ip, ip
 8015a10:	f8cd c000 	str.w	ip, [sp]
 8015a14:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015a18:	47d8      	blx	fp
 8015a1a:	4683      	mov	fp, r0
 8015a1c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015a20:	a807      	add	r0, sp, #28
 8015a22:	f7fe ff3f 	bl	80148a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015a26:	6823      	ldr	r3, [r4, #0]
 8015a28:	4426      	add	r6, r4
 8015a2a:	4620      	mov	r0, r4
 8015a2c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015a2e:	a907      	add	r1, sp, #28
 8015a30:	4798      	blx	r3
 8015a32:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015a36:	eba0 000b 	sub.w	r0, r0, fp
 8015a3a:	b200      	sxth	r0, r0
 8015a3c:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015a40:	b918      	cbnz	r0, 8015a4a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015a42:	b2b9      	uxth	r1, r7
 8015a44:	4650      	mov	r0, sl
 8015a46:	f7ff fa79 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015a4a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015a4e:	f1bb 0f00 	cmp.w	fp, #0
 8015a52:	f43f af2c 	beq.w	80158ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015a56:	882b      	ldrh	r3, [r5, #0]
 8015a58:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015a5c:	3301      	adds	r3, #1
 8015a5e:	b29b      	uxth	r3, r3
 8015a60:	2700      	movs	r7, #0
 8015a62:	b299      	uxth	r1, r3
 8015a64:	458b      	cmp	fp, r1
 8015a66:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015a6a:	d9a3      	bls.n	80159b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015a6c:	4426      	add	r6, r4
 8015a6e:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015a72:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015a76:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015a7a:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015a7e:	4408      	add	r0, r1
 8015a80:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015a84:	4461      	add	r1, ip
 8015a86:	b200      	sxth	r0, r0
 8015a88:	b209      	sxth	r1, r1
 8015a8a:	4288      	cmp	r0, r1
 8015a8c:	f6bf af71 	bge.w	8015972 <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015a90:	4584      	cmp	ip, r0
 8015a92:	4662      	mov	r2, ip
 8015a94:	461f      	mov	r7, r3
 8015a96:	bfb8      	it	lt
 8015a98:	4602      	movlt	r2, r0
 8015a9a:	3301      	adds	r3, #1
 8015a9c:	e7e1      	b.n	8015a62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015a9e:	d10e      	bne.n	8015abe <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015aa0:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015aa4:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015aa8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015aac:	4473      	add	r3, lr
 8015aae:	b21b      	sxth	r3, r3
 8015ab0:	429e      	cmp	r6, r3
 8015ab2:	bfa8      	it	ge
 8015ab4:	461e      	movge	r6, r3
 8015ab6:	4287      	cmp	r7, r0
 8015ab8:	bfb8      	it	lt
 8015aba:	46e1      	movlt	r9, ip
 8015abc:	e756      	b.n	801596c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015abe:	4286      	cmp	r6, r0
 8015ac0:	bfa8      	it	ge
 8015ac2:	4606      	movge	r6, r0
 8015ac4:	e752      	b.n	801596c <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015ac6:	eb0a 0007 	add.w	r0, sl, r7
 8015aca:	4427      	add	r7, r4
 8015acc:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015ad0:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015ad4:	f1bb 0f13 	cmp.w	fp, #19
 8015ad8:	bfde      	ittt	le
 8015ada:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015ade:	445e      	addle	r6, fp
 8015ae0:	b236      	sxthle	r6, r6
 8015ae2:	f7f9 ffde 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015ae6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015aea:	2800      	cmp	r0, #0
 8015aec:	f47f af1a 	bne.w	8015924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015af0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015af4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015af8:	482a      	ldr	r0, [pc, #168]	; (8015ba4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015afa:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015afe:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015b02:	6800      	ldr	r0, [r0, #0]
 8015b04:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015b08:	1ab6      	subs	r6, r6, r2
 8015b0a:	2e14      	cmp	r6, #20
 8015b0c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015b10:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015b14:	bfa8      	it	ge
 8015b16:	2614      	movge	r6, #20
 8015b18:	f8d0 c000 	ldr.w	ip, [r0]
 8015b1c:	b2b6      	uxth	r6, r6
 8015b1e:	fa1f fb8b 	uxth.w	fp, fp
 8015b22:	455e      	cmp	r6, fp
 8015b24:	bf94      	ite	ls
 8015b26:	9600      	strls	r6, [sp, #0]
 8015b28:	f8cd b000 	strhi.w	fp, [sp]
 8015b2c:	b292      	uxth	r2, r2
 8015b2e:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015b32:	b29b      	uxth	r3, r3
 8015b34:	b289      	uxth	r1, r1
 8015b36:	47b0      	blx	r6
 8015b38:	6823      	ldr	r3, [r4, #0]
 8015b3a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015b3e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b40:	a907      	add	r1, sp, #28
 8015b42:	4620      	mov	r0, r4
 8015b44:	4798      	blx	r3
 8015b46:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015b4a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015b4e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015b52:	1a5b      	subs	r3, r3, r1
 8015b54:	440a      	add	r2, r1
 8015b56:	b21b      	sxth	r3, r3
 8015b58:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015b5c:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015b60:	2b00      	cmp	r3, #0
 8015b62:	f47f aeda 	bne.w	801591a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015b66:	fa1f f189 	uxth.w	r1, r9
 8015b6a:	4650      	mov	r0, sl
 8015b6c:	f7ff f9e6 	bl	8014f3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015b70:	e6d3      	b.n	801591a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015b72:	882e      	ldrh	r6, [r5, #0]
 8015b74:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015b78:	42b3      	cmp	r3, r6
 8015b7a:	f67f ae98 	bls.w	80158ae <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015b7e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015b82:	ab07      	add	r3, sp, #28
 8015b84:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015b88:	6851      	ldr	r1, [r2, #4]
 8015b8a:	c303      	stmia	r3!, {r0, r1}
 8015b8c:	a807      	add	r0, sp, #28
 8015b8e:	f7f9 ff88 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b92:	b920      	cbnz	r0, 8015b9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015b94:	6823      	ldr	r3, [r4, #0]
 8015b96:	a907      	add	r1, sp, #28
 8015b98:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b9a:	4620      	mov	r0, r4
 8015b9c:	4798      	blx	r3
 8015b9e:	3601      	adds	r6, #1
 8015ba0:	b2b6      	uxth	r6, r6
 8015ba2:	e7e7      	b.n	8015b74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015ba4:	20012db4 	.word	0x20012db4

08015ba8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015ba8:	4b03      	ldr	r3, [pc, #12]	; (8015bb8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015baa:	2200      	movs	r2, #0
 8015bac:	801a      	strh	r2, [r3, #0]
 8015bae:	805a      	strh	r2, [r3, #2]
 8015bb0:	809a      	strh	r2, [r3, #4]
 8015bb2:	80da      	strh	r2, [r3, #6]
 8015bb4:	4770      	bx	lr
 8015bb6:	bf00      	nop
 8015bb8:	20012e00 	.word	0x20012e00

08015bbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bc0:	4606      	mov	r6, r0
 8015bc2:	b09d      	sub	sp, #116	; 0x74
 8015bc4:	a803      	add	r0, sp, #12
 8015bc6:	4614      	mov	r4, r2
 8015bc8:	468a      	mov	sl, r1
 8015bca:	461d      	mov	r5, r3
 8015bcc:	f000 feca 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 8015bd0:	6833      	ldr	r3, [r6, #0]
 8015bd2:	4630      	mov	r0, r6
 8015bd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015bd6:	4798      	blx	r3
 8015bd8:	6833      	ldr	r3, [r6, #0]
 8015bda:	4607      	mov	r7, r0
 8015bdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015bde:	4630      	mov	r0, r6
 8015be0:	4798      	blx	r3
 8015be2:	462a      	mov	r2, r5
 8015be4:	9000      	str	r0, [sp, #0]
 8015be6:	4621      	mov	r1, r4
 8015be8:	463b      	mov	r3, r7
 8015bea:	a803      	add	r0, sp, #12
 8015bec:	f000 ff15 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015bf0:	2500      	movs	r5, #0
 8015bf2:	462c      	mov	r4, r5
 8015bf4:	46a9      	mov	r9, r5
 8015bf6:	46a8      	mov	r8, r5
 8015bf8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015bfc:	2300      	movs	r3, #0
 8015bfe:	9302      	str	r3, [sp, #8]
 8015c00:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015c04:	429c      	cmp	r4, r3
 8015c06:	d002      	beq.n	8015c0e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015c08:	455c      	cmp	r4, fp
 8015c0a:	bf18      	it	ne
 8015c0c:	4625      	movne	r5, r4
 8015c0e:	ab02      	add	r3, sp, #8
 8015c10:	4632      	mov	r2, r6
 8015c12:	4651      	mov	r1, sl
 8015c14:	a803      	add	r0, sp, #12
 8015c16:	f001 fa03 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c1a:	4604      	mov	r4, r0
 8015c1c:	b108      	cbz	r0, 8015c22 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015c1e:	280a      	cmp	r0, #10
 8015c20:	d10a      	bne.n	8015c38 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015c22:	45c1      	cmp	r9, r8
 8015c24:	bf38      	it	cc
 8015c26:	46c1      	movcc	r9, r8
 8015c28:	f04f 0800 	mov.w	r8, #0
 8015c2c:	2c00      	cmp	r4, #0
 8015c2e:	d1e5      	bne.n	8015bfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015c30:	4648      	mov	r0, r9
 8015c32:	b01d      	add	sp, #116	; 0x74
 8015c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015c38:	9a02      	ldr	r2, [sp, #8]
 8015c3a:	2a00      	cmp	r2, #0
 8015c3c:	d0de      	beq.n	8015bfc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015c3e:	7b57      	ldrb	r7, [r2, #13]
 8015c40:	6833      	ldr	r3, [r6, #0]
 8015c42:	8894      	ldrh	r4, [r2, #4]
 8015c44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015c46:	007f      	lsls	r7, r7, #1
 8015c48:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015c4c:	7a97      	ldrb	r7, [r2, #10]
 8015c4e:	4629      	mov	r1, r5
 8015c50:	4307      	orrs	r7, r0
 8015c52:	4630      	mov	r0, r6
 8015c54:	4798      	blx	r3
 8015c56:	4438      	add	r0, r7
 8015c58:	4480      	add	r8, r0
 8015c5a:	fa1f f888 	uxth.w	r8, r8
 8015c5e:	e7e5      	b.n	8015c2c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015c60 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015c60:	b508      	push	{r3, lr}
 8015c62:	6803      	ldr	r3, [r0, #0]
 8015c64:	68db      	ldr	r3, [r3, #12]
 8015c66:	4798      	blx	r3
 8015c68:	b128      	cbz	r0, 8015c76 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015c6a:	7b43      	ldrb	r3, [r0, #13]
 8015c6c:	7a80      	ldrb	r0, [r0, #10]
 8015c6e:	005b      	lsls	r3, r3, #1
 8015c70:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015c74:	4318      	orrs	r0, r3
 8015c76:	bd08      	pop	{r3, pc}

08015c78 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015c78:	b40e      	push	{r1, r2, r3}
 8015c7a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c7c:	b09e      	sub	sp, #120	; 0x78
 8015c7e:	ab23      	add	r3, sp, #140	; 0x8c
 8015c80:	4605      	mov	r5, r0
 8015c82:	f853 4b04 	ldr.w	r4, [r3], #4
 8015c86:	9303      	str	r3, [sp, #12]
 8015c88:	a805      	add	r0, sp, #20
 8015c8a:	f000 fe6b 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 8015c8e:	682b      	ldr	r3, [r5, #0]
 8015c90:	4628      	mov	r0, r5
 8015c92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c94:	4798      	blx	r3
 8015c96:	682b      	ldr	r3, [r5, #0]
 8015c98:	4606      	mov	r6, r0
 8015c9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c9c:	4628      	mov	r0, r5
 8015c9e:	4798      	blx	r3
 8015ca0:	4633      	mov	r3, r6
 8015ca2:	ae1e      	add	r6, sp, #120	; 0x78
 8015ca4:	4621      	mov	r1, r4
 8015ca6:	9000      	str	r0, [sp, #0]
 8015ca8:	9a03      	ldr	r2, [sp, #12]
 8015caa:	2400      	movs	r4, #0
 8015cac:	a805      	add	r0, sp, #20
 8015cae:	f000 feb4 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015cb2:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015cb6:	462a      	mov	r2, r5
 8015cb8:	4633      	mov	r3, r6
 8015cba:	4621      	mov	r1, r4
 8015cbc:	a805      	add	r0, sp, #20
 8015cbe:	f001 f9af 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015cc2:	b1f0      	cbz	r0, 8015d02 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015cc4:	280a      	cmp	r0, #10
 8015cc6:	d018      	beq.n	8015cfa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015cc8:	9f04      	ldr	r7, [sp, #16]
 8015cca:	b1b7      	cbz	r7, 8015cfa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015ccc:	7b78      	ldrb	r0, [r7, #13]
 8015cce:	7a3b      	ldrb	r3, [r7, #8]
 8015cd0:	88ea      	ldrh	r2, [r5, #6]
 8015cd2:	00c1      	lsls	r1, r0, #3
 8015cd4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015cd8:	4319      	orrs	r1, r3
 8015cda:	0643      	lsls	r3, r0, #25
 8015cdc:	bf44      	itt	mi
 8015cde:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015ce2:	b219      	sxthmi	r1, r3
 8015ce4:	0100      	lsls	r0, r0, #4
 8015ce6:	79fb      	ldrb	r3, [r7, #7]
 8015ce8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015cec:	4303      	orrs	r3, r0
 8015cee:	4413      	add	r3, r2
 8015cf0:	1a5b      	subs	r3, r3, r1
 8015cf2:	b21b      	sxth	r3, r3
 8015cf4:	429c      	cmp	r4, r3
 8015cf6:	bfb8      	it	lt
 8015cf8:	461c      	movlt	r4, r3
 8015cfa:	4633      	mov	r3, r6
 8015cfc:	462a      	mov	r2, r5
 8015cfe:	2100      	movs	r1, #0
 8015d00:	e7dc      	b.n	8015cbc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015d02:	b2a0      	uxth	r0, r4
 8015d04:	b01e      	add	sp, #120	; 0x78
 8015d06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015d0a:	b003      	add	sp, #12
 8015d0c:	4770      	bx	lr

08015d0e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015d0e:	7a43      	ldrb	r3, [r0, #9]
 8015d10:	8880      	ldrh	r0, [r0, #4]
 8015d12:	4418      	add	r0, r3
 8015d14:	b280      	uxth	r0, r0
 8015d16:	4770      	bx	lr

08015d18 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015d18:	6803      	ldr	r3, [r0, #0]
 8015d1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015d1c:	4718      	bx	r3

08015d1e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015d1e:	b40e      	push	{r1, r2, r3}
 8015d20:	b570      	push	{r4, r5, r6, lr}
 8015d22:	b09d      	sub	sp, #116	; 0x74
 8015d24:	ab21      	add	r3, sp, #132	; 0x84
 8015d26:	4604      	mov	r4, r0
 8015d28:	f853 5b04 	ldr.w	r5, [r3], #4
 8015d2c:	9302      	str	r3, [sp, #8]
 8015d2e:	a803      	add	r0, sp, #12
 8015d30:	f000 fe18 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 8015d34:	6823      	ldr	r3, [r4, #0]
 8015d36:	4620      	mov	r0, r4
 8015d38:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d3a:	4798      	blx	r3
 8015d3c:	6823      	ldr	r3, [r4, #0]
 8015d3e:	4606      	mov	r6, r0
 8015d40:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d42:	4620      	mov	r0, r4
 8015d44:	4798      	blx	r3
 8015d46:	4633      	mov	r3, r6
 8015d48:	9000      	str	r0, [sp, #0]
 8015d4a:	9a02      	ldr	r2, [sp, #8]
 8015d4c:	4629      	mov	r1, r5
 8015d4e:	a803      	add	r0, sp, #12
 8015d50:	f000 fe63 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d54:	a803      	add	r0, sp, #12
 8015d56:	f001 fa31 	bl	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d5a:	2401      	movs	r4, #1
 8015d5c:	b2a3      	uxth	r3, r4
 8015d5e:	b140      	cbz	r0, 8015d72 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015d60:	280a      	cmp	r0, #10
 8015d62:	bf08      	it	eq
 8015d64:	3301      	addeq	r3, #1
 8015d66:	a803      	add	r0, sp, #12
 8015d68:	bf08      	it	eq
 8015d6a:	b21c      	sxtheq	r4, r3
 8015d6c:	f001 fa26 	bl	80171bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d70:	e7f4      	b.n	8015d5c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015d72:	4618      	mov	r0, r3
 8015d74:	b01d      	add	sp, #116	; 0x74
 8015d76:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d7a:	b003      	add	sp, #12
 8015d7c:	4770      	bx	lr

08015d7e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015d7e:	b40e      	push	{r1, r2, r3}
 8015d80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d82:	b09e      	sub	sp, #120	; 0x78
 8015d84:	ab23      	add	r3, sp, #140	; 0x8c
 8015d86:	4604      	mov	r4, r0
 8015d88:	f853 5b04 	ldr.w	r5, [r3], #4
 8015d8c:	9303      	str	r3, [sp, #12]
 8015d8e:	a805      	add	r0, sp, #20
 8015d90:	f000 fde8 	bl	8016964 <_ZN8touchgfx12TextProviderC1Ev>
 8015d94:	6823      	ldr	r3, [r4, #0]
 8015d96:	4620      	mov	r0, r4
 8015d98:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d9a:	4798      	blx	r3
 8015d9c:	6823      	ldr	r3, [r4, #0]
 8015d9e:	4606      	mov	r6, r0
 8015da0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015da2:	4620      	mov	r0, r4
 8015da4:	4798      	blx	r3
 8015da6:	4633      	mov	r3, r6
 8015da8:	4629      	mov	r1, r5
 8015daa:	9000      	str	r0, [sp, #0]
 8015dac:	9a03      	ldr	r2, [sp, #12]
 8015dae:	a805      	add	r0, sp, #20
 8015db0:	ad1e      	add	r5, sp, #120	; 0x78
 8015db2:	f000 fe32 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015db6:	2100      	movs	r1, #0
 8015db8:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015dbc:	4622      	mov	r2, r4
 8015dbe:	462b      	mov	r3, r5
 8015dc0:	a805      	add	r0, sp, #20
 8015dc2:	f001 f92d 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015dc6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8015dca:	b1d8      	cbz	r0, 8015e04 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015dcc:	280a      	cmp	r0, #10
 8015dce:	d012      	beq.n	8015df6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015dd0:	9804      	ldr	r0, [sp, #16]
 8015dd2:	b180      	cbz	r0, 8015df6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015dd4:	7b47      	ldrb	r7, [r0, #13]
 8015dd6:	88e2      	ldrh	r2, [r4, #6]
 8015dd8:	00fb      	lsls	r3, r7, #3
 8015dda:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015dde:	7a03      	ldrb	r3, [r0, #8]
 8015de0:	430b      	orrs	r3, r1
 8015de2:	0679      	lsls	r1, r7, #25
 8015de4:	bf44      	itt	mi
 8015de6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015dea:	b21b      	sxthmi	r3, r3
 8015dec:	1ad3      	subs	r3, r2, r3
 8015dee:	b21b      	sxth	r3, r3
 8015df0:	429e      	cmp	r6, r3
 8015df2:	bfa8      	it	ge
 8015df4:	461e      	movge	r6, r3
 8015df6:	462b      	mov	r3, r5
 8015df8:	4622      	mov	r2, r4
 8015dfa:	2100      	movs	r1, #0
 8015dfc:	a805      	add	r0, sp, #20
 8015dfe:	f001 f90f 	bl	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015e02:	e7e2      	b.n	8015dca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015e04:	4630      	mov	r0, r6
 8015e06:	b01e      	add	sp, #120	; 0x78
 8015e08:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015e0c:	b003      	add	sp, #12
 8015e0e:	4770      	bx	lr

08015e10 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015e10:	b513      	push	{r0, r1, r4, lr}
 8015e12:	6803      	ldr	r3, [r0, #0]
 8015e14:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015e18:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015e1c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015e20:	2400      	movs	r4, #0
 8015e22:	9400      	str	r4, [sp, #0]
 8015e24:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015e28:	691b      	ldr	r3, [r3, #16]
 8015e2a:	4669      	mov	r1, sp
 8015e2c:	4798      	blx	r3
 8015e2e:	b002      	add	sp, #8
 8015e30:	bd10      	pop	{r4, pc}

08015e32 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015e32:	b538      	push	{r3, r4, r5, lr}
 8015e34:	680b      	ldr	r3, [r1, #0]
 8015e36:	460c      	mov	r4, r1
 8015e38:	68db      	ldr	r3, [r3, #12]
 8015e3a:	4605      	mov	r5, r0
 8015e3c:	4798      	blx	r3
 8015e3e:	6823      	ldr	r3, [r4, #0]
 8015e40:	4620      	mov	r0, r4
 8015e42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e44:	4629      	mov	r1, r5
 8015e46:	4798      	blx	r3
 8015e48:	4628      	mov	r0, r5
 8015e4a:	bd38      	pop	{r3, r4, r5, pc}

08015e4c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015e4c:	b410      	push	{r4}
 8015e4e:	880a      	ldrh	r2, [r1, #0]
 8015e50:	8884      	ldrh	r4, [r0, #4]
 8015e52:	4422      	add	r2, r4
 8015e54:	800a      	strh	r2, [r1, #0]
 8015e56:	88c4      	ldrh	r4, [r0, #6]
 8015e58:	884a      	ldrh	r2, [r1, #2]
 8015e5a:	4422      	add	r2, r4
 8015e5c:	804a      	strh	r2, [r1, #2]
 8015e5e:	6940      	ldr	r0, [r0, #20]
 8015e60:	b120      	cbz	r0, 8015e6c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015e62:	6803      	ldr	r3, [r0, #0]
 8015e64:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015e68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e6a:	4718      	bx	r3
 8015e6c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015e70:	4770      	bx	lr

08015e72 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015e72:	b570      	push	{r4, r5, r6, lr}
 8015e74:	8882      	ldrh	r2, [r0, #4]
 8015e76:	880b      	ldrh	r3, [r1, #0]
 8015e78:	4413      	add	r3, r2
 8015e7a:	800b      	strh	r3, [r1, #0]
 8015e7c:	88c2      	ldrh	r2, [r0, #6]
 8015e7e:	884b      	ldrh	r3, [r1, #2]
 8015e80:	460c      	mov	r4, r1
 8015e82:	4413      	add	r3, r2
 8015e84:	804b      	strh	r3, [r1, #2]
 8015e86:	4605      	mov	r5, r0
 8015e88:	1d01      	adds	r1, r0, #4
 8015e8a:	4620      	mov	r0, r4
 8015e8c:	f7f9 fdc6 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8015e90:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015e94:	2b00      	cmp	r3, #0
 8015e96:	dd0b      	ble.n	8015eb0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e98:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015e9c:	2b00      	cmp	r3, #0
 8015e9e:	dd07      	ble.n	8015eb0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015ea0:	6968      	ldr	r0, [r5, #20]
 8015ea2:	b128      	cbz	r0, 8015eb0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015ea4:	6803      	ldr	r3, [r0, #0]
 8015ea6:	4621      	mov	r1, r4
 8015ea8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015eaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015eae:	4718      	bx	r3
 8015eb0:	bd70      	pop	{r4, r5, r6, pc}
	...

08015eb4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015eb4:	b570      	push	{r4, r5, r6, lr}
 8015eb6:	8882      	ldrh	r2, [r0, #4]
 8015eb8:	880b      	ldrh	r3, [r1, #0]
 8015eba:	4413      	add	r3, r2
 8015ebc:	800b      	strh	r3, [r1, #0]
 8015ebe:	88c2      	ldrh	r2, [r0, #6]
 8015ec0:	884b      	ldrh	r3, [r1, #2]
 8015ec2:	460c      	mov	r4, r1
 8015ec4:	4413      	add	r3, r2
 8015ec6:	804b      	strh	r3, [r1, #2]
 8015ec8:	4605      	mov	r5, r0
 8015eca:	1d01      	adds	r1, r0, #4
 8015ecc:	4620      	mov	r0, r4
 8015ece:	f7f9 fda5 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8015ed2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015ed6:	2b00      	cmp	r3, #0
 8015ed8:	dd19      	ble.n	8015f0e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015eda:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015ede:	2b00      	cmp	r3, #0
 8015ee0:	dd15      	ble.n	8015f0e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015ee2:	6968      	ldr	r0, [r5, #20]
 8015ee4:	b128      	cbz	r0, 8015ef2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015ee6:	6803      	ldr	r3, [r0, #0]
 8015ee8:	4621      	mov	r1, r4
 8015eea:	691b      	ldr	r3, [r3, #16]
 8015eec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ef0:	4718      	bx	r3
 8015ef2:	4b07      	ldr	r3, [pc, #28]	; (8015f10 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015ef4:	681b      	ldr	r3, [r3, #0]
 8015ef6:	3304      	adds	r3, #4
 8015ef8:	429d      	cmp	r5, r3
 8015efa:	d108      	bne.n	8015f0e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015efc:	f7fe fea0 	bl	8014c40 <_ZN8touchgfx11Application11getInstanceEv>
 8015f00:	6803      	ldr	r3, [r0, #0]
 8015f02:	6821      	ldr	r1, [r4, #0]
 8015f04:	6862      	ldr	r2, [r4, #4]
 8015f06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015f08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015f0c:	4718      	bx	r3
 8015f0e:	bd70      	pop	{r4, r5, r6, pc}
 8015f10:	20012df8 	.word	0x20012df8

08015f14 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015f14:	b570      	push	{r4, r5, r6, lr}
 8015f16:	4604      	mov	r4, r0
 8015f18:	4616      	mov	r6, r2
 8015f1a:	460d      	mov	r5, r1
 8015f1c:	b901      	cbnz	r1, 8015f20 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015f1e:	b192      	cbz	r2, 8015f46 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015f20:	6823      	ldr	r3, [r4, #0]
 8015f22:	4620      	mov	r0, r4
 8015f24:	699b      	ldr	r3, [r3, #24]
 8015f26:	4798      	blx	r3
 8015f28:	88e2      	ldrh	r2, [r4, #6]
 8015f2a:	88a1      	ldrh	r1, [r4, #4]
 8015f2c:	4432      	add	r2, r6
 8015f2e:	4429      	add	r1, r5
 8015f30:	4620      	mov	r0, r4
 8015f32:	b212      	sxth	r2, r2
 8015f34:	b209      	sxth	r1, r1
 8015f36:	f7ec fbe6 	bl	8002706 <_ZN8touchgfx8Drawable5setXYEss>
 8015f3a:	6823      	ldr	r3, [r4, #0]
 8015f3c:	4620      	mov	r0, r4
 8015f3e:	699b      	ldr	r3, [r3, #24]
 8015f40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015f44:	4718      	bx	r3
 8015f46:	bd70      	pop	{r4, r5, r6, pc}

08015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015f48:	b510      	push	{r4, lr}
 8015f4a:	4604      	mov	r4, r0
 8015f4c:	4608      	mov	r0, r1
 8015f4e:	2300      	movs	r3, #0
 8015f50:	8023      	strh	r3, [r4, #0]
 8015f52:	8063      	strh	r3, [r4, #2]
 8015f54:	6803      	ldr	r3, [r0, #0]
 8015f56:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015f5a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015f5e:	80a1      	strh	r1, [r4, #4]
 8015f60:	80e2      	strh	r2, [r4, #6]
 8015f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f64:	4621      	mov	r1, r4
 8015f66:	4798      	blx	r3
 8015f68:	4620      	mov	r0, r4
 8015f6a:	bd10      	pop	{r4, pc}

08015f6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015f6c:	b530      	push	{r4, r5, lr}
 8015f6e:	8083      	strh	r3, [r0, #4]
 8015f70:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015f74:	80c3      	strh	r3, [r0, #6]
 8015f76:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015f7a:	7203      	strb	r3, [r0, #8]
 8015f7c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015f80:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015f84:	7243      	strb	r3, [r0, #9]
 8015f86:	7a83      	ldrb	r3, [r0, #10]
 8015f88:	6141      	str	r1, [r0, #20]
 8015f8a:	f365 0306 	bfi	r3, r5, #0, #7
 8015f8e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015f92:	8302      	strh	r2, [r0, #24]
 8015f94:	f365 13c7 	bfi	r3, r5, #7, #1
 8015f98:	7283      	strb	r3, [r0, #10]
 8015f9a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015f9e:	72c3      	strb	r3, [r0, #11]
 8015fa0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015fa4:	7303      	strb	r3, [r0, #12]
 8015fa6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015faa:	81c3      	strh	r3, [r0, #14]
 8015fac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015fb0:	8203      	strh	r3, [r0, #16]
 8015fb2:	4b01      	ldr	r3, [pc, #4]	; (8015fb8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015fb4:	6003      	str	r3, [r0, #0]
 8015fb6:	bd30      	pop	{r4, r5, pc}
 8015fb8:	0802e1e4 	.word	0x0802e1e4

08015fbc <_ZNK8touchgfx9ConstFont4findEt>:
 8015fbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015fbe:	6944      	ldr	r4, [r0, #20]
 8015fc0:	b3bc      	cbz	r4, 8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fc2:	88a3      	ldrh	r3, [r4, #4]
 8015fc4:	8b02      	ldrh	r2, [r0, #24]
 8015fc6:	1acb      	subs	r3, r1, r3
 8015fc8:	f102 32ff 	add.w	r2, r2, #4294967295
 8015fcc:	d431      	bmi.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fce:	4293      	cmp	r3, r2
 8015fd0:	dd0c      	ble.n	8015fec <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015fd2:	230e      	movs	r3, #14
 8015fd4:	fb03 4302 	mla	r3, r3, r2, r4
 8015fd8:	889b      	ldrh	r3, [r3, #4]
 8015fda:	1a5b      	subs	r3, r3, r1
 8015fdc:	1ad3      	subs	r3, r2, r3
 8015fde:	429a      	cmp	r2, r3
 8015fe0:	db27      	blt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fe2:	2b00      	cmp	r3, #0
 8015fe4:	bfbc      	itt	lt
 8015fe6:	2302      	movlt	r3, #2
 8015fe8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015fec:	2500      	movs	r5, #0
 8015fee:	260e      	movs	r6, #14
 8015ff0:	4295      	cmp	r5, r2
 8015ff2:	dc1e      	bgt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015ff4:	fb06 4003 	mla	r0, r6, r3, r4
 8015ff8:	8887      	ldrh	r7, [r0, #4]
 8015ffa:	42b9      	cmp	r1, r7
 8015ffc:	d01a      	beq.n	8016034 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015ffe:	d20d      	bcs.n	801601c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016000:	1e5a      	subs	r2, r3, #1
 8016002:	4295      	cmp	r5, r2
 8016004:	dc15      	bgt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016006:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801600a:	1a5b      	subs	r3, r3, r1
 801600c:	1ad3      	subs	r3, r2, r3
 801600e:	429a      	cmp	r2, r3
 8016010:	db0f      	blt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016012:	429d      	cmp	r5, r3
 8016014:	ddec      	ble.n	8015ff0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016016:	1953      	adds	r3, r2, r5
 8016018:	105b      	asrs	r3, r3, #1
 801601a:	e7e9      	b.n	8015ff0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801601c:	1c5d      	adds	r5, r3, #1
 801601e:	42aa      	cmp	r2, r5
 8016020:	db07      	blt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016022:	8a43      	ldrh	r3, [r0, #18]
 8016024:	1acb      	subs	r3, r1, r3
 8016026:	442b      	add	r3, r5
 8016028:	429d      	cmp	r5, r3
 801602a:	dc02      	bgt.n	8016032 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801602c:	429a      	cmp	r2, r3
 801602e:	dadf      	bge.n	8015ff0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016030:	e7f1      	b.n	8016016 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8016032:	2000      	movs	r0, #0
 8016034:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016036 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8016036:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016038:	4604      	mov	r4, r0
 801603a:	4617      	mov	r7, r2
 801603c:	461e      	mov	r6, r3
 801603e:	b911      	cbnz	r1, 8016046 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8016040:	2500      	movs	r5, #0
 8016042:	4628      	mov	r0, r5
 8016044:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016046:	290a      	cmp	r1, #10
 8016048:	d0fa      	beq.n	8016040 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801604a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801604e:	4291      	cmp	r1, r2
 8016050:	d0f6      	beq.n	8016040 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016052:	f242 020b 	movw	r2, #8203	; 0x200b
 8016056:	4291      	cmp	r1, r2
 8016058:	d0f2      	beq.n	8016040 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801605a:	f7ff ffaf 	bl	8015fbc <_ZNK8touchgfx9ConstFont4findEt>
 801605e:	4605      	mov	r5, r0
 8016060:	b950      	cbnz	r0, 8016078 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8016062:	6823      	ldr	r3, [r4, #0]
 8016064:	4620      	mov	r0, r4
 8016066:	691b      	ldr	r3, [r3, #16]
 8016068:	4798      	blx	r3
 801606a:	4601      	mov	r1, r0
 801606c:	4620      	mov	r0, r4
 801606e:	f7ff ffa5 	bl	8015fbc <_ZNK8touchgfx9ConstFont4findEt>
 8016072:	4605      	mov	r5, r0
 8016074:	2800      	cmp	r0, #0
 8016076:	d0e3      	beq.n	8016040 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016078:	6823      	ldr	r3, [r4, #0]
 801607a:	4629      	mov	r1, r5
 801607c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801607e:	4620      	mov	r0, r4
 8016080:	4798      	blx	r3
 8016082:	6038      	str	r0, [r7, #0]
 8016084:	6823      	ldr	r3, [r4, #0]
 8016086:	4620      	mov	r0, r4
 8016088:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801608a:	4798      	blx	r3
 801608c:	7030      	strb	r0, [r6, #0]
 801608e:	e7d8      	b.n	8016042 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016090 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016090:	b538      	push	{r3, r4, r5, lr}
 8016092:	4605      	mov	r5, r0
 8016094:	f002 fb56 	bl	8018744 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016098:	4604      	mov	r4, r0
 801609a:	4628      	mov	r0, r5
 801609c:	f002 fa96 	bl	80185cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80160a0:	2800      	cmp	r0, #0
 80160a2:	bf14      	ite	ne
 80160a4:	2002      	movne	r0, #2
 80160a6:	2000      	moveq	r0, #0
 80160a8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80160ac:	b280      	uxth	r0, r0
 80160ae:	bd38      	pop	{r3, r4, r5, pc}

080160b0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 80160b0:	b538      	push	{r3, r4, r5, lr}
 80160b2:	4605      	mov	r5, r0
 80160b4:	f002 fb46 	bl	8018744 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80160b8:	4604      	mov	r4, r0
 80160ba:	4628      	mov	r0, r5
 80160bc:	f002 fa86 	bl	80185cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80160c0:	2800      	cmp	r0, #0
 80160c2:	bf14      	ite	ne
 80160c4:	2002      	movne	r0, #2
 80160c6:	2000      	moveq	r0, #0
 80160c8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 80160cc:	f040 0001 	orr.w	r0, r0, #1
 80160d0:	b280      	uxth	r0, r0
 80160d2:	bd38      	pop	{r3, r4, r5, pc}

080160d4 <_ZN8touchgfx4clzuEm>:
 80160d4:	4603      	mov	r3, r0
 80160d6:	b1c8      	cbz	r0, 801610c <_ZN8touchgfx4clzuEm+0x38>
 80160d8:	0c02      	lsrs	r2, r0, #16
 80160da:	0412      	lsls	r2, r2, #16
 80160dc:	b9a2      	cbnz	r2, 8016108 <_ZN8touchgfx4clzuEm+0x34>
 80160de:	0403      	lsls	r3, r0, #16
 80160e0:	2010      	movs	r0, #16
 80160e2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80160e6:	bf04      	itt	eq
 80160e8:	021b      	lsleq	r3, r3, #8
 80160ea:	3008      	addeq	r0, #8
 80160ec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80160f0:	bf04      	itt	eq
 80160f2:	011b      	lsleq	r3, r3, #4
 80160f4:	3004      	addeq	r0, #4
 80160f6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80160fa:	bf04      	itt	eq
 80160fc:	009b      	lsleq	r3, r3, #2
 80160fe:	3002      	addeq	r0, #2
 8016100:	2b00      	cmp	r3, #0
 8016102:	db04      	blt.n	801610e <_ZN8touchgfx4clzuEm+0x3a>
 8016104:	3001      	adds	r0, #1
 8016106:	4770      	bx	lr
 8016108:	2000      	movs	r0, #0
 801610a:	e7ea      	b.n	80160e2 <_ZN8touchgfx4clzuEm+0xe>
 801610c:	2020      	movs	r0, #32
 801610e:	4770      	bx	lr

08016110 <_ZN8touchgfx7muldivuEmmmRm>:
 8016110:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8016114:	460f      	mov	r7, r1
 8016116:	4615      	mov	r5, r2
 8016118:	461e      	mov	r6, r3
 801611a:	4601      	mov	r1, r0
 801611c:	b100      	cbz	r0, 8016120 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 801611e:	b927      	cbnz	r7, 801612a <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016120:	2000      	movs	r0, #0
 8016122:	6030      	str	r0, [r6, #0]
 8016124:	b002      	add	sp, #8
 8016126:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801612a:	f7ff ffd3 	bl	80160d4 <_ZN8touchgfx4clzuEm>
 801612e:	b980      	cbnz	r0, 8016152 <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016130:	4638      	mov	r0, r7
 8016132:	f7ff ffcf 	bl	80160d4 <_ZN8touchgfx4clzuEm>
 8016136:	2800      	cmp	r0, #0
 8016138:	dd05      	ble.n	8016146 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 801613a:	4633      	mov	r3, r6
 801613c:	462a      	mov	r2, r5
 801613e:	4638      	mov	r0, r7
 8016140:	f7ff ffe6 	bl	8016110 <_ZN8touchgfx7muldivuEmmmRm>
 8016144:	e7ee      	b.n	8016124 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016146:	f04f 33ff 	mov.w	r3, #4294967295
 801614a:	6033      	str	r3, [r6, #0]
 801614c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016150:	e7e8      	b.n	8016124 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016152:	fa37 f800 	lsrs.w	r8, r7, r0
 8016156:	fb07 f301 	mul.w	r3, r7, r1
 801615a:	d105      	bne.n	8016168 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 801615c:	fbb3 f0f5 	udiv	r0, r3, r5
 8016160:	fb05 3510 	mls	r5, r5, r0, r3
 8016164:	6035      	str	r5, [r6, #0]
 8016166:	e7dd      	b.n	8016124 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016168:	2301      	movs	r3, #1
 801616a:	fa01 fa00 	lsl.w	sl, r1, r0
 801616e:	fa03 f000 	lsl.w	r0, r3, r0
 8016172:	3801      	subs	r0, #1
 8016174:	462a      	mov	r2, r5
 8016176:	4633      	mov	r3, r6
 8016178:	4038      	ands	r0, r7
 801617a:	f7ff ffc9 	bl	8016110 <_ZN8touchgfx7muldivuEmmmRm>
 801617e:	fbba f9f5 	udiv	r9, sl, r5
 8016182:	462a      	mov	r2, r5
 8016184:	4607      	mov	r7, r0
 8016186:	ab01      	add	r3, sp, #4
 8016188:	fb05 a119 	mls	r1, r5, r9, sl
 801618c:	4640      	mov	r0, r8
 801618e:	f7ff ffbf 	bl	8016110 <_ZN8touchgfx7muldivuEmmmRm>
 8016192:	9b01      	ldr	r3, [sp, #4]
 8016194:	6832      	ldr	r2, [r6, #0]
 8016196:	fb08 f409 	mul.w	r4, r8, r9
 801619a:	441a      	add	r2, r3
 801619c:	fbb2 f3f5 	udiv	r3, r2, r5
 80161a0:	441c      	add	r4, r3
 80161a2:	443c      	add	r4, r7
 80161a4:	4420      	add	r0, r4
 80161a6:	fb05 2513 	mls	r5, r5, r3, r2
 80161aa:	e7db      	b.n	8016164 <_ZN8touchgfx7muldivuEmmmRm+0x54>

080161ac <_ZN8touchgfx6muldivElllRl>:
 80161ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80161ae:	2800      	cmp	r0, #0
 80161b0:	bfba      	itte	lt
 80161b2:	4240      	neglt	r0, r0
 80161b4:	f04f 34ff 	movlt.w	r4, #4294967295
 80161b8:	2401      	movge	r4, #1
 80161ba:	2900      	cmp	r1, #0
 80161bc:	bfbc      	itt	lt
 80161be:	4249      	neglt	r1, r1
 80161c0:	4264      	neglt	r4, r4
 80161c2:	2a00      	cmp	r2, #0
 80161c4:	bfb6      	itet	lt
 80161c6:	4265      	neglt	r5, r4
 80161c8:	4625      	movge	r5, r4
 80161ca:	4252      	neglt	r2, r2
 80161cc:	4288      	cmp	r0, r1
 80161ce:	461e      	mov	r6, r3
 80161d0:	bfc2      	ittt	gt
 80161d2:	4603      	movgt	r3, r0
 80161d4:	4608      	movgt	r0, r1
 80161d6:	4619      	movgt	r1, r3
 80161d8:	ab01      	add	r3, sp, #4
 80161da:	f7ff ff99 	bl	8016110 <_ZN8touchgfx7muldivuEmmmRm>
 80161de:	9b01      	ldr	r3, [sp, #4]
 80161e0:	4368      	muls	r0, r5
 80161e2:	435c      	muls	r4, r3
 80161e4:	6034      	str	r4, [r6, #0]
 80161e6:	b002      	add	sp, #8
 80161e8:	bd70      	pop	{r4, r5, r6, pc}

080161ea <_ZN8touchgfx6muldivElll>:
 80161ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80161ec:	4606      	mov	r6, r0
 80161ee:	ab01      	add	r3, sp, #4
 80161f0:	460d      	mov	r5, r1
 80161f2:	4614      	mov	r4, r2
 80161f4:	f7ff ffda 	bl	80161ac <_ZN8touchgfx6muldivElllRl>
 80161f8:	2e00      	cmp	r6, #0
 80161fa:	db20      	blt.n	801623e <_ZN8touchgfx6muldivElll+0x54>
 80161fc:	bf14      	ite	ne
 80161fe:	2301      	movne	r3, #1
 8016200:	2300      	moveq	r3, #0
 8016202:	2d00      	cmp	r5, #0
 8016204:	db1e      	blt.n	8016244 <_ZN8touchgfx6muldivElll+0x5a>
 8016206:	bf14      	ite	ne
 8016208:	2201      	movne	r2, #1
 801620a:	2200      	moveq	r2, #0
 801620c:	2c00      	cmp	r4, #0
 801620e:	fb03 f202 	mul.w	r2, r3, r2
 8016212:	db1a      	blt.n	801624a <_ZN8touchgfx6muldivElll+0x60>
 8016214:	bf14      	ite	ne
 8016216:	2301      	movne	r3, #1
 8016218:	2300      	moveq	r3, #0
 801621a:	4353      	muls	r3, r2
 801621c:	2b01      	cmp	r3, #1
 801621e:	d117      	bne.n	8016250 <_ZN8touchgfx6muldivElll+0x66>
 8016220:	9b01      	ldr	r3, [sp, #4]
 8016222:	2c00      	cmp	r4, #0
 8016224:	bfb8      	it	lt
 8016226:	4264      	neglt	r4, r4
 8016228:	2b00      	cmp	r3, #0
 801622a:	f104 0401 	add.w	r4, r4, #1
 801622e:	bfb8      	it	lt
 8016230:	425b      	neglt	r3, r3
 8016232:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016236:	db00      	blt.n	801623a <_ZN8touchgfx6muldivElll+0x50>
 8016238:	3001      	adds	r0, #1
 801623a:	b002      	add	sp, #8
 801623c:	bd70      	pop	{r4, r5, r6, pc}
 801623e:	f04f 33ff 	mov.w	r3, #4294967295
 8016242:	e7de      	b.n	8016202 <_ZN8touchgfx6muldivElll+0x18>
 8016244:	f04f 32ff 	mov.w	r2, #4294967295
 8016248:	e7e0      	b.n	801620c <_ZN8touchgfx6muldivElll+0x22>
 801624a:	f04f 33ff 	mov.w	r3, #4294967295
 801624e:	e7e4      	b.n	801621a <_ZN8touchgfx6muldivElll+0x30>
 8016250:	3301      	adds	r3, #1
 8016252:	d1f2      	bne.n	801623a <_ZN8touchgfx6muldivElll+0x50>
 8016254:	9b01      	ldr	r3, [sp, #4]
 8016256:	2c00      	cmp	r4, #0
 8016258:	bfb8      	it	lt
 801625a:	4264      	neglt	r4, r4
 801625c:	2b00      	cmp	r3, #0
 801625e:	bfb8      	it	lt
 8016260:	425b      	neglt	r3, r3
 8016262:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8016266:	bfc8      	it	gt
 8016268:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801626c:	e7e5      	b.n	801623a <_ZN8touchgfx6muldivElll+0x50>

0801626e <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801626e:	2000      	movs	r0, #0
 8016270:	4770      	bx	lr

08016272 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8016272:	2001      	movs	r0, #1
 8016274:	4770      	bx	lr

08016276 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8016276:	2002      	movs	r0, #2
 8016278:	4770      	bx	lr

0801627a <_ZN8touchgfx6ScreenD1Ev>:
 801627a:	4770      	bx	lr

0801627c <_ZN8touchgfx12GestureEventD1Ev>:
 801627c:	4770      	bx	lr

0801627e <_ZN8touchgfx9DragEventD1Ev>:
 801627e:	4770      	bx	lr

08016280 <_ZN8touchgfx10ClickEventD1Ev>:
 8016280:	4770      	bx	lr

08016282 <_ZN8touchgfx10ClickEventD0Ev>:
 8016282:	b510      	push	{r4, lr}
 8016284:	210c      	movs	r1, #12
 8016286:	4604      	mov	r4, r0
 8016288:	f012 fd51 	bl	8028d2e <_ZdlPvj>
 801628c:	4620      	mov	r0, r4
 801628e:	bd10      	pop	{r4, pc}

08016290 <_ZN8touchgfx9DragEventD0Ev>:
 8016290:	b510      	push	{r4, lr}
 8016292:	2110      	movs	r1, #16
 8016294:	4604      	mov	r4, r0
 8016296:	f012 fd4a 	bl	8028d2e <_ZdlPvj>
 801629a:	4620      	mov	r0, r4
 801629c:	bd10      	pop	{r4, pc}

0801629e <_ZN8touchgfx12GestureEventD0Ev>:
 801629e:	b510      	push	{r4, lr}
 80162a0:	210c      	movs	r1, #12
 80162a2:	4604      	mov	r4, r0
 80162a4:	f012 fd43 	bl	8028d2e <_ZdlPvj>
 80162a8:	4620      	mov	r0, r4
 80162aa:	bd10      	pop	{r4, pc}

080162ac <_ZN8touchgfx6ScreenD0Ev>:
 80162ac:	b510      	push	{r4, lr}
 80162ae:	213c      	movs	r1, #60	; 0x3c
 80162b0:	4604      	mov	r4, r0
 80162b2:	f012 fd3c 	bl	8028d2e <_ZdlPvj>
 80162b6:	4620      	mov	r0, r4
 80162b8:	bd10      	pop	{r4, pc}
	...

080162bc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80162bc:	b530      	push	{r4, r5, lr}
 80162be:	460d      	mov	r5, r1
 80162c0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80162c2:	b087      	sub	sp, #28
 80162c4:	4604      	mov	r4, r0
 80162c6:	b301      	cbz	r1, 801630a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80162c8:	a801      	add	r0, sp, #4
 80162ca:	f7ff fe3d 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162ce:	892a      	ldrh	r2, [r5, #8]
 80162d0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80162d4:	7928      	ldrb	r0, [r5, #4]
 80162d6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80162da:	f88d 0010 	strb.w	r0, [sp, #16]
 80162de:	1ad2      	subs	r2, r2, r3
 80162e0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 80162e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80162e4:	f8ad 1012 	strh.w	r1, [sp, #18]
 80162e8:	441a      	add	r2, r3
 80162ea:	896b      	ldrh	r3, [r5, #10]
 80162ec:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80162f0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80162f4:	1b5b      	subs	r3, r3, r5
 80162f6:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80162f8:	442b      	add	r3, r5
 80162fa:	4d05      	ldr	r5, [pc, #20]	; (8016310 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80162fc:	9503      	str	r5, [sp, #12]
 80162fe:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016302:	6803      	ldr	r3, [r0, #0]
 8016304:	a903      	add	r1, sp, #12
 8016306:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016308:	4798      	blx	r3
 801630a:	b007      	add	sp, #28
 801630c:	bd30      	pop	{r4, r5, pc}
 801630e:	bf00      	nop
 8016310:	0802e26c 	.word	0x0802e26c

08016314 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8016314:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016318:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801631a:	b08a      	sub	sp, #40	; 0x28
 801631c:	4604      	mov	r4, r0
 801631e:	460d      	mov	r5, r1
 8016320:	b113      	cbz	r3, 8016328 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8016322:	790b      	ldrb	r3, [r1, #4]
 8016324:	2b00      	cmp	r3, #0
 8016326:	d044      	beq.n	80163b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016328:	f104 0804 	add.w	r8, r4, #4
 801632c:	4641      	mov	r1, r8
 801632e:	a803      	add	r0, sp, #12
 8016330:	f7ff fe0a 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016334:	792b      	ldrb	r3, [r5, #4]
 8016336:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801633a:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801633e:	b983      	cbnz	r3, 8016362 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8016340:	892a      	ldrh	r2, [r5, #8]
 8016342:	88e9      	ldrh	r1, [r5, #6]
 8016344:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016348:	1b92      	subs	r2, r2, r6
 801634a:	1bc9      	subs	r1, r1, r7
 801634c:	9301      	str	r3, [sp, #4]
 801634e:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8016352:	9300      	str	r3, [sp, #0]
 8016354:	b212      	sxth	r2, r2
 8016356:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801635a:	b209      	sxth	r1, r1
 801635c:	4640      	mov	r0, r8
 801635e:	f7f9 fa79 	bl	800f854 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8016362:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8016364:	b329      	cbz	r1, 80163b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016366:	a805      	add	r0, sp, #20
 8016368:	f7ff fdee 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801636c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016370:	792b      	ldrb	r3, [r5, #4]
 8016372:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8016374:	f88d 3020 	strb.w	r3, [sp, #32]
 8016378:	1abf      	subs	r7, r7, r2
 801637a:	88ea      	ldrh	r2, [r5, #6]
 801637c:	4417      	add	r7, r2
 801637e:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016380:	4417      	add	r7, r2
 8016382:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8016386:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801638a:	1ab6      	subs	r6, r6, r2
 801638c:	892a      	ldrh	r2, [r5, #8]
 801638e:	4416      	add	r6, r2
 8016390:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8016392:	4416      	add	r6, r2
 8016394:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016398:	4a07      	ldr	r2, [pc, #28]	; (80163b8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801639a:	9207      	str	r2, [sp, #28]
 801639c:	2600      	movs	r6, #0
 801639e:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80163a2:	6803      	ldr	r3, [r0, #0]
 80163a4:	a907      	add	r1, sp, #28
 80163a6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80163a8:	4798      	blx	r3
 80163aa:	792b      	ldrb	r3, [r5, #4]
 80163ac:	b10b      	cbz	r3, 80163b2 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80163ae:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80163b2:	b00a      	add	sp, #40	; 0x28
 80163b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80163b8:	0802e244 	.word	0x0802e244

080163bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80163bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80163c0:	460c      	mov	r4, r1
 80163c2:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80163c4:	b088      	sub	sp, #32
 80163c6:	4605      	mov	r5, r0
 80163c8:	2900      	cmp	r1, #0
 80163ca:	d06d      	beq.n	80164a8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80163cc:	4668      	mov	r0, sp
 80163ce:	f7ff fdbb 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80163d2:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80163d4:	88e3      	ldrh	r3, [r4, #6]
 80163d6:	f9bd 8000 	ldrsh.w	r8, [sp]
 80163da:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80163de:	440b      	add	r3, r1
 80163e0:	b21b      	sxth	r3, r3
 80163e2:	4543      	cmp	r3, r8
 80163e4:	db31      	blt.n	801644a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163e6:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80163ea:	44c4      	add	ip, r8
 80163ec:	fa0f fc8c 	sxth.w	ip, ip
 80163f0:	4563      	cmp	r3, ip
 80163f2:	da2a      	bge.n	801644a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163f4:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80163f6:	8926      	ldrh	r6, [r4, #8]
 80163f8:	4416      	add	r6, r2
 80163fa:	b236      	sxth	r6, r6
 80163fc:	42be      	cmp	r6, r7
 80163fe:	db24      	blt.n	801644a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016400:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8016404:	4438      	add	r0, r7
 8016406:	b200      	sxth	r0, r0
 8016408:	4286      	cmp	r6, r0
 801640a:	da1e      	bge.n	801644a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801640c:	8963      	ldrh	r3, [r4, #10]
 801640e:	4419      	add	r1, r3
 8016410:	b209      	sxth	r1, r1
 8016412:	4541      	cmp	r1, r8
 8016414:	db08      	blt.n	8016428 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016416:	4561      	cmp	r1, ip
 8016418:	da06      	bge.n	8016428 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801641a:	89a3      	ldrh	r3, [r4, #12]
 801641c:	441a      	add	r2, r3
 801641e:	b212      	sxth	r2, r2
 8016420:	42ba      	cmp	r2, r7
 8016422:	db01      	blt.n	8016428 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016424:	4282      	cmp	r2, r0
 8016426:	db10      	blt.n	801644a <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016428:	4b21      	ldr	r3, [pc, #132]	; (80164b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801642a:	9304      	str	r3, [sp, #16]
 801642c:	2302      	movs	r3, #2
 801642e:	f88d 3014 	strb.w	r3, [sp, #20]
 8016432:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016434:	2300      	movs	r3, #0
 8016436:	f8ad 3016 	strh.w	r3, [sp, #22]
 801643a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801643e:	f8ad 301a 	strh.w	r3, [sp, #26]
 8016442:	6803      	ldr	r3, [r0, #0]
 8016444:	a904      	add	r1, sp, #16
 8016446:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016448:	4798      	blx	r3
 801644a:	1d29      	adds	r1, r5, #4
 801644c:	a802      	add	r0, sp, #8
 801644e:	f7ff fd7b 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016452:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016456:	88e0      	ldrh	r0, [r4, #6]
 8016458:	7921      	ldrb	r1, [r4, #4]
 801645a:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801645e:	8922      	ldrh	r2, [r4, #8]
 8016460:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8016462:	f88d 1014 	strb.w	r1, [sp, #20]
 8016466:	eba3 0808 	sub.w	r8, r3, r8
 801646a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801646e:	1bdf      	subs	r7, r3, r7
 8016470:	b2bb      	uxth	r3, r7
 8016472:	fa1f f888 	uxth.w	r8, r8
 8016476:	8967      	ldrh	r7, [r4, #10]
 8016478:	89a4      	ldrh	r4, [r4, #12]
 801647a:	4440      	add	r0, r8
 801647c:	4460      	add	r0, ip
 801647e:	441a      	add	r2, r3
 8016480:	44b8      	add	r8, r7
 8016482:	4423      	add	r3, r4
 8016484:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016488:	4433      	add	r3, r6
 801648a:	4432      	add	r2, r6
 801648c:	44e0      	add	r8, ip
 801648e:	4c09      	ldr	r4, [pc, #36]	; (80164b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016490:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8016492:	9404      	str	r4, [sp, #16]
 8016494:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016498:	f8ad 801a 	strh.w	r8, [sp, #26]
 801649c:	f8ad 301c 	strh.w	r3, [sp, #28]
 80164a0:	6803      	ldr	r3, [r0, #0]
 80164a2:	a904      	add	r1, sp, #16
 80164a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80164a6:	4798      	blx	r3
 80164a8:	b008      	add	sp, #32
 80164aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80164ae:	bf00      	nop
 80164b0:	0802e244 	.word	0x0802e244
 80164b4:	0802e258 	.word	0x0802e258

080164b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80164b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80164ba:	4604      	mov	r4, r0
 80164bc:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80164c0:	3201      	adds	r2, #1
 80164c2:	d112      	bne.n	80164ea <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80164c4:	6803      	ldr	r3, [r0, #0]
 80164c6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80164ca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80164ce:	f8ad 1004 	strh.w	r1, [sp, #4]
 80164d2:	2500      	movs	r5, #0
 80164d4:	9500      	str	r5, [sp, #0]
 80164d6:	466d      	mov	r5, sp
 80164d8:	4629      	mov	r1, r5
 80164da:	f8ad 2006 	strh.w	r2, [sp, #6]
 80164de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80164e0:	4798      	blx	r3
 80164e2:	e895 0003 	ldmia.w	r5, {r0, r1}
 80164e6:	e884 0003 	stmia.w	r4, {r0, r1}
 80164ea:	4620      	mov	r0, r4
 80164ec:	b003      	add	sp, #12
 80164ee:	bd30      	pop	{r4, r5, pc}

080164f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80164f0:	b513      	push	{r0, r1, r4, lr}
 80164f2:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80164f6:	3301      	adds	r3, #1
 80164f8:	4604      	mov	r4, r0
 80164fa:	d109      	bne.n	8016510 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80164fc:	4601      	mov	r1, r0
 80164fe:	4668      	mov	r0, sp
 8016500:	f7ff fd22 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016504:	f8bd 3000 	ldrh.w	r3, [sp]
 8016508:	8423      	strh	r3, [r4, #32]
 801650a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801650e:	8463      	strh	r3, [r4, #34]	; 0x22
 8016510:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8016514:	b002      	add	sp, #8
 8016516:	bd10      	pop	{r4, pc}

08016518 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016518:	b513      	push	{r0, r1, r4, lr}
 801651a:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801651e:	3301      	adds	r3, #1
 8016520:	4604      	mov	r4, r0
 8016522:	d109      	bne.n	8016538 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8016524:	4601      	mov	r1, r0
 8016526:	4668      	mov	r0, sp
 8016528:	f7ff fd0e 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801652c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016530:	8423      	strh	r3, [r4, #32]
 8016532:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016536:	8463      	strh	r3, [r4, #34]	; 0x22
 8016538:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801653c:	b002      	add	sp, #8
 801653e:	bd10      	pop	{r4, pc}

08016540 <_ZN8touchgfx6ScreenC1Ev>:
 8016540:	b570      	push	{r4, r5, r6, lr}
 8016542:	4605      	mov	r5, r0
 8016544:	4b16      	ldr	r3, [pc, #88]	; (80165a0 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8016546:	f845 3b04 	str.w	r3, [r5], #4
 801654a:	2300      	movs	r3, #0
 801654c:	8103      	strh	r3, [r0, #8]
 801654e:	8143      	strh	r3, [r0, #10]
 8016550:	8183      	strh	r3, [r0, #12]
 8016552:	81c3      	strh	r3, [r0, #14]
 8016554:	8203      	strh	r3, [r0, #16]
 8016556:	8243      	strh	r3, [r0, #18]
 8016558:	8283      	strh	r3, [r0, #20]
 801655a:	82c3      	strh	r3, [r0, #22]
 801655c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016560:	6203      	str	r3, [r0, #32]
 8016562:	8483      	strh	r3, [r0, #36]	; 0x24
 8016564:	84c3      	strh	r3, [r0, #38]	; 0x26
 8016566:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801656a:	4a0e      	ldr	r2, [pc, #56]	; (80165a4 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801656c:	6343      	str	r3, [r0, #52]	; 0x34
 801656e:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8016572:	4b0d      	ldr	r3, [pc, #52]	; (80165a8 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8016574:	6042      	str	r2, [r0, #4]
 8016576:	f9b3 6000 	ldrsh.w	r6, [r3]
 801657a:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801657c:	4a0b      	ldr	r2, [pc, #44]	; (80165ac <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801657e:	4604      	mov	r4, r0
 8016580:	2101      	movs	r1, #1
 8016582:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8016586:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801658a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801658e:	4628      	mov	r0, r5
 8016590:	4798      	blx	r3
 8016592:	6863      	ldr	r3, [r4, #4]
 8016594:	4628      	mov	r0, r5
 8016596:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016598:	4631      	mov	r1, r6
 801659a:	4798      	blx	r3
 801659c:	4620      	mov	r0, r4
 801659e:	bd70      	pop	{r4, r5, r6, pc}
 80165a0:	0802e280 	.word	0x0802e280
 80165a4:	0802dae4 	.word	0x0802dae4
 80165a8:	20012daa 	.word	0x20012daa
 80165ac:	20012da8 	.word	0x20012da8

080165b0 <_ZN8touchgfx6Screen4drawEv>:
 80165b0:	b507      	push	{r0, r1, r2, lr}
 80165b2:	4b09      	ldr	r3, [pc, #36]	; (80165d8 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80165b4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80165b8:	4b08      	ldr	r3, [pc, #32]	; (80165dc <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80165ba:	f8ad 2004 	strh.w	r2, [sp, #4]
 80165be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80165c2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80165c6:	6803      	ldr	r3, [r0, #0]
 80165c8:	2100      	movs	r1, #0
 80165ca:	9100      	str	r1, [sp, #0]
 80165cc:	689b      	ldr	r3, [r3, #8]
 80165ce:	4669      	mov	r1, sp
 80165d0:	4798      	blx	r3
 80165d2:	b003      	add	sp, #12
 80165d4:	f85d fb04 	ldr.w	pc, [sp], #4
 80165d8:	20012da8 	.word	0x20012da8
 80165dc:	20012daa 	.word	0x20012daa

080165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80165e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165e4:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80165e8:	2b00      	cmp	r3, #0
 80165ea:	b089      	sub	sp, #36	; 0x24
 80165ec:	4680      	mov	r8, r0
 80165ee:	460c      	mov	r4, r1
 80165f0:	4615      	mov	r5, r2
 80165f2:	dd0e      	ble.n	8016612 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80165f4:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80165f8:	2b00      	cmp	r3, #0
 80165fa:	dd0a      	ble.n	8016612 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80165fc:	4628      	mov	r0, r5
 80165fe:	f7ff ff5b 	bl	80164b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016602:	4621      	mov	r1, r4
 8016604:	f7fe fa3d 	bl	8014a82 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016608:	69eb      	ldr	r3, [r5, #28]
 801660a:	b928      	cbnz	r0, 8016618 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801660c:	461d      	mov	r5, r3
 801660e:	2b00      	cmp	r3, #0
 8016610:	d1f4      	bne.n	80165fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8016612:	b009      	add	sp, #36	; 0x24
 8016614:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016618:	ae04      	add	r6, sp, #16
 801661a:	2b00      	cmp	r3, #0
 801661c:	f000 80b5 	beq.w	801678a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016620:	682b      	ldr	r3, [r5, #0]
 8016622:	4629      	mov	r1, r5
 8016624:	68db      	ldr	r3, [r3, #12]
 8016626:	a802      	add	r0, sp, #8
 8016628:	4798      	blx	r3
 801662a:	4628      	mov	r0, r5
 801662c:	f7ff ff60 	bl	80164f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016630:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8016634:	4407      	add	r7, r0
 8016636:	4628      	mov	r0, r5
 8016638:	f7ff ff6e 	bl	8016518 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801663c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016640:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8016644:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016648:	4418      	add	r0, r3
 801664a:	4621      	mov	r1, r4
 801664c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016650:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016654:	b23f      	sxth	r7, r7
 8016656:	4630      	mov	r0, r6
 8016658:	f8ad 3016 	strh.w	r3, [sp, #22]
 801665c:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016660:	f7f9 f9dc 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8016664:	4628      	mov	r0, r5
 8016666:	f7ff ff27 	bl	80164b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801666a:	4602      	mov	r2, r0
 801666c:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016670:	ab06      	add	r3, sp, #24
 8016672:	e883 0003 	stmia.w	r3, {r0, r1}
 8016676:	4611      	mov	r1, r2
 8016678:	4618      	mov	r0, r3
 801667a:	f7f9 f9cf 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801667e:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8016682:	f9b4 1000 	ldrsh.w	r1, [r4]
 8016686:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801668a:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801668e:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8016692:	4299      	cmp	r1, r3
 8016694:	d10b      	bne.n	80166ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016696:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801669a:	4552      	cmp	r2, sl
 801669c:	d107      	bne.n	80166ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801669e:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80166a2:	455a      	cmp	r2, fp
 80166a4:	d103      	bne.n	80166ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80166a6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80166aa:	454a      	cmp	r2, r9
 80166ac:	d06d      	beq.n	801678a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80166ae:	f1bb 0f00 	cmp.w	fp, #0
 80166b2:	dd65      	ble.n	8016780 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80166b4:	f1b9 0f00 	cmp.w	r9, #0
 80166b8:	dd62      	ble.n	8016780 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80166ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80166be:	fa1f f08a 	uxth.w	r0, sl
 80166c2:	4552      	cmp	r2, sl
 80166c4:	9000      	str	r0, [sp, #0]
 80166c6:	da12      	bge.n	80166ee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80166c8:	9301      	str	r3, [sp, #4]
 80166ca:	9b00      	ldr	r3, [sp, #0]
 80166cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80166d0:	f8ad 2012 	strh.w	r2, [sp, #18]
 80166d4:	1a9a      	subs	r2, r3, r2
 80166d6:	f8ad 1010 	strh.w	r1, [sp, #16]
 80166da:	f8ad 0014 	strh.w	r0, [sp, #20]
 80166de:	f8ad 2016 	strh.w	r2, [sp, #22]
 80166e2:	69ea      	ldr	r2, [r5, #28]
 80166e4:	4631      	mov	r1, r6
 80166e6:	4640      	mov	r0, r8
 80166e8:	f7ff ff7a 	bl	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166ec:	9b01      	ldr	r3, [sp, #4]
 80166ee:	f9b4 2000 	ldrsh.w	r2, [r4]
 80166f2:	429a      	cmp	r2, r3
 80166f4:	b29f      	uxth	r7, r3
 80166f6:	da0d      	bge.n	8016714 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80166f8:	f8ad 2010 	strh.w	r2, [sp, #16]
 80166fc:	1aba      	subs	r2, r7, r2
 80166fe:	f8ad a012 	strh.w	sl, [sp, #18]
 8016702:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016706:	f8ad 9016 	strh.w	r9, [sp, #22]
 801670a:	69ea      	ldr	r2, [r5, #28]
 801670c:	4631      	mov	r1, r6
 801670e:	4640      	mov	r0, r8
 8016710:	f7ff ff66 	bl	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016714:	8822      	ldrh	r2, [r4, #0]
 8016716:	88a3      	ldrh	r3, [r4, #4]
 8016718:	445f      	add	r7, fp
 801671a:	4413      	add	r3, r2
 801671c:	b29b      	uxth	r3, r3
 801671e:	b2bf      	uxth	r7, r7
 8016720:	b23a      	sxth	r2, r7
 8016722:	b219      	sxth	r1, r3
 8016724:	4291      	cmp	r1, r2
 8016726:	dd0d      	ble.n	8016744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016728:	1bdb      	subs	r3, r3, r7
 801672a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801672e:	f8ad a012 	strh.w	sl, [sp, #18]
 8016732:	f8ad 3014 	strh.w	r3, [sp, #20]
 8016736:	f8ad 9016 	strh.w	r9, [sp, #22]
 801673a:	69ea      	ldr	r2, [r5, #28]
 801673c:	4631      	mov	r1, r6
 801673e:	4640      	mov	r0, r8
 8016740:	f7ff ff4e 	bl	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016744:	88e2      	ldrh	r2, [r4, #6]
 8016746:	8863      	ldrh	r3, [r4, #2]
 8016748:	4413      	add	r3, r2
 801674a:	9a00      	ldr	r2, [sp, #0]
 801674c:	444a      	add	r2, r9
 801674e:	b29b      	uxth	r3, r3
 8016750:	fa1f f982 	uxth.w	r9, r2
 8016754:	fa0f f289 	sxth.w	r2, r9
 8016758:	b219      	sxth	r1, r3
 801675a:	428a      	cmp	r2, r1
 801675c:	da15      	bge.n	801678a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801675e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8016762:	f9b4 0000 	ldrsh.w	r0, [r4]
 8016766:	f8ad 1014 	strh.w	r1, [sp, #20]
 801676a:	eba3 0309 	sub.w	r3, r3, r9
 801676e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016772:	f8ad 2012 	strh.w	r2, [sp, #18]
 8016776:	f8ad 3016 	strh.w	r3, [sp, #22]
 801677a:	69ea      	ldr	r2, [r5, #28]
 801677c:	4631      	mov	r1, r6
 801677e:	e001      	b.n	8016784 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016780:	69ea      	ldr	r2, [r5, #28]
 8016782:	4621      	mov	r1, r4
 8016784:	4640      	mov	r0, r8
 8016786:	f7ff ff2b 	bl	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801678a:	4628      	mov	r0, r5
 801678c:	f7ff fe94 	bl	80164b8 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016790:	6861      	ldr	r1, [r4, #4]
 8016792:	4602      	mov	r2, r0
 8016794:	6820      	ldr	r0, [r4, #0]
 8016796:	4633      	mov	r3, r6
 8016798:	c303      	stmia	r3!, {r0, r1}
 801679a:	4611      	mov	r1, r2
 801679c:	4630      	mov	r0, r6
 801679e:	f7f9 f93d 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 80167a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80167a6:	2b00      	cmp	r3, #0
 80167a8:	f77f af33 	ble.w	8016612 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80167ac:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80167b0:	2b00      	cmp	r3, #0
 80167b2:	f77f af2e 	ble.w	8016612 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80167b6:	4628      	mov	r0, r5
 80167b8:	f7ff fe9a 	bl	80164f0 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80167bc:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80167c0:	1a18      	subs	r0, r3, r0
 80167c2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80167c6:	4628      	mov	r0, r5
 80167c8:	f7ff fea6 	bl	8016518 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80167cc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80167d0:	1a18      	subs	r0, r3, r0
 80167d2:	f8ad 0012 	strh.w	r0, [sp, #18]
 80167d6:	682b      	ldr	r3, [r5, #0]
 80167d8:	4631      	mov	r1, r6
 80167da:	689b      	ldr	r3, [r3, #8]
 80167dc:	4628      	mov	r0, r5
 80167de:	4798      	blx	r3
 80167e0:	e717      	b.n	8016612 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080167e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80167e2:	b570      	push	{r4, r5, r6, lr}
 80167e4:	460c      	mov	r4, r1
 80167e6:	b086      	sub	sp, #24
 80167e8:	1d06      	adds	r6, r0, #4
 80167ea:	2300      	movs	r3, #0
 80167ec:	4631      	mov	r1, r6
 80167ee:	4605      	mov	r5, r0
 80167f0:	a802      	add	r0, sp, #8
 80167f2:	9301      	str	r3, [sp, #4]
 80167f4:	f7ff fba8 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167f8:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80167fc:	8822      	ldrh	r2, [r4, #0]
 80167fe:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016802:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016806:	f8ad 0014 	strh.w	r0, [sp, #20]
 801680a:	1ad2      	subs	r2, r2, r3
 801680c:	8863      	ldrh	r3, [r4, #2]
 801680e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016812:	1a5b      	subs	r3, r3, r1
 8016814:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016818:	f8ad 1016 	strh.w	r1, [sp, #22]
 801681c:	aa01      	add	r2, sp, #4
 801681e:	a904      	add	r1, sp, #16
 8016820:	4630      	mov	r0, r6
 8016822:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016826:	f7f9 f9d1 	bl	800fbcc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801682a:	9a01      	ldr	r2, [sp, #4]
 801682c:	b11a      	cbz	r2, 8016836 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801682e:	4621      	mov	r1, r4
 8016830:	4628      	mov	r0, r5
 8016832:	f7ff fed5 	bl	80165e0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016836:	b006      	add	sp, #24
 8016838:	bd70      	pop	{r4, r5, r6, pc}

0801683a <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801683a:	b530      	push	{r4, r5, lr}
 801683c:	4602      	mov	r2, r0
 801683e:	4604      	mov	r4, r0
 8016840:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016844:	b085      	sub	sp, #20
 8016846:	460d      	mov	r5, r1
 8016848:	6851      	ldr	r1, [r2, #4]
 801684a:	466b      	mov	r3, sp
 801684c:	c303      	stmia	r3!, {r0, r1}
 801684e:	4629      	mov	r1, r5
 8016850:	4668      	mov	r0, sp
 8016852:	f7f9 f8e3 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 8016856:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801685a:	b12b      	cbz	r3, 8016868 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 801685c:	4669      	mov	r1, sp
 801685e:	4620      	mov	r0, r4
 8016860:	f7ff ffbf 	bl	80167e2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016864:	b005      	add	sp, #20
 8016866:	bd30      	pop	{r4, r5, pc}
 8016868:	3404      	adds	r4, #4
 801686a:	4621      	mov	r1, r4
 801686c:	a802      	add	r0, sp, #8
 801686e:	f7ff fb6b 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016872:	f8bd 3000 	ldrh.w	r3, [sp]
 8016876:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801687a:	1a9b      	subs	r3, r3, r2
 801687c:	f8ad 3000 	strh.w	r3, [sp]
 8016880:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016884:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016888:	4669      	mov	r1, sp
 801688a:	1a9b      	subs	r3, r3, r2
 801688c:	4620      	mov	r0, r4
 801688e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016892:	f7f9 f962 	bl	800fb5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016896:	e7e5      	b.n	8016864 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016898 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016898:	680a      	ldr	r2, [r1, #0]
 801689a:	460b      	mov	r3, r1
 801689c:	6992      	ldr	r2, [r2, #24]
 801689e:	1d01      	adds	r1, r0, #4
 80168a0:	4618      	mov	r0, r3
 80168a2:	4710      	bx	r2

080168a4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80168a4:	4298      	cmp	r0, r3
 80168a6:	d200      	bcs.n	80168aa <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80168a8:	b913      	cbnz	r3, 80168b0 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80168aa:	440a      	add	r2, r1
 80168ac:	b210      	sxth	r0, r2
 80168ae:	4770      	bx	lr
 80168b0:	ee07 0a90 	vmov	s15, r0
 80168b4:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80168b8:	ee07 3a90 	vmov	s15, r3
 80168bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80168c0:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80168c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80168c8:	ee37 7a66 	vsub.f32	s14, s14, s13
 80168cc:	ee07 2a90 	vmov	s15, r2
 80168d0:	ee67 5a07 	vmul.f32	s11, s14, s14
 80168d4:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80168d8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80168dc:	ee07 1a90 	vmov	s15, r1
 80168e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80168e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80168e8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80168ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168f4:	bfcc      	ite	gt
 80168f6:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80168fa:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80168fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016902:	ee17 3a90 	vmov	r3, s15
 8016906:	b218      	sxth	r0, r3
 8016908:	4770      	bx	lr

0801690a <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 801690a:	4298      	cmp	r0, r3
 801690c:	d200      	bcs.n	8016910 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 801690e:	b913      	cbnz	r3, 8016916 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016910:	440a      	add	r2, r1
 8016912:	b210      	sxth	r0, r2
 8016914:	4770      	bx	lr
 8016916:	ee07 2a90 	vmov	s15, r2
 801691a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 801691e:	ee07 0a90 	vmov	s15, r0
 8016922:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016926:	ee67 7a27 	vmul.f32	s15, s14, s15
 801692a:	ee07 3a10 	vmov	s14, r3
 801692e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016932:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016936:	ee07 1a90 	vmov	s15, r1
 801693a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801693e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016942:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016946:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801694a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801694e:	bfcc      	ite	gt
 8016950:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016954:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016958:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801695c:	ee17 3a90 	vmov	r3, s15
 8016960:	b218      	sxth	r0, r3
 8016962:	4770      	bx	lr

08016964 <_ZN8touchgfx12TextProviderC1Ev>:
 8016964:	b538      	push	{r3, r4, r5, lr}
 8016966:	2500      	movs	r5, #0
 8016968:	2302      	movs	r3, #2
 801696a:	4604      	mov	r4, r0
 801696c:	e9c0 5500 	strd	r5, r5, [r0]
 8016970:	7403      	strb	r3, [r0, #16]
 8016972:	6145      	str	r5, [r0, #20]
 8016974:	7605      	strb	r5, [r0, #24]
 8016976:	83c5      	strh	r5, [r0, #30]
 8016978:	8405      	strh	r5, [r0, #32]
 801697a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801697c:	8705      	strh	r5, [r0, #56]	; 0x38
 801697e:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016980:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016984:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016988:	220e      	movs	r2, #14
 801698a:	4629      	mov	r1, r5
 801698c:	304c      	adds	r0, #76	; 0x4c
 801698e:	f013 f9e6 	bl	8029d5e <memset>
 8016992:	2301      	movs	r3, #1
 8016994:	4620      	mov	r0, r4
 8016996:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 801699a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801699e:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80169a2:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80169a6:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80169aa:	f7f1 fb71 	bl	8008090 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80169ae:	4620      	mov	r0, r4
 80169b0:	bd38      	pop	{r3, r4, r5, pc}

080169b2 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80169b2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80169b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80169b8:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80169ba:	fab0 f080 	clz	r0, r0
 80169be:	0940      	lsrs	r0, r0, #5
 80169c0:	4770      	bx	lr

080169c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80169c2:	b530      	push	{r4, r5, lr}
 80169c4:	2500      	movs	r5, #0
 80169c6:	2401      	movs	r4, #1
 80169c8:	6843      	ldr	r3, [r0, #4]
 80169ca:	b913      	cbnz	r3, 80169d2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80169cc:	6803      	ldr	r3, [r0, #0]
 80169ce:	b313      	cbz	r3, 8016a16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80169d0:	6043      	str	r3, [r0, #4]
 80169d2:	7e03      	ldrb	r3, [r0, #24]
 80169d4:	b143      	cbz	r3, 80169e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80169d6:	6943      	ldr	r3, [r0, #20]
 80169d8:	b12b      	cbz	r3, 80169e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80169da:	881a      	ldrh	r2, [r3, #0]
 80169dc:	b11a      	cbz	r2, 80169e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80169de:	1c9a      	adds	r2, r3, #2
 80169e0:	6142      	str	r2, [r0, #20]
 80169e2:	8818      	ldrh	r0, [r3, #0]
 80169e4:	bd30      	pop	{r4, r5, pc}
 80169e6:	7605      	strb	r5, [r0, #24]
 80169e8:	6843      	ldr	r3, [r0, #4]
 80169ea:	8819      	ldrh	r1, [r3, #0]
 80169ec:	b199      	cbz	r1, 8016a16 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80169ee:	1c9a      	adds	r2, r3, #2
 80169f0:	2902      	cmp	r1, #2
 80169f2:	6042      	str	r2, [r0, #4]
 80169f4:	d1f5      	bne.n	80169e2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80169f6:	7c03      	ldrb	r3, [r0, #16]
 80169f8:	2b01      	cmp	r3, #1
 80169fa:	d8e5      	bhi.n	80169c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80169fc:	1c5a      	adds	r2, r3, #1
 80169fe:	3302      	adds	r3, #2
 8016a00:	7402      	strb	r2, [r0, #16]
 8016a02:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016a06:	6143      	str	r3, [r0, #20]
 8016a08:	2b00      	cmp	r3, #0
 8016a0a:	d0dd      	beq.n	80169c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016a0c:	881b      	ldrh	r3, [r3, #0]
 8016a0e:	2b00      	cmp	r3, #0
 8016a10:	d0da      	beq.n	80169c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016a12:	7604      	strb	r4, [r0, #24]
 8016a14:	e7d8      	b.n	80169c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016a16:	2000      	movs	r0, #0
 8016a18:	e7e4      	b.n	80169e4 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016a1a:	b430      	push	{r4, r5}
 8016a1c:	6001      	str	r1, [r0, #0]
 8016a1e:	2100      	movs	r1, #0
 8016a20:	6041      	str	r1, [r0, #4]
 8016a22:	6815      	ldr	r5, [r2, #0]
 8016a24:	6085      	str	r5, [r0, #8]
 8016a26:	6852      	ldr	r2, [r2, #4]
 8016a28:	6443      	str	r3, [r0, #68]	; 0x44
 8016a2a:	9b02      	ldr	r3, [sp, #8]
 8016a2c:	60c2      	str	r2, [r0, #12]
 8016a2e:	7401      	strb	r1, [r0, #16]
 8016a30:	6141      	str	r1, [r0, #20]
 8016a32:	7601      	strb	r1, [r0, #24]
 8016a34:	8701      	strh	r1, [r0, #56]	; 0x38
 8016a36:	8401      	strh	r1, [r0, #32]
 8016a38:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016a3c:	6483      	str	r3, [r0, #72]	; 0x48
 8016a3e:	bc30      	pop	{r4, r5}
 8016a40:	f7f1 bb26 	b.w	8008090 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016a44 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016a44:	b408      	push	{r3}
 8016a46:	b510      	push	{r4, lr}
 8016a48:	b085      	sub	sp, #20
 8016a4a:	ac07      	add	r4, sp, #28
 8016a4c:	f854 3b04 	ldr.w	r3, [r4], #4
 8016a50:	9300      	str	r3, [sp, #0]
 8016a52:	4613      	mov	r3, r2
 8016a54:	4622      	mov	r2, r4
 8016a56:	9403      	str	r4, [sp, #12]
 8016a58:	f7ff ffdf 	bl	8016a1a <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016a5c:	b005      	add	sp, #20
 8016a5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016a62:	b001      	add	sp, #4
 8016a64:	4770      	bx	lr

08016a66 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016a66:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a68:	4605      	mov	r5, r0
 8016a6a:	4608      	mov	r0, r1
 8016a6c:	b1e9      	cbz	r1, 8016aaa <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016a6e:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016a72:	460b      	mov	r3, r1
 8016a74:	f101 0708 	add.w	r7, r1, #8
 8016a78:	4622      	mov	r2, r4
 8016a7a:	6818      	ldr	r0, [r3, #0]
 8016a7c:	6859      	ldr	r1, [r3, #4]
 8016a7e:	4626      	mov	r6, r4
 8016a80:	c603      	stmia	r6!, {r0, r1}
 8016a82:	3308      	adds	r3, #8
 8016a84:	42bb      	cmp	r3, r7
 8016a86:	4634      	mov	r4, r6
 8016a88:	d1f7      	bne.n	8016a7a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016a8a:	6818      	ldr	r0, [r3, #0]
 8016a8c:	6030      	str	r0, [r6, #0]
 8016a8e:	889b      	ldrh	r3, [r3, #4]
 8016a90:	80b3      	strh	r3, [r6, #4]
 8016a92:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016a96:	015b      	lsls	r3, r3, #5
 8016a98:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016a9c:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016aa0:	430b      	orrs	r3, r1
 8016aa2:	425b      	negs	r3, r3
 8016aa4:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016aa8:	4610      	mov	r0, r2
 8016aaa:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016aac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016aac:	b538      	push	{r3, r4, r5, lr}
 8016aae:	460c      	mov	r4, r1
 8016ab0:	6811      	ldr	r1, [r2, #0]
 8016ab2:	4610      	mov	r0, r2
 8016ab4:	68cd      	ldr	r5, [r1, #12]
 8016ab6:	4619      	mov	r1, r3
 8016ab8:	47a8      	blx	r5
 8016aba:	2800      	cmp	r0, #0
 8016abc:	bf08      	it	eq
 8016abe:	4620      	moveq	r0, r4
 8016ac0:	bd38      	pop	{r3, r4, r5, pc}
	...

08016ac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016ac6:	4604      	mov	r4, r0
 8016ac8:	4615      	mov	r5, r2
 8016aca:	4608      	mov	r0, r1
 8016acc:	b93a      	cbnz	r2, 8016ade <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016ace:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016ad2:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016ad6:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016ada:	4628      	mov	r0, r5
 8016adc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016ade:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016ae2:	8893      	ldrh	r3, [r2, #4]
 8016ae4:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016ae8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016aec:	79ee      	ldrb	r6, [r5, #7]
 8016aee:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016af2:	4316      	orrs	r6, r2
 8016af4:	19da      	adds	r2, r3, r7
 8016af6:	b291      	uxth	r1, r2
 8016af8:	291d      	cmp	r1, #29
 8016afa:	b2b7      	uxth	r7, r6
 8016afc:	d87a      	bhi.n	8016bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016afe:	2201      	movs	r2, #1
 8016b00:	408a      	lsls	r2, r1
 8016b02:	4975      	ldr	r1, [pc, #468]	; (8016cd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016b04:	420a      	tst	r2, r1
 8016b06:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016b0a:	d12d      	bne.n	8016b68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016b0c:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016b10:	d070      	beq.n	8016bf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016b12:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016b16:	462b      	mov	r3, r5
 8016b18:	f105 0e08 	add.w	lr, r5, #8
 8016b1c:	4615      	mov	r5, r2
 8016b1e:	6818      	ldr	r0, [r3, #0]
 8016b20:	6859      	ldr	r1, [r3, #4]
 8016b22:	4694      	mov	ip, r2
 8016b24:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016b28:	3308      	adds	r3, #8
 8016b2a:	4573      	cmp	r3, lr
 8016b2c:	4662      	mov	r2, ip
 8016b2e:	d1f6      	bne.n	8016b1e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016b30:	6818      	ldr	r0, [r3, #0]
 8016b32:	f8cc 0000 	str.w	r0, [ip]
 8016b36:	889b      	ldrh	r3, [r3, #4]
 8016b38:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016b3c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016b40:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016b44:	b2b3      	uxth	r3, r6
 8016b46:	1aca      	subs	r2, r1, r3
 8016b48:	b292      	uxth	r2, r2
 8016b4a:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016b4e:	10d2      	asrs	r2, r2, #3
 8016b50:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016b54:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016b58:	4302      	orrs	r2, r0
 8016b5a:	1bcf      	subs	r7, r1, r7
 8016b5c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016b60:	1afb      	subs	r3, r7, r3
 8016b62:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016b66:	e7b8      	b.n	8016ada <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016b68:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016b6a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016b6e:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016b70:	f640 6333 	movw	r3, #3635	; 0xe33
 8016b74:	4299      	cmp	r1, r3
 8016b76:	d110      	bne.n	8016b9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016b78:	6803      	ldr	r3, [r0, #0]
 8016b7a:	68db      	ldr	r3, [r3, #12]
 8016b7c:	4798      	blx	r3
 8016b7e:	7b41      	ldrb	r1, [r0, #13]
 8016b80:	00cb      	lsls	r3, r1, #3
 8016b82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b86:	7a03      	ldrb	r3, [r0, #8]
 8016b88:	0648      	lsls	r0, r1, #25
 8016b8a:	ea43 0302 	orr.w	r3, r3, r2
 8016b8e:	bf44      	itt	mi
 8016b90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016b94:	b21b      	sxthmi	r3, r3
 8016b96:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016b9a:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016b9e:	443b      	add	r3, r7
 8016ba0:	4433      	add	r3, r6
 8016ba2:	b29b      	uxth	r3, r3
 8016ba4:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016ba8:	462a      	mov	r2, r5
 8016baa:	f105 0c08 	add.w	ip, r5, #8
 8016bae:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016bb2:	4635      	mov	r5, r6
 8016bb4:	6810      	ldr	r0, [r2, #0]
 8016bb6:	6851      	ldr	r1, [r2, #4]
 8016bb8:	4637      	mov	r7, r6
 8016bba:	c703      	stmia	r7!, {r0, r1}
 8016bbc:	3208      	adds	r2, #8
 8016bbe:	4562      	cmp	r2, ip
 8016bc0:	463e      	mov	r6, r7
 8016bc2:	d1f7      	bne.n	8016bb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016bc4:	6810      	ldr	r0, [r2, #0]
 8016bc6:	6038      	str	r0, [r7, #0]
 8016bc8:	8892      	ldrh	r2, [r2, #4]
 8016bca:	80ba      	strh	r2, [r7, #4]
 8016bcc:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016bd0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016bd4:	10db      	asrs	r3, r3, #3
 8016bd6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016bda:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016bde:	4313      	orrs	r3, r2
 8016be0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016be4:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016be8:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016bec:	1a9b      	subs	r3, r3, r2
 8016bee:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016bf2:	e772      	b.n	8016ada <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016bf4:	f023 0204 	bic.w	r2, r3, #4
 8016bf8:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016bfc:	428a      	cmp	r2, r1
 8016bfe:	d003      	beq.n	8016c08 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016c00:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016c04:	4293      	cmp	r3, r2
 8016c06:	d120      	bne.n	8016c4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016c08:	3b01      	subs	r3, #1
 8016c0a:	4602      	mov	r2, r0
 8016c0c:	b29b      	uxth	r3, r3
 8016c0e:	4629      	mov	r1, r5
 8016c10:	4620      	mov	r0, r4
 8016c12:	f7ff ff4b 	bl	8016aac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016c16:	7b41      	ldrb	r1, [r0, #13]
 8016c18:	00cb      	lsls	r3, r1, #3
 8016c1a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016c1e:	7a03      	ldrb	r3, [r0, #8]
 8016c20:	0649      	lsls	r1, r1, #25
 8016c22:	ea43 0302 	orr.w	r3, r3, r2
 8016c26:	bf44      	itt	mi
 8016c28:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c2c:	b21b      	sxthmi	r3, r3
 8016c2e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016c32:	7b6b      	ldrb	r3, [r5, #13]
 8016c34:	7aaa      	ldrb	r2, [r5, #10]
 8016c36:	005b      	lsls	r3, r3, #1
 8016c38:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016c3c:	4313      	orrs	r3, r2
 8016c3e:	115a      	asrs	r2, r3, #5
 8016c40:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016c44:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016c48:	e036      	b.n	8016cb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016c4a:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016c4e:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016c52:	7a2a      	ldrb	r2, [r5, #8]
 8016c54:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016c58:	ea42 0201 	orr.w	r2, r2, r1
 8016c5c:	bf1c      	itt	ne
 8016c5e:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016c62:	b212      	sxthne	r2, r2
 8016c64:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016c68:	f640 6109 	movw	r1, #3593	; 0xe09
 8016c6c:	f023 0210 	bic.w	r2, r3, #16
 8016c70:	428a      	cmp	r2, r1
 8016c72:	d003      	beq.n	8016c7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016c74:	f640 6213 	movw	r2, #3603	; 0xe13
 8016c78:	4293      	cmp	r3, r2
 8016c7a:	d12a      	bne.n	8016cd2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016c7c:	7b6e      	ldrb	r6, [r5, #13]
 8016c7e:	0076      	lsls	r6, r6, #1
 8016c80:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016c84:	7aae      	ldrb	r6, [r5, #10]
 8016c86:	4316      	orrs	r6, r2
 8016c88:	f640 6213 	movw	r2, #3603	; 0xe13
 8016c8c:	4293      	cmp	r3, r2
 8016c8e:	bf18      	it	ne
 8016c90:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016c94:	4602      	mov	r2, r0
 8016c96:	bf14      	ite	ne
 8016c98:	b29b      	uxthne	r3, r3
 8016c9a:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016c9e:	4629      	mov	r1, r5
 8016ca0:	4620      	mov	r0, r4
 8016ca2:	f7ff ff03 	bl	8016aac <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016ca6:	7b43      	ldrb	r3, [r0, #13]
 8016ca8:	7a82      	ldrb	r2, [r0, #10]
 8016caa:	005b      	lsls	r3, r3, #1
 8016cac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016cb0:	4313      	orrs	r3, r2
 8016cb2:	1af6      	subs	r6, r6, r3
 8016cb4:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016cb8:	7b69      	ldrb	r1, [r5, #13]
 8016cba:	00cb      	lsls	r3, r1, #3
 8016cbc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016cc0:	7a2b      	ldrb	r3, [r5, #8]
 8016cc2:	4313      	orrs	r3, r2
 8016cc4:	064a      	lsls	r2, r1, #25
 8016cc6:	bf44      	itt	mi
 8016cc8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016ccc:	b21b      	sxthmi	r3, r3
 8016cce:	1bdb      	subs	r3, r3, r7
 8016cd0:	e747      	b.n	8016b62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016cd2:	2300      	movs	r3, #0
 8016cd4:	e7b6      	b.n	8016c44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016cd6:	bf00      	nop
 8016cd8:	3fc00079 	.word	0x3fc00079

08016cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016cdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ce0:	4604      	mov	r4, r0
 8016ce2:	b942      	cbnz	r2, 8016cf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016ce4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016ce8:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016cec:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016cf0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016cf4:	e047      	b.n	8016d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016cf6:	7b51      	ldrb	r1, [r2, #13]
 8016cf8:	8893      	ldrh	r3, [r2, #4]
 8016cfa:	010d      	lsls	r5, r1, #4
 8016cfc:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016d00:	79d5      	ldrb	r5, [r2, #7]
 8016d02:	4305      	orrs	r5, r0
 8016d04:	2d04      	cmp	r5, #4
 8016d06:	bfcc      	ite	gt
 8016d08:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016d0c:	f04f 0e01 	movle.w	lr, #1
 8016d10:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016d14:	f200 80ab 	bhi.w	8016e6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016d18:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016d1c:	4283      	cmp	r3, r0
 8016d1e:	d216      	bcs.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d20:	f240 605b 	movw	r0, #1627	; 0x65b
 8016d24:	4283      	cmp	r3, r0
 8016d26:	d859      	bhi.n	8016ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016d28:	f240 6057 	movw	r0, #1623	; 0x657
 8016d2c:	4283      	cmp	r3, r0
 8016d2e:	d20e      	bcs.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d30:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016d34:	d24a      	bcs.n	8016dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016d36:	f240 604e 	movw	r0, #1614	; 0x64e
 8016d3a:	4283      	cmp	r3, r0
 8016d3c:	d207      	bcs.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d3e:	f240 601a 	movw	r0, #1562	; 0x61a
 8016d42:	4283      	cmp	r3, r0
 8016d44:	d02a      	beq.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d46:	d821      	bhi.n	8016d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016d48:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016d4c:	d35b      	bcc.n	8016e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d4e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016d52:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016d56:	f040 80d0 	bne.w	8016efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016d5a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016d5e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016d62:	f040 80ca 	bne.w	8016efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016d66:	00cb      	lsls	r3, r1, #3
 8016d68:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016d6c:	7a13      	ldrb	r3, [r2, #8]
 8016d6e:	0649      	lsls	r1, r1, #25
 8016d70:	ea43 0300 	orr.w	r3, r3, r0
 8016d74:	bf44      	itt	mi
 8016d76:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d7a:	b21b      	sxthmi	r3, r3
 8016d7c:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016d80:	1b5d      	subs	r5, r3, r5
 8016d82:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016d86:	4610      	mov	r0, r2
 8016d88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016d8c:	f240 604b 	movw	r0, #1611	; 0x64b
 8016d90:	4283      	cmp	r3, r0
 8016d92:	d338      	bcc.n	8016e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d94:	f240 604c 	movw	r0, #1612	; 0x64c
 8016d98:	4283      	cmp	r3, r0
 8016d9a:	d9d8      	bls.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d9c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016da0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016da4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016da8:	f040 80f2 	bne.w	8016f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016dac:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016db0:	f040 80ee 	bne.w	8016f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016db4:	00cb      	lsls	r3, r1, #3
 8016db6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016dba:	7a13      	ldrb	r3, [r2, #8]
 8016dbc:	064e      	lsls	r6, r1, #25
 8016dbe:	ea43 0300 	orr.w	r3, r3, r0
 8016dc2:	bf44      	itt	mi
 8016dc4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016dc8:	b21b      	sxthmi	r3, r3
 8016dca:	e7d9      	b.n	8016d80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016dcc:	f240 6054 	movw	r0, #1620	; 0x654
 8016dd0:	4283      	cmp	r3, r0
 8016dd2:	d8e3      	bhi.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016dd4:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016dd8:	d9e0      	bls.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016dda:	e7b8      	b.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ddc:	f240 6074 	movw	r0, #1652	; 0x674
 8016de0:	4283      	cmp	r3, r0
 8016de2:	d0b4      	beq.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016de4:	d82d      	bhi.n	8016e42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016de6:	f240 605e 	movw	r0, #1630	; 0x65e
 8016dea:	4283      	cmp	r3, r0
 8016dec:	d804      	bhi.n	8016df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016dee:	f240 605d 	movw	r0, #1629	; 0x65d
 8016df2:	4283      	cmp	r3, r0
 8016df4:	d3d2      	bcc.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016df6:	e7aa      	b.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016df8:	f240 605f 	movw	r0, #1631	; 0x65f
 8016dfc:	4283      	cmp	r3, r0
 8016dfe:	d0cd      	beq.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e00:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016e04:	d0a3      	beq.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e06:	00cb      	lsls	r3, r1, #3
 8016e08:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016e0c:	7a13      	ldrb	r3, [r2, #8]
 8016e0e:	0649      	lsls	r1, r1, #25
 8016e10:	ea43 0300 	orr.w	r3, r3, r0
 8016e14:	bf44      	itt	mi
 8016e16:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e1a:	b21b      	sxthmi	r3, r3
 8016e1c:	1b5d      	subs	r5, r3, r5
 8016e1e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e22:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016e26:	7b53      	ldrb	r3, [r2, #13]
 8016e28:	015b      	lsls	r3, r3, #5
 8016e2a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016e2e:	7993      	ldrb	r3, [r2, #6]
 8016e30:	430b      	orrs	r3, r1
 8016e32:	005b      	lsls	r3, r3, #1
 8016e34:	2105      	movs	r1, #5
 8016e36:	fb93 f3f1 	sdiv	r3, r3, r1
 8016e3a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016e3e:	440b      	add	r3, r1
 8016e40:	e756      	b.n	8016cf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016e42:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016e46:	4283      	cmp	r3, r0
 8016e48:	d809      	bhi.n	8016e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016e4a:	f240 60df 	movw	r0, #1759	; 0x6df
 8016e4e:	4283      	cmp	r3, r0
 8016e50:	f4bf af7d 	bcs.w	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e54:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016e58:	2b05      	cmp	r3, #5
 8016e5a:	d8d4      	bhi.n	8016e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016e5c:	e777      	b.n	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e5e:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016e62:	4283      	cmp	r3, r0
 8016e64:	d09a      	beq.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e66:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8016e6a:	4283      	cmp	r3, r0
 8016e6c:	e7ca      	b.n	8016e04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016e6e:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016e72:	d22b      	bcs.n	8016ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016e74:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016e78:	4283      	cmp	r3, r0
 8016e7a:	d28f      	bcs.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e7c:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016e80:	4283      	cmp	r3, r0
 8016e82:	d816      	bhi.n	8016eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016e84:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016e88:	4283      	cmp	r3, r0
 8016e8a:	f4bf af60 	bcs.w	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e8e:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016e92:	4283      	cmp	r3, r0
 8016e94:	d80a      	bhi.n	8016eac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016e96:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8016e9a:	4283      	cmp	r3, r0
 8016e9c:	f4bf af57 	bcs.w	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ea0:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016ea4:	4283      	cmp	r3, r0
 8016ea6:	f43f af79 	beq.w	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016eaa:	e7ac      	b.n	8016e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016eac:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016eb0:	e7f8      	b.n	8016ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016eb2:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016eb6:	4283      	cmp	r3, r0
 8016eb8:	d802      	bhi.n	8016ec0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016eba:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8016ebe:	e798      	b.n	8016df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016ec0:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016ec4:	4283      	cmp	r3, r0
 8016ec6:	f47f af42 	bne.w	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016eca:	e767      	b.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ecc:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016ed0:	4283      	cmp	r3, r0
 8016ed2:	f43f af63 	beq.w	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ed6:	d802      	bhi.n	8016ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016ed8:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8016edc:	e7f2      	b.n	8016ec4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016ede:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016ee2:	4283      	cmp	r3, r0
 8016ee4:	d805      	bhi.n	8016ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016ee6:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8016eea:	4283      	cmp	r3, r0
 8016eec:	f4ff af2f 	bcc.w	8016d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ef0:	e754      	b.n	8016d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016ef2:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016ef6:	4283      	cmp	r3, r0
 8016ef8:	e7af      	b.n	8016e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016efa:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016efe:	4617      	mov	r7, r2
 8016f00:	f102 0808 	add.w	r8, r2, #8
 8016f04:	4666      	mov	r6, ip
 8016f06:	6838      	ldr	r0, [r7, #0]
 8016f08:	6879      	ldr	r1, [r7, #4]
 8016f0a:	46e6      	mov	lr, ip
 8016f0c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016f10:	3708      	adds	r7, #8
 8016f12:	4547      	cmp	r7, r8
 8016f14:	46f4      	mov	ip, lr
 8016f16:	d1f6      	bne.n	8016f06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016f18:	6838      	ldr	r0, [r7, #0]
 8016f1a:	f8ce 0000 	str.w	r0, [lr]
 8016f1e:	88b9      	ldrh	r1, [r7, #4]
 8016f20:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016f24:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016f28:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016f2c:	d009      	beq.n	8016f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016f2e:	7b51      	ldrb	r1, [r2, #13]
 8016f30:	7992      	ldrb	r2, [r2, #6]
 8016f32:	0149      	lsls	r1, r1, #5
 8016f34:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016f38:	4311      	orrs	r1, r2
 8016f3a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016f3e:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016f42:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016f46:	b2ad      	uxth	r5, r5
 8016f48:	d00d      	beq.n	8016f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016f4a:	442b      	add	r3, r5
 8016f4c:	b29b      	uxth	r3, r3
 8016f4e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016f52:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016f56:	10db      	asrs	r3, r3, #3
 8016f58:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016f5c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016f60:	4313      	orrs	r3, r2
 8016f62:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016f66:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016f6a:	00cb      	lsls	r3, r1, #3
 8016f6c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f70:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016f74:	064f      	lsls	r7, r1, #25
 8016f76:	ea43 0302 	orr.w	r3, r3, r2
 8016f7a:	bf44      	itt	mi
 8016f7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f80:	b21b      	sxthmi	r3, r3
 8016f82:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f86:	1b5b      	subs	r3, r3, r5
 8016f88:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016f8c:	4632      	mov	r2, r6
 8016f8e:	e6fa      	b.n	8016d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016f90:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016f94:	4617      	mov	r7, r2
 8016f96:	f102 0908 	add.w	r9, r2, #8
 8016f9a:	4666      	mov	r6, ip
 8016f9c:	6838      	ldr	r0, [r7, #0]
 8016f9e:	6879      	ldr	r1, [r7, #4]
 8016fa0:	46e0      	mov	r8, ip
 8016fa2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016fa6:	3708      	adds	r7, #8
 8016fa8:	454f      	cmp	r7, r9
 8016faa:	46c4      	mov	ip, r8
 8016fac:	d1f6      	bne.n	8016f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016fae:	6838      	ldr	r0, [r7, #0]
 8016fb0:	f8c8 0000 	str.w	r0, [r8]
 8016fb4:	88b9      	ldrh	r1, [r7, #4]
 8016fb6:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016fba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016fbe:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016fc2:	d009      	beq.n	8016fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016fc4:	7b51      	ldrb	r1, [r2, #13]
 8016fc6:	7992      	ldrb	r2, [r2, #6]
 8016fc8:	0149      	lsls	r1, r1, #5
 8016fca:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016fce:	4311      	orrs	r1, r2
 8016fd0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016fd4:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016fd8:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016fdc:	d00e      	beq.n	8016ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016fde:	eba3 030e 	sub.w	r3, r3, lr
 8016fe2:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016fe6:	b29b      	uxth	r3, r3
 8016fe8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016fec:	10db      	asrs	r3, r3, #3
 8016fee:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016ff2:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016ff6:	4313      	orrs	r3, r2
 8016ff8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016ffc:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017000:	00cb      	lsls	r3, r1, #3
 8017002:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8017006:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801700a:	0648      	lsls	r0, r1, #25
 801700c:	ea43 0302 	orr.w	r3, r3, r2
 8017010:	bf44      	itt	mi
 8017012:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017016:	b21b      	sxthmi	r3, r3
 8017018:	1b5d      	subs	r5, r3, r5
 801701a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801701e:	e7b5      	b.n	8016f8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017024:	461e      	mov	r6, r3
 8017026:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017028:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801702c:	4604      	mov	r4, r0
 801702e:	4617      	mov	r7, r2
 8017030:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8017034:	f7f0 ffea 	bl	800800c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017038:	4605      	mov	r5, r0
 801703a:	b918      	cbnz	r0, 8017044 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801703c:	6030      	str	r0, [r6, #0]
 801703e:	4628      	mov	r0, r5
 8017040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017044:	683b      	ldr	r3, [r7, #0]
 8017046:	4601      	mov	r1, r0
 8017048:	68db      	ldr	r3, [r3, #12]
 801704a:	4638      	mov	r0, r7
 801704c:	4798      	blx	r3
 801704e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017052:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017056:	4602      	mov	r2, r0
 8017058:	6030      	str	r0, [r6, #0]
 801705a:	d213      	bcs.n	8017084 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801705c:	4643      	mov	r3, r8
 801705e:	4639      	mov	r1, r7
 8017060:	4620      	mov	r0, r4
 8017062:	f7ff fe3b 	bl	8016cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017066:	6030      	str	r0, [r6, #0]
 8017068:	6833      	ldr	r3, [r6, #0]
 801706a:	b143      	cbz	r3, 801707e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801706c:	7b5a      	ldrb	r2, [r3, #13]
 801706e:	7a9b      	ldrb	r3, [r3, #10]
 8017070:	0052      	lsls	r2, r2, #1
 8017072:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017076:	4313      	orrs	r3, r2
 8017078:	bf0c      	ite	eq
 801707a:	2301      	moveq	r3, #1
 801707c:	2300      	movne	r3, #0
 801707e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017082:	e7dc      	b.n	801703e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8017084:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017088:	b29b      	uxth	r3, r3
 801708a:	2b7f      	cmp	r3, #127	; 0x7f
 801708c:	d804      	bhi.n	8017098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801708e:	4639      	mov	r1, r7
 8017090:	4620      	mov	r0, r4
 8017092:	f7ff fd17 	bl	8016ac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017096:	e7e6      	b.n	8017066 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017098:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801709c:	2b00      	cmp	r3, #0
 801709e:	d0e3      	beq.n	8017068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80170a0:	f640 1302 	movw	r3, #2306	; 0x902
 80170a4:	429d      	cmp	r5, r3
 80170a6:	d1df      	bne.n	8017068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80170a8:	4601      	mov	r1, r0
 80170aa:	4620      	mov	r0, r4
 80170ac:	f7ff fcdb 	bl	8016a66 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80170b0:	e7d9      	b.n	8017066 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080170b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80170b2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80170b6:	461e      	mov	r6, r3
 80170b8:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80170ba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80170be:	4604      	mov	r4, r0
 80170c0:	4617      	mov	r7, r2
 80170c2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80170c6:	f7f0 ffa1 	bl	800800c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80170ca:	4605      	mov	r5, r0
 80170cc:	b918      	cbnz	r0, 80170d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80170ce:	6030      	str	r0, [r6, #0]
 80170d0:	4628      	mov	r0, r5
 80170d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170d6:	683b      	ldr	r3, [r7, #0]
 80170d8:	4601      	mov	r1, r0
 80170da:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80170de:	4638      	mov	r0, r7
 80170e0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80170e4:	47c8      	blx	r9
 80170e6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80170ea:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80170ee:	4602      	mov	r2, r0
 80170f0:	6030      	str	r0, [r6, #0]
 80170f2:	d213      	bcs.n	801711c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80170f4:	4643      	mov	r3, r8
 80170f6:	4639      	mov	r1, r7
 80170f8:	4620      	mov	r0, r4
 80170fa:	f7ff fdef 	bl	8016cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80170fe:	6030      	str	r0, [r6, #0]
 8017100:	6833      	ldr	r3, [r6, #0]
 8017102:	b143      	cbz	r3, 8017116 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8017104:	7b5a      	ldrb	r2, [r3, #13]
 8017106:	7a9b      	ldrb	r3, [r3, #10]
 8017108:	0052      	lsls	r2, r2, #1
 801710a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801710e:	4313      	orrs	r3, r2
 8017110:	bf0c      	ite	eq
 8017112:	2301      	moveq	r3, #1
 8017114:	2300      	movne	r3, #0
 8017116:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801711a:	e7d9      	b.n	80170d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801711c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017120:	b29b      	uxth	r3, r3
 8017122:	2b7f      	cmp	r3, #127	; 0x7f
 8017124:	d804      	bhi.n	8017130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8017126:	4639      	mov	r1, r7
 8017128:	4620      	mov	r0, r4
 801712a:	f7ff fccb 	bl	8016ac4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801712e:	e7e6      	b.n	80170fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017130:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017134:	2b00      	cmp	r3, #0
 8017136:	d0e3      	beq.n	8017100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017138:	f640 1302 	movw	r3, #2306	; 0x902
 801713c:	429d      	cmp	r5, r3
 801713e:	d1df      	bne.n	8017100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8017140:	4601      	mov	r1, r0
 8017142:	4620      	mov	r0, r4
 8017144:	f7ff fc8f 	bl	8016a66 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017148:	e7d9      	b.n	80170fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801714a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801714a:	b510      	push	{r4, lr}
 801714c:	4604      	mov	r4, r0
 801714e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8017152:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017154:	b1f1      	cbz	r1, 8017194 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017156:	2b0a      	cmp	r3, #10
 8017158:	d02f      	beq.n	80171ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801715a:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 801715c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017160:	3901      	subs	r1, #1
 8017162:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8017164:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017168:	1c51      	adds	r1, r2, #1
 801716a:	b289      	uxth	r1, r1
 801716c:	2901      	cmp	r1, #1
 801716e:	bf84      	itt	hi
 8017170:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8017174:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8017176:	f103 0201 	add.w	r2, r3, #1
 801717a:	8722      	strh	r2, [r4, #56]	; 0x38
 801717c:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801717e:	bf98      	it	ls
 8017180:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8017182:	4413      	add	r3, r2
 8017184:	b29b      	uxth	r3, r3
 8017186:	2b09      	cmp	r3, #9
 8017188:	bf88      	it	hi
 801718a:	3b0a      	subhi	r3, #10
 801718c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017190:	8458      	strh	r0, [r3, #34]	; 0x22
 8017192:	e7dc      	b.n	801714e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8017194:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8017196:	2b0a      	cmp	r3, #10
 8017198:	d00f      	beq.n	80171ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801719a:	4620      	mov	r0, r4
 801719c:	f7ff fc11 	bl	80169c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80171a0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80171a2:	1c5a      	adds	r2, r3, #1
 80171a4:	8722      	strh	r2, [r4, #56]	; 0x38
 80171a6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80171a8:	4413      	add	r3, r2
 80171aa:	b29b      	uxth	r3, r3
 80171ac:	2b09      	cmp	r3, #9
 80171ae:	bf88      	it	hi
 80171b0:	3b0a      	subhi	r3, #10
 80171b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80171b6:	8458      	strh	r0, [r3, #34]	; 0x22
 80171b8:	e7ec      	b.n	8017194 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80171ba:	bd10      	pop	{r4, pc}

080171bc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80171bc:	b538      	push	{r3, r4, r5, lr}
 80171be:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80171c0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80171c4:	4604      	mov	r4, r0
 80171c6:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80171c8:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80171ca:	3a01      	subs	r2, #1
 80171cc:	8702      	strh	r2, [r0, #56]	; 0x38
 80171ce:	1c5a      	adds	r2, r3, #1
 80171d0:	b292      	uxth	r2, r2
 80171d2:	2a09      	cmp	r2, #9
 80171d4:	bf86      	itte	hi
 80171d6:	3b09      	subhi	r3, #9
 80171d8:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80171da:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80171dc:	f7ff ffb5 	bl	801714a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80171e0:	8c23      	ldrh	r3, [r4, #32]
 80171e2:	2b01      	cmp	r3, #1
 80171e4:	bf9c      	itt	ls
 80171e6:	3301      	addls	r3, #1
 80171e8:	8423      	strhls	r3, [r4, #32]
 80171ea:	8be3      	ldrh	r3, [r4, #30]
 80171ec:	b90b      	cbnz	r3, 80171f2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80171ee:	2302      	movs	r3, #2
 80171f0:	83e3      	strh	r3, [r4, #30]
 80171f2:	8be3      	ldrh	r3, [r4, #30]
 80171f4:	3b01      	subs	r3, #1
 80171f6:	b29b      	uxth	r3, r3
 80171f8:	83e3      	strh	r3, [r4, #30]
 80171fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171fe:	4628      	mov	r0, r5
 8017200:	8365      	strh	r5, [r4, #26]
 8017202:	bd38      	pop	{r3, r4, r5, pc}

08017204 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8017204:	428a      	cmp	r2, r1
 8017206:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801720a:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 801720c:	d931      	bls.n	8017272 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801720e:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017210:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8017214:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017218:	19ee      	adds	r6, r5, r7
 801721a:	1a54      	subs	r4, r2, r1
 801721c:	3e01      	subs	r6, #1
 801721e:	fa1f fe84 	uxth.w	lr, r4
 8017222:	b2b4      	uxth	r4, r6
 8017224:	eba4 090e 	sub.w	r9, r4, lr
 8017228:	fa1f f989 	uxth.w	r9, r9
 801722c:	2c09      	cmp	r4, #9
 801722e:	4626      	mov	r6, r4
 8017230:	bf88      	it	hi
 8017232:	f1a4 060a 	subhi.w	r6, r4, #10
 8017236:	f1bc 0f00 	cmp.w	ip, #0
 801723a:	bf08      	it	eq
 801723c:	f04f 0c02 	moveq.w	ip, #2
 8017240:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017244:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017248:	fa1f fc8c 	uxth.w	ip, ip
 801724c:	3c01      	subs	r4, #1
 801724e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8017252:	b2a4      	uxth	r4, r4
 8017254:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017258:	454c      	cmp	r4, r9
 801725a:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 801725e:	d1e5      	bne.n	801722c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017260:	eba5 050e 	sub.w	r5, r5, lr
 8017264:	eb0e 0408 	add.w	r4, lr, r8
 8017268:	8705      	strh	r5, [r0, #56]	; 0x38
 801726a:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 801726e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8017272:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8017274:	1a64      	subs	r4, r4, r1
 8017276:	4439      	add	r1, r7
 8017278:	b289      	uxth	r1, r1
 801727a:	2909      	cmp	r1, #9
 801727c:	bf88      	it	hi
 801727e:	390a      	subhi	r1, #10
 8017280:	8704      	strh	r4, [r0, #56]	; 0x38
 8017282:	86c1      	strh	r1, [r0, #54]	; 0x36
 8017284:	250a      	movs	r5, #10
 8017286:	b18a      	cbz	r2, 80172ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017288:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 801728a:	3a01      	subs	r2, #1
 801728c:	b292      	uxth	r2, r2
 801728e:	3101      	adds	r1, #1
 8017290:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8017294:	8701      	strh	r1, [r0, #56]	; 0x38
 8017296:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017298:	b901      	cbnz	r1, 801729c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801729a:	86c5      	strh	r5, [r0, #54]	; 0x36
 801729c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801729e:	3901      	subs	r1, #1
 80172a0:	b289      	uxth	r1, r1
 80172a2:	86c1      	strh	r1, [r0, #54]	; 0x36
 80172a4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80172a8:	844c      	strh	r4, [r1, #34]	; 0x22
 80172aa:	e7ec      	b.n	8017286 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80172ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80172b0:	f7ff bf4b 	b.w	801714a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080172b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80172b4:	b570      	push	{r4, r5, r6, lr}
 80172b6:	2500      	movs	r5, #0
 80172b8:	4295      	cmp	r5, r2
 80172ba:	d011      	beq.n	80172e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80172bc:	8bc4      	ldrh	r4, [r0, #30]
 80172be:	f831 6b02 	ldrh.w	r6, [r1], #2
 80172c2:	4414      	add	r4, r2
 80172c4:	3c01      	subs	r4, #1
 80172c6:	1b64      	subs	r4, r4, r5
 80172c8:	b2a4      	uxth	r4, r4
 80172ca:	2c01      	cmp	r4, #1
 80172cc:	bf88      	it	hi
 80172ce:	3c02      	subhi	r4, #2
 80172d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80172d4:	8b64      	ldrh	r4, [r4, #26]
 80172d6:	42b4      	cmp	r4, r6
 80172d8:	d117      	bne.n	801730a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80172da:	3501      	adds	r5, #1
 80172dc:	b2ad      	uxth	r5, r5
 80172de:	e7eb      	b.n	80172b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80172e0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80172e4:	2400      	movs	r4, #0
 80172e6:	4413      	add	r3, r2
 80172e8:	b2a2      	uxth	r2, r4
 80172ea:	429a      	cmp	r2, r3
 80172ec:	da0f      	bge.n	801730e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80172ee:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80172f0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80172f4:	4432      	add	r2, r6
 80172f6:	b292      	uxth	r2, r2
 80172f8:	2a09      	cmp	r2, #9
 80172fa:	bf88      	it	hi
 80172fc:	3a0a      	subhi	r2, #10
 80172fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017302:	3401      	adds	r4, #1
 8017304:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8017306:	42aa      	cmp	r2, r5
 8017308:	d0ee      	beq.n	80172e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801730a:	2000      	movs	r0, #0
 801730c:	bd70      	pop	{r4, r5, r6, pc}
 801730e:	2001      	movs	r0, #1
 8017310:	e7fc      	b.n	801730c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08017312 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8017312:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017316:	4605      	mov	r5, r0
 8017318:	4616      	mov	r6, r2
 801731a:	1c8c      	adds	r4, r1, #2
 801731c:	8809      	ldrh	r1, [r1, #0]
 801731e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8017322:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8017326:	42b3      	cmp	r3, r6
 8017328:	d124      	bne.n	8017374 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801732a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801732e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8017332:	f001 070f 	and.w	r7, r1, #15
 8017336:	f8cd 8000 	str.w	r8, [sp]
 801733a:	464b      	mov	r3, r9
 801733c:	4652      	mov	r2, sl
 801733e:	4621      	mov	r1, r4
 8017340:	4628      	mov	r0, r5
 8017342:	f7ff ffb7 	bl	80172b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8017346:	4683      	mov	fp, r0
 8017348:	b168      	cbz	r0, 8017366 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801734a:	eb0a 0109 	add.w	r1, sl, r9
 801734e:	4441      	add	r1, r8
 8017350:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8017354:	463a      	mov	r2, r7
 8017356:	4649      	mov	r1, r9
 8017358:	4628      	mov	r0, r5
 801735a:	f7ff ff53 	bl	8017204 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801735e:	4658      	mov	r0, fp
 8017360:	b003      	add	sp, #12
 8017362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017366:	eb07 010a 	add.w	r1, r7, sl
 801736a:	4449      	add	r1, r9
 801736c:	4441      	add	r1, r8
 801736e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8017372:	e7d2      	b.n	801731a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8017374:	f04f 0b00 	mov.w	fp, #0
 8017378:	e7f1      	b.n	801735e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801737a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801737a:	b570      	push	{r4, r5, r6, lr}
 801737c:	8810      	ldrh	r0, [r2, #0]
 801737e:	4298      	cmp	r0, r3
 8017380:	d817      	bhi.n	80173b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017382:	1e48      	subs	r0, r1, #1
 8017384:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017388:	4298      	cmp	r0, r3
 801738a:	d312      	bcc.n	80173b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801738c:	2400      	movs	r4, #0
 801738e:	428c      	cmp	r4, r1
 8017390:	d20f      	bcs.n	80173b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017392:	1860      	adds	r0, r4, r1
 8017394:	1040      	asrs	r0, r0, #1
 8017396:	0085      	lsls	r5, r0, #2
 8017398:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801739c:	42b3      	cmp	r3, r6
 801739e:	d902      	bls.n	80173a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80173a0:	3001      	adds	r0, #1
 80173a2:	b284      	uxth	r4, r0
 80173a4:	e7f3      	b.n	801738e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80173a6:	d201      	bcs.n	80173ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80173a8:	b281      	uxth	r1, r0
 80173aa:	e7f0      	b.n	801738e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80173ac:	442a      	add	r2, r5
 80173ae:	8850      	ldrh	r0, [r2, #2]
 80173b0:	bd70      	pop	{r4, r5, r6, pc}
 80173b2:	2000      	movs	r0, #0
 80173b4:	e7fc      	b.n	80173b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080173b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80173b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80173ba:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80173bc:	886f      	ldrh	r7, [r5, #2]
 80173be:	4604      	mov	r4, r0
 80173c0:	087f      	lsrs	r7, r7, #1
 80173c2:	260b      	movs	r6, #11
 80173c4:	3e01      	subs	r6, #1
 80173c6:	d013      	beq.n	80173f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80173c8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80173ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80173ce:	462a      	mov	r2, r5
 80173d0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80173d4:	4639      	mov	r1, r7
 80173d6:	4643      	mov	r3, r8
 80173d8:	4620      	mov	r0, r4
 80173da:	f7ff ffce 	bl	801737a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80173de:	b138      	cbz	r0, 80173f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80173e0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80173e4:	4642      	mov	r2, r8
 80173e6:	4620      	mov	r0, r4
 80173e8:	f7ff ff93 	bl	8017312 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80173ec:	2800      	cmp	r0, #0
 80173ee:	d1e9      	bne.n	80173c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80173f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080173f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80173f4:	b570      	push	{r4, r5, r6, lr}
 80173f6:	694a      	ldr	r2, [r1, #20]
 80173f8:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80173fa:	684b      	ldr	r3, [r1, #4]
 80173fc:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80173fe:	1b54      	subs	r4, r2, r5
 8017400:	f000 8106 	beq.w	8017610 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8017404:	1b9b      	subs	r3, r3, r6
 8017406:	d003      	beq.n	8017410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017408:	4363      	muls	r3, r4
 801740a:	2210      	movs	r2, #16
 801740c:	fb93 f3f2 	sdiv	r3, r3, r2
 8017410:	680c      	ldr	r4, [r1, #0]
 8017412:	698a      	ldr	r2, [r1, #24]
 8017414:	1b65      	subs	r5, r4, r5
 8017416:	f000 80fd 	beq.w	8017614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801741a:	1b92      	subs	r2, r2, r6
 801741c:	d003      	beq.n	8017426 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801741e:	436a      	muls	r2, r5
 8017420:	2410      	movs	r4, #16
 8017422:	fb92 f2f4 	sdiv	r2, r2, r4
 8017426:	1a9b      	subs	r3, r3, r2
 8017428:	ee07 3a90 	vmov	s15, r3
 801742c:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017430:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017434:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017438:	ee67 7a84 	vmul.f32	s15, s15, s8
 801743c:	460a      	mov	r2, r1
 801743e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8017442:	4603      	mov	r3, r0
 8017444:	f100 040c 	add.w	r4, r0, #12
 8017448:	eeb1 6a43 	vneg.f32	s12, s6
 801744c:	edd2 7a02 	vldr	s15, [r2, #8]
 8017450:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8017454:	3214      	adds	r2, #20
 8017456:	ece3 6a01 	vstmia	r3!, {s13}
 801745a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801745e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017462:	429c      	cmp	r4, r3
 8017464:	edc3 7a02 	vstr	s15, [r3, #8]
 8017468:	ed52 7a01 	vldr	s15, [r2, #-4]
 801746c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017470:	edc3 7a05 	vstr	s15, [r3, #20]
 8017474:	d1ea      	bne.n	801744c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8017476:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017478:	698b      	ldr	r3, [r1, #24]
 801747a:	edd0 4a02 	vldr	s9, [r0, #8]
 801747e:	edd0 3a00 	vldr	s7, [r0]
 8017482:	edd0 6a01 	vldr	s13, [r0, #4]
 8017486:	ed90 5a05 	vldr	s10, [r0, #20]
 801748a:	ed90 2a03 	vldr	s4, [r0, #12]
 801748e:	edd0 5a04 	vldr	s11, [r0, #16]
 8017492:	ed90 1a07 	vldr	s2, [r0, #28]
 8017496:	edd0 2a06 	vldr	s5, [r0, #24]
 801749a:	1a9b      	subs	r3, r3, r2
 801749c:	ee07 3a90 	vmov	s15, r3
 80174a0:	684b      	ldr	r3, [r1, #4]
 80174a2:	1a9b      	subs	r3, r3, r2
 80174a4:	ee07 3a10 	vmov	s14, r3
 80174a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80174ac:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80174b0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80174b4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80174b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174bc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80174c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174c4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80174c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80174cc:	ee32 5a45 	vsub.f32	s10, s4, s10
 80174d0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80174d4:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80174d8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80174da:	694a      	ldr	r2, [r1, #20]
 80174dc:	1b13      	subs	r3, r2, r4
 80174de:	ee07 3a10 	vmov	s14, r3
 80174e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174e6:	680b      	ldr	r3, [r1, #0]
 80174e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174ec:	1b1b      	subs	r3, r3, r4
 80174ee:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80174f2:	ee07 3a10 	vmov	s14, r3
 80174f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174fa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174fe:	eee6 4a87 	vfma.f32	s9, s13, s14
 8017502:	ee64 4a86 	vmul.f32	s9, s9, s12
 8017506:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 801750a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801750c:	698b      	ldr	r3, [r1, #24]
 801750e:	1a9b      	subs	r3, r3, r2
 8017510:	ee06 3a90 	vmov	s13, r3
 8017514:	684b      	ldr	r3, [r1, #4]
 8017516:	1a9b      	subs	r3, r3, r2
 8017518:	ee07 3a10 	vmov	s14, r3
 801751c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017520:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017524:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017528:	ee27 7a04 	vmul.f32	s14, s14, s8
 801752c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017530:	eee5 6a87 	vfma.f32	s13, s11, s14
 8017534:	ee66 6a83 	vmul.f32	s13, s13, s6
 8017538:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 801753c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 801753e:	694a      	ldr	r2, [r1, #20]
 8017540:	1b13      	subs	r3, r2, r4
 8017542:	ee07 3a10 	vmov	s14, r3
 8017546:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801754a:	680b      	ldr	r3, [r1, #0]
 801754c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017550:	1b1b      	subs	r3, r3, r4
 8017552:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8017556:	ee07 3a10 	vmov	s14, r3
 801755a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801755e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017562:	eea5 5a87 	vfma.f32	s10, s11, s14
 8017566:	edd0 5a08 	vldr	s11, [r0, #32]
 801756a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801756e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8017572:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8017576:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017578:	698b      	ldr	r3, [r1, #24]
 801757a:	1a9b      	subs	r3, r3, r2
 801757c:	ee07 3a10 	vmov	s14, r3
 8017580:	684b      	ldr	r3, [r1, #4]
 8017582:	1a9b      	subs	r3, r3, r2
 8017584:	ee01 3a90 	vmov	s3, r3
 8017588:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801758c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017590:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017594:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017598:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801759c:	ee61 1a84 	vmul.f32	s3, s3, s8
 80175a0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80175a4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80175a8:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80175ac:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80175ae:	694a      	ldr	r2, [r1, #20]
 80175b0:	1b13      	subs	r3, r2, r4
 80175b2:	ee03 3a10 	vmov	s6, r3
 80175b6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80175ba:	680b      	ldr	r3, [r1, #0]
 80175bc:	ee23 3a04 	vmul.f32	s6, s6, s8
 80175c0:	1b1b      	subs	r3, r3, r4
 80175c2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80175c6:	ee03 3a10 	vmov	s6, r3
 80175ca:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80175ce:	ee23 4a04 	vmul.f32	s8, s6, s8
 80175d2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80175d6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80175da:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80175de:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80175e2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80175e6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80175ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175ee:	dd13      	ble.n	8017618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80175f0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80175f4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80175f8:	63c3      	str	r3, [r0, #60]	; 0x3c
 80175fa:	eee3 7a87 	vfma.f32	s15, s7, s14
 80175fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017606:	dd15      	ble.n	8017634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017608:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801760c:	6403      	str	r3, [r0, #64]	; 0x40
 801760e:	bd70      	pop	{r4, r5, r6, pc}
 8017610:	4623      	mov	r3, r4
 8017612:	e6fd      	b.n	8017410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017614:	462a      	mov	r2, r5
 8017616:	e706      	b.n	8017426 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017618:	d502      	bpl.n	8017620 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801761a:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801761e:	e7e9      	b.n	80175f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017620:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8017624:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017628:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801762c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017630:	dade      	bge.n	80175f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8017632:	e7f2      	b.n	801761a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8017634:	d502      	bpl.n	801763c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8017636:	f647 73ff 	movw	r3, #32767	; 0x7fff
 801763a:	e7e7      	b.n	801760c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801763c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8017640:	eee3 4a86 	vfma.f32	s9, s7, s12
 8017644:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801764c:	dadc      	bge.n	8017608 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801764e:	e7f2      	b.n	8017636 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017650:	3d800000 	.word	0x3d800000

08017654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8017654:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017658:	2714      	movs	r7, #20
 801765a:	435f      	muls	r7, r3
 801765c:	eb02 0c07 	add.w	ip, r2, r7
 8017660:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8017664:	f115 0e0f 	adds.w	lr, r5, #15
 8017668:	f100 80a2 	bmi.w	80177b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801766c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017670:	9c08      	ldr	r4, [sp, #32]
 8017672:	f8c0 e014 	str.w	lr, [r0, #20]
 8017676:	2614      	movs	r6, #20
 8017678:	4366      	muls	r6, r4
 801767a:	eb02 0806 	add.w	r8, r2, r6
 801767e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017682:	f115 040f 	adds.w	r4, r5, #15
 8017686:	f100 809f 	bmi.w	80177c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801768a:	1124      	asrs	r4, r4, #4
 801768c:	eba4 040e 	sub.w	r4, r4, lr
 8017690:	6184      	str	r4, [r0, #24]
 8017692:	2c00      	cmp	r4, #0
 8017694:	f000 808a 	beq.w	80177ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017698:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801769c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80176a0:	5995      	ldr	r5, [r2, r6]
 80176a2:	eba4 0809 	sub.w	r8, r4, r9
 80176a6:	59d4      	ldr	r4, [r2, r7]
 80176a8:	eba5 0a04 	sub.w	sl, r5, r4
 80176ac:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80176b0:	fb0e fe05 	mul.w	lr, lr, r5
 80176b4:	fb0a ee19 	mls	lr, sl, r9, lr
 80176b8:	fb08 e404 	mla	r4, r8, r4, lr
 80176bc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80176c0:	3c01      	subs	r4, #1
 80176c2:	19a4      	adds	r4, r4, r6
 80176c4:	f100 808c 	bmi.w	80177e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80176c8:	fb94 fef6 	sdiv	lr, r4, r6
 80176cc:	f8c0 e000 	str.w	lr, [r0]
 80176d0:	fb06 441e 	mls	r4, r6, lr, r4
 80176d4:	6104      	str	r4, [r0, #16]
 80176d6:	2d00      	cmp	r5, #0
 80176d8:	f2c0 8095 	blt.w	8017806 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80176dc:	fb95 f4f6 	sdiv	r4, r5, r6
 80176e0:	6044      	str	r4, [r0, #4]
 80176e2:	fb06 5514 	mls	r5, r6, r4, r5
 80176e6:	6085      	str	r5, [r0, #8]
 80176e8:	60c6      	str	r6, [r0, #12]
 80176ea:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80176ee:	6945      	ldr	r5, [r0, #20]
 80176f0:	59d2      	ldr	r2, [r2, r7]
 80176f2:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017828 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80176f6:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80176fa:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80176fe:	ee07 4a10 	vmov	s14, r4
 8017702:	6804      	ldr	r4, [r0, #0]
 8017704:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017708:	ee07 2a90 	vmov	s15, r2
 801770c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017714:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017718:	ee27 7a26 	vmul.f32	s14, s14, s13
 801771c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017720:	edd3 6a00 	vldr	s13, [r3]
 8017724:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017728:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 801772c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017730:	edc0 6a07 	vstr	s13, [r0, #28]
 8017734:	edd0 6a01 	vldr	s13, [r0, #4]
 8017738:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 801773c:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017740:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017744:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017748:	ed80 6a08 	vstr	s12, [r0, #32]
 801774c:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 801774e:	6242      	str	r2, [r0, #36]	; 0x24
 8017750:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8017754:	ed93 6a03 	vldr	s12, [r3, #12]
 8017758:	eea5 6a87 	vfma.f32	s12, s11, s14
 801775c:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017760:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8017764:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017768:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 801776c:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017770:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017774:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017778:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 801777a:	6302      	str	r2, [r0, #48]	; 0x30
 801777c:	ed93 6a06 	vldr	s12, [r3, #24]
 8017780:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8017784:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017788:	eeb0 7a46 	vmov.f32	s14, s12
 801778c:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017790:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017794:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017798:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 801779c:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80177a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80177a4:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80177a8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80177aa:	63c3      	str	r3, [r0, #60]	; 0x3c
 80177ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177b0:	f1c5 0501 	rsb	r5, r5, #1
 80177b4:	f015 050f 	ands.w	r5, r5, #15
 80177b8:	bf18      	it	ne
 80177ba:	2501      	movne	r5, #1
 80177bc:	2410      	movs	r4, #16
 80177be:	fb9e fef4 	sdiv	lr, lr, r4
 80177c2:	ebae 0e05 	sub.w	lr, lr, r5
 80177c6:	e753      	b.n	8017670 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80177c8:	f1c5 0501 	rsb	r5, r5, #1
 80177cc:	f015 050f 	ands.w	r5, r5, #15
 80177d0:	bf18      	it	ne
 80177d2:	2501      	movne	r5, #1
 80177d4:	f04f 0910 	mov.w	r9, #16
 80177d8:	fb94 f4f9 	sdiv	r4, r4, r9
 80177dc:	1b64      	subs	r4, r4, r5
 80177de:	e755      	b.n	801768c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80177e0:	4264      	negs	r4, r4
 80177e2:	fb94 fef6 	sdiv	lr, r4, r6
 80177e6:	f1ce 0800 	rsb	r8, lr, #0
 80177ea:	fb06 441e 	mls	r4, r6, lr, r4
 80177ee:	f8c0 8000 	str.w	r8, [r0]
 80177f2:	6104      	str	r4, [r0, #16]
 80177f4:	2c00      	cmp	r4, #0
 80177f6:	f43f af6e 	beq.w	80176d6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80177fa:	ea6f 0e0e 	mvn.w	lr, lr
 80177fe:	f8c0 e000 	str.w	lr, [r0]
 8017802:	1b34      	subs	r4, r6, r4
 8017804:	e766      	b.n	80176d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017806:	426d      	negs	r5, r5
 8017808:	fb95 f4f6 	sdiv	r4, r5, r6
 801780c:	f1c4 0e00 	rsb	lr, r4, #0
 8017810:	fb06 5514 	mls	r5, r6, r4, r5
 8017814:	f8c0 e004 	str.w	lr, [r0, #4]
 8017818:	6085      	str	r5, [r0, #8]
 801781a:	2d00      	cmp	r5, #0
 801781c:	f43f af64 	beq.w	80176e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017820:	43e4      	mvns	r4, r4
 8017822:	6044      	str	r4, [r0, #4]
 8017824:	1b75      	subs	r5, r6, r5
 8017826:	e75e      	b.n	80176e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017828:	3d800000 	.word	0x3d800000

0801782c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801782c:	4602      	mov	r2, r0
 801782e:	b148      	cbz	r0, 8017844 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017830:	2300      	movs	r3, #0
 8017832:	b298      	uxth	r0, r3
 8017834:	3301      	adds	r3, #1
 8017836:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801783a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801783e:	2900      	cmp	r1, #0
 8017840:	d1f7      	bne.n	8017832 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017842:	4770      	bx	lr
 8017844:	4770      	bx	lr

08017846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017846:	b530      	push	{r4, r5, lr}
 8017848:	4604      	mov	r4, r0
 801784a:	b159      	cbz	r1, 8017864 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801784c:	b148      	cbz	r0, 8017862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801784e:	2300      	movs	r3, #0
 8017850:	b298      	uxth	r0, r3
 8017852:	4282      	cmp	r2, r0
 8017854:	d905      	bls.n	8017862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017856:	5ccd      	ldrb	r5, [r1, r3]
 8017858:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801785c:	3301      	adds	r3, #1
 801785e:	2d00      	cmp	r5, #0
 8017860:	d1f6      	bne.n	8017850 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017862:	bd30      	pop	{r4, r5, pc}
 8017864:	4608      	mov	r0, r1
 8017866:	e7fc      	b.n	8017862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017868:	b5f0      	push	{r4, r5, r6, r7, lr}
 801786a:	b08b      	sub	sp, #44	; 0x2c
 801786c:	468c      	mov	ip, r1
 801786e:	2100      	movs	r1, #0
 8017870:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017874:	4604      	mov	r4, r0
 8017876:	261f      	movs	r6, #31
 8017878:	af01      	add	r7, sp, #4
 801787a:	fb94 fef3 	sdiv	lr, r4, r3
 801787e:	fb03 441e 	mls	r4, r3, lr, r4
 8017882:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017886:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801788a:	b2ec      	uxtb	r4, r5
 801788c:	2d09      	cmp	r5, #9
 801788e:	bfd4      	ite	le
 8017890:	3430      	addle	r4, #48	; 0x30
 8017892:	3457      	addgt	r4, #87	; 0x57
 8017894:	b2e4      	uxtb	r4, r4
 8017896:	55bc      	strb	r4, [r7, r6]
 8017898:	4674      	mov	r4, lr
 801789a:	1e71      	subs	r1, r6, #1
 801789c:	b974      	cbnz	r4, 80178bc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801789e:	2800      	cmp	r0, #0
 80178a0:	da05      	bge.n	80178ae <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80178a2:	ab0a      	add	r3, sp, #40	; 0x28
 80178a4:	4419      	add	r1, r3
 80178a6:	232d      	movs	r3, #45	; 0x2d
 80178a8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80178ac:	1eb1      	subs	r1, r6, #2
 80178ae:	3101      	adds	r1, #1
 80178b0:	4439      	add	r1, r7
 80178b2:	4660      	mov	r0, ip
 80178b4:	f7ff ffc7 	bl	8017846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80178b8:	b00b      	add	sp, #44	; 0x2c
 80178ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80178bc:	460e      	mov	r6, r1
 80178be:	e7dc      	b.n	801787a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080178c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80178c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80178c2:	b08b      	sub	sp, #44	; 0x2c
 80178c4:	468c      	mov	ip, r1
 80178c6:	2100      	movs	r1, #0
 80178c8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80178cc:	ae01      	add	r6, sp, #4
 80178ce:	211f      	movs	r1, #31
 80178d0:	fbb0 f7f3 	udiv	r7, r0, r3
 80178d4:	fb03 0517 	mls	r5, r3, r7, r0
 80178d8:	b2ec      	uxtb	r4, r5
 80178da:	2d09      	cmp	r5, #9
 80178dc:	bfd4      	ite	le
 80178de:	3430      	addle	r4, #48	; 0x30
 80178e0:	3457      	addgt	r4, #87	; 0x57
 80178e2:	b2e4      	uxtb	r4, r4
 80178e4:	558c      	strb	r4, [r1, r6]
 80178e6:	4638      	mov	r0, r7
 80178e8:	1e4c      	subs	r4, r1, #1
 80178ea:	b92f      	cbnz	r7, 80178f8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80178ec:	4431      	add	r1, r6
 80178ee:	4660      	mov	r0, ip
 80178f0:	f7ff ffa9 	bl	8017846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80178f4:	b00b      	add	sp, #44	; 0x2c
 80178f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80178f8:	4621      	mov	r1, r4
 80178fa:	e7e9      	b.n	80178d0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080178fc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80178fc:	b410      	push	{r4}
 80178fe:	b131      	cbz	r1, 801790e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017900:	1e9c      	subs	r4, r3, #2
 8017902:	2c22      	cmp	r4, #34	; 0x22
 8017904:	d803      	bhi.n	801790e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017906:	f85d 4b04 	ldr.w	r4, [sp], #4
 801790a:	f7ff bfad 	b.w	8017868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801790e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017912:	4770      	bx	lr

08017914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017918:	4691      	mov	r9, r2
 801791a:	b085      	sub	sp, #20
 801791c:	6802      	ldr	r2, [r0, #0]
 801791e:	9201      	str	r2, [sp, #4]
 8017920:	4688      	mov	r8, r1
 8017922:	4683      	mov	fp, r0
 8017924:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017928:	9103      	str	r1, [sp, #12]
 801792a:	4610      	mov	r0, r2
 801792c:	461c      	mov	r4, r3
 801792e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017932:	9302      	str	r3, [sp, #8]
 8017934:	f7ff ff7a 	bl	801782c <_ZN8touchgfx7Unicode6strlenEPKt>
 8017938:	f1b8 0f00 	cmp.w	r8, #0
 801793c:	bf0c      	ite	eq
 801793e:	4684      	moveq	ip, r0
 8017940:	f100 0c01 	addne.w	ip, r0, #1
 8017944:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017948:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 801794c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801794e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017950:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017954:	9903      	ldr	r1, [sp, #12]
 8017956:	fa1f fc8c 	uxth.w	ip, ip
 801795a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801795e:	d041      	beq.n	80179e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017960:	d834      	bhi.n	80179cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017962:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017966:	d059      	beq.n	8017a1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017968:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 801796c:	d03a      	beq.n	80179e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801796e:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017972:	d034      	beq.n	80179de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017974:	2400      	movs	r4, #0
 8017976:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 801797a:	3a01      	subs	r2, #1
 801797c:	b169      	cbz	r1, 801799a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801797e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017980:	458c      	cmp	ip, r1
 8017982:	da09      	bge.n	8017998 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017984:	eba1 010c 	sub.w	r1, r1, ip
 8017988:	b289      	uxth	r1, r1
 801798a:	b933      	cbnz	r3, 801799a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801798c:	2e00      	cmp	r6, #0
 801798e:	d051      	beq.n	8017a34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017990:	2800      	cmp	r0, #0
 8017992:	d04f      	beq.n	8017a34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017994:	440c      	add	r4, r1
 8017996:	b2a4      	uxth	r4, r4
 8017998:	2100      	movs	r1, #0
 801799a:	682b      	ldr	r3, [r5, #0]
 801799c:	4293      	cmp	r3, r2
 801799e:	da07      	bge.n	80179b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80179a0:	f1b8 0f00 	cmp.w	r8, #0
 80179a4:	d004      	beq.n	80179b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80179a6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80179aa:	682b      	ldr	r3, [r5, #0]
 80179ac:	3301      	adds	r3, #1
 80179ae:	602b      	str	r3, [r5, #0]
 80179b0:	2730      	movs	r7, #48	; 0x30
 80179b2:	2c00      	cmp	r4, #0
 80179b4:	d04e      	beq.n	8017a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80179b6:	682e      	ldr	r6, [r5, #0]
 80179b8:	3c01      	subs	r4, #1
 80179ba:	42b2      	cmp	r2, r6
 80179bc:	b2a4      	uxth	r4, r4
 80179be:	dd49      	ble.n	8017a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80179c0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80179c4:	682b      	ldr	r3, [r5, #0]
 80179c6:	3301      	adds	r3, #1
 80179c8:	602b      	str	r3, [r5, #0]
 80179ca:	e7f2      	b.n	80179b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80179cc:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80179d0:	d01d      	beq.n	8017a0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80179d2:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80179d6:	d002      	beq.n	80179de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80179d8:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80179dc:	e7c9      	b.n	8017972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80179de:	4684      	mov	ip, r0
 80179e0:	f04f 0800 	mov.w	r8, #0
 80179e4:	2c00      	cmp	r4, #0
 80179e6:	d0c6      	beq.n	8017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80179e8:	b947      	cbnz	r7, 80179fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80179ea:	2801      	cmp	r0, #1
 80179ec:	d106      	bne.n	80179fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80179ee:	8814      	ldrh	r4, [r2, #0]
 80179f0:	2c30      	cmp	r4, #48	; 0x30
 80179f2:	bf02      	ittt	eq
 80179f4:	3202      	addeq	r2, #2
 80179f6:	f8cb 2000 	streq.w	r2, [fp]
 80179fa:	4638      	moveq	r0, r7
 80179fc:	45bc      	cmp	ip, r7
 80179fe:	da14      	bge.n	8017a2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017a00:	b2bf      	uxth	r7, r7
 8017a02:	eba7 040c 	sub.w	r4, r7, ip
 8017a06:	b2a4      	uxth	r4, r4
 8017a08:	46bc      	mov	ip, r7
 8017a0a:	2600      	movs	r6, #0
 8017a0c:	e7b3      	b.n	8017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017a0e:	4684      	mov	ip, r0
 8017a10:	b16c      	cbz	r4, 8017a2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017a12:	42b8      	cmp	r0, r7
 8017a14:	dd00      	ble.n	8017a18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017a16:	b2b8      	uxth	r0, r7
 8017a18:	2400      	movs	r4, #0
 8017a1a:	e003      	b.n	8017a24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017a1c:	f04f 0c01 	mov.w	ip, #1
 8017a20:	2400      	movs	r4, #0
 8017a22:	4660      	mov	r0, ip
 8017a24:	4626      	mov	r6, r4
 8017a26:	46a0      	mov	r8, r4
 8017a28:	e7a5      	b.n	8017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017a2a:	2400      	movs	r4, #0
 8017a2c:	e7ed      	b.n	8017a0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017a2e:	4626      	mov	r6, r4
 8017a30:	46a0      	mov	r8, r4
 8017a32:	e7a0      	b.n	8017976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017a34:	2900      	cmp	r1, #0
 8017a36:	d0b0      	beq.n	801799a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017a38:	2720      	movs	r7, #32
 8017a3a:	682e      	ldr	r6, [r5, #0]
 8017a3c:	2900      	cmp	r1, #0
 8017a3e:	d0ac      	beq.n	801799a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017a40:	3901      	subs	r1, #1
 8017a42:	4296      	cmp	r6, r2
 8017a44:	b289      	uxth	r1, r1
 8017a46:	daa7      	bge.n	8017998 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017a48:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017a4c:	682b      	ldr	r3, [r5, #0]
 8017a4e:	3301      	adds	r3, #1
 8017a50:	602b      	str	r3, [r5, #0]
 8017a52:	e7f2      	b.n	8017a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017a54:	b188      	cbz	r0, 8017a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017a56:	682b      	ldr	r3, [r5, #0]
 8017a58:	3801      	subs	r0, #1
 8017a5a:	429a      	cmp	r2, r3
 8017a5c:	b280      	uxth	r0, r0
 8017a5e:	dd0c      	ble.n	8017a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017a60:	f8db 3000 	ldr.w	r3, [fp]
 8017a64:	1c9c      	adds	r4, r3, #2
 8017a66:	f8cb 4000 	str.w	r4, [fp]
 8017a6a:	881c      	ldrh	r4, [r3, #0]
 8017a6c:	682b      	ldr	r3, [r5, #0]
 8017a6e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017a72:	682b      	ldr	r3, [r5, #0]
 8017a74:	3301      	adds	r3, #1
 8017a76:	602b      	str	r3, [r5, #0]
 8017a78:	e7ec      	b.n	8017a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017a7a:	2620      	movs	r6, #32
 8017a7c:	b151      	cbz	r1, 8017a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017a7e:	6828      	ldr	r0, [r5, #0]
 8017a80:	3901      	subs	r1, #1
 8017a82:	4282      	cmp	r2, r0
 8017a84:	b289      	uxth	r1, r1
 8017a86:	dd05      	ble.n	8017a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017a88:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017a8c:	682b      	ldr	r3, [r5, #0]
 8017a8e:	3301      	adds	r3, #1
 8017a90:	602b      	str	r3, [r5, #0]
 8017a92:	e7f3      	b.n	8017a7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017a94:	b005      	add	sp, #20
 8017a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017a9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017a9e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017aa2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017aa6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017aaa:	2400      	movs	r4, #0
 8017aac:	8014      	strh	r4, [r2, #0]
 8017aae:	701c      	strb	r4, [r3, #0]
 8017ab0:	f888 4000 	strb.w	r4, [r8]
 8017ab4:	f88c 4000 	strb.w	r4, [ip]
 8017ab8:	f88e 4000 	strb.w	r4, [lr]
 8017abc:	703c      	strb	r4, [r7, #0]
 8017abe:	6804      	ldr	r4, [r0, #0]
 8017ac0:	b1a4      	cbz	r4, 8017aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017ac2:	8824      	ldrh	r4, [r4, #0]
 8017ac4:	f04f 0901 	mov.w	r9, #1
 8017ac8:	b314      	cbz	r4, 8017b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017aca:	2c2b      	cmp	r4, #43	; 0x2b
 8017acc:	d001      	beq.n	8017ad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017ace:	2c20      	cmp	r4, #32
 8017ad0:	d110      	bne.n	8017af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017ad2:	8014      	strh	r4, [r2, #0]
 8017ad4:	6804      	ldr	r4, [r0, #0]
 8017ad6:	b10c      	cbz	r4, 8017adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017ad8:	3402      	adds	r4, #2
 8017ada:	6004      	str	r4, [r0, #0]
 8017adc:	680c      	ldr	r4, [r1, #0]
 8017ade:	b10c      	cbz	r4, 8017ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017ae0:	3401      	adds	r4, #1
 8017ae2:	600c      	str	r4, [r1, #0]
 8017ae4:	6804      	ldr	r4, [r0, #0]
 8017ae6:	b17c      	cbz	r4, 8017b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017ae8:	8824      	ldrh	r4, [r4, #0]
 8017aea:	e7ed      	b.n	8017ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017aec:	680c      	ldr	r4, [r1, #0]
 8017aee:	b17c      	cbz	r4, 8017b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017af0:	7824      	ldrb	r4, [r4, #0]
 8017af2:	e7e7      	b.n	8017ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017af4:	2c2d      	cmp	r4, #45	; 0x2d
 8017af6:	d102      	bne.n	8017afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017af8:	f883 9000 	strb.w	r9, [r3]
 8017afc:	e7ea      	b.n	8017ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017afe:	2c23      	cmp	r4, #35	; 0x23
 8017b00:	d107      	bne.n	8017b12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017b02:	f888 9000 	strb.w	r9, [r8]
 8017b06:	e7e5      	b.n	8017ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017b08:	680c      	ldr	r4, [r1, #0]
 8017b0a:	b10c      	cbz	r4, 8017b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017b0c:	7824      	ldrb	r4, [r4, #0]
 8017b0e:	e7db      	b.n	8017ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017b10:	2400      	movs	r4, #0
 8017b12:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017b16:	2b09      	cmp	r3, #9
 8017b18:	d901      	bls.n	8017b1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017b1a:	2c2a      	cmp	r4, #42	; 0x2a
 8017b1c:	d122      	bne.n	8017b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017b1e:	2301      	movs	r3, #1
 8017b20:	2c30      	cmp	r4, #48	; 0x30
 8017b22:	f88e 3000 	strb.w	r3, [lr]
 8017b26:	d10d      	bne.n	8017b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017b28:	f88c 3000 	strb.w	r3, [ip]
 8017b2c:	6803      	ldr	r3, [r0, #0]
 8017b2e:	b10b      	cbz	r3, 8017b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017b30:	3302      	adds	r3, #2
 8017b32:	6003      	str	r3, [r0, #0]
 8017b34:	680b      	ldr	r3, [r1, #0]
 8017b36:	b10b      	cbz	r3, 8017b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017b38:	3301      	adds	r3, #1
 8017b3a:	600b      	str	r3, [r1, #0]
 8017b3c:	6803      	ldr	r3, [r0, #0]
 8017b3e:	2b00      	cmp	r3, #0
 8017b40:	d02f      	beq.n	8017ba2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017b42:	881c      	ldrh	r4, [r3, #0]
 8017b44:	2c2a      	cmp	r4, #42	; 0x2a
 8017b46:	d135      	bne.n	8017bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017b48:	f04f 33ff 	mov.w	r3, #4294967295
 8017b4c:	6033      	str	r3, [r6, #0]
 8017b4e:	6803      	ldr	r3, [r0, #0]
 8017b50:	b10b      	cbz	r3, 8017b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017b52:	3302      	adds	r3, #2
 8017b54:	6003      	str	r3, [r0, #0]
 8017b56:	680b      	ldr	r3, [r1, #0]
 8017b58:	b10b      	cbz	r3, 8017b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017b5a:	3301      	adds	r3, #1
 8017b5c:	600b      	str	r3, [r1, #0]
 8017b5e:	6803      	ldr	r3, [r0, #0]
 8017b60:	b31b      	cbz	r3, 8017baa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017b62:	881c      	ldrh	r4, [r3, #0]
 8017b64:	2c2e      	cmp	r4, #46	; 0x2e
 8017b66:	d11a      	bne.n	8017b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b68:	2301      	movs	r3, #1
 8017b6a:	703b      	strb	r3, [r7, #0]
 8017b6c:	6803      	ldr	r3, [r0, #0]
 8017b6e:	b10b      	cbz	r3, 8017b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017b70:	3302      	adds	r3, #2
 8017b72:	6003      	str	r3, [r0, #0]
 8017b74:	680b      	ldr	r3, [r1, #0]
 8017b76:	b10b      	cbz	r3, 8017b7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017b78:	3301      	adds	r3, #1
 8017b7a:	600b      	str	r3, [r1, #0]
 8017b7c:	6803      	ldr	r3, [r0, #0]
 8017b7e:	2b00      	cmp	r3, #0
 8017b80:	d036      	beq.n	8017bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017b82:	881b      	ldrh	r3, [r3, #0]
 8017b84:	2b2a      	cmp	r3, #42	; 0x2a
 8017b86:	d137      	bne.n	8017bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017b88:	f04f 33ff 	mov.w	r3, #4294967295
 8017b8c:	602b      	str	r3, [r5, #0]
 8017b8e:	6803      	ldr	r3, [r0, #0]
 8017b90:	b10b      	cbz	r3, 8017b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017b92:	3302      	adds	r3, #2
 8017b94:	6003      	str	r3, [r0, #0]
 8017b96:	680b      	ldr	r3, [r1, #0]
 8017b98:	b10b      	cbz	r3, 8017b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b9a:	3301      	adds	r3, #1
 8017b9c:	600b      	str	r3, [r1, #0]
 8017b9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017ba2:	680c      	ldr	r4, [r1, #0]
 8017ba4:	b134      	cbz	r4, 8017bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017ba6:	7824      	ldrb	r4, [r4, #0]
 8017ba8:	e7cc      	b.n	8017b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017baa:	680b      	ldr	r3, [r1, #0]
 8017bac:	2b00      	cmp	r3, #0
 8017bae:	d0f6      	beq.n	8017b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017bb0:	781c      	ldrb	r4, [r3, #0]
 8017bb2:	e7d7      	b.n	8017b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017bb4:	2300      	movs	r3, #0
 8017bb6:	6033      	str	r3, [r6, #0]
 8017bb8:	220a      	movs	r2, #10
 8017bba:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017bbe:	fa1f f38c 	uxth.w	r3, ip
 8017bc2:	2b09      	cmp	r3, #9
 8017bc4:	d8ce      	bhi.n	8017b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017bc6:	6833      	ldr	r3, [r6, #0]
 8017bc8:	fb02 c303 	mla	r3, r2, r3, ip
 8017bcc:	6033      	str	r3, [r6, #0]
 8017bce:	6803      	ldr	r3, [r0, #0]
 8017bd0:	b10b      	cbz	r3, 8017bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017bd2:	3302      	adds	r3, #2
 8017bd4:	6003      	str	r3, [r0, #0]
 8017bd6:	680b      	ldr	r3, [r1, #0]
 8017bd8:	b10b      	cbz	r3, 8017bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017bda:	3301      	adds	r3, #1
 8017bdc:	600b      	str	r3, [r1, #0]
 8017bde:	6803      	ldr	r3, [r0, #0]
 8017be0:	b10b      	cbz	r3, 8017be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017be2:	881c      	ldrh	r4, [r3, #0]
 8017be4:	e7e9      	b.n	8017bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017be6:	680c      	ldr	r4, [r1, #0]
 8017be8:	2c00      	cmp	r4, #0
 8017bea:	d0e6      	beq.n	8017bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017bec:	7824      	ldrb	r4, [r4, #0]
 8017bee:	e7e4      	b.n	8017bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017bf0:	680b      	ldr	r3, [r1, #0]
 8017bf2:	b10b      	cbz	r3, 8017bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017bf4:	781b      	ldrb	r3, [r3, #0]
 8017bf6:	e7c5      	b.n	8017b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017bf8:	2200      	movs	r2, #0
 8017bfa:	602a      	str	r2, [r5, #0]
 8017bfc:	240a      	movs	r4, #10
 8017bfe:	3b30      	subs	r3, #48	; 0x30
 8017c00:	b29e      	uxth	r6, r3
 8017c02:	2e09      	cmp	r6, #9
 8017c04:	682a      	ldr	r2, [r5, #0]
 8017c06:	d813      	bhi.n	8017c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017c08:	fb04 3302 	mla	r3, r4, r2, r3
 8017c0c:	602b      	str	r3, [r5, #0]
 8017c0e:	6803      	ldr	r3, [r0, #0]
 8017c10:	b10b      	cbz	r3, 8017c16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017c12:	3302      	adds	r3, #2
 8017c14:	6003      	str	r3, [r0, #0]
 8017c16:	680b      	ldr	r3, [r1, #0]
 8017c18:	b10b      	cbz	r3, 8017c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017c1a:	3301      	adds	r3, #1
 8017c1c:	600b      	str	r3, [r1, #0]
 8017c1e:	6803      	ldr	r3, [r0, #0]
 8017c20:	b10b      	cbz	r3, 8017c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017c22:	881b      	ldrh	r3, [r3, #0]
 8017c24:	e7eb      	b.n	8017bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017c26:	680b      	ldr	r3, [r1, #0]
 8017c28:	2b00      	cmp	r3, #0
 8017c2a:	d0e8      	beq.n	8017bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017c2c:	781b      	ldrb	r3, [r3, #0]
 8017c2e:	e7e6      	b.n	8017bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017c30:	2a06      	cmp	r2, #6
 8017c32:	bfa8      	it	ge
 8017c34:	2206      	movge	r2, #6
 8017c36:	602a      	str	r2, [r5, #0]
 8017c38:	e7b1      	b.n	8017b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017c3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c3e:	b0a3      	sub	sp, #140	; 0x8c
 8017c40:	2600      	movs	r6, #0
 8017c42:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017c46:	4607      	mov	r7, r0
 8017c48:	4688      	mov	r8, r1
 8017c4a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017c4e:	4631      	mov	r1, r6
 8017c50:	2242      	movs	r2, #66	; 0x42
 8017c52:	4648      	mov	r0, r9
 8017c54:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017c56:	960d      	str	r6, [sp, #52]	; 0x34
 8017c58:	f012 f881 	bl	8029d5e <memset>
 8017c5c:	b15f      	cbz	r7, 8017c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017c5e:	f108 3aff 	add.w	sl, r8, #4294967295
 8017c62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017c64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c66:	b152      	cbz	r2, 8017c7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017c68:	8812      	ldrh	r2, [r2, #0]
 8017c6a:	b10a      	cbz	r2, 8017c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017c6c:	459a      	cmp	sl, r3
 8017c6e:	dc2e      	bgt.n	8017cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017c70:	2200      	movs	r2, #0
 8017c72:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017c76:	4638      	mov	r0, r7
 8017c78:	b023      	add	sp, #140	; 0x8c
 8017c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c7e:	9a08      	ldr	r2, [sp, #32]
 8017c80:	2a00      	cmp	r2, #0
 8017c82:	d0f5      	beq.n	8017c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017c84:	7812      	ldrb	r2, [r2, #0]
 8017c86:	e7f0      	b.n	8017c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017c88:	2d00      	cmp	r5, #0
 8017c8a:	d0ea      	beq.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c8c:	782a      	ldrb	r2, [r5, #0]
 8017c8e:	b142      	cbz	r2, 8017ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017c90:	2a25      	cmp	r2, #37	; 0x25
 8017c92:	d001      	beq.n	8017c98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017c94:	459a      	cmp	sl, r3
 8017c96:	dc08      	bgt.n	8017caa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017c98:	f1bb 0f00 	cmp.w	fp, #0
 8017c9c:	d121      	bne.n	8017ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017c9e:	2d00      	cmp	r5, #0
 8017ca0:	d0df      	beq.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ca2:	782a      	ldrb	r2, [r5, #0]
 8017ca4:	f04f 0b00 	mov.w	fp, #0
 8017ca8:	e01d      	b.n	8017ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017caa:	f1bb 0f00 	cmp.w	fp, #0
 8017cae:	d078      	beq.n	8017da2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017cb0:	f8bb 2000 	ldrh.w	r2, [fp]
 8017cb4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017cb8:	f1bb 0f00 	cmp.w	fp, #0
 8017cbc:	d002      	beq.n	8017cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017cbe:	f10b 0202 	add.w	r2, fp, #2
 8017cc2:	9209      	str	r2, [sp, #36]	; 0x24
 8017cc4:	b10d      	cbz	r5, 8017cca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017cc6:	3501      	adds	r5, #1
 8017cc8:	9508      	str	r5, [sp, #32]
 8017cca:	3301      	adds	r3, #1
 8017ccc:	930d      	str	r3, [sp, #52]	; 0x34
 8017cce:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017cd2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017cd4:	f1bb 0f00 	cmp.w	fp, #0
 8017cd8:	d0d6      	beq.n	8017c88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017cda:	f8bb 2000 	ldrh.w	r2, [fp]
 8017cde:	2a00      	cmp	r2, #0
 8017ce0:	d1d6      	bne.n	8017c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017ce2:	f8bb 2000 	ldrh.w	r2, [fp]
 8017ce6:	2a00      	cmp	r2, #0
 8017ce8:	d0bb      	beq.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017cea:	459a      	cmp	sl, r3
 8017cec:	ddb9      	ble.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017cee:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017cf2:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017cf6:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017cfa:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017cfe:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017d02:	960e      	str	r6, [sp, #56]	; 0x38
 8017d04:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017d08:	960f      	str	r6, [sp, #60]	; 0x3c
 8017d0a:	f1bb 0f00 	cmp.w	fp, #0
 8017d0e:	d002      	beq.n	8017d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017d10:	f10b 0302 	add.w	r3, fp, #2
 8017d14:	9309      	str	r3, [sp, #36]	; 0x24
 8017d16:	b10d      	cbz	r5, 8017d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017d18:	1c6b      	adds	r3, r5, #1
 8017d1a:	9308      	str	r3, [sp, #32]
 8017d1c:	ab0f      	add	r3, sp, #60	; 0x3c
 8017d1e:	9305      	str	r3, [sp, #20]
 8017d20:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017d24:	9304      	str	r3, [sp, #16]
 8017d26:	ab0e      	add	r3, sp, #56	; 0x38
 8017d28:	9303      	str	r3, [sp, #12]
 8017d2a:	ab0c      	add	r3, sp, #48	; 0x30
 8017d2c:	9302      	str	r3, [sp, #8]
 8017d2e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017d32:	9301      	str	r3, [sp, #4]
 8017d34:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017d38:	9300      	str	r3, [sp, #0]
 8017d3a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017d3e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017d42:	a908      	add	r1, sp, #32
 8017d44:	a809      	add	r0, sp, #36	; 0x24
 8017d46:	f7ff fea8 	bl	8017a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017d4a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d4c:	2b00      	cmp	r3, #0
 8017d4e:	bfbe      	ittt	lt
 8017d50:	6823      	ldrlt	r3, [r4, #0]
 8017d52:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017d56:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017d58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d5a:	bfb8      	it	lt
 8017d5c:	3404      	addlt	r4, #4
 8017d5e:	2b00      	cmp	r3, #0
 8017d60:	bfb8      	it	lt
 8017d62:	6823      	ldrlt	r3, [r4, #0]
 8017d64:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017d68:	bfbe      	ittt	lt
 8017d6a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017d6e:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017d70:	3404      	addlt	r4, #4
 8017d72:	b1d9      	cbz	r1, 8017dac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017d74:	880b      	ldrh	r3, [r1, #0]
 8017d76:	2b69      	cmp	r3, #105	; 0x69
 8017d78:	d01f      	beq.n	8017dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d7a:	d82f      	bhi.n	8017ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017d7c:	2b58      	cmp	r3, #88	; 0x58
 8017d7e:	d01c      	beq.n	8017dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d80:	d818      	bhi.n	8017db4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017d82:	2b25      	cmp	r3, #37	; 0x25
 8017d84:	d034      	beq.n	8017df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017d86:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017d8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d8c:	f1bb 0f00 	cmp.w	fp, #0
 8017d90:	f000 80b8 	beq.w	8017f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017d94:	f8bb 5000 	ldrh.w	r5, [fp]
 8017d98:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017d9c:	3301      	adds	r3, #1
 8017d9e:	930d      	str	r3, [sp, #52]	; 0x34
 8017da0:	e029      	b.n	8017df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017da2:	b10d      	cbz	r5, 8017da8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017da4:	782a      	ldrb	r2, [r5, #0]
 8017da6:	e785      	b.n	8017cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017da8:	462a      	mov	r2, r5
 8017daa:	e783      	b.n	8017cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017dac:	2a00      	cmp	r2, #0
 8017dae:	d0ea      	beq.n	8017d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017db0:	7813      	ldrb	r3, [r2, #0]
 8017db2:	e7e0      	b.n	8017d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017db4:	3b63      	subs	r3, #99	; 0x63
 8017db6:	2b01      	cmp	r3, #1
 8017db8:	d8e5      	bhi.n	8017d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017dba:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017dbe:	b329      	cbz	r1, 8017e0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017dc0:	880b      	ldrh	r3, [r1, #0]
 8017dc2:	2b69      	cmp	r3, #105	; 0x69
 8017dc4:	d063      	beq.n	8017e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017dc6:	d825      	bhi.n	8017e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017dc8:	2b63      	cmp	r3, #99	; 0x63
 8017dca:	d038      	beq.n	8017e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017dcc:	2b64      	cmp	r3, #100	; 0x64
 8017dce:	d05e      	beq.n	8017e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017dd0:	2b58      	cmp	r3, #88	; 0x58
 8017dd2:	d07b      	beq.n	8017ecc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017dd4:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8017dd8:	4625      	mov	r5, r4
 8017dda:	e036      	b.n	8017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017ddc:	2b73      	cmp	r3, #115	; 0x73
 8017dde:	d0ec      	beq.n	8017dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017de0:	d802      	bhi.n	8017de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017de2:	2b6f      	cmp	r3, #111	; 0x6f
 8017de4:	d1cf      	bne.n	8017d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017de6:	e7e8      	b.n	8017dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017de8:	2b75      	cmp	r3, #117	; 0x75
 8017dea:	d0e6      	beq.n	8017dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017dec:	2b78      	cmp	r3, #120	; 0x78
 8017dee:	e7f9      	b.n	8017de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017df0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017df2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017df6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017df8:	b10b      	cbz	r3, 8017dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017dfa:	3302      	adds	r3, #2
 8017dfc:	9309      	str	r3, [sp, #36]	; 0x24
 8017dfe:	9b08      	ldr	r3, [sp, #32]
 8017e00:	2b00      	cmp	r3, #0
 8017e02:	f43f af2e 	beq.w	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017e06:	3301      	adds	r3, #1
 8017e08:	9308      	str	r3, [sp, #32]
 8017e0a:	e72a      	b.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017e0c:	2a00      	cmp	r2, #0
 8017e0e:	d0e1      	beq.n	8017dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017e10:	7813      	ldrb	r3, [r2, #0]
 8017e12:	e7d6      	b.n	8017dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017e14:	2b73      	cmp	r3, #115	; 0x73
 8017e16:	d036      	beq.n	8017e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017e18:	d807      	bhi.n	8017e2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017e1a:	2b6f      	cmp	r3, #111	; 0x6f
 8017e1c:	d1da      	bne.n	8017dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017e1e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e20:	1d25      	adds	r5, r4, #4
 8017e22:	eba8 0202 	sub.w	r2, r8, r2
 8017e26:	2308      	movs	r3, #8
 8017e28:	e04a      	b.n	8017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017e2a:	2b75      	cmp	r3, #117	; 0x75
 8017e2c:	d043      	beq.n	8017eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017e2e:	2b78      	cmp	r3, #120	; 0x78
 8017e30:	d1d0      	bne.n	8017dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017e32:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e34:	1d25      	adds	r5, r4, #4
 8017e36:	eba8 0202 	sub.w	r2, r8, r2
 8017e3a:	2310      	movs	r3, #16
 8017e3c:	e040      	b.n	8017ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017e3e:	6823      	ldr	r3, [r4, #0]
 8017e40:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8017e44:	1d25      	adds	r5, r4, #4
 8017e46:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017e4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017e4c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017e50:	2b00      	cmp	r3, #0
 8017e52:	d052      	beq.n	8017efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017e54:	881a      	ldrh	r2, [r3, #0]
 8017e56:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017e5a:	a80d      	add	r0, sp, #52	; 0x34
 8017e5c:	9005      	str	r0, [sp, #20]
 8017e5e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8017e62:	9004      	str	r0, [sp, #16]
 8017e64:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017e66:	9003      	str	r0, [sp, #12]
 8017e68:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017e6c:	9002      	str	r0, [sp, #8]
 8017e6e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017e70:	9001      	str	r0, [sp, #4]
 8017e72:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8017e76:	9000      	str	r0, [sp, #0]
 8017e78:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017e7c:	a810      	add	r0, sp, #64	; 0x40
 8017e7e:	f7ff fd49 	bl	8017914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017e82:	462c      	mov	r4, r5
 8017e84:	e7b7      	b.n	8017df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017e86:	6823      	ldr	r3, [r4, #0]
 8017e88:	1d25      	adds	r5, r4, #4
 8017e8a:	9310      	str	r3, [sp, #64]	; 0x40
 8017e8c:	e7dd      	b.n	8017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e8e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e90:	6820      	ldr	r0, [r4, #0]
 8017e92:	eba8 0202 	sub.w	r2, r8, r2
 8017e96:	230a      	movs	r3, #10
 8017e98:	b292      	uxth	r2, r2
 8017e9a:	4649      	mov	r1, r9
 8017e9c:	f7ff fce4 	bl	8017868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017ea0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017ea4:	2b2d      	cmp	r3, #45	; 0x2d
 8017ea6:	f104 0504 	add.w	r5, r4, #4
 8017eaa:	d1ce      	bne.n	8017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017eac:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017eb0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017eb2:	3302      	adds	r3, #2
 8017eb4:	e7e9      	b.n	8017e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017eb6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017eb8:	1d25      	adds	r5, r4, #4
 8017eba:	eba8 0202 	sub.w	r2, r8, r2
 8017ebe:	230a      	movs	r3, #10
 8017ec0:	b292      	uxth	r2, r2
 8017ec2:	4649      	mov	r1, r9
 8017ec4:	6820      	ldr	r0, [r4, #0]
 8017ec6:	f7ff fcfb 	bl	80178c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017eca:	e7be      	b.n	8017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017ecc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017ece:	6820      	ldr	r0, [r4, #0]
 8017ed0:	eba8 0202 	sub.w	r2, r8, r2
 8017ed4:	b292      	uxth	r2, r2
 8017ed6:	2310      	movs	r3, #16
 8017ed8:	4649      	mov	r1, r9
 8017eda:	f7ff fcf1 	bl	80178c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017ede:	1d25      	adds	r5, r4, #4
 8017ee0:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8017ee4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017ee8:	2b00      	cmp	r3, #0
 8017eea:	d0ae      	beq.n	8017e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017eec:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017ef0:	2919      	cmp	r1, #25
 8017ef2:	d8f7      	bhi.n	8017ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017ef4:	3b20      	subs	r3, #32
 8017ef6:	8013      	strh	r3, [r2, #0]
 8017ef8:	e7f4      	b.n	8017ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017efa:	9a08      	ldr	r2, [sp, #32]
 8017efc:	2a00      	cmp	r2, #0
 8017efe:	d0aa      	beq.n	8017e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017f00:	7812      	ldrb	r2, [r2, #0]
 8017f02:	e7a8      	b.n	8017e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017f04:	2d00      	cmp	r5, #0
 8017f06:	f43f af47 	beq.w	8017d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017f0a:	782d      	ldrb	r5, [r5, #0]
 8017f0c:	e744      	b.n	8017d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017f0e:	b507      	push	{r0, r1, r2, lr}
 8017f10:	9300      	str	r3, [sp, #0]
 8017f12:	4613      	mov	r3, r2
 8017f14:	2200      	movs	r2, #0
 8017f16:	f7ff fe90 	bl	8017c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017f1a:	b003      	add	sp, #12
 8017f1c:	f85d fb04 	ldr.w	pc, [sp], #4

08017f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017f20:	b40c      	push	{r2, r3}
 8017f22:	b507      	push	{r0, r1, r2, lr}
 8017f24:	ab04      	add	r3, sp, #16
 8017f26:	f853 2b04 	ldr.w	r2, [r3], #4
 8017f2a:	9301      	str	r3, [sp, #4]
 8017f2c:	f7ff ffef 	bl	8017f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017f30:	b003      	add	sp, #12
 8017f32:	f85d eb04 	ldr.w	lr, [sp], #4
 8017f36:	b002      	add	sp, #8
 8017f38:	4770      	bx	lr
	...

08017f3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8017f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f40:	b0c5      	sub	sp, #276	; 0x114
 8017f42:	2400      	movs	r4, #0
 8017f44:	af11      	add	r7, sp, #68	; 0x44
 8017f46:	4606      	mov	r6, r0
 8017f48:	468a      	mov	sl, r1
 8017f4a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017f4e:	4621      	mov	r1, r4
 8017f50:	22c8      	movs	r2, #200	; 0xc8
 8017f52:	4638      	mov	r0, r7
 8017f54:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8017f58:	940d      	str	r4, [sp, #52]	; 0x34
 8017f5a:	f011 ff00 	bl	8029d5e <memset>
 8017f5e:	b16e      	cbz	r6, 8017f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8017f60:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 8018204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8017f64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f66:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f68:	b162      	cbz	r2, 8017f84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8017f6a:	8812      	ldrh	r2, [r2, #0]
 8017f6c:	b11a      	cbz	r2, 8017f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017f6e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8017f72:	4299      	cmp	r1, r3
 8017f74:	dc2e      	bgt.n	8017fd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8017f76:	2200      	movs	r2, #0
 8017f78:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017f7c:	4630      	mov	r0, r6
 8017f7e:	b045      	add	sp, #276	; 0x114
 8017f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f84:	9a08      	ldr	r2, [sp, #32]
 8017f86:	2a00      	cmp	r2, #0
 8017f88:	d0f5      	beq.n	8017f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017f8a:	7812      	ldrb	r2, [r2, #0]
 8017f8c:	e7ee      	b.n	8017f6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8017f8e:	2d00      	cmp	r5, #0
 8017f90:	d0e8      	beq.n	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f92:	782a      	ldrb	r2, [r5, #0]
 8017f94:	b142      	cbz	r2, 8017fa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8017f96:	2a25      	cmp	r2, #37	; 0x25
 8017f98:	d001      	beq.n	8017f9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8017f9a:	4299      	cmp	r1, r3
 8017f9c:	dc08      	bgt.n	8017fb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8017f9e:	f1b8 0f00 	cmp.w	r8, #0
 8017fa2:	d121      	bne.n	8017fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8017fa4:	2d00      	cmp	r5, #0
 8017fa6:	d0dd      	beq.n	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017fa8:	782a      	ldrb	r2, [r5, #0]
 8017faa:	f04f 0800 	mov.w	r8, #0
 8017fae:	e01d      	b.n	8017fec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8017fb0:	f1b8 0f00 	cmp.w	r8, #0
 8017fb4:	d07f      	beq.n	80180b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8017fb6:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fba:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017fbe:	f1b8 0f00 	cmp.w	r8, #0
 8017fc2:	d002      	beq.n	8017fca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8017fc4:	f108 0202 	add.w	r2, r8, #2
 8017fc8:	9209      	str	r2, [sp, #36]	; 0x24
 8017fca:	b10d      	cbz	r5, 8017fd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8017fcc:	3501      	adds	r5, #1
 8017fce:	9508      	str	r5, [sp, #32]
 8017fd0:	3301      	adds	r3, #1
 8017fd2:	930d      	str	r3, [sp, #52]	; 0x34
 8017fd4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8017fd8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017fda:	f1b8 0f00 	cmp.w	r8, #0
 8017fde:	d0d6      	beq.n	8017f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8017fe0:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fe4:	2a00      	cmp	r2, #0
 8017fe6:	d1d6      	bne.n	8017f96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8017fe8:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fec:	2a00      	cmp	r2, #0
 8017fee:	d0b9      	beq.n	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017ff0:	4299      	cmp	r1, r3
 8017ff2:	ddb7      	ble.n	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017ff4:	2300      	movs	r3, #0
 8017ff6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017ffa:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8017ffe:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8018002:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8018006:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 801800a:	930e      	str	r3, [sp, #56]	; 0x38
 801800c:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018010:	930f      	str	r3, [sp, #60]	; 0x3c
 8018012:	f1b8 0f00 	cmp.w	r8, #0
 8018016:	d002      	beq.n	801801e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018018:	f108 0302 	add.w	r3, r8, #2
 801801c:	9309      	str	r3, [sp, #36]	; 0x24
 801801e:	b10d      	cbz	r5, 8018024 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018020:	1c6b      	adds	r3, r5, #1
 8018022:	9308      	str	r3, [sp, #32]
 8018024:	ab0f      	add	r3, sp, #60	; 0x3c
 8018026:	9305      	str	r3, [sp, #20]
 8018028:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 801802c:	9304      	str	r3, [sp, #16]
 801802e:	ab0e      	add	r3, sp, #56	; 0x38
 8018030:	9303      	str	r3, [sp, #12]
 8018032:	ab0c      	add	r3, sp, #48	; 0x30
 8018034:	9302      	str	r3, [sp, #8]
 8018036:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801803a:	9301      	str	r3, [sp, #4]
 801803c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8018040:	9300      	str	r3, [sp, #0]
 8018042:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8018046:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801804a:	a908      	add	r1, sp, #32
 801804c:	a809      	add	r0, sp, #36	; 0x24
 801804e:	f7ff fd24 	bl	8017a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8018052:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018054:	2b00      	cmp	r3, #0
 8018056:	da0b      	bge.n	8018070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018058:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801805c:	edd3 7a00 	vldr	s15, [r3]
 8018060:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018064:	3401      	adds	r4, #1
 8018066:	ee17 3a90 	vmov	r3, s15
 801806a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801806e:	930e      	str	r3, [sp, #56]	; 0x38
 8018070:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018072:	2b00      	cmp	r3, #0
 8018074:	da0b      	bge.n	801808e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8018076:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801807a:	edd3 7a00 	vldr	s15, [r3]
 801807e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8018082:	3401      	adds	r4, #1
 8018084:	ee17 3a90 	vmov	r3, s15
 8018088:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801808c:	930f      	str	r3, [sp, #60]	; 0x3c
 801808e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018090:	b1b3      	cbz	r3, 80180c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8018092:	881a      	ldrh	r2, [r3, #0]
 8018094:	2a25      	cmp	r2, #37	; 0x25
 8018096:	d018      	beq.n	80180ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018098:	2a66      	cmp	r2, #102	; 0x66
 801809a:	d01c      	beq.n	80180d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801809c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80180a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180a2:	f1b8 0f00 	cmp.w	r8, #0
 80180a6:	f000 8121 	beq.w	80182ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 80180aa:	f8b8 5000 	ldrh.w	r5, [r8]
 80180ae:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80180b2:	3301      	adds	r3, #1
 80180b4:	e00d      	b.n	80180d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80180b6:	b10d      	cbz	r5, 80180bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80180b8:	782a      	ldrb	r2, [r5, #0]
 80180ba:	e77e      	b.n	8017fba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80180bc:	462a      	mov	r2, r5
 80180be:	e77c      	b.n	8017fba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80180c0:	9b08      	ldr	r3, [sp, #32]
 80180c2:	2b00      	cmp	r3, #0
 80180c4:	d0ea      	beq.n	801809c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80180c6:	781a      	ldrb	r2, [r3, #0]
 80180c8:	e7e4      	b.n	8018094 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80180ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80180cc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80180d0:	3302      	adds	r3, #2
 80180d2:	930d      	str	r3, [sp, #52]	; 0x34
 80180d4:	e041      	b.n	801815a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80180d6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80180da:	edd3 7a00 	vldr	s15, [r3]
 80180de:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80180e2:	9710      	str	r7, [sp, #64]	; 0x40
 80180e4:	3401      	adds	r4, #1
 80180e6:	b923      	cbnz	r3, 80180f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80180e8:	2301      	movs	r3, #1
 80180ea:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80180ee:	2306      	movs	r3, #6
 80180f0:	930f      	str	r3, [sp, #60]	; 0x3c
 80180f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80180f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180fa:	bf48      	it	mi
 80180fc:	eef1 7a67 	vnegmi.f32	s15, s15
 8018100:	eeb0 7ae7 	vabs.f32	s14, s15
 8018104:	bf48      	it	mi
 8018106:	232d      	movmi	r3, #45	; 0x2d
 8018108:	eeb4 7a45 	vcmp.f32	s14, s10
 801810c:	bf48      	it	mi
 801810e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 8018112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018116:	dd2b      	ble.n	8018170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018118:	4b3b      	ldr	r3, [pc, #236]	; (8018208 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801811a:	9311      	str	r3, [sp, #68]	; 0x44
 801811c:	2366      	movs	r3, #102	; 0x66
 801811e:	9312      	str	r3, [sp, #72]	; 0x48
 8018120:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018122:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8018126:	2b00      	cmp	r3, #0
 8018128:	f000 80da 	beq.w	80182e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 801812c:	881a      	ldrh	r2, [r3, #0]
 801812e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8018132:	a80d      	add	r0, sp, #52	; 0x34
 8018134:	9005      	str	r0, [sp, #20]
 8018136:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801813a:	9004      	str	r0, [sp, #16]
 801813c:	980e      	ldr	r0, [sp, #56]	; 0x38
 801813e:	9003      	str	r0, [sp, #12]
 8018140:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8018144:	9002      	str	r0, [sp, #8]
 8018146:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018148:	9001      	str	r0, [sp, #4]
 801814a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 801814e:	9000      	str	r0, [sp, #0]
 8018150:	e9cd a606 	strd	sl, r6, [sp, #24]
 8018154:	a810      	add	r0, sp, #64	; 0x40
 8018156:	f7ff fbdd 	bl	8017914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801815a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801815c:	b10b      	cbz	r3, 8018162 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801815e:	3302      	adds	r3, #2
 8018160:	9309      	str	r3, [sp, #36]	; 0x24
 8018162:	9b08      	ldr	r3, [sp, #32]
 8018164:	2b00      	cmp	r3, #0
 8018166:	f43f aefd 	beq.w	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801816a:	3301      	adds	r3, #1
 801816c:	9308      	str	r3, [sp, #32]
 801816e:	e6f9      	b.n	8017f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018170:	eef4 7a67 	vcmp.f32	s15, s15
 8018174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018178:	d63a      	bvs.n	80181f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801817a:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 801817e:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8018182:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 8018186:	eeb0 6a67 	vmov.f32	s12, s15
 801818a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801818e:	eef0 5a47 	vmov.f32	s11, s14
 8018192:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8018196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801819a:	da2d      	bge.n	80181f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801819c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801819e:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80181a2:	2100      	movs	r1, #0
 80181a4:	eef0 4a46 	vmov.f32	s9, s12
 80181a8:	ebaa 0202 	sub.w	r2, sl, r2
 80181ac:	eef4 6ac6 	vcmpe.f32	s13, s12
 80181b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80181b4:	b28d      	uxth	r5, r1
 80181b6:	db2c      	blt.n	8018212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80181b8:	1a53      	subs	r3, r2, r1
 80181ba:	2b00      	cmp	r3, #0
 80181bc:	dd29      	ble.n	8018212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80181be:	3101      	adds	r1, #1
 80181c0:	2964      	cmp	r1, #100	; 0x64
 80181c2:	d025      	beq.n	8018210 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80181c4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80181c8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80181cc:	ee17 3a10 	vmov	r3, s14
 80181d0:	2b09      	cmp	r3, #9
 80181d2:	bfa8      	it	ge
 80181d4:	2309      	movge	r3, #9
 80181d6:	ee07 3a10 	vmov	s14, r3
 80181da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80181de:	f103 0030 	add.w	r0, r3, #48	; 0x30
 80181e2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80181e6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80181ea:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80181ee:	e7dd      	b.n	80181ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80181f0:	4b06      	ldr	r3, [pc, #24]	; (801820c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80181f2:	9311      	str	r3, [sp, #68]	; 0x44
 80181f4:	236e      	movs	r3, #110	; 0x6e
 80181f6:	e792      	b.n	801811e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80181f8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80181fc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018200:	e7c7      	b.n	8018192 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8018202:	bf00      	nop
 8018204:	7f7fffff 	.word	0x7f7fffff
 8018208:	006e0069 	.word	0x006e0069
 801820c:	0061006e 	.word	0x0061006e
 8018210:	2563      	movs	r5, #99	; 0x63
 8018212:	2a63      	cmp	r2, #99	; 0x63
 8018214:	bfd4      	ite	le
 8018216:	ebc5 0202 	rsble	r2, r5, r2
 801821a:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 801821e:	2a00      	cmp	r2, #0
 8018220:	dd43      	ble.n	80182aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018222:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018224:	2b00      	cmp	r3, #0
 8018226:	dd40      	ble.n	80182aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018228:	f04f 0901 	mov.w	r9, #1
 801822c:	210a      	movs	r1, #10
 801822e:	f113 33ff 	adds.w	r3, r3, #4294967295
 8018232:	d30c      	bcc.n	801824e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 8018234:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8018238:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801823c:	ee17 0a10 	vmov	r0, s14
 8018240:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018244:	fb01 0909 	mla	r9, r1, r9, r0
 8018248:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801824c:	e7ef      	b.n	801822e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 801824e:	3501      	adds	r5, #1
 8018250:	930f      	str	r3, [sp, #60]	; 0x3c
 8018252:	b292      	uxth	r2, r2
 8018254:	230a      	movs	r3, #10
 8018256:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801825a:	4648      	mov	r0, r9
 801825c:	f7ff fb4e 	bl	80178fc <_ZN8touchgfx7Unicode4itoaElPtti>
 8018260:	f1b9 0f01 	cmp.w	r9, #1
 8018264:	dc1f      	bgt.n	80182a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 8018266:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 801826a:	2b00      	cmp	r3, #0
 801826c:	bf0c      	ite	eq
 801826e:	2300      	moveq	r3, #0
 8018270:	232e      	movne	r3, #46	; 0x2e
 8018272:	aa44      	add	r2, sp, #272	; 0x110
 8018274:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018278:	eef4 7ae4 	vcmpe.f32	s15, s9
 801827c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018280:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8018284:	f6ff af4c 	blt.w	8018120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018288:	2300      	movs	r3, #0
 801828a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801828e:	1c59      	adds	r1, r3, #1
 8018290:	b98a      	cbnz	r2, 80182b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 8018292:	b29b      	uxth	r3, r3
 8018294:	2130      	movs	r1, #48	; 0x30
 8018296:	b983      	cbnz	r3, 80182ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018298:	2331      	movs	r3, #49	; 0x31
 801829a:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 801829e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80182a0:	3b02      	subs	r3, #2
 80182a2:	9310      	str	r3, [sp, #64]	; 0x40
 80182a4:	e73c      	b.n	8018120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80182a6:	232e      	movs	r3, #46	; 0x2e
 80182a8:	e7e3      	b.n	8018272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 80182aa:	ab44      	add	r3, sp, #272	; 0x110
 80182ac:	3501      	adds	r5, #1
 80182ae:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80182b2:	2300      	movs	r3, #0
 80182b4:	e7e0      	b.n	8018278 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80182b6:	460b      	mov	r3, r1
 80182b8:	e7e7      	b.n	801828a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 80182ba:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80182be:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 80182c2:	2808      	cmp	r0, #8
 80182c4:	d806      	bhi.n	80182d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 80182c6:	a944      	add	r1, sp, #272	; 0x110
 80182c8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80182cc:	3201      	adds	r2, #1
 80182ce:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80182d2:	e725      	b.n	8018120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80182d4:	2a39      	cmp	r2, #57	; 0x39
 80182d6:	bf08      	it	eq
 80182d8:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80182dc:	3b01      	subs	r3, #1
 80182de:	e7da      	b.n	8018296 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 80182e0:	9a08      	ldr	r2, [sp, #32]
 80182e2:	2a00      	cmp	r2, #0
 80182e4:	f43f af23 	beq.w	801812e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80182e8:	7812      	ldrb	r2, [r2, #0]
 80182ea:	e720      	b.n	801812e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80182ec:	2d00      	cmp	r5, #0
 80182ee:	f43f aede 	beq.w	80180ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80182f2:	782d      	ldrb	r5, [r5, #0]
 80182f4:	e6db      	b.n	80180ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80182f6:	bf00      	nop

080182f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80182f8:	b507      	push	{r0, r1, r2, lr}
 80182fa:	9300      	str	r3, [sp, #0]
 80182fc:	4613      	mov	r3, r2
 80182fe:	2200      	movs	r2, #0
 8018300:	f7ff fe1c 	bl	8017f3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8018304:	b003      	add	sp, #12
 8018306:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0801830c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 801830c:	4b01      	ldr	r3, [pc, #4]	; (8018314 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801830e:	6018      	str	r0, [r3, #0]
 8018310:	4770      	bx	lr
 8018312:	bf00      	nop
 8018314:	20012e1c 	.word	0x20012e1c

08018318 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018318:	4b06      	ldr	r3, [pc, #24]	; (8018334 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801831a:	881a      	ldrh	r2, [r3, #0]
 801831c:	4282      	cmp	r2, r0
 801831e:	d807      	bhi.n	8018330 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018320:	4b05      	ldr	r3, [pc, #20]	; (8018338 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018322:	881b      	ldrh	r3, [r3, #0]
 8018324:	4413      	add	r3, r2
 8018326:	4298      	cmp	r0, r3
 8018328:	bfac      	ite	ge
 801832a:	2000      	movge	r0, #0
 801832c:	2001      	movlt	r0, #1
 801832e:	4770      	bx	lr
 8018330:	2000      	movs	r0, #0
 8018332:	4770      	bx	lr
 8018334:	20012e3c 	.word	0x20012e3c
 8018338:	20012e40 	.word	0x20012e40

0801833c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 801833c:	b508      	push	{r3, lr}
 801833e:	4601      	mov	r1, r0
 8018340:	f7ff ffea 	bl	8018318 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018344:	b118      	cbz	r0, 801834e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018346:	4b02      	ldr	r3, [pc, #8]	; (8018350 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018348:	681b      	ldr	r3, [r3, #0]
 801834a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 801834e:	bd08      	pop	{r3, pc}
 8018350:	20012e20 	.word	0x20012e20

08018354 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018354:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018356:	4c24      	ldr	r4, [pc, #144]	; (80183e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018358:	6823      	ldr	r3, [r4, #0]
 801835a:	2b00      	cmp	r3, #0
 801835c:	d042      	beq.n	80183e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801835e:	4a23      	ldr	r2, [pc, #140]	; (80183ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018360:	4d23      	ldr	r5, [pc, #140]	; (80183f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018362:	8811      	ldrh	r1, [r2, #0]
 8018364:	f8b5 c000 	ldrh.w	ip, [r5]
 8018368:	4822      	ldr	r0, [pc, #136]	; (80183f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801836a:	4461      	add	r1, ip
 801836c:	1c4a      	adds	r2, r1, #1
 801836e:	f022 0201 	bic.w	r2, r2, #1
 8018372:	008f      	lsls	r7, r1, #2
 8018374:	0412      	lsls	r2, r2, #16
 8018376:	19de      	adds	r6, r3, r7
 8018378:	0c12      	lsrs	r2, r2, #16
 801837a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801837e:	6006      	str	r6, [r0, #0]
 8018380:	4e1d      	ldr	r6, [pc, #116]	; (80183f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018382:	19da      	adds	r2, r3, r7
 8018384:	6032      	str	r2, [r6, #0]
 8018386:	220e      	movs	r2, #14
 8018388:	fb02 f20c 	mul.w	r2, r2, ip
 801838c:	3203      	adds	r2, #3
 801838e:	f022 0203 	bic.w	r2, r2, #3
 8018392:	443a      	add	r2, r7
 8018394:	4f19      	ldr	r7, [pc, #100]	; (80183fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8018396:	4413      	add	r3, r2
 8018398:	603b      	str	r3, [r7, #0]
 801839a:	4f19      	ldr	r7, [pc, #100]	; (8018400 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801839c:	2300      	movs	r3, #0
 801839e:	803b      	strh	r3, [r7, #0]
 80183a0:	4f18      	ldr	r7, [pc, #96]	; (8018404 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80183a2:	683f      	ldr	r7, [r7, #0]
 80183a4:	1aba      	subs	r2, r7, r2
 80183a6:	4f18      	ldr	r7, [pc, #96]	; (8018408 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80183a8:	603a      	str	r2, [r7, #0]
 80183aa:	4a18      	ldr	r2, [pc, #96]	; (801840c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80183ac:	469c      	mov	ip, r3
 80183ae:	8013      	strh	r3, [r2, #0]
 80183b0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 80183b4:	428b      	cmp	r3, r1
 80183b6:	d10d      	bne.n	80183d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80183b8:	882d      	ldrh	r5, [r5, #0]
 80183ba:	6830      	ldr	r0, [r6, #0]
 80183bc:	2300      	movs	r3, #0
 80183be:	240e      	movs	r4, #14
 80183c0:	429d      	cmp	r5, r3
 80183c2:	d90f      	bls.n	80183e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80183c4:	fb04 0203 	mla	r2, r4, r3, r0
 80183c8:	3301      	adds	r3, #1
 80183ca:	7b11      	ldrb	r1, [r2, #12]
 80183cc:	f36f 1145 	bfc	r1, #5, #1
 80183d0:	7311      	strb	r1, [r2, #12]
 80183d2:	e7f5      	b.n	80183c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80183d4:	6822      	ldr	r2, [r4, #0]
 80183d6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80183da:	6802      	ldr	r2, [r0, #0]
 80183dc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80183e0:	3301      	adds	r3, #1
 80183e2:	e7e7      	b.n	80183b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80183e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80183e6:	bf00      	nop
 80183e8:	20012e20 	.word	0x20012e20
 80183ec:	20012e3c 	.word	0x20012e3c
 80183f0:	20012e40 	.word	0x20012e40
 80183f4:	20012e34 	.word	0x20012e34
 80183f8:	20012e24 	.word	0x20012e24
 80183fc:	20012e2c 	.word	0x20012e2c
 8018400:	20012e3e 	.word	0x20012e3e
 8018404:	20012e28 	.word	0x20012e28
 8018408:	20012e38 	.word	0x20012e38
 801840c:	20012e30 	.word	0x20012e30

08018410 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018410:	4b06      	ldr	r3, [pc, #24]	; (801842c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018412:	681b      	ldr	r3, [r3, #0]
 8018414:	b943      	cbnz	r3, 8018428 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018416:	b139      	cbz	r1, 8018428 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018418:	4b05      	ldr	r3, [pc, #20]	; (8018430 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801841a:	801a      	strh	r2, [r3, #0]
 801841c:	4b05      	ldr	r3, [pc, #20]	; (8018434 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801841e:	6019      	str	r1, [r3, #0]
 8018420:	4b05      	ldr	r3, [pc, #20]	; (8018438 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018422:	6018      	str	r0, [r3, #0]
 8018424:	f7ff bf96 	b.w	8018354 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018428:	4770      	bx	lr
 801842a:	bf00      	nop
 801842c:	20012e2c 	.word	0x20012e2c
 8018430:	20012e40 	.word	0x20012e40
 8018434:	20012e28 	.word	0x20012e28
 8018438:	20012e20 	.word	0x20012e20

0801843c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 801843c:	b470      	push	{r4, r5, r6}
 801843e:	4c07      	ldr	r4, [pc, #28]	; (801845c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018440:	6826      	ldr	r6, [r4, #0]
 8018442:	4605      	mov	r5, r0
 8018444:	4610      	mov	r0, r2
 8018446:	9a03      	ldr	r2, [sp, #12]
 8018448:	b936      	cbnz	r6, 8018458 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801844a:	6025      	str	r5, [r4, #0]
 801844c:	4c04      	ldr	r4, [pc, #16]	; (8018460 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 801844e:	8021      	strh	r1, [r4, #0]
 8018450:	bc70      	pop	{r4, r5, r6}
 8018452:	4619      	mov	r1, r3
 8018454:	f7ff bfdc 	b.w	8018410 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018458:	bc70      	pop	{r4, r5, r6}
 801845a:	4770      	bx	lr
 801845c:	20012e44 	.word	0x20012e44
 8018460:	20012e3c 	.word	0x20012e3c

08018464 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018464:	4a12      	ldr	r2, [pc, #72]	; (80184b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018466:	8803      	ldrh	r3, [r0, #0]
 8018468:	8812      	ldrh	r2, [r2, #0]
 801846a:	4293      	cmp	r3, r2
 801846c:	d207      	bcs.n	801847e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801846e:	4a11      	ldr	r2, [pc, #68]	; (80184b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018470:	6812      	ldr	r2, [r2, #0]
 8018472:	2114      	movs	r1, #20
 8018474:	fb01 2303 	mla	r3, r1, r3, r2
 8018478:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 801847c:	4770      	bx	lr
 801847e:	490e      	ldr	r1, [pc, #56]	; (80184b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018480:	8809      	ldrh	r1, [r1, #0]
 8018482:	4411      	add	r1, r2
 8018484:	428b      	cmp	r3, r1
 8018486:	da04      	bge.n	8018492 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018488:	1a9b      	subs	r3, r3, r2
 801848a:	4a0c      	ldr	r2, [pc, #48]	; (80184bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 801848c:	210e      	movs	r1, #14
 801848e:	6812      	ldr	r2, [r2, #0]
 8018490:	e7f0      	b.n	8018474 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018492:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018496:	4293      	cmp	r3, r2
 8018498:	d108      	bne.n	80184ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801849a:	4b09      	ldr	r3, [pc, #36]	; (80184c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 801849c:	781b      	ldrb	r3, [r3, #0]
 801849e:	b91b      	cbnz	r3, 80184a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80184a0:	4b08      	ldr	r3, [pc, #32]	; (80184c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80184a2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80184a6:	4770      	bx	lr
 80184a8:	4b07      	ldr	r3, [pc, #28]	; (80184c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80184aa:	e7fa      	b.n	80184a2 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80184ac:	2000      	movs	r0, #0
 80184ae:	4770      	bx	lr
 80184b0:	20012e3c 	.word	0x20012e3c
 80184b4:	20012e44 	.word	0x20012e44
 80184b8:	20012e40 	.word	0x20012e40
 80184bc:	20012e24 	.word	0x20012e24
 80184c0:	20012dac 	.word	0x20012dac
 80184c4:	20012dae 	.word	0x20012dae
 80184c8:	20012db0 	.word	0x20012db0

080184cc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80184cc:	4a12      	ldr	r2, [pc, #72]	; (8018518 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80184ce:	8803      	ldrh	r3, [r0, #0]
 80184d0:	8812      	ldrh	r2, [r2, #0]
 80184d2:	4293      	cmp	r3, r2
 80184d4:	d207      	bcs.n	80184e6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80184d6:	4a11      	ldr	r2, [pc, #68]	; (801851c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80184d8:	6812      	ldr	r2, [r2, #0]
 80184da:	2114      	movs	r1, #20
 80184dc:	fb01 2303 	mla	r3, r1, r3, r2
 80184e0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80184e4:	4770      	bx	lr
 80184e6:	490e      	ldr	r1, [pc, #56]	; (8018520 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80184e8:	8809      	ldrh	r1, [r1, #0]
 80184ea:	4411      	add	r1, r2
 80184ec:	428b      	cmp	r3, r1
 80184ee:	da04      	bge.n	80184fa <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80184f0:	1a9b      	subs	r3, r3, r2
 80184f2:	4a0c      	ldr	r2, [pc, #48]	; (8018524 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80184f4:	210e      	movs	r1, #14
 80184f6:	6812      	ldr	r2, [r2, #0]
 80184f8:	e7f0      	b.n	80184dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80184fa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80184fe:	4293      	cmp	r3, r2
 8018500:	d108      	bne.n	8018514 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018502:	4b09      	ldr	r3, [pc, #36]	; (8018528 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018504:	781b      	ldrb	r3, [r3, #0]
 8018506:	b91b      	cbnz	r3, 8018510 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018508:	4b08      	ldr	r3, [pc, #32]	; (801852c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801850a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801850e:	4770      	bx	lr
 8018510:	4b07      	ldr	r3, [pc, #28]	; (8018530 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018512:	e7fa      	b.n	801850a <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018514:	2000      	movs	r0, #0
 8018516:	4770      	bx	lr
 8018518:	20012e3c 	.word	0x20012e3c
 801851c:	20012e44 	.word	0x20012e44
 8018520:	20012e40 	.word	0x20012e40
 8018524:	20012e24 	.word	0x20012e24
 8018528:	20012dac 	.word	0x20012dac
 801852c:	20012db0 	.word	0x20012db0
 8018530:	20012dae 	.word	0x20012dae

08018534 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018534:	b510      	push	{r4, lr}
 8018536:	4a1f      	ldr	r2, [pc, #124]	; (80185b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8018538:	880b      	ldrh	r3, [r1, #0]
 801853a:	8812      	ldrh	r2, [r2, #0]
 801853c:	4293      	cmp	r3, r2
 801853e:	d213      	bcs.n	8018568 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018540:	4a1d      	ldr	r2, [pc, #116]	; (80185b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8018542:	6812      	ldr	r2, [r2, #0]
 8018544:	2114      	movs	r1, #20
 8018546:	fb01 2303 	mla	r3, r1, r3, r2
 801854a:	8a1a      	ldrh	r2, [r3, #16]
 801854c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018550:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018554:	8a5b      	ldrh	r3, [r3, #18]
 8018556:	8004      	strh	r4, [r0, #0]
 8018558:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801855c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018560:	8041      	strh	r1, [r0, #2]
 8018562:	8082      	strh	r2, [r0, #4]
 8018564:	80c3      	strh	r3, [r0, #6]
 8018566:	e00e      	b.n	8018586 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018568:	4914      	ldr	r1, [pc, #80]	; (80185bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 801856a:	8809      	ldrh	r1, [r1, #0]
 801856c:	4411      	add	r1, r2
 801856e:	428b      	cmp	r3, r1
 8018570:	da0a      	bge.n	8018588 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8018572:	1a9b      	subs	r3, r3, r2
 8018574:	4a12      	ldr	r2, [pc, #72]	; (80185c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018576:	6812      	ldr	r2, [r2, #0]
 8018578:	210e      	movs	r1, #14
 801857a:	fb01 2303 	mla	r3, r1, r3, r2
 801857e:	681a      	ldr	r2, [r3, #0]
 8018580:	6002      	str	r2, [r0, #0]
 8018582:	685a      	ldr	r2, [r3, #4]
 8018584:	6042      	str	r2, [r0, #4]
 8018586:	bd10      	pop	{r4, pc}
 8018588:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801858c:	4293      	cmp	r3, r2
 801858e:	d10b      	bne.n	80185a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018590:	4b0c      	ldr	r3, [pc, #48]	; (80185c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018592:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018596:	4b0c      	ldr	r3, [pc, #48]	; (80185c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018598:	8081      	strh	r1, [r0, #4]
 801859a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801859e:	80c2      	strh	r2, [r0, #6]
 80185a0:	2300      	movs	r3, #0
 80185a2:	8003      	strh	r3, [r0, #0]
 80185a4:	8043      	strh	r3, [r0, #2]
 80185a6:	e7ee      	b.n	8018586 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80185a8:	2300      	movs	r3, #0
 80185aa:	8003      	strh	r3, [r0, #0]
 80185ac:	8043      	strh	r3, [r0, #2]
 80185ae:	8083      	strh	r3, [r0, #4]
 80185b0:	e7d8      	b.n	8018564 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80185b2:	bf00      	nop
 80185b4:	20012e3c 	.word	0x20012e3c
 80185b8:	20012e44 	.word	0x20012e44
 80185bc:	20012e40 	.word	0x20012e40
 80185c0:	20012e24 	.word	0x20012e24
 80185c4:	20012da8 	.word	0x20012da8
 80185c8:	20012daa 	.word	0x20012daa

080185cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80185cc:	4a17      	ldr	r2, [pc, #92]	; (801862c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80185ce:	8803      	ldrh	r3, [r0, #0]
 80185d0:	8812      	ldrh	r2, [r2, #0]
 80185d2:	4293      	cmp	r3, r2
 80185d4:	d213      	bcs.n	80185fe <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80185d6:	4a16      	ldr	r2, [pc, #88]	; (8018630 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80185d8:	6812      	ldr	r2, [r2, #0]
 80185da:	2114      	movs	r1, #20
 80185dc:	fb01 2303 	mla	r3, r1, r3, r2
 80185e0:	8a1a      	ldrh	r2, [r3, #16]
 80185e2:	8919      	ldrh	r1, [r3, #8]
 80185e4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80185e8:	428a      	cmp	r2, r1
 80185ea:	db1d      	blt.n	8018628 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80185ec:	8a58      	ldrh	r0, [r3, #18]
 80185ee:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80185f2:	895b      	ldrh	r3, [r3, #10]
 80185f4:	4298      	cmp	r0, r3
 80185f6:	bfac      	ite	ge
 80185f8:	2000      	movge	r0, #0
 80185fa:	2001      	movlt	r0, #1
 80185fc:	4770      	bx	lr
 80185fe:	490d      	ldr	r1, [pc, #52]	; (8018634 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018600:	8809      	ldrh	r1, [r1, #0]
 8018602:	4411      	add	r1, r2
 8018604:	428b      	cmp	r3, r1
 8018606:	da0d      	bge.n	8018624 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018608:	1a9b      	subs	r3, r3, r2
 801860a:	4a0b      	ldr	r2, [pc, #44]	; (8018638 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801860c:	6812      	ldr	r2, [r2, #0]
 801860e:	210e      	movs	r1, #14
 8018610:	fb01 2303 	mla	r3, r1, r3, r2
 8018614:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018618:	891a      	ldrh	r2, [r3, #8]
 801861a:	4291      	cmp	r1, r2
 801861c:	db04      	blt.n	8018628 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801861e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8018622:	e7e6      	b.n	80185f2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8018624:	2000      	movs	r0, #0
 8018626:	4770      	bx	lr
 8018628:	2001      	movs	r0, #1
 801862a:	4770      	bx	lr
 801862c:	20012e3c 	.word	0x20012e3c
 8018630:	20012e44 	.word	0x20012e44
 8018634:	20012e40 	.word	0x20012e40
 8018638:	20012e24 	.word	0x20012e24

0801863c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801863c:	4a12      	ldr	r2, [pc, #72]	; (8018688 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801863e:	8803      	ldrh	r3, [r0, #0]
 8018640:	8811      	ldrh	r1, [r2, #0]
 8018642:	428b      	cmp	r3, r1
 8018644:	d20b      	bcs.n	801865e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8018646:	4a11      	ldr	r2, [pc, #68]	; (801868c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018648:	6812      	ldr	r2, [r2, #0]
 801864a:	b112      	cbz	r2, 8018652 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801864c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018650:	b9c0      	cbnz	r0, 8018684 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8018652:	4a0f      	ldr	r2, [pc, #60]	; (8018690 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8018654:	6811      	ldr	r1, [r2, #0]
 8018656:	2214      	movs	r2, #20
 8018658:	4353      	muls	r3, r2
 801865a:	58c8      	ldr	r0, [r1, r3]
 801865c:	4770      	bx	lr
 801865e:	4a0d      	ldr	r2, [pc, #52]	; (8018694 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018660:	8812      	ldrh	r2, [r2, #0]
 8018662:	440a      	add	r2, r1
 8018664:	4293      	cmp	r3, r2
 8018666:	da04      	bge.n	8018672 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018668:	4a08      	ldr	r2, [pc, #32]	; (801868c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801866a:	6812      	ldr	r2, [r2, #0]
 801866c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018670:	4770      	bx	lr
 8018672:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018676:	4293      	cmp	r3, r2
 8018678:	d103      	bne.n	8018682 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801867a:	4b07      	ldr	r3, [pc, #28]	; (8018698 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801867c:	681b      	ldr	r3, [r3, #0]
 801867e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018680:	4770      	bx	lr
 8018682:	2000      	movs	r0, #0
 8018684:	4770      	bx	lr
 8018686:	bf00      	nop
 8018688:	20012e3c 	.word	0x20012e3c
 801868c:	20012e20 	.word	0x20012e20
 8018690:	20012e44 	.word	0x20012e44
 8018694:	20012e40 	.word	0x20012e40
 8018698:	20012db4 	.word	0x20012db4

0801869c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 801869c:	4b24      	ldr	r3, [pc, #144]	; (8018730 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801869e:	8802      	ldrh	r2, [r0, #0]
 80186a0:	8818      	ldrh	r0, [r3, #0]
 80186a2:	4282      	cmp	r2, r0
 80186a4:	d221      	bcs.n	80186ea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80186a6:	4b23      	ldr	r3, [pc, #140]	; (8018734 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80186a8:	6819      	ldr	r1, [r3, #0]
 80186aa:	2314      	movs	r3, #20
 80186ac:	fb03 1302 	mla	r3, r3, r2, r1
 80186b0:	6858      	ldr	r0, [r3, #4]
 80186b2:	2800      	cmp	r0, #0
 80186b4:	d03a      	beq.n	801872c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80186b6:	4920      	ldr	r1, [pc, #128]	; (8018738 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80186b8:	6809      	ldr	r1, [r1, #0]
 80186ba:	2900      	cmp	r1, #0
 80186bc:	d036      	beq.n	801872c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80186be:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80186c2:	2900      	cmp	r1, #0
 80186c4:	d032      	beq.n	801872c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80186c6:	891a      	ldrh	r2, [r3, #8]
 80186c8:	8958      	ldrh	r0, [r3, #10]
 80186ca:	4350      	muls	r0, r2
 80186cc:	7c5a      	ldrb	r2, [r3, #17]
 80186ce:	7cdb      	ldrb	r3, [r3, #19]
 80186d0:	0952      	lsrs	r2, r2, #5
 80186d2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80186d6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80186da:	2b0b      	cmp	r3, #11
 80186dc:	bf18      	it	ne
 80186de:	0040      	lslne	r0, r0, #1
 80186e0:	3003      	adds	r0, #3
 80186e2:	f020 0003 	bic.w	r0, r0, #3
 80186e6:	4408      	add	r0, r1
 80186e8:	4770      	bx	lr
 80186ea:	4b14      	ldr	r3, [pc, #80]	; (801873c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80186ec:	881b      	ldrh	r3, [r3, #0]
 80186ee:	4403      	add	r3, r0
 80186f0:	429a      	cmp	r2, r3
 80186f2:	da1a      	bge.n	801872a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80186f4:	4b12      	ldr	r3, [pc, #72]	; (8018740 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80186f6:	681b      	ldr	r3, [r3, #0]
 80186f8:	1a10      	subs	r0, r2, r0
 80186fa:	210e      	movs	r1, #14
 80186fc:	fb01 3000 	mla	r0, r1, r0, r3
 8018700:	7b03      	ldrb	r3, [r0, #12]
 8018702:	f003 031f 	and.w	r3, r3, #31
 8018706:	2b0b      	cmp	r3, #11
 8018708:	d10b      	bne.n	8018722 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801870a:	8903      	ldrh	r3, [r0, #8]
 801870c:	8940      	ldrh	r0, [r0, #10]
 801870e:	4358      	muls	r0, r3
 8018710:	4b09      	ldr	r3, [pc, #36]	; (8018738 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018712:	6819      	ldr	r1, [r3, #0]
 8018714:	3003      	adds	r0, #3
 8018716:	f020 0303 	bic.w	r3, r0, #3
 801871a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801871e:	4418      	add	r0, r3
 8018720:	4770      	bx	lr
 8018722:	2b0d      	cmp	r3, #13
 8018724:	d101      	bne.n	801872a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8018726:	300d      	adds	r0, #13
 8018728:	4770      	bx	lr
 801872a:	2000      	movs	r0, #0
 801872c:	4770      	bx	lr
 801872e:	bf00      	nop
 8018730:	20012e3c 	.word	0x20012e3c
 8018734:	20012e44 	.word	0x20012e44
 8018738:	20012e20 	.word	0x20012e20
 801873c:	20012e40 	.word	0x20012e40
 8018740:	20012e24 	.word	0x20012e24

08018744 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8018744:	b510      	push	{r4, lr}
 8018746:	4a17      	ldr	r2, [pc, #92]	; (80187a4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018748:	8803      	ldrh	r3, [r0, #0]
 801874a:	8812      	ldrh	r2, [r2, #0]
 801874c:	4293      	cmp	r3, r2
 801874e:	d20c      	bcs.n	801876a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018750:	4a15      	ldr	r2, [pc, #84]	; (80187a8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8018752:	6812      	ldr	r2, [r2, #0]
 8018754:	2114      	movs	r1, #20
 8018756:	fb01 2303 	mla	r3, r1, r3, r2
 801875a:	7c58      	ldrb	r0, [r3, #17]
 801875c:	0942      	lsrs	r2, r0, #5
 801875e:	7cd8      	ldrb	r0, [r3, #19]
 8018760:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8018764:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018768:	bd10      	pop	{r4, pc}
 801876a:	4910      	ldr	r1, [pc, #64]	; (80187ac <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 801876c:	8809      	ldrh	r1, [r1, #0]
 801876e:	4411      	add	r1, r2
 8018770:	428b      	cmp	r3, r1
 8018772:	da09      	bge.n	8018788 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8018774:	1a9b      	subs	r3, r3, r2
 8018776:	4a0e      	ldr	r2, [pc, #56]	; (80187b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018778:	6812      	ldr	r2, [r2, #0]
 801877a:	210e      	movs	r1, #14
 801877c:	fb01 2303 	mla	r3, r1, r3, r2
 8018780:	7b18      	ldrb	r0, [r3, #12]
 8018782:	f000 001f 	and.w	r0, r0, #31
 8018786:	e7ef      	b.n	8018768 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018788:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801878c:	4293      	cmp	r3, r2
 801878e:	d106      	bne.n	801879e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018790:	f7eb f874 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8018794:	6803      	ldr	r3, [r0, #0]
 8018796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801879a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801879c:	4718      	bx	r3
 801879e:	2000      	movs	r0, #0
 80187a0:	e7e2      	b.n	8018768 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80187a2:	bf00      	nop
 80187a4:	20012e3c 	.word	0x20012e3c
 80187a8:	20012e44 	.word	0x20012e44
 80187ac:	20012e40 	.word	0x20012e40
 80187b0:	20012e24 	.word	0x20012e24

080187b4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80187b4:	2010      	movs	r0, #16
 80187b6:	4770      	bx	lr

080187b8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80187b8:	2000      	movs	r0, #0
 80187ba:	4770      	bx	lr

080187bc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80187bc:	4b02      	ldr	r3, [pc, #8]	; (80187c8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80187be:	8818      	ldrh	r0, [r3, #0]
 80187c0:	0040      	lsls	r0, r0, #1
 80187c2:	b280      	uxth	r0, r0
 80187c4:	4770      	bx	lr
 80187c6:	bf00      	nop
 80187c8:	20012dae 	.word	0x20012dae

080187cc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80187cc:	2bff      	cmp	r3, #255	; 0xff
 80187ce:	d050      	beq.n	8018872 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80187d0:	2a0b      	cmp	r2, #11
 80187d2:	d04a      	beq.n	801886a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80187d4:	d80e      	bhi.n	80187f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80187d6:	2a03      	cmp	r2, #3
 80187d8:	d03f      	beq.n	801885a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 80187da:	d804      	bhi.n	80187e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80187dc:	2a01      	cmp	r2, #1
 80187de:	d03e      	beq.n	801885e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 80187e0:	d93f      	bls.n	8018862 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 80187e2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 80187e4:	4770      	bx	lr
 80187e6:	2a09      	cmp	r2, #9
 80187e8:	d03f      	beq.n	801886a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80187ea:	d83c      	bhi.n	8018866 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80187ec:	2a08      	cmp	r2, #8
 80187ee:	d03a      	beq.n	8018866 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80187f0:	2000      	movs	r0, #0
 80187f2:	4770      	bx	lr
 80187f4:	2a2f      	cmp	r2, #47	; 0x2f
 80187f6:	d024      	beq.n	8018842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80187f8:	d80d      	bhi.n	8018816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80187fa:	2a2d      	cmp	r2, #45	; 0x2d
 80187fc:	d014      	beq.n	8018828 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80187fe:	d826      	bhi.n	801884e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018800:	2a2c      	cmp	r2, #44	; 0x2c
 8018802:	d1f5      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018804:	684b      	ldr	r3, [r1, #4]
 8018806:	781b      	ldrb	r3, [r3, #0]
 8018808:	2b01      	cmp	r3, #1
 801880a:	d018      	beq.n	801883e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 801880c:	d323      	bcc.n	8018856 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801880e:	2b02      	cmp	r3, #2
 8018810:	d1ee      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018812:	6880      	ldr	r0, [r0, #8]
 8018814:	4770      	bx	lr
 8018816:	2a31      	cmp	r2, #49	; 0x31
 8018818:	d004      	beq.n	8018824 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 801881a:	d328      	bcc.n	801886e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801881c:	2a32      	cmp	r2, #50	; 0x32
 801881e:	d026      	beq.n	801886e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018820:	2a33      	cmp	r2, #51	; 0x33
 8018822:	d1e5      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018824:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018826:	4770      	bx	lr
 8018828:	684b      	ldr	r3, [r1, #4]
 801882a:	781b      	ldrb	r3, [r3, #0]
 801882c:	2b01      	cmp	r3, #1
 801882e:	d004      	beq.n	801883a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018830:	d30b      	bcc.n	801884a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018832:	2b02      	cmp	r3, #2
 8018834:	d1dc      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018836:	6900      	ldr	r0, [r0, #16]
 8018838:	4770      	bx	lr
 801883a:	6a00      	ldr	r0, [r0, #32]
 801883c:	4770      	bx	lr
 801883e:	6980      	ldr	r0, [r0, #24]
 8018840:	4770      	bx	lr
 8018842:	684b      	ldr	r3, [r1, #4]
 8018844:	781b      	ldrb	r3, [r3, #0]
 8018846:	2b00      	cmp	r3, #0
 8018848:	d1d2      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801884a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 801884c:	4770      	bx	lr
 801884e:	684b      	ldr	r3, [r1, #4]
 8018850:	781b      	ldrb	r3, [r3, #0]
 8018852:	2b00      	cmp	r3, #0
 8018854:	d1cc      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018856:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018858:	4770      	bx	lr
 801885a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801885c:	4770      	bx	lr
 801885e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018860:	4770      	bx	lr
 8018862:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018864:	4770      	bx	lr
 8018866:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018868:	4770      	bx	lr
 801886a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 801886c:	4770      	bx	lr
 801886e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018870:	4770      	bx	lr
 8018872:	2a0b      	cmp	r2, #11
 8018874:	d049      	beq.n	801890a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018876:	d80e      	bhi.n	8018896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018878:	2a03      	cmp	r2, #3
 801887a:	d040      	beq.n	80188fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 801887c:	d804      	bhi.n	8018888 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 801887e:	2a01      	cmp	r2, #1
 8018880:	d03f      	beq.n	8018902 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018882:	d940      	bls.n	8018906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018884:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018886:	4770      	bx	lr
 8018888:	2a09      	cmp	r2, #9
 801888a:	d03e      	beq.n	801890a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801888c:	d801      	bhi.n	8018892 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 801888e:	2a08      	cmp	r2, #8
 8018890:	d1ae      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018892:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018894:	4770      	bx	lr
 8018896:	2a2f      	cmp	r2, #47	; 0x2f
 8018898:	d024      	beq.n	80188e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 801889a:	d80d      	bhi.n	80188b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 801889c:	2a2d      	cmp	r2, #45	; 0x2d
 801889e:	d014      	beq.n	80188ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80188a0:	d826      	bhi.n	80188f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80188a2:	2a2c      	cmp	r2, #44	; 0x2c
 80188a4:	d1a4      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188a6:	684b      	ldr	r3, [r1, #4]
 80188a8:	781b      	ldrb	r3, [r3, #0]
 80188aa:	2b01      	cmp	r3, #1
 80188ac:	d018      	beq.n	80188e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80188ae:	d324      	bcc.n	80188fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80188b0:	2b02      	cmp	r3, #2
 80188b2:	d19d      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188b4:	68c0      	ldr	r0, [r0, #12]
 80188b6:	4770      	bx	lr
 80188b8:	2a31      	cmp	r2, #49	; 0x31
 80188ba:	d004      	beq.n	80188c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80188bc:	d327      	bcc.n	801890e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80188be:	2a32      	cmp	r2, #50	; 0x32
 80188c0:	d025      	beq.n	801890e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80188c2:	2a33      	cmp	r2, #51	; 0x33
 80188c4:	d194      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188c6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80188c8:	4770      	bx	lr
 80188ca:	684b      	ldr	r3, [r1, #4]
 80188cc:	781b      	ldrb	r3, [r3, #0]
 80188ce:	2b01      	cmp	r3, #1
 80188d0:	d004      	beq.n	80188dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80188d2:	d30b      	bcc.n	80188ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80188d4:	2b02      	cmp	r3, #2
 80188d6:	d18b      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188d8:	6940      	ldr	r0, [r0, #20]
 80188da:	4770      	bx	lr
 80188dc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80188de:	4770      	bx	lr
 80188e0:	69c0      	ldr	r0, [r0, #28]
 80188e2:	4770      	bx	lr
 80188e4:	684b      	ldr	r3, [r1, #4]
 80188e6:	781b      	ldrb	r3, [r3, #0]
 80188e8:	2b00      	cmp	r3, #0
 80188ea:	d181      	bne.n	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188ec:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80188ee:	4770      	bx	lr
 80188f0:	684b      	ldr	r3, [r1, #4]
 80188f2:	781b      	ldrb	r3, [r3, #0]
 80188f4:	2b00      	cmp	r3, #0
 80188f6:	f47f af7b 	bne.w	80187f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188fa:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80188fc:	4770      	bx	lr
 80188fe:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018900:	4770      	bx	lr
 8018902:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018904:	4770      	bx	lr
 8018906:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018908:	4770      	bx	lr
 801890a:	6e40      	ldr	r0, [r0, #100]	; 0x64
 801890c:	4770      	bx	lr
 801890e:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018910:	4770      	bx	lr

08018912 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018912:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018916:	b087      	sub	sp, #28
 8018918:	9815      	ldr	r0, [sp, #84]	; 0x54
 801891a:	9205      	str	r2, [sp, #20]
 801891c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018920:	9202      	str	r2, [sp, #8]
 8018922:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018926:	9101      	str	r1, [sp, #4]
 8018928:	6841      	ldr	r1, [r0, #4]
 801892a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801892e:	fb01 2404 	mla	r4, r1, r4, r2
 8018932:	6802      	ldr	r2, [r0, #0]
 8018934:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018938:	f8de 2000 	ldr.w	r2, [lr]
 801893c:	9203      	str	r2, [sp, #12]
 801893e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018942:	3204      	adds	r2, #4
 8018944:	9204      	str	r2, [sp, #16]
 8018946:	9a02      	ldr	r2, [sp, #8]
 8018948:	43d6      	mvns	r6, r2
 801894a:	b2f6      	uxtb	r6, r6
 801894c:	9a01      	ldr	r2, [sp, #4]
 801894e:	2a00      	cmp	r2, #0
 8018950:	dc03      	bgt.n	801895a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018952:	9a05      	ldr	r2, [sp, #20]
 8018954:	2a00      	cmp	r2, #0
 8018956:	f340 8129 	ble.w	8018bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801895a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801895c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018960:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018964:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018968:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801896a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801896e:	2b00      	cmp	r3, #0
 8018970:	dd0e      	ble.n	8018990 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018972:	1408      	asrs	r0, r1, #16
 8018974:	d405      	bmi.n	8018982 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018976:	4560      	cmp	r0, ip
 8018978:	da03      	bge.n	8018982 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801897a:	1410      	asrs	r0, r2, #16
 801897c:	d401      	bmi.n	8018982 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801897e:	42b8      	cmp	r0, r7
 8018980:	db07      	blt.n	8018992 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018982:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018984:	4401      	add	r1, r0
 8018986:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018988:	3b01      	subs	r3, #1
 801898a:	4402      	add	r2, r0
 801898c:	3402      	adds	r4, #2
 801898e:	e7ee      	b.n	801896e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018990:	d071      	beq.n	8018a76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018992:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018994:	1e58      	subs	r0, r3, #1
 8018996:	fb05 1500 	mla	r5, r5, r0, r1
 801899a:	142d      	asrs	r5, r5, #16
 801899c:	d45f      	bmi.n	8018a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801899e:	4565      	cmp	r5, ip
 80189a0:	da5d      	bge.n	8018a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80189a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80189a4:	fb05 2000 	mla	r0, r5, r0, r2
 80189a8:	1400      	asrs	r0, r0, #16
 80189aa:	d458      	bmi.n	8018a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80189ac:	42b8      	cmp	r0, r7
 80189ae:	da56      	bge.n	8018a5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80189b0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80189b4:	4699      	mov	r9, r3
 80189b6:	46a2      	mov	sl, r4
 80189b8:	f1b9 0f00 	cmp.w	r9, #0
 80189bc:	dd57      	ble.n	8018a6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80189be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80189c2:	9803      	ldr	r0, [sp, #12]
 80189c4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80189c8:	140d      	asrs	r5, r1, #16
 80189ca:	fb07 000c 	mla	r0, r7, ip, r0
 80189ce:	f109 39ff 	add.w	r9, r9, #4294967295
 80189d2:	5d40      	ldrb	r0, [r0, r5]
 80189d4:	9d04      	ldr	r5, [sp, #16]
 80189d6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80189da:	f8ba 5000 	ldrh.w	r5, [sl]
 80189de:	122f      	asrs	r7, r5, #8
 80189e0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80189e4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189e8:	fb17 f706 	smulbb	r7, r7, r6
 80189ec:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80189f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80189f4:	00ed      	lsls	r5, r5, #3
 80189f6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80189fa:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80189fe:	10c7      	asrs	r7, r0, #3
 8018a00:	b2ed      	uxtb	r5, r5
 8018a02:	00c0      	lsls	r0, r0, #3
 8018a04:	fb18 f806 	smulbb	r8, r8, r6
 8018a08:	fb15 f506 	smulbb	r5, r5, r6
 8018a0c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018a10:	b2c0      	uxtb	r0, r0
 8018a12:	fa1f fc8c 	uxth.w	ip, ip
 8018a16:	fb07 870b 	mla	r7, r7, fp, r8
 8018a1a:	fb00 500b 	mla	r0, r0, fp, r5
 8018a1e:	b280      	uxth	r0, r0
 8018a20:	b2bf      	uxth	r7, r7
 8018a22:	f10c 0501 	add.w	r5, ip, #1
 8018a26:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018a2a:	f107 0801 	add.w	r8, r7, #1
 8018a2e:	1c45      	adds	r5, r0, #1
 8018a30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018a34:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018a38:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018a3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018a3e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018a42:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018a46:	ea45 0c0c 	orr.w	ip, r5, ip
 8018a4a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018a4e:	4401      	add	r1, r0
 8018a50:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a52:	ea4c 0c08 	orr.w	ip, ip, r8
 8018a56:	f82a cb02 	strh.w	ip, [sl], #2
 8018a5a:	4402      	add	r2, r0
 8018a5c:	e7ac      	b.n	80189b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018a5e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018a62:	f04f 0800 	mov.w	r8, #0
 8018a66:	eb03 0008 	add.w	r0, r3, r8
 8018a6a:	2800      	cmp	r0, #0
 8018a6c:	dc41      	bgt.n	8018af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018a6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018a72:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018a76:	9b01      	ldr	r3, [sp, #4]
 8018a78:	2b00      	cmp	r3, #0
 8018a7a:	f340 8097 	ble.w	8018bac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018a7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a82:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a86:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018a8a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a90:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a94:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a98:	eef0 6a62 	vmov.f32	s13, s5
 8018a9c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018aa0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018aa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018aa8:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018aac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ab0:	eef0 6a43 	vmov.f32	s13, s6
 8018ab4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ab8:	ee12 2a90 	vmov	r2, s5
 8018abc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ac0:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ac4:	ee13 2a10 	vmov	r2, s6
 8018ac8:	9313      	str	r3, [sp, #76]	; 0x4c
 8018aca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018acc:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ad0:	9314      	str	r3, [sp, #80]	; 0x50
 8018ad2:	9b01      	ldr	r3, [sp, #4]
 8018ad4:	9a05      	ldr	r2, [sp, #20]
 8018ad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ada:	3b01      	subs	r3, #1
 8018adc:	9301      	str	r3, [sp, #4]
 8018ade:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018ae2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ae4:	eeb0 3a67 	vmov.f32	s6, s15
 8018ae8:	bf08      	it	eq
 8018aea:	4613      	moveq	r3, r2
 8018aec:	eef0 2a47 	vmov.f32	s5, s14
 8018af0:	e72c      	b.n	801894c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018af2:	140f      	asrs	r7, r1, #16
 8018af4:	d453      	bmi.n	8018b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018af6:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018afa:	42bd      	cmp	r5, r7
 8018afc:	dd4f      	ble.n	8018b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018afe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018b02:	d44c      	bmi.n	8018b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018b04:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018b08:	4560      	cmp	r0, ip
 8018b0a:	dd48      	ble.n	8018b9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018b0c:	9803      	ldr	r0, [sp, #12]
 8018b0e:	b22d      	sxth	r5, r5
 8018b10:	fb0c 0505 	mla	r5, ip, r5, r0
 8018b14:	5de8      	ldrb	r0, [r5, r7]
 8018b16:	9d04      	ldr	r5, [sp, #16]
 8018b18:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018b1c:	f06f 0501 	mvn.w	r5, #1
 8018b20:	fb05 fb08 	mul.w	fp, r5, r8
 8018b24:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018b28:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018b2c:	122f      	asrs	r7, r5, #8
 8018b2e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018b32:	fb17 f706 	smulbb	r7, r7, r6
 8018b36:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018b3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018b3e:	00ed      	lsls	r5, r5, #3
 8018b40:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018b44:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018b48:	10c7      	asrs	r7, r0, #3
 8018b4a:	b2ed      	uxtb	r5, r5
 8018b4c:	00c0      	lsls	r0, r0, #3
 8018b4e:	fb19 f906 	smulbb	r9, r9, r6
 8018b52:	fb15 f506 	smulbb	r5, r5, r6
 8018b56:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b5a:	b2c0      	uxtb	r0, r0
 8018b5c:	fa1f fc8c 	uxth.w	ip, ip
 8018b60:	fb07 970a 	mla	r7, r7, sl, r9
 8018b64:	fb00 500a 	mla	r0, r0, sl, r5
 8018b68:	b2bf      	uxth	r7, r7
 8018b6a:	b280      	uxth	r0, r0
 8018b6c:	f10c 0501 	add.w	r5, ip, #1
 8018b70:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018b74:	f107 0901 	add.w	r9, r7, #1
 8018b78:	1c45      	adds	r5, r0, #1
 8018b7a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018b7e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018b82:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018b86:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018b8a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018b8e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b92:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018b96:	ea4c 0c09 	orr.w	ip, ip, r9
 8018b9a:	f824 c00b 	strh.w	ip, [r4, fp]
 8018b9e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018ba0:	4401      	add	r1, r0
 8018ba2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018ba4:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ba8:	4402      	add	r2, r0
 8018baa:	e75c      	b.n	8018a66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018bac:	b007      	add	sp, #28
 8018bae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018bb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018bb6:	b085      	sub	sp, #20
 8018bb8:	4693      	mov	fp, r2
 8018bba:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018bbc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018bbe:	6870      	ldr	r0, [r6, #4]
 8018bc0:	9100      	str	r1, [sp, #0]
 8018bc2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018bc6:	fb00 2404 	mla	r4, r0, r4, r2
 8018bca:	6832      	ldr	r2, [r6, #0]
 8018bcc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018bd0:	682a      	ldr	r2, [r5, #0]
 8018bd2:	9201      	str	r2, [sp, #4]
 8018bd4:	686a      	ldr	r2, [r5, #4]
 8018bd6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018bda:	3204      	adds	r2, #4
 8018bdc:	9202      	str	r2, [sp, #8]
 8018bde:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018be2:	9a00      	ldr	r2, [sp, #0]
 8018be4:	2a00      	cmp	r2, #0
 8018be6:	dc03      	bgt.n	8018bf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018be8:	f1bb 0f00 	cmp.w	fp, #0
 8018bec:	f340 80a0 	ble.w	8018d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018bf0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018bf2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018bf6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018bfa:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018bfe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018c00:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018c04:	2b00      	cmp	r3, #0
 8018c06:	dd0c      	ble.n	8018c22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018c08:	1406      	asrs	r6, r0, #16
 8018c0a:	d405      	bmi.n	8018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018c0c:	454e      	cmp	r6, r9
 8018c0e:	da03      	bge.n	8018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018c10:	1416      	asrs	r6, r2, #16
 8018c12:	d401      	bmi.n	8018c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018c14:	4546      	cmp	r6, r8
 8018c16:	db05      	blt.n	8018c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018c18:	4470      	add	r0, lr
 8018c1a:	4462      	add	r2, ip
 8018c1c:	3b01      	subs	r3, #1
 8018c1e:	3402      	adds	r4, #2
 8018c20:	e7f0      	b.n	8018c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018c22:	d00f      	beq.n	8018c44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018c24:	1e5e      	subs	r6, r3, #1
 8018c26:	fb0e 0706 	mla	r7, lr, r6, r0
 8018c2a:	143f      	asrs	r7, r7, #16
 8018c2c:	d541      	bpl.n	8018cb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018c2e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018c32:	4698      	mov	r8, r3
 8018c34:	9603      	str	r6, [sp, #12]
 8018c36:	f1b8 0f00 	cmp.w	r8, #0
 8018c3a:	dc59      	bgt.n	8018cf0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018c3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c40:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c44:	9b00      	ldr	r3, [sp, #0]
 8018c46:	2b00      	cmp	r3, #0
 8018c48:	dd72      	ble.n	8018d30 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018c4a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c52:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018c56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c5c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c60:	eeb0 6a62 	vmov.f32	s12, s5
 8018c64:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c6c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c70:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018c74:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c78:	eeb0 6a43 	vmov.f32	s12, s6
 8018c7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c80:	ee12 2a90 	vmov	r2, s5
 8018c84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c88:	fb92 fef3 	sdiv	lr, r2, r3
 8018c8c:	ee13 2a10 	vmov	r2, s6
 8018c90:	fb92 fcf3 	sdiv	ip, r2, r3
 8018c94:	9b00      	ldr	r3, [sp, #0]
 8018c96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c9a:	3b01      	subs	r3, #1
 8018c9c:	9300      	str	r3, [sp, #0]
 8018c9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018ca2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ca4:	eeb0 3a67 	vmov.f32	s6, s15
 8018ca8:	bf08      	it	eq
 8018caa:	465b      	moveq	r3, fp
 8018cac:	eef0 2a47 	vmov.f32	s5, s14
 8018cb0:	e797      	b.n	8018be2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018cb2:	454f      	cmp	r7, r9
 8018cb4:	dabb      	bge.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018cb6:	fb0c 2606 	mla	r6, ip, r6, r2
 8018cba:	1436      	asrs	r6, r6, #16
 8018cbc:	d4b7      	bmi.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018cbe:	4546      	cmp	r6, r8
 8018cc0:	dab5      	bge.n	8018c2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018cc2:	461e      	mov	r6, r3
 8018cc4:	46a0      	mov	r8, r4
 8018cc6:	2e00      	cmp	r6, #0
 8018cc8:	ddb8      	ble.n	8018c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018cca:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018cce:	9901      	ldr	r1, [sp, #4]
 8018cd0:	1417      	asrs	r7, r2, #16
 8018cd2:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018cd6:	fb0a 1707 	mla	r7, sl, r7, r1
 8018cda:	9902      	ldr	r1, [sp, #8]
 8018cdc:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018ce0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018ce4:	f828 7b02 	strh.w	r7, [r8], #2
 8018ce8:	4470      	add	r0, lr
 8018cea:	4462      	add	r2, ip
 8018cec:	3e01      	subs	r6, #1
 8018cee:	e7ea      	b.n	8018cc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018cf0:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018cf4:	d417      	bmi.n	8018d26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cf6:	68ae      	ldr	r6, [r5, #8]
 8018cf8:	454e      	cmp	r6, r9
 8018cfa:	dd14      	ble.n	8018d26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cfc:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018d00:	d411      	bmi.n	8018d26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018d02:	68ef      	ldr	r7, [r5, #12]
 8018d04:	4557      	cmp	r7, sl
 8018d06:	dd0e      	ble.n	8018d26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018d08:	9f01      	ldr	r7, [sp, #4]
 8018d0a:	b236      	sxth	r6, r6
 8018d0c:	fb0a 7606 	mla	r6, sl, r6, r7
 8018d10:	9f02      	ldr	r7, [sp, #8]
 8018d12:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018d16:	f06f 0101 	mvn.w	r1, #1
 8018d1a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018d1e:	fb01 f608 	mul.w	r6, r1, r8
 8018d22:	9903      	ldr	r1, [sp, #12]
 8018d24:	538f      	strh	r7, [r1, r6]
 8018d26:	4470      	add	r0, lr
 8018d28:	4462      	add	r2, ip
 8018d2a:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d2e:	e782      	b.n	8018c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018d30:	b005      	add	sp, #20
 8018d32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d3a:	b087      	sub	sp, #28
 8018d3c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018d3e:	9205      	str	r2, [sp, #20]
 8018d40:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018d44:	9203      	str	r2, [sp, #12]
 8018d46:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018d4a:	9102      	str	r1, [sp, #8]
 8018d4c:	6861      	ldr	r1, [r4, #4]
 8018d4e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018d52:	fb01 2000 	mla	r0, r1, r0, r2
 8018d56:	6822      	ldr	r2, [r4, #0]
 8018d58:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018d5c:	9200      	str	r2, [sp, #0]
 8018d5e:	f8dc 2000 	ldr.w	r2, [ip]
 8018d62:	9204      	str	r2, [sp, #16]
 8018d64:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018d68:	3204      	adds	r2, #4
 8018d6a:	9201      	str	r2, [sp, #4]
 8018d6c:	9a03      	ldr	r2, [sp, #12]
 8018d6e:	43d5      	mvns	r5, r2
 8018d70:	b2ed      	uxtb	r5, r5
 8018d72:	9a02      	ldr	r2, [sp, #8]
 8018d74:	2a00      	cmp	r2, #0
 8018d76:	dc03      	bgt.n	8018d80 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018d78:	9a05      	ldr	r2, [sp, #20]
 8018d7a:	2a00      	cmp	r2, #0
 8018d7c:	f340 812c 	ble.w	8018fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018d80:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018d82:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018d86:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018d8a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018d8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018d90:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018d94:	2b00      	cmp	r3, #0
 8018d96:	dd10      	ble.n	8018dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018d98:	140c      	asrs	r4, r1, #16
 8018d9a:	d405      	bmi.n	8018da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d9c:	4574      	cmp	r4, lr
 8018d9e:	da03      	bge.n	8018da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018da0:	1414      	asrs	r4, r2, #16
 8018da2:	d401      	bmi.n	8018da8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018da4:	42bc      	cmp	r4, r7
 8018da6:	db09      	blt.n	8018dbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018da8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018daa:	9800      	ldr	r0, [sp, #0]
 8018dac:	4421      	add	r1, r4
 8018dae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018db0:	3002      	adds	r0, #2
 8018db2:	4422      	add	r2, r4
 8018db4:	3b01      	subs	r3, #1
 8018db6:	9000      	str	r0, [sp, #0]
 8018db8:	e7ec      	b.n	8018d94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018dba:	d071      	beq.n	8018ea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018dbc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018dbe:	1e5c      	subs	r4, r3, #1
 8018dc0:	fb06 1604 	mla	r6, r6, r4, r1
 8018dc4:	1436      	asrs	r6, r6, #16
 8018dc6:	d45d      	bmi.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018dc8:	4576      	cmp	r6, lr
 8018dca:	da5b      	bge.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018dcc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018dce:	fb06 2404 	mla	r4, r6, r4, r2
 8018dd2:	1424      	asrs	r4, r4, #16
 8018dd4:	d456      	bmi.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018dd6:	42bc      	cmp	r4, r7
 8018dd8:	da54      	bge.n	8018e84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018dda:	f8dd 9000 	ldr.w	r9, [sp]
 8018dde:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018de2:	4698      	mov	r8, r3
 8018de4:	f1b8 0f00 	cmp.w	r8, #0
 8018de8:	dd54      	ble.n	8018e94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018dea:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018dee:	9804      	ldr	r0, [sp, #16]
 8018df0:	1414      	asrs	r4, r2, #16
 8018df2:	fb07 0404 	mla	r4, r7, r4, r0
 8018df6:	140e      	asrs	r6, r1, #16
 8018df8:	9801      	ldr	r0, [sp, #4]
 8018dfa:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018dfe:	f8b9 4000 	ldrh.w	r4, [r9]
 8018e02:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018e06:	eb00 0b0e 	add.w	fp, r0, lr
 8018e0a:	1227      	asrs	r7, r4, #8
 8018e0c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018e10:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018e14:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018e18:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018e1a:	fb16 f60a 	smulbb	r6, r6, sl
 8018e1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018e22:	fb07 6705 	mla	r7, r7, r5, r6
 8018e26:	10e6      	asrs	r6, r4, #3
 8018e28:	00e4      	lsls	r4, r4, #3
 8018e2a:	b2e4      	uxtb	r4, r4
 8018e2c:	fb1b fb0a 	smulbb	fp, fp, sl
 8018e30:	fb14 f405 	smulbb	r4, r4, r5
 8018e34:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e38:	b2bf      	uxth	r7, r7
 8018e3a:	fb06 b605 	mla	r6, r6, r5, fp
 8018e3e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018e42:	b2b6      	uxth	r6, r6
 8018e44:	fa1f fe8e 	uxth.w	lr, lr
 8018e48:	1c7c      	adds	r4, r7, #1
 8018e4a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018e4e:	f106 0b01 	add.w	fp, r6, #1
 8018e52:	f10e 0401 	add.w	r4, lr, #1
 8018e56:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018e5a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018e5e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e62:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018e66:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018e6a:	4327      	orrs	r7, r4
 8018e6c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018e70:	4401      	add	r1, r0
 8018e72:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018e74:	ea47 070b 	orr.w	r7, r7, fp
 8018e78:	f829 7b02 	strh.w	r7, [r9], #2
 8018e7c:	4402      	add	r2, r0
 8018e7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e82:	e7af      	b.n	8018de4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018e84:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018e88:	f04f 0e00 	mov.w	lr, #0
 8018e8c:	eb03 040e 	add.w	r4, r3, lr
 8018e90:	2c00      	cmp	r4, #0
 8018e92:	dc43      	bgt.n	8018f1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018e94:	9a00      	ldr	r2, [sp, #0]
 8018e96:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e9a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018e9e:	9300      	str	r3, [sp, #0]
 8018ea0:	9b02      	ldr	r3, [sp, #8]
 8018ea2:	2b00      	cmp	r3, #0
 8018ea4:	f340 8098 	ble.w	8018fd8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018ea8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018eac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018eb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018eb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018eb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eba:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ebe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ec2:	eef0 6a62 	vmov.f32	s13, s5
 8018ec6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018eca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ece:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ed2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018ed6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018eda:	eef0 6a43 	vmov.f32	s13, s6
 8018ede:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ee2:	ee12 2a90 	vmov	r2, s5
 8018ee6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018eea:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eee:	ee13 2a10 	vmov	r2, s6
 8018ef2:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ef4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ef6:	fb92 f3f3 	sdiv	r3, r2, r3
 8018efa:	9314      	str	r3, [sp, #80]	; 0x50
 8018efc:	9b02      	ldr	r3, [sp, #8]
 8018efe:	9a05      	ldr	r2, [sp, #20]
 8018f00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f04:	3b01      	subs	r3, #1
 8018f06:	9302      	str	r3, [sp, #8]
 8018f08:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018f0c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018f0e:	eeb0 3a67 	vmov.f32	s6, s15
 8018f12:	bf08      	it	eq
 8018f14:	4613      	moveq	r3, r2
 8018f16:	eef0 2a47 	vmov.f32	s5, s14
 8018f1a:	e72a      	b.n	8018d72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018f1c:	140f      	asrs	r7, r1, #16
 8018f1e:	d454      	bmi.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f20:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018f24:	42be      	cmp	r6, r7
 8018f26:	dd50      	ble.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f28:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018f2c:	d44d      	bmi.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f2e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018f32:	4544      	cmp	r4, r8
 8018f34:	dd49      	ble.n	8018fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018f36:	9c04      	ldr	r4, [sp, #16]
 8018f38:	b236      	sxth	r6, r6
 8018f3a:	fb08 4606 	mla	r6, r8, r6, r4
 8018f3e:	f06f 0001 	mvn.w	r0, #1
 8018f42:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018f46:	9c01      	ldr	r4, [sp, #4]
 8018f48:	fb00 fa0e 	mul.w	sl, r0, lr
 8018f4c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018f50:	9800      	ldr	r0, [sp, #0]
 8018f52:	eb04 0b08 	add.w	fp, r4, r8
 8018f56:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018f5a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018f5e:	9801      	ldr	r0, [sp, #4]
 8018f60:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018f64:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018f68:	9800      	ldr	r0, [sp, #0]
 8018f6a:	1227      	asrs	r7, r4, #8
 8018f6c:	fb16 f609 	smulbb	r6, r6, r9
 8018f70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018f74:	fb07 6705 	mla	r7, r7, r5, r6
 8018f78:	10e6      	asrs	r6, r4, #3
 8018f7a:	00e4      	lsls	r4, r4, #3
 8018f7c:	b2e4      	uxtb	r4, r4
 8018f7e:	fb1b fb09 	smulbb	fp, fp, r9
 8018f82:	fb14 f405 	smulbb	r4, r4, r5
 8018f86:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f8a:	b2bf      	uxth	r7, r7
 8018f8c:	fb06 b605 	mla	r6, r6, r5, fp
 8018f90:	fb08 4809 	mla	r8, r8, r9, r4
 8018f94:	b2b6      	uxth	r6, r6
 8018f96:	fa1f f888 	uxth.w	r8, r8
 8018f9a:	1c7c      	adds	r4, r7, #1
 8018f9c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018fa0:	f106 0b01 	add.w	fp, r6, #1
 8018fa4:	f108 0401 	add.w	r4, r8, #1
 8018fa8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018fac:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018fb0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018fb4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018fb8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018fbc:	4327      	orrs	r7, r4
 8018fbe:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018fc2:	ea47 070b 	orr.w	r7, r7, fp
 8018fc6:	f820 700a 	strh.w	r7, [r0, sl]
 8018fca:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018fcc:	4401      	add	r1, r0
 8018fce:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018fd0:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018fd4:	4402      	add	r2, r0
 8018fd6:	e759      	b.n	8018e8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018fd8:	b007      	add	sp, #28
 8018fda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018fe0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fe4:	b085      	sub	sp, #20
 8018fe6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018fea:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018fec:	9203      	str	r2, [sp, #12]
 8018fee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018ff2:	6870      	ldr	r0, [r6, #4]
 8018ff4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018ff6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018ffa:	686f      	ldr	r7, [r5, #4]
 8018ffc:	9101      	str	r1, [sp, #4]
 8018ffe:	fb00 2404 	mla	r4, r0, r4, r2
 8019002:	6832      	ldr	r2, [r6, #0]
 8019004:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019008:	682a      	ldr	r2, [r5, #0]
 801900a:	9202      	str	r2, [sp, #8]
 801900c:	3704      	adds	r7, #4
 801900e:	9a01      	ldr	r2, [sp, #4]
 8019010:	2a00      	cmp	r2, #0
 8019012:	dc03      	bgt.n	801901c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019014:	9a03      	ldr	r2, [sp, #12]
 8019016:	2a00      	cmp	r2, #0
 8019018:	f340 80cc 	ble.w	80191b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801901c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801901e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019022:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019026:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801902a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801902c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019030:	2b00      	cmp	r3, #0
 8019032:	dd0d      	ble.n	8019050 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019034:	1406      	asrs	r6, r0, #16
 8019036:	d405      	bmi.n	8019044 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019038:	454e      	cmp	r6, r9
 801903a:	da03      	bge.n	8019044 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801903c:	1416      	asrs	r6, r2, #16
 801903e:	d401      	bmi.n	8019044 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019040:	4546      	cmp	r6, r8
 8019042:	db06      	blt.n	8019052 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019044:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8019046:	4460      	add	r0, ip
 8019048:	4432      	add	r2, r6
 801904a:	3b01      	subs	r3, #1
 801904c:	3402      	adds	r4, #2
 801904e:	e7ef      	b.n	8019030 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019050:	d00f      	beq.n	8019072 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019052:	1e5e      	subs	r6, r3, #1
 8019054:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019058:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801905c:	d543      	bpl.n	80190e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801905e:	4698      	mov	r8, r3
 8019060:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019064:	f1b8 0f00 	cmp.w	r8, #0
 8019068:	dc71      	bgt.n	801914e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801906a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801906e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019072:	9b01      	ldr	r3, [sp, #4]
 8019074:	2b00      	cmp	r3, #0
 8019076:	f340 809d 	ble.w	80191b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801907a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801907e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019082:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019086:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019088:	ee31 1a05 	vadd.f32	s2, s2, s10
 801908c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019090:	eeb0 6a62 	vmov.f32	s12, s5
 8019094:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019098:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801909c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80190a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190a8:	eeb0 6a43 	vmov.f32	s12, s6
 80190ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190b0:	ee12 2a90 	vmov	r2, s5
 80190b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190b8:	fb92 fcf3 	sdiv	ip, r2, r3
 80190bc:	ee13 2a10 	vmov	r2, s6
 80190c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80190c4:	9312      	str	r3, [sp, #72]	; 0x48
 80190c6:	9b01      	ldr	r3, [sp, #4]
 80190c8:	9a03      	ldr	r2, [sp, #12]
 80190ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80190ce:	3b01      	subs	r3, #1
 80190d0:	9301      	str	r3, [sp, #4]
 80190d2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80190d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80190d8:	eeb0 3a67 	vmov.f32	s6, s15
 80190dc:	bf08      	it	eq
 80190de:	4613      	moveq	r3, r2
 80190e0:	eef0 2a47 	vmov.f32	s5, s14
 80190e4:	e793      	b.n	801900e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80190e6:	45ce      	cmp	lr, r9
 80190e8:	dab9      	bge.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190ea:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190ec:	fb01 2606 	mla	r6, r1, r6, r2
 80190f0:	1436      	asrs	r6, r6, #16
 80190f2:	d4b4      	bmi.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190f4:	4546      	cmp	r6, r8
 80190f6:	dab2      	bge.n	801905e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190f8:	4698      	mov	r8, r3
 80190fa:	46a2      	mov	sl, r4
 80190fc:	f1b8 0f00 	cmp.w	r8, #0
 8019100:	ddb3      	ble.n	801906a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019102:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019106:	9902      	ldr	r1, [sp, #8]
 8019108:	1416      	asrs	r6, r2, #16
 801910a:	fb09 1606 	mla	r6, r9, r6, r1
 801910e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019112:	492a      	ldr	r1, [pc, #168]	; (80191bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019114:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019118:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801911c:	eb07 0b0e 	add.w	fp, r7, lr
 8019120:	4460      	add	r0, ip
 8019122:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019126:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801912a:	00f6      	lsls	r6, r6, #3
 801912c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019130:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019134:	ea49 0606 	orr.w	r6, r9, r6
 8019138:	f817 900e 	ldrb.w	r9, [r7, lr]
 801913c:	9912      	ldr	r1, [sp, #72]	; 0x48
 801913e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019142:	f82a 6b02 	strh.w	r6, [sl], #2
 8019146:	440a      	add	r2, r1
 8019148:	f108 38ff 	add.w	r8, r8, #4294967295
 801914c:	e7d6      	b.n	80190fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801914e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019152:	d429      	bmi.n	80191a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019154:	68ae      	ldr	r6, [r5, #8]
 8019156:	454e      	cmp	r6, r9
 8019158:	dd26      	ble.n	80191a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801915a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801915e:	d423      	bmi.n	80191a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019160:	68e9      	ldr	r1, [r5, #12]
 8019162:	4559      	cmp	r1, fp
 8019164:	dd20      	ble.n	80191a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019166:	9902      	ldr	r1, [sp, #8]
 8019168:	fa0f fe86 	sxth.w	lr, r6
 801916c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019170:	f06f 0101 	mvn.w	r1, #1
 8019174:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019178:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801917c:	eb07 060e 	add.w	r6, r7, lr
 8019180:	fb01 f908 	mul.w	r9, r1, r8
 8019184:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019188:	7876      	ldrb	r6, [r6, #1]
 801918a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801918e:	00f6      	lsls	r6, r6, #3
 8019190:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8019194:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019198:	ea4b 0606 	orr.w	r6, fp, r6
 801919c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80191a0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80191a4:	f82a 6009 	strh.w	r6, [sl, r9]
 80191a8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80191aa:	4460      	add	r0, ip
 80191ac:	440a      	add	r2, r1
 80191ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80191b2:	e757      	b.n	8019064 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80191b4:	b005      	add	sp, #20
 80191b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191ba:	bf00      	nop
 80191bc:	fffff800 	.word	0xfffff800

080191c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80191c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191c4:	b087      	sub	sp, #28
 80191c6:	468b      	mov	fp, r1
 80191c8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80191ca:	9204      	str	r2, [sp, #16]
 80191cc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80191d0:	9205      	str	r2, [sp, #20]
 80191d2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80191d6:	6841      	ldr	r1, [r0, #4]
 80191d8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80191dc:	fb01 2404 	mla	r4, r1, r4, r2
 80191e0:	6802      	ldr	r2, [r0, #0]
 80191e2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80191e6:	f8dc 2000 	ldr.w	r2, [ip]
 80191ea:	9201      	str	r2, [sp, #4]
 80191ec:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80191f0:	3204      	adds	r2, #4
 80191f2:	9202      	str	r2, [sp, #8]
 80191f4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80191f8:	f1bb 0f00 	cmp.w	fp, #0
 80191fc:	dc03      	bgt.n	8019206 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80191fe:	9a04      	ldr	r2, [sp, #16]
 8019200:	2a00      	cmp	r2, #0
 8019202:	f340 8138 	ble.w	8019476 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019206:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019208:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801920c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019210:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019214:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019216:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801921a:	2b00      	cmp	r3, #0
 801921c:	dd0e      	ble.n	801923c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801921e:	1402      	asrs	r2, r0, #16
 8019220:	d405      	bmi.n	801922e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019222:	42ba      	cmp	r2, r7
 8019224:	da03      	bge.n	801922e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019226:	140a      	asrs	r2, r1, #16
 8019228:	d401      	bmi.n	801922e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801922a:	42b2      	cmp	r2, r6
 801922c:	db07      	blt.n	801923e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801922e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019230:	4410      	add	r0, r2
 8019232:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019234:	3b01      	subs	r3, #1
 8019236:	4411      	add	r1, r2
 8019238:	3402      	adds	r4, #2
 801923a:	e7ee      	b.n	801921a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801923c:	d019      	beq.n	8019272 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801923e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019240:	1e5a      	subs	r2, r3, #1
 8019242:	fb05 0502 	mla	r5, r5, r2, r0
 8019246:	142d      	asrs	r5, r5, #16
 8019248:	d409      	bmi.n	801925e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801924a:	42bd      	cmp	r5, r7
 801924c:	da07      	bge.n	801925e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801924e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019250:	fb05 1202 	mla	r2, r5, r2, r1
 8019254:	1412      	asrs	r2, r2, #16
 8019256:	d402      	bmi.n	801925e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019258:	42b2      	cmp	r2, r6
 801925a:	f2c0 80ac 	blt.w	80193b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 801925e:	f04f 0e00 	mov.w	lr, #0
 8019262:	eb03 020e 	add.w	r2, r3, lr
 8019266:	2a00      	cmp	r2, #0
 8019268:	dc3e      	bgt.n	80192e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801926a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801926e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019272:	f1bb 0f00 	cmp.w	fp, #0
 8019276:	f340 80fe 	ble.w	8019476 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801927a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801927e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019282:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019286:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019288:	f1bb 0b01 	subs.w	fp, fp, #1
 801928c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019290:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019294:	eeb0 6a62 	vmov.f32	s12, s5
 8019298:	ee61 7a27 	vmul.f32	s15, s2, s15
 801929c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192a4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80192a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192ac:	eeb0 6a43 	vmov.f32	s12, s6
 80192b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192b4:	ee12 2a90 	vmov	r2, s5
 80192b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80192c0:	ee13 2a10 	vmov	r2, s6
 80192c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192c8:	9313      	str	r3, [sp, #76]	; 0x4c
 80192ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80192d0:	9a04      	ldr	r2, [sp, #16]
 80192d2:	9314      	str	r3, [sp, #80]	; 0x50
 80192d4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80192d8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80192da:	eeb0 3a67 	vmov.f32	s6, s15
 80192de:	bf08      	it	eq
 80192e0:	4613      	moveq	r3, r2
 80192e2:	eef0 2a47 	vmov.f32	s5, s14
 80192e6:	e787      	b.n	80191f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80192e8:	1406      	asrs	r6, r0, #16
 80192ea:	d45d      	bmi.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192ec:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80192f0:	42b5      	cmp	r5, r6
 80192f2:	dd59      	ble.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192f4:	140f      	asrs	r7, r1, #16
 80192f6:	d457      	bmi.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192f8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80192fc:	42ba      	cmp	r2, r7
 80192fe:	dd53      	ble.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019300:	9a01      	ldr	r2, [sp, #4]
 8019302:	b22d      	sxth	r5, r5
 8019304:	fb07 2505 	mla	r5, r7, r5, r2
 8019308:	5daa      	ldrb	r2, [r5, r6]
 801930a:	9d02      	ldr	r5, [sp, #8]
 801930c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019310:	0e2e      	lsrs	r6, r5, #24
 8019312:	d049      	beq.n	80193a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019314:	f06f 0201 	mvn.w	r2, #1
 8019318:	fb02 f20e 	mul.w	r2, r2, lr
 801931c:	9203      	str	r2, [sp, #12]
 801931e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019322:	9a05      	ldr	r2, [sp, #20]
 8019324:	4356      	muls	r6, r2
 8019326:	1c72      	adds	r2, r6, #1
 8019328:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801932c:	1212      	asrs	r2, r2, #8
 801932e:	fa1f f982 	uxth.w	r9, r2
 8019332:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019336:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801933a:	43d2      	mvns	r2, r2
 801933c:	b2d2      	uxtb	r2, r2
 801933e:	fb16 f609 	smulbb	r6, r6, r9
 8019342:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019346:	fb07 6702 	mla	r7, r7, r2, r6
 801934a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801934e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019352:	b2ed      	uxtb	r5, r5
 8019354:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019358:	fa5f f888 	uxtb.w	r8, r8
 801935c:	fb15 f509 	smulbb	r5, r5, r9
 8019360:	fb08 5502 	mla	r5, r8, r2, r5
 8019364:	b2bf      	uxth	r7, r7
 8019366:	fb1a fa09 	smulbb	sl, sl, r9
 801936a:	b2ad      	uxth	r5, r5
 801936c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019370:	fb06 a602 	mla	r6, r6, r2, sl
 8019374:	1c7a      	adds	r2, r7, #1
 8019376:	f105 0a01 	add.w	sl, r5, #1
 801937a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801937e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019382:	b2b6      	uxth	r6, r6
 8019384:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019388:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801938c:	ea4a 0707 	orr.w	r7, sl, r7
 8019390:	f106 0a01 	add.w	sl, r6, #1
 8019394:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019398:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801939c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80193a0:	9a03      	ldr	r2, [sp, #12]
 80193a2:	ea47 070a 	orr.w	r7, r7, sl
 80193a6:	52a7      	strh	r7, [r4, r2]
 80193a8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80193aa:	4410      	add	r0, r2
 80193ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80193ae:	f10e 3eff 	add.w	lr, lr, #4294967295
 80193b2:	4411      	add	r1, r2
 80193b4:	e755      	b.n	8019262 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80193b6:	f04f 0800 	mov.w	r8, #0
 80193ba:	eba3 0208 	sub.w	r2, r3, r8
 80193be:	2a00      	cmp	r2, #0
 80193c0:	f77f af53 	ble.w	801926a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80193c4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80193c8:	9f01      	ldr	r7, [sp, #4]
 80193ca:	140a      	asrs	r2, r1, #16
 80193cc:	1405      	asrs	r5, r0, #16
 80193ce:	fb06 7202 	mla	r2, r6, r2, r7
 80193d2:	5d52      	ldrb	r2, [r2, r5]
 80193d4:	9d02      	ldr	r5, [sp, #8]
 80193d6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80193da:	0e2e      	lsrs	r6, r5, #24
 80193dc:	d044      	beq.n	8019468 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80193de:	9a05      	ldr	r2, [sp, #20]
 80193e0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80193e4:	4356      	muls	r6, r2
 80193e6:	1c72      	adds	r2, r6, #1
 80193e8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80193ec:	1212      	asrs	r2, r2, #8
 80193ee:	fa1f f982 	uxth.w	r9, r2
 80193f2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80193f6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80193fa:	43d2      	mvns	r2, r2
 80193fc:	b2d2      	uxtb	r2, r2
 80193fe:	fb16 f609 	smulbb	r6, r6, r9
 8019402:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019406:	fb07 6702 	mla	r7, r7, r2, r6
 801940a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801940e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019412:	b2ed      	uxtb	r5, r5
 8019414:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019418:	fa5f fe8e 	uxtb.w	lr, lr
 801941c:	fb15 f509 	smulbb	r5, r5, r9
 8019420:	fb0e 5502 	mla	r5, lr, r2, r5
 8019424:	b2bf      	uxth	r7, r7
 8019426:	fb1a fa09 	smulbb	sl, sl, r9
 801942a:	b2ad      	uxth	r5, r5
 801942c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019430:	fb06 a602 	mla	r6, r6, r2, sl
 8019434:	1c7a      	adds	r2, r7, #1
 8019436:	f105 0a01 	add.w	sl, r5, #1
 801943a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801943e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019442:	b2b6      	uxth	r6, r6
 8019444:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019448:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801944c:	ea4a 0707 	orr.w	r7, sl, r7
 8019450:	f106 0a01 	add.w	sl, r6, #1
 8019454:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019458:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801945c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019460:	ea47 070a 	orr.w	r7, r7, sl
 8019464:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019468:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801946a:	4410      	add	r0, r2
 801946c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801946e:	f108 0801 	add.w	r8, r8, #1
 8019472:	4411      	add	r1, r2
 8019474:	e7a1      	b.n	80193ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019476:	b007      	add	sp, #28
 8019478:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801947c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801947c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019480:	b085      	sub	sp, #20
 8019482:	468b      	mov	fp, r1
 8019484:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019486:	9203      	str	r2, [sp, #12]
 8019488:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801948c:	6841      	ldr	r1, [r0, #4]
 801948e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019492:	fb01 2404 	mla	r4, r1, r4, r2
 8019496:	6802      	ldr	r2, [r0, #0]
 8019498:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801949c:	f8de 2000 	ldr.w	r2, [lr]
 80194a0:	9200      	str	r2, [sp, #0]
 80194a2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80194a6:	3204      	adds	r2, #4
 80194a8:	9201      	str	r2, [sp, #4]
 80194aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80194ae:	f1bb 0f00 	cmp.w	fp, #0
 80194b2:	dc03      	bgt.n	80194bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80194b4:	9a03      	ldr	r2, [sp, #12]
 80194b6:	2a00      	cmp	r2, #0
 80194b8:	f340 8153 	ble.w	8019762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80194bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80194be:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80194c2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80194c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80194ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80194cc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80194d0:	2b00      	cmp	r3, #0
 80194d2:	dd0e      	ble.n	80194f2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80194d4:	1408      	asrs	r0, r1, #16
 80194d6:	d405      	bmi.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80194d8:	42b8      	cmp	r0, r7
 80194da:	da03      	bge.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80194dc:	1410      	asrs	r0, r2, #16
 80194de:	d401      	bmi.n	80194e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80194e0:	42b0      	cmp	r0, r6
 80194e2:	db07      	blt.n	80194f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80194e4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80194e6:	4401      	add	r1, r0
 80194e8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80194ea:	3b01      	subs	r3, #1
 80194ec:	4402      	add	r2, r0
 80194ee:	3402      	adds	r4, #2
 80194f0:	e7ee      	b.n	80194d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80194f2:	d017      	beq.n	8019524 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80194f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194f6:	1e58      	subs	r0, r3, #1
 80194f8:	fb05 1500 	mla	r5, r5, r0, r1
 80194fc:	142d      	asrs	r5, r5, #16
 80194fe:	d409      	bmi.n	8019514 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019500:	42bd      	cmp	r5, r7
 8019502:	da07      	bge.n	8019514 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019504:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019506:	fb05 2000 	mla	r0, r5, r0, r2
 801950a:	1400      	asrs	r0, r0, #16
 801950c:	d402      	bmi.n	8019514 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801950e:	42b0      	cmp	r0, r6
 8019510:	f2c0 80bc 	blt.w	801968c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019514:	2600      	movs	r6, #0
 8019516:	1998      	adds	r0, r3, r6
 8019518:	2800      	cmp	r0, #0
 801951a:	dc3e      	bgt.n	801959a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801951c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019520:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019524:	f1bb 0f00 	cmp.w	fp, #0
 8019528:	f340 811b 	ble.w	8019762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801952c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019530:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019534:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019538:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801953a:	f1bb 0b01 	subs.w	fp, fp, #1
 801953e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019542:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019546:	eeb0 6a62 	vmov.f32	s12, s5
 801954a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801954e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019552:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019556:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801955a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801955e:	eeb0 6a43 	vmov.f32	s12, s6
 8019562:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019566:	ee12 2a90 	vmov	r2, s5
 801956a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801956e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019572:	ee13 2a10 	vmov	r2, s6
 8019576:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801957a:	9311      	str	r3, [sp, #68]	; 0x44
 801957c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801957e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019582:	9a03      	ldr	r2, [sp, #12]
 8019584:	9312      	str	r3, [sp, #72]	; 0x48
 8019586:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801958a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801958c:	eeb0 3a67 	vmov.f32	s6, s15
 8019590:	bf08      	it	eq
 8019592:	4613      	moveq	r3, r2
 8019594:	eef0 2a47 	vmov.f32	s5, s14
 8019598:	e789      	b.n	80194ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801959a:	140f      	asrs	r7, r1, #16
 801959c:	d426      	bmi.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801959e:	f8de 5008 	ldr.w	r5, [lr, #8]
 80195a2:	42bd      	cmp	r5, r7
 80195a4:	dd22      	ble.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195a6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80195aa:	d41f      	bmi.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195ac:	f8de 000c 	ldr.w	r0, [lr, #12]
 80195b0:	4560      	cmp	r0, ip
 80195b2:	dd1b      	ble.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195b4:	9800      	ldr	r0, [sp, #0]
 80195b6:	b22d      	sxth	r5, r5
 80195b8:	fb0c 0505 	mla	r5, ip, r5, r0
 80195bc:	5de8      	ldrb	r0, [r5, r7]
 80195be:	9d01      	ldr	r5, [sp, #4]
 80195c0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80195c4:	0e07      	lsrs	r7, r0, #24
 80195c6:	2fff      	cmp	r7, #255	; 0xff
 80195c8:	d116      	bne.n	80195f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80195ca:	f06f 0501 	mvn.w	r5, #1
 80195ce:	fb05 f706 	mul.w	r7, r5, r6
 80195d2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80195d6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80195da:	0945      	lsrs	r5, r0, #5
 80195dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80195e0:	ea4c 0505 	orr.w	r5, ip, r5
 80195e4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80195e8:	4305      	orrs	r5, r0
 80195ea:	53e5      	strh	r5, [r4, r7]
 80195ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80195ee:	4401      	add	r1, r0
 80195f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80195f2:	3e01      	subs	r6, #1
 80195f4:	4402      	add	r2, r0
 80195f6:	e78e      	b.n	8019516 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80195f8:	b2fd      	uxtb	r5, r7
 80195fa:	2f00      	cmp	r7, #0
 80195fc:	d0f6      	beq.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195fe:	f06f 0701 	mvn.w	r7, #1
 8019602:	4377      	muls	r7, r6
 8019604:	fa1f f985 	uxth.w	r9, r5
 8019608:	f834 8007 	ldrh.w	r8, [r4, r7]
 801960c:	9702      	str	r7, [sp, #8]
 801960e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019612:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019616:	43ed      	mvns	r5, r5
 8019618:	b2ed      	uxtb	r5, r5
 801961a:	fb17 f709 	smulbb	r7, r7, r9
 801961e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019622:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019626:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801962a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801962e:	b2c0      	uxtb	r0, r0
 8019630:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019634:	fa5f f888 	uxtb.w	r8, r8
 8019638:	fb10 f009 	smulbb	r0, r0, r9
 801963c:	fb08 0005 	mla	r0, r8, r5, r0
 8019640:	b280      	uxth	r0, r0
 8019642:	fa1f fc8c 	uxth.w	ip, ip
 8019646:	fb1a fa09 	smulbb	sl, sl, r9
 801964a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801964e:	fb07 a705 	mla	r7, r7, r5, sl
 8019652:	f100 0a01 	add.w	sl, r0, #1
 8019656:	f10c 0501 	add.w	r5, ip, #1
 801965a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801965e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019662:	b2bf      	uxth	r7, r7
 8019664:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019668:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801966c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019670:	f107 0a01 	add.w	sl, r7, #1
 8019674:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019678:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801967c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019680:	9802      	ldr	r0, [sp, #8]
 8019682:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019686:	f824 c000 	strh.w	ip, [r4, r0]
 801968a:	e7af      	b.n	80195ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801968c:	f04f 0800 	mov.w	r8, #0
 8019690:	eba3 0008 	sub.w	r0, r3, r8
 8019694:	2800      	cmp	r0, #0
 8019696:	f77f af41 	ble.w	801951c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801969a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801969e:	9f00      	ldr	r7, [sp, #0]
 80196a0:	1410      	asrs	r0, r2, #16
 80196a2:	140d      	asrs	r5, r1, #16
 80196a4:	fb06 7000 	mla	r0, r6, r0, r7
 80196a8:	5d40      	ldrb	r0, [r0, r5]
 80196aa:	9d01      	ldr	r5, [sp, #4]
 80196ac:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80196b0:	0e2e      	lsrs	r6, r5, #24
 80196b2:	2eff      	cmp	r6, #255	; 0xff
 80196b4:	d112      	bne.n	80196dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80196b6:	482c      	ldr	r0, [pc, #176]	; (8019768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80196b8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80196bc:	0968      	lsrs	r0, r5, #5
 80196be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80196c2:	4330      	orrs	r0, r6
 80196c4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80196c8:	4328      	orrs	r0, r5
 80196ca:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80196ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80196d0:	4401      	add	r1, r0
 80196d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80196d4:	f108 0801 	add.w	r8, r8, #1
 80196d8:	4402      	add	r2, r0
 80196da:	e7d9      	b.n	8019690 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80196dc:	b2f0      	uxtb	r0, r6
 80196de:	2e00      	cmp	r6, #0
 80196e0:	d0f5      	beq.n	80196ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80196e2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80196e6:	fa1f f980 	uxth.w	r9, r0
 80196ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 80196ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80196f2:	43c0      	mvns	r0, r0
 80196f4:	b2c0      	uxtb	r0, r0
 80196f6:	fb16 f609 	smulbb	r6, r6, r9
 80196fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80196fe:	fb07 6700 	mla	r7, r7, r0, r6
 8019702:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019706:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801970a:	b2ed      	uxtb	r5, r5
 801970c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019710:	fa5f fc8c 	uxtb.w	ip, ip
 8019714:	fb15 f509 	smulbb	r5, r5, r9
 8019718:	fb0c 5500 	mla	r5, ip, r0, r5
 801971c:	b2bf      	uxth	r7, r7
 801971e:	fb1a fa09 	smulbb	sl, sl, r9
 8019722:	b2ad      	uxth	r5, r5
 8019724:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019728:	fb06 a600 	mla	r6, r6, r0, sl
 801972c:	1c78      	adds	r0, r7, #1
 801972e:	f105 0a01 	add.w	sl, r5, #1
 8019732:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8019736:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801973a:	b2b6      	uxth	r6, r6
 801973c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019740:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019744:	ea4a 0707 	orr.w	r7, sl, r7
 8019748:	f106 0a01 	add.w	sl, r6, #1
 801974c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019750:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019754:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019758:	ea47 070a 	orr.w	r7, r7, sl
 801975c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019760:	e7b5      	b.n	80196ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019762:	b005      	add	sp, #20
 8019764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019768:	fffff800 	.word	0xfffff800

0801976c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801976c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019770:	b087      	sub	sp, #28
 8019772:	468b      	mov	fp, r1
 8019774:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8019776:	9204      	str	r2, [sp, #16]
 8019778:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801977c:	9205      	str	r2, [sp, #20]
 801977e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8019782:	6861      	ldr	r1, [r4, #4]
 8019784:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019788:	fb01 2000 	mla	r0, r1, r0, r2
 801978c:	6822      	ldr	r2, [r4, #0]
 801978e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019792:	f8de 2000 	ldr.w	r2, [lr]
 8019796:	9201      	str	r2, [sp, #4]
 8019798:	f8de 2004 	ldr.w	r2, [lr, #4]
 801979c:	9202      	str	r2, [sp, #8]
 801979e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80197a2:	f1bb 0f00 	cmp.w	fp, #0
 80197a6:	dc03      	bgt.n	80197b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80197a8:	9a04      	ldr	r2, [sp, #16]
 80197aa:	2a00      	cmp	r2, #0
 80197ac:	f340 8142 	ble.w	8019a34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80197b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80197b2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80197b6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80197ba:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80197be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80197c0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80197c4:	2b00      	cmp	r3, #0
 80197c6:	dd0e      	ble.n	80197e6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80197c8:	140c      	asrs	r4, r1, #16
 80197ca:	d405      	bmi.n	80197d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80197cc:	42bc      	cmp	r4, r7
 80197ce:	da03      	bge.n	80197d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80197d0:	1414      	asrs	r4, r2, #16
 80197d2:	d401      	bmi.n	80197d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80197d4:	42b4      	cmp	r4, r6
 80197d6:	db07      	blt.n	80197e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80197d8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80197da:	4421      	add	r1, r4
 80197dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197de:	3b01      	subs	r3, #1
 80197e0:	4422      	add	r2, r4
 80197e2:	3002      	adds	r0, #2
 80197e4:	e7ee      	b.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80197e6:	d019      	beq.n	801981c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80197e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80197ea:	1e5c      	subs	r4, r3, #1
 80197ec:	fb05 1504 	mla	r5, r5, r4, r1
 80197f0:	142d      	asrs	r5, r5, #16
 80197f2:	d409      	bmi.n	8019808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197f4:	42bd      	cmp	r5, r7
 80197f6:	da07      	bge.n	8019808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197f8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80197fa:	fb05 2404 	mla	r4, r5, r4, r2
 80197fe:	1424      	asrs	r4, r4, #16
 8019800:	d402      	bmi.n	8019808 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019802:	42b4      	cmp	r4, r6
 8019804:	f2c0 80b1 	blt.w	801996a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019808:	f04f 0800 	mov.w	r8, #0
 801980c:	eb03 0408 	add.w	r4, r3, r8
 8019810:	2c00      	cmp	r4, #0
 8019812:	dc3e      	bgt.n	8019892 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019814:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019818:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801981c:	f1bb 0f00 	cmp.w	fp, #0
 8019820:	f340 8108 	ble.w	8019a34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019824:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019828:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801982c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019830:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019832:	f1bb 0b01 	subs.w	fp, fp, #1
 8019836:	ee31 1a05 	vadd.f32	s2, s2, s10
 801983a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801983e:	eeb0 6a62 	vmov.f32	s12, s5
 8019842:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019846:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801984a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801984e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019852:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019856:	eeb0 6a43 	vmov.f32	s12, s6
 801985a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801985e:	ee12 2a90 	vmov	r2, s5
 8019862:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019866:	fb92 f3f3 	sdiv	r3, r2, r3
 801986a:	ee13 2a10 	vmov	r2, s6
 801986e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019872:	9313      	str	r3, [sp, #76]	; 0x4c
 8019874:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019876:	fb92 f3f3 	sdiv	r3, r2, r3
 801987a:	9a04      	ldr	r2, [sp, #16]
 801987c:	9314      	str	r3, [sp, #80]	; 0x50
 801987e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019882:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019884:	eeb0 3a67 	vmov.f32	s6, s15
 8019888:	bf08      	it	eq
 801988a:	4613      	moveq	r3, r2
 801988c:	eef0 2a47 	vmov.f32	s5, s14
 8019890:	e787      	b.n	80197a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019892:	140e      	asrs	r6, r1, #16
 8019894:	d462      	bmi.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019896:	f8de 5008 	ldr.w	r5, [lr, #8]
 801989a:	42b5      	cmp	r5, r6
 801989c:	dd5e      	ble.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801989e:	1417      	asrs	r7, r2, #16
 80198a0:	d45c      	bmi.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80198a2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80198a6:	42bc      	cmp	r4, r7
 80198a8:	dd58      	ble.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80198aa:	b22d      	sxth	r5, r5
 80198ac:	fb07 6505 	mla	r5, r7, r5, r6
 80198b0:	9c02      	ldr	r4, [sp, #8]
 80198b2:	5d66      	ldrb	r6, [r4, r5]
 80198b4:	2e00      	cmp	r6, #0
 80198b6:	d051      	beq.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80198b8:	9c01      	ldr	r4, [sp, #4]
 80198ba:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80198be:	f06f 0401 	mvn.w	r4, #1
 80198c2:	fb04 f408 	mul.w	r4, r4, r8
 80198c6:	9403      	str	r4, [sp, #12]
 80198c8:	5b05      	ldrh	r5, [r0, r4]
 80198ca:	9c05      	ldr	r4, [sp, #20]
 80198cc:	4366      	muls	r6, r4
 80198ce:	1c74      	adds	r4, r6, #1
 80198d0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80198d4:	1224      	asrs	r4, r4, #8
 80198d6:	b2a7      	uxth	r7, r4
 80198d8:	122e      	asrs	r6, r5, #8
 80198da:	43e4      	mvns	r4, r4
 80198dc:	b2e4      	uxtb	r4, r4
 80198de:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80198e2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80198e6:	fb16 f604 	smulbb	r6, r6, r4
 80198ea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80198ee:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198f2:	00ed      	lsls	r5, r5, #3
 80198f4:	fb0c 6c07 	mla	ip, ip, r7, r6
 80198f8:	b2ed      	uxtb	r5, r5
 80198fa:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80198fe:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019902:	fb15 f504 	smulbb	r5, r5, r4
 8019906:	fa5f f989 	uxtb.w	r9, r9
 801990a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801990e:	fb09 5507 	mla	r5, r9, r7, r5
 8019912:	fb1a fa04 	smulbb	sl, sl, r4
 8019916:	fa1f fc8c 	uxth.w	ip, ip
 801991a:	b2ad      	uxth	r5, r5
 801991c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019920:	fb06 a607 	mla	r6, r6, r7, sl
 8019924:	f10c 0401 	add.w	r4, ip, #1
 8019928:	f105 0a01 	add.w	sl, r5, #1
 801992c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019930:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019934:	b2b6      	uxth	r6, r6
 8019936:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801993a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801993e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019942:	f106 0a01 	add.w	sl, r6, #1
 8019946:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801994a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801994e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019952:	9c03      	ldr	r4, [sp, #12]
 8019954:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019958:	f820 c004 	strh.w	ip, [r0, r4]
 801995c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801995e:	4421      	add	r1, r4
 8019960:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019962:	f108 38ff 	add.w	r8, r8, #4294967295
 8019966:	4422      	add	r2, r4
 8019968:	e750      	b.n	801980c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801996a:	f04f 0900 	mov.w	r9, #0
 801996e:	eba3 0409 	sub.w	r4, r3, r9
 8019972:	2c00      	cmp	r4, #0
 8019974:	f77f af4e 	ble.w	8019814 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019978:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801997c:	140d      	asrs	r5, r1, #16
 801997e:	1414      	asrs	r4, r2, #16
 8019980:	fb06 5404 	mla	r4, r6, r4, r5
 8019984:	9d02      	ldr	r5, [sp, #8]
 8019986:	5d2e      	ldrb	r6, [r5, r4]
 8019988:	2e00      	cmp	r6, #0
 801998a:	d04c      	beq.n	8019a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801998c:	9d01      	ldr	r5, [sp, #4]
 801998e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019992:	9c05      	ldr	r4, [sp, #20]
 8019994:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019998:	4366      	muls	r6, r4
 801999a:	1c74      	adds	r4, r6, #1
 801999c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80199a0:	1224      	asrs	r4, r4, #8
 80199a2:	b2a7      	uxth	r7, r4
 80199a4:	122e      	asrs	r6, r5, #8
 80199a6:	43e4      	mvns	r4, r4
 80199a8:	b2e4      	uxtb	r4, r4
 80199aa:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80199ae:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80199b2:	fb16 f604 	smulbb	r6, r6, r4
 80199b6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80199ba:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80199be:	00ed      	lsls	r5, r5, #3
 80199c0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80199c4:	b2ed      	uxtb	r5, r5
 80199c6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80199ca:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80199ce:	fb15 f504 	smulbb	r5, r5, r4
 80199d2:	fa5f f888 	uxtb.w	r8, r8
 80199d6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80199da:	fb08 5507 	mla	r5, r8, r7, r5
 80199de:	fb1a fa04 	smulbb	sl, sl, r4
 80199e2:	fa1f fc8c 	uxth.w	ip, ip
 80199e6:	b2ad      	uxth	r5, r5
 80199e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80199ec:	fb06 a607 	mla	r6, r6, r7, sl
 80199f0:	f10c 0401 	add.w	r4, ip, #1
 80199f4:	f105 0a01 	add.w	sl, r5, #1
 80199f8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80199fc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a00:	b2b6      	uxth	r6, r6
 8019a02:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a06:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019a0a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019a0e:	f106 0a01 	add.w	sl, r6, #1
 8019a12:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a1a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019a1e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019a22:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019a26:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a28:	4421      	add	r1, r4
 8019a2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a2c:	f109 0901 	add.w	r9, r9, #1
 8019a30:	4422      	add	r2, r4
 8019a32:	e79c      	b.n	801996e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019a34:	b007      	add	sp, #28
 8019a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a3e:	b085      	sub	sp, #20
 8019a40:	468b      	mov	fp, r1
 8019a42:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a44:	9203      	str	r2, [sp, #12]
 8019a46:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019a4a:	6861      	ldr	r1, [r4, #4]
 8019a4c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019a50:	fb01 2000 	mla	r0, r1, r0, r2
 8019a54:	6822      	ldr	r2, [r4, #0]
 8019a56:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019a5a:	f8d8 2000 	ldr.w	r2, [r8]
 8019a5e:	9200      	str	r2, [sp, #0]
 8019a60:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019a64:	9201      	str	r2, [sp, #4]
 8019a66:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a6a:	f1bb 0f00 	cmp.w	fp, #0
 8019a6e:	dc03      	bgt.n	8019a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019a70:	9a03      	ldr	r2, [sp, #12]
 8019a72:	2a00      	cmp	r2, #0
 8019a74:	f340 8146 	ble.w	8019d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019a78:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a7a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019a7e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019a82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a86:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a88:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a8c:	2b00      	cmp	r3, #0
 8019a8e:	dd0e      	ble.n	8019aae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019a90:	140c      	asrs	r4, r1, #16
 8019a92:	d405      	bmi.n	8019aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a94:	42bc      	cmp	r4, r7
 8019a96:	da03      	bge.n	8019aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a98:	1414      	asrs	r4, r2, #16
 8019a9a:	d401      	bmi.n	8019aa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a9c:	42b4      	cmp	r4, r6
 8019a9e:	db07      	blt.n	8019ab0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019aa0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019aa2:	4421      	add	r1, r4
 8019aa4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019aa6:	3b01      	subs	r3, #1
 8019aa8:	4422      	add	r2, r4
 8019aaa:	3002      	adds	r0, #2
 8019aac:	e7ee      	b.n	8019a8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019aae:	d017      	beq.n	8019ae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019ab0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019ab2:	1e5c      	subs	r4, r3, #1
 8019ab4:	fb05 1504 	mla	r5, r5, r4, r1
 8019ab8:	142d      	asrs	r5, r5, #16
 8019aba:	d409      	bmi.n	8019ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019abc:	42bd      	cmp	r5, r7
 8019abe:	da07      	bge.n	8019ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019ac0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ac2:	fb05 2404 	mla	r4, r5, r4, r2
 8019ac6:	1424      	asrs	r4, r4, #16
 8019ac8:	d402      	bmi.n	8019ad0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019aca:	42b4      	cmp	r4, r6
 8019acc:	f2c0 80b3 	blt.w	8019c36 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019ad0:	2600      	movs	r6, #0
 8019ad2:	199c      	adds	r4, r3, r6
 8019ad4:	2c00      	cmp	r4, #0
 8019ad6:	dc3e      	bgt.n	8019b56 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019ad8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019adc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019ae0:	f1bb 0f00 	cmp.w	fp, #0
 8019ae4:	f340 810e 	ble.w	8019d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019ae8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019aec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019af0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019af4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019af6:	f1bb 0b01 	subs.w	fp, fp, #1
 8019afa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019afe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b02:	eeb0 6a62 	vmov.f32	s12, s5
 8019b06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b12:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019b16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b1a:	eeb0 6a43 	vmov.f32	s12, s6
 8019b1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b22:	ee12 2a90 	vmov	r2, s5
 8019b26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b2e:	ee13 2a10 	vmov	r2, s6
 8019b32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b36:	9311      	str	r3, [sp, #68]	; 0x44
 8019b38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b3e:	9a03      	ldr	r2, [sp, #12]
 8019b40:	9312      	str	r3, [sp, #72]	; 0x48
 8019b42:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019b46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b48:	eeb0 3a67 	vmov.f32	s6, s15
 8019b4c:	bf08      	it	eq
 8019b4e:	4613      	moveq	r3, r2
 8019b50:	eef0 2a47 	vmov.f32	s5, s14
 8019b54:	e789      	b.n	8019a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019b56:	140f      	asrs	r7, r1, #16
 8019b58:	d418      	bmi.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b5a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019b5e:	42bd      	cmp	r5, r7
 8019b60:	dd14      	ble.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b62:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019b66:	d411      	bmi.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b68:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019b6c:	4564      	cmp	r4, ip
 8019b6e:	dd0d      	ble.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b70:	b22d      	sxth	r5, r5
 8019b72:	fb0c 7505 	mla	r5, ip, r5, r7
 8019b76:	9c01      	ldr	r4, [sp, #4]
 8019b78:	5d64      	ldrb	r4, [r4, r5]
 8019b7a:	2cff      	cmp	r4, #255	; 0xff
 8019b7c:	d10c      	bne.n	8019b98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019b7e:	9c00      	ldr	r4, [sp, #0]
 8019b80:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019b84:	f06f 0401 	mvn.w	r4, #1
 8019b88:	4374      	muls	r4, r6
 8019b8a:	5305      	strh	r5, [r0, r4]
 8019b8c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b8e:	4421      	add	r1, r4
 8019b90:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b92:	3e01      	subs	r6, #1
 8019b94:	4422      	add	r2, r4
 8019b96:	e79c      	b.n	8019ad2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019b98:	2c00      	cmp	r4, #0
 8019b9a:	d0f7      	beq.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b9c:	9f00      	ldr	r7, [sp, #0]
 8019b9e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019ba2:	f06f 0501 	mvn.w	r5, #1
 8019ba6:	4375      	muls	r5, r6
 8019ba8:	9502      	str	r5, [sp, #8]
 8019baa:	5b45      	ldrh	r5, [r0, r5]
 8019bac:	fa1f fc84 	uxth.w	ip, r4
 8019bb0:	122f      	asrs	r7, r5, #8
 8019bb2:	43e4      	mvns	r4, r4
 8019bb4:	b2e4      	uxtb	r4, r4
 8019bb6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019bba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019bbe:	fb17 f704 	smulbb	r7, r7, r4
 8019bc2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019bc6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019bca:	00ed      	lsls	r5, r5, #3
 8019bcc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019bd0:	b2ed      	uxtb	r5, r5
 8019bd2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019bd6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019bda:	fb15 f504 	smulbb	r5, r5, r4
 8019bde:	fa5f f989 	uxtb.w	r9, r9
 8019be2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019be6:	fb09 550c 	mla	r5, r9, ip, r5
 8019bea:	fb1a fa04 	smulbb	sl, sl, r4
 8019bee:	fa1f fe8e 	uxth.w	lr, lr
 8019bf2:	b2ad      	uxth	r5, r5
 8019bf4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019bf8:	fb07 a70c 	mla	r7, r7, ip, sl
 8019bfc:	f10e 0401 	add.w	r4, lr, #1
 8019c00:	f105 0a01 	add.w	sl, r5, #1
 8019c04:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019c08:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c0c:	b2bf      	uxth	r7, r7
 8019c0e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c12:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019c16:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019c1a:	f107 0a01 	add.w	sl, r7, #1
 8019c1e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019c22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c26:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c2a:	9c02      	ldr	r4, [sp, #8]
 8019c2c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019c30:	f820 e004 	strh.w	lr, [r0, r4]
 8019c34:	e7aa      	b.n	8019b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019c36:	f04f 0900 	mov.w	r9, #0
 8019c3a:	eba3 0409 	sub.w	r4, r3, r9
 8019c3e:	2c00      	cmp	r4, #0
 8019c40:	f77f af4a 	ble.w	8019ad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019c44:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019c48:	1414      	asrs	r4, r2, #16
 8019c4a:	140d      	asrs	r5, r1, #16
 8019c4c:	fb06 5504 	mla	r5, r6, r4, r5
 8019c50:	9c01      	ldr	r4, [sp, #4]
 8019c52:	5d64      	ldrb	r4, [r4, r5]
 8019c54:	2cff      	cmp	r4, #255	; 0xff
 8019c56:	d10b      	bne.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019c58:	9c00      	ldr	r4, [sp, #0]
 8019c5a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019c5e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019c62:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c64:	4421      	add	r1, r4
 8019c66:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c68:	f109 0901 	add.w	r9, r9, #1
 8019c6c:	4422      	add	r2, r4
 8019c6e:	e7e4      	b.n	8019c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019c70:	2c00      	cmp	r4, #0
 8019c72:	d0f6      	beq.n	8019c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c74:	9e00      	ldr	r6, [sp, #0]
 8019c76:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019c7a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019c7e:	b2a7      	uxth	r7, r4
 8019c80:	122e      	asrs	r6, r5, #8
 8019c82:	43e4      	mvns	r4, r4
 8019c84:	b2e4      	uxtb	r4, r4
 8019c86:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019c8a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c8e:	fb16 f604 	smulbb	r6, r6, r4
 8019c92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c9a:	00ed      	lsls	r5, r5, #3
 8019c9c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019ca0:	b2ed      	uxtb	r5, r5
 8019ca2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019ca6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019caa:	fb15 f504 	smulbb	r5, r5, r4
 8019cae:	fa5f fe8e 	uxtb.w	lr, lr
 8019cb2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019cb6:	fb0e 5507 	mla	r5, lr, r7, r5
 8019cba:	fb1a fa04 	smulbb	sl, sl, r4
 8019cbe:	fa1f fc8c 	uxth.w	ip, ip
 8019cc2:	b2ad      	uxth	r5, r5
 8019cc4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019cc8:	fb06 a607 	mla	r6, r6, r7, sl
 8019ccc:	f10c 0401 	add.w	r4, ip, #1
 8019cd0:	f105 0a01 	add.w	sl, r5, #1
 8019cd4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019cd8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019cdc:	b2b6      	uxth	r6, r6
 8019cde:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ce2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ce6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019cea:	f106 0a01 	add.w	sl, r6, #1
 8019cee:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019cf2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019cf6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019cfa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019cfe:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019d02:	e7ae      	b.n	8019c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019d04:	b005      	add	sp, #20
 8019d06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d0a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d0e:	b085      	sub	sp, #20
 8019d10:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019d12:	9203      	str	r2, [sp, #12]
 8019d14:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019d18:	9201      	str	r2, [sp, #4]
 8019d1a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019d1e:	9100      	str	r1, [sp, #0]
 8019d20:	6841      	ldr	r1, [r0, #4]
 8019d22:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019d26:	fb01 2404 	mla	r4, r1, r4, r2
 8019d2a:	6802      	ldr	r2, [r0, #0]
 8019d2c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019d30:	f8de 2000 	ldr.w	r2, [lr]
 8019d34:	9202      	str	r2, [sp, #8]
 8019d36:	9a01      	ldr	r2, [sp, #4]
 8019d38:	43d6      	mvns	r6, r2
 8019d3a:	b2f6      	uxtb	r6, r6
 8019d3c:	9a00      	ldr	r2, [sp, #0]
 8019d3e:	2a00      	cmp	r2, #0
 8019d40:	dc03      	bgt.n	8019d4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019d42:	9a03      	ldr	r2, [sp, #12]
 8019d44:	2a00      	cmp	r2, #0
 8019d46:	f340 8124 	ble.w	8019f92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019d4a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d4c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019d50:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019d54:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d58:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d5a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d5e:	2b00      	cmp	r3, #0
 8019d60:	dd0e      	ble.n	8019d80 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019d62:	1408      	asrs	r0, r1, #16
 8019d64:	d405      	bmi.n	8019d72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d66:	4560      	cmp	r0, ip
 8019d68:	da03      	bge.n	8019d72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d6a:	1410      	asrs	r0, r2, #16
 8019d6c:	d401      	bmi.n	8019d72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d6e:	42b8      	cmp	r0, r7
 8019d70:	db07      	blt.n	8019d82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019d72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d74:	4401      	add	r1, r0
 8019d76:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d78:	3b01      	subs	r3, #1
 8019d7a:	4402      	add	r2, r0
 8019d7c:	3402      	adds	r4, #2
 8019d7e:	e7ee      	b.n	8019d5e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019d80:	d06e      	beq.n	8019e60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019d82:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d84:	1e58      	subs	r0, r3, #1
 8019d86:	fb05 1500 	mla	r5, r5, r0, r1
 8019d8a:	142d      	asrs	r5, r5, #16
 8019d8c:	d45c      	bmi.n	8019e48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d8e:	4565      	cmp	r5, ip
 8019d90:	da5a      	bge.n	8019e48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d92:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d94:	fb05 2000 	mla	r0, r5, r0, r2
 8019d98:	1400      	asrs	r0, r0, #16
 8019d9a:	d455      	bmi.n	8019e48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d9c:	42b8      	cmp	r0, r7
 8019d9e:	da53      	bge.n	8019e48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019da0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019da4:	4699      	mov	r9, r3
 8019da6:	46a2      	mov	sl, r4
 8019da8:	f1b9 0f00 	cmp.w	r9, #0
 8019dac:	dd54      	ble.n	8019e58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019dae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019db2:	140d      	asrs	r5, r1, #16
 8019db4:	1410      	asrs	r0, r2, #16
 8019db6:	fb07 5000 	mla	r0, r7, r0, r5
 8019dba:	9d02      	ldr	r5, [sp, #8]
 8019dbc:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019dc0:	f8ba 5000 	ldrh.w	r5, [sl]
 8019dc4:	122f      	asrs	r7, r5, #8
 8019dc6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019dca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019dce:	fb17 f706 	smulbb	r7, r7, r6
 8019dd2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019dd6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019dda:	00ed      	lsls	r5, r5, #3
 8019ddc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019de0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019de4:	10c7      	asrs	r7, r0, #3
 8019de6:	b2ed      	uxtb	r5, r5
 8019de8:	00c0      	lsls	r0, r0, #3
 8019dea:	fb18 f806 	smulbb	r8, r8, r6
 8019dee:	fb15 f506 	smulbb	r5, r5, r6
 8019df2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019df6:	b2c0      	uxtb	r0, r0
 8019df8:	fa1f fc8c 	uxth.w	ip, ip
 8019dfc:	fb07 870b 	mla	r7, r7, fp, r8
 8019e00:	fb00 500b 	mla	r0, r0, fp, r5
 8019e04:	b280      	uxth	r0, r0
 8019e06:	b2bf      	uxth	r7, r7
 8019e08:	f10c 0501 	add.w	r5, ip, #1
 8019e0c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019e10:	f107 0801 	add.w	r8, r7, #1
 8019e14:	1c45      	adds	r5, r0, #1
 8019e16:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019e1a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019e1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019e20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019e24:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019e28:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019e2c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019e30:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019e34:	4401      	add	r1, r0
 8019e36:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019e38:	ea4c 0c08 	orr.w	ip, ip, r8
 8019e3c:	f82a cb02 	strh.w	ip, [sl], #2
 8019e40:	4402      	add	r2, r0
 8019e42:	f109 39ff 	add.w	r9, r9, #4294967295
 8019e46:	e7af      	b.n	8019da8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e48:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019e4c:	f04f 0800 	mov.w	r8, #0
 8019e50:	eb03 0008 	add.w	r0, r3, r8
 8019e54:	2800      	cmp	r0, #0
 8019e56:	dc41      	bgt.n	8019edc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019e58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e5c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e60:	9b00      	ldr	r3, [sp, #0]
 8019e62:	2b00      	cmp	r3, #0
 8019e64:	f340 8095 	ble.w	8019f92 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019e68:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e74:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e82:	eef0 6a62 	vmov.f32	s13, s5
 8019e86:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e92:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019e96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e9a:	eef0 6a43 	vmov.f32	s13, s6
 8019e9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ea2:	ee12 2a90 	vmov	r2, s5
 8019ea6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019eaa:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eae:	ee13 2a10 	vmov	r2, s6
 8019eb2:	9311      	str	r3, [sp, #68]	; 0x44
 8019eb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019eb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019eba:	9312      	str	r3, [sp, #72]	; 0x48
 8019ebc:	9b00      	ldr	r3, [sp, #0]
 8019ebe:	9a03      	ldr	r2, [sp, #12]
 8019ec0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ec4:	3b01      	subs	r3, #1
 8019ec6:	9300      	str	r3, [sp, #0]
 8019ec8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019ecc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ece:	eeb0 3a67 	vmov.f32	s6, s15
 8019ed2:	bf08      	it	eq
 8019ed4:	4613      	moveq	r3, r2
 8019ed6:	eef0 2a47 	vmov.f32	s5, s14
 8019eda:	e72f      	b.n	8019d3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019edc:	140f      	asrs	r7, r1, #16
 8019ede:	d451      	bmi.n	8019f84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ee0:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019ee4:	42bd      	cmp	r5, r7
 8019ee6:	dd4d      	ble.n	8019f84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ee8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019eec:	d44a      	bmi.n	8019f84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019eee:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019ef2:	4560      	cmp	r0, ip
 8019ef4:	dd46      	ble.n	8019f84 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ef6:	b22d      	sxth	r5, r5
 8019ef8:	fb0c 7505 	mla	r5, ip, r5, r7
 8019efc:	9802      	ldr	r0, [sp, #8]
 8019efe:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019f02:	f06f 0501 	mvn.w	r5, #1
 8019f06:	fb05 fb08 	mul.w	fp, r5, r8
 8019f0a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019f0e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019f12:	122f      	asrs	r7, r5, #8
 8019f14:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019f18:	fb17 f706 	smulbb	r7, r7, r6
 8019f1c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019f20:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019f24:	00ed      	lsls	r5, r5, #3
 8019f26:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019f2a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019f2e:	10c7      	asrs	r7, r0, #3
 8019f30:	b2ed      	uxtb	r5, r5
 8019f32:	00c0      	lsls	r0, r0, #3
 8019f34:	fb19 f906 	smulbb	r9, r9, r6
 8019f38:	fb15 f506 	smulbb	r5, r5, r6
 8019f3c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019f40:	b2c0      	uxtb	r0, r0
 8019f42:	fa1f fc8c 	uxth.w	ip, ip
 8019f46:	fb07 970a 	mla	r7, r7, sl, r9
 8019f4a:	fb00 500a 	mla	r0, r0, sl, r5
 8019f4e:	b2bf      	uxth	r7, r7
 8019f50:	b280      	uxth	r0, r0
 8019f52:	f10c 0501 	add.w	r5, ip, #1
 8019f56:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019f5a:	f107 0901 	add.w	r9, r7, #1
 8019f5e:	1c45      	adds	r5, r0, #1
 8019f60:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019f64:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019f68:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f6c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f70:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019f74:	ea45 0c0c 	orr.w	ip, r5, ip
 8019f78:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019f7c:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f80:	f824 c00b 	strh.w	ip, [r4, fp]
 8019f84:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f86:	4401      	add	r1, r0
 8019f88:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019f8a:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f8e:	4402      	add	r2, r0
 8019f90:	e75e      	b.n	8019e50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019f92:	b005      	add	sp, #20
 8019f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f9c:	b085      	sub	sp, #20
 8019f9e:	4693      	mov	fp, r2
 8019fa0:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019fa2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019fa4:	6870      	ldr	r0, [r6, #4]
 8019fa6:	9101      	str	r1, [sp, #4]
 8019fa8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019fac:	fb00 2404 	mla	r4, r0, r4, r2
 8019fb0:	6832      	ldr	r2, [r6, #0]
 8019fb2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019fb6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019fba:	682a      	ldr	r2, [r5, #0]
 8019fbc:	9202      	str	r2, [sp, #8]
 8019fbe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019fc2:	9a01      	ldr	r2, [sp, #4]
 8019fc4:	2a00      	cmp	r2, #0
 8019fc6:	dc03      	bgt.n	8019fd0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019fc8:	f1bb 0f00 	cmp.w	fp, #0
 8019fcc:	f340 809a 	ble.w	801a104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019fd0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fd2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019fd6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019fda:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019fde:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fe0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fe4:	2b00      	cmp	r3, #0
 8019fe6:	dd0c      	ble.n	801a002 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019fe8:	1406      	asrs	r6, r0, #16
 8019fea:	d405      	bmi.n	8019ff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fec:	454e      	cmp	r6, r9
 8019fee:	da03      	bge.n	8019ff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ff0:	1416      	asrs	r6, r2, #16
 8019ff2:	d401      	bmi.n	8019ff8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019ff4:	4546      	cmp	r6, r8
 8019ff6:	db05      	blt.n	801a004 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019ff8:	4470      	add	r0, lr
 8019ffa:	4462      	add	r2, ip
 8019ffc:	3b01      	subs	r3, #1
 8019ffe:	3402      	adds	r4, #2
 801a000:	e7f0      	b.n	8019fe4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a002:	d00f      	beq.n	801a024 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a004:	1e5e      	subs	r6, r3, #1
 801a006:	fb0e 0706 	mla	r7, lr, r6, r0
 801a00a:	143f      	asrs	r7, r7, #16
 801a00c:	d541      	bpl.n	801a092 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a00e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a012:	4698      	mov	r8, r3
 801a014:	9603      	str	r6, [sp, #12]
 801a016:	f1b8 0f00 	cmp.w	r8, #0
 801a01a:	dc56      	bgt.n	801a0ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a01c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a020:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a024:	9b01      	ldr	r3, [sp, #4]
 801a026:	2b00      	cmp	r3, #0
 801a028:	dd6c      	ble.n	801a104 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a02a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a02e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a032:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a038:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a03c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a040:	eeb0 6a62 	vmov.f32	s12, s5
 801a044:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a048:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a04c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a050:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a054:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a058:	eeb0 6a43 	vmov.f32	s12, s6
 801a05c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a060:	ee12 2a90 	vmov	r2, s5
 801a064:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a068:	fb92 fef3 	sdiv	lr, r2, r3
 801a06c:	ee13 2a10 	vmov	r2, s6
 801a070:	fb92 fcf3 	sdiv	ip, r2, r3
 801a074:	9b01      	ldr	r3, [sp, #4]
 801a076:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a07a:	3b01      	subs	r3, #1
 801a07c:	9301      	str	r3, [sp, #4]
 801a07e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a082:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a084:	eeb0 3a67 	vmov.f32	s6, s15
 801a088:	bf08      	it	eq
 801a08a:	465b      	moveq	r3, fp
 801a08c:	eef0 2a47 	vmov.f32	s5, s14
 801a090:	e797      	b.n	8019fc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a092:	454f      	cmp	r7, r9
 801a094:	dabb      	bge.n	801a00e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a096:	fb0c 2606 	mla	r6, ip, r6, r2
 801a09a:	1436      	asrs	r6, r6, #16
 801a09c:	d4b7      	bmi.n	801a00e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a09e:	4546      	cmp	r6, r8
 801a0a0:	dab5      	bge.n	801a00e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a0a2:	461e      	mov	r6, r3
 801a0a4:	46a0      	mov	r8, r4
 801a0a6:	2e00      	cmp	r6, #0
 801a0a8:	ddb8      	ble.n	801a01c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a0aa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a0ae:	9902      	ldr	r1, [sp, #8]
 801a0b0:	1417      	asrs	r7, r2, #16
 801a0b2:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a0b6:	fb0a 9707 	mla	r7, sl, r7, r9
 801a0ba:	4470      	add	r0, lr
 801a0bc:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a0c0:	f828 7b02 	strh.w	r7, [r8], #2
 801a0c4:	4462      	add	r2, ip
 801a0c6:	3e01      	subs	r6, #1
 801a0c8:	e7ed      	b.n	801a0a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a0ca:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a0ce:	d414      	bmi.n	801a0fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a0d0:	68ae      	ldr	r6, [r5, #8]
 801a0d2:	454e      	cmp	r6, r9
 801a0d4:	dd11      	ble.n	801a0fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a0d6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a0da:	d40e      	bmi.n	801a0fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a0dc:	68ef      	ldr	r7, [r5, #12]
 801a0de:	4557      	cmp	r7, sl
 801a0e0:	dd0b      	ble.n	801a0fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a0e2:	b236      	sxth	r6, r6
 801a0e4:	fb0a 9606 	mla	r6, sl, r6, r9
 801a0e8:	9f02      	ldr	r7, [sp, #8]
 801a0ea:	f06f 0101 	mvn.w	r1, #1
 801a0ee:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a0f2:	fb01 f608 	mul.w	r6, r1, r8
 801a0f6:	9903      	ldr	r1, [sp, #12]
 801a0f8:	538f      	strh	r7, [r1, r6]
 801a0fa:	4470      	add	r0, lr
 801a0fc:	4462      	add	r2, ip
 801a0fe:	f108 38ff 	add.w	r8, r8, #4294967295
 801a102:	e788      	b.n	801a016 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a104:	b005      	add	sp, #20
 801a106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a10a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a10a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a10e:	b087      	sub	sp, #28
 801a110:	468b      	mov	fp, r1
 801a112:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a114:	9203      	str	r2, [sp, #12]
 801a116:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a11a:	9204      	str	r2, [sp, #16]
 801a11c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a120:	6841      	ldr	r1, [r0, #4]
 801a122:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a126:	fb01 2505 	mla	r5, r1, r5, r2
 801a12a:	6802      	ldr	r2, [r0, #0]
 801a12c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a130:	f8d9 2000 	ldr.w	r2, [r9]
 801a134:	9201      	str	r2, [sp, #4]
 801a136:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a13a:	f1bb 0f00 	cmp.w	fp, #0
 801a13e:	dc03      	bgt.n	801a148 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a140:	9a03      	ldr	r2, [sp, #12]
 801a142:	2a00      	cmp	r2, #0
 801a144:	f340 8159 	ble.w	801a3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a148:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a14a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a14e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a152:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a156:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a158:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a15c:	2b00      	cmp	r3, #0
 801a15e:	dd0e      	ble.n	801a17e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a160:	1402      	asrs	r2, r0, #16
 801a162:	d405      	bmi.n	801a170 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a164:	42ba      	cmp	r2, r7
 801a166:	da03      	bge.n	801a170 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a168:	140a      	asrs	r2, r1, #16
 801a16a:	d401      	bmi.n	801a170 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a16c:	42b2      	cmp	r2, r6
 801a16e:	db07      	blt.n	801a180 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a170:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a172:	4410      	add	r0, r2
 801a174:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a176:	3b01      	subs	r3, #1
 801a178:	4411      	add	r1, r2
 801a17a:	3502      	adds	r5, #2
 801a17c:	e7ee      	b.n	801a15c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a17e:	d017      	beq.n	801a1b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a180:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a182:	1e5a      	subs	r2, r3, #1
 801a184:	fb04 0402 	mla	r4, r4, r2, r0
 801a188:	1424      	asrs	r4, r4, #16
 801a18a:	d409      	bmi.n	801a1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a18c:	42bc      	cmp	r4, r7
 801a18e:	da07      	bge.n	801a1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a190:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a192:	fb04 1202 	mla	r2, r4, r2, r1
 801a196:	1412      	asrs	r2, r2, #16
 801a198:	d402      	bmi.n	801a1a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a19a:	42b2      	cmp	r2, r6
 801a19c:	f2c0 80bf 	blt.w	801a31e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a1a0:	2700      	movs	r7, #0
 801a1a2:	19da      	adds	r2, r3, r7
 801a1a4:	2a00      	cmp	r2, #0
 801a1a6:	dc3e      	bgt.n	801a226 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a1a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a1ac:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a1b0:	f1bb 0f00 	cmp.w	fp, #0
 801a1b4:	f340 8121 	ble.w	801a3fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a1b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1c6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a1ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1d2:	eeb0 6a62 	vmov.f32	s12, s5
 801a1d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1e2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a1e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1ea:	eeb0 6a43 	vmov.f32	s12, s6
 801a1ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1f2:	ee12 2a90 	vmov	r2, s5
 801a1f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1fe:	ee13 2a10 	vmov	r2, s6
 801a202:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a206:	9313      	str	r3, [sp, #76]	; 0x4c
 801a208:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a20a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a20e:	9a03      	ldr	r2, [sp, #12]
 801a210:	9314      	str	r3, [sp, #80]	; 0x50
 801a212:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a216:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a218:	eeb0 3a67 	vmov.f32	s6, s15
 801a21c:	bf08      	it	eq
 801a21e:	4613      	moveq	r3, r2
 801a220:	eef0 2a47 	vmov.f32	s5, s14
 801a224:	e789      	b.n	801a13a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a226:	1406      	asrs	r6, r0, #16
 801a228:	d42d      	bmi.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a22a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a22e:	42b4      	cmp	r4, r6
 801a230:	dd29      	ble.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a232:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a236:	d426      	bmi.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a238:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a23c:	4562      	cmp	r2, ip
 801a23e:	dd22      	ble.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a240:	b224      	sxth	r4, r4
 801a242:	9a01      	ldr	r2, [sp, #4]
 801a244:	fb0c 6404 	mla	r4, ip, r4, r6
 801a248:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a24c:	0e22      	lsrs	r2, r4, #24
 801a24e:	d01a      	beq.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a250:	9e04      	ldr	r6, [sp, #16]
 801a252:	4372      	muls	r2, r6
 801a254:	1c56      	adds	r6, r2, #1
 801a256:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a25a:	1212      	asrs	r2, r2, #8
 801a25c:	0a26      	lsrs	r6, r4, #8
 801a25e:	2aff      	cmp	r2, #255	; 0xff
 801a260:	9605      	str	r6, [sp, #20]
 801a262:	d116      	bne.n	801a292 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a264:	f06f 0201 	mvn.w	r2, #1
 801a268:	fb02 fc07 	mul.w	ip, r2, r7
 801a26c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a270:	0962      	lsrs	r2, r4, #5
 801a272:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a276:	f026 0607 	bic.w	r6, r6, #7
 801a27a:	4316      	orrs	r6, r2
 801a27c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a280:	4326      	orrs	r6, r4
 801a282:	f825 600c 	strh.w	r6, [r5, ip]
 801a286:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a288:	4410      	add	r0, r2
 801a28a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a28c:	3f01      	subs	r7, #1
 801a28e:	4411      	add	r1, r2
 801a290:	e787      	b.n	801a1a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a292:	f06f 0601 	mvn.w	r6, #1
 801a296:	437e      	muls	r6, r7
 801a298:	fa1f fa82 	uxth.w	sl, r2
 801a29c:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a2a0:	9602      	str	r6, [sp, #8]
 801a2a2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a2a6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a2aa:	43d2      	mvns	r2, r2
 801a2ac:	b2d2      	uxtb	r2, r2
 801a2ae:	fb1c fc0a 	smulbb	ip, ip, sl
 801a2b2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a2b6:	fb0e ce02 	mla	lr, lr, r2, ip
 801a2ba:	b2e4      	uxtb	r4, r4
 801a2bc:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a2c0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a2c4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a2c8:	fa5f f888 	uxtb.w	r8, r8
 801a2cc:	fb14 f40a 	smulbb	r4, r4, sl
 801a2d0:	fb08 4402 	mla	r4, r8, r2, r4
 801a2d4:	fa1f fe8e 	uxth.w	lr, lr
 801a2d8:	fb16 f60a 	smulbb	r6, r6, sl
 801a2dc:	b2a4      	uxth	r4, r4
 801a2de:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a2e2:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a2e6:	f10e 0201 	add.w	r2, lr, #1
 801a2ea:	1c66      	adds	r6, r4, #1
 801a2ec:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a2f0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a2f4:	fa1f fc8c 	uxth.w	ip, ip
 801a2f8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a2fc:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a300:	ea46 0e0e 	orr.w	lr, r6, lr
 801a304:	f10c 0601 	add.w	r6, ip, #1
 801a308:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a30c:	0976      	lsrs	r6, r6, #5
 801a30e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a312:	9a02      	ldr	r2, [sp, #8]
 801a314:	ea4e 0e06 	orr.w	lr, lr, r6
 801a318:	f825 e002 	strh.w	lr, [r5, r2]
 801a31c:	e7b3      	b.n	801a286 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a31e:	f04f 0800 	mov.w	r8, #0
 801a322:	eba3 0208 	sub.w	r2, r3, r8
 801a326:	2a00      	cmp	r2, #0
 801a328:	f77f af3e 	ble.w	801a1a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a32c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a330:	1404      	asrs	r4, r0, #16
 801a332:	140a      	asrs	r2, r1, #16
 801a334:	fb06 4202 	mla	r2, r6, r2, r4
 801a338:	9c01      	ldr	r4, [sp, #4]
 801a33a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a33e:	0e22      	lsrs	r2, r4, #24
 801a340:	d016      	beq.n	801a370 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a342:	9e04      	ldr	r6, [sp, #16]
 801a344:	4372      	muls	r2, r6
 801a346:	1c56      	adds	r6, r2, #1
 801a348:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a34c:	1212      	asrs	r2, r2, #8
 801a34e:	2aff      	cmp	r2, #255	; 0xff
 801a350:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a354:	d113      	bne.n	801a37e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a356:	0962      	lsrs	r2, r4, #5
 801a358:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a35c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a360:	f026 0607 	bic.w	r6, r6, #7
 801a364:	4316      	orrs	r6, r2
 801a366:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a36a:	4326      	orrs	r6, r4
 801a36c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a370:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a372:	4410      	add	r0, r2
 801a374:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a376:	f108 0801 	add.w	r8, r8, #1
 801a37a:	4411      	add	r1, r2
 801a37c:	e7d1      	b.n	801a322 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a37e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a382:	fa1f fa82 	uxth.w	sl, r2
 801a386:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a38a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a38e:	43d2      	mvns	r2, r2
 801a390:	b2d2      	uxtb	r2, r2
 801a392:	fb17 f70a 	smulbb	r7, r7, sl
 801a396:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a39a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a39e:	b2e4      	uxtb	r4, r4
 801a3a0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a3a4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a3a8:	fa5f fe8e 	uxtb.w	lr, lr
 801a3ac:	fb14 f40a 	smulbb	r4, r4, sl
 801a3b0:	fb0e 4402 	mla	r4, lr, r2, r4
 801a3b4:	b2f6      	uxtb	r6, r6
 801a3b6:	fa1f fc8c 	uxth.w	ip, ip
 801a3ba:	fb16 f60a 	smulbb	r6, r6, sl
 801a3be:	b2a4      	uxth	r4, r4
 801a3c0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a3c4:	fb07 6702 	mla	r7, r7, r2, r6
 801a3c8:	f10c 0201 	add.w	r2, ip, #1
 801a3cc:	1c66      	adds	r6, r4, #1
 801a3ce:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a3d2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a3d6:	b2bf      	uxth	r7, r7
 801a3d8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a3dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a3e0:	ea46 0c0c 	orr.w	ip, r6, ip
 801a3e4:	1c7e      	adds	r6, r7, #1
 801a3e6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a3ea:	0976      	lsrs	r6, r6, #5
 801a3ec:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a3f0:	ea4c 0c06 	orr.w	ip, ip, r6
 801a3f4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a3f8:	e7ba      	b.n	801a370 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a3fa:	b007      	add	sp, #28
 801a3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a400 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a400:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a404:	b085      	sub	sp, #20
 801a406:	468b      	mov	fp, r1
 801a408:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a40a:	9203      	str	r2, [sp, #12]
 801a40c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a410:	6841      	ldr	r1, [r0, #4]
 801a412:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a416:	fb01 2404 	mla	r4, r1, r4, r2
 801a41a:	6802      	ldr	r2, [r0, #0]
 801a41c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a420:	f8d8 2000 	ldr.w	r2, [r8]
 801a424:	9201      	str	r2, [sp, #4]
 801a426:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a42a:	f1bb 0f00 	cmp.w	fp, #0
 801a42e:	dc03      	bgt.n	801a438 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a430:	9a03      	ldr	r2, [sp, #12]
 801a432:	2a00      	cmp	r2, #0
 801a434:	f340 814f 	ble.w	801a6d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a438:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a43a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a43e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a442:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a446:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a448:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a44c:	2b00      	cmp	r3, #0
 801a44e:	dd0e      	ble.n	801a46e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a450:	1408      	asrs	r0, r1, #16
 801a452:	d405      	bmi.n	801a460 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a454:	42b8      	cmp	r0, r7
 801a456:	da03      	bge.n	801a460 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a458:	1410      	asrs	r0, r2, #16
 801a45a:	d401      	bmi.n	801a460 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a45c:	42b0      	cmp	r0, r6
 801a45e:	db07      	blt.n	801a470 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a460:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a462:	4401      	add	r1, r0
 801a464:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a466:	3b01      	subs	r3, #1
 801a468:	4402      	add	r2, r0
 801a46a:	3402      	adds	r4, #2
 801a46c:	e7ee      	b.n	801a44c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a46e:	d017      	beq.n	801a4a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a470:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a472:	1e58      	subs	r0, r3, #1
 801a474:	fb05 1500 	mla	r5, r5, r0, r1
 801a478:	142d      	asrs	r5, r5, #16
 801a47a:	d409      	bmi.n	801a490 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a47c:	42bd      	cmp	r5, r7
 801a47e:	da07      	bge.n	801a490 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a480:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a482:	fb05 2000 	mla	r0, r5, r0, r2
 801a486:	1400      	asrs	r0, r0, #16
 801a488:	d402      	bmi.n	801a490 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a48a:	42b0      	cmp	r0, r6
 801a48c:	f2c0 80ba 	blt.w	801a604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a490:	2600      	movs	r6, #0
 801a492:	1998      	adds	r0, r3, r6
 801a494:	2800      	cmp	r0, #0
 801a496:	dc3e      	bgt.n	801a516 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a498:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a49c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a4a0:	f1bb 0f00 	cmp.w	fp, #0
 801a4a4:	f340 8117 	ble.w	801a6d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a4a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a4ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a4b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a4b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4b6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a4ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a4be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a4c2:	eeb0 6a62 	vmov.f32	s12, s5
 801a4c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a4ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a4d2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a4d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a4da:	eeb0 6a43 	vmov.f32	s12, s6
 801a4de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a4e2:	ee12 2a90 	vmov	r2, s5
 801a4e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4ee:	ee13 2a10 	vmov	r2, s6
 801a4f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4f6:	9311      	str	r3, [sp, #68]	; 0x44
 801a4f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4fe:	9a03      	ldr	r2, [sp, #12]
 801a500:	9312      	str	r3, [sp, #72]	; 0x48
 801a502:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a506:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a508:	eeb0 3a67 	vmov.f32	s6, s15
 801a50c:	bf08      	it	eq
 801a50e:	4613      	moveq	r3, r2
 801a510:	eef0 2a47 	vmov.f32	s5, s14
 801a514:	e789      	b.n	801a42a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a516:	140f      	asrs	r7, r1, #16
 801a518:	d424      	bmi.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a51a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a51e:	42bd      	cmp	r5, r7
 801a520:	dd20      	ble.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a522:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a526:	d41d      	bmi.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a528:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a52c:	4560      	cmp	r0, ip
 801a52e:	dd19      	ble.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a530:	b22d      	sxth	r5, r5
 801a532:	fb0c 7505 	mla	r5, ip, r5, r7
 801a536:	9801      	ldr	r0, [sp, #4]
 801a538:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a53c:	0e07      	lsrs	r7, r0, #24
 801a53e:	2fff      	cmp	r7, #255	; 0xff
 801a540:	d116      	bne.n	801a570 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a542:	f06f 0501 	mvn.w	r5, #1
 801a546:	fb05 f706 	mul.w	r7, r5, r6
 801a54a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a54e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a552:	0945      	lsrs	r5, r0, #5
 801a554:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a558:	ea4c 0505 	orr.w	r5, ip, r5
 801a55c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a560:	4305      	orrs	r5, r0
 801a562:	53e5      	strh	r5, [r4, r7]
 801a564:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a566:	4401      	add	r1, r0
 801a568:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a56a:	3e01      	subs	r6, #1
 801a56c:	4402      	add	r2, r0
 801a56e:	e790      	b.n	801a492 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a570:	b2fd      	uxtb	r5, r7
 801a572:	2f00      	cmp	r7, #0
 801a574:	d0f6      	beq.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a576:	f06f 0701 	mvn.w	r7, #1
 801a57a:	4377      	muls	r7, r6
 801a57c:	fa1f f985 	uxth.w	r9, r5
 801a580:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a584:	9702      	str	r7, [sp, #8]
 801a586:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a58a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a58e:	43ed      	mvns	r5, r5
 801a590:	b2ed      	uxtb	r5, r5
 801a592:	fb17 f709 	smulbb	r7, r7, r9
 801a596:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a59a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a59e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a5a2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a5a6:	b2c0      	uxtb	r0, r0
 801a5a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a5ac:	fa5f fe8e 	uxtb.w	lr, lr
 801a5b0:	fb10 f009 	smulbb	r0, r0, r9
 801a5b4:	fb0e 0005 	mla	r0, lr, r5, r0
 801a5b8:	b280      	uxth	r0, r0
 801a5ba:	fa1f fc8c 	uxth.w	ip, ip
 801a5be:	fb1a fa09 	smulbb	sl, sl, r9
 801a5c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a5c6:	fb07 a705 	mla	r7, r7, r5, sl
 801a5ca:	f100 0a01 	add.w	sl, r0, #1
 801a5ce:	f10c 0501 	add.w	r5, ip, #1
 801a5d2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a5d6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a5da:	b2bf      	uxth	r7, r7
 801a5dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a5e0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a5e4:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a5e8:	f107 0a01 	add.w	sl, r7, #1
 801a5ec:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a5f0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5f4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5f8:	9802      	ldr	r0, [sp, #8]
 801a5fa:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a5fe:	f824 c000 	strh.w	ip, [r4, r0]
 801a602:	e7af      	b.n	801a564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a604:	f04f 0e00 	mov.w	lr, #0
 801a608:	eba3 000e 	sub.w	r0, r3, lr
 801a60c:	2800      	cmp	r0, #0
 801a60e:	f77f af43 	ble.w	801a498 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a612:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a616:	140d      	asrs	r5, r1, #16
 801a618:	1410      	asrs	r0, r2, #16
 801a61a:	fb06 5000 	mla	r0, r6, r0, r5
 801a61e:	9d01      	ldr	r5, [sp, #4]
 801a620:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a624:	0e2e      	lsrs	r6, r5, #24
 801a626:	2eff      	cmp	r6, #255	; 0xff
 801a628:	d112      	bne.n	801a650 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a62a:	482c      	ldr	r0, [pc, #176]	; (801a6dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a62c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a630:	0968      	lsrs	r0, r5, #5
 801a632:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a636:	4330      	orrs	r0, r6
 801a638:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a63c:	4328      	orrs	r0, r5
 801a63e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a642:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a644:	4401      	add	r1, r0
 801a646:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a648:	f10e 0e01 	add.w	lr, lr, #1
 801a64c:	4402      	add	r2, r0
 801a64e:	e7db      	b.n	801a608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a650:	b2f0      	uxtb	r0, r6
 801a652:	2e00      	cmp	r6, #0
 801a654:	d0f5      	beq.n	801a642 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a656:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a65a:	fa1f f980 	uxth.w	r9, r0
 801a65e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a662:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a666:	43c0      	mvns	r0, r0
 801a668:	b2c0      	uxtb	r0, r0
 801a66a:	fb16 f609 	smulbb	r6, r6, r9
 801a66e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a672:	fb07 6700 	mla	r7, r7, r0, r6
 801a676:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a67a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a67e:	b2ed      	uxtb	r5, r5
 801a680:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a684:	fa5f fc8c 	uxtb.w	ip, ip
 801a688:	fb15 f509 	smulbb	r5, r5, r9
 801a68c:	fb0c 5500 	mla	r5, ip, r0, r5
 801a690:	b2bf      	uxth	r7, r7
 801a692:	fb1a fa09 	smulbb	sl, sl, r9
 801a696:	b2ad      	uxth	r5, r5
 801a698:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a69c:	fb06 a600 	mla	r6, r6, r0, sl
 801a6a0:	1c78      	adds	r0, r7, #1
 801a6a2:	f105 0a01 	add.w	sl, r5, #1
 801a6a6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a6aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a6ae:	b2b6      	uxth	r6, r6
 801a6b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6b4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a6b8:	ea4a 0707 	orr.w	r7, sl, r7
 801a6bc:	f106 0a01 	add.w	sl, r6, #1
 801a6c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a6c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6c8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a6cc:	ea47 070a 	orr.w	r7, r7, sl
 801a6d0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a6d4:	e7b5      	b.n	801a642 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a6d6:	b005      	add	sp, #20
 801a6d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6dc:	fffff800 	.word	0xfffff800

0801a6e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6e4:	b087      	sub	sp, #28
 801a6e6:	468b      	mov	fp, r1
 801a6e8:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a6ea:	9203      	str	r2, [sp, #12]
 801a6ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a6f0:	9204      	str	r2, [sp, #16]
 801a6f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a6f6:	6841      	ldr	r1, [r0, #4]
 801a6f8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a6fc:	fb01 2404 	mla	r4, r1, r4, r2
 801a700:	6802      	ldr	r2, [r0, #0]
 801a702:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a706:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a70a:	3201      	adds	r2, #1
 801a70c:	f022 0201 	bic.w	r2, r2, #1
 801a710:	9200      	str	r2, [sp, #0]
 801a712:	f8d9 2000 	ldr.w	r2, [r9]
 801a716:	9201      	str	r2, [sp, #4]
 801a718:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a71c:	f1bb 0f00 	cmp.w	fp, #0
 801a720:	dc03      	bgt.n	801a72a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a722:	9a03      	ldr	r2, [sp, #12]
 801a724:	2a00      	cmp	r2, #0
 801a726:	f340 8169 	ble.w	801a9fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a72a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a72c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a730:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a734:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a738:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a73a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a73e:	2b00      	cmp	r3, #0
 801a740:	dd0e      	ble.n	801a760 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a742:	1402      	asrs	r2, r0, #16
 801a744:	d405      	bmi.n	801a752 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a746:	42ba      	cmp	r2, r7
 801a748:	da03      	bge.n	801a752 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a74a:	140a      	asrs	r2, r1, #16
 801a74c:	d401      	bmi.n	801a752 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a74e:	42b2      	cmp	r2, r6
 801a750:	db07      	blt.n	801a762 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a752:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a754:	4410      	add	r0, r2
 801a756:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a758:	3b01      	subs	r3, #1
 801a75a:	4411      	add	r1, r2
 801a75c:	3402      	adds	r4, #2
 801a75e:	e7ee      	b.n	801a73e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a760:	d017      	beq.n	801a792 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a762:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a764:	1e5a      	subs	r2, r3, #1
 801a766:	fb05 0502 	mla	r5, r5, r2, r0
 801a76a:	142d      	asrs	r5, r5, #16
 801a76c:	d409      	bmi.n	801a782 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a76e:	42bd      	cmp	r5, r7
 801a770:	da07      	bge.n	801a782 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a772:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a774:	fb05 1202 	mla	r2, r5, r2, r1
 801a778:	1412      	asrs	r2, r2, #16
 801a77a:	d402      	bmi.n	801a782 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a77c:	42b2      	cmp	r2, r6
 801a77e:	f2c0 80c7 	blt.w	801a910 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a782:	2700      	movs	r7, #0
 801a784:	19da      	adds	r2, r3, r7
 801a786:	2a00      	cmp	r2, #0
 801a788:	dc3e      	bgt.n	801a808 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a78a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a78e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a792:	f1bb 0f00 	cmp.w	fp, #0
 801a796:	f340 8131 	ble.w	801a9fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a79a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a79e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7a2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a7a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7a8:	f1bb 0b01 	subs.w	fp, fp, #1
 801a7ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7b4:	eeb0 6a62 	vmov.f32	s12, s5
 801a7b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a7c4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a7c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a7cc:	eeb0 6a43 	vmov.f32	s12, s6
 801a7d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a7d4:	ee12 2a90 	vmov	r2, s5
 801a7d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a7dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7e0:	ee13 2a10 	vmov	r2, s6
 801a7e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7e8:	9313      	str	r3, [sp, #76]	; 0x4c
 801a7ea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7ec:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7f0:	9a03      	ldr	r2, [sp, #12]
 801a7f2:	9314      	str	r3, [sp, #80]	; 0x50
 801a7f4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a7f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7fa:	eeb0 3a67 	vmov.f32	s6, s15
 801a7fe:	bf08      	it	eq
 801a800:	4613      	moveq	r3, r2
 801a802:	eef0 2a47 	vmov.f32	s5, s14
 801a806:	e789      	b.n	801a71c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a808:	1405      	asrs	r5, r0, #16
 801a80a:	d435      	bmi.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a80c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a810:	42aa      	cmp	r2, r5
 801a812:	dd31      	ble.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a814:	140e      	asrs	r6, r1, #16
 801a816:	d42f      	bmi.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a818:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a81c:	42b2      	cmp	r2, r6
 801a81e:	dd2b      	ble.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a820:	9a00      	ldr	r2, [sp, #0]
 801a822:	fb06 5502 	mla	r5, r6, r2, r5
 801a826:	086a      	lsrs	r2, r5, #1
 801a828:	9e01      	ldr	r6, [sp, #4]
 801a82a:	5cb2      	ldrb	r2, [r6, r2]
 801a82c:	07ee      	lsls	r6, r5, #31
 801a82e:	bf54      	ite	pl
 801a830:	f002 020f 	andpl.w	r2, r2, #15
 801a834:	1112      	asrmi	r2, r2, #4
 801a836:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a83a:	b2d2      	uxtb	r2, r2
 801a83c:	b1e2      	cbz	r2, 801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a83e:	9d04      	ldr	r5, [sp, #16]
 801a840:	436a      	muls	r2, r5
 801a842:	1c55      	adds	r5, r2, #1
 801a844:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a848:	4d6e      	ldr	r5, [pc, #440]	; (801aa04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a84a:	682d      	ldr	r5, [r5, #0]
 801a84c:	1212      	asrs	r2, r2, #8
 801a84e:	0a2e      	lsrs	r6, r5, #8
 801a850:	2aff      	cmp	r2, #255	; 0xff
 801a852:	9605      	str	r6, [sp, #20]
 801a854:	d116      	bne.n	801a884 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a856:	f06f 0201 	mvn.w	r2, #1
 801a85a:	fb02 fc07 	mul.w	ip, r2, r7
 801a85e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a862:	096a      	lsrs	r2, r5, #5
 801a864:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a868:	f026 0607 	bic.w	r6, r6, #7
 801a86c:	4316      	orrs	r6, r2
 801a86e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a872:	432e      	orrs	r6, r5
 801a874:	f824 600c 	strh.w	r6, [r4, ip]
 801a878:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a87a:	4410      	add	r0, r2
 801a87c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a87e:	3f01      	subs	r7, #1
 801a880:	4411      	add	r1, r2
 801a882:	e77f      	b.n	801a784 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a884:	f06f 0601 	mvn.w	r6, #1
 801a888:	437e      	muls	r6, r7
 801a88a:	fa1f fa82 	uxth.w	sl, r2
 801a88e:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a892:	9602      	str	r6, [sp, #8]
 801a894:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a898:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a89c:	43d2      	mvns	r2, r2
 801a89e:	b2d2      	uxtb	r2, r2
 801a8a0:	fb1c fc0a 	smulbb	ip, ip, sl
 801a8a4:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a8a8:	fb0e ce02 	mla	lr, lr, r2, ip
 801a8ac:	b2ed      	uxtb	r5, r5
 801a8ae:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a8b2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a8b6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a8ba:	fa5f f888 	uxtb.w	r8, r8
 801a8be:	fb15 f50a 	smulbb	r5, r5, sl
 801a8c2:	fb08 5502 	mla	r5, r8, r2, r5
 801a8c6:	fa1f fe8e 	uxth.w	lr, lr
 801a8ca:	fb16 f60a 	smulbb	r6, r6, sl
 801a8ce:	b2ad      	uxth	r5, r5
 801a8d0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a8d4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a8d8:	f10e 0201 	add.w	r2, lr, #1
 801a8dc:	1c6e      	adds	r6, r5, #1
 801a8de:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a8e2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a8e6:	fa1f fc8c 	uxth.w	ip, ip
 801a8ea:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a8ee:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a8f2:	ea46 0e0e 	orr.w	lr, r6, lr
 801a8f6:	f10c 0601 	add.w	r6, ip, #1
 801a8fa:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a8fe:	0976      	lsrs	r6, r6, #5
 801a900:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a904:	9a02      	ldr	r2, [sp, #8]
 801a906:	ea4e 0e06 	orr.w	lr, lr, r6
 801a90a:	f824 e002 	strh.w	lr, [r4, r2]
 801a90e:	e7b3      	b.n	801a878 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a910:	f04f 0800 	mov.w	r8, #0
 801a914:	eba3 0208 	sub.w	r2, r3, r8
 801a918:	2a00      	cmp	r2, #0
 801a91a:	f77f af36 	ble.w	801a78a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a91e:	9e00      	ldr	r6, [sp, #0]
 801a920:	1402      	asrs	r2, r0, #16
 801a922:	140d      	asrs	r5, r1, #16
 801a924:	fb06 2505 	mla	r5, r6, r5, r2
 801a928:	086a      	lsrs	r2, r5, #1
 801a92a:	9e01      	ldr	r6, [sp, #4]
 801a92c:	5cb2      	ldrb	r2, [r6, r2]
 801a92e:	07ed      	lsls	r5, r5, #31
 801a930:	bf54      	ite	pl
 801a932:	f002 020f 	andpl.w	r2, r2, #15
 801a936:	1112      	asrmi	r2, r2, #4
 801a938:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a93c:	b2d2      	uxtb	r2, r2
 801a93e:	b1c2      	cbz	r2, 801a972 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a940:	9d04      	ldr	r5, [sp, #16]
 801a942:	436a      	muls	r2, r5
 801a944:	1c55      	adds	r5, r2, #1
 801a946:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a94a:	4d2e      	ldr	r5, [pc, #184]	; (801aa04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a94c:	1212      	asrs	r2, r2, #8
 801a94e:	682e      	ldr	r6, [r5, #0]
 801a950:	2aff      	cmp	r2, #255	; 0xff
 801a952:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a956:	d113      	bne.n	801a980 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a958:	0972      	lsrs	r2, r6, #5
 801a95a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a95e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a962:	f025 0507 	bic.w	r5, r5, #7
 801a966:	4315      	orrs	r5, r2
 801a968:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a96c:	4335      	orrs	r5, r6
 801a96e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a972:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a974:	4410      	add	r0, r2
 801a976:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a978:	f108 0801 	add.w	r8, r8, #1
 801a97c:	4411      	add	r1, r2
 801a97e:	e7c9      	b.n	801a914 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a980:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a984:	fa1f fa82 	uxth.w	sl, r2
 801a988:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a98c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a990:	43d2      	mvns	r2, r2
 801a992:	b2d2      	uxtb	r2, r2
 801a994:	fb17 f70a 	smulbb	r7, r7, sl
 801a998:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a99c:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a9a0:	b2f6      	uxtb	r6, r6
 801a9a2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a9a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a9aa:	fa5f fe8e 	uxtb.w	lr, lr
 801a9ae:	fb16 f60a 	smulbb	r6, r6, sl
 801a9b2:	fb0e 6602 	mla	r6, lr, r2, r6
 801a9b6:	b2ed      	uxtb	r5, r5
 801a9b8:	fa1f fc8c 	uxth.w	ip, ip
 801a9bc:	fb15 f50a 	smulbb	r5, r5, sl
 801a9c0:	b2b6      	uxth	r6, r6
 801a9c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a9c6:	fb07 5702 	mla	r7, r7, r2, r5
 801a9ca:	f10c 0201 	add.w	r2, ip, #1
 801a9ce:	1c75      	adds	r5, r6, #1
 801a9d0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a9d4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a9d8:	b2bf      	uxth	r7, r7
 801a9da:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a9de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a9e2:	ea45 0c0c 	orr.w	ip, r5, ip
 801a9e6:	1c7d      	adds	r5, r7, #1
 801a9e8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a9ec:	096d      	lsrs	r5, r5, #5
 801a9ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a9f2:	ea4c 0c05 	orr.w	ip, ip, r5
 801a9f6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a9fa:	e7ba      	b.n	801a972 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a9fc:	b007      	add	sp, #28
 801a9fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa02:	bf00      	nop
 801aa04:	20012dc4 	.word	0x20012dc4

0801aa08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa0c:	b087      	sub	sp, #28
 801aa0e:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801ad1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801aa12:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aa14:	9205      	str	r2, [sp, #20]
 801aa16:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801aa1a:	9101      	str	r1, [sp, #4]
 801aa1c:	6841      	ldr	r1, [r0, #4]
 801aa1e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801aa22:	fb01 2404 	mla	r4, r1, r4, r2
 801aa26:	6802      	ldr	r2, [r0, #0]
 801aa28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa2c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801aa30:	3201      	adds	r2, #1
 801aa32:	f022 0201 	bic.w	r2, r2, #1
 801aa36:	9202      	str	r2, [sp, #8]
 801aa38:	f8db 2000 	ldr.w	r2, [fp]
 801aa3c:	9203      	str	r2, [sp, #12]
 801aa3e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801aa42:	9a01      	ldr	r2, [sp, #4]
 801aa44:	2a00      	cmp	r2, #0
 801aa46:	dc03      	bgt.n	801aa50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa48:	9a05      	ldr	r2, [sp, #20]
 801aa4a:	2a00      	cmp	r2, #0
 801aa4c:	f340 8162 	ble.w	801ad14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aa50:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa52:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801aa56:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801aa5a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aa5e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa60:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa64:	2b00      	cmp	r3, #0
 801aa66:	dd0e      	ble.n	801aa86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aa68:	1402      	asrs	r2, r0, #16
 801aa6a:	d405      	bmi.n	801aa78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa6c:	42ba      	cmp	r2, r7
 801aa6e:	da03      	bge.n	801aa78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa70:	140a      	asrs	r2, r1, #16
 801aa72:	d401      	bmi.n	801aa78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa74:	42b2      	cmp	r2, r6
 801aa76:	db07      	blt.n	801aa88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa78:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa7a:	4410      	add	r0, r2
 801aa7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa7e:	3b01      	subs	r3, #1
 801aa80:	4411      	add	r1, r2
 801aa82:	3402      	adds	r4, #2
 801aa84:	e7ee      	b.n	801aa64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801aa86:	d017      	beq.n	801aab8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801aa88:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa8a:	1e5a      	subs	r2, r3, #1
 801aa8c:	fb05 0502 	mla	r5, r5, r2, r0
 801aa90:	142d      	asrs	r5, r5, #16
 801aa92:	d409      	bmi.n	801aaa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa94:	42bd      	cmp	r5, r7
 801aa96:	da07      	bge.n	801aaa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa98:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa9a:	fb05 1202 	mla	r2, r5, r2, r1
 801aa9e:	1412      	asrs	r2, r2, #16
 801aaa0:	d402      	bmi.n	801aaa8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aaa2:	42b2      	cmp	r2, r6
 801aaa4:	f2c0 80c3 	blt.w	801ac2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801aaa8:	2500      	movs	r5, #0
 801aaaa:	195a      	adds	r2, r3, r5
 801aaac:	2a00      	cmp	r2, #0
 801aaae:	dc3f      	bgt.n	801ab30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801aab0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aab4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aab8:	9b01      	ldr	r3, [sp, #4]
 801aaba:	2b00      	cmp	r3, #0
 801aabc:	f340 812a 	ble.w	801ad14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aac0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aac4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aac8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aacc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aace:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aad2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aad6:	eeb0 6a62 	vmov.f32	s12, s5
 801aada:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aade:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aae2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aae6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aaea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aaee:	eeb0 6a43 	vmov.f32	s12, s6
 801aaf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aaf6:	ee12 2a90 	vmov	r2, s5
 801aafa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aafe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab02:	ee13 2a10 	vmov	r2, s6
 801ab06:	9313      	str	r3, [sp, #76]	; 0x4c
 801ab08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ab0e:	9314      	str	r3, [sp, #80]	; 0x50
 801ab10:	9b01      	ldr	r3, [sp, #4]
 801ab12:	9a05      	ldr	r2, [sp, #20]
 801ab14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab18:	3b01      	subs	r3, #1
 801ab1a:	9301      	str	r3, [sp, #4]
 801ab1c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ab20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ab22:	eeb0 3a67 	vmov.f32	s6, s15
 801ab26:	bf08      	it	eq
 801ab28:	4613      	moveq	r3, r2
 801ab2a:	eef0 2a47 	vmov.f32	s5, s14
 801ab2e:	e788      	b.n	801aa42 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ab30:	1406      	asrs	r6, r0, #16
 801ab32:	d42c      	bmi.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab34:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ab38:	42b2      	cmp	r2, r6
 801ab3a:	dd28      	ble.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab3c:	140f      	asrs	r7, r1, #16
 801ab3e:	d426      	bmi.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab40:	f8db 200c 	ldr.w	r2, [fp, #12]
 801ab44:	42ba      	cmp	r2, r7
 801ab46:	dd22      	ble.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab48:	9a02      	ldr	r2, [sp, #8]
 801ab4a:	fb07 6602 	mla	r6, r7, r2, r6
 801ab4e:	0872      	lsrs	r2, r6, #1
 801ab50:	9f03      	ldr	r7, [sp, #12]
 801ab52:	5cba      	ldrb	r2, [r7, r2]
 801ab54:	07f6      	lsls	r6, r6, #31
 801ab56:	bf54      	ite	pl
 801ab58:	f002 020f 	andpl.w	r2, r2, #15
 801ab5c:	1112      	asrmi	r2, r2, #4
 801ab5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab62:	b2d2      	uxtb	r2, r2
 801ab64:	2aff      	cmp	r2, #255	; 0xff
 801ab66:	d118      	bne.n	801ab9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ab68:	f8d8 2000 	ldr.w	r2, [r8]
 801ab6c:	f06f 0601 	mvn.w	r6, #1
 801ab70:	fb06 f705 	mul.w	r7, r6, r5
 801ab74:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ab78:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ab7c:	0956      	lsrs	r6, r2, #5
 801ab7e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab82:	ea4c 0606 	orr.w	r6, ip, r6
 801ab86:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab8a:	4316      	orrs	r6, r2
 801ab8c:	53e6      	strh	r6, [r4, r7]
 801ab8e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab90:	4410      	add	r0, r2
 801ab92:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab94:	3d01      	subs	r5, #1
 801ab96:	4411      	add	r1, r2
 801ab98:	e787      	b.n	801aaaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ab9a:	2a00      	cmp	r2, #0
 801ab9c:	d0f7      	beq.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab9e:	f06f 0601 	mvn.w	r6, #1
 801aba2:	436e      	muls	r6, r5
 801aba4:	f8d8 c000 	ldr.w	ip, [r8]
 801aba8:	f834 e006 	ldrh.w	lr, [r4, r6]
 801abac:	9604      	str	r6, [sp, #16]
 801abae:	fa1f f982 	uxth.w	r9, r2
 801abb2:	ea4f 272e 	mov.w	r7, lr, asr #8
 801abb6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801abba:	43d2      	mvns	r2, r2
 801abbc:	b2d2      	uxtb	r2, r2
 801abbe:	fb16 f609 	smulbb	r6, r6, r9
 801abc2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801abc6:	fb07 6702 	mla	r7, r7, r2, r6
 801abca:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801abce:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801abd2:	fa5f fc8c 	uxtb.w	ip, ip
 801abd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801abda:	fa5f fe8e 	uxtb.w	lr, lr
 801abde:	fb1c fc09 	smulbb	ip, ip, r9
 801abe2:	fb0e cc02 	mla	ip, lr, r2, ip
 801abe6:	b2bf      	uxth	r7, r7
 801abe8:	fb1a fa09 	smulbb	sl, sl, r9
 801abec:	fa1f fc8c 	uxth.w	ip, ip
 801abf0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801abf4:	fb06 a602 	mla	r6, r6, r2, sl
 801abf8:	1c7a      	adds	r2, r7, #1
 801abfa:	f10c 0a01 	add.w	sl, ip, #1
 801abfe:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ac02:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ac06:	b2b6      	uxth	r6, r6
 801ac08:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ac0c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ac10:	ea4a 0707 	orr.w	r7, sl, r7
 801ac14:	f106 0a01 	add.w	sl, r6, #1
 801ac18:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ac1c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ac20:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ac24:	9a04      	ldr	r2, [sp, #16]
 801ac26:	ea47 070a 	orr.w	r7, r7, sl
 801ac2a:	52a7      	strh	r7, [r4, r2]
 801ac2c:	e7af      	b.n	801ab8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ac2e:	f04f 0e00 	mov.w	lr, #0
 801ac32:	eba3 020e 	sub.w	r2, r3, lr
 801ac36:	2a00      	cmp	r2, #0
 801ac38:	f77f af3a 	ble.w	801aab0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801ac3c:	9e02      	ldr	r6, [sp, #8]
 801ac3e:	1402      	asrs	r2, r0, #16
 801ac40:	140d      	asrs	r5, r1, #16
 801ac42:	fb06 2505 	mla	r5, r6, r5, r2
 801ac46:	086a      	lsrs	r2, r5, #1
 801ac48:	9e03      	ldr	r6, [sp, #12]
 801ac4a:	5cb2      	ldrb	r2, [r6, r2]
 801ac4c:	07ed      	lsls	r5, r5, #31
 801ac4e:	bf54      	ite	pl
 801ac50:	f002 020f 	andpl.w	r2, r2, #15
 801ac54:	1112      	asrmi	r2, r2, #4
 801ac56:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac5a:	b2d2      	uxtb	r2, r2
 801ac5c:	2aff      	cmp	r2, #255	; 0xff
 801ac5e:	d115      	bne.n	801ac8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ac60:	f8d8 5000 	ldr.w	r5, [r8]
 801ac64:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ac68:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ac6c:	096a      	lsrs	r2, r5, #5
 801ac6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac72:	4332      	orrs	r2, r6
 801ac74:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ac78:	432a      	orrs	r2, r5
 801ac7a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ac7e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac80:	4410      	add	r0, r2
 801ac82:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac84:	f10e 0e01 	add.w	lr, lr, #1
 801ac88:	4411      	add	r1, r2
 801ac8a:	e7d2      	b.n	801ac32 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ac8c:	2a00      	cmp	r2, #0
 801ac8e:	d0f6      	beq.n	801ac7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ac90:	f8d8 7000 	ldr.w	r7, [r8]
 801ac94:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ac98:	fa1f f982 	uxth.w	r9, r2
 801ac9c:	ea4f 262c 	mov.w	r6, ip, asr #8
 801aca0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801aca4:	43d2      	mvns	r2, r2
 801aca6:	b2d2      	uxtb	r2, r2
 801aca8:	fb15 f509 	smulbb	r5, r5, r9
 801acac:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801acb0:	fb06 5602 	mla	r6, r6, r2, r5
 801acb4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801acb8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801acbc:	b2ff      	uxtb	r7, r7
 801acbe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801acc2:	fa5f fc8c 	uxtb.w	ip, ip
 801acc6:	fb17 f709 	smulbb	r7, r7, r9
 801acca:	fb0c 7702 	mla	r7, ip, r2, r7
 801acce:	b2b6      	uxth	r6, r6
 801acd0:	fb1a fa09 	smulbb	sl, sl, r9
 801acd4:	b2bf      	uxth	r7, r7
 801acd6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801acda:	fb05 a502 	mla	r5, r5, r2, sl
 801acde:	1c72      	adds	r2, r6, #1
 801ace0:	f107 0a01 	add.w	sl, r7, #1
 801ace4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ace8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801acec:	b2ad      	uxth	r5, r5
 801acee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acf2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801acf6:	ea4a 0606 	orr.w	r6, sl, r6
 801acfa:	f105 0a01 	add.w	sl, r5, #1
 801acfe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801ad02:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad06:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad0a:	ea46 060a 	orr.w	r6, r6, sl
 801ad0e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801ad12:	e7b4      	b.n	801ac7e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ad14:	b007      	add	sp, #28
 801ad16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad1a:	bf00      	nop
 801ad1c:	20012dc4 	.word	0x20012dc4

0801ad20 <_ZN8touchgfx8LCD16bppD1Ev>:
 801ad20:	4770      	bx	lr

0801ad22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801ad22:	4770      	bx	lr

0801ad24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801ad24:	4770      	bx	lr

0801ad26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801ad26:	4770      	bx	lr

0801ad28 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ad28:	4770      	bx	lr

0801ad2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ad2a:	4770      	bx	lr

0801ad2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ad2c:	4770      	bx	lr

0801ad2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ad2e:	4770      	bx	lr

0801ad30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ad30:	4770      	bx	lr

0801ad32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ad32:	4770      	bx	lr

0801ad34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ad34:	4770      	bx	lr

0801ad36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ad36:	4770      	bx	lr

0801ad38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ad38:	4770      	bx	lr

0801ad3a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ad3a:	4770      	bx	lr

0801ad3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ad3c:	4770      	bx	lr

0801ad3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ad3e:	4770      	bx	lr

0801ad40 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ad40:	4770      	bx	lr

0801ad42 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ad42:	4770      	bx	lr

0801ad44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ad44:	4770      	bx	lr

0801ad46 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ad46:	4770      	bx	lr

0801ad48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ad48:	4770      	bx	lr

0801ad4a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ad4a:	4770      	bx	lr

0801ad4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ad4c:	4770      	bx	lr

0801ad4e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ad4e:	4770      	bx	lr

0801ad50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ad50:	4770      	bx	lr

0801ad52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ad52:	4770      	bx	lr

0801ad54 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ad54:	4770      	bx	lr

0801ad56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ad56:	4770      	bx	lr

0801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ad58:	4770      	bx	lr

0801ad5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ad5a:	4770      	bx	lr

0801ad5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ad5c:	4770      	bx	lr

0801ad5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ad5e:	4770      	bx	lr

0801ad60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ad60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ad64:	b088      	sub	sp, #32
 801ad66:	ac08      	add	r4, sp, #32
 801ad68:	4606      	mov	r6, r0
 801ad6a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ad6e:	4620      	mov	r0, r4
 801ad70:	4688      	mov	r8, r1
 801ad72:	4691      	mov	r9, r2
 801ad74:	f7fd fc62 	bl	801863c <_ZNK8touchgfx6Bitmap7getDataEv>
 801ad78:	6833      	ldr	r3, [r6, #0]
 801ad7a:	4605      	mov	r5, r0
 801ad7c:	4620      	mov	r0, r4
 801ad7e:	699f      	ldr	r7, [r3, #24]
 801ad80:	f7fd fb70 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ad84:	4682      	mov	sl, r0
 801ad86:	4620      	mov	r0, r4
 801ad88:	f7fd fba0 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ad8c:	9500      	str	r5, [sp, #0]
 801ad8e:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ad92:	464b      	mov	r3, r9
 801ad94:	a806      	add	r0, sp, #24
 801ad96:	4642      	mov	r2, r8
 801ad98:	4631      	mov	r1, r6
 801ad9a:	47b8      	blx	r7
 801ad9c:	4628      	mov	r0, r5
 801ad9e:	b008      	add	sp, #32
 801ada0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ada4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ada4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ada8:	2300      	movs	r3, #0
 801adaa:	9300      	str	r3, [sp, #0]
 801adac:	4b3d      	ldr	r3, [pc, #244]	; (801aea4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801adae:	781b      	ldrb	r3, [r3, #0]
 801adb0:	2b00      	cmp	r3, #0
 801adb2:	d137      	bne.n	801ae24 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801adb4:	4a3c      	ldr	r2, [pc, #240]	; (801aea8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801adb6:	f9b2 2000 	ldrsh.w	r2, [r2]
 801adba:	f8ad 2004 	strh.w	r2, [sp, #4]
 801adbe:	2b00      	cmp	r3, #0
 801adc0:	d132      	bne.n	801ae28 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801adc2:	4b3a      	ldr	r3, [pc, #232]	; (801aeac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801adc4:	f9b3 3000 	ldrsh.w	r3, [r3]
 801adc8:	6808      	ldr	r0, [r1, #0]
 801adca:	6849      	ldr	r1, [r1, #4]
 801adcc:	f8ad 3006 	strh.w	r3, [sp, #6]
 801add0:	ac02      	add	r4, sp, #8
 801add2:	ab02      	add	r3, sp, #8
 801add4:	c303      	stmia	r3!, {r0, r1}
 801add6:	4669      	mov	r1, sp
 801add8:	4620      	mov	r0, r4
 801adda:	f7f9 fdc1 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801adde:	4668      	mov	r0, sp
 801ade0:	f7f9 fd7a 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ade4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ade8:	f8bd 2000 	ldrh.w	r2, [sp]
 801adec:	4d30      	ldr	r5, [pc, #192]	; (801aeb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801adee:	4413      	add	r3, r2
 801adf0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801adf4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801adf8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801adfc:	6828      	ldr	r0, [r5, #0]
 801adfe:	4413      	add	r3, r2
 801ae00:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ae04:	6803      	ldr	r3, [r0, #0]
 801ae06:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ae08:	4798      	blx	r3
 801ae0a:	f010 0f01 	tst.w	r0, #1
 801ae0e:	462f      	mov	r7, r5
 801ae10:	d00c      	beq.n	801ae2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801ae12:	6828      	ldr	r0, [r5, #0]
 801ae14:	6803      	ldr	r3, [r0, #0]
 801ae16:	e894 0006 	ldmia.w	r4, {r1, r2}
 801ae1a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801ae1c:	4798      	blx	r3
 801ae1e:	b004      	add	sp, #16
 801ae20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ae24:	4a21      	ldr	r2, [pc, #132]	; (801aeac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ae26:	e7c6      	b.n	801adb6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ae28:	4b1f      	ldr	r3, [pc, #124]	; (801aea8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ae2a:	e7cb      	b.n	801adc4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ae2c:	6838      	ldr	r0, [r7, #0]
 801ae2e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801ae32:	6803      	ldr	r3, [r0, #0]
 801ae34:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801ae38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ae3a:	4798      	blx	r3
 801ae3c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801ae40:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ae44:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ae48:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ae4c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ae50:	6838      	ldr	r0, [r7, #0]
 801ae52:	6803      	ldr	r3, [r0, #0]
 801ae54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ae56:	4798      	blx	r3
 801ae58:	4a13      	ldr	r2, [pc, #76]	; (801aea8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ae5a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ae5e:	8813      	ldrh	r3, [r2, #0]
 801ae60:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ae64:	fb03 1404 	mla	r4, r3, r4, r1
 801ae68:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ae6c:	435d      	muls	r5, r3
 801ae6e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ae72:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ae76:	4691      	mov	r9, r2
 801ae78:	6838      	ldr	r0, [r7, #0]
 801ae7a:	42ac      	cmp	r4, r5
 801ae7c:	6803      	ldr	r3, [r0, #0]
 801ae7e:	d20e      	bcs.n	801ae9e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ae80:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ae84:	4632      	mov	r2, r6
 801ae86:	4643      	mov	r3, r8
 801ae88:	4621      	mov	r1, r4
 801ae8a:	47d0      	blx	sl
 801ae8c:	f8b9 3000 	ldrh.w	r3, [r9]
 801ae90:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae94:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ae98:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ae9c:	e7ec      	b.n	801ae78 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ae9e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aea0:	4798      	blx	r3
 801aea2:	e7bc      	b.n	801ae1e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801aea4:	20012dac 	.word	0x20012dac
 801aea8:	20012dae 	.word	0x20012dae
 801aeac:	20012db0 	.word	0x20012db0
 801aeb0:	20012db4 	.word	0x20012db4

0801aeb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801aeb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aeb8:	b08b      	sub	sp, #44	; 0x2c
 801aeba:	460f      	mov	r7, r1
 801aebc:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801aec0:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801aec4:	4616      	mov	r6, r2
 801aec6:	f1bb 0f00 	cmp.w	fp, #0
 801aeca:	d04a      	beq.n	801af62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801aecc:	6810      	ldr	r0, [r2, #0]
 801aece:	6851      	ldr	r1, [r2, #4]
 801aed0:	ad06      	add	r5, sp, #24
 801aed2:	c503      	stmia	r5!, {r0, r1}
 801aed4:	6818      	ldr	r0, [r3, #0]
 801aed6:	6859      	ldr	r1, [r3, #4]
 801aed8:	ad08      	add	r5, sp, #32
 801aeda:	c503      	stmia	r5!, {r0, r1}
 801aedc:	a806      	add	r0, sp, #24
 801aede:	f7f9 fcfb 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aee2:	4631      	mov	r1, r6
 801aee4:	a808      	add	r0, sp, #32
 801aee6:	f7f9 fd3b 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aeea:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801aeee:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801aef2:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801aef6:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801aefa:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801aefe:	fb16 2103 	smlabb	r1, r6, r3, r2
 801af02:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801af06:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801af0a:	4f5f      	ldr	r7, [pc, #380]	; (801b088 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801af0c:	440a      	add	r2, r1
 801af0e:	f8ad 2020 	strh.w	r2, [sp, #32]
 801af12:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801af16:	6838      	ldr	r0, [r7, #0]
 801af18:	4413      	add	r3, r2
 801af1a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801af1e:	6803      	ldr	r3, [r0, #0]
 801af20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801af22:	4798      	blx	r3
 801af24:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801af28:	46b9      	mov	r9, r7
 801af2a:	d11d      	bne.n	801af68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801af2c:	b9fc      	cbnz	r4, 801af6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801af2e:	f010 0f01 	tst.w	r0, #1
 801af32:	d01c      	beq.n	801af6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801af34:	f8d9 0000 	ldr.w	r0, [r9]
 801af38:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801af3c:	6801      	ldr	r1, [r0, #0]
 801af3e:	f8cd b00c 	str.w	fp, [sp, #12]
 801af42:	2700      	movs	r7, #0
 801af44:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801af48:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801af4c:	9402      	str	r4, [sp, #8]
 801af4e:	b2ad      	uxth	r5, r5
 801af50:	fa1f f488 	uxth.w	r4, r8
 801af54:	9501      	str	r5, [sp, #4]
 801af56:	9400      	str	r4, [sp, #0]
 801af58:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801af5a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801af5e:	4631      	mov	r1, r6
 801af60:	47a0      	blx	r4
 801af62:	b00b      	add	sp, #44	; 0x2c
 801af64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af68:	f010 0f04 	tst.w	r0, #4
 801af6c:	e7e1      	b.n	801af32 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801af6e:	f8d9 0000 	ldr.w	r0, [r9]
 801af72:	6803      	ldr	r3, [r0, #0]
 801af74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801af76:	4798      	blx	r3
 801af78:	4b44      	ldr	r3, [pc, #272]	; (801b08c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801af7a:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801af7e:	881a      	ldrh	r2, [r3, #0]
 801af80:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801af84:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801af88:	fb02 1404 	mla	r4, r2, r4, r1
 801af8c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801af90:	469a      	mov	sl, r3
 801af92:	fb05 f502 	mul.w	r5, r5, r2
 801af96:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801af9a:	d059      	beq.n	801b050 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801af9c:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801afa0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801afa4:	fa1f f28b 	uxth.w	r2, fp
 801afa8:	fa1f f989 	uxth.w	r9, r9
 801afac:	469e      	mov	lr, r3
 801afae:	42ac      	cmp	r4, r5
 801afb0:	d264      	bcs.n	801b07c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801afb2:	eb04 0a07 	add.w	sl, r4, r7
 801afb6:	4554      	cmp	r4, sl
 801afb8:	d23d      	bcs.n	801b036 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801afba:	8821      	ldrh	r1, [r4, #0]
 801afbc:	f836 3b02 	ldrh.w	r3, [r6], #2
 801afc0:	1208      	asrs	r0, r1, #8
 801afc2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801afc6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801afca:	fb10 f009 	smulbb	r0, r0, r9
 801afce:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801afd2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801afd6:	00c9      	lsls	r1, r1, #3
 801afd8:	fb0c 0c02 	mla	ip, ip, r2, r0
 801afdc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801afe0:	10d8      	asrs	r0, r3, #3
 801afe2:	b2c9      	uxtb	r1, r1
 801afe4:	00db      	lsls	r3, r3, #3
 801afe6:	fa1f fc8c 	uxth.w	ip, ip
 801afea:	fb1b fb09 	smulbb	fp, fp, r9
 801afee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801aff2:	b2db      	uxtb	r3, r3
 801aff4:	fb11 f109 	smulbb	r1, r1, r9
 801aff8:	fb00 b002 	mla	r0, r0, r2, fp
 801affc:	fb03 1302 	mla	r3, r3, r2, r1
 801b000:	f10c 0b01 	add.w	fp, ip, #1
 801b004:	b29b      	uxth	r3, r3
 801b006:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b00a:	b280      	uxth	r0, r0
 801b00c:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b010:	f103 0c01 	add.w	ip, r3, #1
 801b014:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b018:	1c43      	adds	r3, r0, #1
 801b01a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b01e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b022:	0940      	lsrs	r0, r0, #5
 801b024:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b028:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b02c:	ea4c 0c00 	orr.w	ip, ip, r0
 801b030:	f824 cb02 	strh.w	ip, [r4], #2
 801b034:	e7bf      	b.n	801afb6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b036:	f8be 3000 	ldrh.w	r3, [lr]
 801b03a:	eba3 0308 	sub.w	r3, r3, r8
 801b03e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b042:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b046:	eba3 0308 	sub.w	r3, r3, r8
 801b04a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b04e:	e7ae      	b.n	801afae <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b050:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b054:	f8d9 0000 	ldr.w	r0, [r9]
 801b058:	42ac      	cmp	r4, r5
 801b05a:	6803      	ldr	r3, [r0, #0]
 801b05c:	d20e      	bcs.n	801b07c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b05e:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b062:	4632      	mov	r2, r6
 801b064:	463b      	mov	r3, r7
 801b066:	4621      	mov	r1, r4
 801b068:	47c0      	blx	r8
 801b06a:	f8ba 3000 	ldrh.w	r3, [sl]
 801b06e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b072:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b076:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b07a:	e7eb      	b.n	801b054 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b07c:	4b02      	ldr	r3, [pc, #8]	; (801b088 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b07e:	6818      	ldr	r0, [r3, #0]
 801b080:	6803      	ldr	r3, [r0, #0]
 801b082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b084:	4798      	blx	r3
 801b086:	e76c      	b.n	801af62 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b088:	20012db4 	.word	0x20012db4
 801b08c:	20012dae 	.word	0x20012dae

0801b090 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b090:	b510      	push	{r4, lr}
 801b092:	2184      	movs	r1, #132	; 0x84
 801b094:	4604      	mov	r4, r0
 801b096:	f00d fe4a 	bl	8028d2e <_ZdlPvj>
 801b09a:	4620      	mov	r0, r4
 801b09c:	bd10      	pop	{r4, pc}

0801b09e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b09e:	b510      	push	{r4, lr}
 801b0a0:	2104      	movs	r1, #4
 801b0a2:	4604      	mov	r4, r0
 801b0a4:	f00d fe43 	bl	8028d2e <_ZdlPvj>
 801b0a8:	4620      	mov	r0, r4
 801b0aa:	bd10      	pop	{r4, pc}

0801b0ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b0ac:	b510      	push	{r4, lr}
 801b0ae:	2104      	movs	r1, #4
 801b0b0:	4604      	mov	r4, r0
 801b0b2:	f00d fe3c 	bl	8028d2e <_ZdlPvj>
 801b0b6:	4620      	mov	r0, r4
 801b0b8:	bd10      	pop	{r4, pc}

0801b0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b0ba:	b510      	push	{r4, lr}
 801b0bc:	f640 0144 	movw	r1, #2116	; 0x844
 801b0c0:	4604      	mov	r4, r0
 801b0c2:	f00d fe34 	bl	8028d2e <_ZdlPvj>
 801b0c6:	4620      	mov	r0, r4
 801b0c8:	bd10      	pop	{r4, pc}

0801b0ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b0ca:	b510      	push	{r4, lr}
 801b0cc:	2104      	movs	r1, #4
 801b0ce:	4604      	mov	r4, r0
 801b0d0:	f00d fe2d 	bl	8028d2e <_ZdlPvj>
 801b0d4:	4620      	mov	r0, r4
 801b0d6:	bd10      	pop	{r4, pc}

0801b0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b0d8:	b510      	push	{r4, lr}
 801b0da:	2104      	movs	r1, #4
 801b0dc:	4604      	mov	r4, r0
 801b0de:	f00d fe26 	bl	8028d2e <_ZdlPvj>
 801b0e2:	4620      	mov	r0, r4
 801b0e4:	bd10      	pop	{r4, pc}

0801b0e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b0e6:	b510      	push	{r4, lr}
 801b0e8:	2104      	movs	r1, #4
 801b0ea:	4604      	mov	r4, r0
 801b0ec:	f00d fe1f 	bl	8028d2e <_ZdlPvj>
 801b0f0:	4620      	mov	r0, r4
 801b0f2:	bd10      	pop	{r4, pc}

0801b0f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b0f4:	b510      	push	{r4, lr}
 801b0f6:	2104      	movs	r1, #4
 801b0f8:	4604      	mov	r4, r0
 801b0fa:	f00d fe18 	bl	8028d2e <_ZdlPvj>
 801b0fe:	4620      	mov	r0, r4
 801b100:	bd10      	pop	{r4, pc}

0801b102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b102:	b510      	push	{r4, lr}
 801b104:	2104      	movs	r1, #4
 801b106:	4604      	mov	r4, r0
 801b108:	f00d fe11 	bl	8028d2e <_ZdlPvj>
 801b10c:	4620      	mov	r0, r4
 801b10e:	bd10      	pop	{r4, pc}

0801b110 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b110:	b510      	push	{r4, lr}
 801b112:	2104      	movs	r1, #4
 801b114:	4604      	mov	r4, r0
 801b116:	f00d fe0a 	bl	8028d2e <_ZdlPvj>
 801b11a:	4620      	mov	r0, r4
 801b11c:	bd10      	pop	{r4, pc}

0801b11e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b11e:	b510      	push	{r4, lr}
 801b120:	2104      	movs	r1, #4
 801b122:	4604      	mov	r4, r0
 801b124:	f00d fe03 	bl	8028d2e <_ZdlPvj>
 801b128:	4620      	mov	r0, r4
 801b12a:	bd10      	pop	{r4, pc}

0801b12c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b12c:	b510      	push	{r4, lr}
 801b12e:	2104      	movs	r1, #4
 801b130:	4604      	mov	r4, r0
 801b132:	f00d fdfc 	bl	8028d2e <_ZdlPvj>
 801b136:	4620      	mov	r0, r4
 801b138:	bd10      	pop	{r4, pc}

0801b13a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b13a:	b510      	push	{r4, lr}
 801b13c:	2104      	movs	r1, #4
 801b13e:	4604      	mov	r4, r0
 801b140:	f00d fdf5 	bl	8028d2e <_ZdlPvj>
 801b144:	4620      	mov	r0, r4
 801b146:	bd10      	pop	{r4, pc}

0801b148 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b148:	b510      	push	{r4, lr}
 801b14a:	2104      	movs	r1, #4
 801b14c:	4604      	mov	r4, r0
 801b14e:	f00d fdee 	bl	8028d2e <_ZdlPvj>
 801b152:	4620      	mov	r0, r4
 801b154:	bd10      	pop	{r4, pc}

0801b156 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b156:	b510      	push	{r4, lr}
 801b158:	2104      	movs	r1, #4
 801b15a:	4604      	mov	r4, r0
 801b15c:	f00d fde7 	bl	8028d2e <_ZdlPvj>
 801b160:	4620      	mov	r0, r4
 801b162:	bd10      	pop	{r4, pc}

0801b164 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b164:	b510      	push	{r4, lr}
 801b166:	2104      	movs	r1, #4
 801b168:	4604      	mov	r4, r0
 801b16a:	f00d fde0 	bl	8028d2e <_ZdlPvj>
 801b16e:	4620      	mov	r0, r4
 801b170:	bd10      	pop	{r4, pc}

0801b172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b172:	b510      	push	{r4, lr}
 801b174:	2104      	movs	r1, #4
 801b176:	4604      	mov	r4, r0
 801b178:	f00d fdd9 	bl	8028d2e <_ZdlPvj>
 801b17c:	4620      	mov	r0, r4
 801b17e:	bd10      	pop	{r4, pc}

0801b180 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b180:	b510      	push	{r4, lr}
 801b182:	2104      	movs	r1, #4
 801b184:	4604      	mov	r4, r0
 801b186:	f00d fdd2 	bl	8028d2e <_ZdlPvj>
 801b18a:	4620      	mov	r0, r4
 801b18c:	bd10      	pop	{r4, pc}

0801b18e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b18e:	b510      	push	{r4, lr}
 801b190:	2104      	movs	r1, #4
 801b192:	4604      	mov	r4, r0
 801b194:	f00d fdcb 	bl	8028d2e <_ZdlPvj>
 801b198:	4620      	mov	r0, r4
 801b19a:	bd10      	pop	{r4, pc}

0801b19c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b19c:	b510      	push	{r4, lr}
 801b19e:	2104      	movs	r1, #4
 801b1a0:	4604      	mov	r4, r0
 801b1a2:	f00d fdc4 	bl	8028d2e <_ZdlPvj>
 801b1a6:	4620      	mov	r0, r4
 801b1a8:	bd10      	pop	{r4, pc}

0801b1aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b1aa:	b510      	push	{r4, lr}
 801b1ac:	2104      	movs	r1, #4
 801b1ae:	4604      	mov	r4, r0
 801b1b0:	f00d fdbd 	bl	8028d2e <_ZdlPvj>
 801b1b4:	4620      	mov	r0, r4
 801b1b6:	bd10      	pop	{r4, pc}

0801b1b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b1b8:	b510      	push	{r4, lr}
 801b1ba:	2104      	movs	r1, #4
 801b1bc:	4604      	mov	r4, r0
 801b1be:	f00d fdb6 	bl	8028d2e <_ZdlPvj>
 801b1c2:	4620      	mov	r0, r4
 801b1c4:	bd10      	pop	{r4, pc}

0801b1c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b1c6:	b510      	push	{r4, lr}
 801b1c8:	2104      	movs	r1, #4
 801b1ca:	4604      	mov	r4, r0
 801b1cc:	f00d fdaf 	bl	8028d2e <_ZdlPvj>
 801b1d0:	4620      	mov	r0, r4
 801b1d2:	bd10      	pop	{r4, pc}

0801b1d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b1d4:	b510      	push	{r4, lr}
 801b1d6:	2104      	movs	r1, #4
 801b1d8:	4604      	mov	r4, r0
 801b1da:	f00d fda8 	bl	8028d2e <_ZdlPvj>
 801b1de:	4620      	mov	r0, r4
 801b1e0:	bd10      	pop	{r4, pc}

0801b1e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b1e2:	b510      	push	{r4, lr}
 801b1e4:	2104      	movs	r1, #4
 801b1e6:	4604      	mov	r4, r0
 801b1e8:	f00d fda1 	bl	8028d2e <_ZdlPvj>
 801b1ec:	4620      	mov	r0, r4
 801b1ee:	bd10      	pop	{r4, pc}

0801b1f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b1f0:	b510      	push	{r4, lr}
 801b1f2:	2104      	movs	r1, #4
 801b1f4:	4604      	mov	r4, r0
 801b1f6:	f00d fd9a 	bl	8028d2e <_ZdlPvj>
 801b1fa:	4620      	mov	r0, r4
 801b1fc:	bd10      	pop	{r4, pc}

0801b1fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b1fe:	b510      	push	{r4, lr}
 801b200:	2104      	movs	r1, #4
 801b202:	4604      	mov	r4, r0
 801b204:	f00d fd93 	bl	8028d2e <_ZdlPvj>
 801b208:	4620      	mov	r0, r4
 801b20a:	bd10      	pop	{r4, pc}

0801b20c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b20c:	b510      	push	{r4, lr}
 801b20e:	2104      	movs	r1, #4
 801b210:	4604      	mov	r4, r0
 801b212:	f00d fd8c 	bl	8028d2e <_ZdlPvj>
 801b216:	4620      	mov	r0, r4
 801b218:	bd10      	pop	{r4, pc}

0801b21a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b21a:	b510      	push	{r4, lr}
 801b21c:	2104      	movs	r1, #4
 801b21e:	4604      	mov	r4, r0
 801b220:	f00d fd85 	bl	8028d2e <_ZdlPvj>
 801b224:	4620      	mov	r0, r4
 801b226:	bd10      	pop	{r4, pc}

0801b228 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b228:	b510      	push	{r4, lr}
 801b22a:	2104      	movs	r1, #4
 801b22c:	4604      	mov	r4, r0
 801b22e:	f00d fd7e 	bl	8028d2e <_ZdlPvj>
 801b232:	4620      	mov	r0, r4
 801b234:	bd10      	pop	{r4, pc}

0801b236 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b236:	b510      	push	{r4, lr}
 801b238:	2104      	movs	r1, #4
 801b23a:	4604      	mov	r4, r0
 801b23c:	f00d fd77 	bl	8028d2e <_ZdlPvj>
 801b240:	4620      	mov	r0, r4
 801b242:	bd10      	pop	{r4, pc}

0801b244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b244:	b510      	push	{r4, lr}
 801b246:	2104      	movs	r1, #4
 801b248:	4604      	mov	r4, r0
 801b24a:	f00d fd70 	bl	8028d2e <_ZdlPvj>
 801b24e:	4620      	mov	r0, r4
 801b250:	bd10      	pop	{r4, pc}
	...

0801b254 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b258:	b08f      	sub	sp, #60	; 0x3c
 801b25a:	461c      	mov	r4, r3
 801b25c:	9205      	str	r2, [sp, #20]
 801b25e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b262:	9100      	str	r1, [sp, #0]
 801b264:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b266:	9201      	str	r2, [sp, #4]
 801b268:	2a00      	cmp	r2, #0
 801b26a:	f000 8115 	beq.w	801b498 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b26e:	6820      	ldr	r0, [r4, #0]
 801b270:	6861      	ldr	r1, [r4, #4]
 801b272:	aa0a      	add	r2, sp, #40	; 0x28
 801b274:	c203      	stmia	r2!, {r0, r1}
 801b276:	6818      	ldr	r0, [r3, #0]
 801b278:	6859      	ldr	r1, [r3, #4]
 801b27a:	aa0c      	add	r2, sp, #48	; 0x30
 801b27c:	c203      	stmia	r2!, {r0, r1}
 801b27e:	a80a      	add	r0, sp, #40	; 0x28
 801b280:	f7f9 fb2a 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b284:	4621      	mov	r1, r4
 801b286:	a80c      	add	r0, sp, #48	; 0x30
 801b288:	f7f9 fb6a 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b28c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b290:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b294:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b298:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b29c:	bfde      	ittt	le
 801b29e:	b2b3      	uxthle	r3, r6
 801b2a0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b2a4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b2a8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b2ac:	bfc8      	it	gt
 801b2ae:	2301      	movgt	r3, #1
 801b2b0:	fb92 f1f3 	sdiv	r1, r2, r3
 801b2b4:	fa1f fc81 	uxth.w	ip, r1
 801b2b8:	fb0c 2413 	mls	r4, ip, r3, r2
 801b2bc:	fb14 f406 	smulbb	r4, r4, r6
 801b2c0:	441d      	add	r5, r3
 801b2c2:	4404      	add	r4, r0
 801b2c4:	4661      	mov	r1, ip
 801b2c6:	3d01      	subs	r5, #1
 801b2c8:	b2a4      	uxth	r4, r4
 801b2ca:	fb95 f5f3 	sdiv	r5, r5, r3
 801b2ce:	b131      	cbz	r1, 801b2de <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b2d0:	9b05      	ldr	r3, [sp, #20]
 801b2d2:	9900      	ldr	r1, [sp, #0]
 801b2d4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b2d8:	ba1b      	rev	r3, r3
 801b2da:	4419      	add	r1, r3
 801b2dc:	9100      	str	r1, [sp, #0]
 801b2de:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b2e2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b2e6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b2ea:	4418      	add	r0, r3
 801b2ec:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b2f0:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b2f4:	441a      	add	r2, r3
 801b2f6:	4b6a      	ldr	r3, [pc, #424]	; (801b4a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b2f8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b2fc:	6818      	ldr	r0, [r3, #0]
 801b2fe:	6803      	ldr	r3, [r0, #0]
 801b300:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b302:	4798      	blx	r3
 801b304:	4967      	ldr	r1, [pc, #412]	; (801b4a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b306:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b30a:	880b      	ldrh	r3, [r1, #0]
 801b30c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b310:	9109      	str	r1, [sp, #36]	; 0x24
 801b312:	fb03 c202 	mla	r2, r3, r2, ip
 801b316:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b31a:	4373      	muls	r3, r6
 801b31c:	b2ad      	uxth	r5, r5
 801b31e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b322:	00ad      	lsls	r5, r5, #2
 801b324:	9306      	str	r3, [sp, #24]
 801b326:	1d2b      	adds	r3, r5, #4
 801b328:	9307      	str	r3, [sp, #28]
 801b32a:	9b01      	ldr	r3, [sp, #4]
 801b32c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b330:	9103      	str	r1, [sp, #12]
 801b332:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b336:	2c00      	cmp	r4, #0
 801b338:	bf0c      	ite	eq
 801b33a:	46c6      	moveq	lr, r8
 801b33c:	f04f 0e00 	movne.w	lr, #0
 801b340:	2300      	movs	r3, #0
 801b342:	b292      	uxth	r2, r2
 801b344:	fa1f fe8e 	uxth.w	lr, lr
 801b348:	9302      	str	r3, [sp, #8]
 801b34a:	9204      	str	r2, [sp, #16]
 801b34c:	9a06      	ldr	r2, [sp, #24]
 801b34e:	4282      	cmp	r2, r0
 801b350:	f240 809d 	bls.w	801b48e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b354:	b963      	cbnz	r3, 801b370 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b356:	9b00      	ldr	r3, [sp, #0]
 801b358:	781a      	ldrb	r2, [r3, #0]
 801b35a:	0993      	lsrs	r3, r2, #6
 801b35c:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b360:	9202      	str	r2, [sp, #8]
 801b362:	1e5a      	subs	r2, r3, #1
 801b364:	2a02      	cmp	r2, #2
 801b366:	d815      	bhi.n	801b394 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b368:	9a00      	ldr	r2, [sp, #0]
 801b36a:	3201      	adds	r2, #1
 801b36c:	9200      	str	r2, [sp, #0]
 801b36e:	b29b      	uxth	r3, r3
 801b370:	b1b4      	cbz	r4, 801b3a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b372:	429c      	cmp	r4, r3
 801b374:	bf95      	itete	ls
 801b376:	1b1c      	subls	r4, r3, r4
 801b378:	1ae4      	subhi	r4, r4, r3
 801b37a:	fa1f fa84 	uxthls.w	sl, r4
 801b37e:	b2a4      	uxthhi	r4, r4
 801b380:	bf87      	ittee	hi
 801b382:	4671      	movhi	r1, lr
 801b384:	f04f 0a00 	movhi.w	sl, #0
 801b388:	fa1f f188 	uxthls.w	r1, r8
 801b38c:	2400      	movls	r4, #0
 801b38e:	4653      	mov	r3, sl
 801b390:	468e      	mov	lr, r1
 801b392:	e7db      	b.n	801b34c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b394:	9a00      	ldr	r2, [sp, #0]
 801b396:	9b00      	ldr	r3, [sp, #0]
 801b398:	3202      	adds	r2, #2
 801b39a:	785b      	ldrb	r3, [r3, #1]
 801b39c:	9200      	str	r2, [sp, #0]
 801b39e:	e7e7      	b.n	801b370 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b3a0:	2202      	movs	r2, #2
 801b3a2:	4615      	mov	r5, r2
 801b3a4:	9907      	ldr	r1, [sp, #28]
 801b3a6:	9a02      	ldr	r2, [sp, #8]
 801b3a8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b3ac:	9905      	ldr	r1, [sp, #20]
 801b3ae:	4573      	cmp	r3, lr
 801b3b0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b3b4:	9a01      	ldr	r2, [sp, #4]
 801b3b6:	bf2b      	itete	cs
 801b3b8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b3bc:	ebae 0103 	subcc.w	r1, lr, r3
 801b3c0:	46f1      	movcs	r9, lr
 801b3c2:	4699      	movcc	r9, r3
 801b3c4:	bf27      	ittee	cs
 801b3c6:	fa1f fa8a 	uxthcs.w	sl, sl
 801b3ca:	4621      	movcs	r1, r4
 801b3cc:	b289      	uxthcc	r1, r1
 801b3ce:	46a2      	movcc	sl, r4
 801b3d0:	2aff      	cmp	r2, #255	; 0xff
 801b3d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b3d6:	d105      	bne.n	801b3e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b3d8:	4481      	add	r9, r0
 801b3da:	4581      	cmp	r9, r0
 801b3dc:	d045      	beq.n	801b46a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b3de:	f820 cb02 	strh.w	ip, [r0], #2
 801b3e2:	e7fa      	b.n	801b3da <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b3e4:	9d03      	ldr	r5, [sp, #12]
 801b3e6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b3ea:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b3ee:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b3f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3f6:	436a      	muls	r2, r5
 801b3f8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b3fc:	fa5f fc8c 	uxtb.w	ip, ip
 801b400:	9208      	str	r2, [sp, #32]
 801b402:	fb0b fb05 	mul.w	fp, fp, r5
 801b406:	fb0c fc05 	mul.w	ip, ip, r5
 801b40a:	4481      	add	r9, r0
 801b40c:	4581      	cmp	r9, r0
 801b40e:	d02c      	beq.n	801b46a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b410:	8802      	ldrh	r2, [r0, #0]
 801b412:	9d04      	ldr	r5, [sp, #16]
 801b414:	9f04      	ldr	r7, [sp, #16]
 801b416:	1216      	asrs	r6, r2, #8
 801b418:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b41c:	fb16 f605 	smulbb	r6, r6, r5
 801b420:	9d08      	ldr	r5, [sp, #32]
 801b422:	442e      	add	r6, r5
 801b424:	10d5      	asrs	r5, r2, #3
 801b426:	00d2      	lsls	r2, r2, #3
 801b428:	b2d2      	uxtb	r2, r2
 801b42a:	fb12 f207 	smulbb	r2, r2, r7
 801b42e:	b2b6      	uxth	r6, r6
 801b430:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b434:	4462      	add	r2, ip
 801b436:	fb15 f507 	smulbb	r5, r5, r7
 801b43a:	b292      	uxth	r2, r2
 801b43c:	1c77      	adds	r7, r6, #1
 801b43e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b442:	1c57      	adds	r7, r2, #1
 801b444:	445d      	add	r5, fp
 801b446:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b44a:	b2ad      	uxth	r5, r5
 801b44c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b450:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b454:	4316      	orrs	r6, r2
 801b456:	1c6a      	adds	r2, r5, #1
 801b458:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b45c:	096d      	lsrs	r5, r5, #5
 801b45e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b462:	432e      	orrs	r6, r5
 801b464:	f820 6b02 	strh.w	r6, [r0], #2
 801b468:	e7d0      	b.n	801b40c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b46a:	4573      	cmp	r3, lr
 801b46c:	d38f      	bcc.n	801b38e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b46e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b472:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b474:	fa1f f188 	uxth.w	r1, r8
 801b478:	1a64      	subs	r4, r4, r1
 801b47a:	881b      	ldrh	r3, [r3, #0]
 801b47c:	b2a4      	uxth	r4, r4
 801b47e:	2c00      	cmp	r4, #0
 801b480:	eba3 0308 	sub.w	r3, r3, r8
 801b484:	bf18      	it	ne
 801b486:	2100      	movne	r1, #0
 801b488:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b48c:	e77f      	b.n	801b38e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b48e:	4b04      	ldr	r3, [pc, #16]	; (801b4a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b490:	6818      	ldr	r0, [r3, #0]
 801b492:	6803      	ldr	r3, [r0, #0]
 801b494:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b496:	4798      	blx	r3
 801b498:	b00f      	add	sp, #60	; 0x3c
 801b49a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b49e:	bf00      	nop
 801b4a0:	20012db4 	.word	0x20012db4
 801b4a4:	20012dae 	.word	0x20012dae

0801b4a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b4a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4ac:	b09f      	sub	sp, #124	; 0x7c
 801b4ae:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b4b2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b4b6:	9209      	str	r2, [sp, #36]	; 0x24
 801b4b8:	461d      	mov	r5, r3
 801b4ba:	4604      	mov	r4, r0
 801b4bc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b4be:	2a00      	cmp	r2, #0
 801b4c0:	f000 81eb 	beq.w	801b89a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b4c4:	6828      	ldr	r0, [r5, #0]
 801b4c6:	6869      	ldr	r1, [r5, #4]
 801b4c8:	aa1a      	add	r2, sp, #104	; 0x68
 801b4ca:	c203      	stmia	r2!, {r0, r1}
 801b4cc:	6818      	ldr	r0, [r3, #0]
 801b4ce:	6859      	ldr	r1, [r3, #4]
 801b4d0:	aa1c      	add	r2, sp, #112	; 0x70
 801b4d2:	c203      	stmia	r2!, {r0, r1}
 801b4d4:	a81a      	add	r0, sp, #104	; 0x68
 801b4d6:	f7f9 f9ff 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4da:	4629      	mov	r1, r5
 801b4dc:	a81c      	add	r0, sp, #112	; 0x70
 801b4de:	f7f9 fa3f 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4e2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b4e6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b4ea:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b4ee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b4f2:	bfd7      	itett	le
 801b4f4:	b29a      	uxthle	r2, r3
 801b4f6:	2201      	movgt	r2, #1
 801b4f8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b4fc:	fb91 f2f2 	sdivle	r2, r1, r2
 801b500:	9202      	str	r2, [sp, #8]
 801b502:	9802      	ldr	r0, [sp, #8]
 801b504:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b508:	fb92 f0f0 	sdiv	r0, r2, r0
 801b50c:	b280      	uxth	r0, r0
 801b50e:	9010      	str	r0, [sp, #64]	; 0x40
 801b510:	9902      	ldr	r1, [sp, #8]
 801b512:	9802      	ldr	r0, [sp, #8]
 801b514:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b516:	4488      	add	r8, r1
 801b518:	fb05 2510 	mls	r5, r5, r0, r2
 801b51c:	fb15 f503 	smulbb	r5, r5, r3
 801b520:	f108 38ff 	add.w	r8, r8, #4294967295
 801b524:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b528:	fb98 f8f1 	sdiv	r8, r8, r1
 801b52c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b530:	440d      	add	r5, r1
 801b532:	4419      	add	r1, r3
 801b534:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b538:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b53c:	441a      	add	r2, r3
 801b53e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b542:	9304      	str	r3, [sp, #16]
 801b544:	4b95      	ldr	r3, [pc, #596]	; (801b79c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b546:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b54a:	6818      	ldr	r0, [r3, #0]
 801b54c:	6803      	ldr	r3, [r0, #0]
 801b54e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b550:	4798      	blx	r3
 801b552:	4b93      	ldr	r3, [pc, #588]	; (801b7a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b554:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b558:	881a      	ldrh	r2, [r3, #0]
 801b55a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b55e:	9318      	str	r3, [sp, #96]	; 0x60
 801b560:	fb02 7101 	mla	r1, r2, r1, r7
 801b564:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b568:	4356      	muls	r6, r2
 801b56a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b56e:	f108 0801 	add.w	r8, r8, #1
 801b572:	920a      	str	r2, [sp, #40]	; 0x28
 801b574:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b576:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b57a:	930f      	str	r3, [sp, #60]	; 0x3c
 801b57c:	fa1f f888 	uxth.w	r8, r8
 801b580:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b584:	f108 0204 	add.w	r2, r8, #4
 801b588:	9211      	str	r2, [sp, #68]	; 0x44
 801b58a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b58c:	4b85      	ldr	r3, [pc, #532]	; (801b7a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b58e:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b592:	b2ad      	uxth	r5, r5
 801b594:	9215      	str	r2, [sp, #84]	; 0x54
 801b596:	2d00      	cmp	r5, #0
 801b598:	9a04      	ldr	r2, [sp, #16]
 801b59a:	f04f 0100 	mov.w	r1, #0
 801b59e:	bf18      	it	ne
 801b5a0:	2200      	movne	r2, #0
 801b5a2:	1b1b      	subs	r3, r3, r4
 801b5a4:	b292      	uxth	r2, r2
 801b5a6:	910d      	str	r1, [sp, #52]	; 0x34
 801b5a8:	9319      	str	r3, [sp, #100]	; 0x64
 801b5aa:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b5ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b5ae:	fa11 f383 	uxtah	r3, r1, r3
 801b5b2:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b5b4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b5b8:	3304      	adds	r3, #4
 801b5ba:	9306      	str	r3, [sp, #24]
 801b5bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b5be:	4283      	cmp	r3, r0
 801b5c0:	f240 8166 	bls.w	801b890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b5c4:	9902      	ldr	r1, [sp, #8]
 801b5c6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b5ca:	fbb5 f3f3 	udiv	r3, r5, r3
 801b5ce:	1acb      	subs	r3, r1, r3
 801b5d0:	b29b      	uxth	r3, r3
 801b5d2:	9316      	str	r3, [sp, #88]	; 0x58
 801b5d4:	9b06      	ldr	r3, [sp, #24]
 801b5d6:	9e06      	ldr	r6, [sp, #24]
 801b5d8:	7859      	ldrb	r1, [r3, #1]
 801b5da:	789b      	ldrb	r3, [r3, #2]
 801b5dc:	7836      	ldrb	r6, [r6, #0]
 801b5de:	9612      	str	r6, [sp, #72]	; 0x48
 801b5e0:	021b      	lsls	r3, r3, #8
 801b5e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b5e6:	9906      	ldr	r1, [sp, #24]
 801b5e8:	78c9      	ldrb	r1, [r1, #3]
 801b5ea:	430b      	orrs	r3, r1
 801b5ec:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b5ee:	3601      	adds	r6, #1
 801b5f0:	4419      	add	r1, r3
 801b5f2:	9605      	str	r6, [sp, #20]
 801b5f4:	1c4e      	adds	r6, r1, #1
 801b5f6:	9603      	str	r6, [sp, #12]
 801b5f8:	7849      	ldrb	r1, [r1, #1]
 801b5fa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b5fc:	0209      	lsls	r1, r1, #8
 801b5fe:	5cf3      	ldrb	r3, [r6, r3]
 801b600:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b604:	4319      	orrs	r1, r3
 801b606:	b28b      	uxth	r3, r1
 801b608:	930c      	str	r3, [sp, #48]	; 0x30
 801b60a:	2300      	movs	r3, #0
 801b60c:	f04f 0a01 	mov.w	sl, #1
 801b610:	9307      	str	r3, [sp, #28]
 801b612:	469c      	mov	ip, r3
 801b614:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b618:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b61c:	46d3      	mov	fp, sl
 801b61e:	4657      	mov	r7, sl
 801b620:	930e      	str	r3, [sp, #56]	; 0x38
 801b622:	2d00      	cmp	r5, #0
 801b624:	d07e      	beq.n	801b724 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b626:	42af      	cmp	r7, r5
 801b628:	d26e      	bcs.n	801b708 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b62a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b62c:	9201      	str	r2, [sp, #4]
 801b62e:	1bed      	subs	r5, r5, r7
 801b630:	4283      	cmp	r3, r0
 801b632:	b2ad      	uxth	r5, r5
 801b634:	d802      	bhi.n	801b63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b636:	e073      	b.n	801b720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b638:	2b00      	cmp	r3, #0
 801b63a:	d15f      	bne.n	801b6fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b63c:	9b03      	ldr	r3, [sp, #12]
 801b63e:	785b      	ldrb	r3, [r3, #1]
 801b640:	f1cb 0207 	rsb	r2, fp, #7
 801b644:	4093      	lsls	r3, r2
 801b646:	005b      	lsls	r3, r3, #1
 801b648:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b64c:	9b03      	ldr	r3, [sp, #12]
 801b64e:	781b      	ldrb	r3, [r3, #0]
 801b650:	fa43 f30b 	asr.w	r3, r3, fp
 801b654:	b2db      	uxtb	r3, r3
 801b656:	4313      	orrs	r3, r2
 801b658:	f10b 0201 	add.w	r2, fp, #1
 801b65c:	fa5f fb82 	uxtb.w	fp, r2
 801b660:	9a03      	ldr	r2, [sp, #12]
 801b662:	f1bb 0f08 	cmp.w	fp, #8
 801b666:	bf15      	itete	ne
 801b668:	3201      	addne	r2, #1
 801b66a:	3202      	addeq	r2, #2
 801b66c:	9203      	strne	r2, [sp, #12]
 801b66e:	9203      	streq	r2, [sp, #12]
 801b670:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b672:	b29f      	uxth	r7, r3
 801b674:	bf08      	it	eq
 801b676:	f04f 0b00 	moveq.w	fp, #0
 801b67a:	42ba      	cmp	r2, r7
 801b67c:	d309      	bcc.n	801b692 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b67e:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b682:	2301      	movs	r3, #1
 801b684:	9a05      	ldr	r2, [sp, #20]
 801b686:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b68a:	d30e      	bcc.n	801b6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b68c:	469a      	mov	sl, r3
 801b68e:	2600      	movs	r6, #0
 801b690:	e035      	b.n	801b6fe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b692:	9b05      	ldr	r3, [sp, #20]
 801b694:	429f      	cmp	r7, r3
 801b696:	d318      	bcc.n	801b6ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b698:	eb04 030a 	add.w	r3, r4, sl
 801b69c:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b6a0:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b6a4:	f10a 0301 	add.w	r3, sl, #1
 801b6a8:	b29b      	uxth	r3, r3
 801b6aa:	9a05      	ldr	r2, [sp, #20]
 801b6ac:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b6b0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b6b2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b6b6:	7116      	strb	r6, [r2, #4]
 801b6b8:	f10a 0601 	add.w	r6, sl, #1
 801b6bc:	80d1      	strh	r1, [r2, #6]
 801b6be:	7156      	strb	r6, [r2, #5]
 801b6c0:	9a05      	ldr	r2, [sp, #20]
 801b6c2:	3201      	adds	r2, #1
 801b6c4:	b292      	uxth	r2, r2
 801b6c6:	9205      	str	r2, [sp, #20]
 801b6c8:	e7e0      	b.n	801b68c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b6ca:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b6ce:	463a      	mov	r2, r7
 801b6d0:	795b      	ldrb	r3, [r3, #5]
 801b6d2:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b6d6:	4426      	add	r6, r4
 801b6d8:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b6da:	eb01 0c06 	add.w	ip, r1, r6
 801b6de:	f1bc 0f00 	cmp.w	ip, #0
 801b6e2:	dd07      	ble.n	801b6f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b6e4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b6e8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b6ec:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b6f0:	88d2      	ldrh	r2, [r2, #6]
 801b6f2:	e7f1      	b.n	801b6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b6f4:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b6f8:	b29b      	uxth	r3, r3
 801b6fa:	e7c3      	b.n	801b684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b6fc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b6fe:	970c      	str	r7, [sp, #48]	; 0x30
 801b700:	9a01      	ldr	r2, [sp, #4]
 801b702:	46b4      	mov	ip, r6
 801b704:	461f      	mov	r7, r3
 801b706:	e78c      	b.n	801b622 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b708:	1b7b      	subs	r3, r7, r5
 801b70a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b70e:	9201      	str	r2, [sp, #4]
 801b710:	eb0c 0605 	add.w	r6, ip, r5
 801b714:	b29b      	uxth	r3, r3
 801b716:	b2b6      	uxth	r6, r6
 801b718:	2500      	movs	r5, #0
 801b71a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b71c:	4282      	cmp	r2, r0
 801b71e:	d88b      	bhi.n	801b638 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b720:	9a01      	ldr	r2, [sp, #4]
 801b722:	e74b      	b.n	801b5bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b724:	4297      	cmp	r7, r2
 801b726:	d332      	bcc.n	801b78e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b728:	1abb      	subs	r3, r7, r2
 801b72a:	b29b      	uxth	r3, r3
 801b72c:	9208      	str	r2, [sp, #32]
 801b72e:	9501      	str	r5, [sp, #4]
 801b730:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b732:	29ff      	cmp	r1, #255	; 0xff
 801b734:	9908      	ldr	r1, [sp, #32]
 801b736:	eb0c 0601 	add.w	r6, ip, r1
 801b73a:	d135      	bne.n	801b7a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b73c:	f1a0 0e02 	sub.w	lr, r0, #2
 801b740:	b2b6      	uxth	r6, r6
 801b742:	45b4      	cmp	ip, r6
 801b744:	f040 808c 	bne.w	801b860 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b748:	9908      	ldr	r1, [sp, #32]
 801b74a:	4297      	cmp	r7, r2
 801b74c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b750:	d3e2      	bcc.n	801b718 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b752:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b754:	9904      	ldr	r1, [sp, #16]
 801b756:	8812      	ldrh	r2, [r2, #0]
 801b758:	1a52      	subs	r2, r2, r1
 801b75a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b75e:	9a07      	ldr	r2, [sp, #28]
 801b760:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b762:	3201      	adds	r2, #1
 801b764:	428a      	cmp	r2, r1
 801b766:	9207      	str	r2, [sp, #28]
 801b768:	f040 8087 	bne.w	801b87a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b76c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b770:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b774:	9b04      	ldr	r3, [sp, #16]
 801b776:	1bed      	subs	r5, r5, r7
 801b778:	b2ad      	uxth	r5, r5
 801b77a:	2d00      	cmp	r5, #0
 801b77c:	bf08      	it	eq
 801b77e:	461a      	moveq	r2, r3
 801b780:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b782:	bf18      	it	ne
 801b784:	2200      	movne	r2, #0
 801b786:	3301      	adds	r3, #1
 801b788:	930d      	str	r3, [sp, #52]	; 0x34
 801b78a:	b292      	uxth	r2, r2
 801b78c:	e70d      	b.n	801b5aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b78e:	1bd1      	subs	r1, r2, r7
 801b790:	b28b      	uxth	r3, r1
 801b792:	9301      	str	r3, [sp, #4]
 801b794:	9708      	str	r7, [sp, #32]
 801b796:	462b      	mov	r3, r5
 801b798:	e7ca      	b.n	801b730 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b79a:	bf00      	nop
 801b79c:	20012db4 	.word	0x20012db4
 801b7a0:	20012dae 	.word	0x20012dae
 801b7a4:	fffff7fb 	.word	0xfffff7fb
 801b7a8:	b2b6      	uxth	r6, r6
 801b7aa:	900b      	str	r0, [sp, #44]	; 0x2c
 801b7ac:	45b4      	cmp	ip, r6
 801b7ae:	d0cb      	beq.n	801b748 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b7b0:	f10c 0101 	add.w	r1, ip, #1
 801b7b4:	44a4      	add	ip, r4
 801b7b6:	9117      	str	r1, [sp, #92]	; 0x5c
 801b7b8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b7bc:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b7be:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b7c2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b7c4:	f8b1 c000 	ldrh.w	ip, [r1]
 801b7c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b7ca:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b7ce:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b7d2:	fb1e fe01 	smulbb	lr, lr, r1
 801b7d6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b7da:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b7dc:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b7e0:	fb08 e801 	mla	r8, r8, r1, lr
 801b7e4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b7e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b7ea:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b7ee:	fb19 f901 	smulbb	r9, r9, r1
 801b7f2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b7f6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b7f8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b7fc:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b800:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b804:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b806:	fa5f fc8c 	uxtb.w	ip, ip
 801b80a:	fb1c fc01 	smulbb	ip, ip, r1
 801b80e:	00ed      	lsls	r5, r5, #3
 801b810:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b812:	b2ed      	uxtb	r5, r5
 801b814:	fb05 c501 	mla	r5, r5, r1, ip
 801b818:	fa1f f888 	uxth.w	r8, r8
 801b81c:	fa1f fe8e 	uxth.w	lr, lr
 801b820:	b2ad      	uxth	r5, r5
 801b822:	f108 0c01 	add.w	ip, r8, #1
 801b826:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b82a:	f10e 0901 	add.w	r9, lr, #1
 801b82e:	f105 0c01 	add.w	ip, r5, #1
 801b832:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b836:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b83a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b83e:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b842:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b846:	ea4c 0808 	orr.w	r8, ip, r8
 801b84a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b84c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b850:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b854:	ea48 0809 	orr.w	r8, r8, r9
 801b858:	f821 8b02 	strh.w	r8, [r1], #2
 801b85c:	910b      	str	r1, [sp, #44]	; 0x2c
 801b85e:	e7a5      	b.n	801b7ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b860:	f10c 0801 	add.w	r8, ip, #1
 801b864:	44a4      	add	ip, r4
 801b866:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b868:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b86c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b870:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b874:	fa1f fc88 	uxth.w	ip, r8
 801b878:	e763      	b.n	801b742 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b87a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b87e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b882:	1aad      	subs	r5, r5, r2
 801b884:	b2ad      	uxth	r5, r5
 801b886:	2d00      	cmp	r5, #0
 801b888:	bf18      	it	ne
 801b88a:	2200      	movne	r2, #0
 801b88c:	9201      	str	r2, [sp, #4]
 801b88e:	e744      	b.n	801b71a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b890:	4b03      	ldr	r3, [pc, #12]	; (801b8a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b892:	6818      	ldr	r0, [r3, #0]
 801b894:	6803      	ldr	r3, [r0, #0]
 801b896:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b898:	4798      	blx	r3
 801b89a:	b01f      	add	sp, #124	; 0x7c
 801b89c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8a0:	20012db4 	.word	0x20012db4

0801b8a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b8a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8a8:	b08f      	sub	sp, #60	; 0x3c
 801b8aa:	461c      	mov	r4, r3
 801b8ac:	9203      	str	r2, [sp, #12]
 801b8ae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b8b2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b8b4:	9202      	str	r2, [sp, #8]
 801b8b6:	460f      	mov	r7, r1
 801b8b8:	2a00      	cmp	r2, #0
 801b8ba:	f000 8128 	beq.w	801bb0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b8be:	6820      	ldr	r0, [r4, #0]
 801b8c0:	6861      	ldr	r1, [r4, #4]
 801b8c2:	aa0a      	add	r2, sp, #40	; 0x28
 801b8c4:	c203      	stmia	r2!, {r0, r1}
 801b8c6:	6818      	ldr	r0, [r3, #0]
 801b8c8:	6859      	ldr	r1, [r3, #4]
 801b8ca:	aa0c      	add	r2, sp, #48	; 0x30
 801b8cc:	c203      	stmia	r2!, {r0, r1}
 801b8ce:	a80a      	add	r0, sp, #40	; 0x28
 801b8d0:	f7f9 f802 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b8d4:	4621      	mov	r1, r4
 801b8d6:	a80c      	add	r0, sp, #48	; 0x30
 801b8d8:	f7f9 f842 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b8dc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b8e0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b8e4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b8e8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b8ec:	bfde      	ittt	le
 801b8ee:	b2b3      	uxthle	r3, r6
 801b8f0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b8f4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b8f8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b8fc:	bfc8      	it	gt
 801b8fe:	2301      	movgt	r3, #1
 801b900:	fb92 f1f3 	sdiv	r1, r2, r3
 801b904:	fa1f fc81 	uxth.w	ip, r1
 801b908:	fb0c 2413 	mls	r4, ip, r3, r2
 801b90c:	fb14 f406 	smulbb	r4, r4, r6
 801b910:	441d      	add	r5, r3
 801b912:	4404      	add	r4, r0
 801b914:	4661      	mov	r1, ip
 801b916:	3d01      	subs	r5, #1
 801b918:	b2a4      	uxth	r4, r4
 801b91a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b91e:	b121      	cbz	r1, 801b92a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b920:	9b03      	ldr	r3, [sp, #12]
 801b922:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b926:	ba1b      	rev	r3, r3
 801b928:	441f      	add	r7, r3
 801b92a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b92e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b932:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b936:	4418      	add	r0, r3
 801b938:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b93c:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b940:	441a      	add	r2, r3
 801b942:	4b74      	ldr	r3, [pc, #464]	; (801bb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b944:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b948:	6818      	ldr	r0, [r3, #0]
 801b94a:	6803      	ldr	r3, [r0, #0]
 801b94c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b94e:	4798      	blx	r3
 801b950:	4a71      	ldr	r2, [pc, #452]	; (801bb18 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b952:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b956:	8813      	ldrh	r3, [r2, #0]
 801b958:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b95c:	9209      	str	r2, [sp, #36]	; 0x24
 801b95e:	fb03 c101 	mla	r1, r3, r1, ip
 801b962:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b966:	4373      	muls	r3, r6
 801b968:	b2ad      	uxth	r5, r5
 801b96a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b96e:	00ad      	lsls	r5, r5, #2
 801b970:	2c00      	cmp	r4, #0
 801b972:	9304      	str	r3, [sp, #16]
 801b974:	f105 0304 	add.w	r3, r5, #4
 801b978:	9305      	str	r3, [sp, #20]
 801b97a:	bf0c      	ite	eq
 801b97c:	46c8      	moveq	r8, r9
 801b97e:	f04f 0800 	movne.w	r8, #0
 801b982:	2300      	movs	r3, #0
 801b984:	fa1f f888 	uxth.w	r8, r8
 801b988:	9301      	str	r3, [sp, #4]
 801b98a:	9a04      	ldr	r2, [sp, #16]
 801b98c:	4282      	cmp	r2, r0
 801b98e:	f240 80b9 	bls.w	801bb04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b992:	b95b      	cbnz	r3, 801b9ac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b994:	783a      	ldrb	r2, [r7, #0]
 801b996:	0993      	lsrs	r3, r2, #6
 801b998:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b99c:	9201      	str	r2, [sp, #4]
 801b99e:	1e5a      	subs	r2, r3, #1
 801b9a0:	2a02      	cmp	r2, #2
 801b9a2:	bf8d      	iteet	hi
 801b9a4:	787b      	ldrbhi	r3, [r7, #1]
 801b9a6:	3701      	addls	r7, #1
 801b9a8:	b29b      	uxthls	r3, r3
 801b9aa:	3702      	addhi	r7, #2
 801b9ac:	b184      	cbz	r4, 801b9d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b9ae:	429c      	cmp	r4, r3
 801b9b0:	bf95      	itete	ls
 801b9b2:	1b1c      	subls	r4, r3, r4
 801b9b4:	1ae4      	subhi	r4, r4, r3
 801b9b6:	fa1f fa84 	uxthls.w	sl, r4
 801b9ba:	b2a4      	uxthhi	r4, r4
 801b9bc:	bf87      	ittee	hi
 801b9be:	46c4      	movhi	ip, r8
 801b9c0:	f04f 0a00 	movhi.w	sl, #0
 801b9c4:	fa1f fc89 	uxthls.w	ip, r9
 801b9c8:	2400      	movls	r4, #0
 801b9ca:	4653      	mov	r3, sl
 801b9cc:	46e0      	mov	r8, ip
 801b9ce:	e7dc      	b.n	801b98a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b9d0:	2204      	movs	r2, #4
 801b9d2:	4615      	mov	r5, r2
 801b9d4:	9905      	ldr	r1, [sp, #20]
 801b9d6:	9a01      	ldr	r2, [sp, #4]
 801b9d8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b9dc:	9903      	ldr	r1, [sp, #12]
 801b9de:	588a      	ldr	r2, [r1, r2]
 801b9e0:	4543      	cmp	r3, r8
 801b9e2:	bf27      	ittee	cs
 801b9e4:	eba3 0a08 	subcs.w	sl, r3, r8
 801b9e8:	46c6      	movcs	lr, r8
 801b9ea:	eba8 0c03 	subcc.w	ip, r8, r3
 801b9ee:	469e      	movcc	lr, r3
 801b9f0:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b9f4:	bf27      	ittee	cs
 801b9f6:	fa1f fa8a 	uxthcs.w	sl, sl
 801b9fa:	46a4      	movcs	ip, r4
 801b9fc:	fa1f fc8c 	uxthcc.w	ip, ip
 801ba00:	46a2      	movcc	sl, r4
 801ba02:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801ba06:	2900      	cmp	r1, #0
 801ba08:	d066      	beq.n	801bad8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801ba0a:	29ff      	cmp	r1, #255	; 0xff
 801ba0c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801ba10:	d114      	bne.n	801ba3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ba12:	9d02      	ldr	r5, [sp, #8]
 801ba14:	2dff      	cmp	r5, #255	; 0xff
 801ba16:	d111      	bne.n	801ba3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801ba18:	0951      	lsrs	r1, r2, #5
 801ba1a:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801ba1e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ba22:	f026 0607 	bic.w	r6, r6, #7
 801ba26:	430e      	orrs	r6, r1
 801ba28:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ba2c:	4316      	orrs	r6, r2
 801ba2e:	b2b6      	uxth	r6, r6
 801ba30:	4486      	add	lr, r0
 801ba32:	4586      	cmp	lr, r0
 801ba34:	d051      	beq.n	801bada <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ba36:	f820 6b02 	strh.w	r6, [r0], #2
 801ba3a:	e7fa      	b.n	801ba32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801ba3c:	9d02      	ldr	r5, [sp, #8]
 801ba3e:	4369      	muls	r1, r5
 801ba40:	1c4d      	adds	r5, r1, #1
 801ba42:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801ba46:	122d      	asrs	r5, r5, #8
 801ba48:	ea6f 0b05 	mvn.w	fp, r5
 801ba4c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ba50:	b2ad      	uxth	r5, r5
 801ba52:	b2f6      	uxtb	r6, r6
 801ba54:	b2d2      	uxtb	r2, r2
 801ba56:	fb11 f105 	smulbb	r1, r1, r5
 801ba5a:	fb16 f605 	smulbb	r6, r6, r5
 801ba5e:	fb12 f205 	smulbb	r2, r2, r5
 801ba62:	b289      	uxth	r1, r1
 801ba64:	b2b6      	uxth	r6, r6
 801ba66:	b292      	uxth	r2, r2
 801ba68:	9106      	str	r1, [sp, #24]
 801ba6a:	9607      	str	r6, [sp, #28]
 801ba6c:	9208      	str	r2, [sp, #32]
 801ba6e:	4486      	add	lr, r0
 801ba70:	fa5f fb8b 	uxtb.w	fp, fp
 801ba74:	4586      	cmp	lr, r0
 801ba76:	d030      	beq.n	801bada <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ba78:	8802      	ldrh	r2, [r0, #0]
 801ba7a:	9906      	ldr	r1, [sp, #24]
 801ba7c:	1216      	asrs	r6, r2, #8
 801ba7e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ba82:	10d5      	asrs	r5, r2, #3
 801ba84:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ba88:	fb06 160b 	mla	r6, r6, fp, r1
 801ba8c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ba90:	9907      	ldr	r1, [sp, #28]
 801ba92:	00d2      	lsls	r2, r2, #3
 801ba94:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ba98:	fb05 150b 	mla	r5, r5, fp, r1
 801ba9c:	b2d2      	uxtb	r2, r2
 801ba9e:	9908      	ldr	r1, [sp, #32]
 801baa0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801baa4:	b2b6      	uxth	r6, r6
 801baa6:	fb02 120b 	mla	r2, r2, fp, r1
 801baaa:	b292      	uxth	r2, r2
 801baac:	1c71      	adds	r1, r6, #1
 801baae:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bab2:	1c51      	adds	r1, r2, #1
 801bab4:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bab8:	b2ad      	uxth	r5, r5
 801baba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801babe:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bac2:	4316      	orrs	r6, r2
 801bac4:	1c6a      	adds	r2, r5, #1
 801bac6:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801baca:	096d      	lsrs	r5, r5, #5
 801bacc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bad0:	432e      	orrs	r6, r5
 801bad2:	f820 6b02 	strh.w	r6, [r0], #2
 801bad6:	e7cd      	b.n	801ba74 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bad8:	4470      	add	r0, lr
 801bada:	4543      	cmp	r3, r8
 801badc:	f4ff af75 	bcc.w	801b9ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bae0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bae4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bae6:	fa1f fc89 	uxth.w	ip, r9
 801baea:	eba4 040c 	sub.w	r4, r4, ip
 801baee:	881b      	ldrh	r3, [r3, #0]
 801baf0:	b2a4      	uxth	r4, r4
 801baf2:	2c00      	cmp	r4, #0
 801baf4:	eba3 0309 	sub.w	r3, r3, r9
 801baf8:	bf18      	it	ne
 801bafa:	f04f 0c00 	movne.w	ip, #0
 801bafe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bb02:	e762      	b.n	801b9ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bb04:	4b03      	ldr	r3, [pc, #12]	; (801bb14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bb06:	6818      	ldr	r0, [r3, #0]
 801bb08:	6803      	ldr	r3, [r0, #0]
 801bb0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bb0c:	4798      	blx	r3
 801bb0e:	b00f      	add	sp, #60	; 0x3c
 801bb10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb14:	20012db4 	.word	0x20012db4
 801bb18:	20012dae 	.word	0x20012dae

0801bb1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bb1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb20:	b093      	sub	sp, #76	; 0x4c
 801bb22:	461c      	mov	r4, r3
 801bb24:	9205      	str	r2, [sp, #20]
 801bb26:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bb2a:	9101      	str	r1, [sp, #4]
 801bb2c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bb2e:	9202      	str	r2, [sp, #8]
 801bb30:	2a00      	cmp	r2, #0
 801bb32:	f000 812c 	beq.w	801bd8e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bb36:	6820      	ldr	r0, [r4, #0]
 801bb38:	6861      	ldr	r1, [r4, #4]
 801bb3a:	aa0e      	add	r2, sp, #56	; 0x38
 801bb3c:	c203      	stmia	r2!, {r0, r1}
 801bb3e:	6818      	ldr	r0, [r3, #0]
 801bb40:	6859      	ldr	r1, [r3, #4]
 801bb42:	aa10      	add	r2, sp, #64	; 0x40
 801bb44:	c203      	stmia	r2!, {r0, r1}
 801bb46:	a80e      	add	r0, sp, #56	; 0x38
 801bb48:	f7f8 fec6 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb4c:	4621      	mov	r1, r4
 801bb4e:	a810      	add	r0, sp, #64	; 0x40
 801bb50:	f7f8 ff06 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb54:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bb58:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bb5c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bb60:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bb64:	bfde      	ittt	le
 801bb66:	b2b3      	uxthle	r3, r6
 801bb68:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bb6c:	fb92 f3f3 	sdivle	r3, r2, r3
 801bb70:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bb74:	bfc8      	it	gt
 801bb76:	2301      	movgt	r3, #1
 801bb78:	fb92 f1f3 	sdiv	r1, r2, r3
 801bb7c:	fa1f fc81 	uxth.w	ip, r1
 801bb80:	fb0c 2413 	mls	r4, ip, r3, r2
 801bb84:	fb14 f406 	smulbb	r4, r4, r6
 801bb88:	441d      	add	r5, r3
 801bb8a:	4404      	add	r4, r0
 801bb8c:	4661      	mov	r1, ip
 801bb8e:	3d01      	subs	r5, #1
 801bb90:	b2a4      	uxth	r4, r4
 801bb92:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb96:	b131      	cbz	r1, 801bba6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bb98:	9b05      	ldr	r3, [sp, #20]
 801bb9a:	9901      	ldr	r1, [sp, #4]
 801bb9c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bba0:	ba1b      	rev	r3, r3
 801bba2:	4419      	add	r1, r3
 801bba4:	9101      	str	r1, [sp, #4]
 801bba6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801bbaa:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bbae:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801bbb2:	4418      	add	r0, r3
 801bbb4:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bbb8:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801bbbc:	441a      	add	r2, r3
 801bbbe:	4b75      	ldr	r3, [pc, #468]	; (801bd94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bbc0:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801bbc4:	6818      	ldr	r0, [r3, #0]
 801bbc6:	6803      	ldr	r3, [r0, #0]
 801bbc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bbca:	4798      	blx	r3
 801bbcc:	4972      	ldr	r1, [pc, #456]	; (801bd98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bbce:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801bbd2:	880b      	ldrh	r3, [r1, #0]
 801bbd4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bbd8:	910d      	str	r1, [sp, #52]	; 0x34
 801bbda:	fb03 c202 	mla	r2, r3, r2, ip
 801bbde:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bbe2:	4373      	muls	r3, r6
 801bbe4:	b2ad      	uxth	r5, r5
 801bbe6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bbea:	00ad      	lsls	r5, r5, #2
 801bbec:	9308      	str	r3, [sp, #32]
 801bbee:	1d2b      	adds	r3, r5, #4
 801bbf0:	9309      	str	r3, [sp, #36]	; 0x24
 801bbf2:	9b02      	ldr	r3, [sp, #8]
 801bbf4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bbf8:	9106      	str	r1, [sp, #24]
 801bbfa:	43da      	mvns	r2, r3
 801bbfc:	2c00      	cmp	r4, #0
 801bbfe:	bf0c      	ite	eq
 801bc00:	46dc      	moveq	ip, fp
 801bc02:	f04f 0c00 	movne.w	ip, #0
 801bc06:	2300      	movs	r3, #0
 801bc08:	b2d2      	uxtb	r2, r2
 801bc0a:	fa1f fc8c 	uxth.w	ip, ip
 801bc0e:	9303      	str	r3, [sp, #12]
 801bc10:	9207      	str	r2, [sp, #28]
 801bc12:	9a08      	ldr	r2, [sp, #32]
 801bc14:	4282      	cmp	r2, r0
 801bc16:	f240 80b5 	bls.w	801bd84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bc1a:	b963      	cbnz	r3, 801bc36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bc1c:	9b01      	ldr	r3, [sp, #4]
 801bc1e:	781a      	ldrb	r2, [r3, #0]
 801bc20:	0993      	lsrs	r3, r2, #6
 801bc22:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bc26:	9203      	str	r2, [sp, #12]
 801bc28:	1e5a      	subs	r2, r3, #1
 801bc2a:	2a02      	cmp	r2, #2
 801bc2c:	d815      	bhi.n	801bc5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bc2e:	9a01      	ldr	r2, [sp, #4]
 801bc30:	3201      	adds	r2, #1
 801bc32:	9201      	str	r2, [sp, #4]
 801bc34:	b29b      	uxth	r3, r3
 801bc36:	b1b4      	cbz	r4, 801bc66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bc38:	429c      	cmp	r4, r3
 801bc3a:	bf95      	itete	ls
 801bc3c:	1b1c      	subls	r4, r3, r4
 801bc3e:	1ae4      	subhi	r4, r4, r3
 801bc40:	fa1f f884 	uxthls.w	r8, r4
 801bc44:	b2a4      	uxthhi	r4, r4
 801bc46:	bf87      	ittee	hi
 801bc48:	4666      	movhi	r6, ip
 801bc4a:	f04f 0800 	movhi.w	r8, #0
 801bc4e:	fa1f f68b 	uxthls.w	r6, fp
 801bc52:	2400      	movls	r4, #0
 801bc54:	4643      	mov	r3, r8
 801bc56:	46b4      	mov	ip, r6
 801bc58:	e7db      	b.n	801bc12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bc5a:	9a01      	ldr	r2, [sp, #4]
 801bc5c:	9b01      	ldr	r3, [sp, #4]
 801bc5e:	3202      	adds	r2, #2
 801bc60:	785b      	ldrb	r3, [r3, #1]
 801bc62:	9201      	str	r2, [sp, #4]
 801bc64:	e7e7      	b.n	801bc36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bc66:	2203      	movs	r2, #3
 801bc68:	4615      	mov	r5, r2
 801bc6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bc6c:	9a03      	ldr	r2, [sp, #12]
 801bc6e:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bc72:	9905      	ldr	r1, [sp, #20]
 801bc74:	4563      	cmp	r3, ip
 801bc76:	eb01 0502 	add.w	r5, r1, r2
 801bc7a:	9902      	ldr	r1, [sp, #8]
 801bc7c:	bf29      	itett	cs
 801bc7e:	eba3 080c 	subcs.w	r8, r3, ip
 801bc82:	ebac 0603 	subcc.w	r6, ip, r3
 801bc86:	fa1f f888 	uxthcs.w	r8, r8
 801bc8a:	46e1      	movcs	r9, ip
 801bc8c:	bf2f      	iteee	cs
 801bc8e:	4626      	movcs	r6, r4
 801bc90:	b2b6      	uxthcc	r6, r6
 801bc92:	4699      	movcc	r9, r3
 801bc94:	46a0      	movcc	r8, r4
 801bc96:	29ff      	cmp	r1, #255	; 0xff
 801bc98:	d04a      	beq.n	801bd30 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bc9a:	9f06      	ldr	r7, [sp, #24]
 801bc9c:	78a9      	ldrb	r1, [r5, #2]
 801bc9e:	9004      	str	r0, [sp, #16]
 801bca0:	4379      	muls	r1, r7
 801bca2:	910a      	str	r1, [sp, #40]	; 0x28
 801bca4:	7869      	ldrb	r1, [r5, #1]
 801bca6:	4379      	muls	r1, r7
 801bca8:	910b      	str	r1, [sp, #44]	; 0x2c
 801bcaa:	9905      	ldr	r1, [sp, #20]
 801bcac:	5c8a      	ldrb	r2, [r1, r2]
 801bcae:	437a      	muls	r2, r7
 801bcb0:	920c      	str	r2, [sp, #48]	; 0x30
 801bcb2:	46ca      	mov	sl, r9
 801bcb4:	f1ba 0f00 	cmp.w	sl, #0
 801bcb8:	d03d      	beq.n	801bd36 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bcba:	9a04      	ldr	r2, [sp, #16]
 801bcbc:	9f07      	ldr	r7, [sp, #28]
 801bcbe:	8812      	ldrh	r2, [r2, #0]
 801bcc0:	1215      	asrs	r5, r2, #8
 801bcc2:	46be      	mov	lr, r7
 801bcc4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bcc8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bcca:	10d1      	asrs	r1, r2, #3
 801bccc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bcd0:	fb05 750e 	mla	r5, r5, lr, r7
 801bcd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bcd8:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bcda:	00d2      	lsls	r2, r2, #3
 801bcdc:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bce0:	fb01 710e 	mla	r1, r1, lr, r7
 801bce4:	b2d2      	uxtb	r2, r2
 801bce6:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bce8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bcec:	b2ad      	uxth	r5, r5
 801bcee:	fb02 720e 	mla	r2, r2, lr, r7
 801bcf2:	b292      	uxth	r2, r2
 801bcf4:	f105 0e01 	add.w	lr, r5, #1
 801bcf8:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bcfc:	f102 0e01 	add.w	lr, r2, #1
 801bd00:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bd04:	b289      	uxth	r1, r1
 801bd06:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd0a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bd0e:	4315      	orrs	r5, r2
 801bd10:	1c4a      	adds	r2, r1, #1
 801bd12:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd16:	0949      	lsrs	r1, r1, #5
 801bd18:	9a04      	ldr	r2, [sp, #16]
 801bd1a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd1e:	430d      	orrs	r5, r1
 801bd20:	f822 5b02 	strh.w	r5, [r2], #2
 801bd24:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bd28:	9204      	str	r2, [sp, #16]
 801bd2a:	fa1f fa8a 	uxth.w	sl, sl
 801bd2e:	e7c1      	b.n	801bcb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bd30:	4649      	mov	r1, r9
 801bd32:	4686      	mov	lr, r0
 801bd34:	b999      	cbnz	r1, 801bd5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bd36:	4563      	cmp	r3, ip
 801bd38:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bd3c:	d38a      	bcc.n	801bc54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bd3e:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bd42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd44:	fa1f f68b 	uxth.w	r6, fp
 801bd48:	1ba4      	subs	r4, r4, r6
 801bd4a:	881b      	ldrh	r3, [r3, #0]
 801bd4c:	b2a4      	uxth	r4, r4
 801bd4e:	2c00      	cmp	r4, #0
 801bd50:	eba3 030b 	sub.w	r3, r3, fp
 801bd54:	bf18      	it	ne
 801bd56:	2600      	movne	r6, #0
 801bd58:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd5c:	e77a      	b.n	801bc54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bd5e:	78aa      	ldrb	r2, [r5, #2]
 801bd60:	4f0e      	ldr	r7, [pc, #56]	; (801bd9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bd62:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bd66:	786a      	ldrb	r2, [r5, #1]
 801bd68:	00d2      	lsls	r2, r2, #3
 801bd6a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd6e:	ea4a 0202 	orr.w	r2, sl, r2
 801bd72:	f895 a000 	ldrb.w	sl, [r5]
 801bd76:	3901      	subs	r1, #1
 801bd78:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bd7c:	f82e 2b02 	strh.w	r2, [lr], #2
 801bd80:	b289      	uxth	r1, r1
 801bd82:	e7d7      	b.n	801bd34 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bd84:	4b03      	ldr	r3, [pc, #12]	; (801bd94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bd86:	6818      	ldr	r0, [r3, #0]
 801bd88:	6803      	ldr	r3, [r0, #0]
 801bd8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd8c:	4798      	blx	r3
 801bd8e:	b013      	add	sp, #76	; 0x4c
 801bd90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd94:	20012db4 	.word	0x20012db4
 801bd98:	20012dae 	.word	0x20012dae
 801bd9c:	fffff800 	.word	0xfffff800

0801bda0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bda0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bda4:	b09d      	sub	sp, #116	; 0x74
 801bda6:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bdaa:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bdae:	920e      	str	r2, [sp, #56]	; 0x38
 801bdb0:	461c      	mov	r4, r3
 801bdb2:	4683      	mov	fp, r0
 801bdb4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bdb6:	2a00      	cmp	r2, #0
 801bdb8:	f000 81e0 	beq.w	801c17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bdbc:	6820      	ldr	r0, [r4, #0]
 801bdbe:	6861      	ldr	r1, [r4, #4]
 801bdc0:	aa18      	add	r2, sp, #96	; 0x60
 801bdc2:	c203      	stmia	r2!, {r0, r1}
 801bdc4:	6818      	ldr	r0, [r3, #0]
 801bdc6:	6859      	ldr	r1, [r3, #4]
 801bdc8:	aa1a      	add	r2, sp, #104	; 0x68
 801bdca:	c203      	stmia	r2!, {r0, r1}
 801bdcc:	a818      	add	r0, sp, #96	; 0x60
 801bdce:	f7f8 fd83 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bdd2:	4621      	mov	r1, r4
 801bdd4:	a81a      	add	r0, sp, #104	; 0x68
 801bdd6:	f7f8 fdc3 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bdda:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801bdde:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801bde2:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bde6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bdea:	bfd7      	itett	le
 801bdec:	b29a      	uxthle	r2, r3
 801bdee:	2201      	movgt	r2, #1
 801bdf0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bdf4:	fb91 f2f2 	sdivle	r2, r1, r2
 801bdf8:	9202      	str	r2, [sp, #8]
 801bdfa:	9802      	ldr	r0, [sp, #8]
 801bdfc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801be00:	fb92 f0f0 	sdiv	r0, r2, r0
 801be04:	b280      	uxth	r0, r0
 801be06:	900f      	str	r0, [sp, #60]	; 0x3c
 801be08:	9902      	ldr	r1, [sp, #8]
 801be0a:	9802      	ldr	r0, [sp, #8]
 801be0c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801be0e:	440c      	add	r4, r1
 801be10:	fb05 2510 	mls	r5, r5, r0, r2
 801be14:	fb15 f503 	smulbb	r5, r5, r3
 801be18:	3c01      	subs	r4, #1
 801be1a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801be1e:	fb94 f4f1 	sdiv	r4, r4, r1
 801be22:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801be26:	440d      	add	r5, r1
 801be28:	4419      	add	r1, r3
 801be2a:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801be2e:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801be32:	441a      	add	r2, r3
 801be34:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801be38:	9306      	str	r3, [sp, #24]
 801be3a:	4bb3      	ldr	r3, [pc, #716]	; (801c108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801be3c:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801be40:	6818      	ldr	r0, [r3, #0]
 801be42:	6803      	ldr	r3, [r0, #0]
 801be44:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be46:	4798      	blx	r3
 801be48:	4bb0      	ldr	r3, [pc, #704]	; (801c10c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801be4a:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801be4e:	881a      	ldrh	r2, [r3, #0]
 801be50:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801be54:	9316      	str	r3, [sp, #88]	; 0x58
 801be56:	fb02 7101 	mla	r1, r2, r1, r7
 801be5a:	3401      	adds	r4, #1
 801be5c:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801be60:	b2a4      	uxth	r4, r4
 801be62:	4356      	muls	r6, r2
 801be64:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801be68:	00a4      	lsls	r4, r4, #2
 801be6a:	920a      	str	r2, [sp, #40]	; 0x28
 801be6c:	1d22      	adds	r2, r4, #4
 801be6e:	b2ad      	uxth	r5, r5
 801be70:	9213      	str	r2, [sp, #76]	; 0x4c
 801be72:	4ba7      	ldr	r3, [pc, #668]	; (801c110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801be74:	9a06      	ldr	r2, [sp, #24]
 801be76:	2d00      	cmp	r5, #0
 801be78:	bf0c      	ite	eq
 801be7a:	4611      	moveq	r1, r2
 801be7c:	2100      	movne	r1, #0
 801be7e:	2200      	movs	r2, #0
 801be80:	eba3 030b 	sub.w	r3, r3, fp
 801be84:	b289      	uxth	r1, r1
 801be86:	920d      	str	r2, [sp, #52]	; 0x34
 801be88:	9317      	str	r3, [sp, #92]	; 0x5c
 801be8a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be8e:	fa12 f383 	uxtah	r3, r2, r3
 801be92:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801be94:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801be98:	3304      	adds	r3, #4
 801be9a:	9308      	str	r3, [sp, #32]
 801be9c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be9e:	4543      	cmp	r3, r8
 801bea0:	f240 8167 	bls.w	801c172 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bea4:	9a02      	ldr	r2, [sp, #8]
 801bea6:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801beaa:	fbb5 f3f3 	udiv	r3, r5, r3
 801beae:	1ad3      	subs	r3, r2, r3
 801beb0:	b29b      	uxth	r3, r3
 801beb2:	9314      	str	r3, [sp, #80]	; 0x50
 801beb4:	9b08      	ldr	r3, [sp, #32]
 801beb6:	9808      	ldr	r0, [sp, #32]
 801beb8:	785a      	ldrb	r2, [r3, #1]
 801beba:	789b      	ldrb	r3, [r3, #2]
 801bebc:	7800      	ldrb	r0, [r0, #0]
 801bebe:	9010      	str	r0, [sp, #64]	; 0x40
 801bec0:	021b      	lsls	r3, r3, #8
 801bec2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bec6:	9a08      	ldr	r2, [sp, #32]
 801bec8:	78d2      	ldrb	r2, [r2, #3]
 801beca:	4313      	orrs	r3, r2
 801becc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bece:	3001      	adds	r0, #1
 801bed0:	441a      	add	r2, r3
 801bed2:	9007      	str	r0, [sp, #28]
 801bed4:	1c50      	adds	r0, r2, #1
 801bed6:	9005      	str	r0, [sp, #20]
 801bed8:	7852      	ldrb	r2, [r2, #1]
 801beda:	9811      	ldr	r0, [sp, #68]	; 0x44
 801bedc:	0212      	lsls	r2, r2, #8
 801bede:	5cc3      	ldrb	r3, [r0, r3]
 801bee0:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801bee4:	431a      	orrs	r2, r3
 801bee6:	b293      	uxth	r3, r2
 801bee8:	930b      	str	r3, [sp, #44]	; 0x2c
 801beea:	2300      	movs	r3, #0
 801beec:	9309      	str	r3, [sp, #36]	; 0x24
 801beee:	2301      	movs	r3, #1
 801bef0:	9301      	str	r3, [sp, #4]
 801bef2:	9304      	str	r3, [sp, #16]
 801bef4:	2300      	movs	r3, #0
 801bef6:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801befa:	9303      	str	r3, [sp, #12]
 801befc:	f04f 0e01 	mov.w	lr, #1
 801bf00:	2d00      	cmp	r5, #0
 801bf02:	d07c      	beq.n	801bffe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bf04:	45ae      	cmp	lr, r5
 801bf06:	d26b      	bcs.n	801bfe0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bf08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bf0a:	eba5 050e 	sub.w	r5, r5, lr
 801bf0e:	4543      	cmp	r3, r8
 801bf10:	b2ad      	uxth	r5, r5
 801bf12:	460c      	mov	r4, r1
 801bf14:	d802      	bhi.n	801bf1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801bf16:	e070      	b.n	801bffa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bf18:	2b00      	cmp	r3, #0
 801bf1a:	d15c      	bne.n	801bfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bf1c:	9b05      	ldr	r3, [sp, #20]
 801bf1e:	9a04      	ldr	r2, [sp, #16]
 801bf20:	785b      	ldrb	r3, [r3, #1]
 801bf22:	9904      	ldr	r1, [sp, #16]
 801bf24:	f1c2 0207 	rsb	r2, r2, #7
 801bf28:	4093      	lsls	r3, r2
 801bf2a:	005b      	lsls	r3, r3, #1
 801bf2c:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bf30:	9b05      	ldr	r3, [sp, #20]
 801bf32:	781b      	ldrb	r3, [r3, #0]
 801bf34:	410b      	asrs	r3, r1
 801bf36:	3101      	adds	r1, #1
 801bf38:	b2c9      	uxtb	r1, r1
 801bf3a:	2908      	cmp	r1, #8
 801bf3c:	9104      	str	r1, [sp, #16]
 801bf3e:	9905      	ldr	r1, [sp, #20]
 801bf40:	bf0a      	itet	eq
 801bf42:	3102      	addeq	r1, #2
 801bf44:	3101      	addne	r1, #1
 801bf46:	9105      	streq	r1, [sp, #20]
 801bf48:	b2db      	uxtb	r3, r3
 801bf4a:	bf0a      	itet	eq
 801bf4c:	2100      	moveq	r1, #0
 801bf4e:	9105      	strne	r1, [sp, #20]
 801bf50:	9104      	streq	r1, [sp, #16]
 801bf52:	4313      	orrs	r3, r2
 801bf54:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bf56:	b29a      	uxth	r2, r3
 801bf58:	4291      	cmp	r1, r2
 801bf5a:	d30a      	bcc.n	801bf72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bf5c:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801bf60:	2301      	movs	r3, #1
 801bf62:	9907      	ldr	r1, [sp, #28]
 801bf64:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bf68:	d30f      	bcc.n	801bf8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bf6a:	2100      	movs	r1, #0
 801bf6c:	9301      	str	r3, [sp, #4]
 801bf6e:	9103      	str	r1, [sp, #12]
 801bf70:	e032      	b.n	801bfd8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bf72:	9b07      	ldr	r3, [sp, #28]
 801bf74:	429a      	cmp	r2, r3
 801bf76:	d318      	bcc.n	801bfaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bf78:	9b01      	ldr	r3, [sp, #4]
 801bf7a:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801bf7e:	445b      	add	r3, fp
 801bf80:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bf84:	9b01      	ldr	r3, [sp, #4]
 801bf86:	3301      	adds	r3, #1
 801bf88:	b29b      	uxth	r3, r3
 801bf8a:	9907      	ldr	r1, [sp, #28]
 801bf8c:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801bf90:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bf94:	7108      	strb	r0, [r1, #4]
 801bf96:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bf98:	80c8      	strh	r0, [r1, #6]
 801bf9a:	9801      	ldr	r0, [sp, #4]
 801bf9c:	3001      	adds	r0, #1
 801bf9e:	7148      	strb	r0, [r1, #5]
 801bfa0:	9907      	ldr	r1, [sp, #28]
 801bfa2:	3101      	adds	r1, #1
 801bfa4:	b289      	uxth	r1, r1
 801bfa6:	9107      	str	r1, [sp, #28]
 801bfa8:	e7df      	b.n	801bf6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bfaa:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bfae:	4611      	mov	r1, r2
 801bfb0:	795b      	ldrb	r3, [r3, #5]
 801bfb2:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801bfb6:	4458      	add	r0, fp
 801bfb8:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801bfba:	4406      	add	r6, r0
 801bfbc:	2e00      	cmp	r6, #0
 801bfbe:	dd06      	ble.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bfc0:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bfc4:	790e      	ldrb	r6, [r1, #4]
 801bfc6:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bfca:	88c9      	ldrh	r1, [r1, #6]
 801bfcc:	e7f4      	b.n	801bfb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bfce:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801bfd2:	b29b      	uxth	r3, r3
 801bfd4:	e7c5      	b.n	801bf62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bfd6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bfd8:	920b      	str	r2, [sp, #44]	; 0x2c
 801bfda:	4621      	mov	r1, r4
 801bfdc:	469e      	mov	lr, r3
 801bfde:	e78f      	b.n	801bf00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bfe0:	9a03      	ldr	r2, [sp, #12]
 801bfe2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bfe6:	442a      	add	r2, r5
 801bfe8:	ebae 0305 	sub.w	r3, lr, r5
 801bfec:	b292      	uxth	r2, r2
 801bfee:	b29b      	uxth	r3, r3
 801bff0:	9203      	str	r2, [sp, #12]
 801bff2:	2500      	movs	r5, #0
 801bff4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bff6:	4542      	cmp	r2, r8
 801bff8:	d88e      	bhi.n	801bf18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bffa:	4621      	mov	r1, r4
 801bffc:	e74e      	b.n	801be9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bffe:	458e      	cmp	lr, r1
 801c000:	bf29      	itett	cs
 801c002:	ebae 0301 	subcs.w	r3, lr, r1
 801c006:	eba1 040e 	subcc.w	r4, r1, lr
 801c00a:	b29b      	uxthcs	r3, r3
 801c00c:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c00e:	bf2f      	iteee	cs
 801c010:	462c      	movcs	r4, r5
 801c012:	b2a4      	uxthcc	r4, r4
 801c014:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c018:	462b      	movcc	r3, r5
 801c01a:	f04f 0900 	mov.w	r9, #0
 801c01e:	9a03      	ldr	r2, [sp, #12]
 801c020:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c022:	444a      	add	r2, r9
 801c024:	4548      	cmp	r0, r9
 801c026:	b292      	uxth	r2, r2
 801c028:	d074      	beq.n	801c114 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c02a:	445a      	add	r2, fp
 801c02c:	2004      	movs	r0, #4
 801c02e:	4605      	mov	r5, r0
 801c030:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c034:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c036:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c03a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c03c:	5880      	ldr	r0, [r0, r2]
 801c03e:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c042:	d014      	beq.n	801c06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c044:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c048:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c04c:	d112      	bne.n	801c074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c04e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c050:	2aff      	cmp	r2, #255	; 0xff
 801c052:	d10f      	bne.n	801c074 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c054:	0942      	lsrs	r2, r0, #5
 801c056:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c05a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c05e:	f025 0507 	bic.w	r5, r5, #7
 801c062:	4315      	orrs	r5, r2
 801c064:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c068:	4305      	orrs	r5, r0
 801c06a:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c06e:	f109 0901 	add.w	r9, r9, #1
 801c072:	e7d4      	b.n	801c01e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c074:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c078:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c07c:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c080:	9215      	str	r2, [sp, #84]	; 0x54
 801c082:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c084:	fb02 fa0a 	mul.w	sl, r2, sl
 801c088:	f10a 0201 	add.w	r2, sl, #1
 801c08c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c090:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c094:	1212      	asrs	r2, r2, #8
 801c096:	fa1f fa82 	uxth.w	sl, r2
 801c09a:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c09e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c0a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c0a6:	43d2      	mvns	r2, r2
 801c0a8:	b2d2      	uxtb	r2, r2
 801c0aa:	fb16 f60a 	smulbb	r6, r6, sl
 801c0ae:	fa5f fc8c 	uxtb.w	ip, ip
 801c0b2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c0b6:	b2c0      	uxtb	r0, r0
 801c0b8:	fb07 6702 	mla	r7, r7, r2, r6
 801c0bc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c0c0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c0c2:	fb10 f00a 	smulbb	r0, r0, sl
 801c0c6:	fb0c 0002 	mla	r0, ip, r2, r0
 801c0ca:	b2ed      	uxtb	r5, r5
 801c0cc:	b2bf      	uxth	r7, r7
 801c0ce:	fb15 f50a 	smulbb	r5, r5, sl
 801c0d2:	b280      	uxth	r0, r0
 801c0d4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c0d8:	fb06 5602 	mla	r6, r6, r2, r5
 801c0dc:	1c7a      	adds	r2, r7, #1
 801c0de:	1c45      	adds	r5, r0, #1
 801c0e0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c0e4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c0e8:	b2b6      	uxth	r6, r6
 801c0ea:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c0ee:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c0f2:	432f      	orrs	r7, r5
 801c0f4:	1c75      	adds	r5, r6, #1
 801c0f6:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c0fa:	096d      	lsrs	r5, r5, #5
 801c0fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c100:	432f      	orrs	r7, r5
 801c102:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c106:	e7b2      	b.n	801c06e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c108:	20012db4 	.word	0x20012db4
 801c10c:	20012dae 	.word	0x20012dae
 801c110:	fffff7fb 	.word	0xfffff7fb
 801c114:	9203      	str	r2, [sp, #12]
 801c116:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c118:	458e      	cmp	lr, r1
 801c11a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c11e:	f4ff af68 	bcc.w	801bff2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c122:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c124:	9906      	ldr	r1, [sp, #24]
 801c126:	8812      	ldrh	r2, [r2, #0]
 801c128:	1a52      	subs	r2, r2, r1
 801c12a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c12e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c130:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c132:	3201      	adds	r2, #1
 801c134:	428a      	cmp	r2, r1
 801c136:	9209      	str	r2, [sp, #36]	; 0x24
 801c138:	d111      	bne.n	801c15e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c13a:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c13e:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c142:	9b06      	ldr	r3, [sp, #24]
 801c144:	eba5 0509 	sub.w	r5, r5, r9
 801c148:	b2ad      	uxth	r5, r5
 801c14a:	2d00      	cmp	r5, #0
 801c14c:	bf08      	it	eq
 801c14e:	4619      	moveq	r1, r3
 801c150:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c152:	bf18      	it	ne
 801c154:	2100      	movne	r1, #0
 801c156:	3301      	adds	r3, #1
 801c158:	930d      	str	r3, [sp, #52]	; 0x34
 801c15a:	b289      	uxth	r1, r1
 801c15c:	e695      	b.n	801be8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c15e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c162:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c166:	1b2d      	subs	r5, r5, r4
 801c168:	b2ad      	uxth	r5, r5
 801c16a:	2d00      	cmp	r5, #0
 801c16c:	bf18      	it	ne
 801c16e:	2400      	movne	r4, #0
 801c170:	e740      	b.n	801bff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c172:	4b04      	ldr	r3, [pc, #16]	; (801c184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c174:	6818      	ldr	r0, [r3, #0]
 801c176:	6803      	ldr	r3, [r0, #0]
 801c178:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c17a:	4798      	blx	r3
 801c17c:	b01d      	add	sp, #116	; 0x74
 801c17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c182:	bf00      	nop
 801c184:	20012db4 	.word	0x20012db4

0801c188 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c188:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c18c:	b09f      	sub	sp, #124	; 0x7c
 801c18e:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c192:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c196:	920a      	str	r2, [sp, #40]	; 0x28
 801c198:	461d      	mov	r5, r3
 801c19a:	4604      	mov	r4, r0
 801c19c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c19e:	2a00      	cmp	r2, #0
 801c1a0:	f000 81fa 	beq.w	801c598 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c1a4:	6828      	ldr	r0, [r5, #0]
 801c1a6:	6869      	ldr	r1, [r5, #4]
 801c1a8:	aa1a      	add	r2, sp, #104	; 0x68
 801c1aa:	c203      	stmia	r2!, {r0, r1}
 801c1ac:	6818      	ldr	r0, [r3, #0]
 801c1ae:	6859      	ldr	r1, [r3, #4]
 801c1b0:	aa1c      	add	r2, sp, #112	; 0x70
 801c1b2:	c203      	stmia	r2!, {r0, r1}
 801c1b4:	a81a      	add	r0, sp, #104	; 0x68
 801c1b6:	f7f8 fb8f 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c1ba:	4629      	mov	r1, r5
 801c1bc:	a81c      	add	r0, sp, #112	; 0x70
 801c1be:	f7f8 fbcf 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c1c2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c1c6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c1ca:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c1ce:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c1d2:	bfd7      	itett	le
 801c1d4:	b29a      	uxthle	r2, r3
 801c1d6:	2201      	movgt	r2, #1
 801c1d8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c1dc:	fb91 f2f2 	sdivle	r2, r1, r2
 801c1e0:	9201      	str	r2, [sp, #4]
 801c1e2:	9801      	ldr	r0, [sp, #4]
 801c1e4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c1e8:	fb92 f0f0 	sdiv	r0, r2, r0
 801c1ec:	b280      	uxth	r0, r0
 801c1ee:	9010      	str	r0, [sp, #64]	; 0x40
 801c1f0:	9901      	ldr	r1, [sp, #4]
 801c1f2:	9801      	ldr	r0, [sp, #4]
 801c1f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c1f6:	440e      	add	r6, r1
 801c1f8:	fb05 2510 	mls	r5, r5, r0, r2
 801c1fc:	fb15 f503 	smulbb	r5, r5, r3
 801c200:	3e01      	subs	r6, #1
 801c202:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c206:	fb96 f6f1 	sdiv	r6, r6, r1
 801c20a:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c20e:	440d      	add	r5, r1
 801c210:	4419      	add	r1, r3
 801c212:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c216:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c21a:	441a      	add	r2, r3
 801c21c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c220:	9304      	str	r3, [sp, #16]
 801c222:	4b96      	ldr	r3, [pc, #600]	; (801c47c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c224:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c228:	6818      	ldr	r0, [r3, #0]
 801c22a:	6803      	ldr	r3, [r0, #0]
 801c22c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c22e:	4798      	blx	r3
 801c230:	4b93      	ldr	r3, [pc, #588]	; (801c480 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c232:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c236:	881a      	ldrh	r2, [r3, #0]
 801c238:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c23c:	9318      	str	r3, [sp, #96]	; 0x60
 801c23e:	fb02 c101 	mla	r1, r2, r1, ip
 801c242:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c246:	4357      	muls	r7, r2
 801c248:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c24c:	3601      	adds	r6, #1
 801c24e:	920b      	str	r2, [sp, #44]	; 0x2c
 801c250:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c252:	4b8c      	ldr	r3, [pc, #560]	; (801c484 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c254:	b2b6      	uxth	r6, r6
 801c256:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c25a:	1d32      	adds	r2, r6, #4
 801c25c:	9206      	str	r2, [sp, #24]
 801c25e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c260:	43d2      	mvns	r2, r2
 801c262:	b2d2      	uxtb	r2, r2
 801c264:	b2ad      	uxth	r5, r5
 801c266:	9215      	str	r2, [sp, #84]	; 0x54
 801c268:	9a04      	ldr	r2, [sp, #16]
 801c26a:	2d00      	cmp	r5, #0
 801c26c:	bf0c      	ite	eq
 801c26e:	4611      	moveq	r1, r2
 801c270:	2100      	movne	r1, #0
 801c272:	2200      	movs	r2, #0
 801c274:	1b1b      	subs	r3, r3, r4
 801c276:	b289      	uxth	r1, r1
 801c278:	920d      	str	r2, [sp, #52]	; 0x34
 801c27a:	9319      	str	r3, [sp, #100]	; 0x64
 801c27c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c27e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c280:	fa12 f383 	uxtah	r3, r2, r3
 801c284:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c286:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c28a:	3304      	adds	r3, #4
 801c28c:	9307      	str	r3, [sp, #28]
 801c28e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c290:	455b      	cmp	r3, fp
 801c292:	f240 817c 	bls.w	801c58e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c296:	9a01      	ldr	r2, [sp, #4]
 801c298:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c29c:	fbb5 f3f3 	udiv	r3, r5, r3
 801c2a0:	1ad3      	subs	r3, r2, r3
 801c2a2:	b29b      	uxth	r3, r3
 801c2a4:	9316      	str	r3, [sp, #88]	; 0x58
 801c2a6:	9b07      	ldr	r3, [sp, #28]
 801c2a8:	9807      	ldr	r0, [sp, #28]
 801c2aa:	785a      	ldrb	r2, [r3, #1]
 801c2ac:	789b      	ldrb	r3, [r3, #2]
 801c2ae:	7800      	ldrb	r0, [r0, #0]
 801c2b0:	9011      	str	r0, [sp, #68]	; 0x44
 801c2b2:	021b      	lsls	r3, r3, #8
 801c2b4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c2b8:	9a07      	ldr	r2, [sp, #28]
 801c2ba:	78d2      	ldrb	r2, [r2, #3]
 801c2bc:	4313      	orrs	r3, r2
 801c2be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c2c0:	3001      	adds	r0, #1
 801c2c2:	441a      	add	r2, r3
 801c2c4:	9005      	str	r0, [sp, #20]
 801c2c6:	1c50      	adds	r0, r2, #1
 801c2c8:	9003      	str	r0, [sp, #12]
 801c2ca:	7852      	ldrb	r2, [r2, #1]
 801c2cc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c2ce:	0212      	lsls	r2, r2, #8
 801c2d0:	5cc3      	ldrb	r3, [r0, r3]
 801c2d2:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c2d6:	431a      	orrs	r2, r3
 801c2d8:	b293      	uxth	r3, r2
 801c2da:	930c      	str	r3, [sp, #48]	; 0x30
 801c2dc:	2300      	movs	r3, #0
 801c2de:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c2e2:	9308      	str	r3, [sp, #32]
 801c2e4:	461a      	mov	r2, r3
 801c2e6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c2ea:	930e      	str	r3, [sp, #56]	; 0x38
 801c2ec:	f04f 0801 	mov.w	r8, #1
 801c2f0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c2f4:	f8cd 8008 	str.w	r8, [sp, #8]
 801c2f8:	46c4      	mov	ip, r8
 801c2fa:	930f      	str	r3, [sp, #60]	; 0x3c
 801c2fc:	2d00      	cmp	r5, #0
 801c2fe:	d07c      	beq.n	801c3fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c300:	45ac      	cmp	ip, r5
 801c302:	d26c      	bcs.n	801c3de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c304:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c306:	eba5 050c 	sub.w	r5, r5, ip
 801c30a:	455b      	cmp	r3, fp
 801c30c:	b2ad      	uxth	r5, r5
 801c30e:	4608      	mov	r0, r1
 801c310:	d802      	bhi.n	801c318 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c312:	e070      	b.n	801c3f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c314:	2b00      	cmp	r3, #0
 801c316:	d15c      	bne.n	801c3d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c318:	9b03      	ldr	r3, [sp, #12]
 801c31a:	9a02      	ldr	r2, [sp, #8]
 801c31c:	785b      	ldrb	r3, [r3, #1]
 801c31e:	9902      	ldr	r1, [sp, #8]
 801c320:	f1c2 0207 	rsb	r2, r2, #7
 801c324:	4093      	lsls	r3, r2
 801c326:	005b      	lsls	r3, r3, #1
 801c328:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c32c:	9b03      	ldr	r3, [sp, #12]
 801c32e:	781b      	ldrb	r3, [r3, #0]
 801c330:	410b      	asrs	r3, r1
 801c332:	3101      	adds	r1, #1
 801c334:	b2c9      	uxtb	r1, r1
 801c336:	2908      	cmp	r1, #8
 801c338:	9102      	str	r1, [sp, #8]
 801c33a:	9903      	ldr	r1, [sp, #12]
 801c33c:	bf0a      	itet	eq
 801c33e:	3102      	addeq	r1, #2
 801c340:	3101      	addne	r1, #1
 801c342:	9103      	streq	r1, [sp, #12]
 801c344:	b2db      	uxtb	r3, r3
 801c346:	bf0a      	itet	eq
 801c348:	2100      	moveq	r1, #0
 801c34a:	9103      	strne	r1, [sp, #12]
 801c34c:	9102      	streq	r1, [sp, #8]
 801c34e:	4313      	orrs	r3, r2
 801c350:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c352:	b29a      	uxth	r2, r3
 801c354:	4291      	cmp	r1, r2
 801c356:	d30a      	bcc.n	801c36e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c358:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c35c:	2301      	movs	r3, #1
 801c35e:	9905      	ldr	r1, [sp, #20]
 801c360:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c364:	d30f      	bcc.n	801c386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c366:	2100      	movs	r1, #0
 801c368:	4698      	mov	r8, r3
 801c36a:	9100      	str	r1, [sp, #0]
 801c36c:	e032      	b.n	801c3d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c36e:	9b05      	ldr	r3, [sp, #20]
 801c370:	429a      	cmp	r2, r3
 801c372:	d318      	bcc.n	801c3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c374:	eb04 0308 	add.w	r3, r4, r8
 801c378:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c37c:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c380:	f108 0301 	add.w	r3, r8, #1
 801c384:	b29b      	uxth	r3, r3
 801c386:	9905      	ldr	r1, [sp, #20]
 801c388:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c38c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c390:	710e      	strb	r6, [r1, #4]
 801c392:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c394:	80ce      	strh	r6, [r1, #6]
 801c396:	f108 0601 	add.w	r6, r8, #1
 801c39a:	714e      	strb	r6, [r1, #5]
 801c39c:	9905      	ldr	r1, [sp, #20]
 801c39e:	3101      	adds	r1, #1
 801c3a0:	b289      	uxth	r1, r1
 801c3a2:	9105      	str	r1, [sp, #20]
 801c3a4:	e7df      	b.n	801c366 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c3a6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c3aa:	4611      	mov	r1, r2
 801c3ac:	795b      	ldrb	r3, [r3, #5]
 801c3ae:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c3b2:	4426      	add	r6, r4
 801c3b4:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c3b6:	4437      	add	r7, r6
 801c3b8:	2f00      	cmp	r7, #0
 801c3ba:	dd06      	ble.n	801c3ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c3bc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c3c0:	790f      	ldrb	r7, [r1, #4]
 801c3c2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c3c6:	88c9      	ldrh	r1, [r1, #6]
 801c3c8:	e7f4      	b.n	801c3b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c3ca:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c3ce:	b29b      	uxth	r3, r3
 801c3d0:	e7c5      	b.n	801c35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c3d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c3d4:	920c      	str	r2, [sp, #48]	; 0x30
 801c3d6:	4601      	mov	r1, r0
 801c3d8:	9a00      	ldr	r2, [sp, #0]
 801c3da:	469c      	mov	ip, r3
 801c3dc:	e78e      	b.n	801c2fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c3de:	1957      	adds	r7, r2, r5
 801c3e0:	ebac 0305 	sub.w	r3, ip, r5
 801c3e4:	b2ba      	uxth	r2, r7
 801c3e6:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c3ea:	9200      	str	r2, [sp, #0]
 801c3ec:	b29b      	uxth	r3, r3
 801c3ee:	2500      	movs	r5, #0
 801c3f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c3f2:	455a      	cmp	r2, fp
 801c3f4:	d88e      	bhi.n	801c314 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c3f6:	4601      	mov	r1, r0
 801c3f8:	e749      	b.n	801c28e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c3fa:	458c      	cmp	ip, r1
 801c3fc:	bf2c      	ite	cs
 801c3fe:	4628      	movcs	r0, r5
 801c400:	462b      	movcc	r3, r5
 801c402:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c404:	bf27      	ittee	cs
 801c406:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c408:	ebac 0301 	subcs.w	r3, ip, r1
 801c40c:	eba1 000c 	subcc.w	r0, r1, ip
 801c410:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c414:	bf2c      	ite	cs
 801c416:	b29b      	uxthcs	r3, r3
 801c418:	b280      	uxthcc	r0, r0
 801c41a:	2dff      	cmp	r5, #255	; 0xff
 801c41c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c41e:	eb02 0705 	add.w	r7, r2, r5
 801c422:	b2bd      	uxth	r5, r7
 801c424:	9500      	str	r5, [sp, #0]
 801c426:	d12f      	bne.n	801c488 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c428:	465e      	mov	r6, fp
 801c42a:	9d00      	ldr	r5, [sp, #0]
 801c42c:	42aa      	cmp	r2, r5
 801c42e:	f040 8084 	bne.w	801c53a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c432:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c434:	458c      	cmp	ip, r1
 801c436:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c43a:	d3d8      	bcc.n	801c3ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c43c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c43e:	9904      	ldr	r1, [sp, #16]
 801c440:	8812      	ldrh	r2, [r2, #0]
 801c442:	1a52      	subs	r2, r2, r1
 801c444:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c448:	9a08      	ldr	r2, [sp, #32]
 801c44a:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c44c:	3201      	adds	r2, #1
 801c44e:	428a      	cmp	r2, r1
 801c450:	9208      	str	r2, [sp, #32]
 801c452:	f040 8092 	bne.w	801c57a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c456:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c45a:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c45e:	9b04      	ldr	r3, [sp, #16]
 801c460:	eba5 050c 	sub.w	r5, r5, ip
 801c464:	b2ad      	uxth	r5, r5
 801c466:	2d00      	cmp	r5, #0
 801c468:	bf08      	it	eq
 801c46a:	4619      	moveq	r1, r3
 801c46c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c46e:	bf18      	it	ne
 801c470:	2100      	movne	r1, #0
 801c472:	3301      	adds	r3, #1
 801c474:	930d      	str	r3, [sp, #52]	; 0x34
 801c476:	b289      	uxth	r1, r1
 801c478:	e700      	b.n	801c27c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c47a:	bf00      	nop
 801c47c:	20012db4 	.word	0x20012db4
 801c480:	20012dae 	.word	0x20012dae
 801c484:	fffff7fb 	.word	0xfffff7fb
 801c488:	46d9      	mov	r9, fp
 801c48a:	9d00      	ldr	r5, [sp, #0]
 801c48c:	42aa      	cmp	r2, r5
 801c48e:	d0d0      	beq.n	801c432 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c490:	1c55      	adds	r5, r2, #1
 801c492:	4422      	add	r2, r4
 801c494:	9517      	str	r5, [sp, #92]	; 0x5c
 801c496:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c49a:	9a06      	ldr	r2, [sp, #24]
 801c49c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c4a0:	4472      	add	r2, lr
 801c4a2:	9212      	str	r2, [sp, #72]	; 0x48
 801c4a4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c4a6:	f8b9 2000 	ldrh.w	r2, [r9]
 801c4aa:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c4ae:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c4b0:	1216      	asrs	r6, r2, #8
 801c4b2:	fb1a fa07 	smulbb	sl, sl, r7
 801c4b6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c4ba:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c4bc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c4c0:	fb06 a607 	mla	r6, r6, r7, sl
 801c4c4:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c4c6:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c4ca:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c4cc:	10d5      	asrs	r5, r2, #3
 801c4ce:	fb1a fa07 	smulbb	sl, sl, r7
 801c4d2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c4d6:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c4d8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c4dc:	fb05 a507 	mla	r5, r5, r7, sl
 801c4e0:	9f06      	ldr	r7, [sp, #24]
 801c4e2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c4e6:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c4e8:	00d2      	lsls	r2, r2, #3
 801c4ea:	fb1e fe07 	smulbb	lr, lr, r7
 801c4ee:	b2d2      	uxtb	r2, r2
 801c4f0:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c4f2:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c4f6:	b2b6      	uxth	r6, r6
 801c4f8:	fb02 e207 	mla	r2, r2, r7, lr
 801c4fc:	b292      	uxth	r2, r2
 801c4fe:	b2ad      	uxth	r5, r5
 801c500:	f106 0a01 	add.w	sl, r6, #1
 801c504:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c508:	f102 0e01 	add.w	lr, r2, #1
 801c50c:	f105 0a01 	add.w	sl, r5, #1
 801c510:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c514:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c518:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c51c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c520:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c524:	ea4e 0606 	orr.w	r6, lr, r6
 801c528:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c52c:	ea46 060a 	orr.w	r6, r6, sl
 801c530:	f829 6b02 	strh.w	r6, [r9], #2
 801c534:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c538:	e7a7      	b.n	801c48a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c53a:	f102 0e01 	add.w	lr, r2, #1
 801c53e:	4422      	add	r2, r4
 801c540:	9f06      	ldr	r7, [sp, #24]
 801c542:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c546:	9a06      	ldr	r2, [sp, #24]
 801c548:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c54c:	eb02 0a05 	add.w	sl, r2, r5
 801c550:	4a13      	ldr	r2, [pc, #76]	; (801c5a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c552:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c556:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c55a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c55e:	00d2      	lsls	r2, r2, #3
 801c560:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c564:	ea49 0202 	orr.w	r2, r9, r2
 801c568:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c56c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c570:	f826 2b02 	strh.w	r2, [r6], #2
 801c574:	fa1f f28e 	uxth.w	r2, lr
 801c578:	e757      	b.n	801c42a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c57a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c57e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c582:	1a2d      	subs	r5, r5, r0
 801c584:	b2ad      	uxth	r5, r5
 801c586:	2d00      	cmp	r5, #0
 801c588:	bf18      	it	ne
 801c58a:	2000      	movne	r0, #0
 801c58c:	e730      	b.n	801c3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c58e:	4b05      	ldr	r3, [pc, #20]	; (801c5a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c590:	6818      	ldr	r0, [r3, #0]
 801c592:	6803      	ldr	r3, [r0, #0]
 801c594:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c596:	4798      	blx	r3
 801c598:	b01f      	add	sp, #124	; 0x7c
 801c59a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c59e:	bf00      	nop
 801c5a0:	fffff800 	.word	0xfffff800
 801c5a4:	20012db4 	.word	0x20012db4

0801c5a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c5ac:	b091      	sub	sp, #68	; 0x44
 801c5ae:	469b      	mov	fp, r3
 801c5b0:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c5b4:	4616      	mov	r6, r2
 801c5b6:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c5ba:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c5be:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c5c2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c5c6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c5ca:	4604      	mov	r4, r0
 801c5cc:	460d      	mov	r5, r1
 801c5ce:	4640      	mov	r0, r8
 801c5d0:	4659      	mov	r1, fp
 801c5d2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c5d6:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c5da:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c5de:	f7f3 fa1d 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801c5e2:	4631      	mov	r1, r6
 801c5e4:	4640      	mov	r0, r8
 801c5e6:	f7f3 fa19 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801c5ea:	4b74      	ldr	r3, [pc, #464]	; (801c7bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c5ec:	8818      	ldrh	r0, [r3, #0]
 801c5ee:	4b74      	ldr	r3, [pc, #464]	; (801c7c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c5f0:	8819      	ldrh	r1, [r3, #0]
 801c5f2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c5f6:	2b00      	cmp	r3, #0
 801c5f8:	b202      	sxth	r2, r0
 801c5fa:	b20e      	sxth	r6, r1
 801c5fc:	da07      	bge.n	801c60e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c5fe:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c602:	4463      	add	r3, ip
 801c604:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c608:	2300      	movs	r3, #0
 801c60a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c60e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c612:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c616:	1ad2      	subs	r2, r2, r3
 801c618:	4594      	cmp	ip, r2
 801c61a:	bfc4      	itt	gt
 801c61c:	1ac2      	subgt	r2, r0, r3
 801c61e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c622:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c626:	2a00      	cmp	r2, #0
 801c628:	da07      	bge.n	801c63a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c62a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c62e:	4462      	add	r2, ip
 801c630:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c634:	2200      	movs	r2, #0
 801c636:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c63a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c63e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c642:	eba6 060a 	sub.w	r6, r6, sl
 801c646:	42b2      	cmp	r2, r6
 801c648:	bfc4      	itt	gt
 801c64a:	eba1 020a 	subgt.w	r2, r1, sl
 801c64e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c652:	4a5c      	ldr	r2, [pc, #368]	; (801c7c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c654:	7812      	ldrb	r2, [r2, #0]
 801c656:	b9a2      	cbnz	r2, 801c682 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c658:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c65c:	4286      	cmp	r6, r0
 801c65e:	4640      	mov	r0, r8
 801c660:	9303      	str	r3, [sp, #12]
 801c662:	bf14      	ite	ne
 801c664:	2600      	movne	r6, #0
 801c666:	2601      	moveq	r6, #1
 801c668:	f7f3 fa1b 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c66c:	9b03      	ldr	r3, [sp, #12]
 801c66e:	b160      	cbz	r0, 801c68a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c670:	2300      	movs	r3, #0
 801c672:	8023      	strh	r3, [r4, #0]
 801c674:	8063      	strh	r3, [r4, #2]
 801c676:	80a3      	strh	r3, [r4, #4]
 801c678:	4620      	mov	r0, r4
 801c67a:	80e3      	strh	r3, [r4, #6]
 801c67c:	b011      	add	sp, #68	; 0x44
 801c67e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c682:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c686:	428e      	cmp	r6, r1
 801c688:	e7e9      	b.n	801c65e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c68a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c68e:	9205      	str	r2, [sp, #20]
 801c690:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c694:	9206      	str	r2, [sp, #24]
 801c696:	f8bb 2000 	ldrh.w	r2, [fp]
 801c69a:	900e      	str	r0, [sp, #56]	; 0x38
 801c69c:	1a9b      	subs	r3, r3, r2
 801c69e:	b21b      	sxth	r3, r3
 801c6a0:	9303      	str	r3, [sp, #12]
 801c6a2:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c6a6:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c6aa:	ebaa 0a03 	sub.w	sl, sl, r3
 801c6ae:	fa0f f38a 	sxth.w	r3, sl
 801c6b2:	9304      	str	r3, [sp, #16]
 801c6b4:	9b03      	ldr	r3, [sp, #12]
 801c6b6:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c6ba:	9b04      	ldr	r3, [sp, #16]
 801c6bc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c6c0:	9b05      	ldr	r3, [sp, #20]
 801c6c2:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c6c6:	a90e      	add	r1, sp, #56	; 0x38
 801c6c8:	9b06      	ldr	r3, [sp, #24]
 801c6ca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c6ce:	a80c      	add	r0, sp, #48	; 0x30
 801c6d0:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c6d4:	f7f8 f944 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c6d8:	4640      	mov	r0, r8
 801c6da:	f7f8 f8fd 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6de:	a80e      	add	r0, sp, #56	; 0x38
 801c6e0:	f7f8 f8fa 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6e4:	4b38      	ldr	r3, [pc, #224]	; (801c7c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c6e6:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c6ea:	881b      	ldrh	r3, [r3, #0]
 801c6ec:	9307      	str	r3, [sp, #28]
 801c6ee:	682b      	ldr	r3, [r5, #0]
 801c6f0:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c7cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c6f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c6f6:	4628      	mov	r0, r5
 801c6f8:	4798      	blx	r3
 801c6fa:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c6fe:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c702:	4681      	mov	r9, r0
 801c704:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c708:	f8db 0000 	ldr.w	r0, [fp]
 801c70c:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c70e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c712:	6803      	ldr	r3, [r0, #0]
 801c714:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c716:	4798      	blx	r3
 801c718:	4607      	mov	r7, r0
 801c71a:	f8db 0000 	ldr.w	r0, [fp]
 801c71e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c722:	6803      	ldr	r3, [r0, #0]
 801c724:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c728:	9109      	str	r1, [sp, #36]	; 0x24
 801c72a:	9208      	str	r2, [sp, #32]
 801c72c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c72e:	4798      	blx	r3
 801c730:	f010 0f01 	tst.w	r0, #1
 801c734:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c738:	d012      	beq.n	801c760 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c73a:	f8db 0000 	ldr.w	r0, [fp]
 801c73e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c742:	6803      	ldr	r3, [r0, #0]
 801c744:	9200      	str	r2, [sp, #0]
 801c746:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c748:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c74c:	462b      	mov	r3, r5
 801c74e:	47b0      	blx	r6
 801c750:	9b03      	ldr	r3, [sp, #12]
 801c752:	8023      	strh	r3, [r4, #0]
 801c754:	9b04      	ldr	r3, [sp, #16]
 801c756:	8063      	strh	r3, [r4, #2]
 801c758:	9b05      	ldr	r3, [sp, #20]
 801c75a:	80a3      	strh	r3, [r4, #4]
 801c75c:	9b06      	ldr	r3, [sp, #24]
 801c75e:	e78b      	b.n	801c678 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c760:	fb09 f202 	mul.w	r2, r9, r2
 801c764:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c768:	440f      	add	r7, r1
 801c76a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c76e:	b166      	cbz	r6, 801c78a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c770:	9a07      	ldr	r2, [sp, #28]
 801c772:	4592      	cmp	sl, r2
 801c774:	d109      	bne.n	801c78a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c776:	f8db 0000 	ldr.w	r0, [fp]
 801c77a:	6802      	ldr	r2, [r0, #0]
 801c77c:	fb09 f303 	mul.w	r3, r9, r3
 801c780:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c782:	4629      	mov	r1, r5
 801c784:	463a      	mov	r2, r7
 801c786:	47b0      	blx	r6
 801c788:	e7e2      	b.n	801c750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c78a:	fb0a f303 	mul.w	r3, sl, r3
 801c78e:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c7cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c792:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c796:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c79a:	4545      	cmp	r5, r8
 801c79c:	d2d8      	bcs.n	801c750 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c79e:	f8db 0000 	ldr.w	r0, [fp]
 801c7a2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c7a6:	6802      	ldr	r2, [r0, #0]
 801c7a8:	4629      	mov	r1, r5
 801c7aa:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c7ae:	005b      	lsls	r3, r3, #1
 801c7b0:	463a      	mov	r2, r7
 801c7b2:	47d0      	blx	sl
 801c7b4:	444f      	add	r7, r9
 801c7b6:	4435      	add	r5, r6
 801c7b8:	e7ef      	b.n	801c79a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c7ba:	bf00      	nop
 801c7bc:	20012da8 	.word	0x20012da8
 801c7c0:	20012daa 	.word	0x20012daa
 801c7c4:	20012dac 	.word	0x20012dac
 801c7c8:	20012dae 	.word	0x20012dae
 801c7cc:	20012db4 	.word	0x20012db4

0801c7d0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c7d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c7d2:	4606      	mov	r6, r0
 801c7d4:	b087      	sub	sp, #28
 801c7d6:	460c      	mov	r4, r1
 801c7d8:	4617      	mov	r7, r2
 801c7da:	461d      	mov	r5, r3
 801c7dc:	b333      	cbz	r3, 801c82c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c7de:	4608      	mov	r0, r1
 801c7e0:	f7f3 f95f 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c7e4:	bb10      	cbnz	r0, 801c82c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c7e6:	6820      	ldr	r0, [r4, #0]
 801c7e8:	6861      	ldr	r1, [r4, #4]
 801c7ea:	4c1c      	ldr	r4, [pc, #112]	; (801c85c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c7ec:	ab04      	add	r3, sp, #16
 801c7ee:	c303      	stmia	r3!, {r0, r1}
 801c7f0:	a804      	add	r0, sp, #16
 801c7f2:	f7f8 f871 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7f6:	6820      	ldr	r0, [r4, #0]
 801c7f8:	6803      	ldr	r3, [r0, #0]
 801c7fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7fc:	4798      	blx	r3
 801c7fe:	2dff      	cmp	r5, #255	; 0xff
 801c800:	d016      	beq.n	801c830 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c802:	f010 0f08 	tst.w	r0, #8
 801c806:	6820      	ldr	r0, [r4, #0]
 801c808:	d015      	beq.n	801c836 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c80a:	2400      	movs	r4, #0
 801c80c:	6801      	ldr	r1, [r0, #0]
 801c80e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c812:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c816:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c81a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c81e:	9401      	str	r4, [sp, #4]
 801c820:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c824:	9400      	str	r4, [sp, #0]
 801c826:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c828:	4639      	mov	r1, r7
 801c82a:	47a0      	blx	r4
 801c82c:	b007      	add	sp, #28
 801c82e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c830:	f010 0f02 	tst.w	r0, #2
 801c834:	e7e7      	b.n	801c806 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c836:	6803      	ldr	r3, [r0, #0]
 801c838:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c83a:	4798      	blx	r3
 801c83c:	4b08      	ldr	r3, [pc, #32]	; (801c860 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c83e:	881a      	ldrh	r2, [r3, #0]
 801c840:	6833      	ldr	r3, [r6, #0]
 801c842:	e9cd 7500 	strd	r7, r5, [sp]
 801c846:	4601      	mov	r1, r0
 801c848:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c84a:	4630      	mov	r0, r6
 801c84c:	ab04      	add	r3, sp, #16
 801c84e:	47a8      	blx	r5
 801c850:	6820      	ldr	r0, [r4, #0]
 801c852:	6803      	ldr	r3, [r0, #0]
 801c854:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c856:	4798      	blx	r3
 801c858:	e7e8      	b.n	801c82c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c85a:	bf00      	nop
 801c85c:	20012db4 	.word	0x20012db4
 801c860:	20012dae 	.word	0x20012dae

0801c864 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c864:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c868:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c86c:	9e08      	ldr	r6, [sp, #32]
 801c86e:	4688      	mov	r8, r1
 801c870:	4614      	mov	r4, r2
 801c872:	461d      	mov	r5, r3
 801c874:	2f00      	cmp	r7, #0
 801c876:	f000 80a9 	beq.w	801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c87a:	4618      	mov	r0, r3
 801c87c:	f7f3 f911 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c880:	2800      	cmp	r0, #0
 801c882:	f040 80a3 	bne.w	801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c886:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c88a:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c88e:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c892:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c896:	fb04 1303 	mla	r3, r4, r3, r1
 801c89a:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c89e:	4365      	muls	r5, r4
 801c8a0:	2fff      	cmp	r7, #255	; 0xff
 801c8a2:	eba4 0200 	sub.w	r2, r4, r0
 801c8a6:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c8aa:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c8ae:	d04a      	beq.n	801c946 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c8b0:	b2bc      	uxth	r4, r7
 801c8b2:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c8b6:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c8ba:	fa5f f788 	uxtb.w	r7, r8
 801c8be:	b2f3      	uxtb	r3, r6
 801c8c0:	0040      	lsls	r0, r0, #1
 801c8c2:	fb0e fe04 	mul.w	lr, lr, r4
 801c8c6:	4367      	muls	r7, r4
 801c8c8:	4363      	muls	r3, r4
 801c8ca:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c8ce:	fa1f fc8c 	uxth.w	ip, ip
 801c8d2:	42a9      	cmp	r1, r5
 801c8d4:	d27a      	bcs.n	801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8d6:	eb01 0900 	add.w	r9, r1, r0
 801c8da:	4549      	cmp	r1, r9
 801c8dc:	d231      	bcs.n	801c942 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c8de:	880a      	ldrh	r2, [r1, #0]
 801c8e0:	1214      	asrs	r4, r2, #8
 801c8e2:	10d6      	asrs	r6, r2, #3
 801c8e4:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c8e8:	00d2      	lsls	r2, r2, #3
 801c8ea:	b2d2      	uxtb	r2, r2
 801c8ec:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c8f0:	fb14 f40c 	smulbb	r4, r4, ip
 801c8f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c8f8:	4474      	add	r4, lr
 801c8fa:	fb12 f20c 	smulbb	r2, r2, ip
 801c8fe:	b2a4      	uxth	r4, r4
 801c900:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c904:	441a      	add	r2, r3
 801c906:	b292      	uxth	r2, r2
 801c908:	f104 0a01 	add.w	sl, r4, #1
 801c90c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c910:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c914:	fb16 f60c 	smulbb	r6, r6, ip
 801c918:	f102 0a01 	add.w	sl, r2, #1
 801c91c:	443e      	add	r6, r7
 801c91e:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c922:	b2b6      	uxth	r6, r6
 801c924:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c928:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c92c:	4322      	orrs	r2, r4
 801c92e:	1c74      	adds	r4, r6, #1
 801c930:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c934:	0976      	lsrs	r6, r6, #5
 801c936:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c93a:	4332      	orrs	r2, r6
 801c93c:	f821 2b02 	strh.w	r2, [r1], #2
 801c940:	e7cb      	b.n	801c8da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c942:	4441      	add	r1, r8
 801c944:	e7c5      	b.n	801c8d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c946:	4f22      	ldr	r7, [pc, #136]	; (801c9d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c948:	0973      	lsrs	r3, r6, #5
 801c94a:	ea08 0707 	and.w	r7, r8, r7
 801c94e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c952:	433b      	orrs	r3, r7
 801c954:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c958:	4333      	orrs	r3, r6
 801c95a:	07e7      	lsls	r7, r4, #31
 801c95c:	b29b      	uxth	r3, r3
 801c95e:	d50b      	bpl.n	801c978 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c960:	0040      	lsls	r0, r0, #1
 801c962:	0052      	lsls	r2, r2, #1
 801c964:	42a9      	cmp	r1, r5
 801c966:	d231      	bcs.n	801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c968:	180c      	adds	r4, r1, r0
 801c96a:	42a1      	cmp	r1, r4
 801c96c:	d202      	bcs.n	801c974 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c96e:	f821 3b02 	strh.w	r3, [r1], #2
 801c972:	e7fa      	b.n	801c96a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c974:	4411      	add	r1, r2
 801c976:	e7f5      	b.n	801c964 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c978:	078e      	lsls	r6, r1, #30
 801c97a:	d008      	beq.n	801c98e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c97c:	0066      	lsls	r6, r4, #1
 801c97e:	460a      	mov	r2, r1
 801c980:	42aa      	cmp	r2, r5
 801c982:	d202      	bcs.n	801c98a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c984:	8013      	strh	r3, [r2, #0]
 801c986:	4432      	add	r2, r6
 801c988:	e7fa      	b.n	801c980 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c98a:	3102      	adds	r1, #2
 801c98c:	3801      	subs	r0, #1
 801c98e:	07c2      	lsls	r2, r0, #31
 801c990:	d50b      	bpl.n	801c9aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c992:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c996:	3a01      	subs	r2, #1
 801c998:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c99c:	0066      	lsls	r6, r4, #1
 801c99e:	42aa      	cmp	r2, r5
 801c9a0:	d202      	bcs.n	801c9a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c9a2:	8013      	strh	r3, [r2, #0]
 801c9a4:	4432      	add	r2, r6
 801c9a6:	e7fa      	b.n	801c99e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c9a8:	3801      	subs	r0, #1
 801c9aa:	b178      	cbz	r0, 801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c9ac:	1040      	asrs	r0, r0, #1
 801c9ae:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c9b2:	0080      	lsls	r0, r0, #2
 801c9b4:	0064      	lsls	r4, r4, #1
 801c9b6:	42a9      	cmp	r1, r5
 801c9b8:	d208      	bcs.n	801c9cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c9ba:	180e      	adds	r6, r1, r0
 801c9bc:	460a      	mov	r2, r1
 801c9be:	42b2      	cmp	r2, r6
 801c9c0:	d202      	bcs.n	801c9c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c9c2:	f842 3b04 	str.w	r3, [r2], #4
 801c9c6:	e7fa      	b.n	801c9be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c9c8:	4421      	add	r1, r4
 801c9ca:	e7f4      	b.n	801c9b6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c9cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c9d0:	00fff800 	.word	0x00fff800

0801c9d4 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c9d4:	2200      	movs	r2, #0
 801c9d6:	4912      	ldr	r1, [pc, #72]	; (801ca20 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c9d8:	6042      	str	r2, [r0, #4]
 801c9da:	6001      	str	r1, [r0, #0]
 801c9dc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c9e0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c9e4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c9e8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c9ec:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c9f0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c9f4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c9f8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c9fc:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801ca00:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801ca04:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801ca08:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801ca0c:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801ca10:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801ca14:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801ca18:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801ca1c:	4770      	bx	lr
 801ca1e:	bf00      	nop
 801ca20:	0802e538 	.word	0x0802e538

0801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801ca24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ca28:	460d      	mov	r5, r1
 801ca2a:	b08d      	sub	sp, #52	; 0x34
 801ca2c:	4604      	mov	r4, r0
 801ca2e:	6808      	ldr	r0, [r1, #0]
 801ca30:	6849      	ldr	r1, [r1, #4]
 801ca32:	4699      	mov	r9, r3
 801ca34:	ab08      	add	r3, sp, #32
 801ca36:	c303      	stmia	r3!, {r0, r1}
 801ca38:	6810      	ldr	r0, [r2, #0]
 801ca3a:	6851      	ldr	r1, [r2, #4]
 801ca3c:	ab0a      	add	r3, sp, #40	; 0x28
 801ca3e:	c303      	stmia	r3!, {r0, r1}
 801ca40:	a808      	add	r0, sp, #32
 801ca42:	f7f7 ff49 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca46:	4629      	mov	r1, r5
 801ca48:	a80a      	add	r0, sp, #40	; 0x28
 801ca4a:	f7f7 ff89 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca4e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ca52:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ca56:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ca5a:	4d63      	ldr	r5, [pc, #396]	; (801cbe8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ca5c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ca60:	6828      	ldr	r0, [r5, #0]
 801ca62:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ca66:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ca6a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ca6e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ca72:	440a      	add	r2, r1
 801ca74:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ca78:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ca7c:	4413      	add	r3, r2
 801ca7e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ca82:	6803      	ldr	r3, [r0, #0]
 801ca84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca86:	4798      	blx	r3
 801ca88:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca8c:	d119      	bne.n	801cac2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ca8e:	f010 0f20 	tst.w	r0, #32
 801ca92:	6828      	ldr	r0, [r5, #0]
 801ca94:	d018      	beq.n	801cac8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ca96:	2500      	movs	r5, #0
 801ca98:	6801      	ldr	r1, [r0, #0]
 801ca9a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ca9e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801caa2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801caa6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801caaa:	9502      	str	r5, [sp, #8]
 801caac:	b2b6      	uxth	r6, r6
 801caae:	fa1f f588 	uxth.w	r5, r8
 801cab2:	9601      	str	r6, [sp, #4]
 801cab4:	9500      	str	r5, [sp, #0]
 801cab6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cab8:	4621      	mov	r1, r4
 801caba:	47a8      	blx	r5
 801cabc:	b00d      	add	sp, #52	; 0x34
 801cabe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cac2:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cac6:	e7e4      	b.n	801ca92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cac8:	6803      	ldr	r3, [r0, #0]
 801caca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cacc:	4798      	blx	r3
 801cace:	4947      	ldr	r1, [pc, #284]	; (801cbec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cad0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cad4:	880b      	ldrh	r3, [r1, #0]
 801cad6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cada:	fb03 5202 	mla	r2, r3, r2, r5
 801cade:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cae2:	4373      	muls	r3, r6
 801cae4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cae8:	9307      	str	r3, [sp, #28]
 801caea:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801caee:	9306      	str	r3, [sp, #24]
 801caf0:	468a      	mov	sl, r1
 801caf2:	9b07      	ldr	r3, [sp, #28]
 801caf4:	4298      	cmp	r0, r3
 801caf6:	d270      	bcs.n	801cbda <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801caf8:	9b06      	ldr	r3, [sp, #24]
 801cafa:	4621      	mov	r1, r4
 801cafc:	eb00 0b03 	add.w	fp, r0, r3
 801cb00:	4558      	cmp	r0, fp
 801cb02:	d25d      	bcs.n	801cbc0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cb04:	f851 4b04 	ldr.w	r4, [r1], #4
 801cb08:	0e23      	lsrs	r3, r4, #24
 801cb0a:	d014      	beq.n	801cb36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cb0c:	2bff      	cmp	r3, #255	; 0xff
 801cb0e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801cb12:	d112      	bne.n	801cb3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cb14:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cb18:	d10f      	bne.n	801cb3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cb1a:	0963      	lsrs	r3, r4, #5
 801cb1c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cb20:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cb24:	f02c 0c07 	bic.w	ip, ip, #7
 801cb28:	ea43 0c0c 	orr.w	ip, r3, ip
 801cb2c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cb30:	ea4c 0404 	orr.w	r4, ip, r4
 801cb34:	8004      	strh	r4, [r0, #0]
 801cb36:	3002      	adds	r0, #2
 801cb38:	e7e2      	b.n	801cb00 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801cb3a:	fb09 f303 	mul.w	r3, r9, r3
 801cb3e:	8807      	ldrh	r7, [r0, #0]
 801cb40:	1c5a      	adds	r2, r3, #1
 801cb42:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cb46:	1212      	asrs	r2, r2, #8
 801cb48:	123e      	asrs	r6, r7, #8
 801cb4a:	b293      	uxth	r3, r2
 801cb4c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cb50:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb54:	43d2      	mvns	r2, r2
 801cb56:	b2d2      	uxtb	r2, r2
 801cb58:	10fd      	asrs	r5, r7, #3
 801cb5a:	fb1e fe03 	smulbb	lr, lr, r3
 801cb5e:	00ff      	lsls	r7, r7, #3
 801cb60:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cb64:	fb06 e602 	mla	r6, r6, r2, lr
 801cb68:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb6c:	b2ff      	uxtb	r7, r7
 801cb6e:	fa5f fc8c 	uxtb.w	ip, ip
 801cb72:	b2e4      	uxtb	r4, r4
 801cb74:	b2b6      	uxth	r6, r6
 801cb76:	fb1c fc03 	smulbb	ip, ip, r3
 801cb7a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cb7e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cb82:	fb14 f403 	smulbb	r4, r4, r3
 801cb86:	fb05 c502 	mla	r5, r5, r2, ip
 801cb8a:	f106 0e01 	add.w	lr, r6, #1
 801cb8e:	fb07 4702 	mla	r7, r7, r2, r4
 801cb92:	b2ad      	uxth	r5, r5
 801cb94:	b2bf      	uxth	r7, r7
 801cb96:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cb9a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cb9e:	f105 0c01 	add.w	ip, r5, #1
 801cba2:	1c7e      	adds	r6, r7, #1
 801cba4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cba8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cbac:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cbb0:	096d      	lsrs	r5, r5, #5
 801cbb2:	ea46 060e 	orr.w	r6, r6, lr
 801cbb6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cbba:	432e      	orrs	r6, r5
 801cbbc:	8006      	strh	r6, [r0, #0]
 801cbbe:	e7ba      	b.n	801cb36 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cbc0:	f8ba 3000 	ldrh.w	r3, [sl]
 801cbc4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cbc8:	eba3 0308 	sub.w	r3, r3, r8
 801cbcc:	eba4 0408 	sub.w	r4, r4, r8
 801cbd0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cbd4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cbd8:	e78b      	b.n	801caf2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cbda:	4b03      	ldr	r3, [pc, #12]	; (801cbe8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cbdc:	6818      	ldr	r0, [r3, #0]
 801cbde:	6803      	ldr	r3, [r0, #0]
 801cbe0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cbe2:	4798      	blx	r3
 801cbe4:	e76a      	b.n	801cabc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cbe6:	bf00      	nop
 801cbe8:	20012db4 	.word	0x20012db4
 801cbec:	20012dae 	.word	0x20012dae

0801cbf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cbf0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cbf4:	460c      	mov	r4, r1
 801cbf6:	b085      	sub	sp, #20
 801cbf8:	6810      	ldr	r0, [r2, #0]
 801cbfa:	6851      	ldr	r1, [r2, #4]
 801cbfc:	466d      	mov	r5, sp
 801cbfe:	c503      	stmia	r5!, {r0, r1}
 801cc00:	6818      	ldr	r0, [r3, #0]
 801cc02:	6859      	ldr	r1, [r3, #4]
 801cc04:	4616      	mov	r6, r2
 801cc06:	c503      	stmia	r5!, {r0, r1}
 801cc08:	4668      	mov	r0, sp
 801cc0a:	f7f7 fe65 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc0e:	4631      	mov	r1, r6
 801cc10:	a802      	add	r0, sp, #8
 801cc12:	f7f7 fea5 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc16:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cc1a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cc1e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cc22:	4d28      	ldr	r5, [pc, #160]	; (801ccc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cc24:	4e28      	ldr	r6, [pc, #160]	; (801ccc8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cc26:	6828      	ldr	r0, [r5, #0]
 801cc28:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cc2c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cc30:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc34:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cc38:	f8bd 1000 	ldrh.w	r1, [sp]
 801cc3c:	440a      	add	r2, r1
 801cc3e:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cc42:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cc46:	4413      	add	r3, r2
 801cc48:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cc4c:	6803      	ldr	r3, [r0, #0]
 801cc4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc50:	4798      	blx	r3
 801cc52:	8833      	ldrh	r3, [r6, #0]
 801cc54:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cc58:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cc5c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cccc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cc60:	fb03 1202 	mla	r2, r3, r2, r1
 801cc64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc68:	fb08 f303 	mul.w	r3, r8, r3
 801cc6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cc70:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cc74:	4298      	cmp	r0, r3
 801cc76:	d21d      	bcs.n	801ccb4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cc78:	eb00 080c 	add.w	r8, r0, ip
 801cc7c:	4540      	cmp	r0, r8
 801cc7e:	d20f      	bcs.n	801cca0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cc80:	f854 1b04 	ldr.w	r1, [r4], #4
 801cc84:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cc88:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cc8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc90:	ea42 0209 	orr.w	r2, r2, r9
 801cc94:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cc98:	430a      	orrs	r2, r1
 801cc9a:	f820 2b02 	strh.w	r2, [r0], #2
 801cc9e:	e7ed      	b.n	801cc7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cca0:	8832      	ldrh	r2, [r6, #0]
 801cca2:	1bd2      	subs	r2, r2, r7
 801cca4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cca8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ccac:	1bd2      	subs	r2, r2, r7
 801ccae:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ccb2:	e7df      	b.n	801cc74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ccb4:	6828      	ldr	r0, [r5, #0]
 801ccb6:	6803      	ldr	r3, [r0, #0]
 801ccb8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ccba:	4798      	blx	r3
 801ccbc:	b005      	add	sp, #20
 801ccbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ccc2:	bf00      	nop
 801ccc4:	20012db4 	.word	0x20012db4
 801ccc8:	20012dae 	.word	0x20012dae
 801cccc:	fffff800 	.word	0xfffff800

0801ccd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ccd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ccd4:	460e      	mov	r6, r1
 801ccd6:	b08e      	sub	sp, #56	; 0x38
 801ccd8:	4604      	mov	r4, r0
 801ccda:	6808      	ldr	r0, [r1, #0]
 801ccdc:	6849      	ldr	r1, [r1, #4]
 801ccde:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ceb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cce2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801cebc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cce6:	461d      	mov	r5, r3
 801cce8:	ab0a      	add	r3, sp, #40	; 0x28
 801ccea:	c303      	stmia	r3!, {r0, r1}
 801ccec:	6810      	ldr	r0, [r2, #0]
 801ccee:	6851      	ldr	r1, [r2, #4]
 801ccf0:	ab0c      	add	r3, sp, #48	; 0x30
 801ccf2:	c303      	stmia	r3!, {r0, r1}
 801ccf4:	a80a      	add	r0, sp, #40	; 0x28
 801ccf6:	f7f7 fdef 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccfa:	4631      	mov	r1, r6
 801ccfc:	a80c      	add	r0, sp, #48	; 0x30
 801ccfe:	f7f7 fe2f 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd02:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cd06:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cd0a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cd0e:	f8d8 0000 	ldr.w	r0, [r8]
 801cd12:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cd16:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cd1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cd1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cd22:	440c      	add	r4, r1
 801cd24:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cd28:	440a      	add	r2, r1
 801cd2a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cd2e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cd32:	4413      	add	r3, r2
 801cd34:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cd38:	6803      	ldr	r3, [r0, #0]
 801cd3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cd3c:	4798      	blx	r3
 801cd3e:	2dff      	cmp	r5, #255	; 0xff
 801cd40:	d124      	bne.n	801cd8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cd42:	f010 0f01 	tst.w	r0, #1
 801cd46:	f8d8 0000 	ldr.w	r0, [r8]
 801cd4a:	d022      	beq.n	801cd92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cd4c:	2100      	movs	r1, #0
 801cd4e:	f8d0 c000 	ldr.w	ip, [r0]
 801cd52:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cd56:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cd5a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cd5e:	f04f 0e01 	mov.w	lr, #1
 801cd62:	f8cd e018 	str.w	lr, [sp, #24]
 801cd66:	f8b9 e000 	ldrh.w	lr, [r9]
 801cd6a:	9503      	str	r5, [sp, #12]
 801cd6c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cd70:	b2b6      	uxth	r6, r6
 801cd72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cd76:	9102      	str	r1, [sp, #8]
 801cd78:	b2bf      	uxth	r7, r7
 801cd7a:	9601      	str	r6, [sp, #4]
 801cd7c:	9700      	str	r7, [sp, #0]
 801cd7e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cd82:	4621      	mov	r1, r4
 801cd84:	47a8      	blx	r5
 801cd86:	b00e      	add	sp, #56	; 0x38
 801cd88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cd8c:	f010 0f04 	tst.w	r0, #4
 801cd90:	e7d9      	b.n	801cd46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cd92:	6803      	ldr	r3, [r0, #0]
 801cd94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd96:	4798      	blx	r3
 801cd98:	f8b9 3000 	ldrh.w	r3, [r9]
 801cd9c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cda0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cda4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cda8:	fb03 1202 	mla	r2, r3, r2, r1
 801cdac:	ebac 0c07 	sub.w	ip, ip, r7
 801cdb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cdb4:	435e      	muls	r6, r3
 801cdb6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cdba:	2dff      	cmp	r5, #255	; 0xff
 801cdbc:	eba3 0707 	sub.w	r7, r3, r7
 801cdc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cdc4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cdc8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cdcc:	d049      	beq.n	801ce62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cdce:	43eb      	mvns	r3, r5
 801cdd0:	fa1f f985 	uxth.w	r9, r5
 801cdd4:	b2db      	uxtb	r3, r3
 801cdd6:	42b0      	cmp	r0, r6
 801cdd8:	d266      	bcs.n	801cea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cdda:	eb00 0a0e 	add.w	sl, r0, lr
 801cdde:	4550      	cmp	r0, sl
 801cde0:	4621      	mov	r1, r4
 801cde2:	f104 0403 	add.w	r4, r4, #3
 801cde6:	d25b      	bcs.n	801cea0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cde8:	8802      	ldrh	r2, [r0, #0]
 801cdea:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cdee:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cdf2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cdf6:	fb11 f109 	smulbb	r1, r1, r9
 801cdfa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cdfe:	10d5      	asrs	r5, r2, #3
 801ce00:	fb08 1803 	mla	r8, r8, r3, r1
 801ce04:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ce08:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ce0c:	fb11 f109 	smulbb	r1, r1, r9
 801ce10:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ce14:	fb05 1503 	mla	r5, r5, r3, r1
 801ce18:	00d2      	lsls	r2, r2, #3
 801ce1a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ce1e:	b2d2      	uxtb	r2, r2
 801ce20:	fb11 f109 	smulbb	r1, r1, r9
 801ce24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ce28:	fa1f f888 	uxth.w	r8, r8
 801ce2c:	fb02 1203 	mla	r2, r2, r3, r1
 801ce30:	b292      	uxth	r2, r2
 801ce32:	f108 0101 	add.w	r1, r8, #1
 801ce36:	b2ad      	uxth	r5, r5
 801ce38:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801ce3c:	1c51      	adds	r1, r2, #1
 801ce3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ce42:	1c69      	adds	r1, r5, #1
 801ce44:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ce48:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ce4c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce50:	096d      	lsrs	r5, r5, #5
 801ce52:	ea42 0208 	orr.w	r2, r2, r8
 801ce56:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce5a:	432a      	orrs	r2, r5
 801ce5c:	f820 2b02 	strh.w	r2, [r0], #2
 801ce60:	e7bd      	b.n	801cdde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ce62:	4a14      	ldr	r2, [pc, #80]	; (801ceb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ce64:	42b0      	cmp	r0, r6
 801ce66:	d21f      	bcs.n	801cea8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ce68:	eb00 050e 	add.w	r5, r0, lr
 801ce6c:	42a8      	cmp	r0, r5
 801ce6e:	4621      	mov	r1, r4
 801ce70:	f104 0403 	add.w	r4, r4, #3
 801ce74:	d210      	bcs.n	801ce98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ce76:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ce7a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ce7e:	00db      	lsls	r3, r3, #3
 801ce80:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ce84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce88:	430b      	orrs	r3, r1
 801ce8a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ce8e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ce92:	f820 3b02 	strh.w	r3, [r0], #2
 801ce96:	e7e9      	b.n	801ce6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ce98:	4438      	add	r0, r7
 801ce9a:	eb01 040c 	add.w	r4, r1, ip
 801ce9e:	e7e1      	b.n	801ce64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cea0:	4438      	add	r0, r7
 801cea2:	eb01 040c 	add.w	r4, r1, ip
 801cea6:	e796      	b.n	801cdd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cea8:	4b03      	ldr	r3, [pc, #12]	; (801ceb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ceaa:	6818      	ldr	r0, [r3, #0]
 801ceac:	6803      	ldr	r3, [r0, #0]
 801ceae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ceb0:	4798      	blx	r3
 801ceb2:	e768      	b.n	801cd86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ceb4:	fffff800 	.word	0xfffff800
 801ceb8:	20012db4 	.word	0x20012db4
 801cebc:	20012dae 	.word	0x20012dae

0801cec0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cec0:	b4f0      	push	{r4, r5, r6, r7}
 801cec2:	4616      	mov	r6, r2
 801cec4:	2e01      	cmp	r6, #1
 801cec6:	461c      	mov	r4, r3
 801cec8:	460d      	mov	r5, r1
 801ceca:	9a04      	ldr	r2, [sp, #16]
 801cecc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ced0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ced4:	d012      	beq.n	801cefc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ced6:	d303      	bcc.n	801cee0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ced8:	2e02      	cmp	r6, #2
 801ceda:	d00a      	beq.n	801cef2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cedc:	bcf0      	pop	{r4, r5, r6, r7}
 801cede:	4770      	bx	lr
 801cee0:	6805      	ldr	r5, [r0, #0]
 801cee2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cee6:	68ed      	ldr	r5, [r5, #12]
 801cee8:	4613      	mov	r3, r2
 801ceea:	46ac      	mov	ip, r5
 801ceec:	4622      	mov	r2, r4
 801ceee:	bcf0      	pop	{r4, r5, r6, r7}
 801cef0:	4760      	bx	ip
 801cef2:	4621      	mov	r1, r4
 801cef4:	4628      	mov	r0, r5
 801cef6:	bcf0      	pop	{r4, r5, r6, r7}
 801cef8:	f7ff bd94 	b.w	801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cefc:	4621      	mov	r1, r4
 801cefe:	4628      	mov	r0, r5
 801cf00:	bcf0      	pop	{r4, r5, r6, r7}
 801cf02:	f7ff bee5 	b.w	801ccd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801cf08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cf08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf0c:	4681      	mov	r9, r0
 801cf0e:	b093      	sub	sp, #76	; 0x4c
 801cf10:	6810      	ldr	r0, [r2, #0]
 801cf12:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801cf16:	4f6d      	ldr	r7, [pc, #436]	; (801d0cc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801cf18:	4688      	mov	r8, r1
 801cf1a:	6851      	ldr	r1, [r2, #4]
 801cf1c:	ac0e      	add	r4, sp, #56	; 0x38
 801cf1e:	c403      	stmia	r4!, {r0, r1}
 801cf20:	6818      	ldr	r0, [r3, #0]
 801cf22:	6859      	ldr	r1, [r3, #4]
 801cf24:	ac10      	add	r4, sp, #64	; 0x40
 801cf26:	4616      	mov	r6, r2
 801cf28:	c403      	stmia	r4!, {r0, r1}
 801cf2a:	a80e      	add	r0, sp, #56	; 0x38
 801cf2c:	f7f7 fcd4 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf30:	4631      	mov	r1, r6
 801cf32:	a810      	add	r0, sp, #64	; 0x40
 801cf34:	f7f7 fd14 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf38:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801cf3c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cf40:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cf44:	4e62      	ldr	r6, [pc, #392]	; (801d0d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cf46:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801cf4a:	6830      	ldr	r0, [r6, #0]
 801cf4c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801cf50:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf54:	4489      	add	r9, r1
 801cf56:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801cf5a:	440a      	add	r2, r1
 801cf5c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cf60:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cf64:	4413      	add	r3, r2
 801cf66:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cf6a:	6803      	ldr	r3, [r0, #0]
 801cf6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf6e:	4798      	blx	r3
 801cf70:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cf74:	6830      	ldr	r0, [r6, #0]
 801cf76:	d01d      	beq.n	801cfb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cf78:	2200      	movs	r2, #0
 801cf7a:	6801      	ldr	r1, [r0, #0]
 801cf7c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801cf80:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cf84:	220b      	movs	r2, #11
 801cf86:	9207      	str	r2, [sp, #28]
 801cf88:	883a      	ldrh	r2, [r7, #0]
 801cf8a:	9206      	str	r2, [sp, #24]
 801cf8c:	2201      	movs	r2, #1
 801cf8e:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cf92:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cf96:	9203      	str	r2, [sp, #12]
 801cf98:	b2a4      	uxth	r4, r4
 801cf9a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801cf9e:	9200      	str	r2, [sp, #0]
 801cfa0:	b2ad      	uxth	r5, r5
 801cfa2:	9502      	str	r5, [sp, #8]
 801cfa4:	9401      	str	r4, [sp, #4]
 801cfa6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cfa8:	4642      	mov	r2, r8
 801cfaa:	4649      	mov	r1, r9
 801cfac:	47a0      	blx	r4
 801cfae:	b013      	add	sp, #76	; 0x4c
 801cfb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfb4:	6803      	ldr	r3, [r0, #0]
 801cfb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cfb8:	4798      	blx	r3
 801cfba:	883b      	ldrh	r3, [r7, #0]
 801cfbc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cfc0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cfc4:	fb03 1202 	mla	r2, r3, r2, r1
 801cfc8:	435d      	muls	r5, r3
 801cfca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cfce:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cfd2:	920c      	str	r2, [sp, #48]	; 0x30
 801cfd4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801cfd8:	1b12      	subs	r2, r2, r4
 801cfda:	920d      	str	r2, [sp, #52]	; 0x34
 801cfdc:	0062      	lsls	r2, r4, #1
 801cfde:	1b1c      	subs	r4, r3, r4
 801cfe0:	0063      	lsls	r3, r4, #1
 801cfe2:	920a      	str	r2, [sp, #40]	; 0x28
 801cfe4:	930b      	str	r3, [sp, #44]	; 0x2c
 801cfe6:	f04f 0e04 	mov.w	lr, #4
 801cfea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cfec:	4298      	cmp	r0, r3
 801cfee:	d266      	bcs.n	801d0be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cff2:	eb00 0b03 	add.w	fp, r0, r3
 801cff6:	4558      	cmp	r0, fp
 801cff8:	d25c      	bcs.n	801d0b4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cffa:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cffe:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d002:	f858 2003 	ldr.w	r2, [r8, r3]
 801d006:	0e11      	lsrs	r1, r2, #24
 801d008:	d012      	beq.n	801d030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d00a:	29ff      	cmp	r1, #255	; 0xff
 801d00c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d010:	d110      	bne.n	801d034 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d012:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d016:	d10d      	bne.n	801d034 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d018:	0953      	lsrs	r3, r2, #5
 801d01a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d01e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d022:	f027 0707 	bic.w	r7, r7, #7
 801d026:	431f      	orrs	r7, r3
 801d028:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d02c:	433a      	orrs	r2, r7
 801d02e:	8002      	strh	r2, [r0, #0]
 801d030:	3002      	adds	r0, #2
 801d032:	e7e0      	b.n	801cff6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d034:	fb0a f101 	mul.w	r1, sl, r1
 801d038:	8806      	ldrh	r6, [r0, #0]
 801d03a:	1c4b      	adds	r3, r1, #1
 801d03c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d040:	1235      	asrs	r5, r6, #8
 801d042:	10f4      	asrs	r4, r6, #3
 801d044:	121b      	asrs	r3, r3, #8
 801d046:	00f6      	lsls	r6, r6, #3
 801d048:	b299      	uxth	r1, r3
 801d04a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d04e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d052:	b2f6      	uxtb	r6, r6
 801d054:	43db      	mvns	r3, r3
 801d056:	b2d2      	uxtb	r2, r2
 801d058:	b2db      	uxtb	r3, r3
 801d05a:	fb1c fc01 	smulbb	ip, ip, r1
 801d05e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d062:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d066:	fb12 f201 	smulbb	r2, r2, r1
 801d06a:	fb05 c503 	mla	r5, r5, r3, ip
 801d06e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d072:	b2ff      	uxtb	r7, r7
 801d074:	fb06 2203 	mla	r2, r6, r3, r2
 801d078:	b2ad      	uxth	r5, r5
 801d07a:	fb17 f701 	smulbb	r7, r7, r1
 801d07e:	b292      	uxth	r2, r2
 801d080:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d084:	fb04 7403 	mla	r4, r4, r3, r7
 801d088:	f105 0c01 	add.w	ip, r5, #1
 801d08c:	1c57      	adds	r7, r2, #1
 801d08e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d092:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d096:	b2a4      	uxth	r4, r4
 801d098:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d09c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d0a0:	433d      	orrs	r5, r7
 801d0a2:	1c67      	adds	r7, r4, #1
 801d0a4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d0a8:	0964      	lsrs	r4, r4, #5
 801d0aa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d0ae:	4325      	orrs	r5, r4
 801d0b0:	8005      	strh	r5, [r0, #0]
 801d0b2:	e7bd      	b.n	801d030 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d0b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d0b6:	4418      	add	r0, r3
 801d0b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d0ba:	4499      	add	r9, r3
 801d0bc:	e795      	b.n	801cfea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d0be:	4b04      	ldr	r3, [pc, #16]	; (801d0d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d0c0:	6818      	ldr	r0, [r3, #0]
 801d0c2:	6803      	ldr	r3, [r0, #0]
 801d0c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d0c6:	4798      	blx	r3
 801d0c8:	e771      	b.n	801cfae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d0ca:	bf00      	nop
 801d0cc:	20012dae 	.word	0x20012dae
 801d0d0:	20012db4 	.word	0x20012db4

0801d0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d0d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d0d8:	b087      	sub	sp, #28
 801d0da:	4680      	mov	r8, r0
 801d0dc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d0e0:	460d      	mov	r5, r1
 801d0e2:	4614      	mov	r4, r2
 801d0e4:	2e00      	cmp	r6, #0
 801d0e6:	f000 80b9 	beq.w	801d25c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d0ea:	6810      	ldr	r0, [r2, #0]
 801d0ec:	6851      	ldr	r1, [r2, #4]
 801d0ee:	af02      	add	r7, sp, #8
 801d0f0:	c703      	stmia	r7!, {r0, r1}
 801d0f2:	6818      	ldr	r0, [r3, #0]
 801d0f4:	6859      	ldr	r1, [r3, #4]
 801d0f6:	af04      	add	r7, sp, #16
 801d0f8:	c703      	stmia	r7!, {r0, r1}
 801d0fa:	a802      	add	r0, sp, #8
 801d0fc:	f7f7 fbec 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d100:	4621      	mov	r1, r4
 801d102:	a804      	add	r0, sp, #16
 801d104:	f7f7 fc2c 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d108:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d10c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d110:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d114:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d118:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d11c:	eb08 0401 	add.w	r4, r8, r1
 801d120:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d124:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d128:	440a      	add	r2, r1
 801d12a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d12e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d132:	4413      	add	r3, r2
 801d134:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d138:	4b4a      	ldr	r3, [pc, #296]	; (801d264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d13a:	6818      	ldr	r0, [r3, #0]
 801d13c:	6803      	ldr	r3, [r0, #0]
 801d13e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d140:	4798      	blx	r3
 801d142:	4b49      	ldr	r3, [pc, #292]	; (801d268 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d144:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d148:	881a      	ldrh	r2, [r3, #0]
 801d14a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d14e:	2eff      	cmp	r6, #255	; 0xff
 801d150:	fb02 c101 	mla	r1, r2, r1, ip
 801d154:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d158:	fb02 f207 	mul.w	r2, r2, r7
 801d15c:	f105 0104 	add.w	r1, r5, #4
 801d160:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d164:	461d      	mov	r5, r3
 801d166:	d05a      	beq.n	801d21e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d168:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d16c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d170:	b2b6      	uxth	r6, r6
 801d172:	fa1f fe8e 	uxth.w	lr, lr
 801d176:	9301      	str	r3, [sp, #4]
 801d178:	4282      	cmp	r2, r0
 801d17a:	d96a      	bls.n	801d252 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d17c:	eb00 0b0a 	add.w	fp, r0, sl
 801d180:	4583      	cmp	fp, r0
 801d182:	d940      	bls.n	801d206 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d184:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d188:	8805      	ldrh	r5, [r0, #0]
 801d18a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d18e:	122f      	asrs	r7, r5, #8
 801d190:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d194:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d198:	fb17 f70e 	smulbb	r7, r7, lr
 801d19c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d1a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d1a4:	00ed      	lsls	r5, r5, #3
 801d1a6:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d1aa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d1ae:	10df      	asrs	r7, r3, #3
 801d1b0:	b2ed      	uxtb	r5, r5
 801d1b2:	00db      	lsls	r3, r3, #3
 801d1b4:	fa1f fc8c 	uxth.w	ip, ip
 801d1b8:	fb19 f90e 	smulbb	r9, r9, lr
 801d1bc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d1c0:	b2db      	uxtb	r3, r3
 801d1c2:	fb15 f50e 	smulbb	r5, r5, lr
 801d1c6:	fb07 9706 	mla	r7, r7, r6, r9
 801d1ca:	fb03 5306 	mla	r3, r3, r6, r5
 801d1ce:	f10c 0901 	add.w	r9, ip, #1
 801d1d2:	b29b      	uxth	r3, r3
 801d1d4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d1d8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d1dc:	f103 0c01 	add.w	ip, r3, #1
 801d1e0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d1e4:	b2bf      	uxth	r7, r7
 801d1e6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d1ea:	ea4c 0c09 	orr.w	ip, ip, r9
 801d1ee:	f107 0901 	add.w	r9, r7, #1
 801d1f2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d1f6:	097f      	lsrs	r7, r7, #5
 801d1f8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1fc:	ea4c 0c07 	orr.w	ip, ip, r7
 801d200:	f820 cb02 	strh.w	ip, [r0], #2
 801d204:	e7bc      	b.n	801d180 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d206:	9b01      	ldr	r3, [sp, #4]
 801d208:	881b      	ldrh	r3, [r3, #0]
 801d20a:	eba3 0308 	sub.w	r3, r3, r8
 801d20e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d212:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d216:	eba3 0308 	sub.w	r3, r3, r8
 801d21a:	441c      	add	r4, r3
 801d21c:	e7ac      	b.n	801d178 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d21e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d222:	4282      	cmp	r2, r0
 801d224:	d915      	bls.n	801d252 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d226:	eb00 060a 	add.w	r6, r0, sl
 801d22a:	4286      	cmp	r6, r0
 801d22c:	d906      	bls.n	801d23c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d22e:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d232:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d236:	f820 3b02 	strh.w	r3, [r0], #2
 801d23a:	e7f6      	b.n	801d22a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d23c:	882b      	ldrh	r3, [r5, #0]
 801d23e:	eba3 0308 	sub.w	r3, r3, r8
 801d242:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d246:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d24a:	eba3 0308 	sub.w	r3, r3, r8
 801d24e:	441c      	add	r4, r3
 801d250:	e7e7      	b.n	801d222 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d252:	4b04      	ldr	r3, [pc, #16]	; (801d264 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d254:	6818      	ldr	r0, [r3, #0]
 801d256:	6803      	ldr	r3, [r0, #0]
 801d258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d25a:	4798      	blx	r3
 801d25c:	b007      	add	sp, #28
 801d25e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d262:	bf00      	nop
 801d264:	20012db4 	.word	0x20012db4
 801d268:	20012dae 	.word	0x20012dae

0801d26c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d26c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d270:	b091      	sub	sp, #68	; 0x44
 801d272:	4680      	mov	r8, r0
 801d274:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d278:	460f      	mov	r7, r1
 801d27a:	4614      	mov	r4, r2
 801d27c:	2d00      	cmp	r5, #0
 801d27e:	d051      	beq.n	801d324 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d280:	6810      	ldr	r0, [r2, #0]
 801d282:	6851      	ldr	r1, [r2, #4]
 801d284:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d288:	ae0c      	add	r6, sp, #48	; 0x30
 801d28a:	c603      	stmia	r6!, {r0, r1}
 801d28c:	6818      	ldr	r0, [r3, #0]
 801d28e:	6859      	ldr	r1, [r3, #4]
 801d290:	ae0e      	add	r6, sp, #56	; 0x38
 801d292:	c603      	stmia	r6!, {r0, r1}
 801d294:	a80c      	add	r0, sp, #48	; 0x30
 801d296:	f7f7 fb1f 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d29a:	4621      	mov	r1, r4
 801d29c:	a80e      	add	r0, sp, #56	; 0x38
 801d29e:	f7f7 fb5f 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d2a2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d2a6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d2aa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d2ae:	f8d9 0000 	ldr.w	r0, [r9]
 801d2b2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d2b6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d2ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d2be:	eb08 0401 	add.w	r4, r8, r1
 801d2c2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d2c6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d48c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d2ca:	440a      	add	r2, r1
 801d2cc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d2d0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d2d4:	4413      	add	r3, r2
 801d2d6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d2da:	6803      	ldr	r3, [r0, #0]
 801d2dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d2de:	4798      	blx	r3
 801d2e0:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d2e4:	f8d9 0000 	ldr.w	r0, [r9]
 801d2e8:	d01f      	beq.n	801d32a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d2ea:	2200      	movs	r2, #0
 801d2ec:	6801      	ldr	r1, [r0, #0]
 801d2ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d2f2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d2f6:	220b      	movs	r2, #11
 801d2f8:	9207      	str	r2, [sp, #28]
 801d2fa:	f8b8 2000 	ldrh.w	r2, [r8]
 801d2fe:	9206      	str	r2, [sp, #24]
 801d300:	2201      	movs	r2, #1
 801d302:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d306:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d30a:	9203      	str	r2, [sp, #12]
 801d30c:	fa1f f28a 	uxth.w	r2, sl
 801d310:	9202      	str	r2, [sp, #8]
 801d312:	b2b6      	uxth	r6, r6
 801d314:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d318:	9200      	str	r2, [sp, #0]
 801d31a:	9601      	str	r6, [sp, #4]
 801d31c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d31e:	463a      	mov	r2, r7
 801d320:	4621      	mov	r1, r4
 801d322:	47a8      	blx	r5
 801d324:	b011      	add	sp, #68	; 0x44
 801d326:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d32a:	6803      	ldr	r3, [r0, #0]
 801d32c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d32e:	4798      	blx	r3
 801d330:	f8b8 2000 	ldrh.w	r2, [r8]
 801d334:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d338:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d33c:	2dff      	cmp	r5, #255	; 0xff
 801d33e:	fb02 1303 	mla	r3, r2, r3, r1
 801d342:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d346:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d34a:	fb0a fa02 	mul.w	sl, sl, r2
 801d34e:	d062      	beq.n	801d416 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d350:	ea6f 0c05 	mvn.w	ip, r5
 801d354:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d358:	930a      	str	r3, [sp, #40]	; 0x28
 801d35a:	b2ad      	uxth	r5, r5
 801d35c:	fa5f fc8c 	uxtb.w	ip, ip
 801d360:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d364:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d366:	4298      	cmp	r0, r3
 801d368:	f080 8085 	bcs.w	801d476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d36c:	eb00 0b09 	add.w	fp, r0, r9
 801d370:	4558      	cmp	r0, fp
 801d372:	d246      	bcs.n	801d402 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d374:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d378:	2303      	movs	r3, #3
 801d37a:	2204      	movs	r2, #4
 801d37c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d380:	eb07 0a0e 	add.w	sl, r7, lr
 801d384:	8803      	ldrh	r3, [r0, #0]
 801d386:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d38a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d38e:	1219      	asrs	r1, r3, #8
 801d390:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d394:	fb18 f805 	smulbb	r8, r8, r5
 801d398:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d39c:	10da      	asrs	r2, r3, #3
 801d39e:	fb01 810c 	mla	r1, r1, ip, r8
 801d3a2:	00db      	lsls	r3, r3, #3
 801d3a4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d3a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d3ac:	b2db      	uxtb	r3, r3
 801d3ae:	fb18 f805 	smulbb	r8, r8, r5
 801d3b2:	fb1e fe05 	smulbb	lr, lr, r5
 801d3b6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d3ba:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d3be:	b289      	uxth	r1, r1
 801d3c0:	fb02 820c 	mla	r2, r2, ip, r8
 801d3c4:	fb03 e30c 	mla	r3, r3, ip, lr
 801d3c8:	b292      	uxth	r2, r2
 801d3ca:	b29b      	uxth	r3, r3
 801d3cc:	f101 0801 	add.w	r8, r1, #1
 801d3d0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d3d4:	f103 0e01 	add.w	lr, r3, #1
 801d3d8:	f102 0801 	add.w	r8, r2, #1
 801d3dc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d3e0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d3e4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d3e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d3ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d3f0:	ea4e 0101 	orr.w	r1, lr, r1
 801d3f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d3f8:	ea41 0108 	orr.w	r1, r1, r8
 801d3fc:	f820 1b02 	strh.w	r1, [r0], #2
 801d400:	e7b6      	b.n	801d370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d402:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d404:	881b      	ldrh	r3, [r3, #0]
 801d406:	1b9b      	subs	r3, r3, r6
 801d408:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d40c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d410:	1b9b      	subs	r3, r3, r6
 801d412:	441c      	add	r4, r3
 801d414:	e7a6      	b.n	801d364 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d416:	491b      	ldr	r1, [pc, #108]	; (801d484 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d418:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d41c:	2203      	movs	r2, #3
 801d41e:	2504      	movs	r5, #4
 801d420:	4550      	cmp	r0, sl
 801d422:	d228      	bcs.n	801d476 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d424:	eb00 0c09 	add.w	ip, r0, r9
 801d428:	4560      	cmp	r0, ip
 801d42a:	4623      	mov	r3, r4
 801d42c:	d219      	bcs.n	801d462 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d42e:	f893 e000 	ldrb.w	lr, [r3]
 801d432:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d436:	eb07 0b0e 	add.w	fp, r7, lr
 801d43a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d43e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d442:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d446:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d44a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d44e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d452:	ea43 030b 	orr.w	r3, r3, fp
 801d456:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d45a:	3401      	adds	r4, #1
 801d45c:	f820 3b02 	strh.w	r3, [r0], #2
 801d460:	e7e2      	b.n	801d428 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d462:	f8b8 3000 	ldrh.w	r3, [r8]
 801d466:	1b9b      	subs	r3, r3, r6
 801d468:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d46c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d470:	1b9b      	subs	r3, r3, r6
 801d472:	441c      	add	r4, r3
 801d474:	e7d4      	b.n	801d420 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d476:	4b04      	ldr	r3, [pc, #16]	; (801d488 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d478:	6818      	ldr	r0, [r3, #0]
 801d47a:	6803      	ldr	r3, [r0, #0]
 801d47c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d47e:	4798      	blx	r3
 801d480:	e750      	b.n	801d324 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d482:	bf00      	nop
 801d484:	fffff800 	.word	0xfffff800
 801d488:	20012db4 	.word	0x20012db4
 801d48c:	20012dae 	.word	0x20012dae

0801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d490:	b4f0      	push	{r4, r5, r6, r7}
 801d492:	460c      	mov	r4, r1
 801d494:	4611      	mov	r1, r2
 801d496:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d49a:	780f      	ldrb	r7, [r1, #0]
 801d49c:	784e      	ldrb	r6, [r1, #1]
 801d49e:	2f01      	cmp	r7, #1
 801d4a0:	461a      	mov	r2, r3
 801d4a2:	9b04      	ldr	r3, [sp, #16]
 801d4a4:	d036      	beq.n	801d514 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d4a6:	d31e      	bcc.n	801d4e6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d4a8:	2f02      	cmp	r7, #2
 801d4aa:	d14a      	bne.n	801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4ac:	2e03      	cmp	r6, #3
 801d4ae:	d848      	bhi.n	801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4b0:	e8df f006 	tbb	[pc, r6]
 801d4b4:	16140702 	.word	0x16140702
 801d4b8:	9504      	str	r5, [sp, #16]
 801d4ba:	4620      	mov	r0, r4
 801d4bc:	bcf0      	pop	{r4, r5, r6, r7}
 801d4be:	f7ff be09 	b.w	801d0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d4c2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d4c4:	2800      	cmp	r0, #0
 801d4c6:	d03c      	beq.n	801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4c8:	6806      	ldr	r6, [r0, #0]
 801d4ca:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d4ce:	68b5      	ldr	r5, [r6, #8]
 801d4d0:	4613      	mov	r3, r2
 801d4d2:	46ac      	mov	ip, r5
 801d4d4:	460a      	mov	r2, r1
 801d4d6:	4621      	mov	r1, r4
 801d4d8:	bcf0      	pop	{r4, r5, r6, r7}
 801d4da:	4760      	bx	ip
 801d4dc:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d4de:	e7f1      	b.n	801d4c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d4e0:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d4e4:	e7ee      	b.n	801d4c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d4e6:	2e03      	cmp	r6, #3
 801d4e8:	d82b      	bhi.n	801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4ea:	e8df f006 	tbb	[pc, r6]
 801d4ee:	0702      	.short	0x0702
 801d4f0:	100e      	.short	0x100e
 801d4f2:	9504      	str	r5, [sp, #16]
 801d4f4:	4620      	mov	r0, r4
 801d4f6:	bcf0      	pop	{r4, r5, r6, r7}
 801d4f8:	f7ff bd06 	b.w	801cf08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d4fc:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d4fe:	b300      	cbz	r0, 801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d500:	6806      	ldr	r6, [r0, #0]
 801d502:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d506:	68f5      	ldr	r5, [r6, #12]
 801d508:	e7e2      	b.n	801d4d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d50a:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d50c:	e7f7      	b.n	801d4fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d50e:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d512:	e7f4      	b.n	801d4fe <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d514:	2e03      	cmp	r6, #3
 801d516:	d814      	bhi.n	801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d518:	e8df f006 	tbb	[pc, r6]
 801d51c:	100e0702 	.word	0x100e0702
 801d520:	9504      	str	r5, [sp, #16]
 801d522:	4620      	mov	r0, r4
 801d524:	bcf0      	pop	{r4, r5, r6, r7}
 801d526:	f7ff bea1 	b.w	801d26c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d52a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d52c:	b148      	cbz	r0, 801d542 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d52e:	6806      	ldr	r6, [r0, #0]
 801d530:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d534:	6935      	ldr	r5, [r6, #16]
 801d536:	e7cb      	b.n	801d4d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d538:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d53a:	e7f7      	b.n	801d52c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d53c:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d540:	e7f4      	b.n	801d52c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d542:	bcf0      	pop	{r4, r5, r6, r7}
 801d544:	4770      	bx	lr
	...

0801d548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d548:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d54c:	4604      	mov	r4, r0
 801d54e:	b087      	sub	sp, #28
 801d550:	6810      	ldr	r0, [r2, #0]
 801d552:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d556:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d55a:	460e      	mov	r6, r1
 801d55c:	6851      	ldr	r1, [r2, #4]
 801d55e:	ad02      	add	r5, sp, #8
 801d560:	c503      	stmia	r5!, {r0, r1}
 801d562:	6818      	ldr	r0, [r3, #0]
 801d564:	6859      	ldr	r1, [r3, #4]
 801d566:	ad04      	add	r5, sp, #16
 801d568:	4617      	mov	r7, r2
 801d56a:	c503      	stmia	r5!, {r0, r1}
 801d56c:	a802      	add	r0, sp, #8
 801d56e:	f7f7 f9b3 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d572:	4639      	mov	r1, r7
 801d574:	a804      	add	r0, sp, #16
 801d576:	f7f7 f9f3 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d57a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d57e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d582:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d586:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d58a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d58e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d592:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d596:	440e      	add	r6, r1
 801d598:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d59c:	440a      	add	r2, r1
 801d59e:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d5a2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d5a6:	4413      	add	r3, r2
 801d5a8:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d5ac:	4b77      	ldr	r3, [pc, #476]	; (801d78c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d5ae:	6818      	ldr	r0, [r3, #0]
 801d5b0:	6803      	ldr	r3, [r0, #0]
 801d5b2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d5b4:	4798      	blx	r3
 801d5b6:	f8b9 b000 	ldrh.w	fp, [r9]
 801d5ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d5be:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d5c2:	fb0b 2303 	mla	r3, fp, r3, r2
 801d5c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5ca:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d5ce:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d5d2:	fb05 f50b 	mul.w	r5, r5, fp
 801d5d6:	9300      	str	r3, [sp, #0]
 801d5d8:	d069      	beq.n	801d6ae <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d5da:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d5de:	4558      	cmp	r0, fp
 801d5e0:	f080 80cc 	bcs.w	801d77c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d5e4:	9b00      	ldr	r3, [sp, #0]
 801d5e6:	18c3      	adds	r3, r0, r3
 801d5e8:	9301      	str	r3, [sp, #4]
 801d5ea:	4631      	mov	r1, r6
 801d5ec:	9b01      	ldr	r3, [sp, #4]
 801d5ee:	4298      	cmp	r0, r3
 801d5f0:	d24f      	bcs.n	801d692 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d5f2:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d5f6:	2a00      	cmp	r2, #0
 801d5f8:	d048      	beq.n	801d68c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d5fa:	fb0a f202 	mul.w	r2, sl, r2
 801d5fe:	1c53      	adds	r3, r2, #1
 801d600:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d604:	121b      	asrs	r3, r3, #8
 801d606:	d041      	beq.n	801d68c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d608:	8802      	ldrh	r2, [r0, #0]
 801d60a:	f8b4 c000 	ldrh.w	ip, [r4]
 801d60e:	b29e      	uxth	r6, r3
 801d610:	1215      	asrs	r5, r2, #8
 801d612:	43db      	mvns	r3, r3
 801d614:	b2db      	uxtb	r3, r3
 801d616:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d61a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d61e:	fb15 f503 	smulbb	r5, r5, r3
 801d622:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d626:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d62a:	00d2      	lsls	r2, r2, #3
 801d62c:	fb07 5706 	mla	r7, r7, r6, r5
 801d630:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d634:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d638:	b2d2      	uxtb	r2, r2
 801d63a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d63e:	b2bf      	uxth	r7, r7
 801d640:	fb1e fe03 	smulbb	lr, lr, r3
 801d644:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d648:	fa5f fc8c 	uxtb.w	ip, ip
 801d64c:	fb12 f203 	smulbb	r2, r2, r3
 801d650:	fb05 e506 	mla	r5, r5, r6, lr
 801d654:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d658:	f107 0e01 	add.w	lr, r7, #1
 801d65c:	fa1f fc8c 	uxth.w	ip, ip
 801d660:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d664:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d668:	f10c 0701 	add.w	r7, ip, #1
 801d66c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d670:	b2ad      	uxth	r5, r5
 801d672:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d676:	ea47 070e 	orr.w	r7, r7, lr
 801d67a:	f105 0e01 	add.w	lr, r5, #1
 801d67e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d682:	096d      	lsrs	r5, r5, #5
 801d684:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d688:	432f      	orrs	r7, r5
 801d68a:	8007      	strh	r7, [r0, #0]
 801d68c:	3002      	adds	r0, #2
 801d68e:	3402      	adds	r4, #2
 801d690:	e7ac      	b.n	801d5ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d692:	f8b9 3000 	ldrh.w	r3, [r9]
 801d696:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d69a:	eba3 0308 	sub.w	r3, r3, r8
 801d69e:	eba6 0608 	sub.w	r6, r6, r8
 801d6a2:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d6a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6aa:	440e      	add	r6, r1
 801d6ac:	e797      	b.n	801d5de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d6ae:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d6b2:	42a8      	cmp	r0, r5
 801d6b4:	d262      	bcs.n	801d77c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d6b6:	9b00      	ldr	r3, [sp, #0]
 801d6b8:	4631      	mov	r1, r6
 801d6ba:	eb00 0b03 	add.w	fp, r0, r3
 801d6be:	4558      	cmp	r0, fp
 801d6c0:	d24e      	bcs.n	801d760 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d6c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d6c6:	b12b      	cbz	r3, 801d6d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d6c8:	2bff      	cmp	r3, #255	; 0xff
 801d6ca:	f8b4 e000 	ldrh.w	lr, [r4]
 801d6ce:	d104      	bne.n	801d6da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d6d0:	f8a0 e000 	strh.w	lr, [r0]
 801d6d4:	3002      	adds	r0, #2
 801d6d6:	3402      	adds	r4, #2
 801d6d8:	e7f1      	b.n	801d6be <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d6da:	8802      	ldrh	r2, [r0, #0]
 801d6dc:	b29f      	uxth	r7, r3
 801d6de:	1216      	asrs	r6, r2, #8
 801d6e0:	43db      	mvns	r3, r3
 801d6e2:	b2db      	uxtb	r3, r3
 801d6e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d6e8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6ec:	fb16 f603 	smulbb	r6, r6, r3
 801d6f0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d6f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6f8:	00d2      	lsls	r2, r2, #3
 801d6fa:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6fe:	b2d2      	uxtb	r2, r2
 801d700:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d704:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d708:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d70c:	fb1a fa03 	smulbb	sl, sl, r3
 801d710:	fa1f fc8c 	uxth.w	ip, ip
 801d714:	fb12 f303 	smulbb	r3, r2, r3
 801d718:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d71c:	fa5f fe8e 	uxtb.w	lr, lr
 801d720:	fb06 a607 	mla	r6, r6, r7, sl
 801d724:	f10c 0201 	add.w	r2, ip, #1
 801d728:	fb0e 3307 	mla	r3, lr, r7, r3
 801d72c:	b2b6      	uxth	r6, r6
 801d72e:	b29b      	uxth	r3, r3
 801d730:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d734:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d738:	f106 0a01 	add.w	sl, r6, #1
 801d73c:	f103 0c01 	add.w	ip, r3, #1
 801d740:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d744:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d748:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d74c:	0976      	lsrs	r6, r6, #5
 801d74e:	ea4c 0c02 	orr.w	ip, ip, r2
 801d752:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d756:	ea4c 0c06 	orr.w	ip, ip, r6
 801d75a:	f8a0 c000 	strh.w	ip, [r0]
 801d75e:	e7b9      	b.n	801d6d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d760:	f8b9 3000 	ldrh.w	r3, [r9]
 801d764:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d768:	eba3 0308 	sub.w	r3, r3, r8
 801d76c:	eba6 0608 	sub.w	r6, r6, r8
 801d770:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d774:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d778:	440e      	add	r6, r1
 801d77a:	e79a      	b.n	801d6b2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d77c:	4b03      	ldr	r3, [pc, #12]	; (801d78c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d77e:	6818      	ldr	r0, [r3, #0]
 801d780:	6803      	ldr	r3, [r0, #0]
 801d782:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d784:	4798      	blx	r3
 801d786:	b007      	add	sp, #28
 801d788:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d78c:	20012db4 	.word	0x20012db4
 801d790:	20012dae 	.word	0x20012dae

0801d794 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d794:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d798:	b089      	sub	sp, #36	; 0x24
 801d79a:	4682      	mov	sl, r0
 801d79c:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d7a0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d7a2:	460f      	mov	r7, r1
 801d7a4:	4691      	mov	r9, r2
 801d7a6:	4698      	mov	r8, r3
 801d7a8:	2e00      	cmp	r6, #0
 801d7aa:	d03d      	beq.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7ac:	4608      	mov	r0, r1
 801d7ae:	f7fa fe59 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d7b2:	4605      	mov	r5, r0
 801d7b4:	4638      	mov	r0, r7
 801d7b6:	f7fa fe89 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d7ba:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d7be:	4638      	mov	r0, r7
 801d7c0:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d7c4:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d7c8:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d7cc:	f7fa ff36 	bl	801863c <_ZNK8touchgfx6Bitmap7getDataEv>
 801d7d0:	4605      	mov	r5, r0
 801d7d2:	4638      	mov	r0, r7
 801d7d4:	f7fa ff62 	bl	801869c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d7d8:	4681      	mov	r9, r0
 801d7da:	4638      	mov	r0, r7
 801d7dc:	f7fa ffb2 	bl	8018744 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d7e0:	280b      	cmp	r0, #11
 801d7e2:	d821      	bhi.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7e4:	e8df f000 	tbb	[pc, r0]
 801d7e8:	2006aebe 	.word	0x2006aebe
 801d7ec:	20202020 	.word	0x20202020
 801d7f0:	b5202020 	.word	0xb5202020
 801d7f4:	4bb0      	ldr	r3, [pc, #704]	; (801dab8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d7f6:	6818      	ldr	r0, [r3, #0]
 801d7f8:	6803      	ldr	r3, [r0, #0]
 801d7fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7fc:	4798      	blx	r3
 801d7fe:	2eff      	cmp	r6, #255	; 0xff
 801d800:	d101      	bne.n	801d806 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d802:	0683      	lsls	r3, r0, #26
 801d804:	d506      	bpl.n	801d814 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d806:	4633      	mov	r3, r6
 801d808:	4622      	mov	r2, r4
 801d80a:	a902      	add	r1, sp, #8
 801d80c:	4628      	mov	r0, r5
 801d80e:	f7ff f909 	bl	801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d812:	e009      	b.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d814:	4638      	mov	r0, r7
 801d816:	f7fa fed9 	bl	80185cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d81a:	b940      	cbnz	r0, 801d82e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d81c:	4623      	mov	r3, r4
 801d81e:	aa02      	add	r2, sp, #8
 801d820:	4629      	mov	r1, r5
 801d822:	4650      	mov	r0, sl
 801d824:	f7ff f9e4 	bl	801cbf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d828:	b009      	add	sp, #36	; 0x24
 801d82a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d82e:	f10d 0818 	add.w	r8, sp, #24
 801d832:	4639      	mov	r1, r7
 801d834:	4640      	mov	r0, r8
 801d836:	f7fa fe7d 	bl	8018534 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d83a:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d83e:	af04      	add	r7, sp, #16
 801d840:	e887 0003 	stmia.w	r7, {r0, r1}
 801d844:	4638      	mov	r0, r7
 801d846:	4621      	mov	r1, r4
 801d848:	f7f2 f8e8 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801d84c:	4638      	mov	r0, r7
 801d84e:	f7f2 f928 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d852:	2800      	cmp	r0, #0
 801d854:	d1d7      	bne.n	801d806 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d856:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d85a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d85e:	4293      	cmp	r3, r2
 801d860:	dd12      	ble.n	801d888 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d862:	1a9b      	subs	r3, r3, r2
 801d864:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d868:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d86c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d870:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d874:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d878:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d87c:	4642      	mov	r2, r8
 801d87e:	4633      	mov	r3, r6
 801d880:	a902      	add	r1, sp, #8
 801d882:	4628      	mov	r0, r5
 801d884:	f7ff f8ce 	bl	801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d888:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d88c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d890:	4293      	cmp	r3, r2
 801d892:	dd12      	ble.n	801d8ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d894:	1a9b      	subs	r3, r3, r2
 801d896:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d89a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d89e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d8a2:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d8a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8aa:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d8ae:	23ff      	movs	r3, #255	; 0xff
 801d8b0:	4642      	mov	r2, r8
 801d8b2:	a902      	add	r1, sp, #8
 801d8b4:	4628      	mov	r0, r5
 801d8b6:	f7ff f8b5 	bl	801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d8ba:	463b      	mov	r3, r7
 801d8bc:	aa02      	add	r2, sp, #8
 801d8be:	4629      	mov	r1, r5
 801d8c0:	4650      	mov	r0, sl
 801d8c2:	f7ff f995 	bl	801cbf0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d8c6:	88a2      	ldrh	r2, [r4, #4]
 801d8c8:	8823      	ldrh	r3, [r4, #0]
 801d8ca:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d8ce:	4413      	add	r3, r2
 801d8d0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d8d4:	440a      	add	r2, r1
 801d8d6:	b29b      	uxth	r3, r3
 801d8d8:	b292      	uxth	r2, r2
 801d8da:	b211      	sxth	r1, r2
 801d8dc:	b218      	sxth	r0, r3
 801d8de:	4288      	cmp	r0, r1
 801d8e0:	dd12      	ble.n	801d908 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d8e2:	1a9b      	subs	r3, r3, r2
 801d8e4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d8e8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d8ec:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d8f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8f4:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d8f8:	23ff      	movs	r3, #255	; 0xff
 801d8fa:	4642      	mov	r2, r8
 801d8fc:	a902      	add	r1, sp, #8
 801d8fe:	4628      	mov	r0, r5
 801d900:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d904:	f7ff f88e 	bl	801ca24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d908:	88e2      	ldrh	r2, [r4, #6]
 801d90a:	8863      	ldrh	r3, [r4, #2]
 801d90c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d910:	4413      	add	r3, r2
 801d912:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d916:	440a      	add	r2, r1
 801d918:	b29b      	uxth	r3, r3
 801d91a:	b292      	uxth	r2, r2
 801d91c:	b211      	sxth	r1, r2
 801d91e:	b218      	sxth	r0, r3
 801d920:	4288      	cmp	r0, r1
 801d922:	dd81      	ble.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d924:	1a9b      	subs	r3, r3, r2
 801d926:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d92a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d92e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d932:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d936:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d93a:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d93e:	23ff      	movs	r3, #255	; 0xff
 801d940:	4642      	mov	r2, r8
 801d942:	e762      	b.n	801d80a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d944:	4633      	mov	r3, r6
 801d946:	4622      	mov	r2, r4
 801d948:	a902      	add	r1, sp, #8
 801d94a:	4628      	mov	r0, r5
 801d94c:	f7ff f9c0 	bl	801ccd0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d950:	e76a      	b.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d952:	e9cd 4600 	strd	r4, r6, [sp]
 801d956:	ab02      	add	r3, sp, #8
 801d958:	464a      	mov	r2, r9
 801d95a:	4629      	mov	r1, r5
 801d95c:	4650      	mov	r0, sl
 801d95e:	f7ff fd97 	bl	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d962:	e761      	b.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d964:	4638      	mov	r0, r7
 801d966:	f7fa fe31 	bl	80185cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d96a:	b950      	cbnz	r0, 801d982 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d96c:	e9cd 6000 	strd	r6, r0, [sp]
 801d970:	f8da 3000 	ldr.w	r3, [sl]
 801d974:	aa02      	add	r2, sp, #8
 801d976:	68de      	ldr	r6, [r3, #12]
 801d978:	4629      	mov	r1, r5
 801d97a:	4623      	mov	r3, r4
 801d97c:	4650      	mov	r0, sl
 801d97e:	47b0      	blx	r6
 801d980:	e752      	b.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d982:	f10d 0818 	add.w	r8, sp, #24
 801d986:	4639      	mov	r1, r7
 801d988:	4640      	mov	r0, r8
 801d98a:	f7fa fdd3 	bl	8018534 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d98e:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d992:	af04      	add	r7, sp, #16
 801d994:	e887 0003 	stmia.w	r7, {r0, r1}
 801d998:	4638      	mov	r0, r7
 801d99a:	4621      	mov	r1, r4
 801d99c:	f7f2 f83e 	bl	800fa1c <_ZN8touchgfx4RectaNERKS0_>
 801d9a0:	4638      	mov	r0, r7
 801d9a2:	f7f2 f87e 	bl	800faa2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d9a6:	b138      	cbz	r0, 801d9b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d9a8:	9600      	str	r6, [sp, #0]
 801d9aa:	4623      	mov	r3, r4
 801d9ac:	aa02      	add	r2, sp, #8
 801d9ae:	4649      	mov	r1, r9
 801d9b0:	4628      	mov	r0, r5
 801d9b2:	f7ff fdc9 	bl	801d548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d9b6:	e737      	b.n	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d9b8:	e9cd 6000 	strd	r6, r0, [sp]
 801d9bc:	f8da 3000 	ldr.w	r3, [sl]
 801d9c0:	aa02      	add	r2, sp, #8
 801d9c2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d9c6:	4629      	mov	r1, r5
 801d9c8:	463b      	mov	r3, r7
 801d9ca:	4650      	mov	r0, sl
 801d9cc:	47d8      	blx	fp
 801d9ce:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d9d2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d9d6:	4293      	cmp	r3, r2
 801d9d8:	dd13      	ble.n	801da02 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d9da:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d9de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d9e2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d9e6:	1a9b      	subs	r3, r3, r2
 801d9e8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d9ec:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d9f0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d9f4:	9600      	str	r6, [sp, #0]
 801d9f6:	4643      	mov	r3, r8
 801d9f8:	aa02      	add	r2, sp, #8
 801d9fa:	4649      	mov	r1, r9
 801d9fc:	4628      	mov	r0, r5
 801d9fe:	f7ff fda3 	bl	801d548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801da02:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801da06:	f9b4 2000 	ldrsh.w	r2, [r4]
 801da0a:	4293      	cmp	r3, r2
 801da0c:	dd13      	ble.n	801da36 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801da0e:	1a9b      	subs	r3, r3, r2
 801da10:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801da14:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801da18:	f8ad 2018 	strh.w	r2, [sp, #24]
 801da1c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801da20:	f8ad 301c 	strh.w	r3, [sp, #28]
 801da24:	f8ad 101e 	strh.w	r1, [sp, #30]
 801da28:	9600      	str	r6, [sp, #0]
 801da2a:	4643      	mov	r3, r8
 801da2c:	aa02      	add	r2, sp, #8
 801da2e:	4649      	mov	r1, r9
 801da30:	4628      	mov	r0, r5
 801da32:	f7ff fd89 	bl	801d548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801da36:	88a2      	ldrh	r2, [r4, #4]
 801da38:	8823      	ldrh	r3, [r4, #0]
 801da3a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801da3e:	4413      	add	r3, r2
 801da40:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801da44:	440a      	add	r2, r1
 801da46:	b29b      	uxth	r3, r3
 801da48:	b292      	uxth	r2, r2
 801da4a:	b211      	sxth	r1, r2
 801da4c:	b218      	sxth	r0, r3
 801da4e:	4288      	cmp	r0, r1
 801da50:	dd13      	ble.n	801da7a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801da52:	1a9b      	subs	r3, r3, r2
 801da54:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801da58:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801da5c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801da60:	f8ad 301c 	strh.w	r3, [sp, #28]
 801da64:	f8ad 001e 	strh.w	r0, [sp, #30]
 801da68:	9600      	str	r6, [sp, #0]
 801da6a:	4643      	mov	r3, r8
 801da6c:	aa02      	add	r2, sp, #8
 801da6e:	4649      	mov	r1, r9
 801da70:	4628      	mov	r0, r5
 801da72:	f8ad 701a 	strh.w	r7, [sp, #26]
 801da76:	f7ff fd67 	bl	801d548 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801da7a:	88e2      	ldrh	r2, [r4, #6]
 801da7c:	8863      	ldrh	r3, [r4, #2]
 801da7e:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801da82:	4413      	add	r3, r2
 801da84:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801da88:	440a      	add	r2, r1
 801da8a:	b29b      	uxth	r3, r3
 801da8c:	b292      	uxth	r2, r2
 801da8e:	b211      	sxth	r1, r2
 801da90:	b218      	sxth	r0, r3
 801da92:	4288      	cmp	r0, r1
 801da94:	f77f aec8 	ble.w	801d828 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da98:	f9b4 7000 	ldrsh.w	r7, [r4]
 801da9c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801daa0:	f8ad 7018 	strh.w	r7, [sp, #24]
 801daa4:	1a9b      	subs	r3, r3, r2
 801daa6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801daaa:	f8ad 101a 	strh.w	r1, [sp, #26]
 801daae:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dab2:	9600      	str	r6, [sp, #0]
 801dab4:	4643      	mov	r3, r8
 801dab6:	e779      	b.n	801d9ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dab8:	20012db4 	.word	0x20012db4

0801dabc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dabc:	b180      	cbz	r0, 801dae0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dabe:	2903      	cmp	r1, #3
 801dac0:	d81c      	bhi.n	801dafc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dac2:	e8df f001 	tbb	[pc, r1]
 801dac6:	1d02      	.short	0x1d02
 801dac8:	1f08      	.short	0x1f08
 801daca:	4b10      	ldr	r3, [pc, #64]	; (801db0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dacc:	8818      	ldrh	r0, [r3, #0]
 801dace:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dad2:	4240      	negs	r0, r0
 801dad4:	4770      	bx	lr
 801dad6:	4b0d      	ldr	r3, [pc, #52]	; (801db0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dad8:	8818      	ldrh	r0, [r3, #0]
 801dada:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dade:	4770      	bx	lr
 801dae0:	2903      	cmp	r1, #3
 801dae2:	d80b      	bhi.n	801dafc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dae4:	a301      	add	r3, pc, #4	; (adr r3, 801daec <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801dae6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801daea:	bf00      	nop
 801daec:	0801db01 	.word	0x0801db01
 801daf0:	0801dad7 	.word	0x0801dad7
 801daf4:	0801db05 	.word	0x0801db05
 801daf8:	0801dacb 	.word	0x0801dacb
 801dafc:	2000      	movs	r0, #0
 801dafe:	4770      	bx	lr
 801db00:	2001      	movs	r0, #1
 801db02:	4770      	bx	lr
 801db04:	f04f 30ff 	mov.w	r0, #4294967295
 801db08:	4770      	bx	lr
 801db0a:	bf00      	nop
 801db0c:	20012dae 	.word	0x20012dae

0801db10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801db10:	b180      	cbz	r0, 801db34 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801db12:	2903      	cmp	r1, #3
 801db14:	d81c      	bhi.n	801db50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801db16:	e8df f001 	tbb	[pc, r1]
 801db1a:	021d      	.short	0x021d
 801db1c:	071f      	.short	0x071f
 801db1e:	4b10      	ldr	r3, [pc, #64]	; (801db60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801db20:	8818      	ldrh	r0, [r3, #0]
 801db22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801db26:	4770      	bx	lr
 801db28:	4b0d      	ldr	r3, [pc, #52]	; (801db60 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801db2a:	8818      	ldrh	r0, [r3, #0]
 801db2c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801db30:	4240      	negs	r0, r0
 801db32:	4770      	bx	lr
 801db34:	2903      	cmp	r1, #3
 801db36:	d80b      	bhi.n	801db50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801db38:	a301      	add	r3, pc, #4	; (adr r3, 801db40 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801db3a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801db3e:	bf00      	nop
 801db40:	0801db1f 	.word	0x0801db1f
 801db44:	0801db59 	.word	0x0801db59
 801db48:	0801db29 	.word	0x0801db29
 801db4c:	0801db55 	.word	0x0801db55
 801db50:	2000      	movs	r0, #0
 801db52:	4770      	bx	lr
 801db54:	2001      	movs	r0, #1
 801db56:	4770      	bx	lr
 801db58:	f04f 30ff 	mov.w	r0, #4294967295
 801db5c:	4770      	bx	lr
 801db5e:	bf00      	nop
 801db60:	20012dae 	.word	0x20012dae

0801db64 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801db64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db68:	b099      	sub	sp, #100	; 0x64
 801db6a:	910b      	str	r1, [sp, #44]	; 0x2c
 801db6c:	a914      	add	r1, sp, #80	; 0x50
 801db6e:	e881 000c 	stmia.w	r1, {r2, r3}
 801db72:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801db76:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801db7a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801db7e:	9309      	str	r3, [sp, #36]	; 0x24
 801db80:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801db84:	9310      	str	r3, [sp, #64]	; 0x40
 801db86:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801db8a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801db8e:	930c      	str	r3, [sp, #48]	; 0x30
 801db90:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801db94:	798f      	ldrb	r7, [r1, #6]
 801db96:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801db9a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801db9e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801dba2:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801dba6:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801dbaa:	431f      	orrs	r7, r3
 801dbac:	f000 8195 	beq.w	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dbb0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801dbb4:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801dbb8:	f891 9007 	ldrb.w	r9, [r1, #7]
 801dbbc:	ea59 0903 	orrs.w	r9, r9, r3
 801dbc0:	f000 818b 	beq.w	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dbc4:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801dbc8:	b29b      	uxth	r3, r3
 801dbca:	2d00      	cmp	r5, #0
 801dbcc:	f000 812e 	beq.w	801de2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801dbd0:	1aed      	subs	r5, r5, r3
 801dbd2:	b2ad      	uxth	r5, r5
 801dbd4:	042b      	lsls	r3, r5, #16
 801dbd6:	d502      	bpl.n	801dbde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801dbd8:	1b64      	subs	r4, r4, r5
 801dbda:	b224      	sxth	r4, r4
 801dbdc:	2500      	movs	r5, #0
 801dbde:	f9b2 1000 	ldrsh.w	r1, [r2]
 801dbe2:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801dbe6:	428c      	cmp	r4, r1
 801dbe8:	b28b      	uxth	r3, r1
 801dbea:	bfbf      	itttt	lt
 801dbec:	18ed      	addlt	r5, r5, r3
 801dbee:	1b2c      	sublt	r4, r5, r4
 801dbf0:	b2a5      	uxthlt	r5, r4
 801dbf2:	460c      	movlt	r4, r1
 801dbf4:	8891      	ldrh	r1, [r2, #4]
 801dbf6:	440b      	add	r3, r1
 801dbf8:	b21b      	sxth	r3, r3
 801dbfa:	930f      	str	r3, [sp, #60]	; 0x3c
 801dbfc:	88d3      	ldrh	r3, [r2, #6]
 801dbfe:	8852      	ldrh	r2, [r2, #2]
 801dc00:	4413      	add	r3, r2
 801dc02:	b21b      	sxth	r3, r3
 801dc04:	930d      	str	r3, [sp, #52]	; 0x34
 801dc06:	4bbe      	ldr	r3, [pc, #760]	; (801df00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801dc08:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc0a:	f893 b000 	ldrb.w	fp, [r3]
 801dc0e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801dc12:	f1dc 0300 	rsbs	r3, ip, #0
 801dc16:	eb43 030c 	adc.w	r3, r3, ip
 801dc1a:	930e      	str	r3, [sp, #56]	; 0x38
 801dc1c:	4621      	mov	r1, r4
 801dc1e:	4653      	mov	r3, sl
 801dc20:	a814      	add	r0, sp, #80	; 0x50
 801dc22:	f7f6 fcce 	bl	80145c2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dc26:	4621      	mov	r1, r4
 801dc28:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dc2c:	4653      	mov	r3, sl
 801dc2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc30:	a814      	add	r0, sp, #80	; 0x50
 801dc32:	f7f6 fce3 	bl	80145fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dc36:	a918      	add	r1, sp, #96	; 0x60
 801dc38:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dc3c:	a817      	add	r0, sp, #92	; 0x5c
 801dc3e:	f7f6 fe09 	bl	8014854 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dc42:	f1ba 0f00 	cmp.w	sl, #0
 801dc46:	f040 80f4 	bne.w	801de32 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dc4a:	f1bb 0f01 	cmp.w	fp, #1
 801dc4e:	f040 80f8 	bne.w	801de42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801dc52:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dc54:	2b00      	cmp	r3, #0
 801dc56:	f040 8145 	bne.w	801dee4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dc5a:	b2ba      	uxth	r2, r7
 801dc5c:	b905      	cbnz	r5, 801dc60 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dc5e:	b16e      	cbz	r6, 801dc7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dc60:	fb06 5302 	mla	r3, r6, r2, r5
 801dc64:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dc66:	fb08 f303 	mul.w	r3, r8, r3
 801dc6a:	4631      	mov	r1, r6
 801dc6c:	f003 0607 	and.w	r6, r3, #7
 801dc70:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dc74:	9328      	str	r3, [sp, #160]	; 0xa0
 801dc76:	eba9 0301 	sub.w	r3, r9, r1
 801dc7a:	930a      	str	r3, [sp, #40]	; 0x28
 801dc7c:	4651      	mov	r1, sl
 801dc7e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dc80:	f7ff ff1c 	bl	801dabc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dc84:	4681      	mov	r9, r0
 801dc86:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dc88:	f7ff ff42 	bl	801db10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dc8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc8e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dc90:	eba3 0a01 	sub.w	sl, r3, r1
 801dc94:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dc96:	459a      	cmp	sl, r3
 801dc98:	bfa8      	it	ge
 801dc9a:	469a      	movge	sl, r3
 801dc9c:	f1ba 0f00 	cmp.w	sl, #0
 801dca0:	4683      	mov	fp, r0
 801dca2:	f340 811a 	ble.w	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dca6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dca8:	1b64      	subs	r4, r4, r5
 801dcaa:	1b1c      	subs	r4, r3, r4
 801dcac:	42bc      	cmp	r4, r7
 801dcae:	bfd4      	ite	le
 801dcb0:	ebc5 0504 	rsble	r5, r5, r4
 801dcb4:	ebc5 0507 	rsbgt	r5, r5, r7
 801dcb8:	2d00      	cmp	r5, #0
 801dcba:	f340 810e 	ble.w	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dcbe:	1b52      	subs	r2, r2, r5
 801dcc0:	fb08 f302 	mul.w	r3, r8, r2
 801dcc4:	930f      	str	r3, [sp, #60]	; 0x3c
 801dcc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dcc8:	2b00      	cmp	r3, #0
 801dcca:	f040 8116 	bne.w	801defa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dcce:	4b8d      	ldr	r3, [pc, #564]	; (801df04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dcd0:	6818      	ldr	r0, [r3, #0]
 801dcd2:	6803      	ldr	r3, [r0, #0]
 801dcd4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dcd6:	4798      	blx	r3
 801dcd8:	2301      	movs	r3, #1
 801dcda:	fa03 f308 	lsl.w	r3, r3, r8
 801dcde:	4a8a      	ldr	r2, [pc, #552]	; (801df08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dce0:	3b01      	subs	r3, #1
 801dce2:	b2db      	uxtb	r3, r3
 801dce4:	8811      	ldrh	r1, [r2, #0]
 801dce6:	930e      	str	r3, [sp, #56]	; 0x38
 801dce8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801dcec:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dcf0:	fb01 2303 	mla	r3, r1, r3, r2
 801dcf4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dcf8:	930a      	str	r3, [sp, #40]	; 0x28
 801dcfa:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcfc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dd00:	9313      	str	r3, [sp, #76]	; 0x4c
 801dd02:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dd04:	0a19      	lsrs	r1, r3, #8
 801dd06:	b2cb      	uxtb	r3, r1
 801dd08:	9312      	str	r3, [sp, #72]	; 0x48
 801dd0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dd0c:	b2db      	uxtb	r3, r3
 801dd0e:	9311      	str	r3, [sp, #68]	; 0x44
 801dd10:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dd12:	095a      	lsrs	r2, r3, #5
 801dd14:	4b7d      	ldr	r3, [pc, #500]	; (801df0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dd16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dd1a:	400b      	ands	r3, r1
 801dd1c:	4313      	orrs	r3, r2
 801dd1e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dd20:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dd24:	4313      	orrs	r3, r2
 801dd26:	b29b      	uxth	r3, r3
 801dd28:	9310      	str	r3, [sp, #64]	; 0x40
 801dd2a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dd2c:	781a      	ldrb	r2, [r3, #0]
 801dd2e:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dd32:	4132      	asrs	r2, r6
 801dd34:	fb05 b919 	mls	r9, r5, r9, fp
 801dd38:	fb03 fb05 	mul.w	fp, r3, r5
 801dd3c:	b2d2      	uxtb	r2, r2
 801dd3e:	930d      	str	r3, [sp, #52]	; 0x34
 801dd40:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dd44:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dd48:	f0c0 80f5 	bcc.w	801df36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dd4c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dd50:	46ae      	mov	lr, r5
 801dd52:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dd56:	f0c0 80dd 	bcc.w	801df14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dd5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd5c:	4013      	ands	r3, r2
 801dd5e:	d055      	beq.n	801de0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dd60:	20ff      	movs	r0, #255	; 0xff
 801dd62:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dd64:	fb90 f1f1 	sdiv	r1, r0, r1
 801dd68:	434b      	muls	r3, r1
 801dd6a:	2bfe      	cmp	r3, #254	; 0xfe
 801dd6c:	dd03      	ble.n	801dd76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dd6e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd70:	4281      	cmp	r1, r0
 801dd72:	f000 80cd 	beq.w	801df10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dd76:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd78:	f8bc 4000 	ldrh.w	r4, [ip]
 801dd7c:	fb11 f303 	smulbb	r3, r1, r3
 801dd80:	b29b      	uxth	r3, r3
 801dd82:	1c59      	adds	r1, r3, #1
 801dd84:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dd88:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dd8c:	b29f      	uxth	r7, r3
 801dd8e:	43db      	mvns	r3, r3
 801dd90:	b2db      	uxtb	r3, r3
 801dd92:	9309      	str	r3, [sp, #36]	; 0x24
 801dd94:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dd96:	1220      	asrs	r0, r4, #8
 801dd98:	fb13 f907 	smulbb	r9, r3, r7
 801dd9c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dda0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dda2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dda6:	fb00 9003 	mla	r0, r0, r3, r9
 801ddaa:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ddac:	10e1      	asrs	r1, r4, #3
 801ddae:	fb13 f907 	smulbb	r9, r3, r7
 801ddb2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ddb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ddb8:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801ddbc:	fb01 9103 	mla	r1, r1, r3, r9
 801ddc0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ddc2:	00e4      	lsls	r4, r4, #3
 801ddc4:	fb13 f707 	smulbb	r7, r3, r7
 801ddc8:	b2e4      	uxtb	r4, r4
 801ddca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ddcc:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801ddd0:	fb04 7403 	mla	r4, r4, r3, r7
 801ddd4:	b280      	uxth	r0, r0
 801ddd6:	b2a4      	uxth	r4, r4
 801ddd8:	1c43      	adds	r3, r0, #1
 801ddda:	f104 0901 	add.w	r9, r4, #1
 801ddde:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dde2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dde6:	b289      	uxth	r1, r1
 801dde8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801ddec:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ddf0:	ea49 0000 	orr.w	r0, r9, r0
 801ddf4:	f101 0901 	add.w	r9, r1, #1
 801ddf8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ddfc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801de00:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801de04:	ea40 0009 	orr.w	r0, r0, r9
 801de08:	f8ac 0000 	strh.w	r0, [ip]
 801de0c:	4446      	add	r6, r8
 801de0e:	b2b6      	uxth	r6, r6
 801de10:	2e07      	cmp	r6, #7
 801de12:	bf81      	itttt	hi
 801de14:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801de16:	785a      	ldrbhi	r2, [r3, #1]
 801de18:	3301      	addhi	r3, #1
 801de1a:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801de1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801de1e:	bf9a      	itte	ls
 801de20:	fa42 f208 	asrls.w	r2, r2, r8
 801de24:	b2d2      	uxtbls	r2, r2
 801de26:	2600      	movhi	r6, #0
 801de28:	449c      	add	ip, r3
 801de2a:	e792      	b.n	801dd52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801de2c:	441c      	add	r4, r3
 801de2e:	b224      	sxth	r4, r4
 801de30:	e6d5      	b.n	801dbde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801de32:	f1ba 0f01 	cmp.w	sl, #1
 801de36:	f47f af0c 	bne.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de3a:	f1bb 0f01 	cmp.w	fp, #1
 801de3e:	f47f af08 	bne.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de42:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801df04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801de46:	f8db 0000 	ldr.w	r0, [fp]
 801de4a:	6803      	ldr	r3, [r0, #0]
 801de4c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de4e:	4798      	blx	r3
 801de50:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801de54:	465a      	mov	r2, fp
 801de56:	d006      	beq.n	801de66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801de58:	f1b8 0f04 	cmp.w	r8, #4
 801de5c:	d140      	bne.n	801dee0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801de5e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de60:	3300      	adds	r3, #0
 801de62:	bf18      	it	ne
 801de64:	2301      	movne	r3, #1
 801de66:	0580      	lsls	r0, r0, #22
 801de68:	d56e      	bpl.n	801df48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801de6a:	f1b8 0f08 	cmp.w	r8, #8
 801de6e:	d16b      	bne.n	801df48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801de70:	2b00      	cmp	r3, #0
 801de72:	bf0c      	ite	eq
 801de74:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801de78:	f44f 7180 	movne.w	r1, #256	; 0x100
 801de7c:	2d00      	cmp	r5, #0
 801de7e:	f47f aee8 	bne.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de82:	2e00      	cmp	r6, #0
 801de84:	f47f aee5 	bne.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de88:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801de8a:	19e3      	adds	r3, r4, r7
 801de8c:	4283      	cmp	r3, r0
 801de8e:	f73f aee0 	bgt.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de94:	980d      	ldr	r0, [sp, #52]	; 0x34
 801de96:	444b      	add	r3, r9
 801de98:	4283      	cmp	r3, r0
 801de9a:	f73f aeda 	bgt.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de9e:	6810      	ldr	r0, [r2, #0]
 801dea0:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801dea4:	6804      	ldr	r4, [r0, #0]
 801dea6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801deaa:	b2bf      	uxth	r7, r7
 801deac:	f1b8 0f08 	cmp.w	r8, #8
 801deb0:	f04f 0500 	mov.w	r5, #0
 801deb4:	bf18      	it	ne
 801deb6:	3701      	addne	r7, #1
 801deb8:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801debc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801debe:	9104      	str	r1, [sp, #16]
 801dec0:	bf18      	it	ne
 801dec2:	f027 0701 	bicne.w	r7, r7, #1
 801dec6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801dec8:	bf18      	it	ne
 801deca:	b2bf      	uxthne	r7, r7
 801decc:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801ded0:	e9cd 7900 	strd	r7, r9, [sp]
 801ded4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ded6:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801ded8:	47a0      	blx	r4
 801deda:	b019      	add	sp, #100	; 0x64
 801dedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dee0:	2300      	movs	r3, #0
 801dee2:	e7c0      	b.n	801de66 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dee4:	2208      	movs	r2, #8
 801dee6:	fb92 f3f8 	sdiv	r3, r2, r8
 801deea:	1e5a      	subs	r2, r3, #1
 801deec:	443a      	add	r2, r7
 801deee:	fb92 f2f3 	sdiv	r2, r2, r3
 801def2:	fb12 f203 	smulbb	r2, r2, r3
 801def6:	b292      	uxth	r2, r2
 801def8:	e6b0      	b.n	801dc5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801defa:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801defc:	e6ec      	b.n	801dcd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801defe:	bf00      	nop
 801df00:	20012dac 	.word	0x20012dac
 801df04:	20012db4 	.word	0x20012db4
 801df08:	20012dae 	.word	0x20012dae
 801df0c:	00fff800 	.word	0x00fff800
 801df10:	9810      	ldr	r0, [sp, #64]	; 0x40
 801df12:	e779      	b.n	801de08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801df14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df16:	b153      	cbz	r3, 801df2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801df18:	441e      	add	r6, r3
 801df1a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df1c:	b2b6      	uxth	r6, r6
 801df1e:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801df22:	f006 0607 	and.w	r6, r6, #7
 801df26:	781a      	ldrb	r2, [r3, #0]
 801df28:	9328      	str	r3, [sp, #160]	; 0xa0
 801df2a:	4132      	asrs	r2, r6
 801df2c:	b2d2      	uxtb	r2, r2
 801df2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801df30:	445b      	add	r3, fp
 801df32:	930a      	str	r3, [sp, #40]	; 0x28
 801df34:	e706      	b.n	801dd44 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801df36:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df38:	2b00      	cmp	r3, #0
 801df3a:	d1ce      	bne.n	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df3c:	4b05      	ldr	r3, [pc, #20]	; (801df54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801df3e:	6818      	ldr	r0, [r3, #0]
 801df40:	6803      	ldr	r3, [r0, #0]
 801df42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801df44:	4798      	blx	r3
 801df46:	e7c8      	b.n	801deda <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df48:	2b00      	cmp	r3, #0
 801df4a:	f43f ae82 	beq.w	801dc52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801df4e:	f44f 7180 	mov.w	r1, #256	; 0x100
 801df52:	e793      	b.n	801de7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801df54:	20012db4 	.word	0x20012db4

0801df58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801df58:	b538      	push	{r3, r4, r5, lr}
 801df5a:	4c15      	ldr	r4, [pc, #84]	; (801dfb0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801df5c:	7823      	ldrb	r3, [r4, #0]
 801df5e:	f3bf 8f5b 	dmb	ish
 801df62:	07da      	lsls	r2, r3, #31
 801df64:	4605      	mov	r5, r0
 801df66:	d40b      	bmi.n	801df80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801df68:	4620      	mov	r0, r4
 801df6a:	f00a fee2 	bl	8028d32 <__cxa_guard_acquire>
 801df6e:	b138      	cbz	r0, 801df80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801df70:	4620      	mov	r0, r4
 801df72:	f00a feea 	bl	8028d4a <__cxa_guard_release>
 801df76:	4a0f      	ldr	r2, [pc, #60]	; (801dfb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df78:	490f      	ldr	r1, [pc, #60]	; (801dfb8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801df7a:	4810      	ldr	r0, [pc, #64]	; (801dfbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df7c:	f00a fed2 	bl	8028d24 <__aeabi_atexit>
 801df80:	4c0f      	ldr	r4, [pc, #60]	; (801dfc0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801df82:	7823      	ldrb	r3, [r4, #0]
 801df84:	f3bf 8f5b 	dmb	ish
 801df88:	07db      	lsls	r3, r3, #31
 801df8a:	d40b      	bmi.n	801dfa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df8c:	4620      	mov	r0, r4
 801df8e:	f00a fed0 	bl	8028d32 <__cxa_guard_acquire>
 801df92:	b138      	cbz	r0, 801dfa4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df94:	4620      	mov	r0, r4
 801df96:	f00a fed8 	bl	8028d4a <__cxa_guard_release>
 801df9a:	4a06      	ldr	r2, [pc, #24]	; (801dfb4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df9c:	4909      	ldr	r1, [pc, #36]	; (801dfc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801df9e:	480a      	ldr	r0, [pc, #40]	; (801dfc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dfa0:	f00a fec0 	bl	8028d24 <__aeabi_atexit>
 801dfa4:	4b05      	ldr	r3, [pc, #20]	; (801dfbc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dfa6:	612b      	str	r3, [r5, #16]
 801dfa8:	4b07      	ldr	r3, [pc, #28]	; (801dfc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dfaa:	616b      	str	r3, [r5, #20]
 801dfac:	bd38      	pop	{r3, r4, r5, pc}
 801dfae:	bf00      	nop
 801dfb0:	20012e94 	.word	0x20012e94
 801dfb4:	20000000 	.word	0x20000000
 801dfb8:	0801ad5b 	.word	0x0801ad5b
 801dfbc:	200000d4 	.word	0x200000d4
 801dfc0:	20012e98 	.word	0x20012e98
 801dfc4:	0801ad59 	.word	0x0801ad59
 801dfc8:	200000d8 	.word	0x200000d8

0801dfcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801dfcc:	b538      	push	{r3, r4, r5, lr}
 801dfce:	4c15      	ldr	r4, [pc, #84]	; (801e024 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801dfd0:	7823      	ldrb	r3, [r4, #0]
 801dfd2:	f3bf 8f5b 	dmb	ish
 801dfd6:	07da      	lsls	r2, r3, #31
 801dfd8:	4605      	mov	r5, r0
 801dfda:	d40b      	bmi.n	801dff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dfdc:	4620      	mov	r0, r4
 801dfde:	f00a fea8 	bl	8028d32 <__cxa_guard_acquire>
 801dfe2:	b138      	cbz	r0, 801dff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dfe4:	4620      	mov	r0, r4
 801dfe6:	f00a feb0 	bl	8028d4a <__cxa_guard_release>
 801dfea:	4a0f      	ldr	r2, [pc, #60]	; (801e028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dfec:	490f      	ldr	r1, [pc, #60]	; (801e02c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dfee:	4810      	ldr	r0, [pc, #64]	; (801e030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dff0:	f00a fe98 	bl	8028d24 <__aeabi_atexit>
 801dff4:	4c0f      	ldr	r4, [pc, #60]	; (801e034 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dff6:	7823      	ldrb	r3, [r4, #0]
 801dff8:	f3bf 8f5b 	dmb	ish
 801dffc:	07db      	lsls	r3, r3, #31
 801dffe:	d40b      	bmi.n	801e018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e000:	4620      	mov	r0, r4
 801e002:	f00a fe96 	bl	8028d32 <__cxa_guard_acquire>
 801e006:	b138      	cbz	r0, 801e018 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e008:	4620      	mov	r0, r4
 801e00a:	f00a fe9e 	bl	8028d4a <__cxa_guard_release>
 801e00e:	4a06      	ldr	r2, [pc, #24]	; (801e028 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e010:	4909      	ldr	r1, [pc, #36]	; (801e038 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e012:	480a      	ldr	r0, [pc, #40]	; (801e03c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e014:	f00a fe86 	bl	8028d24 <__aeabi_atexit>
 801e018:	4b05      	ldr	r3, [pc, #20]	; (801e030 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e01a:	60ab      	str	r3, [r5, #8]
 801e01c:	4b07      	ldr	r3, [pc, #28]	; (801e03c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e01e:	60eb      	str	r3, [r5, #12]
 801e020:	bd38      	pop	{r3, r4, r5, pc}
 801e022:	bf00      	nop
 801e024:	20012e6c 	.word	0x20012e6c
 801e028:	20000000 	.word	0x20000000
 801e02c:	0801ad5f 	.word	0x0801ad5f
 801e030:	200000ac 	.word	0x200000ac
 801e034:	20012e70 	.word	0x20012e70
 801e038:	0801ad5d 	.word	0x0801ad5d
 801e03c:	200000b0 	.word	0x200000b0

0801e040 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e040:	b510      	push	{r4, lr}
 801e042:	4604      	mov	r4, r0
 801e044:	f7ff ff88 	bl	801df58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e048:	4620      	mov	r0, r4
 801e04a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e04e:	f7ff bfbd 	b.w	801dfcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e054:	b538      	push	{r3, r4, r5, lr}
 801e056:	4c15      	ldr	r4, [pc, #84]	; (801e0ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e058:	7823      	ldrb	r3, [r4, #0]
 801e05a:	f3bf 8f5b 	dmb	ish
 801e05e:	07da      	lsls	r2, r3, #31
 801e060:	4605      	mov	r5, r0
 801e062:	d40b      	bmi.n	801e07c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e064:	4620      	mov	r0, r4
 801e066:	f00a fe64 	bl	8028d32 <__cxa_guard_acquire>
 801e06a:	b138      	cbz	r0, 801e07c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e06c:	4620      	mov	r0, r4
 801e06e:	f00a fe6c 	bl	8028d4a <__cxa_guard_release>
 801e072:	4a0f      	ldr	r2, [pc, #60]	; (801e0b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e074:	490f      	ldr	r1, [pc, #60]	; (801e0b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e076:	4810      	ldr	r0, [pc, #64]	; (801e0b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e078:	f00a fe54 	bl	8028d24 <__aeabi_atexit>
 801e07c:	4c0f      	ldr	r4, [pc, #60]	; (801e0bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e07e:	7823      	ldrb	r3, [r4, #0]
 801e080:	f3bf 8f5b 	dmb	ish
 801e084:	07db      	lsls	r3, r3, #31
 801e086:	d40b      	bmi.n	801e0a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e088:	4620      	mov	r0, r4
 801e08a:	f00a fe52 	bl	8028d32 <__cxa_guard_acquire>
 801e08e:	b138      	cbz	r0, 801e0a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e090:	4620      	mov	r0, r4
 801e092:	f00a fe5a 	bl	8028d4a <__cxa_guard_release>
 801e096:	4a06      	ldr	r2, [pc, #24]	; (801e0b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e098:	4909      	ldr	r1, [pc, #36]	; (801e0c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e09a:	480a      	ldr	r0, [pc, #40]	; (801e0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e09c:	f00a fe42 	bl	8028d24 <__aeabi_atexit>
 801e0a0:	4b05      	ldr	r3, [pc, #20]	; (801e0b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e0a2:	622b      	str	r3, [r5, #32]
 801e0a4:	4b07      	ldr	r3, [pc, #28]	; (801e0c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e0a6:	626b      	str	r3, [r5, #36]	; 0x24
 801e0a8:	bd38      	pop	{r3, r4, r5, pc}
 801e0aa:	bf00      	nop
 801e0ac:	20012e9c 	.word	0x20012e9c
 801e0b0:	20000000 	.word	0x20000000
 801e0b4:	0801ad53 	.word	0x0801ad53
 801e0b8:	200000dc 	.word	0x200000dc
 801e0bc:	20012ea0 	.word	0x20012ea0
 801e0c0:	0801ad51 	.word	0x0801ad51
 801e0c4:	200000e0 	.word	0x200000e0

0801e0c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e0c8:	b538      	push	{r3, r4, r5, lr}
 801e0ca:	4c15      	ldr	r4, [pc, #84]	; (801e120 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e0cc:	7823      	ldrb	r3, [r4, #0]
 801e0ce:	f3bf 8f5b 	dmb	ish
 801e0d2:	07da      	lsls	r2, r3, #31
 801e0d4:	4605      	mov	r5, r0
 801e0d6:	d40b      	bmi.n	801e0f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e0d8:	4620      	mov	r0, r4
 801e0da:	f00a fe2a 	bl	8028d32 <__cxa_guard_acquire>
 801e0de:	b138      	cbz	r0, 801e0f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e0e0:	4620      	mov	r0, r4
 801e0e2:	f00a fe32 	bl	8028d4a <__cxa_guard_release>
 801e0e6:	4a0f      	ldr	r2, [pc, #60]	; (801e124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e0e8:	490f      	ldr	r1, [pc, #60]	; (801e128 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e0ea:	4810      	ldr	r0, [pc, #64]	; (801e12c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e0ec:	f00a fe1a 	bl	8028d24 <__aeabi_atexit>
 801e0f0:	4c0f      	ldr	r4, [pc, #60]	; (801e130 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e0f2:	7823      	ldrb	r3, [r4, #0]
 801e0f4:	f3bf 8f5b 	dmb	ish
 801e0f8:	07db      	lsls	r3, r3, #31
 801e0fa:	d40b      	bmi.n	801e114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e0fc:	4620      	mov	r0, r4
 801e0fe:	f00a fe18 	bl	8028d32 <__cxa_guard_acquire>
 801e102:	b138      	cbz	r0, 801e114 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e104:	4620      	mov	r0, r4
 801e106:	f00a fe20 	bl	8028d4a <__cxa_guard_release>
 801e10a:	4a06      	ldr	r2, [pc, #24]	; (801e124 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e10c:	4909      	ldr	r1, [pc, #36]	; (801e134 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e10e:	480a      	ldr	r0, [pc, #40]	; (801e138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e110:	f00a fe08 	bl	8028d24 <__aeabi_atexit>
 801e114:	4b05      	ldr	r3, [pc, #20]	; (801e12c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e116:	61ab      	str	r3, [r5, #24]
 801e118:	4b07      	ldr	r3, [pc, #28]	; (801e138 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e11a:	61eb      	str	r3, [r5, #28]
 801e11c:	bd38      	pop	{r3, r4, r5, pc}
 801e11e:	bf00      	nop
 801e120:	20012e74 	.word	0x20012e74
 801e124:	20000000 	.word	0x20000000
 801e128:	0801ad57 	.word	0x0801ad57
 801e12c:	200000b4 	.word	0x200000b4
 801e130:	20012e78 	.word	0x20012e78
 801e134:	0801ad55 	.word	0x0801ad55
 801e138:	200000b8 	.word	0x200000b8

0801e13c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e13c:	b510      	push	{r4, lr}
 801e13e:	4604      	mov	r4, r0
 801e140:	f7ff ff88 	bl	801e054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e144:	4620      	mov	r0, r4
 801e146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e14a:	f7ff bfbd 	b.w	801e0c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e150 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e150:	b538      	push	{r3, r4, r5, lr}
 801e152:	4c15      	ldr	r4, [pc, #84]	; (801e1a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e154:	7823      	ldrb	r3, [r4, #0]
 801e156:	f3bf 8f5b 	dmb	ish
 801e15a:	07da      	lsls	r2, r3, #31
 801e15c:	4605      	mov	r5, r0
 801e15e:	d40b      	bmi.n	801e178 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e160:	4620      	mov	r0, r4
 801e162:	f00a fde6 	bl	8028d32 <__cxa_guard_acquire>
 801e166:	b138      	cbz	r0, 801e178 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e168:	4620      	mov	r0, r4
 801e16a:	f00a fdee 	bl	8028d4a <__cxa_guard_release>
 801e16e:	4a0f      	ldr	r2, [pc, #60]	; (801e1ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e170:	490f      	ldr	r1, [pc, #60]	; (801e1b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e172:	4810      	ldr	r0, [pc, #64]	; (801e1b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e174:	f00a fdd6 	bl	8028d24 <__aeabi_atexit>
 801e178:	4c0f      	ldr	r4, [pc, #60]	; (801e1b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e17a:	7823      	ldrb	r3, [r4, #0]
 801e17c:	f3bf 8f5b 	dmb	ish
 801e180:	07db      	lsls	r3, r3, #31
 801e182:	d40b      	bmi.n	801e19c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e184:	4620      	mov	r0, r4
 801e186:	f00a fdd4 	bl	8028d32 <__cxa_guard_acquire>
 801e18a:	b138      	cbz	r0, 801e19c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e18c:	4620      	mov	r0, r4
 801e18e:	f00a fddc 	bl	8028d4a <__cxa_guard_release>
 801e192:	4a06      	ldr	r2, [pc, #24]	; (801e1ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e194:	4909      	ldr	r1, [pc, #36]	; (801e1bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e196:	480a      	ldr	r0, [pc, #40]	; (801e1c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e198:	f00a fdc4 	bl	8028d24 <__aeabi_atexit>
 801e19c:	4b05      	ldr	r3, [pc, #20]	; (801e1b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e19e:	632b      	str	r3, [r5, #48]	; 0x30
 801e1a0:	4b07      	ldr	r3, [pc, #28]	; (801e1c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e1a2:	636b      	str	r3, [r5, #52]	; 0x34
 801e1a4:	bd38      	pop	{r3, r4, r5, pc}
 801e1a6:	bf00      	nop
 801e1a8:	20012eac 	.word	0x20012eac
 801e1ac:	20000000 	.word	0x20000000
 801e1b0:	0801ad4b 	.word	0x0801ad4b
 801e1b4:	200000ec 	.word	0x200000ec
 801e1b8:	20012eb0 	.word	0x20012eb0
 801e1bc:	0801ad49 	.word	0x0801ad49
 801e1c0:	200000f0 	.word	0x200000f0

0801e1c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e1c4:	b538      	push	{r3, r4, r5, lr}
 801e1c6:	4c15      	ldr	r4, [pc, #84]	; (801e21c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e1c8:	7823      	ldrb	r3, [r4, #0]
 801e1ca:	f3bf 8f5b 	dmb	ish
 801e1ce:	07da      	lsls	r2, r3, #31
 801e1d0:	4605      	mov	r5, r0
 801e1d2:	d40b      	bmi.n	801e1ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e1d4:	4620      	mov	r0, r4
 801e1d6:	f00a fdac 	bl	8028d32 <__cxa_guard_acquire>
 801e1da:	b138      	cbz	r0, 801e1ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e1dc:	4620      	mov	r0, r4
 801e1de:	f00a fdb4 	bl	8028d4a <__cxa_guard_release>
 801e1e2:	4a0f      	ldr	r2, [pc, #60]	; (801e220 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e1e4:	490f      	ldr	r1, [pc, #60]	; (801e224 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e1e6:	4810      	ldr	r0, [pc, #64]	; (801e228 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e1e8:	f00a fd9c 	bl	8028d24 <__aeabi_atexit>
 801e1ec:	4c0f      	ldr	r4, [pc, #60]	; (801e22c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e1ee:	7823      	ldrb	r3, [r4, #0]
 801e1f0:	f3bf 8f5b 	dmb	ish
 801e1f4:	07db      	lsls	r3, r3, #31
 801e1f6:	d40b      	bmi.n	801e210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e1f8:	4620      	mov	r0, r4
 801e1fa:	f00a fd9a 	bl	8028d32 <__cxa_guard_acquire>
 801e1fe:	b138      	cbz	r0, 801e210 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e200:	4620      	mov	r0, r4
 801e202:	f00a fda2 	bl	8028d4a <__cxa_guard_release>
 801e206:	4a06      	ldr	r2, [pc, #24]	; (801e220 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e208:	4909      	ldr	r1, [pc, #36]	; (801e230 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e20a:	480a      	ldr	r0, [pc, #40]	; (801e234 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e20c:	f00a fd8a 	bl	8028d24 <__aeabi_atexit>
 801e210:	4b05      	ldr	r3, [pc, #20]	; (801e228 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e212:	62ab      	str	r3, [r5, #40]	; 0x28
 801e214:	4b07      	ldr	r3, [pc, #28]	; (801e234 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e216:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e218:	bd38      	pop	{r3, r4, r5, pc}
 801e21a:	bf00      	nop
 801e21c:	20012e7c 	.word	0x20012e7c
 801e220:	20000000 	.word	0x20000000
 801e224:	0801ad4f 	.word	0x0801ad4f
 801e228:	200000bc 	.word	0x200000bc
 801e22c:	20012e80 	.word	0x20012e80
 801e230:	0801ad4d 	.word	0x0801ad4d
 801e234:	200000c0 	.word	0x200000c0

0801e238 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e238:	b510      	push	{r4, lr}
 801e23a:	4604      	mov	r4, r0
 801e23c:	f7ff ff88 	bl	801e150 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e240:	4620      	mov	r0, r4
 801e242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e246:	f7ff bfbd 	b.w	801e1c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e24c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e24c:	b538      	push	{r3, r4, r5, lr}
 801e24e:	4c15      	ldr	r4, [pc, #84]	; (801e2a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e250:	7823      	ldrb	r3, [r4, #0]
 801e252:	f3bf 8f5b 	dmb	ish
 801e256:	07da      	lsls	r2, r3, #31
 801e258:	4605      	mov	r5, r0
 801e25a:	d40b      	bmi.n	801e274 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e25c:	4620      	mov	r0, r4
 801e25e:	f00a fd68 	bl	8028d32 <__cxa_guard_acquire>
 801e262:	b138      	cbz	r0, 801e274 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e264:	4620      	mov	r0, r4
 801e266:	f00a fd70 	bl	8028d4a <__cxa_guard_release>
 801e26a:	4a0f      	ldr	r2, [pc, #60]	; (801e2a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e26c:	490f      	ldr	r1, [pc, #60]	; (801e2ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e26e:	4810      	ldr	r0, [pc, #64]	; (801e2b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e270:	f00a fd58 	bl	8028d24 <__aeabi_atexit>
 801e274:	4c0f      	ldr	r4, [pc, #60]	; (801e2b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e276:	7823      	ldrb	r3, [r4, #0]
 801e278:	f3bf 8f5b 	dmb	ish
 801e27c:	07db      	lsls	r3, r3, #31
 801e27e:	d40b      	bmi.n	801e298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e280:	4620      	mov	r0, r4
 801e282:	f00a fd56 	bl	8028d32 <__cxa_guard_acquire>
 801e286:	b138      	cbz	r0, 801e298 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e288:	4620      	mov	r0, r4
 801e28a:	f00a fd5e 	bl	8028d4a <__cxa_guard_release>
 801e28e:	4a06      	ldr	r2, [pc, #24]	; (801e2a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e290:	4909      	ldr	r1, [pc, #36]	; (801e2b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e292:	480a      	ldr	r0, [pc, #40]	; (801e2bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e294:	f00a fd46 	bl	8028d24 <__aeabi_atexit>
 801e298:	4b05      	ldr	r3, [pc, #20]	; (801e2b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e29a:	652b      	str	r3, [r5, #80]	; 0x50
 801e29c:	4b07      	ldr	r3, [pc, #28]	; (801e2bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e29e:	656b      	str	r3, [r5, #84]	; 0x54
 801e2a0:	bd38      	pop	{r3, r4, r5, pc}
 801e2a2:	bf00      	nop
 801e2a4:	20012eb4 	.word	0x20012eb4
 801e2a8:	20000000 	.word	0x20000000
 801e2ac:	0801ad3b 	.word	0x0801ad3b
 801e2b0:	200000f4 	.word	0x200000f4
 801e2b4:	20012eb8 	.word	0x20012eb8
 801e2b8:	0801ad39 	.word	0x0801ad39
 801e2bc:	200000f8 	.word	0x200000f8

0801e2c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e2c0:	b538      	push	{r3, r4, r5, lr}
 801e2c2:	4c15      	ldr	r4, [pc, #84]	; (801e318 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e2c4:	7823      	ldrb	r3, [r4, #0]
 801e2c6:	f3bf 8f5b 	dmb	ish
 801e2ca:	07da      	lsls	r2, r3, #31
 801e2cc:	4605      	mov	r5, r0
 801e2ce:	d40b      	bmi.n	801e2e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e2d0:	4620      	mov	r0, r4
 801e2d2:	f00a fd2e 	bl	8028d32 <__cxa_guard_acquire>
 801e2d6:	b138      	cbz	r0, 801e2e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e2d8:	4620      	mov	r0, r4
 801e2da:	f00a fd36 	bl	8028d4a <__cxa_guard_release>
 801e2de:	4a0f      	ldr	r2, [pc, #60]	; (801e31c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e2e0:	490f      	ldr	r1, [pc, #60]	; (801e320 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e2e2:	4810      	ldr	r0, [pc, #64]	; (801e324 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e2e4:	f00a fd1e 	bl	8028d24 <__aeabi_atexit>
 801e2e8:	4c0f      	ldr	r4, [pc, #60]	; (801e328 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e2ea:	7823      	ldrb	r3, [r4, #0]
 801e2ec:	f3bf 8f5b 	dmb	ish
 801e2f0:	07db      	lsls	r3, r3, #31
 801e2f2:	d40b      	bmi.n	801e30c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e2f4:	4620      	mov	r0, r4
 801e2f6:	f00a fd1c 	bl	8028d32 <__cxa_guard_acquire>
 801e2fa:	b138      	cbz	r0, 801e30c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e2fc:	4620      	mov	r0, r4
 801e2fe:	f00a fd24 	bl	8028d4a <__cxa_guard_release>
 801e302:	4a06      	ldr	r2, [pc, #24]	; (801e31c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e304:	4909      	ldr	r1, [pc, #36]	; (801e32c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e306:	480a      	ldr	r0, [pc, #40]	; (801e330 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e308:	f00a fd0c 	bl	8028d24 <__aeabi_atexit>
 801e30c:	4b05      	ldr	r3, [pc, #20]	; (801e324 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e30e:	64ab      	str	r3, [r5, #72]	; 0x48
 801e310:	4b07      	ldr	r3, [pc, #28]	; (801e330 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e312:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e314:	bd38      	pop	{r3, r4, r5, pc}
 801e316:	bf00      	nop
 801e318:	20012ebc 	.word	0x20012ebc
 801e31c:	20000000 	.word	0x20000000
 801e320:	0801ad3f 	.word	0x0801ad3f
 801e324:	200000fc 	.word	0x200000fc
 801e328:	20012ec0 	.word	0x20012ec0
 801e32c:	0801ad3d 	.word	0x0801ad3d
 801e330:	20000100 	.word	0x20000100

0801e334 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e334:	b538      	push	{r3, r4, r5, lr}
 801e336:	4c15      	ldr	r4, [pc, #84]	; (801e38c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e338:	7823      	ldrb	r3, [r4, #0]
 801e33a:	f3bf 8f5b 	dmb	ish
 801e33e:	07da      	lsls	r2, r3, #31
 801e340:	4605      	mov	r5, r0
 801e342:	d40b      	bmi.n	801e35c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e344:	4620      	mov	r0, r4
 801e346:	f00a fcf4 	bl	8028d32 <__cxa_guard_acquire>
 801e34a:	b138      	cbz	r0, 801e35c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e34c:	4620      	mov	r0, r4
 801e34e:	f00a fcfc 	bl	8028d4a <__cxa_guard_release>
 801e352:	4a0f      	ldr	r2, [pc, #60]	; (801e390 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e354:	490f      	ldr	r1, [pc, #60]	; (801e394 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e356:	4810      	ldr	r0, [pc, #64]	; (801e398 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e358:	f00a fce4 	bl	8028d24 <__aeabi_atexit>
 801e35c:	4c0f      	ldr	r4, [pc, #60]	; (801e39c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e35e:	7823      	ldrb	r3, [r4, #0]
 801e360:	f3bf 8f5b 	dmb	ish
 801e364:	07db      	lsls	r3, r3, #31
 801e366:	d40b      	bmi.n	801e380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e368:	4620      	mov	r0, r4
 801e36a:	f00a fce2 	bl	8028d32 <__cxa_guard_acquire>
 801e36e:	b138      	cbz	r0, 801e380 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e370:	4620      	mov	r0, r4
 801e372:	f00a fcea 	bl	8028d4a <__cxa_guard_release>
 801e376:	4a06      	ldr	r2, [pc, #24]	; (801e390 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e378:	4909      	ldr	r1, [pc, #36]	; (801e3a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e37a:	480a      	ldr	r0, [pc, #40]	; (801e3a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e37c:	f00a fcd2 	bl	8028d24 <__aeabi_atexit>
 801e380:	4b05      	ldr	r3, [pc, #20]	; (801e398 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e382:	642b      	str	r3, [r5, #64]	; 0x40
 801e384:	4b07      	ldr	r3, [pc, #28]	; (801e3a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e386:	646b      	str	r3, [r5, #68]	; 0x44
 801e388:	bd38      	pop	{r3, r4, r5, pc}
 801e38a:	bf00      	nop
 801e38c:	20012e84 	.word	0x20012e84
 801e390:	20000000 	.word	0x20000000
 801e394:	0801ad43 	.word	0x0801ad43
 801e398:	200000c4 	.word	0x200000c4
 801e39c:	20012e88 	.word	0x20012e88
 801e3a0:	0801ad41 	.word	0x0801ad41
 801e3a4:	200000c8 	.word	0x200000c8

0801e3a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e3a8:	b538      	push	{r3, r4, r5, lr}
 801e3aa:	4c15      	ldr	r4, [pc, #84]	; (801e400 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e3ac:	7823      	ldrb	r3, [r4, #0]
 801e3ae:	f3bf 8f5b 	dmb	ish
 801e3b2:	07da      	lsls	r2, r3, #31
 801e3b4:	4605      	mov	r5, r0
 801e3b6:	d40b      	bmi.n	801e3d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e3b8:	4620      	mov	r0, r4
 801e3ba:	f00a fcba 	bl	8028d32 <__cxa_guard_acquire>
 801e3be:	b138      	cbz	r0, 801e3d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	f00a fcc2 	bl	8028d4a <__cxa_guard_release>
 801e3c6:	4a0f      	ldr	r2, [pc, #60]	; (801e404 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e3c8:	490f      	ldr	r1, [pc, #60]	; (801e408 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e3ca:	4810      	ldr	r0, [pc, #64]	; (801e40c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e3cc:	f00a fcaa 	bl	8028d24 <__aeabi_atexit>
 801e3d0:	4c0f      	ldr	r4, [pc, #60]	; (801e410 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e3d2:	7823      	ldrb	r3, [r4, #0]
 801e3d4:	f3bf 8f5b 	dmb	ish
 801e3d8:	07db      	lsls	r3, r3, #31
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f00a fca8 	bl	8028d32 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f00a fcb0 	bl	8028d4a <__cxa_guard_release>
 801e3ea:	4a06      	ldr	r2, [pc, #24]	; (801e404 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e3ec:	4909      	ldr	r1, [pc, #36]	; (801e414 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e3ee:	480a      	ldr	r0, [pc, #40]	; (801e418 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e3f0:	f00a fc98 	bl	8028d24 <__aeabi_atexit>
 801e3f4:	4b05      	ldr	r3, [pc, #20]	; (801e40c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e3f6:	63ab      	str	r3, [r5, #56]	; 0x38
 801e3f8:	4b07      	ldr	r3, [pc, #28]	; (801e418 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e3fa:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e3fc:	bd38      	pop	{r3, r4, r5, pc}
 801e3fe:	bf00      	nop
 801e400:	20012ea4 	.word	0x20012ea4
 801e404:	20000000 	.word	0x20000000
 801e408:	0801ad47 	.word	0x0801ad47
 801e40c:	200000e4 	.word	0x200000e4
 801e410:	20012ea8 	.word	0x20012ea8
 801e414:	0801ad45 	.word	0x0801ad45
 801e418:	200000e8 	.word	0x200000e8

0801e41c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e41c:	b510      	push	{r4, lr}
 801e41e:	4604      	mov	r4, r0
 801e420:	f7ff ff14 	bl	801e24c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e424:	4620      	mov	r0, r4
 801e426:	f7ff ff85 	bl	801e334 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e42a:	4620      	mov	r0, r4
 801e42c:	f7ff ff48 	bl	801e2c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e430:	4620      	mov	r0, r4
 801e432:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e436:	f7ff bfb7 	b.w	801e3a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e43c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e43c:	b538      	push	{r3, r4, r5, lr}
 801e43e:	4c15      	ldr	r4, [pc, #84]	; (801e494 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e440:	7823      	ldrb	r3, [r4, #0]
 801e442:	f3bf 8f5b 	dmb	ish
 801e446:	07da      	lsls	r2, r3, #31
 801e448:	4605      	mov	r5, r0
 801e44a:	d40b      	bmi.n	801e464 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e44c:	4620      	mov	r0, r4
 801e44e:	f00a fc70 	bl	8028d32 <__cxa_guard_acquire>
 801e452:	b138      	cbz	r0, 801e464 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e454:	4620      	mov	r0, r4
 801e456:	f00a fc78 	bl	8028d4a <__cxa_guard_release>
 801e45a:	4a0f      	ldr	r2, [pc, #60]	; (801e498 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e45c:	490f      	ldr	r1, [pc, #60]	; (801e49c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e45e:	4810      	ldr	r0, [pc, #64]	; (801e4a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e460:	f00a fc60 	bl	8028d24 <__aeabi_atexit>
 801e464:	4c0f      	ldr	r4, [pc, #60]	; (801e4a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e466:	7823      	ldrb	r3, [r4, #0]
 801e468:	f3bf 8f5b 	dmb	ish
 801e46c:	07db      	lsls	r3, r3, #31
 801e46e:	d40b      	bmi.n	801e488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e470:	4620      	mov	r0, r4
 801e472:	f00a fc5e 	bl	8028d32 <__cxa_guard_acquire>
 801e476:	b138      	cbz	r0, 801e488 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e478:	4620      	mov	r0, r4
 801e47a:	f00a fc66 	bl	8028d4a <__cxa_guard_release>
 801e47e:	4a06      	ldr	r2, [pc, #24]	; (801e498 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e480:	4909      	ldr	r1, [pc, #36]	; (801e4a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e482:	480a      	ldr	r0, [pc, #40]	; (801e4ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e484:	f00a fc4e 	bl	8028d24 <__aeabi_atexit>
 801e488:	4b05      	ldr	r3, [pc, #20]	; (801e4a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e48a:	662b      	str	r3, [r5, #96]	; 0x60
 801e48c:	4b07      	ldr	r3, [pc, #28]	; (801e4ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e48e:	666b      	str	r3, [r5, #100]	; 0x64
 801e490:	bd38      	pop	{r3, r4, r5, pc}
 801e492:	bf00      	nop
 801e494:	20012e8c 	.word	0x20012e8c
 801e498:	20000000 	.word	0x20000000
 801e49c:	0801ad33 	.word	0x0801ad33
 801e4a0:	200000cc 	.word	0x200000cc
 801e4a4:	20012e90 	.word	0x20012e90
 801e4a8:	0801ad31 	.word	0x0801ad31
 801e4ac:	200000d0 	.word	0x200000d0

0801e4b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e4b0:	b538      	push	{r3, r4, r5, lr}
 801e4b2:	4c15      	ldr	r4, [pc, #84]	; (801e508 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e4b4:	7823      	ldrb	r3, [r4, #0]
 801e4b6:	f3bf 8f5b 	dmb	ish
 801e4ba:	07da      	lsls	r2, r3, #31
 801e4bc:	4605      	mov	r5, r0
 801e4be:	d40b      	bmi.n	801e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e4c0:	4620      	mov	r0, r4
 801e4c2:	f00a fc36 	bl	8028d32 <__cxa_guard_acquire>
 801e4c6:	b138      	cbz	r0, 801e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e4c8:	4620      	mov	r0, r4
 801e4ca:	f00a fc3e 	bl	8028d4a <__cxa_guard_release>
 801e4ce:	4a0f      	ldr	r2, [pc, #60]	; (801e50c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e4d0:	490f      	ldr	r1, [pc, #60]	; (801e510 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e4d2:	4810      	ldr	r0, [pc, #64]	; (801e514 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e4d4:	f00a fc26 	bl	8028d24 <__aeabi_atexit>
 801e4d8:	4c0f      	ldr	r4, [pc, #60]	; (801e518 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e4da:	7823      	ldrb	r3, [r4, #0]
 801e4dc:	f3bf 8f5b 	dmb	ish
 801e4e0:	07db      	lsls	r3, r3, #31
 801e4e2:	d40b      	bmi.n	801e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e4e4:	4620      	mov	r0, r4
 801e4e6:	f00a fc24 	bl	8028d32 <__cxa_guard_acquire>
 801e4ea:	b138      	cbz	r0, 801e4fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e4ec:	4620      	mov	r0, r4
 801e4ee:	f00a fc2c 	bl	8028d4a <__cxa_guard_release>
 801e4f2:	4a06      	ldr	r2, [pc, #24]	; (801e50c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e4f4:	4909      	ldr	r1, [pc, #36]	; (801e51c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e4f6:	480a      	ldr	r0, [pc, #40]	; (801e520 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e4f8:	f00a fc14 	bl	8028d24 <__aeabi_atexit>
 801e4fc:	4b05      	ldr	r3, [pc, #20]	; (801e514 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e4fe:	65ab      	str	r3, [r5, #88]	; 0x58
 801e500:	4b07      	ldr	r3, [pc, #28]	; (801e520 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e502:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e504:	bd38      	pop	{r3, r4, r5, pc}
 801e506:	bf00      	nop
 801e508:	20012e64 	.word	0x20012e64
 801e50c:	20000000 	.word	0x20000000
 801e510:	0801ad37 	.word	0x0801ad37
 801e514:	200000a4 	.word	0x200000a4
 801e518:	20012e68 	.word	0x20012e68
 801e51c:	0801ad35 	.word	0x0801ad35
 801e520:	200000a8 	.word	0x200000a8

0801e524 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e524:	b510      	push	{r4, lr}
 801e526:	4604      	mov	r4, r0
 801e528:	f7ff ff88 	bl	801e43c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e52c:	4620      	mov	r0, r4
 801e52e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e532:	f7ff bfbd 	b.w	801e4b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e538 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e538:	b538      	push	{r3, r4, r5, lr}
 801e53a:	4c15      	ldr	r4, [pc, #84]	; (801e590 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e53c:	7823      	ldrb	r3, [r4, #0]
 801e53e:	f3bf 8f5b 	dmb	ish
 801e542:	07da      	lsls	r2, r3, #31
 801e544:	4605      	mov	r5, r0
 801e546:	d40b      	bmi.n	801e560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e548:	4620      	mov	r0, r4
 801e54a:	f00a fbf2 	bl	8028d32 <__cxa_guard_acquire>
 801e54e:	b138      	cbz	r0, 801e560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e550:	4620      	mov	r0, r4
 801e552:	f00a fbfa 	bl	8028d4a <__cxa_guard_release>
 801e556:	4a0f      	ldr	r2, [pc, #60]	; (801e594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e558:	490f      	ldr	r1, [pc, #60]	; (801e598 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e55a:	4810      	ldr	r0, [pc, #64]	; (801e59c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e55c:	f00a fbe2 	bl	8028d24 <__aeabi_atexit>
 801e560:	4c0f      	ldr	r4, [pc, #60]	; (801e5a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e562:	7823      	ldrb	r3, [r4, #0]
 801e564:	f3bf 8f5b 	dmb	ish
 801e568:	07db      	lsls	r3, r3, #31
 801e56a:	d40b      	bmi.n	801e584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e56c:	4620      	mov	r0, r4
 801e56e:	f00a fbe0 	bl	8028d32 <__cxa_guard_acquire>
 801e572:	b138      	cbz	r0, 801e584 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e574:	4620      	mov	r0, r4
 801e576:	f00a fbe8 	bl	8028d4a <__cxa_guard_release>
 801e57a:	4a06      	ldr	r2, [pc, #24]	; (801e594 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e57c:	4909      	ldr	r1, [pc, #36]	; (801e5a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e57e:	480a      	ldr	r0, [pc, #40]	; (801e5a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e580:	f00a fbd0 	bl	8028d24 <__aeabi_atexit>
 801e584:	4b05      	ldr	r3, [pc, #20]	; (801e59c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e586:	672b      	str	r3, [r5, #112]	; 0x70
 801e588:	4b07      	ldr	r3, [pc, #28]	; (801e5a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e58a:	676b      	str	r3, [r5, #116]	; 0x74
 801e58c:	bd38      	pop	{r3, r4, r5, pc}
 801e58e:	bf00      	nop
 801e590:	20012e5c 	.word	0x20012e5c
 801e594:	20000000 	.word	0x20000000
 801e598:	0801ad2b 	.word	0x0801ad2b
 801e59c:	2000009c 	.word	0x2000009c
 801e5a0:	20012e60 	.word	0x20012e60
 801e5a4:	0801ad29 	.word	0x0801ad29
 801e5a8:	200000a0 	.word	0x200000a0

0801e5ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e5ac:	b538      	push	{r3, r4, r5, lr}
 801e5ae:	4c15      	ldr	r4, [pc, #84]	; (801e604 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e5b0:	7823      	ldrb	r3, [r4, #0]
 801e5b2:	f3bf 8f5b 	dmb	ish
 801e5b6:	07da      	lsls	r2, r3, #31
 801e5b8:	4605      	mov	r5, r0
 801e5ba:	d40b      	bmi.n	801e5d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e5bc:	4620      	mov	r0, r4
 801e5be:	f00a fbb8 	bl	8028d32 <__cxa_guard_acquire>
 801e5c2:	b138      	cbz	r0, 801e5d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e5c4:	4620      	mov	r0, r4
 801e5c6:	f00a fbc0 	bl	8028d4a <__cxa_guard_release>
 801e5ca:	4a0f      	ldr	r2, [pc, #60]	; (801e608 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e5cc:	490f      	ldr	r1, [pc, #60]	; (801e60c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e5ce:	4810      	ldr	r0, [pc, #64]	; (801e610 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e5d0:	f00a fba8 	bl	8028d24 <__aeabi_atexit>
 801e5d4:	4c0f      	ldr	r4, [pc, #60]	; (801e614 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e5d6:	7823      	ldrb	r3, [r4, #0]
 801e5d8:	f3bf 8f5b 	dmb	ish
 801e5dc:	07db      	lsls	r3, r3, #31
 801e5de:	d40b      	bmi.n	801e5f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e5e0:	4620      	mov	r0, r4
 801e5e2:	f00a fba6 	bl	8028d32 <__cxa_guard_acquire>
 801e5e6:	b138      	cbz	r0, 801e5f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e5e8:	4620      	mov	r0, r4
 801e5ea:	f00a fbae 	bl	8028d4a <__cxa_guard_release>
 801e5ee:	4a06      	ldr	r2, [pc, #24]	; (801e608 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e5f0:	4909      	ldr	r1, [pc, #36]	; (801e618 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e5f2:	480a      	ldr	r0, [pc, #40]	; (801e61c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e5f4:	f00a fb96 	bl	8028d24 <__aeabi_atexit>
 801e5f8:	4b05      	ldr	r3, [pc, #20]	; (801e610 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e5fa:	66ab      	str	r3, [r5, #104]	; 0x68
 801e5fc:	4b07      	ldr	r3, [pc, #28]	; (801e61c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e5fe:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e600:	bd38      	pop	{r3, r4, r5, pc}
 801e602:	bf00      	nop
 801e604:	20012e54 	.word	0x20012e54
 801e608:	20000000 	.word	0x20000000
 801e60c:	0801ad2f 	.word	0x0801ad2f
 801e610:	20000094 	.word	0x20000094
 801e614:	20012e58 	.word	0x20012e58
 801e618:	0801ad2d 	.word	0x0801ad2d
 801e61c:	20000098 	.word	0x20000098

0801e620 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e620:	b510      	push	{r4, lr}
 801e622:	4604      	mov	r4, r0
 801e624:	f7ff ff88 	bl	801e538 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e628:	4620      	mov	r0, r4
 801e62a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e62e:	f7ff bfbd 	b.w	801e5ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e632 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e632:	b510      	push	{r4, lr}
 801e634:	4604      	mov	r4, r0
 801e636:	f7ff fff3 	bl	801e620 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e63a:	4620      	mov	r0, r4
 801e63c:	f7ff ff72 	bl	801e524 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e640:	4620      	mov	r0, r4
 801e642:	f7ff fdf9 	bl	801e238 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e646:	4620      	mov	r0, r4
 801e648:	f7ff fcfa 	bl	801e040 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e64c:	4620      	mov	r0, r4
 801e64e:	f7ff fd75 	bl	801e13c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e652:	4620      	mov	r0, r4
 801e654:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e658:	f7ff bee0 	b.w	801e41c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e65c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e65c:	b538      	push	{r3, r4, r5, lr}
 801e65e:	4c0b      	ldr	r4, [pc, #44]	; (801e68c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e660:	7823      	ldrb	r3, [r4, #0]
 801e662:	f3bf 8f5b 	dmb	ish
 801e666:	07db      	lsls	r3, r3, #31
 801e668:	4605      	mov	r5, r0
 801e66a:	d40b      	bmi.n	801e684 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e66c:	4620      	mov	r0, r4
 801e66e:	f00a fb60 	bl	8028d32 <__cxa_guard_acquire>
 801e672:	b138      	cbz	r0, 801e684 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e674:	4620      	mov	r0, r4
 801e676:	f00a fb68 	bl	8028d4a <__cxa_guard_release>
 801e67a:	4a05      	ldr	r2, [pc, #20]	; (801e690 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e67c:	4905      	ldr	r1, [pc, #20]	; (801e694 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e67e:	4806      	ldr	r0, [pc, #24]	; (801e698 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e680:	f00a fb50 	bl	8028d24 <__aeabi_atexit>
 801e684:	4b04      	ldr	r3, [pc, #16]	; (801e698 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e686:	67ab      	str	r3, [r5, #120]	; 0x78
 801e688:	bd38      	pop	{r3, r4, r5, pc}
 801e68a:	bf00      	nop
 801e68c:	20012e48 	.word	0x20012e48
 801e690:	20000000 	.word	0x20000000
 801e694:	0801ad27 	.word	0x0801ad27
 801e698:	2000008c 	.word	0x2000008c

0801e69c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e69c:	b538      	push	{r3, r4, r5, lr}
 801e69e:	4c0b      	ldr	r4, [pc, #44]	; (801e6cc <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e6a0:	7823      	ldrb	r3, [r4, #0]
 801e6a2:	f3bf 8f5b 	dmb	ish
 801e6a6:	07db      	lsls	r3, r3, #31
 801e6a8:	4605      	mov	r5, r0
 801e6aa:	d40b      	bmi.n	801e6c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e6ac:	4620      	mov	r0, r4
 801e6ae:	f00a fb40 	bl	8028d32 <__cxa_guard_acquire>
 801e6b2:	b138      	cbz	r0, 801e6c4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e6b4:	4620      	mov	r0, r4
 801e6b6:	f00a fb48 	bl	8028d4a <__cxa_guard_release>
 801e6ba:	4a05      	ldr	r2, [pc, #20]	; (801e6d0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e6bc:	4905      	ldr	r1, [pc, #20]	; (801e6d4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e6be:	4806      	ldr	r0, [pc, #24]	; (801e6d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e6c0:	f00a fb30 	bl	8028d24 <__aeabi_atexit>
 801e6c4:	4b04      	ldr	r3, [pc, #16]	; (801e6d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e6c6:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e6c8:	bd38      	pop	{r3, r4, r5, pc}
 801e6ca:	bf00      	nop
 801e6cc:	20012e4c 	.word	0x20012e4c
 801e6d0:	20000000 	.word	0x20000000
 801e6d4:	0801ad25 	.word	0x0801ad25
 801e6d8:	20000090 	.word	0x20000090

0801e6dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e6dc:	b570      	push	{r4, r5, r6, lr}
 801e6de:	4d0d      	ldr	r5, [pc, #52]	; (801e714 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e6e0:	4c0d      	ldr	r4, [pc, #52]	; (801e718 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e6e2:	782b      	ldrb	r3, [r5, #0]
 801e6e4:	f3bf 8f5b 	dmb	ish
 801e6e8:	f013 0f01 	tst.w	r3, #1
 801e6ec:	4606      	mov	r6, r0
 801e6ee:	d10d      	bne.n	801e70c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e6f0:	4628      	mov	r0, r5
 801e6f2:	f00a fb1e 	bl	8028d32 <__cxa_guard_acquire>
 801e6f6:	b148      	cbz	r0, 801e70c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e6f8:	4b08      	ldr	r3, [pc, #32]	; (801e71c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e6fa:	6023      	str	r3, [r4, #0]
 801e6fc:	4628      	mov	r0, r5
 801e6fe:	f00a fb24 	bl	8028d4a <__cxa_guard_release>
 801e702:	4a07      	ldr	r2, [pc, #28]	; (801e720 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e704:	4907      	ldr	r1, [pc, #28]	; (801e724 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e706:	4620      	mov	r0, r4
 801e708:	f00a fb0c 	bl	8028d24 <__aeabi_atexit>
 801e70c:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e710:	bd70      	pop	{r4, r5, r6, pc}
 801e712:	bf00      	nop
 801e714:	20012e50 	.word	0x20012e50
 801e718:	20012ec4 	.word	0x20012ec4
 801e71c:	0802e2ec 	.word	0x0802e2ec
 801e720:	20000000 	.word	0x20000000
 801e724:	0801ad23 	.word	0x0801ad23

0801e728 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e728:	b510      	push	{r4, lr}
 801e72a:	4604      	mov	r4, r0
 801e72c:	f7ff ff96 	bl	801e65c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e730:	4620      	mov	r0, r4
 801e732:	f7ff ffb3 	bl	801e69c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e736:	4620      	mov	r0, r4
 801e738:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e73c:	f7ff bfce 	b.w	801e6dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e740:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e744:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e748:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e74c:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e750:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e754:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e758:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e75c:	8808      	ldrh	r0, [r1, #0]
 801e75e:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e762:	2d00      	cmp	r5, #0
 801e764:	eb02 0a0c 	add.w	sl, r2, ip
 801e768:	f2c0 80b0 	blt.w	801e8cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e76c:	45ab      	cmp	fp, r5
 801e76e:	f340 80ad 	ble.w	801e8cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e772:	2c00      	cmp	r4, #0
 801e774:	f2c0 80a8 	blt.w	801e8c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e778:	45a6      	cmp	lr, r4
 801e77a:	f340 80a5 	ble.w	801e8c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e77e:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e782:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e786:	1c62      	adds	r2, r4, #1
 801e788:	f100 80a3 	bmi.w	801e8d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e78c:	4596      	cmp	lr, r2
 801e78e:	f340 80a0 	ble.w	801e8d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e792:	f1b9 0f00 	cmp.w	r9, #0
 801e796:	f000 809c 	beq.w	801e8d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e79a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e79e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e7a2:	3501      	adds	r5, #1
 801e7a4:	f100 8099 	bmi.w	801e8da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e7a8:	45ab      	cmp	fp, r5
 801e7aa:	f340 8096 	ble.w	801e8da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e7ae:	2f00      	cmp	r7, #0
 801e7b0:	f000 8093 	beq.w	801e8da <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e7b4:	2c00      	cmp	r4, #0
 801e7b6:	f2c0 808e 	blt.w	801e8d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e7ba:	45a6      	cmp	lr, r4
 801e7bc:	f340 808b 	ble.w	801e8d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e7c0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e7c4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e7c8:	3401      	adds	r4, #1
 801e7ca:	f100 8089 	bmi.w	801e8e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7ce:	45a6      	cmp	lr, r4
 801e7d0:	f340 8086 	ble.w	801e8e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7d4:	f1b9 0f00 	cmp.w	r9, #0
 801e7d8:	f000 8082 	beq.w	801e8e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7dc:	44d6      	add	lr, sl
 801e7de:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e7e2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e7e6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e7ea:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e7ee:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e7f2:	fb19 fe07 	smulbb	lr, r9, r7
 801e7f6:	ea44 0808 	orr.w	r8, r4, r8
 801e7fa:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e7fe:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e802:	f1c7 0210 	rsb	r2, r7, #16
 801e806:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e80a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e80e:	ea44 0c0c 	orr.w	ip, r4, ip
 801e812:	eba2 0209 	sub.w	r2, r2, r9
 801e816:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e81a:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e81e:	fb04 f40c 	mul.w	r4, r4, ip
 801e822:	fb02 4808 	mla	r8, r2, r8, r4
 801e826:	041a      	lsls	r2, r3, #16
 801e828:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e82c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e830:	4313      	orrs	r3, r2
 801e832:	042a      	lsls	r2, r5, #16
 801e834:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e838:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e83c:	fb0e 8303 	mla	r3, lr, r3, r8
 801e840:	432a      	orrs	r2, r5
 801e842:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e846:	fb07 3202 	mla	r2, r7, r2, r3
 801e84a:	0d53      	lsrs	r3, r2, #21
 801e84c:	0952      	lsrs	r2, r2, #5
 801e84e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e852:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e856:	431a      	orrs	r2, r3
 801e858:	b293      	uxth	r3, r2
 801e85a:	b2b4      	uxth	r4, r6
 801e85c:	1202      	asrs	r2, r0, #8
 801e85e:	43f6      	mvns	r6, r6
 801e860:	b2f6      	uxtb	r6, r6
 801e862:	121d      	asrs	r5, r3, #8
 801e864:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e868:	fb12 f206 	smulbb	r2, r2, r6
 801e86c:	10c7      	asrs	r7, r0, #3
 801e86e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e872:	00c0      	lsls	r0, r0, #3
 801e874:	fb05 2504 	mla	r5, r5, r4, r2
 801e878:	b2c0      	uxtb	r0, r0
 801e87a:	10da      	asrs	r2, r3, #3
 801e87c:	00db      	lsls	r3, r3, #3
 801e87e:	b2db      	uxtb	r3, r3
 801e880:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e884:	fb10 f006 	smulbb	r0, r0, r6
 801e888:	b2ad      	uxth	r5, r5
 801e88a:	fb03 0004 	mla	r0, r3, r4, r0
 801e88e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e892:	fb17 f706 	smulbb	r7, r7, r6
 801e896:	b280      	uxth	r0, r0
 801e898:	1c6b      	adds	r3, r5, #1
 801e89a:	fb02 7204 	mla	r2, r2, r4, r7
 801e89e:	b292      	uxth	r2, r2
 801e8a0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e8a4:	1c43      	adds	r3, r0, #1
 801e8a6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e8aa:	1c50      	adds	r0, r2, #1
 801e8ac:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e8b0:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e8b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e8b8:	0952      	lsrs	r2, r2, #5
 801e8ba:	432b      	orrs	r3, r5
 801e8bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e8c0:	4313      	orrs	r3, r2
 801e8c2:	800b      	strh	r3, [r1, #0]
 801e8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8c8:	4680      	mov	r8, r0
 801e8ca:	e75c      	b.n	801e786 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e8cc:	4684      	mov	ip, r0
 801e8ce:	4680      	mov	r8, r0
 801e8d0:	e767      	b.n	801e7a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e8d2:	4684      	mov	ip, r0
 801e8d4:	e765      	b.n	801e7a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e8d6:	4605      	mov	r5, r0
 801e8d8:	e776      	b.n	801e7c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e8da:	4603      	mov	r3, r0
 801e8dc:	4605      	mov	r5, r0
 801e8de:	e782      	b.n	801e7e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e8e0:	4603      	mov	r3, r0
 801e8e2:	e780      	b.n	801e7e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e8e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8e8:	b099      	sub	sp, #100	; 0x64
 801e8ea:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e8ee:	9215      	str	r2, [sp, #84]	; 0x54
 801e8f0:	9309      	str	r3, [sp, #36]	; 0x24
 801e8f2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e8f4:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e8f8:	930d      	str	r3, [sp, #52]	; 0x34
 801e8fa:	910c      	str	r1, [sp, #48]	; 0x30
 801e8fc:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e900:	9016      	str	r0, [sp, #88]	; 0x58
 801e902:	6850      	ldr	r0, [r2, #4]
 801e904:	6812      	ldr	r2, [r2, #0]
 801e906:	fb00 1303 	mla	r3, r0, r3, r1
 801e90a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e90e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e910:	681b      	ldr	r3, [r3, #0]
 801e912:	930b      	str	r3, [sp, #44]	; 0x2c
 801e914:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e916:	685e      	ldr	r6, [r3, #4]
 801e918:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e91a:	43db      	mvns	r3, r3
 801e91c:	b2db      	uxtb	r3, r3
 801e91e:	3604      	adds	r6, #4
 801e920:	930a      	str	r3, [sp, #40]	; 0x28
 801e922:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e924:	2b00      	cmp	r3, #0
 801e926:	dc03      	bgt.n	801e930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e928:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e92a:	2b00      	cmp	r3, #0
 801e92c:	f340 8225 	ble.w	801ed7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e930:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e932:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e936:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e93a:	1e48      	subs	r0, r1, #1
 801e93c:	1e57      	subs	r7, r2, #1
 801e93e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e940:	2b00      	cmp	r3, #0
 801e942:	f340 80e3 	ble.w	801eb0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e946:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e94a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e94e:	d406      	bmi.n	801e95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e950:	4584      	cmp	ip, r0
 801e952:	da04      	bge.n	801e95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e954:	2b00      	cmp	r3, #0
 801e956:	db02      	blt.n	801e95e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e958:	42bb      	cmp	r3, r7
 801e95a:	f2c0 80d8 	blt.w	801eb0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e95e:	f11c 0c01 	adds.w	ip, ip, #1
 801e962:	f100 80c9 	bmi.w	801eaf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e966:	4561      	cmp	r1, ip
 801e968:	f2c0 80c6 	blt.w	801eaf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e96c:	3301      	adds	r3, #1
 801e96e:	f100 80c3 	bmi.w	801eaf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e972:	429a      	cmp	r2, r3
 801e974:	f2c0 80c0 	blt.w	801eaf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e978:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e97c:	4647      	mov	r7, r8
 801e97e:	f1bb 0f00 	cmp.w	fp, #0
 801e982:	f340 80e3 	ble.w	801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e986:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e988:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e98a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e98e:	689b      	ldr	r3, [r3, #8]
 801e990:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e994:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e998:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e99c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e9a0:	f100 8121 	bmi.w	801ebe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e9a4:	f103 39ff 	add.w	r9, r3, #4294967295
 801e9a8:	454a      	cmp	r2, r9
 801e9aa:	f280 811c 	bge.w	801ebe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e9ae:	f1bc 0f00 	cmp.w	ip, #0
 801e9b2:	f2c0 8118 	blt.w	801ebe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e9b6:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e9ba:	45cc      	cmp	ip, r9
 801e9bc:	f280 8113 	bge.w	801ebe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e9c0:	b21b      	sxth	r3, r3
 801e9c2:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e9c8:	eb04 0902 	add.w	r9, r4, r2
 801e9cc:	5ca2      	ldrb	r2, [r4, r2]
 801e9ce:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e9d2:	2800      	cmp	r0, #0
 801e9d4:	f000 80fe 	beq.w	801ebd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e9d8:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e9dc:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e9e0:	9211      	str	r2, [sp, #68]	; 0x44
 801e9e2:	b151      	cbz	r1, 801e9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e9e4:	eb09 0203 	add.w	r2, r9, r3
 801e9e8:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e9ec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9f0:	930f      	str	r3, [sp, #60]	; 0x3c
 801e9f2:	7853      	ldrb	r3, [r2, #1]
 801e9f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9f8:	9312      	str	r3, [sp, #72]	; 0x48
 801e9fa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e9fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e9fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea02:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea0a:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ea10:	041b      	lsls	r3, r3, #16
 801ea12:	fb10 f201 	smulbb	r2, r0, r1
 801ea16:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ea1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ea1e:	10d2      	asrs	r2, r2, #3
 801ea20:	4323      	orrs	r3, r4
 801ea22:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ea26:	4353      	muls	r3, r2
 801ea28:	fb09 330c 	mla	r3, r9, ip, r3
 801ea2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ea30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ea34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ea38:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ea3c:	f1c1 0c10 	rsb	ip, r1, #16
 801ea40:	ebac 0c00 	sub.w	ip, ip, r0
 801ea44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea48:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea4c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ea4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ea50:	0418      	lsls	r0, r3, #16
 801ea52:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ea56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea5a:	4318      	orrs	r0, r3
 801ea5c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea60:	fb02 c200 	mla	r2, r2, r0, ip
 801ea64:	0d53      	lsrs	r3, r2, #21
 801ea66:	0952      	lsrs	r2, r2, #5
 801ea68:	8838      	ldrh	r0, [r7, #0]
 801ea6a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea6e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea72:	431a      	orrs	r2, r3
 801ea74:	b292      	uxth	r2, r2
 801ea76:	1201      	asrs	r1, r0, #8
 801ea78:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ea7c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ea80:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ea84:	fb11 f104 	smulbb	r1, r1, r4
 801ea88:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ea8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea90:	00c0      	lsls	r0, r0, #3
 801ea92:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ea96:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ea9a:	10d1      	asrs	r1, r2, #3
 801ea9c:	b2c0      	uxtb	r0, r0
 801ea9e:	00d2      	lsls	r2, r2, #3
 801eaa0:	b2d2      	uxtb	r2, r2
 801eaa2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801eaa6:	fb1e fe04 	smulbb	lr, lr, r4
 801eaaa:	fb10 f004 	smulbb	r0, r0, r4
 801eaae:	fa1f fc8c 	uxth.w	ip, ip
 801eab2:	fb01 e103 	mla	r1, r1, r3, lr
 801eab6:	fb02 0303 	mla	r3, r2, r3, r0
 801eaba:	b29a      	uxth	r2, r3
 801eabc:	f10c 0301 	add.w	r3, ip, #1
 801eac0:	b289      	uxth	r1, r1
 801eac2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801eac6:	1c53      	adds	r3, r2, #1
 801eac8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eacc:	1c4a      	adds	r2, r1, #1
 801eace:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ead2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ead6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eada:	0949      	lsrs	r1, r1, #5
 801eadc:	ea43 030c 	orr.w	r3, r3, ip
 801eae0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eae4:	430b      	orrs	r3, r1
 801eae6:	803b      	strh	r3, [r7, #0]
 801eae8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801eaea:	449a      	add	sl, r3
 801eaec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eaee:	3702      	adds	r7, #2
 801eaf0:	441d      	add	r5, r3
 801eaf2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eaf6:	e742      	b.n	801e97e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801eaf8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801eafa:	449a      	add	sl, r3
 801eafc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eafe:	441d      	add	r5, r3
 801eb00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb02:	3b01      	subs	r3, #1
 801eb04:	9309      	str	r3, [sp, #36]	; 0x24
 801eb06:	f108 0802 	add.w	r8, r8, #2
 801eb0a:	e718      	b.n	801e93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801eb0c:	d023      	beq.n	801eb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801eb0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb10:	9825      	ldr	r0, [sp, #148]	; 0x94
 801eb12:	3b01      	subs	r3, #1
 801eb14:	fb00 a003 	mla	r0, r0, r3, sl
 801eb18:	1400      	asrs	r0, r0, #16
 801eb1a:	f53f af2d 	bmi.w	801e978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb1e:	3901      	subs	r1, #1
 801eb20:	4288      	cmp	r0, r1
 801eb22:	f6bf af29 	bge.w	801e978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb26:	9926      	ldr	r1, [sp, #152]	; 0x98
 801eb28:	fb01 5303 	mla	r3, r1, r3, r5
 801eb2c:	141b      	asrs	r3, r3, #16
 801eb2e:	f53f af23 	bmi.w	801e978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb32:	3a01      	subs	r2, #1
 801eb34:	4293      	cmp	r3, r2
 801eb36:	f6bf af1f 	bge.w	801e978 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb3a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801eb3e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801eb42:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801eb46:	f1be 0f00 	cmp.w	lr, #0
 801eb4a:	dc6c      	bgt.n	801ec26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb4e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eb52:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801eb56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb58:	2b00      	cmp	r3, #0
 801eb5a:	f340 810e 	ble.w	801ed7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb62:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eb66:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb6a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb6c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb70:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb74:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb78:	eef0 6a62 	vmov.f32	s13, s5
 801eb7c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb80:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb84:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb88:	ee16 aa90 	vmov	sl, s13
 801eb8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb90:	eef0 6a43 	vmov.f32	s13, s6
 801eb94:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb98:	ee12 2a90 	vmov	r2, s5
 801eb9c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eba0:	fb92 f3f3 	sdiv	r3, r2, r3
 801eba4:	ee13 2a10 	vmov	r2, s6
 801eba8:	9325      	str	r3, [sp, #148]	; 0x94
 801ebaa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ebac:	fb92 f3f3 	sdiv	r3, r2, r3
 801ebb0:	9326      	str	r3, [sp, #152]	; 0x98
 801ebb2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ebb4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ebb6:	3b01      	subs	r3, #1
 801ebb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ebbc:	930c      	str	r3, [sp, #48]	; 0x30
 801ebbe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ebc0:	bf08      	it	eq
 801ebc2:	4613      	moveq	r3, r2
 801ebc4:	ee16 5a90 	vmov	r5, s13
 801ebc8:	9309      	str	r3, [sp, #36]	; 0x24
 801ebca:	eeb0 3a67 	vmov.f32	s6, s15
 801ebce:	eef0 2a47 	vmov.f32	s5, s14
 801ebd2:	e6a6      	b.n	801e922 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ebd4:	2900      	cmp	r1, #0
 801ebd6:	f43f af10 	beq.w	801e9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ebda:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ebde:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ebe2:	930f      	str	r3, [sp, #60]	; 0x3c
 801ebe4:	e709      	b.n	801e9fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ebe6:	f112 0901 	adds.w	r9, r2, #1
 801ebea:	f53f af7d 	bmi.w	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebee:	454b      	cmp	r3, r9
 801ebf0:	f6ff af7a 	blt.w	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebf4:	f11c 0901 	adds.w	r9, ip, #1
 801ebf8:	f53f af76 	bmi.w	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebfc:	45ce      	cmp	lr, r9
 801ebfe:	f6ff af73 	blt.w	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ec02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ec04:	9202      	str	r2, [sp, #8]
 801ec06:	b21b      	sxth	r3, r3
 801ec08:	fa0f f28e 	sxth.w	r2, lr
 801ec0c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ec10:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ec14:	9201      	str	r2, [sp, #4]
 801ec16:	9300      	str	r3, [sp, #0]
 801ec18:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ec1a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ec1c:	4633      	mov	r3, r6
 801ec1e:	4639      	mov	r1, r7
 801ec20:	f7ff fd8e 	bl	801e740 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ec24:	e760      	b.n	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ec26:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec28:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec2a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ec2e:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ec32:	1429      	asrs	r1, r5, #16
 801ec34:	fb03 2101 	mla	r1, r3, r1, r2
 801ec38:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ec3a:	440a      	add	r2, r1
 801ec3c:	5c61      	ldrb	r1, [r4, r1]
 801ec3e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ec42:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ec46:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ec4a:	f1bc 0f00 	cmp.w	ip, #0
 801ec4e:	f000 808c 	beq.w	801ed6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ec52:	7857      	ldrb	r7, [r2, #1]
 801ec54:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ec58:	9413      	str	r4, [sp, #76]	; 0x4c
 801ec5a:	b140      	cbz	r0, 801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec5c:	18d7      	adds	r7, r2, r3
 801ec5e:	5cd3      	ldrb	r3, [r2, r3]
 801ec60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec64:	9310      	str	r3, [sp, #64]	; 0x40
 801ec66:	787b      	ldrb	r3, [r7, #1]
 801ec68:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec6c:	9314      	str	r3, [sp, #80]	; 0x50
 801ec6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ec70:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ec72:	fb1c f200 	smulbb	r2, ip, r0
 801ec76:	041f      	lsls	r7, r3, #16
 801ec78:	10d2      	asrs	r2, r2, #3
 801ec7a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec7e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ec82:	431f      	orrs	r7, r3
 801ec84:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ec88:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec8a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ec8c:	041b      	lsls	r3, r3, #16
 801ec8e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ec92:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec96:	ea43 030b 	orr.w	r3, r3, fp
 801ec9a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ec9c:	4353      	muls	r3, r2
 801ec9e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eca2:	fb04 3707 	mla	r7, r4, r7, r3
 801eca6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ecaa:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ecae:	ea43 0b01 	orr.w	fp, r3, r1
 801ecb2:	f1c0 0110 	rsb	r1, r0, #16
 801ecb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ecb8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ecba:	eba1 0c0c 	sub.w	ip, r1, ip
 801ecbe:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ecc2:	fb0c 770b 	mla	r7, ip, fp, r7
 801ecc6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ecca:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ecce:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ecd2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ecd6:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ecda:	fb02 770c 	mla	r7, r2, ip, r7
 801ecde:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ece0:	0d79      	lsrs	r1, r7, #21
 801ece2:	097f      	lsrs	r7, r7, #5
 801ece4:	8812      	ldrh	r2, [r2, #0]
 801ece6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ecea:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ecee:	430f      	orrs	r7, r1
 801ecf0:	b2bb      	uxth	r3, r7
 801ecf2:	1211      	asrs	r1, r2, #8
 801ecf4:	1218      	asrs	r0, r3, #8
 801ecf6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ecfa:	fb11 f104 	smulbb	r1, r1, r4
 801ecfe:	10d7      	asrs	r7, r2, #3
 801ed00:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ed04:	00d2      	lsls	r2, r2, #3
 801ed06:	fb00 1009 	mla	r0, r0, r9, r1
 801ed0a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ed0e:	10d9      	asrs	r1, r3, #3
 801ed10:	b2d2      	uxtb	r2, r2
 801ed12:	00db      	lsls	r3, r3, #3
 801ed14:	fb17 f704 	smulbb	r7, r7, r4
 801ed18:	fb12 f204 	smulbb	r2, r2, r4
 801ed1c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ed20:	b2db      	uxtb	r3, r3
 801ed22:	b280      	uxth	r0, r0
 801ed24:	fb01 7109 	mla	r1, r1, r9, r7
 801ed28:	fb03 2309 	mla	r3, r3, r9, r2
 801ed2c:	b29b      	uxth	r3, r3
 801ed2e:	b289      	uxth	r1, r1
 801ed30:	1c42      	adds	r2, r0, #1
 801ed32:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ed36:	1c4f      	adds	r7, r1, #1
 801ed38:	1c5a      	adds	r2, r3, #1
 801ed3a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ed3e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ed42:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ed46:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ed4a:	0949      	lsrs	r1, r1, #5
 801ed4c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ed4e:	4310      	orrs	r0, r2
 801ed50:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed54:	4308      	orrs	r0, r1
 801ed56:	f823 0b02 	strh.w	r0, [r3], #2
 801ed5a:	930e      	str	r3, [sp, #56]	; 0x38
 801ed5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed5e:	449a      	add	sl, r3
 801ed60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed62:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ed66:	441d      	add	r5, r3
 801ed68:	e6ed      	b.n	801eb46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ed6a:	2800      	cmp	r0, #0
 801ed6c:	f43f af7f 	beq.w	801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed70:	5cd3      	ldrb	r3, [r2, r3]
 801ed72:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed76:	9310      	str	r3, [sp, #64]	; 0x40
 801ed78:	e779      	b.n	801ec6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed7a:	b019      	add	sp, #100	; 0x64
 801ed7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ed80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ed80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ed84:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ed88:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ed8c:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ed90:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ed94:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ed98:	8808      	ldrh	r0, [r1, #0]
 801ed9a:	fb08 470e 	mla	r7, r8, lr, r4
 801ed9e:	f1b8 0f00 	cmp.w	r8, #0
 801eda2:	eb02 0907 	add.w	r9, r2, r7
 801eda6:	db67      	blt.n	801ee78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eda8:	45c2      	cmp	sl, r8
 801edaa:	dd65      	ble.n	801ee78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801edac:	2c00      	cmp	r4, #0
 801edae:	db61      	blt.n	801ee74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801edb0:	45a6      	cmp	lr, r4
 801edb2:	dd5f      	ble.n	801ee74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801edb4:	5dd2      	ldrb	r2, [r2, r7]
 801edb6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801edba:	1c62      	adds	r2, r4, #1
 801edbc:	d45f      	bmi.n	801ee7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801edbe:	4596      	cmp	lr, r2
 801edc0:	dd5d      	ble.n	801ee7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801edc2:	2d00      	cmp	r5, #0
 801edc4:	d05b      	beq.n	801ee7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801edc6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801edca:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801edce:	f118 0801 	adds.w	r8, r8, #1
 801edd2:	d458      	bmi.n	801ee86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801edd4:	45c2      	cmp	sl, r8
 801edd6:	dd56      	ble.n	801ee86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801edd8:	2e00      	cmp	r6, #0
 801edda:	d054      	beq.n	801ee86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eddc:	2c00      	cmp	r4, #0
 801edde:	db50      	blt.n	801ee82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ede0:	45a6      	cmp	lr, r4
 801ede2:	dd4e      	ble.n	801ee82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ede4:	f819 200e 	ldrb.w	r2, [r9, lr]
 801ede8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801edec:	3401      	adds	r4, #1
 801edee:	d407      	bmi.n	801ee00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edf0:	45a6      	cmp	lr, r4
 801edf2:	dd05      	ble.n	801ee00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edf4:	b125      	cbz	r5, 801ee00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edf6:	44ce      	add	lr, r9
 801edf8:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801edfc:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ee00:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ee04:	fb15 f406 	smulbb	r4, r5, r6
 801ee08:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ee0c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801ee10:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ee14:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801ee18:	ea43 0c0c 	orr.w	ip, r3, ip
 801ee1c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ee20:	f1c6 0310 	rsb	r3, r6, #16
 801ee24:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ee28:	1b5b      	subs	r3, r3, r5
 801ee2a:	ea4e 0707 	orr.w	r7, lr, r7
 801ee2e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ee32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ee36:	437d      	muls	r5, r7
 801ee38:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ee3c:	0403      	lsls	r3, r0, #16
 801ee3e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ee42:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ee46:	4318      	orrs	r0, r3
 801ee48:	0413      	lsls	r3, r2, #16
 801ee4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ee4e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ee52:	4313      	orrs	r3, r2
 801ee54:	fb04 c000 	mla	r0, r4, r0, ip
 801ee58:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ee5c:	fb06 0003 	mla	r0, r6, r3, r0
 801ee60:	0d43      	lsrs	r3, r0, #21
 801ee62:	0940      	lsrs	r0, r0, #5
 801ee64:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee68:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ee6c:	4318      	orrs	r0, r3
 801ee6e:	8008      	strh	r0, [r1, #0]
 801ee70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee74:	4684      	mov	ip, r0
 801ee76:	e7a0      	b.n	801edba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ee78:	4607      	mov	r7, r0
 801ee7a:	4684      	mov	ip, r0
 801ee7c:	e7a7      	b.n	801edce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee7e:	4607      	mov	r7, r0
 801ee80:	e7a5      	b.n	801edce <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee82:	4602      	mov	r2, r0
 801ee84:	e7b2      	b.n	801edec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ee86:	4602      	mov	r2, r0
 801ee88:	e7ba      	b.n	801ee00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ee8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee8e:	b093      	sub	sp, #76	; 0x4c
 801ee90:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ee94:	920f      	str	r2, [sp, #60]	; 0x3c
 801ee96:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ee98:	9108      	str	r1, [sp, #32]
 801ee9a:	9306      	str	r3, [sp, #24]
 801ee9c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801eea0:	9010      	str	r0, [sp, #64]	; 0x40
 801eea2:	6850      	ldr	r0, [r2, #4]
 801eea4:	6812      	ldr	r2, [r2, #0]
 801eea6:	fb00 1303 	mla	r3, r0, r3, r1
 801eeaa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801eeae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eeb0:	681b      	ldr	r3, [r3, #0]
 801eeb2:	9307      	str	r3, [sp, #28]
 801eeb4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eeb6:	685f      	ldr	r7, [r3, #4]
 801eeb8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801eebc:	3704      	adds	r7, #4
 801eebe:	9b08      	ldr	r3, [sp, #32]
 801eec0:	2b00      	cmp	r3, #0
 801eec2:	dc03      	bgt.n	801eecc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801eec4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801eec6:	2b00      	cmp	r3, #0
 801eec8:	f340 81b2 	ble.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eecc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eece:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eed2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eed6:	1e48      	subs	r0, r1, #1
 801eed8:	f102 3cff 	add.w	ip, r2, #4294967295
 801eedc:	9b06      	ldr	r3, [sp, #24]
 801eede:	2b00      	cmp	r3, #0
 801eee0:	f340 80a9 	ble.w	801f036 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801eee4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eee8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eeec:	d406      	bmi.n	801eefc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eeee:	4586      	cmp	lr, r0
 801eef0:	da04      	bge.n	801eefc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eef2:	2b00      	cmp	r3, #0
 801eef4:	db02      	blt.n	801eefc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eef6:	4563      	cmp	r3, ip
 801eef8:	f2c0 809e 	blt.w	801f038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801eefc:	f11e 0e01 	adds.w	lr, lr, #1
 801ef00:	f100 808f 	bmi.w	801f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ef04:	4571      	cmp	r1, lr
 801ef06:	f2c0 808c 	blt.w	801f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ef0a:	3301      	adds	r3, #1
 801ef0c:	f100 8089 	bmi.w	801f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ef10:	429a      	cmp	r2, r3
 801ef12:	f2c0 8086 	blt.w	801f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ef16:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ef1a:	46c8      	mov	r8, r9
 801ef1c:	f1bb 0f00 	cmp.w	fp, #0
 801ef20:	f340 80a6 	ble.w	801f070 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ef24:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801ef26:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ef28:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ef2c:	689b      	ldr	r3, [r3, #8]
 801ef2e:	1422      	asrs	r2, r4, #16
 801ef30:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ef34:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ef38:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ef3c:	f100 80e3 	bmi.w	801f106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef40:	f103 3aff 	add.w	sl, r3, #4294967295
 801ef44:	4552      	cmp	r2, sl
 801ef46:	f280 80de 	bge.w	801f106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef4a:	f1bc 0f00 	cmp.w	ip, #0
 801ef4e:	f2c0 80da 	blt.w	801f106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef52:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ef56:	45d4      	cmp	ip, sl
 801ef58:	f280 80d5 	bge.w	801f106 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef5c:	b21b      	sxth	r3, r3
 801ef5e:	fb0c 2203 	mla	r2, ip, r3, r2
 801ef62:	9d07      	ldr	r5, [sp, #28]
 801ef64:	eb05 0a02 	add.w	sl, r5, r2
 801ef68:	5caa      	ldrb	r2, [r5, r2]
 801ef6a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ef6e:	2800      	cmp	r0, #0
 801ef70:	f000 80c0 	beq.w	801f0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ef74:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ef78:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ef7c:	920b      	str	r2, [sp, #44]	; 0x2c
 801ef7e:	b151      	cbz	r1, 801ef96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ef80:	eb0a 0203 	add.w	r2, sl, r3
 801ef84:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ef88:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef8c:	9309      	str	r3, [sp, #36]	; 0x24
 801ef8e:	7853      	ldrb	r3, [r2, #1]
 801ef90:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef94:	930c      	str	r3, [sp, #48]	; 0x30
 801ef96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ef98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ef9a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef9e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801efa2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801efa6:	ea4c 0c03 	orr.w	ip, ip, r3
 801efaa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801efac:	041b      	lsls	r3, r3, #16
 801efae:	fb10 f201 	smulbb	r2, r0, r1
 801efb2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801efb6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801efba:	10d2      	asrs	r2, r2, #3
 801efbc:	432b      	orrs	r3, r5
 801efbe:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801efc2:	4353      	muls	r3, r2
 801efc4:	fb0a 330c 	mla	r3, sl, ip, r3
 801efc8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801efcc:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801efd0:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801efd4:	ea4c 0e0e 	orr.w	lr, ip, lr
 801efd8:	f1c1 0c10 	rsb	ip, r1, #16
 801efdc:	ebac 0c00 	sub.w	ip, ip, r0
 801efe0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801efe4:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801efe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efea:	0418      	lsls	r0, r3, #16
 801efec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801eff0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eff4:	4318      	orrs	r0, r3
 801eff6:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801effa:	fb02 c200 	mla	r2, r2, r0, ip
 801effe:	0d53      	lsrs	r3, r2, #21
 801f000:	0952      	lsrs	r2, r2, #5
 801f002:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f006:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f00a:	431a      	orrs	r2, r3
 801f00c:	f8a8 2000 	strh.w	r2, [r8]
 801f010:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f012:	441c      	add	r4, r3
 801f014:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f016:	f108 0802 	add.w	r8, r8, #2
 801f01a:	441e      	add	r6, r3
 801f01c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f020:	e77c      	b.n	801ef1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f022:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f024:	441c      	add	r4, r3
 801f026:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f028:	441e      	add	r6, r3
 801f02a:	9b06      	ldr	r3, [sp, #24]
 801f02c:	3b01      	subs	r3, #1
 801f02e:	9306      	str	r3, [sp, #24]
 801f030:	f109 0902 	add.w	r9, r9, #2
 801f034:	e752      	b.n	801eedc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f036:	d020      	beq.n	801f07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f038:	9b06      	ldr	r3, [sp, #24]
 801f03a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f03c:	3b01      	subs	r3, #1
 801f03e:	fb00 4003 	mla	r0, r0, r3, r4
 801f042:	1400      	asrs	r0, r0, #16
 801f044:	f53f af67 	bmi.w	801ef16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f048:	3901      	subs	r1, #1
 801f04a:	4288      	cmp	r0, r1
 801f04c:	f6bf af63 	bge.w	801ef16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f050:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f052:	fb01 6303 	mla	r3, r1, r3, r6
 801f056:	141b      	asrs	r3, r3, #16
 801f058:	f53f af5d 	bmi.w	801ef16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f05c:	3a01      	subs	r2, #1
 801f05e:	4293      	cmp	r3, r2
 801f060:	f6bf af59 	bge.w	801ef16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f064:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f068:	46ca      	mov	sl, r9
 801f06a:	f1b8 0f00 	cmp.w	r8, #0
 801f06e:	dc67      	bgt.n	801f140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f070:	9b06      	ldr	r3, [sp, #24]
 801f072:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f076:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f07a:	9b08      	ldr	r3, [sp, #32]
 801f07c:	2b00      	cmp	r3, #0
 801f07e:	f340 80d7 	ble.w	801f230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f082:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f086:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f08a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f08e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f090:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f094:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f098:	eeb0 6a62 	vmov.f32	s12, s5
 801f09c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f0a0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f0a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f0a8:	ee16 4a10 	vmov	r4, s12
 801f0ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f0b0:	eeb0 6a43 	vmov.f32	s12, s6
 801f0b4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f0b8:	ee12 2a90 	vmov	r2, s5
 801f0bc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f0c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0c4:	ee13 2a10 	vmov	r2, s6
 801f0c8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f0ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f0cc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0d0:	9320      	str	r3, [sp, #128]	; 0x80
 801f0d2:	9b08      	ldr	r3, [sp, #32]
 801f0d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f0d6:	3b01      	subs	r3, #1
 801f0d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f0dc:	9308      	str	r3, [sp, #32]
 801f0de:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f0e0:	bf08      	it	eq
 801f0e2:	4613      	moveq	r3, r2
 801f0e4:	ee16 6a10 	vmov	r6, s12
 801f0e8:	9306      	str	r3, [sp, #24]
 801f0ea:	eeb0 3a67 	vmov.f32	s6, s15
 801f0ee:	eef0 2a47 	vmov.f32	s5, s14
 801f0f2:	e6e4      	b.n	801eebe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f0f4:	2900      	cmp	r1, #0
 801f0f6:	f43f af4e 	beq.w	801ef96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0fa:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f0fe:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f102:	9309      	str	r3, [sp, #36]	; 0x24
 801f104:	e747      	b.n	801ef96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f106:	f112 0a01 	adds.w	sl, r2, #1
 801f10a:	d481      	bmi.n	801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f10c:	4553      	cmp	r3, sl
 801f10e:	f6ff af7f 	blt.w	801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f112:	f11c 0a01 	adds.w	sl, ip, #1
 801f116:	f53f af7b 	bmi.w	801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f11a:	45d6      	cmp	lr, sl
 801f11c:	f6ff af78 	blt.w	801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f120:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f124:	b21b      	sxth	r3, r3
 801f126:	fa0f f28e 	sxth.w	r2, lr
 801f12a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f12e:	9201      	str	r2, [sp, #4]
 801f130:	9300      	str	r3, [sp, #0]
 801f132:	9a07      	ldr	r2, [sp, #28]
 801f134:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f136:	463b      	mov	r3, r7
 801f138:	4641      	mov	r1, r8
 801f13a:	f7ff fe21 	bl	801ed80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f13e:	e767      	b.n	801f010 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f140:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f142:	9d07      	ldr	r5, [sp, #28]
 801f144:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f148:	1422      	asrs	r2, r4, #16
 801f14a:	1431      	asrs	r1, r6, #16
 801f14c:	fb03 2101 	mla	r1, r3, r1, r2
 801f150:	9a07      	ldr	r2, [sp, #28]
 801f152:	440a      	add	r2, r1
 801f154:	5c69      	ldrb	r1, [r5, r1]
 801f156:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f15a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f15e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f162:	f1be 0f00 	cmp.w	lr, #0
 801f166:	d05c      	beq.n	801f222 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f168:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f16c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f170:	950d      	str	r5, [sp, #52]	; 0x34
 801f172:	b150      	cbz	r0, 801f18a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f174:	eb02 0c03 	add.w	ip, r2, r3
 801f178:	5cd3      	ldrb	r3, [r2, r3]
 801f17a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f17e:	930a      	str	r3, [sp, #40]	; 0x28
 801f180:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f184:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f188:	930e      	str	r3, [sp, #56]	; 0x38
 801f18a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f18c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f18e:	fb1e f200 	smulbb	r2, lr, r0
 801f192:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f196:	10d2      	asrs	r2, r2, #3
 801f198:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f19c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f1a0:	ea4c 0c03 	orr.w	ip, ip, r3
 801f1a4:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f1a8:	9311      	str	r3, [sp, #68]	; 0x44
 801f1aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f1ac:	041b      	lsls	r3, r3, #16
 801f1ae:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f1b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f1b6:	ea43 030b 	orr.w	r3, r3, fp
 801f1ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f1bc:	4353      	muls	r3, r2
 801f1be:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f1c2:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f1c6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f1ca:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f1ce:	ea43 0b01 	orr.w	fp, r3, r1
 801f1d2:	f1c0 0110 	rsb	r1, r0, #16
 801f1d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f1d8:	eba1 0e0e 	sub.w	lr, r1, lr
 801f1dc:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f1e0:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f1e4:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f1e8:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f1ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f1f0:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f1f4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f1f8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f1fc:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f200:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f204:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f208:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f20c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f210:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f212:	f82a cb02 	strh.w	ip, [sl], #2
 801f216:	441c      	add	r4, r3
 801f218:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f21a:	f108 38ff 	add.w	r8, r8, #4294967295
 801f21e:	441e      	add	r6, r3
 801f220:	e723      	b.n	801f06a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f222:	2800      	cmp	r0, #0
 801f224:	d0b1      	beq.n	801f18a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f226:	5cd3      	ldrb	r3, [r2, r3]
 801f228:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f22c:	930a      	str	r3, [sp, #40]	; 0x28
 801f22e:	e7ac      	b.n	801f18a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f230:	b013      	add	sp, #76	; 0x4c
 801f232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f236:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f23a:	880d      	ldrh	r5, [r1, #0]
 801f23c:	b087      	sub	sp, #28
 801f23e:	10ef      	asrs	r7, r5, #3
 801f240:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f244:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f248:	00ed      	lsls	r5, r5, #3
 801f24a:	9701      	str	r7, [sp, #4]
 801f24c:	b2ed      	uxtb	r5, r5
 801f24e:	9502      	str	r5, [sp, #8]
 801f250:	9d01      	ldr	r5, [sp, #4]
 801f252:	9103      	str	r1, [sp, #12]
 801f254:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f258:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f25c:	9902      	ldr	r1, [sp, #8]
 801f25e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f262:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f266:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f26a:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f26e:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f272:	022d      	lsls	r5, r5, #8
 801f274:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f278:	fb06 0709 	mla	r7, r6, r9, r0
 801f27c:	430d      	orrs	r5, r1
 801f27e:	2e00      	cmp	r6, #0
 801f280:	eb02 0c07 	add.w	ip, r2, r7
 801f284:	9505      	str	r5, [sp, #20]
 801f286:	f2c0 80b6 	blt.w	801f3f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f28a:	45b3      	cmp	fp, r6
 801f28c:	f340 80b3 	ble.w	801f3f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f290:	2800      	cmp	r0, #0
 801f292:	f2c0 80ae 	blt.w	801f3f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f296:	4581      	cmp	r9, r0
 801f298:	f340 80ab 	ble.w	801f3f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f29c:	5dd7      	ldrb	r7, [r2, r7]
 801f29e:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f2a2:	441f      	add	r7, r3
 801f2a4:	1c42      	adds	r2, r0, #1
 801f2a6:	f100 80a9 	bmi.w	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f2aa:	4591      	cmp	r9, r2
 801f2ac:	f340 80a6 	ble.w	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f2b0:	2c00      	cmp	r4, #0
 801f2b2:	f000 80a3 	beq.w	801f3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f2b6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f2ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f2be:	441d      	add	r5, r3
 801f2c0:	3601      	adds	r6, #1
 801f2c2:	f100 809f 	bmi.w	801f404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2c6:	45b3      	cmp	fp, r6
 801f2c8:	f340 809c 	ble.w	801f404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2cc:	f1be 0f00 	cmp.w	lr, #0
 801f2d0:	f000 8098 	beq.w	801f404 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2d4:	2800      	cmp	r0, #0
 801f2d6:	f2c0 8093 	blt.w	801f400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f2da:	4581      	cmp	r9, r0
 801f2dc:	f340 8090 	ble.w	801f400 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f2e0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f2e4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f2e8:	441e      	add	r6, r3
 801f2ea:	3001      	adds	r0, #1
 801f2ec:	f100 808d 	bmi.w	801f40a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2f0:	4581      	cmp	r9, r0
 801f2f2:	f340 808a 	ble.w	801f40a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2f6:	2c00      	cmp	r4, #0
 801f2f8:	f000 8087 	beq.w	801f40a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2fc:	44e1      	add	r9, ip
 801f2fe:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f302:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f306:	4413      	add	r3, r2
 801f308:	b2a4      	uxth	r4, r4
 801f30a:	fa1f fe8e 	uxth.w	lr, lr
 801f30e:	fb04 fb0e 	mul.w	fp, r4, lr
 801f312:	0124      	lsls	r4, r4, #4
 801f314:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f318:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f31c:	eba4 040b 	sub.w	r4, r4, fp
 801f320:	fa1f f08e 	uxth.w	r0, lr
 801f324:	b2a2      	uxth	r2, r4
 801f326:	78ac      	ldrb	r4, [r5, #2]
 801f328:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f32c:	9901      	ldr	r1, [sp, #4]
 801f32e:	eba9 0900 	sub.w	r9, r9, r0
 801f332:	fa1f f989 	uxth.w	r9, r9
 801f336:	4354      	muls	r4, r2
 801f338:	fb09 440c 	mla	r4, r9, ip, r4
 801f33c:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f340:	fb00 440c 	mla	r4, r0, ip, r4
 801f344:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f348:	fa1f fe88 	uxth.w	lr, r8
 801f34c:	ea6f 0808 	mvn.w	r8, r8
 801f350:	fa5f f888 	uxtb.w	r8, r8
 801f354:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f358:	fb1a fa08 	smulbb	sl, sl, r8
 801f35c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f360:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f364:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f368:	787c      	ldrb	r4, [r7, #1]
 801f36a:	782d      	ldrb	r5, [r5, #0]
 801f36c:	783f      	ldrb	r7, [r7, #0]
 801f36e:	fb02 fa0a 	mul.w	sl, r2, sl
 801f372:	fb09 aa04 	mla	sl, r9, r4, sl
 801f376:	7874      	ldrb	r4, [r6, #1]
 801f378:	436a      	muls	r2, r5
 801f37a:	7835      	ldrb	r5, [r6, #0]
 801f37c:	fb00 aa04 	mla	sl, r0, r4, sl
 801f380:	fb09 2207 	mla	r2, r9, r7, r2
 801f384:	785c      	ldrb	r4, [r3, #1]
 801f386:	781b      	ldrb	r3, [r3, #0]
 801f388:	fb00 2005 	mla	r0, r0, r5, r2
 801f38c:	fb0b a404 	mla	r4, fp, r4, sl
 801f390:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f394:	9b02      	ldr	r3, [sp, #8]
 801f396:	fb11 fa08 	smulbb	sl, r1, r8
 801f39a:	fa1f fc8c 	uxth.w	ip, ip
 801f39e:	fb13 f808 	smulbb	r8, r3, r8
 801f3a2:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f3a6:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f3aa:	fb04 a40e 	mla	r4, r4, lr, sl
 801f3ae:	f10c 0301 	add.w	r3, ip, #1
 801f3b2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f3b6:	fa1f fe8e 	uxth.w	lr, lr
 801f3ba:	b2a4      	uxth	r4, r4
 801f3bc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f3c0:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f3c4:	f104 0a01 	add.w	sl, r4, #1
 801f3c8:	f10e 0c01 	add.w	ip, lr, #1
 801f3cc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f3d0:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f3d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f3d8:	0964      	lsrs	r4, r4, #5
 801f3da:	ea4c 0c03 	orr.w	ip, ip, r3
 801f3de:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f3e2:	9b03      	ldr	r3, [sp, #12]
 801f3e4:	ea4c 0c04 	orr.w	ip, ip, r4
 801f3e8:	f8a3 c000 	strh.w	ip, [r3]
 801f3ec:	b007      	add	sp, #28
 801f3ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3f2:	af05      	add	r7, sp, #20
 801f3f4:	e756      	b.n	801f2a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f3f6:	ad05      	add	r5, sp, #20
 801f3f8:	462f      	mov	r7, r5
 801f3fa:	e761      	b.n	801f2c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f3fc:	ad05      	add	r5, sp, #20
 801f3fe:	e75f      	b.n	801f2c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f400:	ae05      	add	r6, sp, #20
 801f402:	e772      	b.n	801f2ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f404:	ab05      	add	r3, sp, #20
 801f406:	461e      	mov	r6, r3
 801f408:	e77e      	b.n	801f308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f40a:	ab05      	add	r3, sp, #20
 801f40c:	e77c      	b.n	801f308 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f40e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f40e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f412:	b095      	sub	sp, #84	; 0x54
 801f414:	9212      	str	r2, [sp, #72]	; 0x48
 801f416:	9309      	str	r3, [sp, #36]	; 0x24
 801f418:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f41a:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f41e:	930f      	str	r3, [sp, #60]	; 0x3c
 801f420:	910e      	str	r1, [sp, #56]	; 0x38
 801f422:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f426:	9013      	str	r0, [sp, #76]	; 0x4c
 801f428:	6850      	ldr	r0, [r2, #4]
 801f42a:	6812      	ldr	r2, [r2, #0]
 801f42c:	fb00 1303 	mla	r3, r0, r3, r1
 801f430:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f434:	930a      	str	r3, [sp, #40]	; 0x28
 801f436:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f438:	681b      	ldr	r3, [r3, #0]
 801f43a:	930d      	str	r3, [sp, #52]	; 0x34
 801f43c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f43e:	685c      	ldr	r4, [r3, #4]
 801f440:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f442:	43db      	mvns	r3, r3
 801f444:	b2db      	uxtb	r3, r3
 801f446:	3404      	adds	r4, #4
 801f448:	930b      	str	r3, [sp, #44]	; 0x2c
 801f44a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f44c:	2b00      	cmp	r3, #0
 801f44e:	dc03      	bgt.n	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f450:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f452:	2b00      	cmp	r3, #0
 801f454:	f340 8255 	ble.w	801f902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f458:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f45a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f45e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f462:	1e48      	subs	r0, r1, #1
 801f464:	1e55      	subs	r5, r2, #1
 801f466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f468:	2b00      	cmp	r3, #0
 801f46a:	f340 80f9 	ble.w	801f660 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f46e:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f470:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f472:	1436      	asrs	r6, r6, #16
 801f474:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f478:	d406      	bmi.n	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f47a:	4286      	cmp	r6, r0
 801f47c:	da04      	bge.n	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f47e:	2b00      	cmp	r3, #0
 801f480:	db02      	blt.n	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f482:	42ab      	cmp	r3, r5
 801f484:	f2c0 80ed 	blt.w	801f662 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f488:	3601      	adds	r6, #1
 801f48a:	f100 80da 	bmi.w	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f48e:	42b1      	cmp	r1, r6
 801f490:	f2c0 80d7 	blt.w	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f494:	3301      	adds	r3, #1
 801f496:	f100 80d4 	bmi.w	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f49a:	429a      	cmp	r2, r3
 801f49c:	f2c0 80d1 	blt.w	801f642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f4a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f4a2:	9311      	str	r3, [sp, #68]	; 0x44
 801f4a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f4a6:	930c      	str	r3, [sp, #48]	; 0x30
 801f4a8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f4aa:	2b00      	cmp	r3, #0
 801f4ac:	f340 80fa 	ble.w	801f6a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f4b0:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f4b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4b4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f4b6:	68c6      	ldr	r6, [r0, #12]
 801f4b8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f4ba:	141d      	asrs	r5, r3, #16
 801f4bc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f4c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f4c2:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f4c4:	1400      	asrs	r0, r0, #16
 801f4c6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f4ca:	6892      	ldr	r2, [r2, #8]
 801f4cc:	f100 813e 	bmi.w	801f74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4d0:	1e57      	subs	r7, r2, #1
 801f4d2:	42b8      	cmp	r0, r7
 801f4d4:	f280 813a 	bge.w	801f74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4d8:	2d00      	cmp	r5, #0
 801f4da:	f2c0 8137 	blt.w	801f74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4de:	1e77      	subs	r7, r6, #1
 801f4e0:	42bd      	cmp	r5, r7
 801f4e2:	f280 8133 	bge.w	801f74c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4e6:	b212      	sxth	r2, r2
 801f4e8:	fb05 0002 	mla	r0, r5, r2, r0
 801f4ec:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f4ee:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f4f2:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f4f6:	182e      	adds	r6, r5, r0
 801f4f8:	eb04 050a 	add.w	r5, r4, sl
 801f4fc:	2b00      	cmp	r3, #0
 801f4fe:	f000 8117 	beq.w	801f730 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f502:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f506:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f50a:	44a4      	add	ip, r4
 801f50c:	2900      	cmp	r1, #0
 801f50e:	f000 8117 	beq.w	801f740 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f512:	18b0      	adds	r0, r6, r2
 801f514:	5cb2      	ldrb	r2, [r6, r2]
 801f516:	7840      	ldrb	r0, [r0, #1]
 801f518:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f51c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f520:	4422      	add	r2, r4
 801f522:	4420      	add	r0, r4
 801f524:	b29b      	uxth	r3, r3
 801f526:	b289      	uxth	r1, r1
 801f528:	fb03 f901 	mul.w	r9, r3, r1
 801f52c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f530:	011b      	lsls	r3, r3, #4
 801f532:	b289      	uxth	r1, r1
 801f534:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f538:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f53c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f53e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f542:	f8b6 e000 	ldrh.w	lr, [r6]
 801f546:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f54a:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f54e:	eba3 0309 	sub.w	r3, r3, r9
 801f552:	b29b      	uxth	r3, r3
 801f554:	eba8 0801 	sub.w	r8, r8, r1
 801f558:	fa1f f888 	uxth.w	r8, r8
 801f55c:	435f      	muls	r7, r3
 801f55e:	fb08 770b 	mla	r7, r8, fp, r7
 801f562:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f566:	9310      	str	r3, [sp, #64]	; 0x40
 801f568:	fb01 770b 	mla	r7, r1, fp, r7
 801f56c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f570:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f572:	fb09 770b 	mla	r7, r9, fp, r7
 801f576:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f57a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f57e:	fb1b fb03 	smulbb	fp, fp, r3
 801f582:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f586:	fb07 b706 	mla	r7, r7, r6, fp
 801f58a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f58c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f590:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f594:	f89c c000 	ldrb.w	ip, [ip]
 801f598:	435d      	muls	r5, r3
 801f59a:	fb08 550b 	mla	r5, r8, fp, r5
 801f59e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f5a2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f5a4:	fb01 550b 	mla	r5, r1, fp, r5
 801f5a8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f5ac:	fb09 550b 	mla	r5, r9, fp, r5
 801f5b0:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f5b4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f5b8:	fb1b fb03 	smulbb	fp, fp, r3
 801f5bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f5be:	fb03 f30c 	mul.w	r3, r3, ip
 801f5c2:	f892 c000 	ldrb.w	ip, [r2]
 801f5c6:	fb08 330a 	mla	r3, r8, sl, r3
 801f5ca:	fb01 330c 	mla	r3, r1, ip, r3
 801f5ce:	f890 c000 	ldrb.w	ip, [r0]
 801f5d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f5d6:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f5da:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f5dc:	fa5f fe8e 	uxtb.w	lr, lr
 801f5e0:	b2bf      	uxth	r7, r7
 801f5e2:	fb1e fe03 	smulbb	lr, lr, r3
 801f5e6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f5ea:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5ee:	fb05 b506 	mla	r5, r5, r6, fp
 801f5f2:	1c7b      	adds	r3, r7, #1
 801f5f4:	fb0c e606 	mla	r6, ip, r6, lr
 801f5f8:	b2ad      	uxth	r5, r5
 801f5fa:	b2b6      	uxth	r6, r6
 801f5fc:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f600:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f604:	f105 0b01 	add.w	fp, r5, #1
 801f608:	1c77      	adds	r7, r6, #1
 801f60a:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f60e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f612:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f616:	096d      	lsrs	r5, r5, #5
 801f618:	431f      	orrs	r7, r3
 801f61a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f61e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f620:	433d      	orrs	r5, r7
 801f622:	801d      	strh	r5, [r3, #0]
 801f624:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f626:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f628:	3302      	adds	r3, #2
 801f62a:	930c      	str	r3, [sp, #48]	; 0x30
 801f62c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f62e:	4413      	add	r3, r2
 801f630:	931f      	str	r3, [sp, #124]	; 0x7c
 801f632:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f634:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f636:	4413      	add	r3, r2
 801f638:	9320      	str	r3, [sp, #128]	; 0x80
 801f63a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f63c:	3b01      	subs	r3, #1
 801f63e:	9311      	str	r3, [sp, #68]	; 0x44
 801f640:	e732      	b.n	801f4a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f642:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f644:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f646:	4433      	add	r3, r6
 801f648:	931f      	str	r3, [sp, #124]	; 0x7c
 801f64a:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f64c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f64e:	4433      	add	r3, r6
 801f650:	9320      	str	r3, [sp, #128]	; 0x80
 801f652:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f654:	3b01      	subs	r3, #1
 801f656:	9309      	str	r3, [sp, #36]	; 0x24
 801f658:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f65a:	3302      	adds	r3, #2
 801f65c:	930a      	str	r3, [sp, #40]	; 0x28
 801f65e:	e702      	b.n	801f466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f660:	d027      	beq.n	801f6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f662:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f664:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f666:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f668:	3b01      	subs	r3, #1
 801f66a:	fb00 5003 	mla	r0, r0, r3, r5
 801f66e:	1400      	asrs	r0, r0, #16
 801f670:	f53f af16 	bmi.w	801f4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f674:	3901      	subs	r1, #1
 801f676:	4288      	cmp	r0, r1
 801f678:	f6bf af12 	bge.w	801f4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f67c:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f67e:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f680:	fb01 0303 	mla	r3, r1, r3, r0
 801f684:	141b      	asrs	r3, r3, #16
 801f686:	f53f af0b 	bmi.w	801f4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f68a:	3a01      	subs	r2, #1
 801f68c:	4293      	cmp	r3, r2
 801f68e:	f6bf af07 	bge.w	801f4a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f692:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f694:	9311      	str	r3, [sp, #68]	; 0x44
 801f696:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f69a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f69c:	930c      	str	r3, [sp, #48]	; 0x30
 801f69e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f6a0:	2b00      	cmp	r3, #0
 801f6a2:	dc70      	bgt.n	801f786 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f6a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f6a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f6ac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f6b0:	930a      	str	r3, [sp, #40]	; 0x28
 801f6b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6b4:	2b00      	cmp	r3, #0
 801f6b6:	f340 8124 	ble.w	801f902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f6ba:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f6be:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f6c2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6c6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f6c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6d4:	eef0 6a62 	vmov.f32	s13, s5
 801f6d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6e4:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f6e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6ec:	eef0 6a43 	vmov.f32	s13, s6
 801f6f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6f4:	ee12 2a90 	vmov	r2, s5
 801f6f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6fc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f700:	ee13 2a10 	vmov	r2, s6
 801f704:	9321      	str	r3, [sp, #132]	; 0x84
 801f706:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f708:	fb92 f3f3 	sdiv	r3, r2, r3
 801f70c:	9322      	str	r3, [sp, #136]	; 0x88
 801f70e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f710:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f712:	3b01      	subs	r3, #1
 801f714:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f718:	930e      	str	r3, [sp, #56]	; 0x38
 801f71a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f71c:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f720:	bf08      	it	eq
 801f722:	4613      	moveq	r3, r2
 801f724:	9309      	str	r3, [sp, #36]	; 0x24
 801f726:	eeb0 3a67 	vmov.f32	s6, s15
 801f72a:	eef0 2a47 	vmov.f32	s5, s14
 801f72e:	e68c      	b.n	801f44a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f730:	b149      	cbz	r1, 801f746 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f732:	5cb2      	ldrb	r2, [r6, r2]
 801f734:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f738:	4422      	add	r2, r4
 801f73a:	4628      	mov	r0, r5
 801f73c:	46ac      	mov	ip, r5
 801f73e:	e6f1      	b.n	801f524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f740:	4628      	mov	r0, r5
 801f742:	462a      	mov	r2, r5
 801f744:	e6ee      	b.n	801f524 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f746:	4628      	mov	r0, r5
 801f748:	462a      	mov	r2, r5
 801f74a:	e7f7      	b.n	801f73c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f74c:	1c47      	adds	r7, r0, #1
 801f74e:	f53f af69 	bmi.w	801f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f752:	42ba      	cmp	r2, r7
 801f754:	f6ff af66 	blt.w	801f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f758:	1c6f      	adds	r7, r5, #1
 801f75a:	f53f af63 	bmi.w	801f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f75e:	42be      	cmp	r6, r7
 801f760:	f6ff af60 	blt.w	801f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f764:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f766:	9002      	str	r0, [sp, #8]
 801f768:	b236      	sxth	r6, r6
 801f76a:	b212      	sxth	r2, r2
 801f76c:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f770:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f774:	9200      	str	r2, [sp, #0]
 801f776:	9601      	str	r6, [sp, #4]
 801f778:	4623      	mov	r3, r4
 801f77a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f77e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f780:	f7ff fd59 	bl	801f236 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f784:	e74e      	b.n	801f624 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f786:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f788:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f78a:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f78c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f78e:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f792:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f794:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f798:	142d      	asrs	r5, r5, #16
 801f79a:	1400      	asrs	r0, r0, #16
 801f79c:	fb02 5000 	mla	r0, r2, r0, r5
 801f7a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f7a2:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f7a6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f7aa:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f7ae:	182e      	adds	r6, r5, r0
 801f7b0:	eb04 0509 	add.w	r5, r4, r9
 801f7b4:	2b00      	cmp	r3, #0
 801f7b6:	f000 8096 	beq.w	801f8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f7ba:	7877      	ldrb	r7, [r6, #1]
 801f7bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f7c0:	4427      	add	r7, r4
 801f7c2:	2900      	cmp	r1, #0
 801f7c4:	f000 8097 	beq.w	801f8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f7c8:	18b0      	adds	r0, r6, r2
 801f7ca:	5cb2      	ldrb	r2, [r6, r2]
 801f7cc:	7840      	ldrb	r0, [r0, #1]
 801f7ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f7d2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f7d6:	4422      	add	r2, r4
 801f7d8:	4420      	add	r0, r4
 801f7da:	b29b      	uxth	r3, r3
 801f7dc:	b289      	uxth	r1, r1
 801f7de:	fb03 f801 	mul.w	r8, r3, r1
 801f7e2:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f7e4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f7e8:	f8b6 c000 	ldrh.w	ip, [r6]
 801f7ec:	78be      	ldrb	r6, [r7, #2]
 801f7ee:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f7f2:	011b      	lsls	r3, r3, #4
 801f7f4:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f7f8:	b289      	uxth	r1, r1
 801f7fa:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f7fe:	eba3 0308 	sub.w	r3, r3, r8
 801f802:	b29b      	uxth	r3, r3
 801f804:	ebae 0e01 	sub.w	lr, lr, r1
 801f808:	fa1f fe8e 	uxth.w	lr, lr
 801f80c:	435e      	muls	r6, r3
 801f80e:	fb0e 660b 	mla	r6, lr, fp, r6
 801f812:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f816:	9310      	str	r3, [sp, #64]	; 0x40
 801f818:	fb01 660b 	mla	r6, r1, fp, r6
 801f81c:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f820:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f822:	fb08 660b 	mla	r6, r8, fp, r6
 801f826:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f82a:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f82e:	fb1b fb03 	smulbb	fp, fp, r3
 801f832:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f836:	fb06 b60a 	mla	r6, r6, sl, fp
 801f83a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f83c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f840:	787d      	ldrb	r5, [r7, #1]
 801f842:	783f      	ldrb	r7, [r7, #0]
 801f844:	435d      	muls	r5, r3
 801f846:	fb0e 550b 	mla	r5, lr, fp, r5
 801f84a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f84e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f850:	fb01 550b 	mla	r5, r1, fp, r5
 801f854:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f858:	fb08 550b 	mla	r5, r8, fp, r5
 801f85c:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f860:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f864:	fb1b fb03 	smulbb	fp, fp, r3
 801f868:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f86a:	437b      	muls	r3, r7
 801f86c:	7817      	ldrb	r7, [r2, #0]
 801f86e:	fb0e 3309 	mla	r3, lr, r9, r3
 801f872:	fb01 3307 	mla	r3, r1, r7, r3
 801f876:	7807      	ldrb	r7, [r0, #0]
 801f878:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f87c:	fb08 3707 	mla	r7, r8, r7, r3
 801f880:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f882:	fa5f fc8c 	uxtb.w	ip, ip
 801f886:	fb1c fc03 	smulbb	ip, ip, r3
 801f88a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f88e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f892:	fb05 b50a 	mla	r5, r5, sl, fp
 801f896:	fb07 c70a 	mla	r7, r7, sl, ip
 801f89a:	b2b6      	uxth	r6, r6
 801f89c:	b2ad      	uxth	r5, r5
 801f89e:	b2bf      	uxth	r7, r7
 801f8a0:	1c73      	adds	r3, r6, #1
 801f8a2:	1c7a      	adds	r2, r7, #1
 801f8a4:	f105 0b01 	add.w	fp, r5, #1
 801f8a8:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f8ac:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f8b0:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f8b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f8b8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f8bc:	096d      	lsrs	r5, r5, #5
 801f8be:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f8c0:	4316      	orrs	r6, r2
 801f8c2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f8c6:	432e      	orrs	r6, r5
 801f8c8:	f823 6b02 	strh.w	r6, [r3], #2
 801f8cc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f8ce:	930c      	str	r3, [sp, #48]	; 0x30
 801f8d0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8d2:	4413      	add	r3, r2
 801f8d4:	931f      	str	r3, [sp, #124]	; 0x7c
 801f8d6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f8d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8da:	4413      	add	r3, r2
 801f8dc:	9320      	str	r3, [sp, #128]	; 0x80
 801f8de:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f8e0:	3b01      	subs	r3, #1
 801f8e2:	9311      	str	r3, [sp, #68]	; 0x44
 801f8e4:	e6db      	b.n	801f69e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f8e6:	b149      	cbz	r1, 801f8fc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f8e8:	5cb2      	ldrb	r2, [r6, r2]
 801f8ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8ee:	4422      	add	r2, r4
 801f8f0:	4628      	mov	r0, r5
 801f8f2:	462f      	mov	r7, r5
 801f8f4:	e771      	b.n	801f7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8f6:	4628      	mov	r0, r5
 801f8f8:	462a      	mov	r2, r5
 801f8fa:	e76e      	b.n	801f7da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8fc:	4628      	mov	r0, r5
 801f8fe:	462a      	mov	r2, r5
 801f900:	e7f7      	b.n	801f8f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f902:	b015      	add	sp, #84	; 0x54
 801f904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f908:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f90c:	880f      	ldrh	r7, [r1, #0]
 801f90e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f912:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f916:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f91a:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f91e:	023c      	lsls	r4, r7, #8
 801f920:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f924:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f928:	017c      	lsls	r4, r7, #5
 801f92a:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f92e:	00ff      	lsls	r7, r7, #3
 801f930:	ea4b 0404 	orr.w	r4, fp, r4
 801f934:	b2ff      	uxtb	r7, r7
 801f936:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f93a:	4327      	orrs	r7, r4
 801f93c:	2d00      	cmp	r5, #0
 801f93e:	eb02 080a 	add.w	r8, r2, sl
 801f942:	9701      	str	r7, [sp, #4]
 801f944:	db7e      	blt.n	801fa44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f946:	45a9      	cmp	r9, r5
 801f948:	dd7c      	ble.n	801fa44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f94a:	f1bc 0f00 	cmp.w	ip, #0
 801f94e:	db77      	blt.n	801fa40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f950:	45e6      	cmp	lr, ip
 801f952:	dd75      	ble.n	801fa40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f954:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f958:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f95c:	441f      	add	r7, r3
 801f95e:	f11c 0201 	adds.w	r2, ip, #1
 801f962:	d472      	bmi.n	801fa4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f964:	4596      	cmp	lr, r2
 801f966:	dd70      	ble.n	801fa4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f968:	2800      	cmp	r0, #0
 801f96a:	d06e      	beq.n	801fa4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f96c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f970:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f974:	441c      	add	r4, r3
 801f976:	3501      	adds	r5, #1
 801f978:	d46b      	bmi.n	801fa52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f97a:	45a9      	cmp	r9, r5
 801f97c:	dd69      	ble.n	801fa52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f97e:	2e00      	cmp	r6, #0
 801f980:	d067      	beq.n	801fa52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f982:	f1bc 0f00 	cmp.w	ip, #0
 801f986:	db62      	blt.n	801fa4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f988:	45e6      	cmp	lr, ip
 801f98a:	dd60      	ble.n	801fa4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f98c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f990:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f994:	441d      	add	r5, r3
 801f996:	f11c 0201 	adds.w	r2, ip, #1
 801f99a:	d45d      	bmi.n	801fa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f99c:	4596      	cmp	lr, r2
 801f99e:	dd5b      	ble.n	801fa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f9a0:	2800      	cmp	r0, #0
 801f9a2:	d059      	beq.n	801fa58 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f9a4:	44c6      	add	lr, r8
 801f9a6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f9aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f9ae:	4413      	add	r3, r2
 801f9b0:	b280      	uxth	r0, r0
 801f9b2:	b2b2      	uxth	r2, r6
 801f9b4:	fb00 f602 	mul.w	r6, r0, r2
 801f9b8:	0100      	lsls	r0, r0, #4
 801f9ba:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f9be:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f9c2:	1b80      	subs	r0, r0, r6
 801f9c4:	fa1f fc82 	uxth.w	ip, r2
 801f9c8:	b282      	uxth	r2, r0
 801f9ca:	78a0      	ldrb	r0, [r4, #2]
 801f9cc:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f9d0:	f897 9000 	ldrb.w	r9, [r7]
 801f9d4:	787f      	ldrb	r7, [r7, #1]
 801f9d6:	eba8 080c 	sub.w	r8, r8, ip
 801f9da:	fa1f f888 	uxth.w	r8, r8
 801f9de:	4350      	muls	r0, r2
 801f9e0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f9e4:	78a8      	ldrb	r0, [r5, #2]
 801f9e6:	fb0c e000 	mla	r0, ip, r0, lr
 801f9ea:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f9ee:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f9f2:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f9f6:	f894 e000 	ldrb.w	lr, [r4]
 801f9fa:	fb02 fe0e 	mul.w	lr, r2, lr
 801f9fe:	fb08 e909 	mla	r9, r8, r9, lr
 801fa02:	f895 e000 	ldrb.w	lr, [r5]
 801fa06:	fb0c 990e 	mla	r9, ip, lr, r9
 801fa0a:	f893 e000 	ldrb.w	lr, [r3]
 801fa0e:	785b      	ldrb	r3, [r3, #1]
 801fa10:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fa14:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fa18:	ea4e 0e00 	orr.w	lr, lr, r0
 801fa1c:	7860      	ldrb	r0, [r4, #1]
 801fa1e:	4350      	muls	r0, r2
 801fa20:	786a      	ldrb	r2, [r5, #1]
 801fa22:	fb08 0007 	mla	r0, r8, r7, r0
 801fa26:	fb0c 0202 	mla	r2, ip, r2, r0
 801fa2a:	fb06 2303 	mla	r3, r6, r3, r2
 801fa2e:	095b      	lsrs	r3, r3, #5
 801fa30:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fa34:	ea4e 0303 	orr.w	r3, lr, r3
 801fa38:	800b      	strh	r3, [r1, #0]
 801fa3a:	b003      	add	sp, #12
 801fa3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa40:	af01      	add	r7, sp, #4
 801fa42:	e78c      	b.n	801f95e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fa44:	ac01      	add	r4, sp, #4
 801fa46:	4627      	mov	r7, r4
 801fa48:	e795      	b.n	801f976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa4a:	ac01      	add	r4, sp, #4
 801fa4c:	e793      	b.n	801f976 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa4e:	ad01      	add	r5, sp, #4
 801fa50:	e7a1      	b.n	801f996 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fa52:	ab01      	add	r3, sp, #4
 801fa54:	461d      	mov	r5, r3
 801fa56:	e7ab      	b.n	801f9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fa58:	ab01      	add	r3, sp, #4
 801fa5a:	e7a9      	b.n	801f9b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fa5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa60:	b08f      	sub	sp, #60	; 0x3c
 801fa62:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fa66:	920c      	str	r2, [sp, #48]	; 0x30
 801fa68:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fa6a:	910a      	str	r1, [sp, #40]	; 0x28
 801fa6c:	9306      	str	r3, [sp, #24]
 801fa6e:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fa72:	900d      	str	r0, [sp, #52]	; 0x34
 801fa74:	6850      	ldr	r0, [r2, #4]
 801fa76:	6812      	ldr	r2, [r2, #0]
 801fa78:	fb00 1303 	mla	r3, r0, r3, r1
 801fa7c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa80:	9307      	str	r3, [sp, #28]
 801fa82:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa84:	681b      	ldr	r3, [r3, #0]
 801fa86:	9308      	str	r3, [sp, #32]
 801fa88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa8a:	685c      	ldr	r4, [r3, #4]
 801fa8c:	3404      	adds	r4, #4
 801fa8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa90:	2b00      	cmp	r3, #0
 801fa92:	dc03      	bgt.n	801fa9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fa94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa96:	2b00      	cmp	r3, #0
 801fa98:	f340 81d6 	ble.w	801fe48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fa9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa9e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801faa2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801faa6:	1e48      	subs	r0, r1, #1
 801faa8:	1e56      	subs	r6, r2, #1
 801faaa:	9b06      	ldr	r3, [sp, #24]
 801faac:	2b00      	cmp	r3, #0
 801faae:	f340 80b7 	ble.w	801fc20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fab2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fab6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801faba:	d406      	bmi.n	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fabc:	4287      	cmp	r7, r0
 801fabe:	da04      	bge.n	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fac0:	2b00      	cmp	r3, #0
 801fac2:	db02      	blt.n	801faca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fac4:	42b3      	cmp	r3, r6
 801fac6:	f2c0 80ac 	blt.w	801fc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801faca:	3701      	adds	r7, #1
 801facc:	f100 809d 	bmi.w	801fc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fad0:	42b9      	cmp	r1, r7
 801fad2:	f2c0 809a 	blt.w	801fc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fad6:	3301      	adds	r3, #1
 801fad8:	f100 8097 	bmi.w	801fc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fadc:	429a      	cmp	r2, r3
 801fade:	f2c0 8094 	blt.w	801fc0a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fae2:	9b06      	ldr	r3, [sp, #24]
 801fae4:	930b      	str	r3, [sp, #44]	; 0x2c
 801fae6:	9b07      	ldr	r3, [sp, #28]
 801fae8:	9309      	str	r3, [sp, #36]	; 0x24
 801faea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faec:	2b00      	cmp	r3, #0
 801faee:	f340 80b5 	ble.w	801fc5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801faf2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801faf4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801faf6:	68c7      	ldr	r7, [r0, #12]
 801faf8:	6892      	ldr	r2, [r2, #8]
 801fafa:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fafe:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fb02:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fb06:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fb0a:	f100 80fb 	bmi.w	801fd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fb0e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fb12:	4560      	cmp	r0, ip
 801fb14:	f280 80f6 	bge.w	801fd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fb18:	2e00      	cmp	r6, #0
 801fb1a:	f2c0 80f3 	blt.w	801fd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fb1e:	f107 3cff 	add.w	ip, r7, #4294967295
 801fb22:	4566      	cmp	r6, ip
 801fb24:	f280 80ee 	bge.w	801fd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fb28:	b212      	sxth	r2, r2
 801fb2a:	fb06 0002 	mla	r0, r6, r2, r0
 801fb2e:	9e08      	ldr	r6, [sp, #32]
 801fb30:	1837      	adds	r7, r6, r0
 801fb32:	5c30      	ldrb	r0, [r6, r0]
 801fb34:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fb38:	eb04 0c08 	add.w	ip, r4, r8
 801fb3c:	2b00      	cmp	r3, #0
 801fb3e:	f000 80d3 	beq.w	801fce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fb42:	787e      	ldrb	r6, [r7, #1]
 801fb44:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fb48:	4426      	add	r6, r4
 801fb4a:	2900      	cmp	r1, #0
 801fb4c:	f000 80d4 	beq.w	801fcf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fb50:	18b8      	adds	r0, r7, r2
 801fb52:	5cba      	ldrb	r2, [r7, r2]
 801fb54:	7840      	ldrb	r0, [r0, #1]
 801fb56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb5e:	4422      	add	r2, r4
 801fb60:	4420      	add	r0, r4
 801fb62:	b29b      	uxth	r3, r3
 801fb64:	b289      	uxth	r1, r1
 801fb66:	fb03 f901 	mul.w	r9, r3, r1
 801fb6a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb6e:	011b      	lsls	r3, r3, #4
 801fb70:	b289      	uxth	r1, r1
 801fb72:	78b7      	ldrb	r7, [r6, #2]
 801fb74:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fb78:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fb7c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fb80:	eba3 0309 	sub.w	r3, r3, r9
 801fb84:	b29b      	uxth	r3, r3
 801fb86:	ebae 0e01 	sub.w	lr, lr, r1
 801fb8a:	fa1f fe8e 	uxth.w	lr, lr
 801fb8e:	435f      	muls	r7, r3
 801fb90:	fb0e 770a 	mla	r7, lr, sl, r7
 801fb94:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fb98:	fb01 770a 	mla	r7, r1, sl, r7
 801fb9c:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fba0:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fba4:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fba8:	f896 8000 	ldrb.w	r8, [r6]
 801fbac:	7876      	ldrb	r6, [r6, #1]
 801fbae:	fb03 f808 	mul.w	r8, r3, r8
 801fbb2:	fb0e 8807 	mla	r8, lr, r7, r8
 801fbb6:	7817      	ldrb	r7, [r2, #0]
 801fbb8:	fb01 8807 	mla	r8, r1, r7, r8
 801fbbc:	7807      	ldrb	r7, [r0, #0]
 801fbbe:	fb09 8707 	mla	r7, r9, r7, r8
 801fbc2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fbc6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fbca:	ea47 070a 	orr.w	r7, r7, sl
 801fbce:	4373      	muls	r3, r6
 801fbd0:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fbd4:	fb0e 330c 	mla	r3, lr, ip, r3
 801fbd8:	fb01 310a 	mla	r1, r1, sl, r3
 801fbdc:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fbe0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbe2:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fbe6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fbea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fbee:	ea47 070a 	orr.w	r7, r7, sl
 801fbf2:	801f      	strh	r7, [r3, #0]
 801fbf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbf6:	3302      	adds	r3, #2
 801fbf8:	9309      	str	r3, [sp, #36]	; 0x24
 801fbfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fbfc:	449b      	add	fp, r3
 801fbfe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc00:	441d      	add	r5, r3
 801fc02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fc04:	3b01      	subs	r3, #1
 801fc06:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc08:	e76f      	b.n	801faea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fc0a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fc0c:	449b      	add	fp, r3
 801fc0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc10:	441d      	add	r5, r3
 801fc12:	9b06      	ldr	r3, [sp, #24]
 801fc14:	3b01      	subs	r3, #1
 801fc16:	9306      	str	r3, [sp, #24]
 801fc18:	9b07      	ldr	r3, [sp, #28]
 801fc1a:	3302      	adds	r3, #2
 801fc1c:	9307      	str	r3, [sp, #28]
 801fc1e:	e744      	b.n	801faaa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fc20:	d023      	beq.n	801fc6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fc22:	9b06      	ldr	r3, [sp, #24]
 801fc24:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fc26:	3b01      	subs	r3, #1
 801fc28:	fb00 b003 	mla	r0, r0, r3, fp
 801fc2c:	1400      	asrs	r0, r0, #16
 801fc2e:	f53f af58 	bmi.w	801fae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc32:	3901      	subs	r1, #1
 801fc34:	4288      	cmp	r0, r1
 801fc36:	f6bf af54 	bge.w	801fae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc3a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fc3c:	fb01 5303 	mla	r3, r1, r3, r5
 801fc40:	141b      	asrs	r3, r3, #16
 801fc42:	f53f af4e 	bmi.w	801fae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc46:	3a01      	subs	r2, #1
 801fc48:	4293      	cmp	r3, r2
 801fc4a:	f6bf af4a 	bge.w	801fae2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc4e:	9b06      	ldr	r3, [sp, #24]
 801fc50:	9309      	str	r3, [sp, #36]	; 0x24
 801fc52:	9b07      	ldr	r3, [sp, #28]
 801fc54:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc58:	2b00      	cmp	r3, #0
 801fc5a:	dc70      	bgt.n	801fd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fc5c:	9b06      	ldr	r3, [sp, #24]
 801fc5e:	9a07      	ldr	r2, [sp, #28]
 801fc60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fc64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc68:	9307      	str	r3, [sp, #28]
 801fc6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc6c:	2b00      	cmp	r3, #0
 801fc6e:	f340 80eb 	ble.w	801fe48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fc72:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc76:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc7e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc84:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc8c:	eef0 6a62 	vmov.f32	s13, s5
 801fc90:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc98:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc9c:	ee16 ba90 	vmov	fp, s13
 801fca0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fca4:	eef0 6a43 	vmov.f32	s13, s6
 801fca8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fcac:	ee12 2a90 	vmov	r2, s5
 801fcb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fcb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcb8:	ee13 2a10 	vmov	r2, s6
 801fcbc:	931b      	str	r3, [sp, #108]	; 0x6c
 801fcbe:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fcc0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcc4:	931c      	str	r3, [sp, #112]	; 0x70
 801fcc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fcc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fcca:	3b01      	subs	r3, #1
 801fccc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcd0:	930a      	str	r3, [sp, #40]	; 0x28
 801fcd2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fcd4:	bf08      	it	eq
 801fcd6:	4613      	moveq	r3, r2
 801fcd8:	ee16 5a90 	vmov	r5, s13
 801fcdc:	9306      	str	r3, [sp, #24]
 801fcde:	eeb0 3a67 	vmov.f32	s6, s15
 801fce2:	eef0 2a47 	vmov.f32	s5, s14
 801fce6:	e6d2      	b.n	801fa8e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fce8:	b149      	cbz	r1, 801fcfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fcea:	5cba      	ldrb	r2, [r7, r2]
 801fcec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fcf0:	4422      	add	r2, r4
 801fcf2:	4660      	mov	r0, ip
 801fcf4:	4666      	mov	r6, ip
 801fcf6:	e734      	b.n	801fb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcf8:	4660      	mov	r0, ip
 801fcfa:	4662      	mov	r2, ip
 801fcfc:	e731      	b.n	801fb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcfe:	4660      	mov	r0, ip
 801fd00:	4662      	mov	r2, ip
 801fd02:	e7f7      	b.n	801fcf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fd04:	f110 0c01 	adds.w	ip, r0, #1
 801fd08:	f53f af74 	bmi.w	801fbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd0c:	4562      	cmp	r2, ip
 801fd0e:	f6ff af71 	blt.w	801fbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd12:	f116 0c01 	adds.w	ip, r6, #1
 801fd16:	f53f af6d 	bmi.w	801fbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd1a:	4567      	cmp	r7, ip
 801fd1c:	f6ff af6a 	blt.w	801fbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd20:	b23f      	sxth	r7, r7
 801fd22:	b212      	sxth	r2, r2
 801fd24:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fd28:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fd2c:	9200      	str	r2, [sp, #0]
 801fd2e:	9701      	str	r7, [sp, #4]
 801fd30:	4623      	mov	r3, r4
 801fd32:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fd36:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fd38:	f7ff fde6 	bl	801f908 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fd3c:	e75a      	b.n	801fbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd3e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fd40:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fd44:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fd48:	1428      	asrs	r0, r5, #16
 801fd4a:	fb02 6000 	mla	r0, r2, r0, r6
 801fd4e:	9e08      	ldr	r6, [sp, #32]
 801fd50:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fd54:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd58:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fd5c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd60:	1837      	adds	r7, r6, r0
 801fd62:	eb04 0c08 	add.w	ip, r4, r8
 801fd66:	2b00      	cmp	r3, #0
 801fd68:	d060      	beq.n	801fe2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fd6a:	787e      	ldrb	r6, [r7, #1]
 801fd6c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fd70:	4426      	add	r6, r4
 801fd72:	2900      	cmp	r1, #0
 801fd74:	d062      	beq.n	801fe3c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fd76:	18b8      	adds	r0, r7, r2
 801fd78:	5cba      	ldrb	r2, [r7, r2]
 801fd7a:	7840      	ldrb	r0, [r0, #1]
 801fd7c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd80:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd84:	4422      	add	r2, r4
 801fd86:	4420      	add	r0, r4
 801fd88:	b29b      	uxth	r3, r3
 801fd8a:	b289      	uxth	r1, r1
 801fd8c:	fb03 f901 	mul.w	r9, r3, r1
 801fd90:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fd94:	011b      	lsls	r3, r3, #4
 801fd96:	b289      	uxth	r1, r1
 801fd98:	78b7      	ldrb	r7, [r6, #2]
 801fd9a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fd9e:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fda2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fda6:	eba3 0309 	sub.w	r3, r3, r9
 801fdaa:	b29b      	uxth	r3, r3
 801fdac:	ebae 0e01 	sub.w	lr, lr, r1
 801fdb0:	fa1f fe8e 	uxth.w	lr, lr
 801fdb4:	435f      	muls	r7, r3
 801fdb6:	fb0e 770a 	mla	r7, lr, sl, r7
 801fdba:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fdbe:	fb01 770a 	mla	r7, r1, sl, r7
 801fdc2:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fdc6:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fdca:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fdce:	f896 8000 	ldrb.w	r8, [r6]
 801fdd2:	7876      	ldrb	r6, [r6, #1]
 801fdd4:	fb03 f808 	mul.w	r8, r3, r8
 801fdd8:	fb0e 8807 	mla	r8, lr, r7, r8
 801fddc:	7817      	ldrb	r7, [r2, #0]
 801fdde:	fb01 8807 	mla	r8, r1, r7, r8
 801fde2:	7807      	ldrb	r7, [r0, #0]
 801fde4:	fb09 8707 	mla	r7, r9, r7, r8
 801fde8:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fdec:	4373      	muls	r3, r6
 801fdee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdf2:	7856      	ldrb	r6, [r2, #1]
 801fdf4:	ea47 070a 	orr.w	r7, r7, sl
 801fdf8:	fb0e 330c 	mla	r3, lr, ip, r3
 801fdfc:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fe00:	fb01 3306 	mla	r3, r1, r6, r3
 801fe04:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fe08:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe0c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe0e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fe12:	ea47 070a 	orr.w	r7, r7, sl
 801fe16:	f823 7b02 	strh.w	r7, [r3], #2
 801fe1a:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe1c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe1e:	449b      	add	fp, r3
 801fe20:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe22:	441d      	add	r5, r3
 801fe24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe26:	3b01      	subs	r3, #1
 801fe28:	9309      	str	r3, [sp, #36]	; 0x24
 801fe2a:	e714      	b.n	801fc56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fe2c:	b149      	cbz	r1, 801fe42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fe2e:	5cba      	ldrb	r2, [r7, r2]
 801fe30:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe34:	4422      	add	r2, r4
 801fe36:	4660      	mov	r0, ip
 801fe38:	4666      	mov	r6, ip
 801fe3a:	e7a5      	b.n	801fd88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fe3c:	4660      	mov	r0, ip
 801fe3e:	4662      	mov	r2, ip
 801fe40:	e7a2      	b.n	801fd88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fe42:	4660      	mov	r0, ip
 801fe44:	4662      	mov	r2, ip
 801fe46:	e7f7      	b.n	801fe38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fe48:	b00f      	add	sp, #60	; 0x3c
 801fe4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fe4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe52:	b085      	sub	sp, #20
 801fe54:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fe58:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fe5c:	9102      	str	r1, [sp, #8]
 801fe5e:	2c00      	cmp	r4, #0
 801fe60:	fb04 710c 	mla	r1, r4, ip, r7
 801fe64:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fe68:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fe6c:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fe70:	eb02 0e01 	add.w	lr, r2, r1
 801fe74:	f2c0 8122 	blt.w	80200bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe78:	45a0      	cmp	r8, r4
 801fe7a:	f340 811f 	ble.w	80200bc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe7e:	2f00      	cmp	r7, #0
 801fe80:	f2c0 811a 	blt.w	80200b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe84:	45bc      	cmp	ip, r7
 801fe86:	f340 8117 	ble.w	80200b8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe8a:	5c52      	ldrb	r2, [r2, r1]
 801fe8c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fe90:	1c7a      	adds	r2, r7, #1
 801fe92:	f100 8116 	bmi.w	80200c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe96:	4594      	cmp	ip, r2
 801fe98:	f340 8113 	ble.w	80200c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe9c:	2e00      	cmp	r6, #0
 801fe9e:	f000 8112 	beq.w	80200c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fea2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fea6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801feaa:	3401      	adds	r4, #1
 801feac:	f100 810f 	bmi.w	80200ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801feb0:	45a0      	cmp	r8, r4
 801feb2:	f340 810c 	ble.w	80200ce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801feb6:	2800      	cmp	r0, #0
 801feb8:	f000 810c 	beq.w	80200d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801febc:	2f00      	cmp	r7, #0
 801febe:	f2c0 8104 	blt.w	80200ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fec2:	45bc      	cmp	ip, r7
 801fec4:	f340 8101 	ble.w	80200ca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fec8:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fecc:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fed0:	3701      	adds	r7, #1
 801fed2:	f100 8102 	bmi.w	80200da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fed6:	45bc      	cmp	ip, r7
 801fed8:	f340 80ff 	ble.w	80200da <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fedc:	2e00      	cmp	r6, #0
 801fede:	f000 80fe 	beq.w	80200de <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fee2:	44f4      	add	ip, lr
 801fee4:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fee8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801feec:	b2b6      	uxth	r6, r6
 801feee:	b280      	uxth	r0, r0
 801fef0:	fb00 fe06 	mul.w	lr, r0, r6
 801fef4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fef8:	0136      	lsls	r6, r6, #4
 801fefa:	eba6 070e 	sub.w	r7, r6, lr
 801fefe:	b280      	uxth	r0, r0
 801ff00:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ff04:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ff08:	b2bf      	uxth	r7, r7
 801ff0a:	1a1b      	subs	r3, r3, r0
 801ff0c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ff10:	b29b      	uxth	r3, r3
 801ff12:	fb0a f607 	mul.w	r6, sl, r7
 801ff16:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ff1a:	fb0b 6603 	mla	r6, fp, r3, r6
 801ff1e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ff22:	fb00 6609 	mla	r6, r0, r9, r6
 801ff26:	fb0e 6608 	mla	r6, lr, r8, r6
 801ff2a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ff2e:	9600      	str	r6, [sp, #0]
 801ff30:	2e00      	cmp	r6, #0
 801ff32:	f000 80be 	beq.w	80200b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ff36:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ff3a:	fb0b fc0c 	mul.w	ip, fp, ip
 801ff3e:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ff42:	fb0b f505 	mul.w	r5, fp, r5
 801ff46:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ff4a:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ff4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ff52:	44dc      	add	ip, fp
 801ff54:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff58:	9501      	str	r5, [sp, #4]
 801ff5a:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ff5e:	9503      	str	r5, [sp, #12]
 801ff60:	9d01      	ldr	r5, [sp, #4]
 801ff62:	9e02      	ldr	r6, [sp, #8]
 801ff64:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ff68:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ff6c:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ff70:	fb0a fc0c 	mul.w	ip, sl, ip
 801ff74:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ff78:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ff7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ff80:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ff84:	4465      	add	r5, ip
 801ff86:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ff8a:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ff8e:	fb09 fc0c 	mul.w	ip, r9, ip
 801ff92:	fb09 f904 	mul.w	r9, r9, r4
 801ff96:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ff9a:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ff9e:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ffa2:	fb08 f404 	mul.w	r4, r8, r4
 801ffa6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ffaa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ffae:	fb08 f802 	mul.w	r8, r8, r2
 801ffb2:	fb0a fa01 	mul.w	sl, sl, r1
 801ffb6:	0a22      	lsrs	r2, r4, #8
 801ffb8:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ffbc:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ffc0:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ffc4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ffc8:	4414      	add	r4, r2
 801ffca:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ffce:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ffd2:	0a2d      	lsrs	r5, r5, #8
 801ffd4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ffd8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ffdc:	9a03      	ldr	r2, [sp, #12]
 801ffde:	8836      	ldrh	r6, [r6, #0]
 801ffe0:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ffe4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ffe8:	437d      	muls	r5, r7
 801ffea:	4461      	add	r1, ip
 801ffec:	0a24      	lsrs	r4, r4, #8
 801ffee:	fb02 5503 	mla	r5, r2, r3, r5
 801fff2:	0a09      	lsrs	r1, r1, #8
 801fff4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801fff8:	fb04 540e 	mla	r4, r4, lr, r5
 801fffc:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020000:	fb01 4100 	mla	r1, r1, r0, r4
 8020004:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020008:	0a09      	lsrs	r1, r1, #8
 802000a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802000e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8020012:	fb07 f70a 	mul.w	r7, r7, sl
 8020016:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802001a:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802001e:	fb03 7101 	mla	r1, r3, r1, r7
 8020022:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020026:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802002a:	fb0e 1e08 	mla	lr, lr, r8, r1
 802002e:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8020032:	fb00 e101 	mla	r1, r0, r1, lr
 8020036:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 802003a:	9a00      	ldr	r2, [sp, #0]
 802003c:	b287      	uxth	r7, r0
 802003e:	437a      	muls	r2, r7
 8020040:	0a09      	lsrs	r1, r1, #8
 8020042:	1c53      	adds	r3, r2, #1
 8020044:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020048:	4321      	orrs	r1, r4
 802004a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802004e:	1235      	asrs	r5, r6, #8
 8020050:	0c0a      	lsrs	r2, r1, #16
 8020052:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020056:	b2db      	uxtb	r3, r3
 8020058:	fb12 f207 	smulbb	r2, r2, r7
 802005c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020060:	fb05 2503 	mla	r5, r5, r3, r2
 8020064:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020068:	10f2      	asrs	r2, r6, #3
 802006a:	b2c8      	uxtb	r0, r1
 802006c:	00f6      	lsls	r6, r6, #3
 802006e:	fb14 f407 	smulbb	r4, r4, r7
 8020072:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020076:	b2f6      	uxtb	r6, r6
 8020078:	fb10 f007 	smulbb	r0, r0, r7
 802007c:	fb02 4203 	mla	r2, r2, r3, r4
 8020080:	b2ad      	uxth	r5, r5
 8020082:	fb06 0303 	mla	r3, r6, r3, r0
 8020086:	b299      	uxth	r1, r3
 8020088:	b294      	uxth	r4, r2
 802008a:	1c6b      	adds	r3, r5, #1
 802008c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020090:	1c62      	adds	r2, r4, #1
 8020092:	1c4b      	adds	r3, r1, #1
 8020094:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020098:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802009c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80200a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80200a4:	0952      	lsrs	r2, r2, #5
 80200a6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80200aa:	432b      	orrs	r3, r5
 80200ac:	4313      	orrs	r3, r2
 80200ae:	9a02      	ldr	r2, [sp, #8]
 80200b0:	8013      	strh	r3, [r2, #0]
 80200b2:	b005      	add	sp, #20
 80200b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80200b8:	2500      	movs	r5, #0
 80200ba:	e6e9      	b.n	801fe90 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80200bc:	2100      	movs	r1, #0
 80200be:	460d      	mov	r5, r1
 80200c0:	e6f3      	b.n	801feaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80200c2:	2100      	movs	r1, #0
 80200c4:	e6f1      	b.n	801feaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80200c6:	4631      	mov	r1, r6
 80200c8:	e6ef      	b.n	801feaa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80200ca:	2400      	movs	r4, #0
 80200cc:	e700      	b.n	801fed0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80200ce:	2200      	movs	r2, #0
 80200d0:	4614      	mov	r4, r2
 80200d2:	e70b      	b.n	801feec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200d4:	4602      	mov	r2, r0
 80200d6:	4604      	mov	r4, r0
 80200d8:	e708      	b.n	801feec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200da:	2200      	movs	r2, #0
 80200dc:	e706      	b.n	801feec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200de:	4632      	mov	r2, r6
 80200e0:	e704      	b.n	801feec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080200e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200e6:	b09f      	sub	sp, #124	; 0x7c
 80200e8:	921b      	str	r2, [sp, #108]	; 0x6c
 80200ea:	9309      	str	r3, [sp, #36]	; 0x24
 80200ec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80200ee:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80200f2:	931c      	str	r3, [sp, #112]	; 0x70
 80200f4:	9119      	str	r1, [sp, #100]	; 0x64
 80200f6:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80200fa:	901d      	str	r0, [sp, #116]	; 0x74
 80200fc:	6850      	ldr	r0, [r2, #4]
 80200fe:	6812      	ldr	r2, [r2, #0]
 8020100:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8020102:	fb00 1303 	mla	r3, r0, r3, r1
 8020106:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802010a:	930c      	str	r3, [sp, #48]	; 0x30
 802010c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802010e:	681b      	ldr	r3, [r3, #0]
 8020110:	9312      	str	r3, [sp, #72]	; 0x48
 8020112:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020114:	685e      	ldr	r6, [r3, #4]
 8020116:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 802011a:	930d      	str	r3, [sp, #52]	; 0x34
 802011c:	3604      	adds	r6, #4
 802011e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020120:	2b00      	cmp	r3, #0
 8020122:	dc03      	bgt.n	802012c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020124:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020126:	2b00      	cmp	r3, #0
 8020128:	f340 8388 	ble.w	802083c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802012c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802012e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020132:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020136:	1e48      	subs	r0, r1, #1
 8020138:	1e57      	subs	r7, r2, #1
 802013a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802013c:	2b00      	cmp	r3, #0
 802013e:	f340 8195 	ble.w	802046c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8020142:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020144:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020148:	ea4f 4325 	mov.w	r3, r5, asr #16
 802014c:	d406      	bmi.n	802015c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802014e:	4584      	cmp	ip, r0
 8020150:	da04      	bge.n	802015c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020152:	2b00      	cmp	r3, #0
 8020154:	db02      	blt.n	802015c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020156:	42bb      	cmp	r3, r7
 8020158:	f2c0 8189 	blt.w	802046e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 802015c:	f11c 0c01 	adds.w	ip, ip, #1
 8020160:	f100 8177 	bmi.w	8020452 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020164:	4561      	cmp	r1, ip
 8020166:	f2c0 8174 	blt.w	8020452 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802016a:	3301      	adds	r3, #1
 802016c:	f100 8171 	bmi.w	8020452 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020170:	429a      	cmp	r2, r3
 8020172:	f2c0 816e 	blt.w	8020452 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020176:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020178:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 802017a:	931a      	str	r3, [sp, #104]	; 0x68
 802017c:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802017e:	2b00      	cmp	r3, #0
 8020180:	f340 8193 	ble.w	80204aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8020184:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020186:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802018a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802018c:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020190:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020192:	141b      	asrs	r3, r3, #16
 8020194:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020198:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802019c:	f100 81d6 	bmi.w	802054c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80201a0:	f100 38ff 	add.w	r8, r0, #4294967295
 80201a4:	4543      	cmp	r3, r8
 80201a6:	f280 81d1 	bge.w	802054c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80201aa:	f1bc 0f00 	cmp.w	ip, #0
 80201ae:	f2c0 81cd 	blt.w	802054c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80201b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80201b6:	45c4      	cmp	ip, r8
 80201b8:	f280 81c8 	bge.w	802054c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80201bc:	b200      	sxth	r0, r0
 80201be:	fb0c 3300 	mla	r3, ip, r0, r3
 80201c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80201c4:	eb04 0803 	add.w	r8, r4, r3
 80201c8:	5ce3      	ldrb	r3, [r4, r3]
 80201ca:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80201ce:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80201d2:	2a00      	cmp	r2, #0
 80201d4:	f000 81af 	beq.w	8020536 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80201d8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80201dc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80201e0:	940e      	str	r4, [sp, #56]	; 0x38
 80201e2:	0e24      	lsrs	r4, r4, #24
 80201e4:	9415      	str	r4, [sp, #84]	; 0x54
 80201e6:	b179      	cbz	r1, 8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80201e8:	eb08 0c00 	add.w	ip, r8, r0
 80201ec:	f818 0000 	ldrb.w	r0, [r8, r0]
 80201f0:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80201f4:	900a      	str	r0, [sp, #40]	; 0x28
 80201f6:	0e00      	lsrs	r0, r0, #24
 80201f8:	9013      	str	r0, [sp, #76]	; 0x4c
 80201fa:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80201fe:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020202:	900f      	str	r0, [sp, #60]	; 0x3c
 8020204:	0e00      	lsrs	r0, r0, #24
 8020206:	9016      	str	r0, [sp, #88]	; 0x58
 8020208:	b292      	uxth	r2, r2
 802020a:	b289      	uxth	r1, r1
 802020c:	fb02 f901 	mul.w	r9, r2, r1
 8020210:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020214:	0112      	lsls	r2, r2, #4
 8020216:	eba2 0809 	sub.w	r8, r2, r9
 802021a:	b289      	uxth	r1, r1
 802021c:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020220:	9815      	ldr	r0, [sp, #84]	; 0x54
 8020222:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020224:	fa1f f888 	uxth.w	r8, r8
 8020228:	1a52      	subs	r2, r2, r1
 802022a:	b292      	uxth	r2, r2
 802022c:	fb08 f000 	mul.w	r0, r8, r0
 8020230:	fb02 000e 	mla	r0, r2, lr, r0
 8020234:	fb01 0004 	mla	r0, r1, r4, r0
 8020238:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802023a:	fb09 0004 	mla	r0, r9, r4, r0
 802023e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8020242:	2800      	cmp	r0, #0
 8020244:	f000 80fa 	beq.w	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020248:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802024c:	d01b      	beq.n	8020286 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802024e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020252:	fb0e fa0a 	mul.w	sl, lr, sl
 8020256:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802025a:	fb0e fe03 	mul.w	lr, lr, r3
 802025e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020262:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020266:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802026a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802026e:	4453      	add	r3, sl
 8020270:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020274:	0a1b      	lsrs	r3, r3, #8
 8020276:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802027a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802027e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020282:	ea43 030c 	orr.w	r3, r3, ip
 8020286:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020288:	2cff      	cmp	r4, #255	; 0xff
 802028a:	d021      	beq.n	80202d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802028c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802028e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020292:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020294:	fb04 fb0b 	mul.w	fp, r4, fp
 8020298:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802029a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802029e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80202a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80202a4:	fb04 fa0a 	mul.w	sl, r4, sl
 80202a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202ac:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80202b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80202b4:	44de      	add	lr, fp
 80202b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80202ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80202be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80202ca:	ea4e 040a 	orr.w	r4, lr, sl
 80202ce:	940e      	str	r4, [sp, #56]	; 0x38
 80202d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80202d2:	2cff      	cmp	r4, #255	; 0xff
 80202d4:	d021      	beq.n	802031a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80202d6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80202d8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80202dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80202de:	fb04 fb0b 	mul.w	fp, r4, fp
 80202e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80202e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80202e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80202ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80202ee:	fb04 fa0a 	mul.w	sl, r4, sl
 80202f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202f6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80202fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80202fe:	44de      	add	lr, fp
 8020300:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020304:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020308:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802030c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020310:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020314:	ea4e 040a 	orr.w	r4, lr, sl
 8020318:	940a      	str	r4, [sp, #40]	; 0x28
 802031a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802031c:	2cff      	cmp	r4, #255	; 0xff
 802031e:	d021      	beq.n	8020364 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020320:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020322:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020326:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020328:	fb04 fb0b 	mul.w	fp, r4, fp
 802032c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802032e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020332:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020334:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020338:	fb04 fa0a 	mul.w	sl, r4, sl
 802033c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020340:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020344:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020348:	44de      	add	lr, fp
 802034a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802034e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020352:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020356:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802035a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802035e:	ea4e 040a 	orr.w	r4, lr, sl
 8020362:	940f      	str	r4, [sp, #60]	; 0x3c
 8020364:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020366:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802036a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802036c:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020370:	fb08 fc0c 	mul.w	ip, r8, ip
 8020374:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020378:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802037c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802037e:	fb01 cc0e 	mla	ip, r1, lr, ip
 8020382:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020386:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020388:	fb09 cc0e 	mla	ip, r9, lr, ip
 802038c:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020390:	fb08 f80e 	mul.w	r8, r8, lr
 8020394:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020398:	fb02 8303 	mla	r3, r2, r3, r8
 802039c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802039e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80203a0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80203a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80203a6:	fb01 330a 	mla	r3, r1, sl, r3
 80203aa:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80203ae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80203b0:	fb09 3901 	mla	r9, r9, r1, r3
 80203b4:	4342      	muls	r2, r0
 80203b6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80203ba:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80203be:	883b      	ldrh	r3, [r7, #0]
 80203c0:	1c50      	adds	r0, r2, #1
 80203c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80203c6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80203ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80203ce:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80203d2:	1219      	asrs	r1, r3, #8
 80203d4:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80203d8:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80203dc:	b2c0      	uxtb	r0, r0
 80203de:	fb12 f204 	smulbb	r2, r2, r4
 80203e2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80203e6:	fb01 2100 	mla	r1, r1, r0, r2
 80203ea:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80203ee:	10da      	asrs	r2, r3, #3
 80203f0:	fa5f fc8c 	uxtb.w	ip, ip
 80203f4:	00db      	lsls	r3, r3, #3
 80203f6:	fb1c fc04 	smulbb	ip, ip, r4
 80203fa:	b2db      	uxtb	r3, r3
 80203fc:	b289      	uxth	r1, r1
 80203fe:	fb03 c300 	mla	r3, r3, r0, ip
 8020402:	fa1f fc83 	uxth.w	ip, r3
 8020406:	1c4b      	adds	r3, r1, #1
 8020408:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802040c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020410:	fb1e fe04 	smulbb	lr, lr, r4
 8020414:	f10c 0301 	add.w	r3, ip, #1
 8020418:	fb02 e200 	mla	r2, r2, r0, lr
 802041c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020420:	b292      	uxth	r2, r2
 8020422:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8020426:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802042a:	430b      	orrs	r3, r1
 802042c:	1c51      	adds	r1, r2, #1
 802042e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8020432:	0952      	lsrs	r2, r2, #5
 8020434:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020438:	4313      	orrs	r3, r2
 802043a:	803b      	strh	r3, [r7, #0]
 802043c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802043e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020440:	441a      	add	r2, r3
 8020442:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020444:	9229      	str	r2, [sp, #164]	; 0xa4
 8020446:	441d      	add	r5, r3
 8020448:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 802044a:	3b01      	subs	r3, #1
 802044c:	3702      	adds	r7, #2
 802044e:	931a      	str	r3, [sp, #104]	; 0x68
 8020450:	e694      	b.n	802017c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020452:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020454:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020456:	441c      	add	r4, r3
 8020458:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802045a:	9429      	str	r4, [sp, #164]	; 0xa4
 802045c:	441d      	add	r5, r3
 802045e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020460:	3b01      	subs	r3, #1
 8020462:	9309      	str	r3, [sp, #36]	; 0x24
 8020464:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020466:	3302      	adds	r3, #2
 8020468:	930c      	str	r3, [sp, #48]	; 0x30
 802046a:	e666      	b.n	802013a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802046c:	d024      	beq.n	80204b8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802046e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020470:	982b      	ldr	r0, [sp, #172]	; 0xac
 8020472:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020474:	3b01      	subs	r3, #1
 8020476:	fb00 4003 	mla	r0, r0, r3, r4
 802047a:	1400      	asrs	r0, r0, #16
 802047c:	f53f ae7b 	bmi.w	8020176 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020480:	3901      	subs	r1, #1
 8020482:	4288      	cmp	r0, r1
 8020484:	f6bf ae77 	bge.w	8020176 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020488:	992c      	ldr	r1, [sp, #176]	; 0xb0
 802048a:	fb01 5303 	mla	r3, r1, r3, r5
 802048e:	141b      	asrs	r3, r3, #16
 8020490:	f53f ae71 	bmi.w	8020176 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020494:	3a01      	subs	r2, #1
 8020496:	4293      	cmp	r3, r2
 8020498:	f6bf ae6d 	bge.w	8020176 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802049c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80204a0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80204a4:	f1bb 0f00 	cmp.w	fp, #0
 80204a8:	dc70      	bgt.n	802058c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80204aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80204ac:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80204b0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80204b2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80204b6:	930c      	str	r3, [sp, #48]	; 0x30
 80204b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80204ba:	2b00      	cmp	r3, #0
 80204bc:	f340 81be 	ble.w	802083c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80204c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80204c4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80204c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80204cc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80204ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80204d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80204d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80204da:	eef0 6a62 	vmov.f32	s13, s5
 80204de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204ea:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80204ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204f2:	eef0 6a43 	vmov.f32	s13, s6
 80204f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204fa:	ee12 2a90 	vmov	r2, s5
 80204fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020502:	fb92 f3f3 	sdiv	r3, r2, r3
 8020506:	ee13 2a10 	vmov	r2, s6
 802050a:	932b      	str	r3, [sp, #172]	; 0xac
 802050c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802050e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020512:	932c      	str	r3, [sp, #176]	; 0xb0
 8020514:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020516:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020518:	3b01      	subs	r3, #1
 802051a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802051e:	9319      	str	r3, [sp, #100]	; 0x64
 8020520:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020522:	bf08      	it	eq
 8020524:	4613      	moveq	r3, r2
 8020526:	ee16 5a90 	vmov	r5, s13
 802052a:	9309      	str	r3, [sp, #36]	; 0x24
 802052c:	eeb0 3a67 	vmov.f32	s6, s15
 8020530:	eef0 2a47 	vmov.f32	s5, s14
 8020534:	e5f3      	b.n	802011e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020536:	2900      	cmp	r1, #0
 8020538:	f43f ae66 	beq.w	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802053c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020540:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020544:	900a      	str	r0, [sp, #40]	; 0x28
 8020546:	0e00      	lsrs	r0, r0, #24
 8020548:	9013      	str	r0, [sp, #76]	; 0x4c
 802054a:	e65d      	b.n	8020208 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 802054c:	f113 0801 	adds.w	r8, r3, #1
 8020550:	f53f af74 	bmi.w	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020554:	4540      	cmp	r0, r8
 8020556:	f6ff af71 	blt.w	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802055a:	f11c 0801 	adds.w	r8, ip, #1
 802055e:	f53f af6d 	bmi.w	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020562:	45c6      	cmp	lr, r8
 8020564:	f6ff af6a 	blt.w	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020568:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 802056a:	9302      	str	r3, [sp, #8]
 802056c:	b200      	sxth	r0, r0
 802056e:	fa0f f38e 	sxth.w	r3, lr
 8020572:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020576:	e9cd c203 	strd	ip, r2, [sp, #12]
 802057a:	9301      	str	r3, [sp, #4]
 802057c:	9000      	str	r0, [sp, #0]
 802057e:	4633      	mov	r3, r6
 8020580:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8020582:	981d      	ldr	r0, [sp, #116]	; 0x74
 8020584:	4639      	mov	r1, r7
 8020586:	f7ff fc62 	bl	801fe4e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802058a:	e757      	b.n	802043c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802058c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802058e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020590:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020594:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020596:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802059a:	1427      	asrs	r7, r4, #16
 802059c:	142b      	asrs	r3, r5, #16
 802059e:	fb01 7303 	mla	r3, r1, r3, r7
 80205a2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80205a4:	18e7      	adds	r7, r4, r3
 80205a6:	5ce3      	ldrb	r3, [r4, r3]
 80205a8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80205ac:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80205b0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80205b4:	2a00      	cmp	r2, #0
 80205b6:	f000 8137 	beq.w	8020828 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80205ba:	f897 e001 	ldrb.w	lr, [r7, #1]
 80205be:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80205c2:	9410      	str	r4, [sp, #64]	; 0x40
 80205c4:	0e24      	lsrs	r4, r4, #24
 80205c6:	9417      	str	r4, [sp, #92]	; 0x5c
 80205c8:	b170      	cbz	r0, 80205e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80205ca:	eb07 0e01 	add.w	lr, r7, r1
 80205ce:	5c79      	ldrb	r1, [r7, r1]
 80205d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80205d4:	910b      	str	r1, [sp, #44]	; 0x2c
 80205d6:	0e09      	lsrs	r1, r1, #24
 80205d8:	9114      	str	r1, [sp, #80]	; 0x50
 80205da:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80205de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80205e2:	9111      	str	r1, [sp, #68]	; 0x44
 80205e4:	0e09      	lsrs	r1, r1, #24
 80205e6:	9118      	str	r1, [sp, #96]	; 0x60
 80205e8:	b292      	uxth	r2, r2
 80205ea:	b280      	uxth	r0, r0
 80205ec:	fb02 f800 	mul.w	r8, r2, r0
 80205f0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80205f4:	0112      	lsls	r2, r2, #4
 80205f6:	eba2 0e08 	sub.w	lr, r2, r8
 80205fa:	b280      	uxth	r0, r0
 80205fc:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020600:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8020602:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020604:	fa1f fe8e 	uxth.w	lr, lr
 8020608:	1a12      	subs	r2, r2, r0
 802060a:	b292      	uxth	r2, r2
 802060c:	fb0e f101 	mul.w	r1, lr, r1
 8020610:	fb02 110c 	mla	r1, r2, ip, r1
 8020614:	fb00 1104 	mla	r1, r0, r4, r1
 8020618:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802061a:	fb08 1104 	mla	r1, r8, r4, r1
 802061e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020622:	2900      	cmp	r1, #0
 8020624:	f000 80f5 	beq.w	8020812 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020628:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802062c:	d019      	beq.n	8020662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802062e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020632:	fb0c fa0a 	mul.w	sl, ip, sl
 8020636:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802063a:	fb0c fc03 	mul.w	ip, ip, r3
 802063e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020642:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020646:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802064a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802064e:	4453      	add	r3, sl
 8020650:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020654:	0a1b      	lsrs	r3, r3, #8
 8020656:	0a3f      	lsrs	r7, r7, #8
 8020658:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802065c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020660:	433b      	orrs	r3, r7
 8020662:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020664:	2cff      	cmp	r4, #255	; 0xff
 8020666:	d020      	beq.n	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020668:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802066a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802066e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020670:	4367      	muls	r7, r4
 8020672:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020674:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020678:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802067a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802067e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020682:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020686:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802068a:	44bc      	add	ip, r7
 802068c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020690:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020698:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802069c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206a4:	ea4c 040a 	orr.w	r4, ip, sl
 80206a8:	9410      	str	r4, [sp, #64]	; 0x40
 80206aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80206ac:	2cff      	cmp	r4, #255	; 0xff
 80206ae:	d020      	beq.n	80206f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80206b0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80206b6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80206b8:	4367      	muls	r7, r4
 80206ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80206c0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80206c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80206c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80206ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80206ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206d2:	44bc      	add	ip, r7
 80206d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80206d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80206dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206ec:	ea4c 040a 	orr.w	r4, ip, sl
 80206f0:	940b      	str	r4, [sp, #44]	; 0x2c
 80206f2:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80206f4:	2cff      	cmp	r4, #255	; 0xff
 80206f6:	d020      	beq.n	802073a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80206f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80206fa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80206fe:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020700:	4367      	muls	r7, r4
 8020702:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020704:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020708:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802070a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802070e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020712:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020716:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802071a:	44bc      	add	ip, r7
 802071c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020720:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020728:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802072c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020730:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020734:	ea4c 040a 	orr.w	r4, ip, sl
 8020738:	9411      	str	r4, [sp, #68]	; 0x44
 802073a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802073c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020740:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020742:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8020746:	fb0e f707 	mul.w	r7, lr, r7
 802074a:	fb02 770c 	mla	r7, r2, ip, r7
 802074e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020752:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020754:	fb00 770c 	mla	r7, r0, ip, r7
 8020758:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802075c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802075e:	fb08 770c 	mla	r7, r8, ip, r7
 8020762:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8020766:	fb0e fe0c 	mul.w	lr, lr, ip
 802076a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802076e:	fb02 e303 	mla	r3, r2, r3, lr
 8020772:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8020774:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020776:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802077a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802077c:	fb00 330a 	mla	r3, r0, sl, r3
 8020780:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8020784:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020788:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802078a:	f8b9 0000 	ldrh.w	r0, [r9]
 802078e:	434b      	muls	r3, r1
 8020790:	0a3f      	lsrs	r7, r7, #8
 8020792:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020796:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802079a:	1c59      	adds	r1, r3, #1
 802079c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80207a0:	ea47 070c 	orr.w	r7, r7, ip
 80207a4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80207a8:	1202      	asrs	r2, r0, #8
 80207aa:	0c3b      	lsrs	r3, r7, #16
 80207ac:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80207b0:	b2c9      	uxtb	r1, r1
 80207b2:	fb13 f304 	smulbb	r3, r3, r4
 80207b6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80207ba:	fb02 3201 	mla	r2, r2, r1, r3
 80207be:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80207c2:	10c3      	asrs	r3, r0, #3
 80207c4:	b2ff      	uxtb	r7, r7
 80207c6:	00c0      	lsls	r0, r0, #3
 80207c8:	b292      	uxth	r2, r2
 80207ca:	fb1c fc04 	smulbb	ip, ip, r4
 80207ce:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80207d2:	b2c0      	uxtb	r0, r0
 80207d4:	fb17 f704 	smulbb	r7, r7, r4
 80207d8:	fb03 c301 	mla	r3, r3, r1, ip
 80207dc:	fb00 7001 	mla	r0, r0, r1, r7
 80207e0:	f102 0c01 	add.w	ip, r2, #1
 80207e4:	b280      	uxth	r0, r0
 80207e6:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80207ea:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80207ee:	1c42      	adds	r2, r0, #1
 80207f0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80207f4:	b29b      	uxth	r3, r3
 80207f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80207fa:	ea42 020c 	orr.w	r2, r2, ip
 80207fe:	f103 0c01 	add.w	ip, r3, #1
 8020802:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020806:	095b      	lsrs	r3, r3, #5
 8020808:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802080c:	431a      	orrs	r2, r3
 802080e:	f8a9 2000 	strh.w	r2, [r9]
 8020812:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020814:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020816:	441a      	add	r2, r3
 8020818:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802081a:	9229      	str	r2, [sp, #164]	; 0xa4
 802081c:	f109 0902 	add.w	r9, r9, #2
 8020820:	441d      	add	r5, r3
 8020822:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020826:	e63d      	b.n	80204a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020828:	2800      	cmp	r0, #0
 802082a:	f43f aedd 	beq.w	80205e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802082e:	5c79      	ldrb	r1, [r7, r1]
 8020830:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020834:	910b      	str	r1, [sp, #44]	; 0x2c
 8020836:	0e09      	lsrs	r1, r1, #24
 8020838:	9114      	str	r1, [sp, #80]	; 0x50
 802083a:	e6d5      	b.n	80205e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802083c:	b01f      	add	sp, #124	; 0x7c
 802083e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020842 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020846:	b089      	sub	sp, #36	; 0x24
 8020848:	9101      	str	r1, [sp, #4]
 802084a:	9801      	ldr	r0, [sp, #4]
 802084c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020850:	8800      	ldrh	r0, [r0, #0]
 8020852:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020856:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 802085a:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 802085e:	1206      	asrs	r6, r0, #8
 8020860:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020864:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020868:	9602      	str	r6, [sp, #8]
 802086a:	10c6      	asrs	r6, r0, #3
 802086c:	00c0      	lsls	r0, r0, #3
 802086e:	b2c0      	uxtb	r0, r0
 8020870:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020874:	9004      	str	r0, [sp, #16]
 8020876:	2f00      	cmp	r7, #0
 8020878:	fb07 100c 	mla	r0, r7, ip, r1
 802087c:	9603      	str	r6, [sp, #12]
 802087e:	eb02 0e00 	add.w	lr, r2, r0
 8020882:	f2c0 810a 	blt.w	8020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020886:	45b8      	cmp	r8, r7
 8020888:	f340 8107 	ble.w	8020a9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802088c:	2900      	cmp	r1, #0
 802088e:	f2c0 8102 	blt.w	8020a96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020892:	458c      	cmp	ip, r1
 8020894:	f340 80ff 	ble.w	8020a96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020898:	5c12      	ldrb	r2, [r2, r0]
 802089a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802089e:	1c4a      	adds	r2, r1, #1
 80208a0:	f100 80fe 	bmi.w	8020aa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80208a4:	4594      	cmp	ip, r2
 80208a6:	f340 80fb 	ble.w	8020aa0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80208aa:	2d00      	cmp	r5, #0
 80208ac:	f000 80fa 	beq.w	8020aa4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80208b0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80208b4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80208b8:	3701      	adds	r7, #1
 80208ba:	f100 80f7 	bmi.w	8020aac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80208be:	45b8      	cmp	r8, r7
 80208c0:	f340 80f4 	ble.w	8020aac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80208c4:	2c00      	cmp	r4, #0
 80208c6:	f000 80f4 	beq.w	8020ab2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80208ca:	2900      	cmp	r1, #0
 80208cc:	eb0e 020c 	add.w	r2, lr, ip
 80208d0:	f2c0 80ea 	blt.w	8020aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80208d4:	458c      	cmp	ip, r1
 80208d6:	f340 80e7 	ble.w	8020aa8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80208da:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80208de:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80208e2:	3101      	adds	r1, #1
 80208e4:	f100 80e8 	bmi.w	8020ab8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208e8:	458c      	cmp	ip, r1
 80208ea:	f340 80e5 	ble.w	8020ab8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208ee:	2d00      	cmp	r5, #0
 80208f0:	f000 80e4 	beq.w	8020abc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80208f4:	7852      	ldrb	r2, [r2, #1]
 80208f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80208fa:	0e0b      	lsrs	r3, r1, #24
 80208fc:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020900:	9300      	str	r3, [sp, #0]
 8020902:	b2a4      	uxth	r4, r4
 8020904:	b2ab      	uxth	r3, r5
 8020906:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 802090a:	fb03 f904 	mul.w	r9, r3, r4
 802090e:	fb0a f505 	mul.w	r5, sl, r5
 8020912:	011b      	lsls	r3, r3, #4
 8020914:	eba3 0e09 	sub.w	lr, r3, r9
 8020918:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 802091c:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020920:	0a28      	lsrs	r0, r5, #8
 8020922:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020926:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 802092a:	4405      	add	r5, r0
 802092c:	0a2d      	lsrs	r5, r5, #8
 802092e:	fb0a f303 	mul.w	r3, sl, r3
 8020932:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020936:	9005      	str	r0, [sp, #20]
 8020938:	f503 7080 	add.w	r0, r3, #256	; 0x100
 802093c:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020940:	0a1b      	lsrs	r3, r3, #8
 8020942:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020946:	9306      	str	r3, [sp, #24]
 8020948:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 802094c:	fb0b f303 	mul.w	r3, fp, r3
 8020950:	0a1d      	lsrs	r5, r3, #8
 8020952:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020956:	ea4f 6817 	mov.w	r8, r7, lsr #24
 802095a:	fb0b f606 	mul.w	r6, fp, r6
 802095e:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020962:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020966:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802096a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802096e:	fb08 f707 	mul.w	r7, r8, r7
 8020972:	441d      	add	r5, r3
 8020974:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020978:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 802097c:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020980:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020984:	fb08 fc0c 	mul.w	ip, r8, ip
 8020988:	0a1b      	lsrs	r3, r3, #8
 802098a:	9307      	str	r3, [sp, #28]
 802098c:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020990:	0e0b      	lsrs	r3, r1, #24
 8020992:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020996:	435f      	muls	r7, r3
 8020998:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802099c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80209a0:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80209a4:	4460      	add	r0, ip
 80209a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80209aa:	b2a4      	uxth	r4, r4
 80209ac:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80209b0:	0a2d      	lsrs	r5, r5, #8
 80209b2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80209b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80209ba:	fa1f fe8e 	uxth.w	lr, lr
 80209be:	4359      	muls	r1, r3
 80209c0:	1b12      	subs	r2, r2, r4
 80209c2:	9b05      	ldr	r3, [sp, #20]
 80209c4:	44bc      	add	ip, r7
 80209c6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80209ca:	b292      	uxth	r2, r2
 80209cc:	fb05 f50e 	mul.w	r5, r5, lr
 80209d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209d4:	fb03 5502 	mla	r5, r3, r2, r5
 80209d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80209dc:	9b06      	ldr	r3, [sp, #24]
 80209de:	f501 7780 	add.w	r7, r1, #256	; 0x100
 80209e2:	0a36      	lsrs	r6, r6, #8
 80209e4:	0a00      	lsrs	r0, r0, #8
 80209e6:	fb0c 5509 	mla	r5, ip, r9, r5
 80209ea:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80209ee:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80209f2:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80209f6:	fb00 5504 	mla	r5, r0, r4, r5
 80209fa:	fb0e f606 	mul.w	r6, lr, r6
 80209fe:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020a02:	0a09      	lsrs	r1, r1, #8
 8020a04:	9b07      	ldr	r3, [sp, #28]
 8020a06:	fb02 6000 	mla	r0, r2, r0, r6
 8020a0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020a0e:	fb09 0001 	mla	r0, r9, r1, r0
 8020a12:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020a16:	fb0e fe0b 	mul.w	lr, lr, fp
 8020a1a:	fb04 0003 	mla	r0, r4, r3, r0
 8020a1e:	fb02 e20a 	mla	r2, r2, sl, lr
 8020a22:	9b00      	ldr	r3, [sp, #0]
 8020a24:	fb04 2408 	mla	r4, r4, r8, r2
 8020a28:	fb09 4903 	mla	r9, r9, r3, r4
 8020a2c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020a30:	9b02      	ldr	r3, [sp, #8]
 8020a32:	9a04      	ldr	r2, [sp, #16]
 8020a34:	fa5f f989 	uxtb.w	r9, r9
 8020a38:	fb03 f109 	mul.w	r1, r3, r9
 8020a3c:	9b03      	ldr	r3, [sp, #12]
 8020a3e:	0a2d      	lsrs	r5, r5, #8
 8020a40:	0a00      	lsrs	r0, r0, #8
 8020a42:	fb03 f309 	mul.w	r3, r3, r9
 8020a46:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020a4a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020a4e:	4305      	orrs	r5, r0
 8020a50:	fb02 f909 	mul.w	r9, r2, r9
 8020a54:	1c58      	adds	r0, r3, #1
 8020a56:	1c4a      	adds	r2, r1, #1
 8020a58:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020a5c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020a60:	0a2b      	lsrs	r3, r5, #8
 8020a62:	0c2a      	lsrs	r2, r5, #16
 8020a64:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020a68:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020a6c:	00db      	lsls	r3, r3, #3
 8020a6e:	0212      	lsls	r2, r2, #8
 8020a70:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020a74:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a78:	4313      	orrs	r3, r2
 8020a7a:	f109 0201 	add.w	r2, r9, #1
 8020a7e:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020a82:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020a86:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020a8a:	431d      	orrs	r5, r3
 8020a8c:	9b01      	ldr	r3, [sp, #4]
 8020a8e:	801d      	strh	r5, [r3, #0]
 8020a90:	b009      	add	sp, #36	; 0x24
 8020a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a96:	2000      	movs	r0, #0
 8020a98:	e701      	b.n	802089e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020a9a:	2600      	movs	r6, #0
 8020a9c:	4630      	mov	r0, r6
 8020a9e:	e70b      	b.n	80208b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020aa0:	2600      	movs	r6, #0
 8020aa2:	e709      	b.n	80208b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020aa4:	462e      	mov	r6, r5
 8020aa6:	e707      	b.n	80208b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020aa8:	2700      	movs	r7, #0
 8020aaa:	e71a      	b.n	80208e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020aac:	2100      	movs	r1, #0
 8020aae:	460f      	mov	r7, r1
 8020ab0:	e723      	b.n	80208fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020ab2:	4621      	mov	r1, r4
 8020ab4:	4627      	mov	r7, r4
 8020ab6:	e720      	b.n	80208fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020ab8:	2100      	movs	r1, #0
 8020aba:	e71e      	b.n	80208fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020abc:	4629      	mov	r1, r5
 8020abe:	e71c      	b.n	80208fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020ac0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020ac4:	b09b      	sub	sp, #108	; 0x6c
 8020ac6:	9218      	str	r2, [sp, #96]	; 0x60
 8020ac8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020aca:	9116      	str	r1, [sp, #88]	; 0x58
 8020acc:	9307      	str	r3, [sp, #28]
 8020ace:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020ad2:	9019      	str	r0, [sp, #100]	; 0x64
 8020ad4:	6850      	ldr	r0, [r2, #4]
 8020ad6:	6812      	ldr	r2, [r2, #0]
 8020ad8:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020ada:	fb00 1303 	mla	r3, r0, r3, r1
 8020ade:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020ae2:	930a      	str	r3, [sp, #40]	; 0x28
 8020ae4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020ae6:	681b      	ldr	r3, [r3, #0]
 8020ae8:	930f      	str	r3, [sp, #60]	; 0x3c
 8020aea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020aec:	685e      	ldr	r6, [r3, #4]
 8020aee:	3604      	adds	r6, #4
 8020af0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020af2:	2b00      	cmp	r3, #0
 8020af4:	dc03      	bgt.n	8020afe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020af6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020af8:	2b00      	cmp	r3, #0
 8020afa:	f340 8373 	ble.w	80211e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020afe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020b08:	1e48      	subs	r0, r1, #1
 8020b0a:	1e57      	subs	r7, r2, #1
 8020b0c:	9b07      	ldr	r3, [sp, #28]
 8020b0e:	2b00      	cmp	r3, #0
 8020b10:	f340 8190 	ble.w	8020e34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020b14:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020b16:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020b1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020b1e:	d406      	bmi.n	8020b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b20:	4584      	cmp	ip, r0
 8020b22:	da04      	bge.n	8020b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b24:	2b00      	cmp	r3, #0
 8020b26:	db02      	blt.n	8020b2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b28:	42bb      	cmp	r3, r7
 8020b2a:	f2c0 8184 	blt.w	8020e36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020b2e:	f11c 0c01 	adds.w	ip, ip, #1
 8020b32:	f100 8172 	bmi.w	8020e1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b36:	4561      	cmp	r1, ip
 8020b38:	f2c0 816f 	blt.w	8020e1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b3c:	3301      	adds	r3, #1
 8020b3e:	f100 816c 	bmi.w	8020e1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b42:	429a      	cmp	r2, r3
 8020b44:	f2c0 8169 	blt.w	8020e1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b48:	9b07      	ldr	r3, [sp, #28]
 8020b4a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020b4c:	9317      	str	r3, [sp, #92]	; 0x5c
 8020b4e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020b50:	2b00      	cmp	r3, #0
 8020b52:	f340 818e 	ble.w	8020e72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020b56:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020b58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020b5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b5e:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020b62:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020b64:	141b      	asrs	r3, r3, #16
 8020b66:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020b6a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020b6e:	f100 81d1 	bmi.w	8020f14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b72:	f101 38ff 	add.w	r8, r1, #4294967295
 8020b76:	4543      	cmp	r3, r8
 8020b78:	f280 81cc 	bge.w	8020f14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b7c:	f1bc 0f00 	cmp.w	ip, #0
 8020b80:	f2c0 81c8 	blt.w	8020f14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b84:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020b88:	45c4      	cmp	ip, r8
 8020b8a:	f280 81c3 	bge.w	8020f14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b8e:	b209      	sxth	r1, r1
 8020b90:	fb0c 3301 	mla	r3, ip, r1, r3
 8020b94:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020b96:	eb04 0803 	add.w	r8, r4, r3
 8020b9a:	5ce3      	ldrb	r3, [r4, r3]
 8020b9c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020ba0:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020ba4:	2a00      	cmp	r2, #0
 8020ba6:	f000 81aa 	beq.w	8020efe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020baa:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020bae:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020bb2:	940b      	str	r4, [sp, #44]	; 0x2c
 8020bb4:	0e24      	lsrs	r4, r4, #24
 8020bb6:	9412      	str	r4, [sp, #72]	; 0x48
 8020bb8:	b178      	cbz	r0, 8020bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020bba:	eb08 0c01 	add.w	ip, r8, r1
 8020bbe:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020bc2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020bc6:	9108      	str	r1, [sp, #32]
 8020bc8:	0e09      	lsrs	r1, r1, #24
 8020bca:	9110      	str	r1, [sp, #64]	; 0x40
 8020bcc:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020bd0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020bd4:	910c      	str	r1, [sp, #48]	; 0x30
 8020bd6:	0e09      	lsrs	r1, r1, #24
 8020bd8:	9113      	str	r1, [sp, #76]	; 0x4c
 8020bda:	b292      	uxth	r2, r2
 8020bdc:	b280      	uxth	r0, r0
 8020bde:	fb02 f900 	mul.w	r9, r2, r0
 8020be2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020be6:	0112      	lsls	r2, r2, #4
 8020be8:	eba2 0809 	sub.w	r8, r2, r9
 8020bec:	b280      	uxth	r0, r0
 8020bee:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020bf2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020bf4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020bf6:	fa1f f888 	uxth.w	r8, r8
 8020bfa:	1a12      	subs	r2, r2, r0
 8020bfc:	b292      	uxth	r2, r2
 8020bfe:	fb08 f101 	mul.w	r1, r8, r1
 8020c02:	fb02 110e 	mla	r1, r2, lr, r1
 8020c06:	fb00 1104 	mla	r1, r0, r4, r1
 8020c0a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020c0c:	fb09 1104 	mla	r1, r9, r4, r1
 8020c10:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020c14:	2900      	cmp	r1, #0
 8020c16:	f000 80f5 	beq.w	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c1a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020c1e:	d01b      	beq.n	8020c58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020c20:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020c24:	fb0e fa0a 	mul.w	sl, lr, sl
 8020c28:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c2c:	fb0e fe03 	mul.w	lr, lr, r3
 8020c30:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020c34:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020c38:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020c3c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020c40:	4453      	add	r3, sl
 8020c42:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020c46:	0a1b      	lsrs	r3, r3, #8
 8020c48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c4c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020c50:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020c54:	ea43 030c 	orr.w	r3, r3, ip
 8020c58:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c5a:	2cff      	cmp	r4, #255	; 0xff
 8020c5c:	d021      	beq.n	8020ca2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020c5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c60:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c64:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c66:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c6c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c70:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c72:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c76:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c7e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c82:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c86:	44de      	add	lr, fp
 8020c88:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c94:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c98:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c9c:	ea4e 040a 	orr.w	r4, lr, sl
 8020ca0:	940b      	str	r4, [sp, #44]	; 0x2c
 8020ca2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020ca4:	2cff      	cmp	r4, #255	; 0xff
 8020ca6:	d021      	beq.n	8020cec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020ca8:	9c08      	ldr	r4, [sp, #32]
 8020caa:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020cae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020cb0:	fb04 fb0b 	mul.w	fp, r4, fp
 8020cb4:	9c08      	ldr	r4, [sp, #32]
 8020cb6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020cba:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020cbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020cc0:	fb04 fa0a 	mul.w	sl, r4, sl
 8020cc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020cc8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020ccc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020cd0:	44de      	add	lr, fp
 8020cd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020cd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020cda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020cde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ce2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ce6:	ea4e 040a 	orr.w	r4, lr, sl
 8020cea:	9408      	str	r4, [sp, #32]
 8020cec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020cee:	2cff      	cmp	r4, #255	; 0xff
 8020cf0:	d021      	beq.n	8020d36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020cf2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020cf4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020cf8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020cfa:	fb04 fb0b 	mul.w	fp, r4, fp
 8020cfe:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020d00:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020d04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020d06:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020d0a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020d0e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d12:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020d16:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020d1a:	44de      	add	lr, fp
 8020d1c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020d20:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020d2c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020d30:	ea4e 040a 	orr.w	r4, lr, sl
 8020d34:	940c      	str	r4, [sp, #48]	; 0x30
 8020d36:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d38:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020d3c:	9c08      	ldr	r4, [sp, #32]
 8020d3e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020d42:	fb08 fc0c 	mul.w	ip, r8, ip
 8020d46:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020d4a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020d4e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020d50:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020d54:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020d58:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d5a:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020d5e:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020d62:	fb08 f80e 	mul.w	r8, r8, lr
 8020d66:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020d6a:	fb02 8303 	mla	r3, r2, r3, r8
 8020d6e:	9a08      	ldr	r2, [sp, #32]
 8020d70:	f8b7 8000 	ldrh.w	r8, [r7]
 8020d74:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020d78:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d7a:	fb00 330a 	mla	r3, r0, sl, r3
 8020d7e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020d82:	fb09 3900 	mla	r9, r9, r0, r3
 8020d86:	43c9      	mvns	r1, r1
 8020d88:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020d8c:	fa5f fe81 	uxtb.w	lr, r1
 8020d90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d94:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020d98:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020d9c:	fb02 f20e 	mul.w	r2, r2, lr
 8020da0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020da4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020da8:	ea4c 0c09 	orr.w	ip, ip, r9
 8020dac:	1c53      	adds	r3, r2, #1
 8020dae:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020db2:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020db6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020dba:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020dbe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020dc2:	4a63      	ldr	r2, [pc, #396]	; (8020f50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020dc4:	fb00 f00e 	mul.w	r0, r0, lr
 8020dc8:	b2db      	uxtb	r3, r3
 8020dca:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020dce:	1c43      	adds	r3, r0, #1
 8020dd0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020dd4:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020dd8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020ddc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020de0:	b2c9      	uxtb	r1, r1
 8020de2:	00db      	lsls	r3, r3, #3
 8020de4:	fb01 f10e 	mul.w	r1, r1, lr
 8020de8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020dec:	4313      	orrs	r3, r2
 8020dee:	1c4a      	adds	r2, r1, #1
 8020df0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020df4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020df8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020dfc:	ea4c 0c03 	orr.w	ip, ip, r3
 8020e00:	f8a7 c000 	strh.w	ip, [r7]
 8020e04:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020e06:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020e08:	441a      	add	r2, r3
 8020e0a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020e0c:	9225      	str	r2, [sp, #148]	; 0x94
 8020e0e:	441d      	add	r5, r3
 8020e10:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020e12:	3b01      	subs	r3, #1
 8020e14:	3702      	adds	r7, #2
 8020e16:	9317      	str	r3, [sp, #92]	; 0x5c
 8020e18:	e699      	b.n	8020b4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020e1a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020e1c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020e1e:	441c      	add	r4, r3
 8020e20:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020e22:	9425      	str	r4, [sp, #148]	; 0x94
 8020e24:	441d      	add	r5, r3
 8020e26:	9b07      	ldr	r3, [sp, #28]
 8020e28:	3b01      	subs	r3, #1
 8020e2a:	9307      	str	r3, [sp, #28]
 8020e2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e2e:	3302      	adds	r3, #2
 8020e30:	930a      	str	r3, [sp, #40]	; 0x28
 8020e32:	e66b      	b.n	8020b0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020e34:	d024      	beq.n	8020e80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020e36:	9b07      	ldr	r3, [sp, #28]
 8020e38:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020e3a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020e3c:	3b01      	subs	r3, #1
 8020e3e:	fb00 4003 	mla	r0, r0, r3, r4
 8020e42:	1400      	asrs	r0, r0, #16
 8020e44:	f53f ae80 	bmi.w	8020b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e48:	3901      	subs	r1, #1
 8020e4a:	4288      	cmp	r0, r1
 8020e4c:	f6bf ae7c 	bge.w	8020b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e50:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020e52:	fb01 5303 	mla	r3, r1, r3, r5
 8020e56:	141b      	asrs	r3, r3, #16
 8020e58:	f53f ae76 	bmi.w	8020b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e5c:	3a01      	subs	r2, #1
 8020e5e:	4293      	cmp	r3, r2
 8020e60:	f6bf ae72 	bge.w	8020b48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e64:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020e68:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020e6c:	f1bb 0f00 	cmp.w	fp, #0
 8020e70:	dc70      	bgt.n	8020f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020e72:	9b07      	ldr	r3, [sp, #28]
 8020e74:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020e78:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e7a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020e7e:	930a      	str	r3, [sp, #40]	; 0x28
 8020e80:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e82:	2b00      	cmp	r3, #0
 8020e84:	f340 81ae 	ble.w	80211e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020e88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020e90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020e94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020ea2:	eef0 6a62 	vmov.f32	s13, s5
 8020ea6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020eaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020eae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020eb2:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020eb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020eba:	eef0 6a43 	vmov.f32	s13, s6
 8020ebe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020ec2:	ee12 2a90 	vmov	r2, s5
 8020ec6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020eca:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ece:	ee13 2a10 	vmov	r2, s6
 8020ed2:	9327      	str	r3, [sp, #156]	; 0x9c
 8020ed4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ed6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eda:	9328      	str	r3, [sp, #160]	; 0xa0
 8020edc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020ede:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020ee0:	3b01      	subs	r3, #1
 8020ee2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ee6:	9316      	str	r3, [sp, #88]	; 0x58
 8020ee8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020eea:	bf08      	it	eq
 8020eec:	4613      	moveq	r3, r2
 8020eee:	ee16 5a90 	vmov	r5, s13
 8020ef2:	9307      	str	r3, [sp, #28]
 8020ef4:	eeb0 3a67 	vmov.f32	s6, s15
 8020ef8:	eef0 2a47 	vmov.f32	s5, s14
 8020efc:	e5f8      	b.n	8020af0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020efe:	2800      	cmp	r0, #0
 8020f00:	f43f ae6b 	beq.w	8020bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020f04:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020f08:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f0c:	9108      	str	r1, [sp, #32]
 8020f0e:	0e09      	lsrs	r1, r1, #24
 8020f10:	9110      	str	r1, [sp, #64]	; 0x40
 8020f12:	e662      	b.n	8020bda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020f14:	f113 0801 	adds.w	r8, r3, #1
 8020f18:	f53f af74 	bmi.w	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f1c:	4541      	cmp	r1, r8
 8020f1e:	f6ff af71 	blt.w	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f22:	f11c 0801 	adds.w	r8, ip, #1
 8020f26:	f53f af6d 	bmi.w	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f2a:	45c6      	cmp	lr, r8
 8020f2c:	f6ff af6a 	blt.w	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f30:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020f34:	b209      	sxth	r1, r1
 8020f36:	fa0f f38e 	sxth.w	r3, lr
 8020f3a:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020f3e:	9301      	str	r3, [sp, #4]
 8020f40:	9100      	str	r1, [sp, #0]
 8020f42:	4633      	mov	r3, r6
 8020f44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020f46:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020f48:	4639      	mov	r1, r7
 8020f4a:	f7ff fc7a 	bl	8020842 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020f4e:	e759      	b.n	8020e04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f50:	fffff800 	.word	0xfffff800
 8020f54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020f56:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020f58:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020f5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020f5e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f62:	1427      	asrs	r7, r4, #16
 8020f64:	142b      	asrs	r3, r5, #16
 8020f66:	fb01 7303 	mla	r3, r1, r3, r7
 8020f6a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020f6c:	18e7      	adds	r7, r4, r3
 8020f6e:	5ce3      	ldrb	r3, [r4, r3]
 8020f70:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020f74:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020f78:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020f7c:	2a00      	cmp	r2, #0
 8020f7e:	f000 8127 	beq.w	80211d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020f82:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020f86:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020f8a:	940d      	str	r4, [sp, #52]	; 0x34
 8020f8c:	0e24      	lsrs	r4, r4, #24
 8020f8e:	9414      	str	r4, [sp, #80]	; 0x50
 8020f90:	b170      	cbz	r0, 8020fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f92:	eb07 0e01 	add.w	lr, r7, r1
 8020f96:	5c79      	ldrb	r1, [r7, r1]
 8020f98:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f9c:	9109      	str	r1, [sp, #36]	; 0x24
 8020f9e:	0e09      	lsrs	r1, r1, #24
 8020fa0:	9111      	str	r1, [sp, #68]	; 0x44
 8020fa2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020fa6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020faa:	910e      	str	r1, [sp, #56]	; 0x38
 8020fac:	0e09      	lsrs	r1, r1, #24
 8020fae:	9115      	str	r1, [sp, #84]	; 0x54
 8020fb0:	b292      	uxth	r2, r2
 8020fb2:	b280      	uxth	r0, r0
 8020fb4:	fb02 f800 	mul.w	r8, r2, r0
 8020fb8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020fbc:	0112      	lsls	r2, r2, #4
 8020fbe:	eba2 0e08 	sub.w	lr, r2, r8
 8020fc2:	b280      	uxth	r0, r0
 8020fc4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020fc8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020fca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020fcc:	fa1f fe8e 	uxth.w	lr, lr
 8020fd0:	1a09      	subs	r1, r1, r0
 8020fd2:	b289      	uxth	r1, r1
 8020fd4:	fb0e f202 	mul.w	r2, lr, r2
 8020fd8:	fb01 220c 	mla	r2, r1, ip, r2
 8020fdc:	fb00 2204 	mla	r2, r0, r4, r2
 8020fe0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020fe2:	fb08 2204 	mla	r2, r8, r4, r2
 8020fe6:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020fea:	2a00      	cmp	r2, #0
 8020fec:	f000 80e5 	beq.w	80211ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020ff0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020ff4:	d019      	beq.n	802102a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020ff6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020ffa:	fb0c fa0a 	mul.w	sl, ip, sl
 8020ffe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021002:	fb0c fc03 	mul.w	ip, ip, r3
 8021006:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802100a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802100e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8021012:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8021016:	4453      	add	r3, sl
 8021018:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802101c:	0a1b      	lsrs	r3, r3, #8
 802101e:	0a3f      	lsrs	r7, r7, #8
 8021020:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021024:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021028:	433b      	orrs	r3, r7
 802102a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802102c:	2cff      	cmp	r4, #255	; 0xff
 802102e:	d020      	beq.n	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021030:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021032:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021036:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021038:	4367      	muls	r7, r4
 802103a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802103c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021040:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021042:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021046:	fb04 fa0a 	mul.w	sl, r4, sl
 802104a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802104e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021052:	44bc      	add	ip, r7
 8021054:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802105c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021064:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021068:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802106c:	ea4c 040a 	orr.w	r4, ip, sl
 8021070:	940d      	str	r4, [sp, #52]	; 0x34
 8021072:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021074:	2cff      	cmp	r4, #255	; 0xff
 8021076:	d020      	beq.n	80210ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021078:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802107a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802107e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021080:	4367      	muls	r7, r4
 8021082:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021084:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021088:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802108a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802108e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021092:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021096:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802109a:	44bc      	add	ip, r7
 802109c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80210a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210b4:	ea4c 040a 	orr.w	r4, ip, sl
 80210b8:	9409      	str	r4, [sp, #36]	; 0x24
 80210ba:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80210bc:	2cff      	cmp	r4, #255	; 0xff
 80210be:	d020      	beq.n	8021102 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80210c0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80210c2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80210c6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80210c8:	4367      	muls	r7, r4
 80210ca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80210cc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80210d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80210d2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80210d6:	fb04 fa0a 	mul.w	sl, r4, sl
 80210da:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80210de:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210e2:	44bc      	add	ip, r7
 80210e4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80210e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210f4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210fc:	ea4c 040a 	orr.w	r4, ip, sl
 8021100:	940e      	str	r4, [sp, #56]	; 0x38
 8021102:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021104:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021108:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802110a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802110e:	fb0e f707 	mul.w	r7, lr, r7
 8021112:	fb01 770c 	mla	r7, r1, ip, r7
 8021116:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802111a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802111c:	fb00 770c 	mla	r7, r0, ip, r7
 8021120:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021124:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021126:	fb08 770c 	mla	r7, r8, ip, r7
 802112a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802112e:	fb0e fe0c 	mul.w	lr, lr, ip
 8021132:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8021136:	fb01 e303 	mla	r3, r1, r3, lr
 802113a:	9909      	ldr	r1, [sp, #36]	; 0x24
 802113c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8021140:	990e      	ldr	r1, [sp, #56]	; 0x38
 8021142:	fb00 330a 	mla	r3, r0, sl, r3
 8021146:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802114a:	fb08 3c0c 	mla	ip, r8, ip, r3
 802114e:	f8b9 3000 	ldrh.w	r3, [r9]
 8021152:	43d2      	mvns	r2, r2
 8021154:	1218      	asrs	r0, r3, #8
 8021156:	b2d2      	uxtb	r2, r2
 8021158:	10d9      	asrs	r1, r3, #3
 802115a:	0a3f      	lsrs	r7, r7, #8
 802115c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021160:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021164:	00db      	lsls	r3, r3, #3
 8021166:	4350      	muls	r0, r2
 8021168:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802116c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021170:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021174:	b2db      	uxtb	r3, r3
 8021176:	ea47 070c 	orr.w	r7, r7, ip
 802117a:	4351      	muls	r1, r2
 802117c:	4353      	muls	r3, r2
 802117e:	1c42      	adds	r2, r0, #1
 8021180:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021184:	0c3a      	lsrs	r2, r7, #16
 8021186:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802118a:	4a18      	ldr	r2, [pc, #96]	; (80211ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 802118c:	b2c0      	uxtb	r0, r0
 802118e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8021192:	1c4a      	adds	r2, r1, #1
 8021194:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021198:	0a3a      	lsrs	r2, r7, #8
 802119a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802119e:	00c9      	lsls	r1, r1, #3
 80211a0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80211a4:	4301      	orrs	r1, r0
 80211a6:	1c58      	adds	r0, r3, #1
 80211a8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80211ac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80211b0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80211b4:	4308      	orrs	r0, r1
 80211b6:	f8a9 0000 	strh.w	r0, [r9]
 80211ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80211bc:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80211be:	441a      	add	r2, r3
 80211c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80211c2:	9225      	str	r2, [sp, #148]	; 0x94
 80211c4:	f109 0902 	add.w	r9, r9, #2
 80211c8:	441d      	add	r5, r3
 80211ca:	f10b 3bff 	add.w	fp, fp, #4294967295
 80211ce:	e64d      	b.n	8020e6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80211d0:	2800      	cmp	r0, #0
 80211d2:	f43f aeed 	beq.w	8020fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211d6:	5c79      	ldrb	r1, [r7, r1]
 80211d8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211dc:	9109      	str	r1, [sp, #36]	; 0x24
 80211de:	0e09      	lsrs	r1, r1, #24
 80211e0:	9111      	str	r1, [sp, #68]	; 0x44
 80211e2:	e6e5      	b.n	8020fb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211e4:	b01b      	add	sp, #108	; 0x6c
 80211e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211ea:	bf00      	nop
 80211ec:	fffff800 	.word	0xfffff800

080211f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80211f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211f4:	b085      	sub	sp, #20
 80211f6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80211fa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80211fe:	9103      	str	r1, [sp, #12]
 8021200:	fb00 7406 	mla	r4, r0, r6, r7
 8021204:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021208:	2800      	cmp	r0, #0
 802120a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 802120e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021212:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021216:	9501      	str	r5, [sp, #4]
 8021218:	eb03 0904 	add.w	r9, r3, r4
 802121c:	f2c0 8150 	blt.w	80214c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021220:	4583      	cmp	fp, r0
 8021222:	f340 814d 	ble.w	80214c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021226:	2f00      	cmp	r7, #0
 8021228:	f2c0 8146 	blt.w	80214b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802122c:	42be      	cmp	r6, r7
 802122e:	f340 8143 	ble.w	80214b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021232:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021236:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802123a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802123e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021242:	4355      	muls	r5, r2
 8021244:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021248:	f64f 041f 	movw	r4, #63519	; 0xf81f
 802124c:	fb0c f203 	mul.w	r2, ip, r3
 8021250:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021254:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021258:	441d      	add	r5, r3
 802125a:	f102 0320 	add.w	r3, r2, #32
 802125e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021262:	0a1b      	lsrs	r3, r3, #8
 8021264:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021268:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802126c:	431c      	orrs	r4, r3
 802126e:	1c7b      	adds	r3, r7, #1
 8021270:	f100 812b 	bmi.w	80214ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021274:	429e      	cmp	r6, r3
 8021276:	f340 8128 	ble.w	80214ca <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802127a:	2900      	cmp	r1, #0
 802127c:	f000 8128 	beq.w	80214d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021280:	9a01      	ldr	r2, [sp, #4]
 8021282:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021286:	8855      	ldrh	r5, [r2, #2]
 8021288:	ea4f 08e3 	mov.w	r8, r3, asr #3
 802128c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021290:	fb08 f802 	mul.w	r8, r8, r2
 8021294:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021298:	f64f 021f 	movw	r2, #63519	; 0xf81f
 802129c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80212a0:	435d      	muls	r5, r3
 80212a2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80212a6:	44d0      	add	r8, sl
 80212a8:	f105 0a20 	add.w	sl, r5, #32
 80212ac:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80212b0:	0a2d      	lsrs	r5, r5, #8
 80212b2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80212b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80212ba:	432a      	orrs	r2, r5
 80212bc:	3001      	adds	r0, #1
 80212be:	f100 810d 	bmi.w	80214dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80212c2:	4583      	cmp	fp, r0
 80212c4:	f340 810a 	ble.w	80214dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80212c8:	f1be 0f00 	cmp.w	lr, #0
 80212cc:	f000 810b 	beq.w	80214e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80212d0:	2f00      	cmp	r7, #0
 80212d2:	f2c0 8100 	blt.w	80214d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80212d6:	42be      	cmp	r6, r7
 80212d8:	f340 80fd 	ble.w	80214d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80212dc:	9801      	ldr	r0, [sp, #4]
 80212de:	f819 5006 	ldrb.w	r5, [r9, r6]
 80212e2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80212e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80212ea:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80212ee:	fb0a fa00 	mul.w	sl, sl, r0
 80212f2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80212f6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80212fa:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80212fe:	fb05 f808 	mul.w	r8, r5, r8
 8021302:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021306:	4482      	add	sl, r0
 8021308:	f108 0020 	add.w	r0, r8, #32
 802130c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021310:	0a00      	lsrs	r0, r0, #8
 8021312:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021316:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802131a:	ea4b 0b00 	orr.w	fp, fp, r0
 802131e:	3701      	adds	r7, #1
 8021320:	f100 80e6 	bmi.w	80214f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021324:	42be      	cmp	r6, r7
 8021326:	f340 80e3 	ble.w	80214f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802132a:	2900      	cmp	r1, #0
 802132c:	f000 80e3 	beq.w	80214f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021330:	3601      	adds	r6, #1
 8021332:	9801      	ldr	r0, [sp, #4]
 8021334:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021338:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802133c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021340:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021344:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021348:	fb09 f906 	mul.w	r9, r9, r6
 802134c:	fb07 f800 	mul.w	r8, r7, r0
 8021350:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021354:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021358:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802135c:	44d1      	add	r9, sl
 802135e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021362:	f108 0020 	add.w	r0, r8, #32
 8021366:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802136a:	0a00      	lsrs	r0, r0, #8
 802136c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021370:	4330      	orrs	r0, r6
 8021372:	b28e      	uxth	r6, r1
 8021374:	fa1f f98e 	uxth.w	r9, lr
 8021378:	fb06 f809 	mul.w	r8, r6, r9
 802137c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021380:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021384:	0136      	lsls	r6, r6, #4
 8021386:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802138a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802138e:	9601      	str	r6, [sp, #4]
 8021390:	ea4a 0404 	orr.w	r4, sl, r4
 8021394:	fa1f f689 	uxth.w	r6, r9
 8021398:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802139c:	fb11 f90e 	smulbb	r9, r1, lr
 80213a0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80213a4:	9602      	str	r6, [sp, #8]
 80213a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213aa:	4626      	mov	r6, r4
 80213ac:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80213b0:	f1ce 0410 	rsb	r4, lr, #16
 80213b4:	1a64      	subs	r4, r4, r1
 80213b6:	ea4a 0202 	orr.w	r2, sl, r2
 80213ba:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80213be:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80213c2:	434a      	muls	r2, r1
 80213c4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80213c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80213cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80213d0:	fb04 2406 	mla	r4, r4, r6, r2
 80213d4:	ea4a 0000 	orr.w	r0, sl, r0
 80213d8:	fb09 4200 	mla	r2, r9, r0, r4
 80213dc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80213e0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80213e4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80213e8:	ea44 0b0b 	orr.w	fp, r4, fp
 80213ec:	9c01      	ldr	r4, [sp, #4]
 80213ee:	9e02      	ldr	r6, [sp, #8]
 80213f0:	9903      	ldr	r1, [sp, #12]
 80213f2:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80213f6:	1ba4      	subs	r4, r4, r6
 80213f8:	9e01      	ldr	r6, [sp, #4]
 80213fa:	8808      	ldrh	r0, [r1, #0]
 80213fc:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021400:	eba6 0608 	sub.w	r6, r6, r8
 8021404:	b2b6      	uxth	r6, r6
 8021406:	b2a4      	uxth	r4, r4
 8021408:	4373      	muls	r3, r6
 802140a:	fb0c 3304 	mla	r3, ip, r4, r3
 802140e:	9c02      	ldr	r4, [sp, #8]
 8021410:	fb04 3505 	mla	r5, r4, r5, r3
 8021414:	fb08 5707 	mla	r7, r8, r7, r5
 8021418:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802141c:	b289      	uxth	r1, r1
 802141e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021422:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021426:	434f      	muls	r7, r1
 8021428:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802142c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021430:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021434:	1c7b      	adds	r3, r7, #1
 8021436:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802143a:	ea42 0e0e 	orr.w	lr, r2, lr
 802143e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8021442:	fa1f f28e 	uxth.w	r2, lr
 8021446:	1203      	asrs	r3, r0, #8
 8021448:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 802144c:	b2ff      	uxtb	r7, r7
 802144e:	1215      	asrs	r5, r2, #8
 8021450:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021454:	fb13 f307 	smulbb	r3, r3, r7
 8021458:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802145c:	fb05 3501 	mla	r5, r5, r1, r3
 8021460:	10c3      	asrs	r3, r0, #3
 8021462:	10d4      	asrs	r4, r2, #3
 8021464:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021468:	fb13 f307 	smulbb	r3, r3, r7
 802146c:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021470:	fb04 3401 	mla	r4, r4, r1, r3
 8021474:	00c3      	lsls	r3, r0, #3
 8021476:	00d2      	lsls	r2, r2, #3
 8021478:	b2db      	uxtb	r3, r3
 802147a:	fb13 f307 	smulbb	r3, r3, r7
 802147e:	b2d2      	uxtb	r2, r2
 8021480:	fb02 3101 	mla	r1, r2, r1, r3
 8021484:	b2ad      	uxth	r5, r5
 8021486:	b289      	uxth	r1, r1
 8021488:	b2a4      	uxth	r4, r4
 802148a:	1c6b      	adds	r3, r5, #1
 802148c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021490:	1c62      	adds	r2, r4, #1
 8021492:	1c4b      	adds	r3, r1, #1
 8021494:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021498:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802149c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80214a0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80214a4:	0964      	lsrs	r4, r4, #5
 80214a6:	432b      	orrs	r3, r5
 80214a8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80214ac:	9a03      	ldr	r2, [sp, #12]
 80214ae:	4323      	orrs	r3, r4
 80214b0:	8013      	strh	r3, [r2, #0]
 80214b2:	b005      	add	sp, #20
 80214b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80214b8:	f04f 0c00 	mov.w	ip, #0
 80214bc:	4664      	mov	r4, ip
 80214be:	e6d6      	b.n	802126e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80214c0:	2300      	movs	r3, #0
 80214c2:	469c      	mov	ip, r3
 80214c4:	461a      	mov	r2, r3
 80214c6:	461c      	mov	r4, r3
 80214c8:	e6f8      	b.n	80212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214ca:	2300      	movs	r3, #0
 80214cc:	461a      	mov	r2, r3
 80214ce:	e6f5      	b.n	80212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214d0:	460b      	mov	r3, r1
 80214d2:	460a      	mov	r2, r1
 80214d4:	e6f2      	b.n	80212bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214d6:	2500      	movs	r5, #0
 80214d8:	46ab      	mov	fp, r5
 80214da:	e720      	b.n	802131e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80214dc:	2700      	movs	r7, #0
 80214de:	463d      	mov	r5, r7
 80214e0:	4638      	mov	r0, r7
 80214e2:	46bb      	mov	fp, r7
 80214e4:	e745      	b.n	8021372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214e6:	4677      	mov	r7, lr
 80214e8:	4675      	mov	r5, lr
 80214ea:	4670      	mov	r0, lr
 80214ec:	46f3      	mov	fp, lr
 80214ee:	e740      	b.n	8021372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214f0:	2700      	movs	r7, #0
 80214f2:	4638      	mov	r0, r7
 80214f4:	e73d      	b.n	8021372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214f6:	460f      	mov	r7, r1
 80214f8:	4608      	mov	r0, r1
 80214fa:	e73a      	b.n	8021372 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080214fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021500:	b097      	sub	sp, #92	; 0x5c
 8021502:	9214      	str	r2, [sp, #80]	; 0x50
 8021504:	9308      	str	r3, [sp, #32]
 8021506:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021508:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802150c:	9312      	str	r3, [sp, #72]	; 0x48
 802150e:	9111      	str	r1, [sp, #68]	; 0x44
 8021510:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8021514:	9015      	str	r0, [sp, #84]	; 0x54
 8021516:	6850      	ldr	r0, [r2, #4]
 8021518:	6812      	ldr	r2, [r2, #0]
 802151a:	fb00 1303 	mla	r3, r0, r3, r1
 802151e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021522:	9309      	str	r3, [sp, #36]	; 0x24
 8021524:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021526:	681b      	ldr	r3, [r3, #0]
 8021528:	930b      	str	r3, [sp, #44]	; 0x2c
 802152a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802152c:	685b      	ldr	r3, [r3, #4]
 802152e:	930c      	str	r3, [sp, #48]	; 0x30
 8021530:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8021534:	930a      	str	r3, [sp, #40]	; 0x28
 8021536:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021538:	2b00      	cmp	r3, #0
 802153a:	dc03      	bgt.n	8021544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802153c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802153e:	2b00      	cmp	r3, #0
 8021540:	f340 83cb 	ble.w	8021cda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021544:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021546:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802154a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802154e:	1e48      	subs	r0, r1, #1
 8021550:	1e55      	subs	r5, r2, #1
 8021552:	9b08      	ldr	r3, [sp, #32]
 8021554:	2b00      	cmp	r3, #0
 8021556:	f340 81a3 	ble.w	80218a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 802155a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802155c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 802155e:	1436      	asrs	r6, r6, #16
 8021560:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021564:	d406      	bmi.n	8021574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021566:	4286      	cmp	r6, r0
 8021568:	da04      	bge.n	8021574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802156a:	2b00      	cmp	r3, #0
 802156c:	db02      	blt.n	8021574 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802156e:	42ab      	cmp	r3, r5
 8021570:	f2c0 8197 	blt.w	80218a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021574:	3601      	adds	r6, #1
 8021576:	f100 8184 	bmi.w	8021882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802157a:	42b1      	cmp	r1, r6
 802157c:	f2c0 8181 	blt.w	8021882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021580:	3301      	adds	r3, #1
 8021582:	f100 817e 	bmi.w	8021882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021586:	429a      	cmp	r2, r3
 8021588:	f2c0 817b 	blt.w	8021882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802158c:	9b08      	ldr	r3, [sp, #32]
 802158e:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021590:	9313      	str	r3, [sp, #76]	; 0x4c
 8021592:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021596:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021598:	2b00      	cmp	r3, #0
 802159a:	f340 81a4 	ble.w	80218e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802159e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80215a0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80215a2:	1418      	asrs	r0, r3, #16
 80215a4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80215a6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80215aa:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80215ac:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80215b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80215b2:	142d      	asrs	r5, r5, #16
 80215b4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80215b8:	f100 81f8 	bmi.w	80219ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215bc:	f102 3eff 	add.w	lr, r2, #4294967295
 80215c0:	4575      	cmp	r5, lr
 80215c2:	f280 81f3 	bge.w	80219ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215c6:	2800      	cmp	r0, #0
 80215c8:	f2c0 81f0 	blt.w	80219ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215cc:	f103 3eff 	add.w	lr, r3, #4294967295
 80215d0:	4570      	cmp	r0, lr
 80215d2:	f280 81eb 	bge.w	80219ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80215d8:	b212      	sxth	r2, r2
 80215da:	fb00 5002 	mla	r0, r0, r2, r5
 80215de:	fa1f fe81 	uxth.w	lr, r1
 80215e2:	eb03 0a00 	add.w	sl, r3, r0
 80215e6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80215ea:	f813 9000 	ldrb.w	r9, [r3, r0]
 80215ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80215f2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80215f6:	b29b      	uxth	r3, r3
 80215f8:	f1bc 0f00 	cmp.w	ip, #0
 80215fc:	f000 81b9 	beq.w	8021972 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021600:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021604:	940d      	str	r4, [sp, #52]	; 0x34
 8021606:	eb0a 0b02 	add.w	fp, sl, r2
 802160a:	fa1f fa8c 	uxth.w	sl, ip
 802160e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021612:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021616:	fa1f fa8a 	uxth.w	sl, sl
 802161a:	eba5 050e 	sub.w	r5, r5, lr
 802161e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021622:	940e      	str	r4, [sp, #56]	; 0x38
 8021624:	eba3 030a 	sub.w	r3, r3, sl
 8021628:	b2ad      	uxth	r5, r5
 802162a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802162c:	b29b      	uxth	r3, r3
 802162e:	fb08 f505 	mul.w	r5, r8, r5
 8021632:	fb09 5303 	mla	r3, r9, r3, r5
 8021636:	fb0a 3304 	mla	r3, sl, r4, r3
 802163a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802163c:	fb0e 3304 	mla	r3, lr, r4, r3
 8021640:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021644:	2b00      	cmp	r3, #0
 8021646:	f000 810f 	beq.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802164a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802164c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021650:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021654:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021658:	f000 8190 	beq.w	802197c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 802165c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021660:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021664:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021668:	fb09 f000 	mul.w	r0, r9, r0
 802166c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021670:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021674:	f100 0b20 	add.w	fp, r0, #32
 8021678:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802167c:	44ce      	add	lr, r9
 802167e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021682:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021686:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802168a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802168e:	ea4e 0909 	orr.w	r9, lr, r9
 8021692:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021696:	8868      	ldrh	r0, [r5, #2]
 8021698:	d019      	beq.n	80216ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802169a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802169e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80216a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80216a6:	fb08 f800 	mul.w	r8, r8, r0
 80216aa:	fb0a fe0e 	mul.w	lr, sl, lr
 80216ae:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80216b2:	f108 0b20 	add.w	fp, r8, #32
 80216b6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80216ba:	4486      	add	lr, r0
 80216bc:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80216c0:	0a00      	lsrs	r0, r0, #8
 80216c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80216c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80216ca:	ea4e 0000 	orr.w	r0, lr, r0
 80216ce:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80216d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80216d6:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80216da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80216de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80216e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80216e6:	ea4e 0909 	orr.w	r9, lr, r9
 80216ea:	ea4a 0000 	orr.w	r0, sl, r0
 80216ee:	f1bc 0f00 	cmp.w	ip, #0
 80216f2:	f000 8145 	beq.w	8021980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80216f6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80216fa:	3a01      	subs	r2, #1
 80216fc:	0052      	lsls	r2, r2, #1
 80216fe:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021700:	3202      	adds	r2, #2
 8021702:	2cff      	cmp	r4, #255	; 0xff
 8021704:	eb05 0e02 	add.w	lr, r5, r2
 8021708:	5aaa      	ldrh	r2, [r5, r2]
 802170a:	d018      	beq.n	802173e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802170c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021714:	fb04 fa02 	mul.w	sl, r4, r2
 8021718:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802171c:	fb08 f805 	mul.w	r8, r8, r5
 8021720:	f10a 0520 	add.w	r5, sl, #32
 8021724:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021728:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802172c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021730:	4442      	add	r2, r8
 8021732:	0a2d      	lsrs	r5, r5, #8
 8021734:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021738:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802173c:	432a      	orrs	r2, r5
 802173e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021740:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021744:	2cff      	cmp	r4, #255	; 0xff
 8021746:	d01a      	beq.n	802177e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021748:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802174c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021750:	fb04 fa05 	mul.w	sl, r4, r5
 8021754:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021758:	fb08 f80e 	mul.w	r8, r8, lr
 802175c:	f10a 0e20 	add.w	lr, sl, #32
 8021760:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021764:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021768:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802176c:	4445      	add	r5, r8
 802176e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021772:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021776:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802177a:	ea45 050e 	orr.w	r5, r5, lr
 802177e:	fb1c fe01 	smulbb	lr, ip, r1
 8021782:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021786:	f1cc 0810 	rsb	r8, ip, #16
 802178a:	eba8 0801 	sub.w	r8, r8, r1
 802178e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021792:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021796:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802179a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802179e:	4341      	muls	r1, r0
 80217a0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80217a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80217a8:	ea4a 0202 	orr.w	r2, sl, r2
 80217ac:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80217b0:	fb09 1108 	mla	r1, r9, r8, r1
 80217b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80217b8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80217bc:	fb0c 1102 	mla	r1, ip, r2, r1
 80217c0:	ea4b 0505 	orr.w	r5, fp, r5
 80217c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80217c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80217cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80217d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80217d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80217d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80217dc:	fa1f f28e 	uxth.w	r2, lr
 80217e0:	2bff      	cmp	r3, #255	; 0xff
 80217e2:	d103      	bne.n	80217ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80217e4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80217e6:	29ff      	cmp	r1, #255	; 0xff
 80217e8:	f000 80de 	beq.w	80219a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80217ec:	990a      	ldr	r1, [sp, #40]	; 0x28
 80217ee:	8838      	ldrh	r0, [r7, #0]
 80217f0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80217f2:	434b      	muls	r3, r1
 80217f4:	f103 0c01 	add.w	ip, r3, #1
 80217f8:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80217fc:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021800:	fa5f fc83 	uxtb.w	ip, r3
 8021804:	1203      	asrs	r3, r0, #8
 8021806:	1215      	asrs	r5, r2, #8
 8021808:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802180c:	fb13 f30c 	smulbb	r3, r3, ip
 8021810:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021814:	fb05 3501 	mla	r5, r5, r1, r3
 8021818:	10c3      	asrs	r3, r0, #3
 802181a:	10d1      	asrs	r1, r2, #3
 802181c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021820:	fb13 f30c 	smulbb	r3, r3, ip
 8021824:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021828:	fb01 3104 	mla	r1, r1, r4, r3
 802182c:	00c3      	lsls	r3, r0, #3
 802182e:	00d2      	lsls	r2, r2, #3
 8021830:	b2db      	uxtb	r3, r3
 8021832:	b2d2      	uxtb	r2, r2
 8021834:	fb13 f30c 	smulbb	r3, r3, ip
 8021838:	b2ad      	uxth	r5, r5
 802183a:	fb02 3304 	mla	r3, r2, r4, r3
 802183e:	b29a      	uxth	r2, r3
 8021840:	1c6b      	adds	r3, r5, #1
 8021842:	b289      	uxth	r1, r1
 8021844:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021848:	1c53      	adds	r3, r2, #1
 802184a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802184e:	1c4a      	adds	r2, r1, #1
 8021850:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021854:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021858:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802185c:	0949      	lsrs	r1, r1, #5
 802185e:	432b      	orrs	r3, r5
 8021860:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021864:	430b      	orrs	r3, r1
 8021866:	803b      	strh	r3, [r7, #0]
 8021868:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802186a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 802186c:	4413      	add	r3, r2
 802186e:	9321      	str	r3, [sp, #132]	; 0x84
 8021870:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021872:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021874:	441a      	add	r2, r3
 8021876:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021878:	9222      	str	r2, [sp, #136]	; 0x88
 802187a:	3b01      	subs	r3, #1
 802187c:	3702      	adds	r7, #2
 802187e:	9313      	str	r3, [sp, #76]	; 0x4c
 8021880:	e689      	b.n	8021596 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021882:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021884:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021886:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021888:	4433      	add	r3, r6
 802188a:	9321      	str	r3, [sp, #132]	; 0x84
 802188c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802188e:	441c      	add	r4, r3
 8021890:	9b08      	ldr	r3, [sp, #32]
 8021892:	9422      	str	r4, [sp, #136]	; 0x88
 8021894:	3b01      	subs	r3, #1
 8021896:	9308      	str	r3, [sp, #32]
 8021898:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802189a:	3302      	adds	r3, #2
 802189c:	9309      	str	r3, [sp, #36]	; 0x24
 802189e:	e658      	b.n	8021552 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80218a0:	d028      	beq.n	80218f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80218a2:	9b08      	ldr	r3, [sp, #32]
 80218a4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80218a6:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80218a8:	3b01      	subs	r3, #1
 80218aa:	fb00 5003 	mla	r0, r0, r3, r5
 80218ae:	1400      	asrs	r0, r0, #16
 80218b0:	f53f ae6c 	bmi.w	802158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218b4:	3901      	subs	r1, #1
 80218b6:	4288      	cmp	r0, r1
 80218b8:	f6bf ae68 	bge.w	802158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218bc:	9924      	ldr	r1, [sp, #144]	; 0x90
 80218be:	9822      	ldr	r0, [sp, #136]	; 0x88
 80218c0:	fb01 0303 	mla	r3, r1, r3, r0
 80218c4:	141b      	asrs	r3, r3, #16
 80218c6:	f53f ae61 	bmi.w	802158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218ca:	3a01      	subs	r2, #1
 80218cc:	4293      	cmp	r3, r2
 80218ce:	f6bf ae5d 	bge.w	802158c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218d2:	9b08      	ldr	r3, [sp, #32]
 80218d4:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80218d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80218da:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80218de:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80218e0:	2b00      	cmp	r3, #0
 80218e2:	f300 8082 	bgt.w	80219ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80218e6:	9b08      	ldr	r3, [sp, #32]
 80218e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80218ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80218f2:	9309      	str	r3, [sp, #36]	; 0x24
 80218f4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218f6:	2b00      	cmp	r3, #0
 80218f8:	f340 81ef 	ble.w	8021cda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80218fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021900:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021904:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021908:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802190a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802190e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021912:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021916:	eef0 6a62 	vmov.f32	s13, s5
 802191a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802191e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021922:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021926:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 802192a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802192e:	eef0 6a43 	vmov.f32	s13, s6
 8021932:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021936:	ee12 2a90 	vmov	r2, s5
 802193a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802193e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021942:	ee13 2a10 	vmov	r2, s6
 8021946:	9323      	str	r3, [sp, #140]	; 0x8c
 8021948:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802194a:	fb92 f3f3 	sdiv	r3, r2, r3
 802194e:	9324      	str	r3, [sp, #144]	; 0x90
 8021950:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021952:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021954:	3b01      	subs	r3, #1
 8021956:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802195a:	9311      	str	r3, [sp, #68]	; 0x44
 802195c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802195e:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021962:	bf08      	it	eq
 8021964:	4613      	moveq	r3, r2
 8021966:	9308      	str	r3, [sp, #32]
 8021968:	eeb0 3a67 	vmov.f32	s6, s15
 802196c:	eef0 2a47 	vmov.f32	s5, s14
 8021970:	e5e1      	b.n	8021536 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021972:	fb08 f505 	mul.w	r5, r8, r5
 8021976:	fb09 5303 	mla	r3, r9, r3, r5
 802197a:	e661      	b.n	8021640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 802197c:	4681      	mov	r9, r0
 802197e:	e688      	b.n	8021692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021980:	f1c1 0210 	rsb	r2, r1, #16
 8021984:	4341      	muls	r1, r0
 8021986:	fb09 1902 	mla	r9, r9, r2, r1
 802198a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802198e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021992:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021996:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802199a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802199e:	ea42 0909 	orr.w	r9, r2, r9
 80219a2:	fa1f f289 	uxth.w	r2, r9
 80219a6:	e71b      	b.n	80217e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80219a8:	803a      	strh	r2, [r7, #0]
 80219aa:	e75d      	b.n	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219ac:	f115 0e01 	adds.w	lr, r5, #1
 80219b0:	f53f af5a 	bmi.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219b4:	4572      	cmp	r2, lr
 80219b6:	f6ff af57 	blt.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219ba:	f110 0e01 	adds.w	lr, r0, #1
 80219be:	f53f af53 	bmi.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219c2:	4573      	cmp	r3, lr
 80219c4:	f6ff af50 	blt.w	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80219ca:	9502      	str	r5, [sp, #8]
 80219cc:	b21b      	sxth	r3, r3
 80219ce:	b212      	sxth	r2, r2
 80219d0:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80219d4:	9301      	str	r3, [sp, #4]
 80219d6:	9200      	str	r2, [sp, #0]
 80219d8:	e9cd c405 	strd	ip, r4, [sp, #20]
 80219dc:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80219e0:	4639      	mov	r1, r7
 80219e2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80219e4:	f7ff fc04 	bl	80211f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80219e8:	e73e      	b.n	8021868 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80219ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80219f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80219f2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80219f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80219f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80219fe:	141f      	asrs	r7, r3, #16
 8021a00:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021a02:	141b      	asrs	r3, r3, #16
 8021a04:	fb01 3707 	mla	r7, r1, r7, r3
 8021a08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021a0a:	fa1f fc82 	uxth.w	ip, r2
 8021a0e:	eb03 0a07 	add.w	sl, r3, r7
 8021a12:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021a16:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021a1a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021a1e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021a22:	b29b      	uxth	r3, r3
 8021a24:	2d00      	cmp	r5, #0
 8021a26:	f000 813d 	beq.w	8021ca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021a2a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021a2e:	940f      	str	r4, [sp, #60]	; 0x3c
 8021a30:	eb0a 0b01 	add.w	fp, sl, r1
 8021a34:	fa1f fa85 	uxth.w	sl, r5
 8021a38:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a3c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021a40:	fa1f fa8a 	uxth.w	sl, sl
 8021a44:	eba0 000c 	sub.w	r0, r0, ip
 8021a48:	eba3 030a 	sub.w	r3, r3, sl
 8021a4c:	b280      	uxth	r0, r0
 8021a4e:	fb08 f000 	mul.w	r0, r8, r0
 8021a52:	b29b      	uxth	r3, r3
 8021a54:	fb09 0303 	mla	r3, r9, r3, r0
 8021a58:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021a5a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021a5e:	9410      	str	r4, [sp, #64]	; 0x40
 8021a60:	fb0a 3300 	mla	r3, sl, r0, r3
 8021a64:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a68:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021a6c:	2b00      	cmp	r3, #0
 8021a6e:	f000 810b 	beq.w	8021c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021a72:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021a74:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a76:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021a7a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021a7e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021a82:	f000 8114 	beq.w	8021cae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021a86:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a8a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021a8e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a92:	fb09 f707 	mul.w	r7, r9, r7
 8021a96:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a9a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021a9e:	f107 0b20 	add.w	fp, r7, #32
 8021aa2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021aa6:	44cc      	add	ip, r9
 8021aa8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021aac:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021ab0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021ab4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021ab8:	ea4c 0909 	orr.w	r9, ip, r9
 8021abc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021ac0:	8847      	ldrh	r7, [r0, #2]
 8021ac2:	d019      	beq.n	8021af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021ac4:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021ac8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021acc:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021ad0:	fb08 f807 	mul.w	r8, r8, r7
 8021ad4:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ad8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021adc:	f108 0b20 	add.w	fp, r8, #32
 8021ae0:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021ae4:	44bc      	add	ip, r7
 8021ae6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021aea:	0a3f      	lsrs	r7, r7, #8
 8021aec:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021af0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021af4:	ea4c 0707 	orr.w	r7, ip, r7
 8021af8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021afc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021b00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021b04:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021b08:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b0c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021b10:	ea4c 0909 	orr.w	r9, ip, r9
 8021b14:	ea4a 0707 	orr.w	r7, sl, r7
 8021b18:	2d00      	cmp	r5, #0
 8021b1a:	f000 80ca 	beq.w	8021cb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021b1e:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021b22:	3901      	subs	r1, #1
 8021b24:	0049      	lsls	r1, r1, #1
 8021b26:	3102      	adds	r1, #2
 8021b28:	eb00 0c01 	add.w	ip, r0, r1
 8021b2c:	5a41      	ldrh	r1, [r0, r1]
 8021b2e:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021b30:	28ff      	cmp	r0, #255	; 0xff
 8021b32:	d019      	beq.n	8021b68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021b34:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021b36:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021b3a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021b3e:	fb04 fa01 	mul.w	sl, r4, r1
 8021b42:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b46:	fb08 f800 	mul.w	r8, r8, r0
 8021b4a:	f10a 0020 	add.w	r0, sl, #32
 8021b4e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021b52:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021b56:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b5a:	4441      	add	r1, r8
 8021b5c:	0a00      	lsrs	r0, r0, #8
 8021b5e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021b62:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b66:	4301      	orrs	r1, r0
 8021b68:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b6a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021b6e:	2cff      	cmp	r4, #255	; 0xff
 8021b70:	d01a      	beq.n	8021ba8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021b72:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021b76:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b7a:	fb04 fa00 	mul.w	sl, r4, r0
 8021b7e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b82:	fb08 f80c 	mul.w	r8, r8, ip
 8021b86:	f10a 0c20 	add.w	ip, sl, #32
 8021b8a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021b8e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021b92:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b96:	4440      	add	r0, r8
 8021b98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b9c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021ba0:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021ba4:	ea40 000c 	orr.w	r0, r0, ip
 8021ba8:	fb15 fc02 	smulbb	ip, r5, r2
 8021bac:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021bb0:	f1c5 0810 	rsb	r8, r5, #16
 8021bb4:	eba8 0802 	sub.w	r8, r8, r2
 8021bb8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021bbc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021bc0:	437a      	muls	r2, r7
 8021bc2:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021bc6:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021bca:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021bce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021bd2:	fb09 2208 	mla	r2, r9, r8, r2
 8021bd6:	ea4a 0101 	orr.w	r1, sl, r1
 8021bda:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021bde:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021be2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021be6:	fb05 2201 	mla	r2, r5, r1, r2
 8021bea:	ea4b 0000 	orr.w	r0, fp, r0
 8021bee:	fb0c 2200 	mla	r2, ip, r0, r2
 8021bf2:	0d57      	lsrs	r7, r2, #21
 8021bf4:	0952      	lsrs	r2, r2, #5
 8021bf6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bfa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bfe:	433a      	orrs	r2, r7
 8021c00:	2bff      	cmp	r3, #255	; 0xff
 8021c02:	b292      	uxth	r2, r2
 8021c04:	d102      	bne.n	8021c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021c06:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021c08:	29ff      	cmp	r1, #255	; 0xff
 8021c0a:	d063      	beq.n	8021cd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021c0c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021c0e:	f8be 1000 	ldrh.w	r1, [lr]
 8021c12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021c14:	4343      	muls	r3, r0
 8021c16:	1c58      	adds	r0, r3, #1
 8021c18:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021c1c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021c20:	1208      	asrs	r0, r1, #8
 8021c22:	b2db      	uxtb	r3, r3
 8021c24:	1215      	asrs	r5, r2, #8
 8021c26:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021c2a:	fb10 f003 	smulbb	r0, r0, r3
 8021c2e:	10cf      	asrs	r7, r1, #3
 8021c30:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021c34:	00c9      	lsls	r1, r1, #3
 8021c36:	fb05 0504 	mla	r5, r5, r4, r0
 8021c3a:	b2c9      	uxtb	r1, r1
 8021c3c:	10d0      	asrs	r0, r2, #3
 8021c3e:	00d2      	lsls	r2, r2, #3
 8021c40:	fb11 f103 	smulbb	r1, r1, r3
 8021c44:	b2d2      	uxtb	r2, r2
 8021c46:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021c4a:	fb02 1204 	mla	r2, r2, r4, r1
 8021c4e:	fb17 f703 	smulbb	r7, r7, r3
 8021c52:	b2ad      	uxth	r5, r5
 8021c54:	b292      	uxth	r2, r2
 8021c56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021c5a:	fb00 7004 	mla	r0, r0, r4, r7
 8021c5e:	1c6b      	adds	r3, r5, #1
 8021c60:	1c57      	adds	r7, r2, #1
 8021c62:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c66:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021c6a:	b280      	uxth	r0, r0
 8021c6c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021c70:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021c74:	433d      	orrs	r5, r7
 8021c76:	1c47      	adds	r7, r0, #1
 8021c78:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021c7c:	097f      	lsrs	r7, r7, #5
 8021c7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021c82:	433d      	orrs	r5, r7
 8021c84:	f8ae 5000 	strh.w	r5, [lr]
 8021c88:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c8a:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021c8c:	4413      	add	r3, r2
 8021c8e:	9321      	str	r3, [sp, #132]	; 0x84
 8021c90:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021c92:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021c94:	441a      	add	r2, r3
 8021c96:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c98:	9222      	str	r2, [sp, #136]	; 0x88
 8021c9a:	3b01      	subs	r3, #1
 8021c9c:	f10e 0e02 	add.w	lr, lr, #2
 8021ca0:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ca2:	e61c      	b.n	80218de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021ca4:	fb08 f000 	mul.w	r0, r8, r0
 8021ca8:	fb09 0303 	mla	r3, r9, r3, r0
 8021cac:	e6dc      	b.n	8021a68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021cae:	46b9      	mov	r9, r7
 8021cb0:	e704      	b.n	8021abc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021cb2:	f1c2 0110 	rsb	r1, r2, #16
 8021cb6:	437a      	muls	r2, r7
 8021cb8:	fb09 2901 	mla	r9, r9, r1, r2
 8021cbc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021cc0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021cc4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021cc8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021ccc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021cd0:	4302      	orrs	r2, r0
 8021cd2:	e795      	b.n	8021c00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021cd4:	f8ae 2000 	strh.w	r2, [lr]
 8021cd8:	e7d6      	b.n	8021c88 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021cda:	b017      	add	sp, #92	; 0x5c
 8021cdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021ce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021ce0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021ce4:	b085      	sub	sp, #20
 8021ce6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021cea:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021cee:	9103      	str	r1, [sp, #12]
 8021cf0:	fb00 7406 	mla	r4, r0, r6, r7
 8021cf4:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021cf8:	2800      	cmp	r0, #0
 8021cfa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021cfe:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021d02:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021d06:	9501      	str	r5, [sp, #4]
 8021d08:	eb02 0904 	add.w	r9, r2, r4
 8021d0c:	f2c0 8141 	blt.w	8021f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021d10:	4583      	cmp	fp, r0
 8021d12:	f340 813e 	ble.w	8021f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021d16:	2f00      	cmp	r7, #0
 8021d18:	f2c0 8137 	blt.w	8021f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021d1c:	42be      	cmp	r6, r7
 8021d1e:	f340 8134 	ble.w	8021f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021d22:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021d26:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021d2a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021d2e:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021d32:	4355      	muls	r5, r2
 8021d34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d38:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021d3c:	fb0c f203 	mul.w	r2, ip, r3
 8021d40:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021d44:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021d48:	441d      	add	r5, r3
 8021d4a:	f102 0320 	add.w	r3, r2, #32
 8021d4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d52:	0a1b      	lsrs	r3, r3, #8
 8021d54:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021d58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d5c:	431c      	orrs	r4, r3
 8021d5e:	1c7b      	adds	r3, r7, #1
 8021d60:	f100 811c 	bmi.w	8021f9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d64:	429e      	cmp	r6, r3
 8021d66:	f340 8119 	ble.w	8021f9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d6a:	2900      	cmp	r1, #0
 8021d6c:	f000 8119 	beq.w	8021fa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021d70:	9a01      	ldr	r2, [sp, #4]
 8021d72:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021d76:	8855      	ldrh	r5, [r2, #2]
 8021d78:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021d7c:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021d80:	fb08 f802 	mul.w	r8, r8, r2
 8021d84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021d88:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021d8c:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021d90:	435d      	muls	r5, r3
 8021d92:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021d96:	44d0      	add	r8, sl
 8021d98:	f105 0a20 	add.w	sl, r5, #32
 8021d9c:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021da0:	0a2d      	lsrs	r5, r5, #8
 8021da2:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021da6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021daa:	432a      	orrs	r2, r5
 8021dac:	3001      	adds	r0, #1
 8021dae:	f100 80fe 	bmi.w	8021fae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021db2:	4583      	cmp	fp, r0
 8021db4:	f340 80fb 	ble.w	8021fae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021db8:	f1be 0f00 	cmp.w	lr, #0
 8021dbc:	f000 80fc 	beq.w	8021fb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021dc0:	2f00      	cmp	r7, #0
 8021dc2:	f2c0 80f1 	blt.w	8021fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021dc6:	42be      	cmp	r6, r7
 8021dc8:	f340 80ee 	ble.w	8021fa8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021dcc:	9801      	ldr	r0, [sp, #4]
 8021dce:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021dd2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021dd6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021dda:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021dde:	fb0a fa00 	mul.w	sl, sl, r0
 8021de2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021de6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021dea:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021dee:	fb05 f808 	mul.w	r8, r5, r8
 8021df2:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021df6:	4482      	add	sl, r0
 8021df8:	f108 0020 	add.w	r0, r8, #32
 8021dfc:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021e00:	0a00      	lsrs	r0, r0, #8
 8021e02:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021e06:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e0a:	ea4b 0b00 	orr.w	fp, fp, r0
 8021e0e:	3701      	adds	r7, #1
 8021e10:	f100 80d7 	bmi.w	8021fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021e14:	42be      	cmp	r6, r7
 8021e16:	f340 80d4 	ble.w	8021fc2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021e1a:	2900      	cmp	r1, #0
 8021e1c:	f000 80d4 	beq.w	8021fc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021e20:	3601      	adds	r6, #1
 8021e22:	9801      	ldr	r0, [sp, #4]
 8021e24:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021e28:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021e2c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021e30:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021e34:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e38:	fb09 f906 	mul.w	r9, r9, r6
 8021e3c:	fb07 f800 	mul.w	r8, r7, r0
 8021e40:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021e44:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021e48:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021e4c:	44d1      	add	r9, sl
 8021e4e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021e52:	f108 0020 	add.w	r0, r8, #32
 8021e56:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021e5a:	0a00      	lsrs	r0, r0, #8
 8021e5c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e60:	4330      	orrs	r0, r6
 8021e62:	b28e      	uxth	r6, r1
 8021e64:	fa1f f98e 	uxth.w	r9, lr
 8021e68:	fb06 f809 	mul.w	r8, r6, r9
 8021e6c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021e70:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021e74:	0136      	lsls	r6, r6, #4
 8021e76:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e7a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021e7e:	9601      	str	r6, [sp, #4]
 8021e80:	ea4a 0404 	orr.w	r4, sl, r4
 8021e84:	fa1f f689 	uxth.w	r6, r9
 8021e88:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021e8c:	fb11 f90e 	smulbb	r9, r1, lr
 8021e90:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021e94:	9602      	str	r6, [sp, #8]
 8021e96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e9a:	4626      	mov	r6, r4
 8021e9c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021ea0:	f1ce 0410 	rsb	r4, lr, #16
 8021ea4:	1a64      	subs	r4, r4, r1
 8021ea6:	ea4a 0202 	orr.w	r2, sl, r2
 8021eaa:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021eae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021eb2:	434a      	muls	r2, r1
 8021eb4:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021eb8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ebc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021ec0:	fb04 2406 	mla	r4, r4, r6, r2
 8021ec4:	ea4a 0000 	orr.w	r0, sl, r0
 8021ec8:	fb09 4200 	mla	r2, r9, r0, r4
 8021ecc:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021ed0:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021ed4:	9801      	ldr	r0, [sp, #4]
 8021ed6:	9903      	ldr	r1, [sp, #12]
 8021ed8:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021edc:	ea44 0b0b 	orr.w	fp, r4, fp
 8021ee0:	9c02      	ldr	r4, [sp, #8]
 8021ee2:	8809      	ldrh	r1, [r1, #0]
 8021ee4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021ee8:	1b00      	subs	r0, r0, r4
 8021eea:	9c01      	ldr	r4, [sp, #4]
 8021eec:	eba4 0608 	sub.w	r6, r4, r8
 8021ef0:	b2b6      	uxth	r6, r6
 8021ef2:	b280      	uxth	r0, r0
 8021ef4:	4373      	muls	r3, r6
 8021ef6:	fb0c 3300 	mla	r3, ip, r0, r3
 8021efa:	9802      	ldr	r0, [sp, #8]
 8021efc:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021f00:	fb00 3505 	mla	r5, r0, r5, r3
 8021f04:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021f08:	fb08 5707 	mla	r7, r8, r7, r5
 8021f0c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021f10:	120b      	asrs	r3, r1, #8
 8021f12:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021f16:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021f1a:	b2ff      	uxtb	r7, r7
 8021f1c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021f20:	10c8      	asrs	r0, r1, #3
 8021f22:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021f26:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021f2a:	00c9      	lsls	r1, r1, #3
 8021f2c:	437b      	muls	r3, r7
 8021f2e:	ea42 0e0e 	orr.w	lr, r2, lr
 8021f32:	b2c9      	uxtb	r1, r1
 8021f34:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021f38:	fa1f f28e 	uxth.w	r2, lr
 8021f3c:	4378      	muls	r0, r7
 8021f3e:	434f      	muls	r7, r1
 8021f40:	1c59      	adds	r1, r3, #1
 8021f42:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021f46:	1213      	asrs	r3, r2, #8
 8021f48:	f023 0307 	bic.w	r3, r3, #7
 8021f4c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021f50:	1c41      	adds	r1, r0, #1
 8021f52:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021f56:	10d1      	asrs	r1, r2, #3
 8021f58:	f021 0103 	bic.w	r1, r1, #3
 8021f5c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021f60:	021b      	lsls	r3, r3, #8
 8021f62:	00c9      	lsls	r1, r1, #3
 8021f64:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021f68:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021f6c:	430b      	orrs	r3, r1
 8021f6e:	1c79      	adds	r1, r7, #1
 8021f70:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021f74:	00d2      	lsls	r2, r2, #3
 8021f76:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021f7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f7e:	431a      	orrs	r2, r3
 8021f80:	9b03      	ldr	r3, [sp, #12]
 8021f82:	801a      	strh	r2, [r3, #0]
 8021f84:	b005      	add	sp, #20
 8021f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f8a:	f04f 0c00 	mov.w	ip, #0
 8021f8e:	4664      	mov	r4, ip
 8021f90:	e6e5      	b.n	8021d5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021f92:	2300      	movs	r3, #0
 8021f94:	469c      	mov	ip, r3
 8021f96:	461a      	mov	r2, r3
 8021f98:	461c      	mov	r4, r3
 8021f9a:	e707      	b.n	8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f9c:	2300      	movs	r3, #0
 8021f9e:	461a      	mov	r2, r3
 8021fa0:	e704      	b.n	8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021fa2:	460b      	mov	r3, r1
 8021fa4:	460a      	mov	r2, r1
 8021fa6:	e701      	b.n	8021dac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021fa8:	2500      	movs	r5, #0
 8021faa:	46ab      	mov	fp, r5
 8021fac:	e72f      	b.n	8021e0e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021fae:	2700      	movs	r7, #0
 8021fb0:	463d      	mov	r5, r7
 8021fb2:	4638      	mov	r0, r7
 8021fb4:	46bb      	mov	fp, r7
 8021fb6:	e754      	b.n	8021e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021fb8:	4677      	mov	r7, lr
 8021fba:	4675      	mov	r5, lr
 8021fbc:	4670      	mov	r0, lr
 8021fbe:	46f3      	mov	fp, lr
 8021fc0:	e74f      	b.n	8021e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021fc2:	2700      	movs	r7, #0
 8021fc4:	4638      	mov	r0, r7
 8021fc6:	e74c      	b.n	8021e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021fc8:	460f      	mov	r7, r1
 8021fca:	4608      	mov	r0, r1
 8021fcc:	e749      	b.n	8021e62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021fd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fd4:	b093      	sub	sp, #76	; 0x4c
 8021fd6:	9210      	str	r2, [sp, #64]	; 0x40
 8021fd8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021fda:	910e      	str	r1, [sp, #56]	; 0x38
 8021fdc:	9306      	str	r3, [sp, #24]
 8021fde:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021fe2:	9011      	str	r0, [sp, #68]	; 0x44
 8021fe4:	6850      	ldr	r0, [r2, #4]
 8021fe6:	6812      	ldr	r2, [r2, #0]
 8021fe8:	fb00 1303 	mla	r3, r0, r3, r1
 8021fec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021ff0:	9307      	str	r3, [sp, #28]
 8021ff2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ff4:	681b      	ldr	r3, [r3, #0]
 8021ff6:	9308      	str	r3, [sp, #32]
 8021ff8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021ffa:	685b      	ldr	r3, [r3, #4]
 8021ffc:	9309      	str	r3, [sp, #36]	; 0x24
 8021ffe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022000:	2b00      	cmp	r3, #0
 8022002:	dc03      	bgt.n	802200c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022004:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022006:	2b00      	cmp	r3, #0
 8022008:	f340 83b4 	ble.w	8022774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802200c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802200e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022012:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022016:	1e48      	subs	r0, r1, #1
 8022018:	1e55      	subs	r5, r2, #1
 802201a:	9b06      	ldr	r3, [sp, #24]
 802201c:	2b00      	cmp	r3, #0
 802201e:	f340 8163 	ble.w	80222e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8022022:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8022024:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022026:	1436      	asrs	r6, r6, #16
 8022028:	ea4f 4323 	mov.w	r3, r3, asr #16
 802202c:	d406      	bmi.n	802203c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802202e:	4286      	cmp	r6, r0
 8022030:	da04      	bge.n	802203c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022032:	2b00      	cmp	r3, #0
 8022034:	db02      	blt.n	802203c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022036:	42ab      	cmp	r3, r5
 8022038:	f2c0 8157 	blt.w	80222ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802203c:	3601      	adds	r6, #1
 802203e:	f100 8144 	bmi.w	80222ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022042:	42b1      	cmp	r1, r6
 8022044:	f2c0 8141 	blt.w	80222ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022048:	3301      	adds	r3, #1
 802204a:	f100 813e 	bmi.w	80222ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802204e:	429a      	cmp	r2, r3
 8022050:	f2c0 813b 	blt.w	80222ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022054:	9b06      	ldr	r3, [sp, #24]
 8022056:	9f07      	ldr	r7, [sp, #28]
 8022058:	930f      	str	r3, [sp, #60]	; 0x3c
 802205a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802205e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022060:	2b00      	cmp	r3, #0
 8022062:	f340 8164 	ble.w	802232e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022066:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022068:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802206a:	1418      	asrs	r0, r3, #16
 802206c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802206e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022072:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022074:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022078:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802207a:	142d      	asrs	r5, r5, #16
 802207c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022080:	f100 81ee 	bmi.w	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022084:	f102 3eff 	add.w	lr, r2, #4294967295
 8022088:	4575      	cmp	r5, lr
 802208a:	f280 81e9 	bge.w	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802208e:	2800      	cmp	r0, #0
 8022090:	f2c0 81e6 	blt.w	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022094:	f103 3eff 	add.w	lr, r3, #4294967295
 8022098:	4570      	cmp	r0, lr
 802209a:	f280 81e1 	bge.w	8022460 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802209e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80220a0:	b212      	sxth	r2, r2
 80220a2:	fb00 5002 	mla	r0, r0, r2, r5
 80220a6:	fa1f fe81 	uxth.w	lr, r1
 80220aa:	eb03 0a00 	add.w	sl, r3, r0
 80220ae:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80220b2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80220b6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80220ba:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80220be:	b29b      	uxth	r3, r3
 80220c0:	f1bc 0f00 	cmp.w	ip, #0
 80220c4:	f000 8179 	beq.w	80223ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80220c8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80220cc:	940a      	str	r4, [sp, #40]	; 0x28
 80220ce:	eb0a 0b02 	add.w	fp, sl, r2
 80220d2:	fa1f fa8c 	uxth.w	sl, ip
 80220d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80220da:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80220de:	fa1f fa8a 	uxth.w	sl, sl
 80220e2:	eba5 050e 	sub.w	r5, r5, lr
 80220e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80220ea:	940b      	str	r4, [sp, #44]	; 0x2c
 80220ec:	eba3 030a 	sub.w	r3, r3, sl
 80220f0:	b2ad      	uxth	r5, r5
 80220f2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80220f4:	b29b      	uxth	r3, r3
 80220f6:	fb08 f505 	mul.w	r5, r8, r5
 80220fa:	fb09 5303 	mla	r3, r9, r3, r5
 80220fe:	fb0a 3304 	mla	r3, sl, r4, r3
 8022102:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022104:	fb0e 3304 	mla	r3, lr, r4, r3
 8022108:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802210c:	2b00      	cmp	r3, #0
 802210e:	f000 80cf 	beq.w	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022112:	9c08      	ldr	r4, [sp, #32]
 8022114:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022118:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802211c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022120:	f000 8150 	beq.w	80223c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022124:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022128:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802212c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022130:	fb09 f000 	mul.w	r0, r9, r0
 8022134:	fb0a fe0e 	mul.w	lr, sl, lr
 8022138:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802213c:	f100 0b20 	add.w	fp, r0, #32
 8022140:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022144:	44ce      	add	lr, r9
 8022146:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802214a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802214e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022152:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022156:	ea4e 0909 	orr.w	r9, lr, r9
 802215a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802215e:	8868      	ldrh	r0, [r5, #2]
 8022160:	d019      	beq.n	8022196 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8022162:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022166:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802216a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802216e:	fb08 f800 	mul.w	r8, r8, r0
 8022172:	fb0a fe0e 	mul.w	lr, sl, lr
 8022176:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802217a:	f108 0b20 	add.w	fp, r8, #32
 802217e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8022182:	4486      	add	lr, r0
 8022184:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022188:	0a00      	lsrs	r0, r0, #8
 802218a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802218e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022192:	ea4e 0000 	orr.w	r0, lr, r0
 8022196:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802219a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802219e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80221a2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80221a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80221aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80221ae:	ea4e 0909 	orr.w	r9, lr, r9
 80221b2:	ea4a 0000 	orr.w	r0, sl, r0
 80221b6:	f1bc 0f00 	cmp.w	ip, #0
 80221ba:	f000 8105 	beq.w	80223c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80221be:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80221c2:	3a01      	subs	r2, #1
 80221c4:	0052      	lsls	r2, r2, #1
 80221c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80221c8:	3202      	adds	r2, #2
 80221ca:	2cff      	cmp	r4, #255	; 0xff
 80221cc:	eb05 0e02 	add.w	lr, r5, r2
 80221d0:	5aaa      	ldrh	r2, [r5, r2]
 80221d2:	d018      	beq.n	8022206 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80221d4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80221d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80221dc:	fb04 fa02 	mul.w	sl, r4, r2
 80221e0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221e4:	fb08 f805 	mul.w	r8, r8, r5
 80221e8:	f10a 0520 	add.w	r5, sl, #32
 80221ec:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80221f0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80221f4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80221f8:	4442      	add	r2, r8
 80221fa:	0a2d      	lsrs	r5, r5, #8
 80221fc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022200:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022204:	432a      	orrs	r2, r5
 8022206:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022208:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802220c:	2cff      	cmp	r4, #255	; 0xff
 802220e:	d01a      	beq.n	8022246 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022210:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8022214:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022218:	fb04 fa05 	mul.w	sl, r4, r5
 802221c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022220:	fb08 f80e 	mul.w	r8, r8, lr
 8022224:	f10a 0e20 	add.w	lr, sl, #32
 8022228:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802222c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022230:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022234:	4445      	add	r5, r8
 8022236:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802223a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802223e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8022242:	ea45 050e 	orr.w	r5, r5, lr
 8022246:	fb1c fe01 	smulbb	lr, ip, r1
 802224a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802224e:	f1cc 0810 	rsb	r8, ip, #16
 8022252:	eba8 0801 	sub.w	r8, r8, r1
 8022256:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802225a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802225e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022262:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022266:	4341      	muls	r1, r0
 8022268:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802226c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022270:	ea4a 0202 	orr.w	r2, sl, r2
 8022274:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022278:	fb09 1108 	mla	r1, r9, r8, r1
 802227c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022280:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022284:	fb0c 1102 	mla	r1, ip, r2, r1
 8022288:	ea4b 0505 	orr.w	r5, fp, r5
 802228c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022290:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022294:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022298:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802229c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80222a0:	ea42 0e0e 	orr.w	lr, r2, lr
 80222a4:	fa1f f28e 	uxth.w	r2, lr
 80222a8:	2bff      	cmp	r3, #255	; 0xff
 80222aa:	f040 80a1 	bne.w	80223f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80222ae:	803a      	strh	r2, [r7, #0]
 80222b0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222b2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80222b4:	4413      	add	r3, r2
 80222b6:	931d      	str	r3, [sp, #116]	; 0x74
 80222b8:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80222ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80222bc:	441a      	add	r2, r3
 80222be:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222c0:	921e      	str	r2, [sp, #120]	; 0x78
 80222c2:	3b01      	subs	r3, #1
 80222c4:	3702      	adds	r7, #2
 80222c6:	930f      	str	r3, [sp, #60]	; 0x3c
 80222c8:	e6c9      	b.n	802205e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80222ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222cc:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 80222ce:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 80222d0:	4433      	add	r3, r6
 80222d2:	931d      	str	r3, [sp, #116]	; 0x74
 80222d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80222d6:	441c      	add	r4, r3
 80222d8:	9b06      	ldr	r3, [sp, #24]
 80222da:	941e      	str	r4, [sp, #120]	; 0x78
 80222dc:	3b01      	subs	r3, #1
 80222de:	9306      	str	r3, [sp, #24]
 80222e0:	9b07      	ldr	r3, [sp, #28]
 80222e2:	3302      	adds	r3, #2
 80222e4:	9307      	str	r3, [sp, #28]
 80222e6:	e698      	b.n	802201a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80222e8:	d028      	beq.n	802233c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80222ea:	9b06      	ldr	r3, [sp, #24]
 80222ec:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80222ee:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80222f0:	3b01      	subs	r3, #1
 80222f2:	fb00 5003 	mla	r0, r0, r3, r5
 80222f6:	1400      	asrs	r0, r0, #16
 80222f8:	f53f aeac 	bmi.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222fc:	3901      	subs	r1, #1
 80222fe:	4288      	cmp	r0, r1
 8022300:	f6bf aea8 	bge.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022304:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022306:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022308:	fb01 0303 	mla	r3, r1, r3, r0
 802230c:	141b      	asrs	r3, r3, #16
 802230e:	f53f aea1 	bmi.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022312:	3a01      	subs	r2, #1
 8022314:	4293      	cmp	r3, r2
 8022316:	f6bf ae9d 	bge.w	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802231a:	9b06      	ldr	r3, [sp, #24]
 802231c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022320:	930f      	str	r3, [sp, #60]	; 0x3c
 8022322:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022326:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022328:	2b00      	cmp	r3, #0
 802232a:	f300 80b6 	bgt.w	802249a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802232e:	9b06      	ldr	r3, [sp, #24]
 8022330:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022334:	9b07      	ldr	r3, [sp, #28]
 8022336:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802233a:	9307      	str	r3, [sp, #28]
 802233c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802233e:	2b00      	cmp	r3, #0
 8022340:	f340 8218 	ble.w	8022774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022344:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022348:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802234c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022350:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022352:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022356:	ee31 1a05 	vadd.f32	s2, s2, s10
 802235a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802235e:	eef0 6a62 	vmov.f32	s13, s5
 8022362:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022366:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802236a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802236e:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8022372:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022376:	eef0 6a43 	vmov.f32	s13, s6
 802237a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802237e:	ee12 2a90 	vmov	r2, s5
 8022382:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022386:	fb92 f3f3 	sdiv	r3, r2, r3
 802238a:	ee13 2a10 	vmov	r2, s6
 802238e:	931f      	str	r3, [sp, #124]	; 0x7c
 8022390:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022392:	fb92 f3f3 	sdiv	r3, r2, r3
 8022396:	9320      	str	r3, [sp, #128]	; 0x80
 8022398:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802239a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802239c:	3b01      	subs	r3, #1
 802239e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80223a2:	930e      	str	r3, [sp, #56]	; 0x38
 80223a4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80223a6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80223aa:	bf08      	it	eq
 80223ac:	4613      	moveq	r3, r2
 80223ae:	9306      	str	r3, [sp, #24]
 80223b0:	eeb0 3a67 	vmov.f32	s6, s15
 80223b4:	eef0 2a47 	vmov.f32	s5, s14
 80223b8:	e621      	b.n	8021ffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80223ba:	fb08 f505 	mul.w	r5, r8, r5
 80223be:	fb09 5303 	mla	r3, r9, r3, r5
 80223c2:	e6a1      	b.n	8022108 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80223c4:	4681      	mov	r9, r0
 80223c6:	e6c8      	b.n	802215a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80223c8:	f1c1 0210 	rsb	r2, r1, #16
 80223cc:	4341      	muls	r1, r0
 80223ce:	fb09 1902 	mla	r9, r9, r2, r1
 80223d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80223d6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80223da:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80223de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80223e2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80223e6:	ea42 0909 	orr.w	r9, r2, r9
 80223ea:	fa1f f289 	uxth.w	r2, r9
 80223ee:	e75b      	b.n	80222a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80223f0:	f8b7 c000 	ldrh.w	ip, [r7]
 80223f4:	43db      	mvns	r3, r3
 80223f6:	ea4f 202c 	mov.w	r0, ip, asr #8
 80223fa:	fa5f fe83 	uxtb.w	lr, r3
 80223fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022402:	fb00 f00e 	mul.w	r0, r0, lr
 8022406:	1c41      	adds	r1, r0, #1
 8022408:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802240c:	1211      	asrs	r1, r2, #8
 802240e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8022412:	f021 0107 	bic.w	r1, r1, #7
 8022416:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802241a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802241e:	48d7      	ldr	r0, [pc, #860]	; (802277c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022420:	fb05 f50e 	mul.w	r5, r5, lr
 8022424:	b2c9      	uxtb	r1, r1
 8022426:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802242a:	1c69      	adds	r1, r5, #1
 802242c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022430:	10d1      	asrs	r1, r2, #3
 8022432:	f021 0103 	bic.w	r1, r1, #3
 8022436:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802243a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802243e:	b2db      	uxtb	r3, r3
 8022440:	00c9      	lsls	r1, r1, #3
 8022442:	fb03 f30e 	mul.w	r3, r3, lr
 8022446:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802244a:	4301      	orrs	r1, r0
 802244c:	1c58      	adds	r0, r3, #1
 802244e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8022452:	00d2      	lsls	r2, r2, #3
 8022454:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022458:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802245c:	430a      	orrs	r2, r1
 802245e:	e726      	b.n	80222ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022460:	f115 0e01 	adds.w	lr, r5, #1
 8022464:	f53f af24 	bmi.w	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022468:	4572      	cmp	r2, lr
 802246a:	f6ff af21 	blt.w	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802246e:	f110 0e01 	adds.w	lr, r0, #1
 8022472:	f53f af1d 	bmi.w	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022476:	4573      	cmp	r3, lr
 8022478:	f6ff af1a 	blt.w	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802247c:	b21b      	sxth	r3, r3
 802247e:	b212      	sxth	r2, r2
 8022480:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022484:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022488:	9301      	str	r3, [sp, #4]
 802248a:	9200      	str	r2, [sp, #0]
 802248c:	4639      	mov	r1, r7
 802248e:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8022492:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022494:	f7ff fc24 	bl	8021ce0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022498:	e70a      	b.n	80222b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802249a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802249c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80224a0:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80224a2:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80224a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80224a8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80224ac:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80224ae:	141f      	asrs	r7, r3, #16
 80224b0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80224b2:	141b      	asrs	r3, r3, #16
 80224b4:	fb01 3707 	mla	r7, r1, r7, r3
 80224b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80224ba:	fa1f fc82 	uxth.w	ip, r2
 80224be:	eb03 0a07 	add.w	sl, r3, r7
 80224c2:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80224c6:	f813 9007 	ldrb.w	r9, [r3, r7]
 80224ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80224ce:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80224d2:	b29b      	uxth	r3, r3
 80224d4:	2d00      	cmp	r5, #0
 80224d6:	f000 80fe 	beq.w	80226d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80224da:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80224de:	940c      	str	r4, [sp, #48]	; 0x30
 80224e0:	eb0a 0b01 	add.w	fp, sl, r1
 80224e4:	fa1f fa85 	uxth.w	sl, r5
 80224e8:	fb0a fc0c 	mul.w	ip, sl, ip
 80224ec:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80224f0:	fa1f fa8a 	uxth.w	sl, sl
 80224f4:	eba0 000c 	sub.w	r0, r0, ip
 80224f8:	eba3 030a 	sub.w	r3, r3, sl
 80224fc:	b280      	uxth	r0, r0
 80224fe:	fb08 f000 	mul.w	r0, r8, r0
 8022502:	b29b      	uxth	r3, r3
 8022504:	fb09 0303 	mla	r3, r9, r3, r0
 8022508:	980c      	ldr	r0, [sp, #48]	; 0x30
 802250a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802250e:	940d      	str	r4, [sp, #52]	; 0x34
 8022510:	fb0a 3300 	mla	r3, sl, r0, r3
 8022514:	fb0c 3304 	mla	r3, ip, r4, r3
 8022518:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802251c:	2b00      	cmp	r3, #0
 802251e:	f000 80cc 	beq.w	80226ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022522:	9808      	ldr	r0, [sp, #32]
 8022524:	9c08      	ldr	r4, [sp, #32]
 8022526:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802252a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802252e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8022532:	f000 80d5 	beq.w	80226e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022536:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802253a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802253e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022542:	fb09 f707 	mul.w	r7, r9, r7
 8022546:	fb0a fc0c 	mul.w	ip, sl, ip
 802254a:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802254e:	f107 0b20 	add.w	fp, r7, #32
 8022552:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022556:	44cc      	add	ip, r9
 8022558:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802255c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022560:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022564:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022568:	ea4c 0909 	orr.w	r9, ip, r9
 802256c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022570:	8847      	ldrh	r7, [r0, #2]
 8022572:	d019      	beq.n	80225a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022574:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022578:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802257c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022580:	fb08 f807 	mul.w	r8, r8, r7
 8022584:	fb0a fc0c 	mul.w	ip, sl, ip
 8022588:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802258c:	f108 0b20 	add.w	fp, r8, #32
 8022590:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8022594:	44bc      	add	ip, r7
 8022596:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802259a:	0a3f      	lsrs	r7, r7, #8
 802259c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80225a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80225a4:	ea4c 0707 	orr.w	r7, ip, r7
 80225a8:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80225ac:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80225b0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80225b4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80225b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80225bc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80225c0:	ea4c 0909 	orr.w	r9, ip, r9
 80225c4:	ea4a 0707 	orr.w	r7, sl, r7
 80225c8:	2d00      	cmp	r5, #0
 80225ca:	f000 808b 	beq.w	80226e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80225ce:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80225d2:	3901      	subs	r1, #1
 80225d4:	0049      	lsls	r1, r1, #1
 80225d6:	3102      	adds	r1, #2
 80225d8:	eb00 0c01 	add.w	ip, r0, r1
 80225dc:	5a41      	ldrh	r1, [r0, r1]
 80225de:	980c      	ldr	r0, [sp, #48]	; 0x30
 80225e0:	28ff      	cmp	r0, #255	; 0xff
 80225e2:	d019      	beq.n	8022618 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80225e4:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80225e6:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80225ea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80225ee:	fb04 fa01 	mul.w	sl, r4, r1
 80225f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80225f6:	fb08 f800 	mul.w	r8, r8, r0
 80225fa:	f10a 0020 	add.w	r0, sl, #32
 80225fe:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8022602:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022606:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802260a:	4441      	add	r1, r8
 802260c:	0a00      	lsrs	r0, r0, #8
 802260e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8022612:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022616:	4301      	orrs	r1, r0
 8022618:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802261a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802261e:	2cff      	cmp	r4, #255	; 0xff
 8022620:	d01a      	beq.n	8022658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 8022622:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8022626:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802262a:	fb04 fa00 	mul.w	sl, r4, r0
 802262e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022632:	fb08 f80c 	mul.w	r8, r8, ip
 8022636:	f10a 0c20 	add.w	ip, sl, #32
 802263a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802263e:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8022642:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022646:	4440      	add	r0, r8
 8022648:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802264c:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022650:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022654:	ea40 000c 	orr.w	r0, r0, ip
 8022658:	fb15 fc02 	smulbb	ip, r5, r2
 802265c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022660:	f1c5 0810 	rsb	r8, r5, #16
 8022664:	eba8 0802 	sub.w	r8, r8, r2
 8022668:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802266c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022670:	437a      	muls	r2, r7
 8022672:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022676:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802267a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802267e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022682:	fb09 2208 	mla	r2, r9, r8, r2
 8022686:	ea4a 0101 	orr.w	r1, sl, r1
 802268a:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802268e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022692:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022696:	fb05 2201 	mla	r2, r5, r1, r2
 802269a:	ea4b 0000 	orr.w	r0, fp, r0
 802269e:	fb0c 2200 	mla	r2, ip, r0, r2
 80226a2:	0d57      	lsrs	r7, r2, #21
 80226a4:	0952      	lsrs	r2, r2, #5
 80226a6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80226aa:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226ae:	433a      	orrs	r2, r7
 80226b0:	2bff      	cmp	r3, #255	; 0xff
 80226b2:	b292      	uxth	r2, r2
 80226b4:	d127      	bne.n	8022706 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80226b6:	f8ae 2000 	strh.w	r2, [lr]
 80226ba:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80226bc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80226be:	4413      	add	r3, r2
 80226c0:	931d      	str	r3, [sp, #116]	; 0x74
 80226c2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80226c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80226c6:	441a      	add	r2, r3
 80226c8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80226ca:	921e      	str	r2, [sp, #120]	; 0x78
 80226cc:	3b01      	subs	r3, #1
 80226ce:	f10e 0e02 	add.w	lr, lr, #2
 80226d2:	930f      	str	r3, [sp, #60]	; 0x3c
 80226d4:	e627      	b.n	8022326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80226d6:	fb08 f000 	mul.w	r0, r8, r0
 80226da:	fb09 0303 	mla	r3, r9, r3, r0
 80226de:	e71b      	b.n	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80226e0:	46b9      	mov	r9, r7
 80226e2:	e743      	b.n	802256c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80226e4:	f1c2 0110 	rsb	r1, r2, #16
 80226e8:	437a      	muls	r2, r7
 80226ea:	fb09 2901 	mla	r9, r9, r1, r2
 80226ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80226f2:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80226f6:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80226fa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022702:	4302      	orrs	r2, r0
 8022704:	e7d4      	b.n	80226b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022706:	f8be 7000 	ldrh.w	r7, [lr]
 802270a:	4c1c      	ldr	r4, [pc, #112]	; (802277c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802270c:	43db      	mvns	r3, r3
 802270e:	1238      	asrs	r0, r7, #8
 8022710:	fa5f fc83 	uxtb.w	ip, r3
 8022714:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022718:	10fd      	asrs	r5, r7, #3
 802271a:	fb00 f00c 	mul.w	r0, r0, ip
 802271e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022722:	fb05 f10c 	mul.w	r1, r5, ip
 8022726:	1c45      	adds	r5, r0, #1
 8022728:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802272c:	1215      	asrs	r5, r2, #8
 802272e:	f025 0507 	bic.w	r5, r5, #7
 8022732:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022736:	1c4d      	adds	r5, r1, #1
 8022738:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802273c:	10d1      	asrs	r1, r2, #3
 802273e:	f021 0103 	bic.w	r1, r1, #3
 8022742:	00fb      	lsls	r3, r7, #3
 8022744:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022748:	b2db      	uxtb	r3, r3
 802274a:	b2c0      	uxtb	r0, r0
 802274c:	00c9      	lsls	r1, r1, #3
 802274e:	fb03 f30c 	mul.w	r3, r3, ip
 8022752:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022756:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802275a:	4308      	orrs	r0, r1
 802275c:	1c59      	adds	r1, r3, #1
 802275e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022762:	00d2      	lsls	r2, r2, #3
 8022764:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022768:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802276c:	4318      	orrs	r0, r3
 802276e:	f8ae 0000 	strh.w	r0, [lr]
 8022772:	e7a2      	b.n	80226ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022774:	b013      	add	sp, #76	; 0x4c
 8022776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802277a:	bf00      	nop
 802277c:	fffff800 	.word	0xfffff800

08022780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022780:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022784:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022788:	fb05 4c03 	mla	ip, r5, r3, r4
 802278c:	2d00      	cmp	r5, #0
 802278e:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022792:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8022796:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802279a:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802279e:	8808      	ldrh	r0, [r1, #0]
 80227a0:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80227a4:	f2c0 80a7 	blt.w	80228f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80227a8:	45aa      	cmp	sl, r5
 80227aa:	f340 80a4 	ble.w	80228f6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80227ae:	2c00      	cmp	r4, #0
 80227b0:	f2c0 809f 	blt.w	80228f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80227b4:	42a3      	cmp	r3, r4
 80227b6:	f340 809c 	ble.w	80228f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80227ba:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80227be:	1c62      	adds	r2, r4, #1
 80227c0:	f100 809c 	bmi.w	80228fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227c4:	4293      	cmp	r3, r2
 80227c6:	f340 8099 	ble.w	80228fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227ca:	f1b9 0f00 	cmp.w	r9, #0
 80227ce:	f000 8095 	beq.w	80228fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227d2:	f8be c002 	ldrh.w	ip, [lr, #2]
 80227d6:	3501      	adds	r5, #1
 80227d8:	f100 8094 	bmi.w	8022904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227dc:	45aa      	cmp	sl, r5
 80227de:	f340 8091 	ble.w	8022904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227e2:	2f00      	cmp	r7, #0
 80227e4:	f000 808e 	beq.w	8022904 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227e8:	2c00      	cmp	r4, #0
 80227ea:	f2c0 8089 	blt.w	8022900 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227ee:	42a3      	cmp	r3, r4
 80227f0:	f340 8086 	ble.w	8022900 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227f4:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80227f8:	3401      	adds	r4, #1
 80227fa:	f100 8086 	bmi.w	802290a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227fe:	42a3      	cmp	r3, r4
 8022800:	f340 8083 	ble.w	802290a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022804:	f1b9 0f00 	cmp.w	r9, #0
 8022808:	d07f      	beq.n	802290a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802280a:	3301      	adds	r3, #1
 802280c:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022810:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022814:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022818:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802281c:	fb19 fe07 	smulbb	lr, r9, r7
 8022820:	ea44 0808 	orr.w	r8, r4, r8
 8022824:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022828:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802282c:	f1c7 0210 	rsb	r2, r7, #16
 8022830:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022834:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022838:	ea44 0c0c 	orr.w	ip, r4, ip
 802283c:	eba2 0209 	sub.w	r2, r2, r9
 8022840:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022844:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022848:	fb04 f40c 	mul.w	r4, r4, ip
 802284c:	fb02 4808 	mla	r8, r2, r8, r4
 8022850:	041a      	lsls	r2, r3, #16
 8022852:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022856:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802285a:	4313      	orrs	r3, r2
 802285c:	042a      	lsls	r2, r5, #16
 802285e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022862:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022866:	fb0e 8303 	mla	r3, lr, r3, r8
 802286a:	432a      	orrs	r2, r5
 802286c:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022870:	fb07 3202 	mla	r2, r7, r2, r3
 8022874:	0d53      	lsrs	r3, r2, #21
 8022876:	0952      	lsrs	r2, r2, #5
 8022878:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802287c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022880:	431a      	orrs	r2, r3
 8022882:	b293      	uxth	r3, r2
 8022884:	b2b4      	uxth	r4, r6
 8022886:	1202      	asrs	r2, r0, #8
 8022888:	43f6      	mvns	r6, r6
 802288a:	b2f6      	uxtb	r6, r6
 802288c:	121d      	asrs	r5, r3, #8
 802288e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022892:	fb12 f206 	smulbb	r2, r2, r6
 8022896:	10c7      	asrs	r7, r0, #3
 8022898:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802289c:	00c0      	lsls	r0, r0, #3
 802289e:	fb05 2504 	mla	r5, r5, r4, r2
 80228a2:	b2c0      	uxtb	r0, r0
 80228a4:	10da      	asrs	r2, r3, #3
 80228a6:	00db      	lsls	r3, r3, #3
 80228a8:	b2db      	uxtb	r3, r3
 80228aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80228ae:	fb10 f006 	smulbb	r0, r0, r6
 80228b2:	b2ad      	uxth	r5, r5
 80228b4:	fb03 0004 	mla	r0, r3, r4, r0
 80228b8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80228bc:	fb17 f706 	smulbb	r7, r7, r6
 80228c0:	b280      	uxth	r0, r0
 80228c2:	1c6b      	adds	r3, r5, #1
 80228c4:	fb02 7204 	mla	r2, r2, r4, r7
 80228c8:	b292      	uxth	r2, r2
 80228ca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80228ce:	1c43      	adds	r3, r0, #1
 80228d0:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80228d4:	1c50      	adds	r0, r2, #1
 80228d6:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80228da:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80228de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228e2:	0952      	lsrs	r2, r2, #5
 80228e4:	432b      	orrs	r3, r5
 80228e6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228ea:	4313      	orrs	r3, r2
 80228ec:	800b      	strh	r3, [r1, #0]
 80228ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80228f2:	4680      	mov	r8, r0
 80228f4:	e763      	b.n	80227be <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80228f6:	4684      	mov	ip, r0
 80228f8:	4680      	mov	r8, r0
 80228fa:	e76c      	b.n	80227d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80228fc:	4684      	mov	ip, r0
 80228fe:	e76a      	b.n	80227d6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022900:	4605      	mov	r5, r0
 8022902:	e779      	b.n	80227f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022904:	4603      	mov	r3, r0
 8022906:	4605      	mov	r5, r0
 8022908:	e782      	b.n	8022810 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802290a:	4603      	mov	r3, r0
 802290c:	e780      	b.n	8022810 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802290e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802290e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022912:	b093      	sub	sp, #76	; 0x4c
 8022914:	461d      	mov	r5, r3
 8022916:	9210      	str	r2, [sp, #64]	; 0x40
 8022918:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802291a:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802291e:	920b      	str	r2, [sp, #44]	; 0x2c
 8022920:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022924:	910a      	str	r1, [sp, #40]	; 0x28
 8022926:	6859      	ldr	r1, [r3, #4]
 8022928:	681b      	ldr	r3, [r3, #0]
 802292a:	9011      	str	r0, [sp, #68]	; 0x44
 802292c:	fb01 2707 	mla	r7, r1, r7, r2
 8022930:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022934:	9307      	str	r3, [sp, #28]
 8022936:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022938:	681b      	ldr	r3, [r3, #0]
 802293a:	9309      	str	r3, [sp, #36]	; 0x24
 802293c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802293e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022942:	43db      	mvns	r3, r3
 8022944:	b2db      	uxtb	r3, r3
 8022946:	9308      	str	r3, [sp, #32]
 8022948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802294a:	2b00      	cmp	r3, #0
 802294c:	dc03      	bgt.n	8022956 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802294e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022950:	2b00      	cmp	r3, #0
 8022952:	f340 8203 	ble.w	8022d5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022956:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022958:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802295c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022960:	1e48      	subs	r0, r1, #1
 8022962:	f102 3cff 	add.w	ip, r2, #4294967295
 8022966:	2d00      	cmp	r5, #0
 8022968:	f340 80da 	ble.w	8022b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802296c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022970:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022974:	d406      	bmi.n	8022984 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022976:	4586      	cmp	lr, r0
 8022978:	da04      	bge.n	8022984 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802297a:	2b00      	cmp	r3, #0
 802297c:	db02      	blt.n	8022984 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802297e:	4563      	cmp	r3, ip
 8022980:	f2c0 80cf 	blt.w	8022b22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022984:	f11e 0e01 	adds.w	lr, lr, #1
 8022988:	f100 80c1 	bmi.w	8022b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802298c:	4571      	cmp	r1, lr
 802298e:	f2c0 80be 	blt.w	8022b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022992:	3301      	adds	r3, #1
 8022994:	f100 80bb 	bmi.w	8022b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022998:	429a      	cmp	r2, r3
 802299a:	f2c0 80b8 	blt.w	8022b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802299e:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80229a2:	46a9      	mov	r9, r5
 80229a4:	f1b9 0f00 	cmp.w	r9, #0
 80229a8:	f340 80d8 	ble.w	8022b5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80229ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80229ae:	1421      	asrs	r1, r4, #16
 80229b0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80229b4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80229b8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80229bc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80229c0:	f100 8111 	bmi.w	8022be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229c4:	f10e 3aff 	add.w	sl, lr, #4294967295
 80229c8:	4551      	cmp	r1, sl
 80229ca:	f280 810c 	bge.w	8022be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229ce:	2800      	cmp	r0, #0
 80229d0:	f2c0 8109 	blt.w	8022be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229d4:	f103 3aff 	add.w	sl, r3, #4294967295
 80229d8:	4550      	cmp	r0, sl
 80229da:	f280 8104 	bge.w	8022be6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229de:	fa0f f38e 	sxth.w	r3, lr
 80229e2:	fb00 1103 	mla	r1, r0, r3, r1
 80229e6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80229e8:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80229ec:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80229f0:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80229f4:	f1bc 0f00 	cmp.w	ip, #0
 80229f8:	d007      	beq.n	8022a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80229fa:	005b      	lsls	r3, r3, #1
 80229fc:	eb0a 0003 	add.w	r0, sl, r3
 8022a00:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022a04:	930c      	str	r3, [sp, #48]	; 0x30
 8022a06:	8843      	ldrh	r3, [r0, #2]
 8022a08:	930d      	str	r3, [sp, #52]	; 0x34
 8022a0a:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022a0e:	fb12 f30c 	smulbb	r3, r2, ip
 8022a12:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022a16:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022a1a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a1e:	10db      	asrs	r3, r3, #3
 8022a20:	ea40 000e 	orr.w	r0, r0, lr
 8022a24:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022a28:	f1cc 0e10 	rsb	lr, ip, #16
 8022a2c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022a30:	ebae 0e02 	sub.w	lr, lr, r2
 8022a34:	ea4a 0101 	orr.w	r1, sl, r1
 8022a38:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a3c:	4351      	muls	r1, r2
 8022a3e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022a40:	9f08      	ldr	r7, [sp, #32]
 8022a42:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022a46:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022a4a:	0410      	lsls	r0, r2, #16
 8022a4c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a50:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a54:	4310      	orrs	r0, r2
 8022a56:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022a58:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022a5a:	0412      	lsls	r2, r2, #16
 8022a5c:	fb03 e000 	mla	r0, r3, r0, lr
 8022a60:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022a64:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022a68:	ea42 020e 	orr.w	r2, r2, lr
 8022a6c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a70:	fb03 0302 	mla	r3, r3, r2, r0
 8022a74:	0d5a      	lsrs	r2, r3, #21
 8022a76:	095b      	lsrs	r3, r3, #5
 8022a78:	f8b8 0000 	ldrh.w	r0, [r8]
 8022a7c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a80:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a84:	4313      	orrs	r3, r2
 8022a86:	b29b      	uxth	r3, r3
 8022a88:	1201      	asrs	r1, r0, #8
 8022a8a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022a8e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022a92:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022a96:	fb11 f107 	smulbb	r1, r1, r7
 8022a9a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022a9e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022aa2:	00c0      	lsls	r0, r0, #3
 8022aa4:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022aa8:	b2c0      	uxtb	r0, r0
 8022aaa:	10d9      	asrs	r1, r3, #3
 8022aac:	00db      	lsls	r3, r3, #3
 8022aae:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022ab2:	b2db      	uxtb	r3, r3
 8022ab4:	fb10 f007 	smulbb	r0, r0, r7
 8022ab8:	fa1f fc8c 	uxth.w	ip, ip
 8022abc:	fb03 0302 	mla	r3, r3, r2, r0
 8022ac0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022ac4:	fb1e fe07 	smulbb	lr, lr, r7
 8022ac8:	fb01 e102 	mla	r1, r1, r2, lr
 8022acc:	b29a      	uxth	r2, r3
 8022ace:	f10c 0301 	add.w	r3, ip, #1
 8022ad2:	b289      	uxth	r1, r1
 8022ad4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022ad8:	1c53      	adds	r3, r2, #1
 8022ada:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022ade:	1c4a      	adds	r2, r1, #1
 8022ae0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ae4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022ae8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022aec:	0949      	lsrs	r1, r1, #5
 8022aee:	ea43 030c 	orr.w	r3, r3, ip
 8022af2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022af6:	430b      	orrs	r3, r1
 8022af8:	f8a8 3000 	strh.w	r3, [r8]
 8022afc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022afe:	441c      	add	r4, r3
 8022b00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b02:	f108 0802 	add.w	r8, r8, #2
 8022b06:	441e      	add	r6, r3
 8022b08:	f109 39ff 	add.w	r9, r9, #4294967295
 8022b0c:	e74a      	b.n	80229a4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022b0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022b10:	441c      	add	r4, r3
 8022b12:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022b14:	441e      	add	r6, r3
 8022b16:	9b07      	ldr	r3, [sp, #28]
 8022b18:	3302      	adds	r3, #2
 8022b1a:	3d01      	subs	r5, #1
 8022b1c:	9307      	str	r3, [sp, #28]
 8022b1e:	e722      	b.n	8022966 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022b20:	d022      	beq.n	8022b68 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022b22:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022b24:	1e6b      	subs	r3, r5, #1
 8022b26:	fb00 4003 	mla	r0, r0, r3, r4
 8022b2a:	1400      	asrs	r0, r0, #16
 8022b2c:	f53f af37 	bmi.w	802299e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b30:	3901      	subs	r1, #1
 8022b32:	4288      	cmp	r0, r1
 8022b34:	f6bf af33 	bge.w	802299e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b38:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022b3a:	fb01 6303 	mla	r3, r1, r3, r6
 8022b3e:	141b      	asrs	r3, r3, #16
 8022b40:	f53f af2d 	bmi.w	802299e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b44:	3a01      	subs	r2, #1
 8022b46:	4293      	cmp	r3, r2
 8022b48:	f6bf af29 	bge.w	802299e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b4c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022b50:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022b54:	46a8      	mov	r8, r5
 8022b56:	f1b8 0f00 	cmp.w	r8, #0
 8022b5a:	dc5e      	bgt.n	8022c1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022b5c:	9b07      	ldr	r3, [sp, #28]
 8022b5e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022b62:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022b66:	9307      	str	r3, [sp, #28]
 8022b68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b6a:	2b00      	cmp	r3, #0
 8022b6c:	f340 80f6 	ble.w	8022d5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022b70:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b7c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b82:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b8a:	eef0 6a62 	vmov.f32	s13, s5
 8022b8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b96:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b9a:	ee16 4a90 	vmov	r4, s13
 8022b9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022ba2:	eef0 6a43 	vmov.f32	s13, s6
 8022ba6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022baa:	ee12 2a90 	vmov	r2, s5
 8022bae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bb6:	ee13 2a10 	vmov	r2, s6
 8022bba:	931f      	str	r3, [sp, #124]	; 0x7c
 8022bbc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022bbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8022bc2:	9320      	str	r3, [sp, #128]	; 0x80
 8022bc4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022bc6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022bc8:	3b01      	subs	r3, #1
 8022bca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022bce:	930a      	str	r3, [sp, #40]	; 0x28
 8022bd0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022bd2:	ee16 6a90 	vmov	r6, s13
 8022bd6:	bf14      	ite	ne
 8022bd8:	461d      	movne	r5, r3
 8022bda:	4615      	moveq	r5, r2
 8022bdc:	eeb0 3a67 	vmov.f32	s6, s15
 8022be0:	eef0 2a47 	vmov.f32	s5, s14
 8022be4:	e6b0      	b.n	8022948 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022be6:	f111 0a01 	adds.w	sl, r1, #1
 8022bea:	d487      	bmi.n	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bec:	45d6      	cmp	lr, sl
 8022bee:	db85      	blt.n	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bf0:	f110 0a01 	adds.w	sl, r0, #1
 8022bf4:	d482      	bmi.n	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bf6:	4553      	cmp	r3, sl
 8022bf8:	db80      	blt.n	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bfa:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022bfc:	9101      	str	r1, [sp, #4]
 8022bfe:	b21b      	sxth	r3, r3
 8022c00:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022c04:	9300      	str	r3, [sp, #0]
 8022c06:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022c0a:	fa0f f38e 	sxth.w	r3, lr
 8022c0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022c10:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022c12:	4641      	mov	r1, r8
 8022c14:	f7ff fdb4 	bl	8022780 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022c18:	e770      	b.n	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022c1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c1c:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022c1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022c22:	1430      	asrs	r0, r6, #16
 8022c24:	1423      	asrs	r3, r4, #16
 8022c26:	fb01 3000 	mla	r0, r1, r0, r3
 8022c2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022c2c:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022c30:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022c34:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022c38:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c3c:	8858      	ldrh	r0, [r3, #2]
 8022c3e:	f1be 0f00 	cmp.w	lr, #0
 8022c42:	d00b      	beq.n	8022c5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022c44:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022c48:	3901      	subs	r1, #1
 8022c4a:	0049      	lsls	r1, r1, #1
 8022c4c:	3102      	adds	r1, #2
 8022c4e:	eb03 0b01 	add.w	fp, r3, r1
 8022c52:	5a5b      	ldrh	r3, [r3, r1]
 8022c54:	930e      	str	r3, [sp, #56]	; 0x38
 8022c56:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022c5a:	930f      	str	r3, [sp, #60]	; 0x3c
 8022c5c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022c60:	fb12 f30e 	smulbb	r3, r2, lr
 8022c64:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c68:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c6c:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022c70:	10db      	asrs	r3, r3, #3
 8022c72:	ea41 010c 	orr.w	r1, r1, ip
 8022c76:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022c7a:	f1ce 0c10 	rsb	ip, lr, #16
 8022c7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c82:	ebac 0c02 	sub.w	ip, ip, r2
 8022c86:	ea4b 0000 	orr.w	r0, fp, r0
 8022c8a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c8e:	4350      	muls	r0, r2
 8022c90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022c92:	9f08      	ldr	r7, [sp, #32]
 8022c94:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022c98:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022c9c:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022ca0:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022ca4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022ca6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022ca8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022cac:	0412      	lsls	r2, r2, #16
 8022cae:	ea4b 0101 	orr.w	r1, fp, r1
 8022cb2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022cb6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022cba:	fb03 c101 	mla	r1, r3, r1, ip
 8022cbe:	4302      	orrs	r2, r0
 8022cc0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022cc4:	fb03 1202 	mla	r2, r3, r2, r1
 8022cc8:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022ccc:	0952      	lsrs	r2, r2, #5
 8022cce:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022cd2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022cd6:	f8b9 2000 	ldrh.w	r2, [r9]
 8022cda:	ea4b 0303 	orr.w	r3, fp, r3
 8022cde:	b29b      	uxth	r3, r3
 8022ce0:	1211      	asrs	r1, r2, #8
 8022ce2:	1218      	asrs	r0, r3, #8
 8022ce4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ce8:	fb11 f107 	smulbb	r1, r1, r7
 8022cec:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022cf0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022cf4:	00d2      	lsls	r2, r2, #3
 8022cf6:	fb00 100a 	mla	r0, r0, sl, r1
 8022cfa:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022cfe:	10d9      	asrs	r1, r3, #3
 8022d00:	b2d2      	uxtb	r2, r2
 8022d02:	00db      	lsls	r3, r3, #3
 8022d04:	fb1c fc07 	smulbb	ip, ip, r7
 8022d08:	fb12 f207 	smulbb	r2, r2, r7
 8022d0c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d10:	b2db      	uxtb	r3, r3
 8022d12:	b280      	uxth	r0, r0
 8022d14:	fb01 c10a 	mla	r1, r1, sl, ip
 8022d18:	fb03 230a 	mla	r3, r3, sl, r2
 8022d1c:	b29b      	uxth	r3, r3
 8022d1e:	b289      	uxth	r1, r1
 8022d20:	1c42      	adds	r2, r0, #1
 8022d22:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022d26:	f101 0c01 	add.w	ip, r1, #1
 8022d2a:	1c5a      	adds	r2, r3, #1
 8022d2c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022d30:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022d34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d36:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022d3a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022d3e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022d42:	4310      	orrs	r0, r2
 8022d44:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022d48:	441c      	add	r4, r3
 8022d4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d4c:	ea40 000c 	orr.w	r0, r0, ip
 8022d50:	f829 0b02 	strh.w	r0, [r9], #2
 8022d54:	441e      	add	r6, r3
 8022d56:	f108 38ff 	add.w	r8, r8, #4294967295
 8022d5a:	e6fc      	b.n	8022b56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022d5c:	b013      	add	sp, #76	; 0x4c
 8022d5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022d62:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022d66:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022d6a:	fb0e 4703 	mla	r7, lr, r3, r4
 8022d6e:	f1be 0f00 	cmp.w	lr, #0
 8022d72:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022d76:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022d7a:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022d7e:	8808      	ldrh	r0, [r1, #0]
 8022d80:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022d84:	db60      	blt.n	8022e48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d86:	45f1      	cmp	r9, lr
 8022d88:	dd5e      	ble.n	8022e48 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d8a:	2c00      	cmp	r4, #0
 8022d8c:	db5a      	blt.n	8022e44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d8e:	42a3      	cmp	r3, r4
 8022d90:	dd58      	ble.n	8022e44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d92:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022d96:	1c62      	adds	r2, r4, #1
 8022d98:	d459      	bmi.n	8022e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d9a:	4293      	cmp	r3, r2
 8022d9c:	dd57      	ble.n	8022e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d9e:	2d00      	cmp	r5, #0
 8022da0:	d055      	beq.n	8022e4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022da2:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022da6:	f11e 0e01 	adds.w	lr, lr, #1
 8022daa:	d454      	bmi.n	8022e56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022dac:	45f1      	cmp	r9, lr
 8022dae:	dd52      	ble.n	8022e56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022db0:	2e00      	cmp	r6, #0
 8022db2:	d050      	beq.n	8022e56 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022db4:	2c00      	cmp	r4, #0
 8022db6:	db4c      	blt.n	8022e52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022db8:	42a3      	cmp	r3, r4
 8022dba:	dd4a      	ble.n	8022e52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022dbc:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022dc0:	3401      	adds	r4, #1
 8022dc2:	d405      	bmi.n	8022dd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022dc4:	42a3      	cmp	r3, r4
 8022dc6:	dd03      	ble.n	8022dd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022dc8:	b115      	cbz	r5, 8022dd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022dca:	3301      	adds	r3, #1
 8022dcc:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022dd0:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022dd4:	fb15 f406 	smulbb	r4, r5, r6
 8022dd8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022ddc:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022de0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022de4:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022de8:	ea43 0c0c 	orr.w	ip, r3, ip
 8022dec:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022df0:	f1c6 0310 	rsb	r3, r6, #16
 8022df4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022df8:	1b5b      	subs	r3, r3, r5
 8022dfa:	ea4e 0707 	orr.w	r7, lr, r7
 8022dfe:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022e02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022e06:	437d      	muls	r5, r7
 8022e08:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022e0c:	0403      	lsls	r3, r0, #16
 8022e0e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e12:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e16:	4318      	orrs	r0, r3
 8022e18:	0413      	lsls	r3, r2, #16
 8022e1a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022e1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022e22:	4313      	orrs	r3, r2
 8022e24:	fb04 c000 	mla	r0, r4, r0, ip
 8022e28:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022e2c:	fb06 0003 	mla	r0, r6, r3, r0
 8022e30:	0d43      	lsrs	r3, r0, #21
 8022e32:	0940      	lsrs	r0, r0, #5
 8022e34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022e38:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022e3c:	4318      	orrs	r0, r3
 8022e3e:	8008      	strh	r0, [r1, #0]
 8022e40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022e44:	4684      	mov	ip, r0
 8022e46:	e7a6      	b.n	8022d96 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022e48:	4607      	mov	r7, r0
 8022e4a:	4684      	mov	ip, r0
 8022e4c:	e7ab      	b.n	8022da6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e4e:	4607      	mov	r7, r0
 8022e50:	e7a9      	b.n	8022da6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e52:	4602      	mov	r2, r0
 8022e54:	e7b4      	b.n	8022dc0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022e56:	4602      	mov	r2, r0
 8022e58:	e7ba      	b.n	8022dd0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022e5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e5e:	b08f      	sub	sp, #60	; 0x3c
 8022e60:	461d      	mov	r5, r3
 8022e62:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022e64:	920c      	str	r2, [sp, #48]	; 0x30
 8022e66:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022e6a:	9107      	str	r1, [sp, #28]
 8022e6c:	6859      	ldr	r1, [r3, #4]
 8022e6e:	681b      	ldr	r3, [r3, #0]
 8022e70:	900d      	str	r0, [sp, #52]	; 0x34
 8022e72:	fb01 2707 	mla	r7, r1, r7, r2
 8022e76:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022e7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e7c:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022e80:	f8d3 8000 	ldr.w	r8, [r3]
 8022e84:	9b07      	ldr	r3, [sp, #28]
 8022e86:	2b00      	cmp	r3, #0
 8022e88:	dc03      	bgt.n	8022e92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022e8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022e8c:	2b00      	cmp	r3, #0
 8022e8e:	f340 8181 	ble.w	8023194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022e92:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e94:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e98:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022e9c:	1e48      	subs	r0, r1, #1
 8022e9e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022ea2:	2d00      	cmp	r5, #0
 8022ea4:	f340 809b 	ble.w	8022fde <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022ea8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022eac:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022eb0:	d406      	bmi.n	8022ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022eb2:	4586      	cmp	lr, r0
 8022eb4:	da04      	bge.n	8022ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022eb6:	2b00      	cmp	r3, #0
 8022eb8:	db02      	blt.n	8022ec0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022eba:	4563      	cmp	r3, ip
 8022ebc:	f2c0 8090 	blt.w	8022fe0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022ec0:	f11e 0e01 	adds.w	lr, lr, #1
 8022ec4:	f100 8084 	bmi.w	8022fd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ec8:	4571      	cmp	r1, lr
 8022eca:	f2c0 8081 	blt.w	8022fd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ece:	3301      	adds	r3, #1
 8022ed0:	d47e      	bmi.n	8022fd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ed2:	429a      	cmp	r2, r3
 8022ed4:	db7c      	blt.n	8022fd0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ed6:	46aa      	mov	sl, r5
 8022ed8:	46b9      	mov	r9, r7
 8022eda:	f1ba 0f00 	cmp.w	sl, #0
 8022ede:	f340 8099 	ble.w	8023014 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022ee2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022ee4:	1421      	asrs	r1, r4, #16
 8022ee6:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022eea:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022eee:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022ef2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022ef6:	f100 80d0 	bmi.w	802309a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022efa:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022efe:	4559      	cmp	r1, fp
 8022f00:	f280 80cb 	bge.w	802309a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022f04:	2800      	cmp	r0, #0
 8022f06:	f2c0 80c8 	blt.w	802309a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022f0a:	f103 3bff 	add.w	fp, r3, #4294967295
 8022f0e:	4558      	cmp	r0, fp
 8022f10:	f280 80c3 	bge.w	802309a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022f14:	fa0f fe8e 	sxth.w	lr, lr
 8022f18:	fb00 110e 	mla	r1, r0, lr, r1
 8022f1c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022f20:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022f24:	8841      	ldrh	r1, [r0, #2]
 8022f26:	f1bc 0f00 	cmp.w	ip, #0
 8022f2a:	d00b      	beq.n	8022f44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022f2c:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022f30:	3b01      	subs	r3, #1
 8022f32:	005b      	lsls	r3, r3, #1
 8022f34:	3302      	adds	r3, #2
 8022f36:	eb00 0e03 	add.w	lr, r0, r3
 8022f3a:	5ac3      	ldrh	r3, [r0, r3]
 8022f3c:	9308      	str	r3, [sp, #32]
 8022f3e:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022f42:	9309      	str	r3, [sp, #36]	; 0x24
 8022f44:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022f48:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f4c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022f50:	ea40 000b 	orr.w	r0, r0, fp
 8022f54:	fb12 f30c 	smulbb	r3, r2, ip
 8022f58:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f5c:	10db      	asrs	r3, r3, #3
 8022f5e:	f1cc 0e10 	rsb	lr, ip, #16
 8022f62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f66:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f6a:	ebae 0e02 	sub.w	lr, lr, r2
 8022f6e:	ea4b 0101 	orr.w	r1, fp, r1
 8022f72:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f76:	4351      	muls	r1, r2
 8022f78:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022f7a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022f7e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022f82:	0410      	lsls	r0, r2, #16
 8022f84:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f88:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f8c:	4310      	orrs	r0, r2
 8022f8e:	9a08      	ldr	r2, [sp, #32]
 8022f90:	9908      	ldr	r1, [sp, #32]
 8022f92:	0412      	lsls	r2, r2, #16
 8022f94:	fb03 e000 	mla	r0, r3, r0, lr
 8022f98:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f9c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022fa0:	ea42 020e 	orr.w	r2, r2, lr
 8022fa4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022fa8:	fb03 0302 	mla	r3, r3, r2, r0
 8022fac:	0d5a      	lsrs	r2, r3, #21
 8022fae:	095b      	lsrs	r3, r3, #5
 8022fb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022fb4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022fb8:	4313      	orrs	r3, r2
 8022fba:	f8a9 3000 	strh.w	r3, [r9]
 8022fbe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022fc0:	441c      	add	r4, r3
 8022fc2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022fc4:	f109 0902 	add.w	r9, r9, #2
 8022fc8:	441e      	add	r6, r3
 8022fca:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022fce:	e784      	b.n	8022eda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022fd0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022fd2:	441c      	add	r4, r3
 8022fd4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022fd6:	3d01      	subs	r5, #1
 8022fd8:	441e      	add	r6, r3
 8022fda:	3702      	adds	r7, #2
 8022fdc:	e761      	b.n	8022ea2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022fde:	d01d      	beq.n	802301c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022fe0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022fe2:	1e6b      	subs	r3, r5, #1
 8022fe4:	fb00 4003 	mla	r0, r0, r3, r4
 8022fe8:	1400      	asrs	r0, r0, #16
 8022fea:	f53f af74 	bmi.w	8022ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fee:	3901      	subs	r1, #1
 8022ff0:	4288      	cmp	r0, r1
 8022ff2:	f6bf af70 	bge.w	8022ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022ff6:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022ff8:	fb01 6303 	mla	r3, r1, r3, r6
 8022ffc:	141b      	asrs	r3, r3, #16
 8022ffe:	f53f af6a 	bmi.w	8022ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023002:	3a01      	subs	r2, #1
 8023004:	4293      	cmp	r3, r2
 8023006:	f6bf af66 	bge.w	8022ed6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802300a:	46a9      	mov	r9, r5
 802300c:	46ba      	mov	sl, r7
 802300e:	f1b9 0f00 	cmp.w	r9, #0
 8023012:	dc5a      	bgt.n	80230ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8023014:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023018:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802301c:	9b07      	ldr	r3, [sp, #28]
 802301e:	2b00      	cmp	r3, #0
 8023020:	f340 80b8 	ble.w	8023194 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023024:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802302c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023030:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023036:	ee31 1a05 	vadd.f32	s2, s2, s10
 802303a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802303e:	eef0 6a62 	vmov.f32	s13, s5
 8023042:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802304a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802304e:	ee16 4a90 	vmov	r4, s13
 8023052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023056:	eef0 6a43 	vmov.f32	s13, s6
 802305a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802305e:	ee12 2a90 	vmov	r2, s5
 8023062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023066:	fb92 f3f3 	sdiv	r3, r2, r3
 802306a:	ee13 2a10 	vmov	r2, s6
 802306e:	931b      	str	r3, [sp, #108]	; 0x6c
 8023070:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023072:	fb92 f3f3 	sdiv	r3, r2, r3
 8023076:	931c      	str	r3, [sp, #112]	; 0x70
 8023078:	9b07      	ldr	r3, [sp, #28]
 802307a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802307c:	3b01      	subs	r3, #1
 802307e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023082:	9307      	str	r3, [sp, #28]
 8023084:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023086:	ee16 6a90 	vmov	r6, s13
 802308a:	bf14      	ite	ne
 802308c:	461d      	movne	r5, r3
 802308e:	4615      	moveq	r5, r2
 8023090:	eeb0 3a67 	vmov.f32	s6, s15
 8023094:	eef0 2a47 	vmov.f32	s5, s14
 8023098:	e6f4      	b.n	8022e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802309a:	f111 0b01 	adds.w	fp, r1, #1
 802309e:	d48e      	bmi.n	8022fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230a0:	45de      	cmp	lr, fp
 80230a2:	db8c      	blt.n	8022fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230a4:	f110 0b01 	adds.w	fp, r0, #1
 80230a8:	d489      	bmi.n	8022fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230aa:	455b      	cmp	r3, fp
 80230ac:	db87      	blt.n	8022fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230ae:	b21b      	sxth	r3, r3
 80230b0:	e9cd 1001 	strd	r1, r0, [sp, #4]
 80230b4:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 80230b8:	9300      	str	r3, [sp, #0]
 80230ba:	4642      	mov	r2, r8
 80230bc:	fa0f f38e 	sxth.w	r3, lr
 80230c0:	4649      	mov	r1, r9
 80230c2:	980d      	ldr	r0, [sp, #52]	; 0x34
 80230c4:	f7ff fe4d 	bl	8022d62 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80230c8:	e779      	b.n	8022fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230ca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230cc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80230d0:	1420      	asrs	r0, r4, #16
 80230d2:	1431      	asrs	r1, r6, #16
 80230d4:	fb03 0101 	mla	r1, r3, r1, r0
 80230d8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80230dc:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80230e0:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80230e4:	8841      	ldrh	r1, [r0, #2]
 80230e6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80230ea:	f1be 0f00 	cmp.w	lr, #0
 80230ee:	d00b      	beq.n	8023108 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80230f0:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80230f4:	3b01      	subs	r3, #1
 80230f6:	005b      	lsls	r3, r3, #1
 80230f8:	3302      	adds	r3, #2
 80230fa:	eb00 0b03 	add.w	fp, r0, r3
 80230fe:	5ac3      	ldrh	r3, [r0, r3]
 8023100:	930a      	str	r3, [sp, #40]	; 0x28
 8023102:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8023106:	930b      	str	r3, [sp, #44]	; 0x2c
 8023108:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802310c:	fb12 f30e 	smulbb	r3, r2, lr
 8023110:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8023114:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023118:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802311c:	10db      	asrs	r3, r3, #3
 802311e:	ea40 000c 	orr.w	r0, r0, ip
 8023122:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023126:	f1ce 0c10 	rsb	ip, lr, #16
 802312a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802312e:	ebac 0c02 	sub.w	ip, ip, r2
 8023132:	ea4b 0101 	orr.w	r1, fp, r1
 8023136:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802313a:	4351      	muls	r1, r2
 802313c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802313e:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8023142:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023146:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802314a:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802314e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023150:	990a      	ldr	r1, [sp, #40]	; 0x28
 8023152:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8023156:	0412      	lsls	r2, r2, #16
 8023158:	ea4b 0000 	orr.w	r0, fp, r0
 802315c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023160:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8023164:	fb03 c000 	mla	r0, r3, r0, ip
 8023168:	ea42 0b0b 	orr.w	fp, r2, fp
 802316c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023170:	fb03 000b 	mla	r0, r3, fp, r0
 8023174:	0d43      	lsrs	r3, r0, #21
 8023176:	0940      	lsrs	r0, r0, #5
 8023178:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802317c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023180:	4318      	orrs	r0, r3
 8023182:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023184:	f82a 0b02 	strh.w	r0, [sl], #2
 8023188:	441c      	add	r4, r3
 802318a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802318c:	f109 39ff 	add.w	r9, r9, #4294967295
 8023190:	441e      	add	r6, r3
 8023192:	e73c      	b.n	802300e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8023194:	b00f      	add	sp, #60	; 0x3c
 8023196:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802319a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802319a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802319e:	b085      	sub	sp, #20
 80231a0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 80231a4:	9102      	str	r1, [sp, #8]
 80231a6:	2c00      	cmp	r4, #0
 80231a8:	fb04 7103 	mla	r1, r4, r3, r7
 80231ac:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 80231b0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 80231b4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80231b8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80231bc:	f2c0 811b 	blt.w	80233f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80231c0:	45a6      	cmp	lr, r4
 80231c2:	f340 8118 	ble.w	80233f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80231c6:	2f00      	cmp	r7, #0
 80231c8:	f2c0 8113 	blt.w	80233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80231cc:	42bb      	cmp	r3, r7
 80231ce:	f340 8110 	ble.w	80233f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80231d2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80231d6:	1c7a      	adds	r2, r7, #1
 80231d8:	f100 8110 	bmi.w	80233fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80231dc:	4293      	cmp	r3, r2
 80231de:	f340 810d 	ble.w	80233fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80231e2:	2e00      	cmp	r6, #0
 80231e4:	f000 810c 	beq.w	8023400 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80231e8:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80231ec:	3401      	adds	r4, #1
 80231ee:	f100 810b 	bmi.w	8023408 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231f2:	45a6      	cmp	lr, r4
 80231f4:	f340 8108 	ble.w	8023408 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231f8:	2800      	cmp	r0, #0
 80231fa:	f000 8108 	beq.w	802340e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80231fe:	2f00      	cmp	r7, #0
 8023200:	f2c0 8100 	blt.w	8023404 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023204:	42bb      	cmp	r3, r7
 8023206:	f340 80fd 	ble.w	8023404 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802320a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802320e:	3701      	adds	r7, #1
 8023210:	f100 8100 	bmi.w	8023414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023214:	42bb      	cmp	r3, r7
 8023216:	f340 80fd 	ble.w	8023414 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802321a:	2e00      	cmp	r6, #0
 802321c:	f000 80fc 	beq.w	8023418 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023220:	3301      	adds	r3, #1
 8023222:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023226:	b2b6      	uxth	r6, r6
 8023228:	b280      	uxth	r0, r0
 802322a:	fb00 fe06 	mul.w	lr, r0, r6
 802322e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023232:	0136      	lsls	r6, r6, #4
 8023234:	eba6 070e 	sub.w	r7, r6, lr
 8023238:	b280      	uxth	r0, r0
 802323a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802323e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023242:	b2bf      	uxth	r7, r7
 8023244:	1a1b      	subs	r3, r3, r0
 8023246:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802324a:	b29b      	uxth	r3, r3
 802324c:	fb0a f607 	mul.w	r6, sl, r7
 8023250:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023254:	fb0b 6603 	mla	r6, fp, r3, r6
 8023258:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802325c:	fb00 6609 	mla	r6, r0, r9, r6
 8023260:	fb0e 6608 	mla	r6, lr, r8, r6
 8023264:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023268:	9600      	str	r6, [sp, #0]
 802326a:	2e00      	cmp	r6, #0
 802326c:	f000 80be 	beq.w	80233ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023270:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023274:	fb0b fc0c 	mul.w	ip, fp, ip
 8023278:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802327c:	fb0b f505 	mul.w	r5, fp, r5
 8023280:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023284:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023288:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802328c:	44dc      	add	ip, fp
 802328e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023292:	9501      	str	r5, [sp, #4]
 8023294:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023298:	9503      	str	r5, [sp, #12]
 802329a:	9d01      	ldr	r5, [sp, #4]
 802329c:	9e02      	ldr	r6, [sp, #8]
 802329e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80232a2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80232a6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80232aa:	fb0a fc0c 	mul.w	ip, sl, ip
 80232ae:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80232b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80232b6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80232ba:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80232be:	4465      	add	r5, ip
 80232c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80232c4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80232c8:	fb09 fc0c 	mul.w	ip, r9, ip
 80232cc:	fb09 f904 	mul.w	r9, r9, r4
 80232d0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80232d4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80232d8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 80232dc:	fb08 f404 	mul.w	r4, r8, r4
 80232e0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80232e4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80232e8:	fb08 f802 	mul.w	r8, r8, r2
 80232ec:	fb0a fa01 	mul.w	sl, sl, r1
 80232f0:	0a22      	lsrs	r2, r4, #8
 80232f2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80232f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80232fa:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80232fe:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023302:	4414      	add	r4, r2
 8023304:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023308:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802330c:	0a2d      	lsrs	r5, r5, #8
 802330e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023312:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023316:	9a03      	ldr	r2, [sp, #12]
 8023318:	8836      	ldrh	r6, [r6, #0]
 802331a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802331e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023322:	437d      	muls	r5, r7
 8023324:	4461      	add	r1, ip
 8023326:	0a24      	lsrs	r4, r4, #8
 8023328:	fb02 5503 	mla	r5, r2, r3, r5
 802332c:	0a09      	lsrs	r1, r1, #8
 802332e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023332:	fb04 540e 	mla	r4, r4, lr, r5
 8023336:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802333a:	fb01 4100 	mla	r1, r1, r0, r4
 802333e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023342:	0a09      	lsrs	r1, r1, #8
 8023344:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023348:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802334c:	fb07 f70a 	mul.w	r7, r7, sl
 8023350:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023354:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023358:	fb03 7101 	mla	r1, r3, r1, r7
 802335c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023360:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023364:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023368:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802336c:	fb00 e101 	mla	r1, r0, r1, lr
 8023370:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8023374:	9a00      	ldr	r2, [sp, #0]
 8023376:	b287      	uxth	r7, r0
 8023378:	437a      	muls	r2, r7
 802337a:	0a09      	lsrs	r1, r1, #8
 802337c:	1c53      	adds	r3, r2, #1
 802337e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023382:	4321      	orrs	r1, r4
 8023384:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023388:	1235      	asrs	r5, r6, #8
 802338a:	0c0a      	lsrs	r2, r1, #16
 802338c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023390:	b2db      	uxtb	r3, r3
 8023392:	fb12 f207 	smulbb	r2, r2, r7
 8023396:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802339a:	fb05 2503 	mla	r5, r5, r3, r2
 802339e:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80233a2:	10f2      	asrs	r2, r6, #3
 80233a4:	b2c8      	uxtb	r0, r1
 80233a6:	00f6      	lsls	r6, r6, #3
 80233a8:	fb14 f407 	smulbb	r4, r4, r7
 80233ac:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80233b0:	b2f6      	uxtb	r6, r6
 80233b2:	fb10 f007 	smulbb	r0, r0, r7
 80233b6:	fb02 4203 	mla	r2, r2, r3, r4
 80233ba:	b2ad      	uxth	r5, r5
 80233bc:	fb06 0303 	mla	r3, r6, r3, r0
 80233c0:	b299      	uxth	r1, r3
 80233c2:	b294      	uxth	r4, r2
 80233c4:	1c6b      	adds	r3, r5, #1
 80233c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80233ca:	1c62      	adds	r2, r4, #1
 80233cc:	1c4b      	adds	r3, r1, #1
 80233ce:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80233d2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80233d6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80233da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80233de:	0952      	lsrs	r2, r2, #5
 80233e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80233e4:	432b      	orrs	r3, r5
 80233e6:	4313      	orrs	r3, r2
 80233e8:	9a02      	ldr	r2, [sp, #8]
 80233ea:	8013      	strh	r3, [r2, #0]
 80233ec:	b005      	add	sp, #20
 80233ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80233f2:	2500      	movs	r5, #0
 80233f4:	e6ef      	b.n	80231d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80233f6:	2100      	movs	r1, #0
 80233f8:	460d      	mov	r5, r1
 80233fa:	e6f7      	b.n	80231ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233fc:	2100      	movs	r1, #0
 80233fe:	e6f5      	b.n	80231ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023400:	4631      	mov	r1, r6
 8023402:	e6f3      	b.n	80231ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023404:	2400      	movs	r4, #0
 8023406:	e702      	b.n	802320e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023408:	2200      	movs	r2, #0
 802340a:	4614      	mov	r4, r2
 802340c:	e70b      	b.n	8023226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802340e:	4602      	mov	r2, r0
 8023410:	4604      	mov	r4, r0
 8023412:	e708      	b.n	8023226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023414:	2200      	movs	r2, #0
 8023416:	e706      	b.n	8023226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023418:	4632      	mov	r2, r6
 802341a:	e704      	b.n	8023226 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802341c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802341c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023420:	b09d      	sub	sp, #116	; 0x74
 8023422:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8023426:	9219      	str	r2, [sp, #100]	; 0x64
 8023428:	9307      	str	r3, [sp, #28]
 802342a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802342c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023430:	931a      	str	r3, [sp, #104]	; 0x68
 8023432:	9117      	str	r1, [sp, #92]	; 0x5c
 8023434:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8023438:	901b      	str	r0, [sp, #108]	; 0x6c
 802343a:	6850      	ldr	r0, [r2, #4]
 802343c:	6812      	ldr	r2, [r2, #0]
 802343e:	fb00 1303 	mla	r3, r0, r3, r1
 8023442:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023446:	930a      	str	r3, [sp, #40]	; 0x28
 8023448:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802344a:	681b      	ldr	r3, [r3, #0]
 802344c:	9310      	str	r3, [sp, #64]	; 0x40
 802344e:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 8023452:	930b      	str	r3, [sp, #44]	; 0x2c
 8023454:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023456:	2b00      	cmp	r3, #0
 8023458:	dc03      	bgt.n	8023462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802345a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802345c:	2b00      	cmp	r3, #0
 802345e:	f340 8375 	ble.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023462:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023464:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023468:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802346c:	1e48      	subs	r0, r1, #1
 802346e:	1e57      	subs	r7, r2, #1
 8023470:	9b07      	ldr	r3, [sp, #28]
 8023472:	2b00      	cmp	r3, #0
 8023474:	f340 818e 	ble.w	8023794 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023478:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802347c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023480:	d406      	bmi.n	8023490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023482:	4584      	cmp	ip, r0
 8023484:	da04      	bge.n	8023490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023486:	2b00      	cmp	r3, #0
 8023488:	db02      	blt.n	8023490 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802348a:	42bb      	cmp	r3, r7
 802348c:	f2c0 8183 	blt.w	8023796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023490:	f11c 0c01 	adds.w	ip, ip, #1
 8023494:	f100 8173 	bmi.w	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023498:	4561      	cmp	r1, ip
 802349a:	f2c0 8170 	blt.w	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802349e:	3301      	adds	r3, #1
 80234a0:	f100 816d 	bmi.w	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80234a4:	429a      	cmp	r2, r3
 80234a6:	f2c0 816a 	blt.w	802377e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80234aa:	9b07      	ldr	r3, [sp, #28]
 80234ac:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80234ae:	9318      	str	r3, [sp, #96]	; 0x60
 80234b0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80234b2:	2b00      	cmp	r3, #0
 80234b4:	f340 818c 	ble.w	80237d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80234b8:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 80234ba:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80234bc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80234c0:	689b      	ldr	r3, [r3, #8]
 80234c2:	1422      	asrs	r2, r4, #16
 80234c4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80234c8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80234cc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80234d0:	f100 81cd 	bmi.w	802386e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234d4:	f103 38ff 	add.w	r8, r3, #4294967295
 80234d8:	4542      	cmp	r2, r8
 80234da:	f280 81c8 	bge.w	802386e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234de:	f1bc 0f00 	cmp.w	ip, #0
 80234e2:	f2c0 81c4 	blt.w	802386e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234e6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80234ea:	45c4      	cmp	ip, r8
 80234ec:	f280 81bf 	bge.w	802386e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234f0:	b21b      	sxth	r3, r3
 80234f2:	fb0c 2203 	mla	r2, ip, r3, r2
 80234f6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234f8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80234fc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023500:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023504:	2800      	cmp	r0, #0
 8023506:	f000 81a9 	beq.w	802385c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802350a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802350e:	950c      	str	r5, [sp, #48]	; 0x30
 8023510:	0e2d      	lsrs	r5, r5, #24
 8023512:	9513      	str	r5, [sp, #76]	; 0x4c
 8023514:	b181      	cbz	r1, 8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023516:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802351a:	3b01      	subs	r3, #1
 802351c:	009b      	lsls	r3, r3, #2
 802351e:	3304      	adds	r3, #4
 8023520:	eb08 0c03 	add.w	ip, r8, r3
 8023524:	f858 3003 	ldr.w	r3, [r8, r3]
 8023528:	9308      	str	r3, [sp, #32]
 802352a:	0e1b      	lsrs	r3, r3, #24
 802352c:	9311      	str	r3, [sp, #68]	; 0x44
 802352e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023532:	930d      	str	r3, [sp, #52]	; 0x34
 8023534:	0e1b      	lsrs	r3, r3, #24
 8023536:	9314      	str	r3, [sp, #80]	; 0x50
 8023538:	b280      	uxth	r0, r0
 802353a:	b289      	uxth	r1, r1
 802353c:	fb00 f901 	mul.w	r9, r0, r1
 8023540:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023544:	0100      	lsls	r0, r0, #4
 8023546:	eba0 0809 	sub.w	r8, r0, r9
 802354a:	b289      	uxth	r1, r1
 802354c:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023550:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023552:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023554:	fa1f f888 	uxth.w	r8, r8
 8023558:	1a5b      	subs	r3, r3, r1
 802355a:	b29b      	uxth	r3, r3
 802355c:	fb08 f000 	mul.w	r0, r8, r0
 8023560:	fb03 000e 	mla	r0, r3, lr, r0
 8023564:	fb01 0005 	mla	r0, r1, r5, r0
 8023568:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802356a:	fb09 0005 	mla	r0, r9, r5, r0
 802356e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023572:	2800      	cmp	r0, #0
 8023574:	f000 80fa 	beq.w	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023578:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802357c:	d01b      	beq.n	80235b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802357e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023582:	fb0e fa0a 	mul.w	sl, lr, sl
 8023586:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802358a:	fb0e fe02 	mul.w	lr, lr, r2
 802358e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023592:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023596:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802359a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802359e:	4452      	add	r2, sl
 80235a0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80235a4:	0a12      	lsrs	r2, r2, #8
 80235a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80235aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80235ae:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80235b2:	ea42 020c 	orr.w	r2, r2, ip
 80235b6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80235b8:	2dff      	cmp	r5, #255	; 0xff
 80235ba:	d021      	beq.n	8023600 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80235bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80235be:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80235c2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80235c4:	fb05 fb0b 	mul.w	fp, r5, fp
 80235c8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80235ca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80235ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80235d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80235d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80235d8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235dc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80235e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80235e4:	44de      	add	lr, fp
 80235e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80235ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235fa:	ea4e 050a 	orr.w	r5, lr, sl
 80235fe:	950c      	str	r5, [sp, #48]	; 0x30
 8023600:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023602:	2dff      	cmp	r5, #255	; 0xff
 8023604:	d021      	beq.n	802364a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023606:	9d08      	ldr	r5, [sp, #32]
 8023608:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802360c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802360e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023612:	9d08      	ldr	r5, [sp, #32]
 8023614:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023618:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802361a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802361e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023622:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023626:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802362a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802362e:	44de      	add	lr, fp
 8023630:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023634:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023638:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802363c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023640:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023644:	ea4e 050a 	orr.w	r5, lr, sl
 8023648:	9508      	str	r5, [sp, #32]
 802364a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802364c:	2dff      	cmp	r5, #255	; 0xff
 802364e:	d021      	beq.n	8023694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023650:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023652:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023656:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023658:	fb05 fb0b 	mul.w	fp, r5, fp
 802365c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802365e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023662:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023664:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023668:	fb05 fa0a 	mul.w	sl, r5, sl
 802366c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023670:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023674:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023678:	44de      	add	lr, fp
 802367a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802367e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023682:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023686:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802368a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802368e:	ea4e 050a 	orr.w	r5, lr, sl
 8023692:	950d      	str	r5, [sp, #52]	; 0x34
 8023694:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023696:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802369a:	9d08      	ldr	r5, [sp, #32]
 802369c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80236a0:	fb08 fc0c 	mul.w	ip, r8, ip
 80236a4:	fb03 cc0e 	mla	ip, r3, lr, ip
 80236a8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80236ac:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80236ae:	fb01 cc0e 	mla	ip, r1, lr, ip
 80236b2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80236b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80236b8:	fb09 cc0e 	mla	ip, r9, lr, ip
 80236bc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80236c0:	fb08 f80e 	mul.w	r8, r8, lr
 80236c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80236c8:	fb03 8202 	mla	r2, r3, r2, r8
 80236cc:	9b08      	ldr	r3, [sp, #32]
 80236ce:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80236d0:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 80236d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80236d6:	fb01 220a 	mla	r2, r1, sl, r2
 80236da:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 80236de:	fb09 2901 	mla	r9, r9, r1, r2
 80236e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80236e4:	883b      	ldrh	r3, [r7, #0]
 80236e6:	4342      	muls	r2, r0
 80236e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236ec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236f0:	1c50      	adds	r0, r2, #1
 80236f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80236f6:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80236fa:	ea4c 0c09 	orr.w	ip, ip, r9
 80236fe:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8023702:	1219      	asrs	r1, r3, #8
 8023704:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023708:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802370c:	b2c0      	uxtb	r0, r0
 802370e:	fb12 f205 	smulbb	r2, r2, r5
 8023712:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8023716:	fb01 2100 	mla	r1, r1, r0, r2
 802371a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802371e:	10da      	asrs	r2, r3, #3
 8023720:	fa5f fc8c 	uxtb.w	ip, ip
 8023724:	00db      	lsls	r3, r3, #3
 8023726:	fb1c fc05 	smulbb	ip, ip, r5
 802372a:	b2db      	uxtb	r3, r3
 802372c:	b289      	uxth	r1, r1
 802372e:	fb03 c300 	mla	r3, r3, r0, ip
 8023732:	fa1f fc83 	uxth.w	ip, r3
 8023736:	1c4b      	adds	r3, r1, #1
 8023738:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802373c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023740:	fb1e fe05 	smulbb	lr, lr, r5
 8023744:	f10c 0301 	add.w	r3, ip, #1
 8023748:	fb02 e200 	mla	r2, r2, r0, lr
 802374c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023750:	b292      	uxth	r2, r2
 8023752:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8023756:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802375a:	430b      	orrs	r3, r1
 802375c:	1c51      	adds	r1, r2, #1
 802375e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023762:	0952      	lsrs	r2, r2, #5
 8023764:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023768:	4313      	orrs	r3, r2
 802376a:	803b      	strh	r3, [r7, #0]
 802376c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802376e:	441c      	add	r4, r3
 8023770:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023772:	441e      	add	r6, r3
 8023774:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023776:	3b01      	subs	r3, #1
 8023778:	3702      	adds	r7, #2
 802377a:	9318      	str	r3, [sp, #96]	; 0x60
 802377c:	e698      	b.n	80234b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802377e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023780:	441c      	add	r4, r3
 8023782:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023784:	441e      	add	r6, r3
 8023786:	9b07      	ldr	r3, [sp, #28]
 8023788:	3b01      	subs	r3, #1
 802378a:	9307      	str	r3, [sp, #28]
 802378c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802378e:	3302      	adds	r3, #2
 8023790:	930a      	str	r3, [sp, #40]	; 0x28
 8023792:	e66d      	b.n	8023470 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023794:	d023      	beq.n	80237de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023796:	9b07      	ldr	r3, [sp, #28]
 8023798:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802379a:	3b01      	subs	r3, #1
 802379c:	fb00 4003 	mla	r0, r0, r3, r4
 80237a0:	1400      	asrs	r0, r0, #16
 80237a2:	f53f ae82 	bmi.w	80234aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80237a6:	3901      	subs	r1, #1
 80237a8:	4288      	cmp	r0, r1
 80237aa:	f6bf ae7e 	bge.w	80234aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80237ae:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80237b0:	fb01 6303 	mla	r3, r1, r3, r6
 80237b4:	141b      	asrs	r3, r3, #16
 80237b6:	f53f ae78 	bmi.w	80234aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80237ba:	3a01      	subs	r2, #1
 80237bc:	4293      	cmp	r3, r2
 80237be:	f6bf ae74 	bge.w	80234aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80237c2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80237c6:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80237ca:	f1bb 0f00 	cmp.w	fp, #0
 80237ce:	dc6c      	bgt.n	80238aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80237d0:	9b07      	ldr	r3, [sp, #28]
 80237d2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80237d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80237d8:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80237dc:	930a      	str	r3, [sp, #40]	; 0x28
 80237de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80237e0:	2b00      	cmp	r3, #0
 80237e2:	f340 81b3 	ble.w	8023b4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80237e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80237ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80237ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80237f2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80237f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80237f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80237fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023800:	eef0 6a62 	vmov.f32	s13, s5
 8023804:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023808:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802380c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023810:	ee16 4a90 	vmov	r4, s13
 8023814:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023818:	eef0 6a43 	vmov.f32	s13, s6
 802381c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023820:	ee12 2a90 	vmov	r2, s5
 8023824:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023828:	fb92 f3f3 	sdiv	r3, r2, r3
 802382c:	ee13 2a10 	vmov	r2, s6
 8023830:	9329      	str	r3, [sp, #164]	; 0xa4
 8023832:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023834:	fb92 f3f3 	sdiv	r3, r2, r3
 8023838:	932a      	str	r3, [sp, #168]	; 0xa8
 802383a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802383c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802383e:	3b01      	subs	r3, #1
 8023840:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023844:	9317      	str	r3, [sp, #92]	; 0x5c
 8023846:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023848:	bf08      	it	eq
 802384a:	4613      	moveq	r3, r2
 802384c:	ee16 6a90 	vmov	r6, s13
 8023850:	9307      	str	r3, [sp, #28]
 8023852:	eeb0 3a67 	vmov.f32	s6, s15
 8023856:	eef0 2a47 	vmov.f32	s5, s14
 802385a:	e5fb      	b.n	8023454 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802385c:	2900      	cmp	r1, #0
 802385e:	f43f ae6b 	beq.w	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023862:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023866:	9308      	str	r3, [sp, #32]
 8023868:	0e1b      	lsrs	r3, r3, #24
 802386a:	9311      	str	r3, [sp, #68]	; 0x44
 802386c:	e664      	b.n	8023538 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802386e:	f112 0801 	adds.w	r8, r2, #1
 8023872:	f53f af7b 	bmi.w	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023876:	4543      	cmp	r3, r8
 8023878:	f6ff af78 	blt.w	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802387c:	f11c 0801 	adds.w	r8, ip, #1
 8023880:	f53f af74 	bmi.w	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023884:	45c6      	cmp	lr, r8
 8023886:	f6ff af71 	blt.w	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802388a:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802388c:	9201      	str	r2, [sp, #4]
 802388e:	fa0f f28e 	sxth.w	r2, lr
 8023892:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023896:	e9cd c002 	strd	ip, r0, [sp, #8]
 802389a:	9200      	str	r2, [sp, #0]
 802389c:	b21b      	sxth	r3, r3
 802389e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80238a0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80238a2:	4639      	mov	r1, r7
 80238a4:	f7ff fc79 	bl	802319a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80238a8:	e760      	b.n	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80238aa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80238ac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80238ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80238b2:	1427      	asrs	r7, r4, #16
 80238b4:	1433      	asrs	r3, r6, #16
 80238b6:	fb01 7303 	mla	r3, r1, r3, r7
 80238ba:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80238be:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80238c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80238c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80238ca:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80238ce:	2a00      	cmp	r2, #0
 80238d0:	f000 8133 	beq.w	8023b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80238d4:	687d      	ldr	r5, [r7, #4]
 80238d6:	950e      	str	r5, [sp, #56]	; 0x38
 80238d8:	0e2d      	lsrs	r5, r5, #24
 80238da:	9515      	str	r5, [sp, #84]	; 0x54
 80238dc:	b178      	cbz	r0, 80238fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80238de:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 80238e2:	3901      	subs	r1, #1
 80238e4:	0089      	lsls	r1, r1, #2
 80238e6:	3104      	adds	r1, #4
 80238e8:	eb07 0e01 	add.w	lr, r7, r1
 80238ec:	5879      	ldr	r1, [r7, r1]
 80238ee:	9109      	str	r1, [sp, #36]	; 0x24
 80238f0:	0e09      	lsrs	r1, r1, #24
 80238f2:	9112      	str	r1, [sp, #72]	; 0x48
 80238f4:	f8de 1004 	ldr.w	r1, [lr, #4]
 80238f8:	910f      	str	r1, [sp, #60]	; 0x3c
 80238fa:	0e09      	lsrs	r1, r1, #24
 80238fc:	9116      	str	r1, [sp, #88]	; 0x58
 80238fe:	b292      	uxth	r2, r2
 8023900:	b280      	uxth	r0, r0
 8023902:	fb02 f800 	mul.w	r8, r2, r0
 8023906:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802390a:	0112      	lsls	r2, r2, #4
 802390c:	eba2 0e08 	sub.w	lr, r2, r8
 8023910:	b280      	uxth	r0, r0
 8023912:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023916:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023918:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802391a:	fa1f fe8e 	uxth.w	lr, lr
 802391e:	1a12      	subs	r2, r2, r0
 8023920:	b292      	uxth	r2, r2
 8023922:	fb0e f101 	mul.w	r1, lr, r1
 8023926:	fb02 110c 	mla	r1, r2, ip, r1
 802392a:	fb00 1105 	mla	r1, r0, r5, r1
 802392e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023930:	fb08 1105 	mla	r1, r8, r5, r1
 8023934:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023938:	2900      	cmp	r1, #0
 802393a:	f000 80f5 	beq.w	8023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802393e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023942:	d019      	beq.n	8023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023944:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023948:	fb0c fa0a 	mul.w	sl, ip, sl
 802394c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023950:	fb0c fc03 	mul.w	ip, ip, r3
 8023954:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023958:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802395c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023960:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023964:	4453      	add	r3, sl
 8023966:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802396a:	0a1b      	lsrs	r3, r3, #8
 802396c:	0a3f      	lsrs	r7, r7, #8
 802396e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023972:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023976:	433b      	orrs	r3, r7
 8023978:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802397a:	2dff      	cmp	r5, #255	; 0xff
 802397c:	d020      	beq.n	80239c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802397e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023980:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023984:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023986:	436f      	muls	r7, r5
 8023988:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802398a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802398e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023990:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023994:	fb05 fa0a 	mul.w	sl, r5, sl
 8023998:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802399c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239a0:	44bc      	add	ip, r7
 80239a2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80239a6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80239aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80239ba:	ea4c 050a 	orr.w	r5, ip, sl
 80239be:	950e      	str	r5, [sp, #56]	; 0x38
 80239c0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239c2:	2dff      	cmp	r5, #255	; 0xff
 80239c4:	d020      	beq.n	8023a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80239c6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80239c8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80239cc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239ce:	436f      	muls	r7, r5
 80239d0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80239d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80239d6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80239d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80239dc:	fb05 fa0a 	mul.w	sl, r5, sl
 80239e0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80239e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239e8:	44bc      	add	ip, r7
 80239ea:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80239ee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80239f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a02:	ea4c 050a 	orr.w	r5, ip, sl
 8023a06:	9509      	str	r5, [sp, #36]	; 0x24
 8023a08:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023a0a:	2dff      	cmp	r5, #255	; 0xff
 8023a0c:	d020      	beq.n	8023a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023a0e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a10:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023a14:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023a16:	436f      	muls	r7, r5
 8023a18:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a1a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023a1e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023a20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023a24:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a28:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023a2c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023a30:	44bc      	add	ip, r7
 8023a32:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023a36:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023a3a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023a46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a4a:	ea4c 050a 	orr.w	r5, ip, sl
 8023a4e:	950f      	str	r5, [sp, #60]	; 0x3c
 8023a50:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a52:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023a56:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023a58:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023a5c:	fb0e f707 	mul.w	r7, lr, r7
 8023a60:	fb02 770c 	mla	r7, r2, ip, r7
 8023a64:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023a68:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a6a:	fb00 770c 	mla	r7, r0, ip, r7
 8023a6e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023a72:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a74:	fb08 770c 	mla	r7, r8, ip, r7
 8023a78:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023a7c:	fb0e fe0c 	mul.w	lr, lr, ip
 8023a80:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023a84:	fb02 e303 	mla	r3, r2, r3, lr
 8023a88:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023a8a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023a8c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023a90:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023a92:	fb00 330a 	mla	r3, r0, sl, r3
 8023a96:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023a9a:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023a9e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023aa0:	f8b9 0000 	ldrh.w	r0, [r9]
 8023aa4:	4359      	muls	r1, r3
 8023aa6:	0a3f      	lsrs	r7, r7, #8
 8023aa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023aac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023ab0:	1c4b      	adds	r3, r1, #1
 8023ab2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023ab6:	ea47 070c 	orr.w	r7, r7, ip
 8023aba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023abe:	1202      	asrs	r2, r0, #8
 8023ac0:	0c3b      	lsrs	r3, r7, #16
 8023ac2:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023ac6:	b2c9      	uxtb	r1, r1
 8023ac8:	fb13 f305 	smulbb	r3, r3, r5
 8023acc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023ad0:	fb02 3201 	mla	r2, r2, r1, r3
 8023ad4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023ad8:	10c3      	asrs	r3, r0, #3
 8023ada:	b2ff      	uxtb	r7, r7
 8023adc:	00c0      	lsls	r0, r0, #3
 8023ade:	b2c0      	uxtb	r0, r0
 8023ae0:	fb17 f705 	smulbb	r7, r7, r5
 8023ae4:	fb00 7001 	mla	r0, r0, r1, r7
 8023ae8:	b292      	uxth	r2, r2
 8023aea:	fb1c fc05 	smulbb	ip, ip, r5
 8023aee:	b280      	uxth	r0, r0
 8023af0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023af4:	fb03 c301 	mla	r3, r3, r1, ip
 8023af8:	1c51      	adds	r1, r2, #1
 8023afa:	f100 0c01 	add.w	ip, r0, #1
 8023afe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023b02:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023b06:	b29b      	uxth	r3, r3
 8023b08:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023b0c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023b10:	ea4c 0202 	orr.w	r2, ip, r2
 8023b14:	f103 0c01 	add.w	ip, r3, #1
 8023b18:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023b1c:	095b      	lsrs	r3, r3, #5
 8023b1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023b22:	431a      	orrs	r2, r3
 8023b24:	f8a9 2000 	strh.w	r2, [r9]
 8023b28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023b2a:	441c      	add	r4, r3
 8023b2c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023b2e:	f109 0902 	add.w	r9, r9, #2
 8023b32:	441e      	add	r6, r3
 8023b34:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023b38:	e647      	b.n	80237ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023b3a:	2800      	cmp	r0, #0
 8023b3c:	f43f aedf 	beq.w	80238fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b40:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023b44:	9109      	str	r1, [sp, #36]	; 0x24
 8023b46:	0e09      	lsrs	r1, r1, #24
 8023b48:	9112      	str	r1, [sp, #72]	; 0x48
 8023b4a:	e6d8      	b.n	80238fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b4c:	b01d      	add	sp, #116	; 0x74
 8023b4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023b52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023b52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b56:	b085      	sub	sp, #20
 8023b58:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023b5c:	9102      	str	r1, [sp, #8]
 8023b5e:	2c00      	cmp	r4, #0
 8023b60:	fb04 7103 	mla	r1, r4, r3, r7
 8023b64:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023b68:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023b6c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023b70:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023b74:	f2c0 810c 	blt.w	8023d90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b78:	45a6      	cmp	lr, r4
 8023b7a:	f340 8109 	ble.w	8023d90 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b7e:	2f00      	cmp	r7, #0
 8023b80:	f2c0 8104 	blt.w	8023d8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b84:	42bb      	cmp	r3, r7
 8023b86:	f340 8101 	ble.w	8023d8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b8a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023b8e:	1c7a      	adds	r2, r7, #1
 8023b90:	f100 8101 	bmi.w	8023d96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b94:	4293      	cmp	r3, r2
 8023b96:	f340 80fe 	ble.w	8023d96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b9a:	2e00      	cmp	r6, #0
 8023b9c:	f000 80fd 	beq.w	8023d9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023ba0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023ba4:	3401      	adds	r4, #1
 8023ba6:	f100 80fc 	bmi.w	8023da2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023baa:	45a6      	cmp	lr, r4
 8023bac:	f340 80f9 	ble.w	8023da2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023bb0:	2800      	cmp	r0, #0
 8023bb2:	f000 80f9 	beq.w	8023da8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023bb6:	2f00      	cmp	r7, #0
 8023bb8:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023bbc:	f2c0 80ef 	blt.w	8023d9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023bc0:	42bb      	cmp	r3, r7
 8023bc2:	f340 80ec 	ble.w	8023d9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023bc6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023bca:	3701      	adds	r7, #1
 8023bcc:	f100 80ef 	bmi.w	8023dae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023bd0:	42bb      	cmp	r3, r7
 8023bd2:	f340 80ec 	ble.w	8023dae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023bd6:	2e00      	cmp	r6, #0
 8023bd8:	f000 80eb 	beq.w	8023db2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023bdc:	6852      	ldr	r2, [r2, #4]
 8023bde:	b2b6      	uxth	r6, r6
 8023be0:	b280      	uxth	r0, r0
 8023be2:	fb00 fe06 	mul.w	lr, r0, r6
 8023be6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023bea:	0136      	lsls	r6, r6, #4
 8023bec:	eba6 070e 	sub.w	r7, r6, lr
 8023bf0:	b280      	uxth	r0, r0
 8023bf2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023bf6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023bfa:	b2bf      	uxth	r7, r7
 8023bfc:	1a1b      	subs	r3, r3, r0
 8023bfe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023c02:	b29b      	uxth	r3, r3
 8023c04:	fb07 f60a 	mul.w	r6, r7, sl
 8023c08:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023c0c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023c10:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023c14:	fb00 6609 	mla	r6, r0, r9, r6
 8023c18:	fb0e 6608 	mla	r6, lr, r8, r6
 8023c1c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023c20:	9600      	str	r6, [sp, #0]
 8023c22:	2e00      	cmp	r6, #0
 8023c24:	f000 80af 	beq.w	8023d86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023c28:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023c2c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023c30:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023c34:	fb0b f505 	mul.w	r5, fp, r5
 8023c38:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023c3c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023c40:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c44:	44dc      	add	ip, fp
 8023c46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c4a:	9501      	str	r5, [sp, #4]
 8023c4c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023c50:	9503      	str	r5, [sp, #12]
 8023c52:	9d01      	ldr	r5, [sp, #4]
 8023c54:	9e02      	ldr	r6, [sp, #8]
 8023c56:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023c5a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023c5e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023c62:	fb0a fc0c 	mul.w	ip, sl, ip
 8023c66:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023c6a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023c6e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023c72:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c76:	4465      	add	r5, ip
 8023c78:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023c7c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023c80:	fb09 fc0c 	mul.w	ip, r9, ip
 8023c84:	fb09 f904 	mul.w	r9, r9, r4
 8023c88:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023c8c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023c90:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023c94:	fb08 f404 	mul.w	r4, r8, r4
 8023c98:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023c9c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ca0:	fb08 f802 	mul.w	r8, r8, r2
 8023ca4:	fb0a fa01 	mul.w	sl, sl, r1
 8023ca8:	0a22      	lsrs	r2, r4, #8
 8023caa:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023cae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023cb2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023cb6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023cba:	4414      	add	r4, r2
 8023cbc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023cc0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023cc4:	0a2d      	lsrs	r5, r5, #8
 8023cc6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023cca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023cce:	9a03      	ldr	r2, [sp, #12]
 8023cd0:	8836      	ldrh	r6, [r6, #0]
 8023cd2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023cd6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023cda:	437d      	muls	r5, r7
 8023cdc:	4461      	add	r1, ip
 8023cde:	0a24      	lsrs	r4, r4, #8
 8023ce0:	fb02 5503 	mla	r5, r2, r3, r5
 8023ce4:	0a09      	lsrs	r1, r1, #8
 8023ce6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023cea:	fb04 540e 	mla	r4, r4, lr, r5
 8023cee:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023cf2:	fb01 4100 	mla	r1, r1, r0, r4
 8023cf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cfa:	0a09      	lsrs	r1, r1, #8
 8023cfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023d00:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023d04:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023d08:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023d0c:	fb07 f70a 	mul.w	r7, r7, sl
 8023d10:	fb03 7101 	mla	r1, r3, r1, r7
 8023d14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023d18:	9b00      	ldr	r3, [sp, #0]
 8023d1a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023d1e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023d22:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023d26:	fb00 e101 	mla	r1, r0, r1, lr
 8023d2a:	43da      	mvns	r2, r3
 8023d2c:	1233      	asrs	r3, r6, #8
 8023d2e:	b2d2      	uxtb	r2, r2
 8023d30:	10f0      	asrs	r0, r6, #3
 8023d32:	0a09      	lsrs	r1, r1, #8
 8023d34:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023d38:	00f6      	lsls	r6, r6, #3
 8023d3a:	4353      	muls	r3, r2
 8023d3c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023d40:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023d44:	b2f6      	uxtb	r6, r6
 8023d46:	4321      	orrs	r1, r4
 8023d48:	4350      	muls	r0, r2
 8023d4a:	4356      	muls	r6, r2
 8023d4c:	1c5a      	adds	r2, r3, #1
 8023d4e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023d52:	0c0b      	lsrs	r3, r1, #16
 8023d54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023d58:	1c42      	adds	r2, r0, #1
 8023d5a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023d5e:	0a0a      	lsrs	r2, r1, #8
 8023d60:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023d64:	021b      	lsls	r3, r3, #8
 8023d66:	00d2      	lsls	r2, r2, #3
 8023d68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d6c:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023d70:	4313      	orrs	r3, r2
 8023d72:	1c72      	adds	r2, r6, #1
 8023d74:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023d78:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023d7c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023d80:	4319      	orrs	r1, r3
 8023d82:	9b02      	ldr	r3, [sp, #8]
 8023d84:	8019      	strh	r1, [r3, #0]
 8023d86:	b005      	add	sp, #20
 8023d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023d8c:	2500      	movs	r5, #0
 8023d8e:	e6fe      	b.n	8023b8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023d90:	2100      	movs	r1, #0
 8023d92:	460d      	mov	r5, r1
 8023d94:	e706      	b.n	8023ba4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d96:	2100      	movs	r1, #0
 8023d98:	e704      	b.n	8023ba4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d9a:	4631      	mov	r1, r6
 8023d9c:	e702      	b.n	8023ba4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d9e:	2400      	movs	r4, #0
 8023da0:	e713      	b.n	8023bca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023da2:	2200      	movs	r2, #0
 8023da4:	4614      	mov	r4, r2
 8023da6:	e71a      	b.n	8023bde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023da8:	4602      	mov	r2, r0
 8023daa:	4604      	mov	r4, r0
 8023dac:	e717      	b.n	8023bde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023dae:	2200      	movs	r2, #0
 8023db0:	e715      	b.n	8023bde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023db2:	4632      	mov	r2, r6
 8023db4:	e713      	b.n	8023bde <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023db8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dbc:	b09b      	sub	sp, #108	; 0x6c
 8023dbe:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023dc2:	9218      	str	r2, [sp, #96]	; 0x60
 8023dc4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023dc6:	9116      	str	r1, [sp, #88]	; 0x58
 8023dc8:	9307      	str	r3, [sp, #28]
 8023dca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023dce:	9019      	str	r0, [sp, #100]	; 0x64
 8023dd0:	6850      	ldr	r0, [r2, #4]
 8023dd2:	6812      	ldr	r2, [r2, #0]
 8023dd4:	fb00 1303 	mla	r3, r0, r3, r1
 8023dd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023ddc:	930a      	str	r3, [sp, #40]	; 0x28
 8023dde:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023de0:	681b      	ldr	r3, [r3, #0]
 8023de2:	930f      	str	r3, [sp, #60]	; 0x3c
 8023de4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023de6:	2b00      	cmp	r3, #0
 8023de8:	dc03      	bgt.n	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023dea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023dec:	2b00      	cmp	r3, #0
 8023dee:	f340 8386 	ble.w	80244fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023df2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023df4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023df8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023dfc:	1e48      	subs	r0, r1, #1
 8023dfe:	1e57      	subs	r7, r2, #1
 8023e00:	9b07      	ldr	r3, [sp, #28]
 8023e02:	2b00      	cmp	r3, #0
 8023e04:	f340 8166 	ble.w	80240d4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023e08:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023e0c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023e10:	d406      	bmi.n	8023e20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023e12:	4584      	cmp	ip, r0
 8023e14:	da04      	bge.n	8023e20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023e16:	2b00      	cmp	r3, #0
 8023e18:	db02      	blt.n	8023e20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023e1a:	42bb      	cmp	r3, r7
 8023e1c:	f2c0 815b 	blt.w	80240d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023e20:	f11c 0c01 	adds.w	ip, ip, #1
 8023e24:	f100 814b 	bmi.w	80240be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e28:	4561      	cmp	r1, ip
 8023e2a:	f2c0 8148 	blt.w	80240be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e2e:	3301      	adds	r3, #1
 8023e30:	f100 8145 	bmi.w	80240be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e34:	429a      	cmp	r2, r3
 8023e36:	f2c0 8142 	blt.w	80240be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e3a:	9b07      	ldr	r3, [sp, #28]
 8023e3c:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023e3e:	9317      	str	r3, [sp, #92]	; 0x5c
 8023e40:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023e42:	2b00      	cmp	r3, #0
 8023e44:	f340 8165 	ble.w	8024112 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023e48:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023e4a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023e4c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023e50:	689b      	ldr	r3, [r3, #8]
 8023e52:	1422      	asrs	r2, r4, #16
 8023e54:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023e58:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023e5c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023e60:	f100 81d5 	bmi.w	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e64:	f103 38ff 	add.w	r8, r3, #4294967295
 8023e68:	4542      	cmp	r2, r8
 8023e6a:	f280 81d0 	bge.w	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e6e:	f1bc 0f00 	cmp.w	ip, #0
 8023e72:	f2c0 81cc 	blt.w	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e76:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023e7a:	45c4      	cmp	ip, r8
 8023e7c:	f280 81c7 	bge.w	802420e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e80:	b21b      	sxth	r3, r3
 8023e82:	fb0c 2203 	mla	r2, ip, r3, r2
 8023e86:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023e88:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023e8c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023e90:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023e94:	2900      	cmp	r1, #0
 8023e96:	f000 8182 	beq.w	802419e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023e9a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023e9e:	950b      	str	r5, [sp, #44]	; 0x2c
 8023ea0:	0e2d      	lsrs	r5, r5, #24
 8023ea2:	9512      	str	r5, [sp, #72]	; 0x48
 8023ea4:	b180      	cbz	r0, 8023ec8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023ea6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023eaa:	3b01      	subs	r3, #1
 8023eac:	009b      	lsls	r3, r3, #2
 8023eae:	3304      	adds	r3, #4
 8023eb0:	eb08 0c03 	add.w	ip, r8, r3
 8023eb4:	f858 3003 	ldr.w	r3, [r8, r3]
 8023eb8:	9308      	str	r3, [sp, #32]
 8023eba:	0e1b      	lsrs	r3, r3, #24
 8023ebc:	9310      	str	r3, [sp, #64]	; 0x40
 8023ebe:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023ec2:	930c      	str	r3, [sp, #48]	; 0x30
 8023ec4:	0e1b      	lsrs	r3, r3, #24
 8023ec6:	9313      	str	r3, [sp, #76]	; 0x4c
 8023ec8:	b289      	uxth	r1, r1
 8023eca:	b280      	uxth	r0, r0
 8023ecc:	fb01 f900 	mul.w	r9, r1, r0
 8023ed0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023ed4:	0109      	lsls	r1, r1, #4
 8023ed6:	eba1 0809 	sub.w	r8, r1, r9
 8023eda:	b280      	uxth	r0, r0
 8023edc:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023ee0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023ee2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023ee4:	fa1f f888 	uxth.w	r8, r8
 8023ee8:	1a09      	subs	r1, r1, r0
 8023eea:	b289      	uxth	r1, r1
 8023eec:	fb08 f303 	mul.w	r3, r8, r3
 8023ef0:	fb01 330e 	mla	r3, r1, lr, r3
 8023ef4:	fb00 3305 	mla	r3, r0, r5, r3
 8023ef8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023efa:	fb09 3305 	mla	r3, r9, r5, r3
 8023efe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023f02:	2b00      	cmp	r3, #0
 8023f04:	f000 80d2 	beq.w	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f08:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023f0c:	d01b      	beq.n	8023f46 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023f0e:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023f12:	fb0e fa0a 	mul.w	sl, lr, sl
 8023f16:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023f1a:	fb0e fe02 	mul.w	lr, lr, r2
 8023f1e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023f22:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023f26:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023f2a:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023f2e:	4452      	add	r2, sl
 8023f30:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023f34:	0a12      	lsrs	r2, r2, #8
 8023f36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f3a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023f3e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023f42:	ea42 020c 	orr.w	r2, r2, ip
 8023f46:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f48:	2dff      	cmp	r5, #255	; 0xff
 8023f4a:	d021      	beq.n	8023f90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023f4c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f4e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f52:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f54:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f58:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f5a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f5e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f60:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f64:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f68:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f6c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f70:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f74:	44de      	add	lr, fp
 8023f76:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f7a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f7e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f82:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f86:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f8a:	ea4e 050a 	orr.w	r5, lr, sl
 8023f8e:	950b      	str	r5, [sp, #44]	; 0x2c
 8023f90:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f92:	2dff      	cmp	r5, #255	; 0xff
 8023f94:	d021      	beq.n	8023fda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023f96:	9d08      	ldr	r5, [sp, #32]
 8023f98:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f9c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f9e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023fa2:	9d08      	ldr	r5, [sp, #32]
 8023fa4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023fa8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023faa:	fb05 fa0e 	mul.w	sl, r5, lr
 8023fae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023fb2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023fb6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023fba:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023fbe:	44de      	add	lr, fp
 8023fc0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023fc4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023fc8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fcc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023fd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023fd4:	ea4e 050a 	orr.w	r5, lr, sl
 8023fd8:	9508      	str	r5, [sp, #32]
 8023fda:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023fdc:	2dff      	cmp	r5, #255	; 0xff
 8023fde:	d021      	beq.n	8024024 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023fe0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023fe2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023fe6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023fe8:	fb05 fb0b 	mul.w	fp, r5, fp
 8023fec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023fee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023ff2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023ff4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023ff8:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ffc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024000:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024004:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024008:	44de      	add	lr, fp
 802400a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802400e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024012:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024016:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802401a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802401e:	ea4e 050a 	orr.w	r5, lr, sl
 8024022:	950c      	str	r5, [sp, #48]	; 0x30
 8024024:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024026:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802402a:	9d08      	ldr	r5, [sp, #32]
 802402c:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024030:	fb08 fc0c 	mul.w	ip, r8, ip
 8024034:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024038:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802403c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802403e:	fb00 cc0e 	mla	ip, r0, lr, ip
 8024042:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8024046:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024048:	fb09 cc0e 	mla	ip, r9, lr, ip
 802404c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024050:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024054:	fb08 f80e 	mul.w	r8, r8, lr
 8024058:	fb01 8202 	mla	r2, r1, r2, r8
 802405c:	9908      	ldr	r1, [sp, #32]
 802405e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024062:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024064:	fb00 220a 	mla	r2, r0, sl, r2
 8024068:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802406c:	fb09 2900 	mla	r9, r9, r0, r2
 8024070:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024074:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024078:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802407c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024080:	ea4c 0c09 	orr.w	ip, ip, r9
 8024084:	2bff      	cmp	r3, #255	; 0xff
 8024086:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802408a:	f040 8091 	bne.w	80241b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802408e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8024092:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 8024096:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802409a:	f022 0207 	bic.w	r2, r2, #7
 802409e:	431a      	orrs	r2, r3
 80240a0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 80240a4:	ea4c 0c02 	orr.w	ip, ip, r2
 80240a8:	f8a7 c000 	strh.w	ip, [r7]
 80240ac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80240ae:	441c      	add	r4, r3
 80240b0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80240b2:	441e      	add	r6, r3
 80240b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80240b6:	3b01      	subs	r3, #1
 80240b8:	3702      	adds	r7, #2
 80240ba:	9317      	str	r3, [sp, #92]	; 0x5c
 80240bc:	e6c0      	b.n	8023e40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80240be:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80240c0:	441c      	add	r4, r3
 80240c2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80240c4:	441e      	add	r6, r3
 80240c6:	9b07      	ldr	r3, [sp, #28]
 80240c8:	3b01      	subs	r3, #1
 80240ca:	9307      	str	r3, [sp, #28]
 80240cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80240ce:	3302      	adds	r3, #2
 80240d0:	930a      	str	r3, [sp, #40]	; 0x28
 80240d2:	e695      	b.n	8023e00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80240d4:	d024      	beq.n	8024120 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80240d6:	9b07      	ldr	r3, [sp, #28]
 80240d8:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80240da:	3b01      	subs	r3, #1
 80240dc:	fb00 4003 	mla	r0, r0, r3, r4
 80240e0:	1400      	asrs	r0, r0, #16
 80240e2:	f53f aeaa 	bmi.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240e6:	3901      	subs	r1, #1
 80240e8:	4288      	cmp	r0, r1
 80240ea:	f6bf aea6 	bge.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240ee:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80240f0:	fb01 6303 	mla	r3, r1, r3, r6
 80240f4:	141b      	asrs	r3, r3, #16
 80240f6:	f53f aea0 	bmi.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240fa:	3a01      	subs	r2, #1
 80240fc:	4293      	cmp	r3, r2
 80240fe:	f6bf ae9c 	bge.w	8023e3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024102:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024106:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802410a:	f1bb 0f00 	cmp.w	fp, #0
 802410e:	f300 809a 	bgt.w	8024246 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024112:	9b07      	ldr	r3, [sp, #28]
 8024114:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024118:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802411a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802411e:	930a      	str	r3, [sp, #40]	; 0x28
 8024120:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024122:	2b00      	cmp	r3, #0
 8024124:	f340 81eb 	ble.w	80244fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024128:	ee30 0a04 	vadd.f32	s0, s0, s8
 802412c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024130:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024134:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024136:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802413a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802413e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024142:	eef0 6a62 	vmov.f32	s13, s5
 8024146:	ee61 7a27 	vmul.f32	s15, s2, s15
 802414a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802414e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024152:	ee16 4a90 	vmov	r4, s13
 8024156:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802415a:	eef0 6a43 	vmov.f32	s13, s6
 802415e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024162:	ee12 2a90 	vmov	r2, s5
 8024166:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802416a:	fb92 f3f3 	sdiv	r3, r2, r3
 802416e:	ee13 2a10 	vmov	r2, s6
 8024172:	9327      	str	r3, [sp, #156]	; 0x9c
 8024174:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024176:	fb92 f3f3 	sdiv	r3, r2, r3
 802417a:	9328      	str	r3, [sp, #160]	; 0xa0
 802417c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802417e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024180:	3b01      	subs	r3, #1
 8024182:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024186:	9316      	str	r3, [sp, #88]	; 0x58
 8024188:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802418a:	bf08      	it	eq
 802418c:	4613      	moveq	r3, r2
 802418e:	ee16 6a90 	vmov	r6, s13
 8024192:	9307      	str	r3, [sp, #28]
 8024194:	eeb0 3a67 	vmov.f32	s6, s15
 8024198:	eef0 2a47 	vmov.f32	s5, s14
 802419c:	e622      	b.n	8023de4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802419e:	2800      	cmp	r0, #0
 80241a0:	f43f ae92 	beq.w	8023ec8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80241a4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80241a8:	9308      	str	r3, [sp, #32]
 80241aa:	0e1b      	lsrs	r3, r3, #24
 80241ac:	9310      	str	r3, [sp, #64]	; 0x40
 80241ae:	e68b      	b.n	8023ec8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80241b0:	8839      	ldrh	r1, [r7, #0]
 80241b2:	4dd4      	ldr	r5, [pc, #848]	; (8024504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80241b4:	43db      	mvns	r3, r3
 80241b6:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80241ba:	fa5f f883 	uxtb.w	r8, r3
 80241be:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80241c2:	fb0e fe08 	mul.w	lr, lr, r8
 80241c6:	10c8      	asrs	r0, r1, #3
 80241c8:	00cb      	lsls	r3, r1, #3
 80241ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80241ce:	f10e 0101 	add.w	r1, lr, #1
 80241d2:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80241d6:	fb00 f008 	mul.w	r0, r0, r8
 80241da:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80241de:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80241e2:	f100 0e01 	add.w	lr, r0, #1
 80241e6:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80241ea:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80241ee:	b2db      	uxtb	r3, r3
 80241f0:	b2c9      	uxtb	r1, r1
 80241f2:	00d2      	lsls	r2, r2, #3
 80241f4:	fb03 f308 	mul.w	r3, r3, r8
 80241f8:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80241fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024200:	430a      	orrs	r2, r1
 8024202:	1c59      	adds	r1, r3, #1
 8024204:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024208:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802420c:	e748      	b.n	80240a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802420e:	f112 0801 	adds.w	r8, r2, #1
 8024212:	f53f af4b 	bmi.w	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024216:	4543      	cmp	r3, r8
 8024218:	f6ff af48 	blt.w	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802421c:	f11c 0801 	adds.w	r8, ip, #1
 8024220:	f53f af44 	bmi.w	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024224:	45c6      	cmp	lr, r8
 8024226:	f6ff af41 	blt.w	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802422a:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802422e:	fa0f f28e 	sxth.w	r2, lr
 8024232:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024236:	9200      	str	r2, [sp, #0]
 8024238:	b21b      	sxth	r3, r3
 802423a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802423c:	9819      	ldr	r0, [sp, #100]	; 0x64
 802423e:	4639      	mov	r1, r7
 8024240:	f7ff fc87 	bl	8023b52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024244:	e732      	b.n	80240ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024246:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024248:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802424a:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802424e:	1421      	asrs	r1, r4, #16
 8024250:	1433      	asrs	r3, r6, #16
 8024252:	fb07 1303 	mla	r3, r7, r3, r1
 8024256:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024258:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802425c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024260:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024264:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024268:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802426c:	2a00      	cmp	r2, #0
 802426e:	f000 8107 	beq.w	8024480 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8024272:	684d      	ldr	r5, [r1, #4]
 8024274:	950d      	str	r5, [sp, #52]	; 0x34
 8024276:	0e2d      	lsrs	r5, r5, #24
 8024278:	9514      	str	r5, [sp, #80]	; 0x50
 802427a:	b178      	cbz	r0, 802429c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802427c:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024280:	3f01      	subs	r7, #1
 8024282:	00bf      	lsls	r7, r7, #2
 8024284:	3704      	adds	r7, #4
 8024286:	eb01 0e07 	add.w	lr, r1, r7
 802428a:	59c9      	ldr	r1, [r1, r7]
 802428c:	9109      	str	r1, [sp, #36]	; 0x24
 802428e:	0e09      	lsrs	r1, r1, #24
 8024290:	9111      	str	r1, [sp, #68]	; 0x44
 8024292:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024296:	910e      	str	r1, [sp, #56]	; 0x38
 8024298:	0e09      	lsrs	r1, r1, #24
 802429a:	9115      	str	r1, [sp, #84]	; 0x54
 802429c:	b292      	uxth	r2, r2
 802429e:	b280      	uxth	r0, r0
 80242a0:	fb02 f900 	mul.w	r9, r2, r0
 80242a4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80242a8:	0112      	lsls	r2, r2, #4
 80242aa:	eba2 0e09 	sub.w	lr, r2, r9
 80242ae:	b280      	uxth	r0, r0
 80242b0:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80242b4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80242b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80242b8:	fa1f fe8e 	uxth.w	lr, lr
 80242bc:	1a09      	subs	r1, r1, r0
 80242be:	b289      	uxth	r1, r1
 80242c0:	fb0e f202 	mul.w	r2, lr, r2
 80242c4:	fb01 220c 	mla	r2, r1, ip, r2
 80242c8:	fb00 2205 	mla	r2, r0, r5, r2
 80242cc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80242ce:	fb09 2205 	mla	r2, r9, r5, r2
 80242d2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80242d6:	2a00      	cmp	r2, #0
 80242d8:	f000 80c9 	beq.w	802446e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80242dc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80242e0:	d019      	beq.n	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80242e2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80242e6:	fb0c fa0a 	mul.w	sl, ip, sl
 80242ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80242ee:	fb0c fc03 	mul.w	ip, ip, r3
 80242f2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80242f6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80242fe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8024302:	4453      	add	r3, sl
 8024304:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024308:	0a1b      	lsrs	r3, r3, #8
 802430a:	0a3f      	lsrs	r7, r7, #8
 802430c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024310:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8024314:	433b      	orrs	r3, r7
 8024316:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024318:	2dff      	cmp	r5, #255	; 0xff
 802431a:	d020      	beq.n	802435e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802431c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802431e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024322:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024324:	436f      	muls	r7, r5
 8024326:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024328:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802432c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802432e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024332:	fb05 fa0a 	mul.w	sl, r5, sl
 8024336:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802433a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802433e:	44bc      	add	ip, r7
 8024340:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024344:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802434c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024350:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024354:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024358:	ea4c 050a 	orr.w	r5, ip, sl
 802435c:	950d      	str	r5, [sp, #52]	; 0x34
 802435e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024360:	2dff      	cmp	r5, #255	; 0xff
 8024362:	d020      	beq.n	80243a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024364:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024366:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802436a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802436c:	436f      	muls	r7, r5
 802436e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024370:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024374:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024376:	fb05 fa0c 	mul.w	sl, r5, ip
 802437a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802437e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024382:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024386:	44bc      	add	ip, r7
 8024388:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802438c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024394:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024398:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802439c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243a0:	ea4c 050a 	orr.w	r5, ip, sl
 80243a4:	9509      	str	r5, [sp, #36]	; 0x24
 80243a6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80243a8:	2dff      	cmp	r5, #255	; 0xff
 80243aa:	d020      	beq.n	80243ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80243ac:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80243ae:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80243b2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80243b4:	436f      	muls	r7, r5
 80243b6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80243b8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80243bc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80243be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80243c2:	fb05 fa0a 	mul.w	sl, r5, sl
 80243c6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80243ca:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80243ce:	44bc      	add	ip, r7
 80243d0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80243d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80243d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80243e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80243e4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243e8:	ea4c 050a 	orr.w	r5, ip, sl
 80243ec:	950e      	str	r5, [sp, #56]	; 0x38
 80243ee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80243f0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80243f4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80243f6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80243fa:	fb0e f707 	mul.w	r7, lr, r7
 80243fe:	fb01 770c 	mla	r7, r1, ip, r7
 8024402:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024406:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024408:	fb00 770c 	mla	r7, r0, ip, r7
 802440c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024410:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024412:	fb09 770c 	mla	r7, r9, ip, r7
 8024416:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802441a:	fb0e fe0c 	mul.w	lr, lr, ip
 802441e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024422:	fb01 e303 	mla	r3, r1, r3, lr
 8024426:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024428:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802442c:	990e      	ldr	r1, [sp, #56]	; 0x38
 802442e:	fb00 330a 	mla	r3, r0, sl, r3
 8024432:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8024436:	fb09 3c0c 	mla	ip, r9, ip, r3
 802443a:	0a3f      	lsrs	r7, r7, #8
 802443c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024440:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8024444:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024448:	ea47 070c 	orr.w	r7, r7, ip
 802444c:	2aff      	cmp	r2, #255	; 0xff
 802444e:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8024452:	d11e      	bne.n	8024492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024454:	097a      	lsrs	r2, r7, #5
 8024456:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802445a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802445e:	f023 0307 	bic.w	r3, r3, #7
 8024462:	4313      	orrs	r3, r2
 8024464:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024468:	431f      	orrs	r7, r3
 802446a:	f8a8 7000 	strh.w	r7, [r8]
 802446e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024470:	441c      	add	r4, r3
 8024472:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024474:	f108 0802 	add.w	r8, r8, #2
 8024478:	441e      	add	r6, r3
 802447a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802447e:	e644      	b.n	802410a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024480:	2800      	cmp	r0, #0
 8024482:	f43f af0b 	beq.w	802429c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024486:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802448a:	9109      	str	r1, [sp, #36]	; 0x24
 802448c:	0e09      	lsrs	r1, r1, #24
 802448e:	9111      	str	r1, [sp, #68]	; 0x44
 8024490:	e704      	b.n	802429c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024492:	f8b8 1000 	ldrh.w	r1, [r8]
 8024496:	43d2      	mvns	r2, r2
 8024498:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802449c:	fa5f fe82 	uxtb.w	lr, r2
 80244a0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80244a4:	fb0c fc0e 	mul.w	ip, ip, lr
 80244a8:	10c8      	asrs	r0, r1, #3
 80244aa:	00ca      	lsls	r2, r1, #3
 80244ac:	f10c 0101 	add.w	r1, ip, #1
 80244b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80244b4:	0c39      	lsrs	r1, r7, #16
 80244b6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80244ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80244be:	4911      	ldr	r1, [pc, #68]	; (8024504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80244c0:	fb00 f00e 	mul.w	r0, r0, lr
 80244c4:	fa5f fc8c 	uxtb.w	ip, ip
 80244c8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80244cc:	b2d2      	uxtb	r2, r2
 80244ce:	1c41      	adds	r1, r0, #1
 80244d0:	fb02 f20e 	mul.w	r2, r2, lr
 80244d4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80244d8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80244dc:	1c51      	adds	r1, r2, #1
 80244de:	00c0      	lsls	r0, r0, #3
 80244e0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80244e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80244e8:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80244ec:	ea4c 0c00 	orr.w	ip, ip, r0
 80244f0:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80244f4:	ea47 0c0c 	orr.w	ip, r7, ip
 80244f8:	f8a8 c000 	strh.w	ip, [r8]
 80244fc:	e7b7      	b.n	802446e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80244fe:	b01b      	add	sp, #108	; 0x6c
 8024500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024504:	fffff800 	.word	0xfffff800

08024508 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802450c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024510:	2d00      	cmp	r5, #0
 8024512:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024516:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802451a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802451e:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024522:	fb05 0e03 	mla	lr, r5, r3, r0
 8024526:	f2c0 808c 	blt.w	8024642 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802452a:	45a9      	cmp	r9, r5
 802452c:	f340 8089 	ble.w	8024642 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024530:	2800      	cmp	r0, #0
 8024532:	f2c0 8084 	blt.w	802463e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024536:	4580      	cmp	r8, r0
 8024538:	f340 8081 	ble.w	802463e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802453c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024540:	f01e 0f01 	tst.w	lr, #1
 8024544:	5d16      	ldrb	r6, [r2, r4]
 8024546:	bf0c      	ite	eq
 8024548:	f006 060f 	andeq.w	r6, r6, #15
 802454c:	1136      	asrne	r6, r6, #4
 802454e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024552:	b2f6      	uxtb	r6, r6
 8024554:	1c44      	adds	r4, r0, #1
 8024556:	d477      	bmi.n	8024648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024558:	45a0      	cmp	r8, r4
 802455a:	dd75      	ble.n	8024648 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802455c:	2f00      	cmp	r7, #0
 802455e:	d075      	beq.n	802464c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024560:	f10e 0a01 	add.w	sl, lr, #1
 8024564:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024568:	f01a 0f01 	tst.w	sl, #1
 802456c:	5d14      	ldrb	r4, [r2, r4]
 802456e:	bf0c      	ite	eq
 8024570:	f004 040f 	andeq.w	r4, r4, #15
 8024574:	1124      	asrne	r4, r4, #4
 8024576:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802457a:	b2e4      	uxtb	r4, r4
 802457c:	3501      	adds	r5, #1
 802457e:	d469      	bmi.n	8024654 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024580:	45a9      	cmp	r9, r5
 8024582:	dd67      	ble.n	8024654 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024584:	f1bc 0f00 	cmp.w	ip, #0
 8024588:	d067      	beq.n	802465a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802458a:	2800      	cmp	r0, #0
 802458c:	db60      	blt.n	8024650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802458e:	4580      	cmp	r8, r0
 8024590:	dd5e      	ble.n	8024650 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024592:	eb03 090e 	add.w	r9, r3, lr
 8024596:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802459a:	f019 0f01 	tst.w	r9, #1
 802459e:	5d55      	ldrb	r5, [r2, r5]
 80245a0:	bf0c      	ite	eq
 80245a2:	f005 050f 	andeq.w	r5, r5, #15
 80245a6:	112d      	asrne	r5, r5, #4
 80245a8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80245ac:	b2ed      	uxtb	r5, r5
 80245ae:	3001      	adds	r0, #1
 80245b0:	d456      	bmi.n	8024660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80245b2:	4580      	cmp	r8, r0
 80245b4:	dd54      	ble.n	8024660 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80245b6:	2f00      	cmp	r7, #0
 80245b8:	d054      	beq.n	8024664 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80245ba:	3301      	adds	r3, #1
 80245bc:	449e      	add	lr, r3
 80245be:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80245c2:	f01e 0f01 	tst.w	lr, #1
 80245c6:	5cd0      	ldrb	r0, [r2, r3]
 80245c8:	bf0c      	ite	eq
 80245ca:	f000 000f 	andeq.w	r0, r0, #15
 80245ce:	1100      	asrne	r0, r0, #4
 80245d0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80245d4:	b2c3      	uxtb	r3, r0
 80245d6:	b2ba      	uxth	r2, r7
 80245d8:	fa1f fc8c 	uxth.w	ip, ip
 80245dc:	fb02 f00c 	mul.w	r0, r2, ip
 80245e0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80245e4:	0112      	lsls	r2, r2, #4
 80245e6:	fa1f fc8c 	uxth.w	ip, ip
 80245ea:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80245ee:	1a12      	subs	r2, r2, r0
 80245f0:	eba7 070c 	sub.w	r7, r7, ip
 80245f4:	b292      	uxth	r2, r2
 80245f6:	b2bf      	uxth	r7, r7
 80245f8:	4362      	muls	r2, r4
 80245fa:	fb06 2207 	mla	r2, r6, r7, r2
 80245fe:	fb0c 2505 	mla	r5, ip, r5, r2
 8024602:	fb00 5303 	mla	r3, r0, r3, r5
 8024606:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802460a:	b1b3      	cbz	r3, 802463a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802460c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024610:	435a      	muls	r2, r3
 8024612:	1c53      	adds	r3, r2, #1
 8024614:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024618:	4a2d      	ldr	r2, [pc, #180]	; (80246d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802461a:	121b      	asrs	r3, r3, #8
 802461c:	6812      	ldr	r2, [r2, #0]
 802461e:	2bff      	cmp	r3, #255	; 0xff
 8024620:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024624:	d120      	bne.n	8024668 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024626:	4b2b      	ldr	r3, [pc, #172]	; (80246d4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024628:	0950      	lsrs	r0, r2, #5
 802462a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802462e:	4033      	ands	r3, r6
 8024630:	4318      	orrs	r0, r3
 8024632:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024636:	4302      	orrs	r2, r0
 8024638:	800a      	strh	r2, [r1, #0]
 802463a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802463e:	2600      	movs	r6, #0
 8024640:	e788      	b.n	8024554 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8024642:	2400      	movs	r4, #0
 8024644:	4626      	mov	r6, r4
 8024646:	e799      	b.n	802457c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024648:	2400      	movs	r4, #0
 802464a:	e797      	b.n	802457c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802464c:	463c      	mov	r4, r7
 802464e:	e795      	b.n	802457c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024650:	2500      	movs	r5, #0
 8024652:	e7ac      	b.n	80245ae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024654:	2300      	movs	r3, #0
 8024656:	461d      	mov	r5, r3
 8024658:	e7bd      	b.n	80245d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802465a:	4663      	mov	r3, ip
 802465c:	4665      	mov	r5, ip
 802465e:	e7ba      	b.n	80245d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024660:	2300      	movs	r3, #0
 8024662:	e7b8      	b.n	80245d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024664:	463b      	mov	r3, r7
 8024666:	e7b6      	b.n	80245d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024668:	880d      	ldrh	r5, [r1, #0]
 802466a:	b29f      	uxth	r7, r3
 802466c:	122c      	asrs	r4, r5, #8
 802466e:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024672:	43db      	mvns	r3, r3
 8024674:	b2db      	uxtb	r3, r3
 8024676:	fb10 f007 	smulbb	r0, r0, r7
 802467a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802467e:	fb04 0403 	mla	r4, r4, r3, r0
 8024682:	b2f6      	uxtb	r6, r6
 8024684:	10e8      	asrs	r0, r5, #3
 8024686:	b2d2      	uxtb	r2, r2
 8024688:	00ed      	lsls	r5, r5, #3
 802468a:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802468e:	fb12 f207 	smulbb	r2, r2, r7
 8024692:	fb16 f607 	smulbb	r6, r6, r7
 8024696:	b2ed      	uxtb	r5, r5
 8024698:	b2a4      	uxth	r4, r4
 802469a:	fb00 6603 	mla	r6, r0, r3, r6
 802469e:	fb05 2303 	mla	r3, r5, r3, r2
 80246a2:	b29a      	uxth	r2, r3
 80246a4:	1c63      	adds	r3, r4, #1
 80246a6:	b2b0      	uxth	r0, r6
 80246a8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80246ac:	1c53      	adds	r3, r2, #1
 80246ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80246b2:	1c42      	adds	r2, r0, #1
 80246b4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80246b8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80246bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80246c0:	0940      	lsrs	r0, r0, #5
 80246c2:	4323      	orrs	r3, r4
 80246c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80246c8:	4303      	orrs	r3, r0
 80246ca:	800b      	strh	r3, [r1, #0]
 80246cc:	e7b5      	b.n	802463a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80246ce:	bf00      	nop
 80246d0:	20012dc4 	.word	0x20012dc4
 80246d4:	00fff800 	.word	0x00fff800

080246d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80246d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246dc:	b097      	sub	sp, #92	; 0x5c
 80246de:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 80246e2:	9214      	str	r2, [sp, #80]	; 0x50
 80246e4:	9309      	str	r3, [sp, #36]	; 0x24
 80246e6:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80246e8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80246ec:	910d      	str	r1, [sp, #52]	; 0x34
 80246ee:	930f      	str	r3, [sp, #60]	; 0x3c
 80246f0:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80246f4:	9015      	str	r0, [sp, #84]	; 0x54
 80246f6:	6850      	ldr	r0, [r2, #4]
 80246f8:	6812      	ldr	r2, [r2, #0]
 80246fa:	fb00 1303 	mla	r3, r0, r3, r1
 80246fe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024702:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024704:	689b      	ldr	r3, [r3, #8]
 8024706:	3301      	adds	r3, #1
 8024708:	f023 0301 	bic.w	r3, r3, #1
 802470c:	930a      	str	r3, [sp, #40]	; 0x28
 802470e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024710:	681f      	ldr	r7, [r3, #0]
 8024712:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024714:	2b00      	cmp	r3, #0
 8024716:	dc03      	bgt.n	8024720 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024718:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802471a:	2b00      	cmp	r3, #0
 802471c:	f340 8287 	ble.w	8024c2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024720:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024722:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024726:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802472a:	1e48      	subs	r0, r1, #1
 802472c:	f102 3cff 	add.w	ip, r2, #4294967295
 8024730:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024732:	2b00      	cmp	r3, #0
 8024734:	f340 80c4 	ble.w	80248c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024738:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802473c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024740:	d406      	bmi.n	8024750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024742:	4586      	cmp	lr, r0
 8024744:	da04      	bge.n	8024750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024746:	2b00      	cmp	r3, #0
 8024748:	db02      	blt.n	8024750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802474a:	4563      	cmp	r3, ip
 802474c:	f2c0 80b9 	blt.w	80248c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024750:	f11e 0e01 	adds.w	lr, lr, #1
 8024754:	f100 80aa 	bmi.w	80248ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024758:	4571      	cmp	r1, lr
 802475a:	f2c0 80a7 	blt.w	80248ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802475e:	3301      	adds	r3, #1
 8024760:	f100 80a4 	bmi.w	80248ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024764:	429a      	cmp	r2, r3
 8024766:	f2c0 80a1 	blt.w	80248ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802476a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802476c:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024770:	930e      	str	r3, [sp, #56]	; 0x38
 8024772:	46c8      	mov	r8, r9
 8024774:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024776:	2b00      	cmp	r3, #0
 8024778:	f340 80c3 	ble.w	8024902 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802477c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802477e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024782:	1423      	asrs	r3, r4, #16
 8024784:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024788:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802478c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024790:	f100 814d 	bmi.w	8024a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024794:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024798:	455b      	cmp	r3, fp
 802479a:	f280 8148 	bge.w	8024a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802479e:	2800      	cmp	r0, #0
 80247a0:	f2c0 8145 	blt.w	8024a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80247a4:	f10e 3bff 	add.w	fp, lr, #4294967295
 80247a8:	4558      	cmp	r0, fp
 80247aa:	f280 8140 	bge.w	8024a2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80247ae:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80247b0:	fb00 3305 	mla	r3, r0, r5, r3
 80247b4:	0858      	lsrs	r0, r3, #1
 80247b6:	07dd      	lsls	r5, r3, #31
 80247b8:	f817 c000 	ldrb.w	ip, [r7, r0]
 80247bc:	bf54      	ite	pl
 80247be:	f00c 0c0f 	andpl.w	ip, ip, #15
 80247c2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80247c6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80247ca:	fa5f fc8c 	uxtb.w	ip, ip
 80247ce:	2a00      	cmp	r2, #0
 80247d0:	f000 80db 	beq.w	802498a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80247d4:	1c58      	adds	r0, r3, #1
 80247d6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80247da:	07c0      	lsls	r0, r0, #31
 80247dc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80247e0:	bf54      	ite	pl
 80247e2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80247e6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80247ea:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80247ee:	fa5f f08e 	uxtb.w	r0, lr
 80247f2:	9010      	str	r0, [sp, #64]	; 0x40
 80247f4:	b1c9      	cbz	r1, 802482a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80247f6:	4453      	add	r3, sl
 80247f8:	0858      	lsrs	r0, r3, #1
 80247fa:	07dd      	lsls	r5, r3, #31
 80247fc:	5c38      	ldrb	r0, [r7, r0]
 80247fe:	bf54      	ite	pl
 8024800:	f000 000f 	andpl.w	r0, r0, #15
 8024804:	1100      	asrmi	r0, r0, #4
 8024806:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802480a:	3301      	adds	r3, #1
 802480c:	b2c0      	uxtb	r0, r0
 802480e:	900b      	str	r0, [sp, #44]	; 0x2c
 8024810:	0858      	lsrs	r0, r3, #1
 8024812:	07dd      	lsls	r5, r3, #31
 8024814:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024818:	bf54      	ite	pl
 802481a:	f00e 030f 	andpl.w	r3, lr, #15
 802481e:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024822:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024826:	b2db      	uxtb	r3, r3
 8024828:	9311      	str	r3, [sp, #68]	; 0x44
 802482a:	b292      	uxth	r2, r2
 802482c:	b289      	uxth	r1, r1
 802482e:	fb02 f301 	mul.w	r3, r2, r1
 8024832:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024836:	0112      	lsls	r2, r2, #4
 8024838:	b289      	uxth	r1, r1
 802483a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802483e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024840:	1ad2      	subs	r2, r2, r3
 8024842:	1a40      	subs	r0, r0, r1
 8024844:	b292      	uxth	r2, r2
 8024846:	436a      	muls	r2, r5
 8024848:	b280      	uxth	r0, r0
 802484a:	fb0c 2c00 	mla	ip, ip, r0, r2
 802484e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024850:	fb01 c102 	mla	r1, r1, r2, ip
 8024854:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024856:	fb03 1302 	mla	r3, r3, r2, r1
 802485a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802485e:	b1db      	cbz	r3, 8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024860:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024862:	4353      	muls	r3, r2
 8024864:	1c5a      	adds	r2, r3, #1
 8024866:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802486a:	4ac6      	ldr	r2, [pc, #792]	; (8024b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802486c:	121b      	asrs	r3, r3, #8
 802486e:	6812      	ldr	r2, [r2, #0]
 8024870:	2bff      	cmp	r3, #255	; 0xff
 8024872:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024876:	f040 8099 	bne.w	80249ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802487a:	0953      	lsrs	r3, r2, #5
 802487c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024880:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024884:	f02c 0c07 	bic.w	ip, ip, #7
 8024888:	ea43 0c0c 	orr.w	ip, r3, ip
 802488c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024890:	ea4c 0202 	orr.w	r2, ip, r2
 8024894:	f8a8 2000 	strh.w	r2, [r8]
 8024898:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802489a:	441c      	add	r4, r3
 802489c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802489e:	441e      	add	r6, r3
 80248a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80248a2:	3b01      	subs	r3, #1
 80248a4:	f108 0802 	add.w	r8, r8, #2
 80248a8:	930e      	str	r3, [sp, #56]	; 0x38
 80248aa:	e763      	b.n	8024774 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80248ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80248ae:	441c      	add	r4, r3
 80248b0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80248b2:	441e      	add	r6, r3
 80248b4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248b6:	3b01      	subs	r3, #1
 80248b8:	9309      	str	r3, [sp, #36]	; 0x24
 80248ba:	f109 0902 	add.w	r9, r9, #2
 80248be:	e737      	b.n	8024730 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80248c0:	d024      	beq.n	802490c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80248c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248c4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80248c6:	3b01      	subs	r3, #1
 80248c8:	fb00 4003 	mla	r0, r0, r3, r4
 80248cc:	1400      	asrs	r0, r0, #16
 80248ce:	f53f af4c 	bmi.w	802476a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248d2:	3901      	subs	r1, #1
 80248d4:	4288      	cmp	r0, r1
 80248d6:	f6bf af48 	bge.w	802476a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248da:	9924      	ldr	r1, [sp, #144]	; 0x90
 80248dc:	fb01 6303 	mla	r3, r1, r3, r6
 80248e0:	141b      	asrs	r3, r3, #16
 80248e2:	f53f af42 	bmi.w	802476a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248e6:	3a01      	subs	r2, #1
 80248e8:	4293      	cmp	r3, r2
 80248ea:	f6bf af3e 	bge.w	802476a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248ee:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80248f2:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80248f6:	930e      	str	r3, [sp, #56]	; 0x38
 80248f8:	46c8      	mov	r8, r9
 80248fa:	f1bb 0f00 	cmp.w	fp, #0
 80248fe:	f300 80b7 	bgt.w	8024a70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024902:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024904:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024908:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802490c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802490e:	2b00      	cmp	r3, #0
 8024910:	f340 818d 	ble.w	8024c2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024914:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024918:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802491c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024920:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024922:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024926:	ee31 1a05 	vadd.f32	s2, s2, s10
 802492a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802492e:	eef0 6a62 	vmov.f32	s13, s5
 8024932:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024936:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802493a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802493e:	ee16 4a90 	vmov	r4, s13
 8024942:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024946:	eef0 6a43 	vmov.f32	s13, s6
 802494a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802494e:	ee12 2a90 	vmov	r2, s5
 8024952:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024956:	fb92 f3f3 	sdiv	r3, r2, r3
 802495a:	ee13 2a10 	vmov	r2, s6
 802495e:	9323      	str	r3, [sp, #140]	; 0x8c
 8024960:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024962:	fb92 f3f3 	sdiv	r3, r2, r3
 8024966:	9324      	str	r3, [sp, #144]	; 0x90
 8024968:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802496a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802496c:	3b01      	subs	r3, #1
 802496e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024972:	930d      	str	r3, [sp, #52]	; 0x34
 8024974:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024976:	bf08      	it	eq
 8024978:	4613      	moveq	r3, r2
 802497a:	ee16 6a90 	vmov	r6, s13
 802497e:	9309      	str	r3, [sp, #36]	; 0x24
 8024980:	eeb0 3a67 	vmov.f32	s6, s15
 8024984:	eef0 2a47 	vmov.f32	s5, s14
 8024988:	e6c3      	b.n	8024712 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802498a:	2900      	cmp	r1, #0
 802498c:	f43f af4d 	beq.w	802482a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024990:	eb0a 0003 	add.w	r0, sl, r3
 8024994:	0843      	lsrs	r3, r0, #1
 8024996:	07c0      	lsls	r0, r0, #31
 8024998:	5cfb      	ldrb	r3, [r7, r3]
 802499a:	bf54      	ite	pl
 802499c:	f003 030f 	andpl.w	r3, r3, #15
 80249a0:	111b      	asrmi	r3, r3, #4
 80249a2:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80249a6:	b2db      	uxtb	r3, r3
 80249a8:	930b      	str	r3, [sp, #44]	; 0x2c
 80249aa:	e73e      	b.n	802482a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80249ac:	f8b8 e000 	ldrh.w	lr, [r8]
 80249b0:	fa1f fb83 	uxth.w	fp, r3
 80249b4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80249b8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80249bc:	43db      	mvns	r3, r3
 80249be:	b2db      	uxtb	r3, r3
 80249c0:	fb11 f10b 	smulbb	r1, r1, fp
 80249c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80249c8:	fb00 1003 	mla	r0, r0, r3, r1
 80249cc:	fa5f fc8c 	uxtb.w	ip, ip
 80249d0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80249d4:	b2d2      	uxtb	r2, r2
 80249d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80249da:	b280      	uxth	r0, r0
 80249dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80249e0:	fb1c fc0b 	smulbb	ip, ip, fp
 80249e4:	fa5f fe8e 	uxtb.w	lr, lr
 80249e8:	fb12 fb0b 	smulbb	fp, r2, fp
 80249ec:	fb01 cc03 	mla	ip, r1, r3, ip
 80249f0:	fb0e bb03 	mla	fp, lr, r3, fp
 80249f4:	1c43      	adds	r3, r0, #1
 80249f6:	fa1f fc8c 	uxth.w	ip, ip
 80249fa:	fa1f fb8b 	uxth.w	fp, fp
 80249fe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024a02:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024a06:	f10c 0101 	add.w	r1, ip, #1
 8024a0a:	f10b 0001 	add.w	r0, fp, #1
 8024a0e:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024a12:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024a16:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024a1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024a1e:	4318      	orrs	r0, r3
 8024a20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024a24:	ea40 000c 	orr.w	r0, r0, ip
 8024a28:	f8a8 0000 	strh.w	r0, [r8]
 8024a2c:	e734      	b.n	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a2e:	f113 0b01 	adds.w	fp, r3, #1
 8024a32:	f53f af31 	bmi.w	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a36:	45dc      	cmp	ip, fp
 8024a38:	f6ff af2e 	blt.w	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a3c:	f110 0b01 	adds.w	fp, r0, #1
 8024a40:	f53f af2a 	bmi.w	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a44:	45de      	cmp	lr, fp
 8024a46:	f6ff af27 	blt.w	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a4a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a4c:	9302      	str	r3, [sp, #8]
 8024a4e:	fa0f f38e 	sxth.w	r3, lr
 8024a52:	9301      	str	r3, [sp, #4]
 8024a54:	fa0f f38c 	sxth.w	r3, ip
 8024a58:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024a5c:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024a60:	9300      	str	r3, [sp, #0]
 8024a62:	463a      	mov	r2, r7
 8024a64:	4653      	mov	r3, sl
 8024a66:	4641      	mov	r1, r8
 8024a68:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024a6a:	f7ff fd4d 	bl	8024508 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024a6e:	e713      	b.n	8024898 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a70:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024a72:	1422      	asrs	r2, r4, #16
 8024a74:	1433      	asrs	r3, r6, #16
 8024a76:	fb05 2303 	mla	r3, r5, r3, r2
 8024a7a:	085a      	lsrs	r2, r3, #1
 8024a7c:	07dd      	lsls	r5, r3, #31
 8024a7e:	5cba      	ldrb	r2, [r7, r2]
 8024a80:	bf54      	ite	pl
 8024a82:	f002 020f 	andpl.w	r2, r2, #15
 8024a86:	1112      	asrmi	r2, r2, #4
 8024a88:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024a8c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024a90:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a94:	b2d2      	uxtb	r2, r2
 8024a96:	2900      	cmp	r1, #0
 8024a98:	d076      	beq.n	8024b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024a9a:	f103 0e01 	add.w	lr, r3, #1
 8024a9e:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024aa2:	f01e 0f01 	tst.w	lr, #1
 8024aa6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024aaa:	bf0c      	ite	eq
 8024aac:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024ab0:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024ab4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ab8:	fa5f f58c 	uxtb.w	r5, ip
 8024abc:	9512      	str	r5, [sp, #72]	; 0x48
 8024abe:	b300      	cbz	r0, 8024b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024ac0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024ac2:	442b      	add	r3, r5
 8024ac4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024ac8:	07dd      	lsls	r5, r3, #31
 8024aca:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024ace:	bf54      	ite	pl
 8024ad0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ad4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ad8:	3301      	adds	r3, #1
 8024ada:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ade:	fa5f f58c 	uxtb.w	r5, ip
 8024ae2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024ae6:	950c      	str	r5, [sp, #48]	; 0x30
 8024ae8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024aec:	07dd      	lsls	r5, r3, #31
 8024aee:	bf54      	ite	pl
 8024af0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024af4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024af8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024afc:	fa5f f38c 	uxtb.w	r3, ip
 8024b00:	9313      	str	r3, [sp, #76]	; 0x4c
 8024b02:	b289      	uxth	r1, r1
 8024b04:	b280      	uxth	r0, r0
 8024b06:	fb01 f300 	mul.w	r3, r1, r0
 8024b0a:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024b0e:	0109      	lsls	r1, r1, #4
 8024b10:	b280      	uxth	r0, r0
 8024b12:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024b16:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024b18:	1ac9      	subs	r1, r1, r3
 8024b1a:	ebac 0c00 	sub.w	ip, ip, r0
 8024b1e:	b289      	uxth	r1, r1
 8024b20:	4369      	muls	r1, r5
 8024b22:	fa1f fc8c 	uxth.w	ip, ip
 8024b26:	fb02 120c 	mla	r2, r2, ip, r1
 8024b2a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024b2c:	fb00 2001 	mla	r0, r0, r1, r2
 8024b30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024b32:	fb03 0302 	mla	r3, r3, r2, r0
 8024b36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b3a:	b1d3      	cbz	r3, 8024b72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024b3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024b3e:	4353      	muls	r3, r2
 8024b40:	1c5a      	adds	r2, r3, #1
 8024b42:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024b46:	4a0f      	ldr	r2, [pc, #60]	; (8024b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024b48:	121b      	asrs	r3, r3, #8
 8024b4a:	6812      	ldr	r2, [r2, #0]
 8024b4c:	2bff      	cmp	r3, #255	; 0xff
 8024b4e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024b52:	d12d      	bne.n	8024bb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024b54:	0953      	lsrs	r3, r2, #5
 8024b56:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024b5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b5e:	f02c 0c07 	bic.w	ip, ip, #7
 8024b62:	ea43 0c0c 	orr.w	ip, r3, ip
 8024b66:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024b6a:	ea4c 0202 	orr.w	r2, ip, r2
 8024b6e:	f8a8 2000 	strh.w	r2, [r8]
 8024b72:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b74:	441c      	add	r4, r3
 8024b76:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b78:	f108 0802 	add.w	r8, r8, #2
 8024b7c:	441e      	add	r6, r3
 8024b7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024b82:	e6ba      	b.n	80248fa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024b84:	20012dc4 	.word	0x20012dc4
 8024b88:	2800      	cmp	r0, #0
 8024b8a:	d0ba      	beq.n	8024b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b8c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b8e:	442b      	add	r3, r5
 8024b90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024b94:	07db      	lsls	r3, r3, #31
 8024b96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024b9a:	bf54      	ite	pl
 8024b9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ba0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ba4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ba8:	fa5f f38c 	uxtb.w	r3, ip
 8024bac:	930c      	str	r3, [sp, #48]	; 0x30
 8024bae:	e7a8      	b.n	8024b02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024bb0:	f8b8 e000 	ldrh.w	lr, [r8]
 8024bb4:	fa1f fa83 	uxth.w	sl, r3
 8024bb8:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024bbc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024bc0:	43db      	mvns	r3, r3
 8024bc2:	b2db      	uxtb	r3, r3
 8024bc4:	fb11 f10a 	smulbb	r1, r1, sl
 8024bc8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024bcc:	fb00 1003 	mla	r0, r0, r3, r1
 8024bd0:	b2d2      	uxtb	r2, r2
 8024bd2:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024bd6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024bda:	fa5f fe8e 	uxtb.w	lr, lr
 8024bde:	fb12 f20a 	smulbb	r2, r2, sl
 8024be2:	fb0e 2203 	mla	r2, lr, r3, r2
 8024be6:	fa5f fc8c 	uxtb.w	ip, ip
 8024bea:	b280      	uxth	r0, r0
 8024bec:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024bf0:	b292      	uxth	r2, r2
 8024bf2:	fb1c fc0a 	smulbb	ip, ip, sl
 8024bf6:	fb01 cc03 	mla	ip, r1, r3, ip
 8024bfa:	1c43      	adds	r3, r0, #1
 8024bfc:	1c51      	adds	r1, r2, #1
 8024bfe:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c02:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024c06:	fa1f fc8c 	uxth.w	ip, ip
 8024c0a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024c0e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024c12:	4308      	orrs	r0, r1
 8024c14:	f10c 0101 	add.w	r1, ip, #1
 8024c18:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c1c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024c20:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024c24:	ea40 000c 	orr.w	r0, r0, ip
 8024c28:	f8a8 0000 	strh.w	r0, [r8]
 8024c2c:	e7a1      	b.n	8024b72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024c2e:	b017      	add	sp, #92	; 0x5c
 8024c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024c38:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024c3c:	2d00      	cmp	r5, #0
 8024c3e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024c42:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024c46:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024c4a:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024c4e:	fb05 0e03 	mla	lr, r5, r3, r0
 8024c52:	f2c0 80b0 	blt.w	8024db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c56:	45a9      	cmp	r9, r5
 8024c58:	f340 80ad 	ble.w	8024db6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c5c:	2800      	cmp	r0, #0
 8024c5e:	f2c0 80a8 	blt.w	8024db2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c62:	4580      	cmp	r8, r0
 8024c64:	f340 80a5 	ble.w	8024db2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c68:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024c6c:	f01e 0f01 	tst.w	lr, #1
 8024c70:	5d16      	ldrb	r6, [r2, r4]
 8024c72:	bf0c      	ite	eq
 8024c74:	f006 060f 	andeq.w	r6, r6, #15
 8024c78:	1136      	asrne	r6, r6, #4
 8024c7a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024c7e:	b2f6      	uxtb	r6, r6
 8024c80:	1c44      	adds	r4, r0, #1
 8024c82:	f100 809b 	bmi.w	8024dbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c86:	45a0      	cmp	r8, r4
 8024c88:	f340 8098 	ble.w	8024dbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c8c:	2f00      	cmp	r7, #0
 8024c8e:	f000 8097 	beq.w	8024dc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024c92:	f10e 0a01 	add.w	sl, lr, #1
 8024c96:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024c9a:	f01a 0f01 	tst.w	sl, #1
 8024c9e:	5d14      	ldrb	r4, [r2, r4]
 8024ca0:	bf0c      	ite	eq
 8024ca2:	f004 040f 	andeq.w	r4, r4, #15
 8024ca6:	1124      	asrne	r4, r4, #4
 8024ca8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024cac:	b2e4      	uxtb	r4, r4
 8024cae:	3501      	adds	r5, #1
 8024cb0:	f100 808a 	bmi.w	8024dc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024cb4:	45a9      	cmp	r9, r5
 8024cb6:	f340 8087 	ble.w	8024dc8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024cba:	f1bc 0f00 	cmp.w	ip, #0
 8024cbe:	f000 8086 	beq.w	8024dce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024cc2:	2800      	cmp	r0, #0
 8024cc4:	db7e      	blt.n	8024dc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024cc6:	4580      	cmp	r8, r0
 8024cc8:	dd7c      	ble.n	8024dc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024cca:	eb03 090e 	add.w	r9, r3, lr
 8024cce:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024cd2:	f019 0f01 	tst.w	r9, #1
 8024cd6:	5d55      	ldrb	r5, [r2, r5]
 8024cd8:	bf0c      	ite	eq
 8024cda:	f005 050f 	andeq.w	r5, r5, #15
 8024cde:	112d      	asrne	r5, r5, #4
 8024ce0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024ce4:	b2ed      	uxtb	r5, r5
 8024ce6:	3001      	adds	r0, #1
 8024ce8:	d474      	bmi.n	8024dd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024cea:	4580      	cmp	r8, r0
 8024cec:	dd72      	ble.n	8024dd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024cee:	2f00      	cmp	r7, #0
 8024cf0:	d072      	beq.n	8024dd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024cf2:	3301      	adds	r3, #1
 8024cf4:	449e      	add	lr, r3
 8024cf6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024cfa:	f01e 0f01 	tst.w	lr, #1
 8024cfe:	5cd0      	ldrb	r0, [r2, r3]
 8024d00:	bf0c      	ite	eq
 8024d02:	f000 000f 	andeq.w	r0, r0, #15
 8024d06:	1100      	asrne	r0, r0, #4
 8024d08:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024d0c:	b2c3      	uxtb	r3, r0
 8024d0e:	b2ba      	uxth	r2, r7
 8024d10:	fa1f fc8c 	uxth.w	ip, ip
 8024d14:	fb02 f00c 	mul.w	r0, r2, ip
 8024d18:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024d1c:	0112      	lsls	r2, r2, #4
 8024d1e:	fa1f fc8c 	uxth.w	ip, ip
 8024d22:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024d26:	1a12      	subs	r2, r2, r0
 8024d28:	eba7 070c 	sub.w	r7, r7, ip
 8024d2c:	b292      	uxth	r2, r2
 8024d2e:	b2bf      	uxth	r7, r7
 8024d30:	4362      	muls	r2, r4
 8024d32:	fb06 2207 	mla	r2, r6, r7, r2
 8024d36:	fb0c 2505 	mla	r5, ip, r5, r2
 8024d3a:	fb00 5303 	mla	r3, r0, r3, r5
 8024d3e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d42:	b3a3      	cbz	r3, 8024dae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024d44:	4a25      	ldr	r2, [pc, #148]	; (8024ddc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024d46:	880e      	ldrh	r6, [r1, #0]
 8024d48:	6815      	ldr	r5, [r2, #0]
 8024d4a:	1234      	asrs	r4, r6, #8
 8024d4c:	b29a      	uxth	r2, r3
 8024d4e:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024d52:	43db      	mvns	r3, r3
 8024d54:	b2db      	uxtb	r3, r3
 8024d56:	fb10 f002 	smulbb	r0, r0, r2
 8024d5a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024d5e:	fb04 0403 	mla	r4, r4, r3, r0
 8024d62:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024d66:	10f0      	asrs	r0, r6, #3
 8024d68:	b2ed      	uxtb	r5, r5
 8024d6a:	00f6      	lsls	r6, r6, #3
 8024d6c:	fb17 f702 	smulbb	r7, r7, r2
 8024d70:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024d74:	fb15 f202 	smulbb	r2, r5, r2
 8024d78:	b2f6      	uxtb	r6, r6
 8024d7a:	b2a4      	uxth	r4, r4
 8024d7c:	fb00 7003 	mla	r0, r0, r3, r7
 8024d80:	fb06 2303 	mla	r3, r6, r3, r2
 8024d84:	b29a      	uxth	r2, r3
 8024d86:	1c63      	adds	r3, r4, #1
 8024d88:	b280      	uxth	r0, r0
 8024d8a:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024d8e:	1c53      	adds	r3, r2, #1
 8024d90:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d94:	1c42      	adds	r2, r0, #1
 8024d96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d9a:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024d9e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024da2:	0940      	lsrs	r0, r0, #5
 8024da4:	4323      	orrs	r3, r4
 8024da6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024daa:	4303      	orrs	r3, r0
 8024dac:	800b      	strh	r3, [r1, #0]
 8024dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024db2:	2600      	movs	r6, #0
 8024db4:	e764      	b.n	8024c80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024db6:	2400      	movs	r4, #0
 8024db8:	4626      	mov	r6, r4
 8024dba:	e778      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024dbc:	2400      	movs	r4, #0
 8024dbe:	e776      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024dc0:	463c      	mov	r4, r7
 8024dc2:	e774      	b.n	8024cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024dc4:	2500      	movs	r5, #0
 8024dc6:	e78e      	b.n	8024ce6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024dc8:	2300      	movs	r3, #0
 8024dca:	461d      	mov	r5, r3
 8024dcc:	e79f      	b.n	8024d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024dce:	4663      	mov	r3, ip
 8024dd0:	4665      	mov	r5, ip
 8024dd2:	e79c      	b.n	8024d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024dd4:	2300      	movs	r3, #0
 8024dd6:	e79a      	b.n	8024d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024dd8:	463b      	mov	r3, r7
 8024dda:	e798      	b.n	8024d0e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024ddc:	20012dc4 	.word	0x20012dc4

08024de0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024de4:	b093      	sub	sp, #76	; 0x4c
 8024de6:	461d      	mov	r5, r3
 8024de8:	920c      	str	r2, [sp, #48]	; 0x30
 8024dea:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024dec:	9107      	str	r1, [sp, #28]
 8024dee:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024df2:	9011      	str	r0, [sp, #68]	; 0x44
 8024df4:	6850      	ldr	r0, [r2, #4]
 8024df6:	6812      	ldr	r2, [r2, #0]
 8024df8:	fb00 1303 	mla	r3, r0, r3, r1
 8024dfc:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024e00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e02:	689b      	ldr	r3, [r3, #8]
 8024e04:	3301      	adds	r3, #1
 8024e06:	f023 0301 	bic.w	r3, r3, #1
 8024e0a:	9306      	str	r3, [sp, #24]
 8024e0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e0e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024e12:	681f      	ldr	r7, [r3, #0]
 8024e14:	9b07      	ldr	r3, [sp, #28]
 8024e16:	2b00      	cmp	r3, #0
 8024e18:	dc03      	bgt.n	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024e1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024e1c:	2b00      	cmp	r3, #0
 8024e1e:	f340 8267 	ble.w	80252f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024e22:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e24:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e28:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024e2c:	1e48      	subs	r0, r1, #1
 8024e2e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024e32:	2d00      	cmp	r5, #0
 8024e34:	f340 80b8 	ble.w	8024fa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024e38:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024e3c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e40:	d406      	bmi.n	8024e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e42:	4586      	cmp	lr, r0
 8024e44:	da04      	bge.n	8024e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e46:	2b00      	cmp	r3, #0
 8024e48:	db02      	blt.n	8024e50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e4a:	4563      	cmp	r3, ip
 8024e4c:	f2c0 80ad 	blt.w	8024faa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024e50:	f11e 0e01 	adds.w	lr, lr, #1
 8024e54:	f100 80a0 	bmi.w	8024f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e58:	4571      	cmp	r1, lr
 8024e5a:	f2c0 809d 	blt.w	8024f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e5e:	3301      	adds	r3, #1
 8024e60:	f100 809a 	bmi.w	8024f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e64:	429a      	cmp	r2, r3
 8024e66:	f2c0 8097 	blt.w	8024f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e6a:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024e6e:	9509      	str	r5, [sp, #36]	; 0x24
 8024e70:	46c8      	mov	r8, r9
 8024e72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e74:	2b00      	cmp	r3, #0
 8024e76:	f340 80b6 	ble.w	8024fe6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024e7a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024e7e:	9308      	str	r3, [sp, #32]
 8024e80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e82:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024e86:	1423      	asrs	r3, r4, #16
 8024e88:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e8c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024e90:	f100 813e 	bmi.w	8025110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e94:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024e98:	455b      	cmp	r3, fp
 8024e9a:	f280 8139 	bge.w	8025110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e9e:	2800      	cmp	r0, #0
 8024ea0:	f2c0 8136 	blt.w	8025110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024ea4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024ea8:	4558      	cmp	r0, fp
 8024eaa:	f280 8131 	bge.w	8025110 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024eae:	9a06      	ldr	r2, [sp, #24]
 8024eb0:	fb00 3302 	mla	r3, r0, r2, r3
 8024eb4:	0858      	lsrs	r0, r3, #1
 8024eb6:	07da      	lsls	r2, r3, #31
 8024eb8:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024ebc:	9a08      	ldr	r2, [sp, #32]
 8024ebe:	bf54      	ite	pl
 8024ec0:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ec4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ec8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ecc:	fa5f fc8c 	uxtb.w	ip, ip
 8024ed0:	2a00      	cmp	r2, #0
 8024ed2:	f000 80cb 	beq.w	802506c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024ed6:	1c58      	adds	r0, r3, #1
 8024ed8:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024edc:	07c0      	lsls	r0, r0, #31
 8024ede:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024ee2:	bf54      	ite	pl
 8024ee4:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ee8:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024eec:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024ef0:	fa5f fe8e 	uxtb.w	lr, lr
 8024ef4:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024ef8:	b1b9      	cbz	r1, 8024f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024efa:	4453      	add	r3, sl
 8024efc:	0858      	lsrs	r0, r3, #1
 8024efe:	07da      	lsls	r2, r3, #31
 8024f00:	5c38      	ldrb	r0, [r7, r0]
 8024f02:	bf54      	ite	pl
 8024f04:	f000 000f 	andpl.w	r0, r0, #15
 8024f08:	1100      	asrmi	r0, r0, #4
 8024f0a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024f0e:	b2c0      	uxtb	r0, r0
 8024f10:	900a      	str	r0, [sp, #40]	; 0x28
 8024f12:	1c58      	adds	r0, r3, #1
 8024f14:	0843      	lsrs	r3, r0, #1
 8024f16:	07c2      	lsls	r2, r0, #31
 8024f18:	5cfb      	ldrb	r3, [r7, r3]
 8024f1a:	bf54      	ite	pl
 8024f1c:	f003 030f 	andpl.w	r3, r3, #15
 8024f20:	111b      	asrmi	r3, r3, #4
 8024f22:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024f26:	b2db      	uxtb	r3, r3
 8024f28:	930e      	str	r3, [sp, #56]	; 0x38
 8024f2a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024f2e:	b289      	uxth	r1, r1
 8024f30:	fb02 f301 	mul.w	r3, r2, r1
 8024f34:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024f38:	0112      	lsls	r2, r2, #4
 8024f3a:	b289      	uxth	r1, r1
 8024f3c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024f40:	1a40      	subs	r0, r0, r1
 8024f42:	fa1f fe80 	uxth.w	lr, r0
 8024f46:	1ad2      	subs	r2, r2, r3
 8024f48:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024f4a:	b292      	uxth	r2, r2
 8024f4c:	4342      	muls	r2, r0
 8024f4e:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024f52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024f54:	fb01 c102 	mla	r1, r1, r2, ip
 8024f58:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024f5a:	fb03 1302 	mla	r3, r3, r2, r1
 8024f5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f62:	2bff      	cmp	r3, #255	; 0xff
 8024f64:	f040 8093 	bne.w	802508e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024f68:	4bbe      	ldr	r3, [pc, #760]	; (8025264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f6a:	681a      	ldr	r2, [r3, #0]
 8024f6c:	4bbe      	ldr	r3, [pc, #760]	; (8025268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024f6e:	0951      	lsrs	r1, r2, #5
 8024f70:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024f74:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024f78:	430b      	orrs	r3, r1
 8024f7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f7e:	4313      	orrs	r3, r2
 8024f80:	f8a8 3000 	strh.w	r3, [r8]
 8024f84:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024f86:	441c      	add	r4, r3
 8024f88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f8a:	441e      	add	r6, r3
 8024f8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f8e:	3b01      	subs	r3, #1
 8024f90:	f108 0802 	add.w	r8, r8, #2
 8024f94:	9309      	str	r3, [sp, #36]	; 0x24
 8024f96:	e76c      	b.n	8024e72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024f9a:	441c      	add	r4, r3
 8024f9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f9e:	3d01      	subs	r5, #1
 8024fa0:	441e      	add	r6, r3
 8024fa2:	f109 0902 	add.w	r9, r9, #2
 8024fa6:	e744      	b.n	8024e32 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024fa8:	d021      	beq.n	8024fee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024faa:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024fac:	1e6b      	subs	r3, r5, #1
 8024fae:	fb00 4003 	mla	r0, r0, r3, r4
 8024fb2:	1400      	asrs	r0, r0, #16
 8024fb4:	f53f af59 	bmi.w	8024e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fb8:	3901      	subs	r1, #1
 8024fba:	4288      	cmp	r0, r1
 8024fbc:	f6bf af55 	bge.w	8024e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fc0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024fc2:	fb01 6303 	mla	r3, r1, r3, r6
 8024fc6:	141b      	asrs	r3, r3, #16
 8024fc8:	f53f af4f 	bmi.w	8024e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fcc:	3a01      	subs	r2, #1
 8024fce:	4293      	cmp	r3, r2
 8024fd0:	f6bf af4b 	bge.w	8024e6a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fd4:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024fd8:	9308      	str	r3, [sp, #32]
 8024fda:	46a8      	mov	r8, r5
 8024fdc:	46ce      	mov	lr, r9
 8024fde:	f1b8 0f00 	cmp.w	r8, #0
 8024fe2:	f300 80b5 	bgt.w	8025150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024fe6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024fea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024fee:	9b07      	ldr	r3, [sp, #28]
 8024ff0:	2b00      	cmp	r3, #0
 8024ff2:	f340 817d 	ble.w	80252f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024ff6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024ffa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024ffe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8025002:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025004:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025008:	ee31 1a05 	vadd.f32	s2, s2, s10
 802500c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025010:	eef0 6a62 	vmov.f32	s13, s5
 8025014:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025018:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802501c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025020:	ee16 4a90 	vmov	r4, s13
 8025024:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025028:	eef0 6a43 	vmov.f32	s13, s6
 802502c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025030:	ee12 2a90 	vmov	r2, s5
 8025034:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025038:	fb92 f3f3 	sdiv	r3, r2, r3
 802503c:	ee13 2a10 	vmov	r2, s6
 8025040:	931f      	str	r3, [sp, #124]	; 0x7c
 8025042:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025044:	fb92 f3f3 	sdiv	r3, r2, r3
 8025048:	9320      	str	r3, [sp, #128]	; 0x80
 802504a:	9b07      	ldr	r3, [sp, #28]
 802504c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802504e:	3b01      	subs	r3, #1
 8025050:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025054:	9307      	str	r3, [sp, #28]
 8025056:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025058:	ee16 6a90 	vmov	r6, s13
 802505c:	bf14      	ite	ne
 802505e:	461d      	movne	r5, r3
 8025060:	4615      	moveq	r5, r2
 8025062:	eeb0 3a67 	vmov.f32	s6, s15
 8025066:	eef0 2a47 	vmov.f32	s5, s14
 802506a:	e6d3      	b.n	8024e14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802506c:	2900      	cmp	r1, #0
 802506e:	f43f af5c 	beq.w	8024f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025072:	eb0a 0003 	add.w	r0, sl, r3
 8025076:	0843      	lsrs	r3, r0, #1
 8025078:	07c0      	lsls	r0, r0, #31
 802507a:	5cfb      	ldrb	r3, [r7, r3]
 802507c:	bf54      	ite	pl
 802507e:	f003 030f 	andpl.w	r3, r3, #15
 8025082:	111b      	asrmi	r3, r3, #4
 8025084:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025088:	b2db      	uxtb	r3, r3
 802508a:	930a      	str	r3, [sp, #40]	; 0x28
 802508c:	e74d      	b.n	8024f2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802508e:	2b00      	cmp	r3, #0
 8025090:	f43f af78 	beq.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025094:	4a73      	ldr	r2, [pc, #460]	; (8025264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025096:	f8b8 c000 	ldrh.w	ip, [r8]
 802509a:	6810      	ldr	r0, [r2, #0]
 802509c:	fa1f fe83 	uxth.w	lr, r3
 80250a0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80250a4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80250a8:	43db      	mvns	r3, r3
 80250aa:	b2db      	uxtb	r3, r3
 80250ac:	fb12 f20e 	smulbb	r2, r2, lr
 80250b0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80250b4:	fb01 2103 	mla	r1, r1, r3, r2
 80250b8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80250bc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80250c0:	b2c0      	uxtb	r0, r0
 80250c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80250c6:	fb1b fb0e 	smulbb	fp, fp, lr
 80250ca:	b289      	uxth	r1, r1
 80250cc:	fb10 fe0e 	smulbb	lr, r0, lr
 80250d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80250d4:	fa5f fc8c 	uxtb.w	ip, ip
 80250d8:	fb02 b203 	mla	r2, r2, r3, fp
 80250dc:	1c48      	adds	r0, r1, #1
 80250de:	fb0c e303 	mla	r3, ip, r3, lr
 80250e2:	b292      	uxth	r2, r2
 80250e4:	b29b      	uxth	r3, r3
 80250e6:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80250ea:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80250ee:	f102 0b01 	add.w	fp, r2, #1
 80250f2:	1c59      	adds	r1, r3, #1
 80250f4:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80250f8:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80250fc:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025100:	0952      	lsrs	r2, r2, #5
 8025102:	4301      	orrs	r1, r0
 8025104:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025108:	4311      	orrs	r1, r2
 802510a:	f8a8 1000 	strh.w	r1, [r8]
 802510e:	e739      	b.n	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025110:	f113 0b01 	adds.w	fp, r3, #1
 8025114:	f53f af36 	bmi.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025118:	45dc      	cmp	ip, fp
 802511a:	f6ff af33 	blt.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802511e:	f110 0b01 	adds.w	fp, r0, #1
 8025122:	f53f af2f 	bmi.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025126:	45de      	cmp	lr, fp
 8025128:	f6ff af2c 	blt.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802512c:	9a08      	ldr	r2, [sp, #32]
 802512e:	9302      	str	r3, [sp, #8]
 8025130:	fa0f f38e 	sxth.w	r3, lr
 8025134:	9301      	str	r3, [sp, #4]
 8025136:	fa0f f38c 	sxth.w	r3, ip
 802513a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802513e:	9105      	str	r1, [sp, #20]
 8025140:	9300      	str	r3, [sp, #0]
 8025142:	463a      	mov	r2, r7
 8025144:	4653      	mov	r3, sl
 8025146:	4641      	mov	r1, r8
 8025148:	9811      	ldr	r0, [sp, #68]	; 0x44
 802514a:	f7ff fd73 	bl	8024c34 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802514e:	e719      	b.n	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025150:	9906      	ldr	r1, [sp, #24]
 8025152:	1422      	asrs	r2, r4, #16
 8025154:	1433      	asrs	r3, r6, #16
 8025156:	fb01 2303 	mla	r3, r1, r3, r2
 802515a:	085a      	lsrs	r2, r3, #1
 802515c:	07d9      	lsls	r1, r3, #31
 802515e:	5cba      	ldrb	r2, [r7, r2]
 8025160:	bf54      	ite	pl
 8025162:	f002 020f 	andpl.w	r2, r2, #15
 8025166:	1112      	asrmi	r2, r2, #4
 8025168:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802516c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025170:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025174:	b2d2      	uxtb	r2, r2
 8025176:	2800      	cmp	r0, #0
 8025178:	d062      	beq.n	8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802517a:	f103 0a01 	add.w	sl, r3, #1
 802517e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8025182:	f01a 0f01 	tst.w	sl, #1
 8025186:	5c79      	ldrb	r1, [r7, r1]
 8025188:	bf0c      	ite	eq
 802518a:	f001 010f 	andeq.w	r1, r1, #15
 802518e:	1109      	asrne	r1, r1, #4
 8025190:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025194:	b2c9      	uxtb	r1, r1
 8025196:	910f      	str	r1, [sp, #60]	; 0x3c
 8025198:	f1bc 0f00 	cmp.w	ip, #0
 802519c:	d019      	beq.n	80251d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802519e:	9908      	ldr	r1, [sp, #32]
 80251a0:	440b      	add	r3, r1
 80251a2:	0859      	lsrs	r1, r3, #1
 80251a4:	f013 0f01 	tst.w	r3, #1
 80251a8:	5c79      	ldrb	r1, [r7, r1]
 80251aa:	bf0c      	ite	eq
 80251ac:	f001 010f 	andeq.w	r1, r1, #15
 80251b0:	1109      	asrne	r1, r1, #4
 80251b2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80251b6:	b2c9      	uxtb	r1, r1
 80251b8:	3301      	adds	r3, #1
 80251ba:	910b      	str	r1, [sp, #44]	; 0x2c
 80251bc:	0859      	lsrs	r1, r3, #1
 80251be:	07db      	lsls	r3, r3, #31
 80251c0:	5c79      	ldrb	r1, [r7, r1]
 80251c2:	bf54      	ite	pl
 80251c4:	f001 010f 	andpl.w	r1, r1, #15
 80251c8:	1109      	asrmi	r1, r1, #4
 80251ca:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80251ce:	b2c9      	uxtb	r1, r1
 80251d0:	9110      	str	r1, [sp, #64]	; 0x40
 80251d2:	b280      	uxth	r0, r0
 80251d4:	fa1f fc8c 	uxth.w	ip, ip
 80251d8:	fb00 f30c 	mul.w	r3, r0, ip
 80251dc:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80251e0:	0100      	lsls	r0, r0, #4
 80251e2:	fa1f fc8c 	uxth.w	ip, ip
 80251e6:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80251ea:	eba1 010c 	sub.w	r1, r1, ip
 80251ee:	fa1f fa81 	uxth.w	sl, r1
 80251f2:	1ac0      	subs	r0, r0, r3
 80251f4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80251f6:	b280      	uxth	r0, r0
 80251f8:	4348      	muls	r0, r1
 80251fa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80251fc:	fb02 020a 	mla	r2, r2, sl, r0
 8025200:	fb0c 2c01 	mla	ip, ip, r1, r2
 8025204:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8025206:	fb03 c302 	mla	r3, r3, r2, ip
 802520a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802520e:	2bff      	cmp	r3, #255	; 0xff
 8025210:	d12c      	bne.n	802526c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8025212:	4b14      	ldr	r3, [pc, #80]	; (8025264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025214:	681a      	ldr	r2, [r3, #0]
 8025216:	4b14      	ldr	r3, [pc, #80]	; (8025268 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025218:	0951      	lsrs	r1, r2, #5
 802521a:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802521e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8025222:	430b      	orrs	r3, r1
 8025224:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025228:	4313      	orrs	r3, r2
 802522a:	f8ae 3000 	strh.w	r3, [lr]
 802522e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025230:	441c      	add	r4, r3
 8025232:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025234:	f10e 0e02 	add.w	lr, lr, #2
 8025238:	441e      	add	r6, r3
 802523a:	f108 38ff 	add.w	r8, r8, #4294967295
 802523e:	e6ce      	b.n	8024fde <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8025240:	f1bc 0f00 	cmp.w	ip, #0
 8025244:	d0c5      	beq.n	80251d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025246:	9908      	ldr	r1, [sp, #32]
 8025248:	440b      	add	r3, r1
 802524a:	0859      	lsrs	r1, r3, #1
 802524c:	07db      	lsls	r3, r3, #31
 802524e:	5c79      	ldrb	r1, [r7, r1]
 8025250:	bf54      	ite	pl
 8025252:	f001 010f 	andpl.w	r1, r1, #15
 8025256:	1109      	asrmi	r1, r1, #4
 8025258:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802525c:	b2c9      	uxtb	r1, r1
 802525e:	910b      	str	r1, [sp, #44]	; 0x2c
 8025260:	e7b7      	b.n	80251d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025262:	bf00      	nop
 8025264:	20012dc4 	.word	0x20012dc4
 8025268:	fffff800 	.word	0xfffff800
 802526c:	2b00      	cmp	r3, #0
 802526e:	d0de      	beq.n	802522e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025270:	4a21      	ldr	r2, [pc, #132]	; (80252f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8025272:	f8be c000 	ldrh.w	ip, [lr]
 8025276:	6810      	ldr	r0, [r2, #0]
 8025278:	fa1f fa83 	uxth.w	sl, r3
 802527c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025280:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025284:	43db      	mvns	r3, r3
 8025286:	b2db      	uxtb	r3, r3
 8025288:	fb12 f20a 	smulbb	r2, r2, sl
 802528c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025290:	fb01 2103 	mla	r1, r1, r3, r2
 8025294:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025298:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802529c:	b2c0      	uxtb	r0, r0
 802529e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80252a2:	fa5f fc8c 	uxtb.w	ip, ip
 80252a6:	fb10 f00a 	smulbb	r0, r0, sl
 80252aa:	fb0c 0003 	mla	r0, ip, r3, r0
 80252ae:	b289      	uxth	r1, r1
 80252b0:	fb1b fb0a 	smulbb	fp, fp, sl
 80252b4:	b280      	uxth	r0, r0
 80252b6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80252ba:	fb02 b203 	mla	r2, r2, r3, fp
 80252be:	1c4b      	adds	r3, r1, #1
 80252c0:	f100 0b01 	add.w	fp, r0, #1
 80252c4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80252c8:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80252cc:	b292      	uxth	r2, r2
 80252ce:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80252d2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80252d6:	ea4b 0101 	orr.w	r1, fp, r1
 80252da:	f102 0b01 	add.w	fp, r2, #1
 80252de:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80252e2:	0952      	lsrs	r2, r2, #5
 80252e4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252e8:	4311      	orrs	r1, r2
 80252ea:	f8ae 1000 	strh.w	r1, [lr]
 80252ee:	e79e      	b.n	802522e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80252f0:	b013      	add	sp, #76	; 0x4c
 80252f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252f6:	bf00      	nop
 80252f8:	20012dc4 	.word	0x20012dc4

080252fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80252fc:	b570      	push	{r4, r5, r6, lr}
 80252fe:	1208      	asrs	r0, r1, #8
 8025300:	b29e      	uxth	r6, r3
 8025302:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025306:	1213      	asrs	r3, r2, #8
 8025308:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802530c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025310:	fb13 f305 	smulbb	r3, r3, r5
 8025314:	fb10 f006 	smulbb	r0, r0, r6
 8025318:	4418      	add	r0, r3
 802531a:	10cc      	asrs	r4, r1, #3
 802531c:	10d3      	asrs	r3, r2, #3
 802531e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8025322:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8025326:	fb13 f305 	smulbb	r3, r3, r5
 802532a:	fb14 f406 	smulbb	r4, r4, r6
 802532e:	00c9      	lsls	r1, r1, #3
 8025330:	00d2      	lsls	r2, r2, #3
 8025332:	441c      	add	r4, r3
 8025334:	b2d2      	uxtb	r2, r2
 8025336:	b2cb      	uxtb	r3, r1
 8025338:	fb12 f205 	smulbb	r2, r2, r5
 802533c:	b280      	uxth	r0, r0
 802533e:	fb13 f306 	smulbb	r3, r3, r6
 8025342:	4413      	add	r3, r2
 8025344:	1c42      	adds	r2, r0, #1
 8025346:	b29b      	uxth	r3, r3
 8025348:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802534c:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025350:	1c58      	adds	r0, r3, #1
 8025352:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025356:	b2a4      	uxth	r4, r4
 8025358:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802535c:	4310      	orrs	r0, r2
 802535e:	1c62      	adds	r2, r4, #1
 8025360:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025364:	0964      	lsrs	r4, r4, #5
 8025366:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 802536a:	4320      	orrs	r0, r4
 802536c:	bd70      	pop	{r4, r5, r6, pc}
	...

08025370 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025370:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025374:	b08f      	sub	sp, #60	; 0x3c
 8025376:	461c      	mov	r4, r3
 8025378:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 802537c:	9004      	str	r0, [sp, #16]
 802537e:	460d      	mov	r5, r1
 8025380:	4616      	mov	r6, r2
 8025382:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025384:	2f00      	cmp	r7, #0
 8025386:	f000 80f6 	beq.w	8025576 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 802538a:	6820      	ldr	r0, [r4, #0]
 802538c:	6861      	ldr	r1, [r4, #4]
 802538e:	aa0a      	add	r2, sp, #40	; 0x28
 8025390:	c203      	stmia	r2!, {r0, r1}
 8025392:	6818      	ldr	r0, [r3, #0]
 8025394:	6859      	ldr	r1, [r3, #4]
 8025396:	aa0c      	add	r2, sp, #48	; 0x30
 8025398:	c203      	stmia	r2!, {r0, r1}
 802539a:	a80a      	add	r0, sp, #40	; 0x28
 802539c:	f7ef fa9c 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80253a0:	4621      	mov	r1, r4
 80253a2:	a80c      	add	r0, sp, #48	; 0x30
 80253a4:	f7ef fadc 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80253a8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80253ac:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 80253b0:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 80253b4:	f002 0301 	and.w	r3, r2, #1
 80253b8:	9306      	str	r3, [sp, #24]
 80253ba:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80253be:	f003 0101 	and.w	r1, r3, #1
 80253c2:	9105      	str	r1, [sp, #20]
 80253c4:	9805      	ldr	r0, [sp, #20]
 80253c6:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 80253ca:	4403      	add	r3, r0
 80253cc:	fb01 2303 	mla	r3, r1, r3, r2
 80253d0:	f04f 0802 	mov.w	r8, #2
 80253d4:	fb93 f3f8 	sdiv	r3, r3, r8
 80253d8:	441d      	add	r5, r3
 80253da:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80253de:	441a      	add	r2, r3
 80253e0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 80253e4:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80253e8:	4419      	add	r1, r3
 80253ea:	4b64      	ldr	r3, [pc, #400]	; (802557c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80253ec:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80253f0:	6818      	ldr	r0, [r3, #0]
 80253f2:	6803      	ldr	r3, [r0, #0]
 80253f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80253f6:	4798      	blx	r3
 80253f8:	4a61      	ldr	r2, [pc, #388]	; (8025580 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80253fa:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80253fe:	8813      	ldrh	r3, [r2, #0]
 8025400:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 8025404:	2fff      	cmp	r7, #255	; 0xff
 8025406:	fb03 a404 	mla	r4, r3, r4, sl
 802540a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802540e:	f106 0604 	add.w	r6, r6, #4
 8025412:	4611      	mov	r1, r2
 8025414:	fb03 fb0b 	mul.w	fp, r3, fp
 8025418:	d06b      	beq.n	80254f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 802541a:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 802541e:	9303      	str	r3, [sp, #12]
 8025420:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025424:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025428:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802542c:	9b07      	ldr	r3, [sp, #28]
 802542e:	42a3      	cmp	r3, r4
 8025430:	f240 809c 	bls.w	802556c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025434:	9b06      	ldr	r3, [sp, #24]
 8025436:	2b00      	cmp	r3, #0
 8025438:	d039      	beq.n	80254ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 802543a:	782b      	ldrb	r3, [r5, #0]
 802543c:	8822      	ldrh	r2, [r4, #0]
 802543e:	9804      	ldr	r0, [sp, #16]
 8025440:	f003 030f 	and.w	r3, r3, #15
 8025444:	f105 0801 	add.w	r8, r5, #1
 8025448:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802544c:	9b03      	ldr	r3, [sp, #12]
 802544e:	9300      	str	r3, [sp, #0]
 8025450:	463b      	mov	r3, r7
 8025452:	f7ff ff53 	bl	80252fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025456:	f824 0b02 	strh.w	r0, [r4], #2
 802545a:	f109 3bff 	add.w	fp, r9, #4294967295
 802545e:	f1bb 0f01 	cmp.w	fp, #1
 8025462:	46a2      	mov	sl, r4
 8025464:	f104 0404 	add.w	r4, r4, #4
 8025468:	dd24      	ble.n	80254b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 802546a:	f898 3000 	ldrb.w	r3, [r8]
 802546e:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025472:	9804      	ldr	r0, [sp, #16]
 8025474:	091b      	lsrs	r3, r3, #4
 8025476:	f1ab 0b02 	sub.w	fp, fp, #2
 802547a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802547e:	9b03      	ldr	r3, [sp, #12]
 8025480:	9300      	str	r3, [sp, #0]
 8025482:	463b      	mov	r3, r7
 8025484:	f7ff ff3a 	bl	80252fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025488:	f824 0c04 	strh.w	r0, [r4, #-4]
 802548c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025490:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025494:	9804      	ldr	r0, [sp, #16]
 8025496:	f003 030f 	and.w	r3, r3, #15
 802549a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802549e:	9b03      	ldr	r3, [sp, #12]
 80254a0:	9300      	str	r3, [sp, #0]
 80254a2:	463b      	mov	r3, r7
 80254a4:	f7ff ff2a 	bl	80252fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80254a8:	f824 0c02 	strh.w	r0, [r4, #-2]
 80254ac:	e7d7      	b.n	802545e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80254ae:	46a8      	mov	r8, r5
 80254b0:	46cb      	mov	fp, r9
 80254b2:	e7d4      	b.n	802545e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80254b4:	d10e      	bne.n	80254d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80254b6:	f898 3000 	ldrb.w	r3, [r8]
 80254ba:	f8ba 2000 	ldrh.w	r2, [sl]
 80254be:	9804      	ldr	r0, [sp, #16]
 80254c0:	091b      	lsrs	r3, r3, #4
 80254c2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80254c6:	9b03      	ldr	r3, [sp, #12]
 80254c8:	9300      	str	r3, [sp, #0]
 80254ca:	463b      	mov	r3, r7
 80254cc:	f7ff ff16 	bl	80252fc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80254d0:	f82a 0b02 	strh.w	r0, [sl], #2
 80254d4:	9b08      	ldr	r3, [sp, #32]
 80254d6:	9a05      	ldr	r2, [sp, #20]
 80254d8:	881c      	ldrh	r4, [r3, #0]
 80254da:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80254de:	eba4 0409 	sub.w	r4, r4, r9
 80254e2:	4413      	add	r3, r2
 80254e4:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80254e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80254ea:	fb93 f3f2 	sdiv	r3, r3, r2
 80254ee:	441d      	add	r5, r3
 80254f0:	e79c      	b.n	802542c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80254f2:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80254f6:	45a3      	cmp	fp, r4
 80254f8:	d938      	bls.n	802556c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80254fa:	9b06      	ldr	r3, [sp, #24]
 80254fc:	b1f3      	cbz	r3, 802553c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80254fe:	782b      	ldrb	r3, [r5, #0]
 8025500:	f003 030f 	and.w	r3, r3, #15
 8025504:	1c6a      	adds	r2, r5, #1
 8025506:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802550a:	8023      	strh	r3, [r4, #0]
 802550c:	f109 30ff 	add.w	r0, r9, #4294967295
 8025510:	3402      	adds	r4, #2
 8025512:	2801      	cmp	r0, #1
 8025514:	4623      	mov	r3, r4
 8025516:	f104 0404 	add.w	r4, r4, #4
 802551a:	dd12      	ble.n	8025542 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802551c:	7813      	ldrb	r3, [r2, #0]
 802551e:	091b      	lsrs	r3, r3, #4
 8025520:	3802      	subs	r0, #2
 8025522:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025526:	f824 3c04 	strh.w	r3, [r4, #-4]
 802552a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802552e:	f003 030f 	and.w	r3, r3, #15
 8025532:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025536:	f824 3c02 	strh.w	r3, [r4, #-2]
 802553a:	e7ea      	b.n	8025512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802553c:	462a      	mov	r2, r5
 802553e:	4648      	mov	r0, r9
 8025540:	e7e7      	b.n	8025512 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025542:	d106      	bne.n	8025552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025544:	7812      	ldrb	r2, [r2, #0]
 8025546:	0912      	lsrs	r2, r2, #4
 8025548:	3302      	adds	r3, #2
 802554a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802554e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8025552:	880c      	ldrh	r4, [r1, #0]
 8025554:	9a05      	ldr	r2, [sp, #20]
 8025556:	eba4 0409 	sub.w	r4, r4, r9
 802555a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802555e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025562:	4413      	add	r3, r2
 8025564:	fb93 f3f8 	sdiv	r3, r3, r8
 8025568:	441d      	add	r5, r3
 802556a:	e7c4      	b.n	80254f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 802556c:	4b03      	ldr	r3, [pc, #12]	; (802557c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802556e:	6818      	ldr	r0, [r3, #0]
 8025570:	6803      	ldr	r3, [r0, #0]
 8025572:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025574:	4798      	blx	r3
 8025576:	b00f      	add	sp, #60	; 0x3c
 8025578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802557c:	20012db4 	.word	0x20012db4
 8025580:	20012dae 	.word	0x20012dae

08025584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025586:	f89d 5014 	ldrb.w	r5, [sp, #20]
 802558a:	2dff      	cmp	r5, #255	; 0xff
 802558c:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025590:	d10c      	bne.n	80255ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025592:	2bff      	cmp	r3, #255	; 0xff
 8025594:	d10a      	bne.n	80255ac <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025596:	4b25      	ldr	r3, [pc, #148]	; (802562c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025598:	0948      	lsrs	r0, r1, #5
 802559a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802559e:	403b      	ands	r3, r7
 80255a0:	4318      	orrs	r0, r3
 80255a2:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80255a6:	4308      	orrs	r0, r1
 80255a8:	b280      	uxth	r0, r0
 80255aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80255ac:	fb15 f503 	smulbb	r5, r5, r3
 80255b0:	b2ab      	uxth	r3, r5
 80255b2:	1c5d      	adds	r5, r3, #1
 80255b4:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80255b8:	1214      	asrs	r4, r2, #8
 80255ba:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80255be:	fa1f fc85 	uxth.w	ip, r5
 80255c2:	10d6      	asrs	r6, r2, #3
 80255c4:	00d0      	lsls	r0, r2, #3
 80255c6:	43ed      	mvns	r5, r5
 80255c8:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80255cc:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80255d0:	b2eb      	uxtb	r3, r5
 80255d2:	b2c0      	uxtb	r0, r0
 80255d4:	fb12 f20c 	smulbb	r2, r2, ip
 80255d8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80255dc:	fb04 2403 	mla	r4, r4, r3, r2
 80255e0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80255e4:	b2c8      	uxtb	r0, r1
 80255e6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80255ea:	b2fd      	uxtb	r5, r7
 80255ec:	fb10 f00c 	smulbb	r0, r0, ip
 80255f0:	b2a4      	uxth	r4, r4
 80255f2:	fb02 0003 	mla	r0, r2, r3, r0
 80255f6:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80255fa:	fb15 f50c 	smulbb	r5, r5, ip
 80255fe:	fb06 5503 	mla	r5, r6, r3, r5
 8025602:	b283      	uxth	r3, r0
 8025604:	1c60      	adds	r0, r4, #1
 8025606:	b2ad      	uxth	r5, r5
 8025608:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802560c:	1c58      	adds	r0, r3, #1
 802560e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025612:	1c6b      	adds	r3, r5, #1
 8025614:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025618:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802561c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025620:	096d      	lsrs	r5, r5, #5
 8025622:	4320      	orrs	r0, r4
 8025624:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025628:	4328      	orrs	r0, r5
 802562a:	e7be      	b.n	80255aa <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802562c:	00fff800 	.word	0x00fff800

08025630 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025630:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025634:	461c      	mov	r4, r3
 8025636:	b08d      	sub	sp, #52	; 0x34
 8025638:	460d      	mov	r5, r1
 802563a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802563c:	6861      	ldr	r1, [r4, #4]
 802563e:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 8025642:	4680      	mov	r8, r0
 8025644:	6820      	ldr	r0, [r4, #0]
 8025646:	4616      	mov	r6, r2
 8025648:	aa08      	add	r2, sp, #32
 802564a:	c203      	stmia	r2!, {r0, r1}
 802564c:	6818      	ldr	r0, [r3, #0]
 802564e:	6859      	ldr	r1, [r3, #4]
 8025650:	aa0a      	add	r2, sp, #40	; 0x28
 8025652:	c203      	stmia	r2!, {r0, r1}
 8025654:	a808      	add	r0, sp, #32
 8025656:	f7ef f93f 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802565a:	4621      	mov	r1, r4
 802565c:	a80a      	add	r0, sp, #40	; 0x28
 802565e:	f7ef f97f 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025662:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8025666:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 802566a:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 802566e:	f002 0301 	and.w	r3, r2, #1
 8025672:	9303      	str	r3, [sp, #12]
 8025674:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025678:	f003 0101 	and.w	r1, r3, #1
 802567c:	9102      	str	r1, [sp, #8]
 802567e:	9802      	ldr	r0, [sp, #8]
 8025680:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8025684:	4403      	add	r3, r0
 8025686:	fb01 2303 	mla	r3, r1, r3, r2
 802568a:	f04f 0a02 	mov.w	sl, #2
 802568e:	fb93 f3fa 	sdiv	r3, r3, sl
 8025692:	441d      	add	r5, r3
 8025694:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025698:	441a      	add	r2, r3
 802569a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 802569e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80256a2:	4a3f      	ldr	r2, [pc, #252]	; (80257a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80256a4:	9205      	str	r2, [sp, #20]
 80256a6:	4419      	add	r1, r3
 80256a8:	6810      	ldr	r0, [r2, #0]
 80256aa:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 80256ae:	6803      	ldr	r3, [r0, #0]
 80256b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80256b2:	4798      	blx	r3
 80256b4:	4b3b      	ldr	r3, [pc, #236]	; (80257a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80256b6:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80256ba:	8819      	ldrh	r1, [r3, #0]
 80256bc:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 80256c0:	fb01 c404 	mla	r4, r1, r4, ip
 80256c4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80256c8:	434f      	muls	r7, r1
 80256ca:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80256ce:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80256d2:	3604      	adds	r6, #4
 80256d4:	9204      	str	r2, [sp, #16]
 80256d6:	9b04      	ldr	r3, [sp, #16]
 80256d8:	429c      	cmp	r4, r3
 80256da:	d258      	bcs.n	802578e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80256dc:	9b03      	ldr	r3, [sp, #12]
 80256de:	2b00      	cmp	r3, #0
 80256e0:	d034      	beq.n	802574c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80256e2:	782b      	ldrb	r3, [r5, #0]
 80256e4:	f003 030f 	and.w	r3, r3, #15
 80256e8:	1c6f      	adds	r7, r5, #1
 80256ea:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256ee:	0e0b      	lsrs	r3, r1, #24
 80256f0:	d006      	beq.n	8025700 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80256f2:	8822      	ldrh	r2, [r4, #0]
 80256f4:	9300      	str	r3, [sp, #0]
 80256f6:	4640      	mov	r0, r8
 80256f8:	464b      	mov	r3, r9
 80256fa:	f7ff ff43 	bl	8025584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256fe:	8020      	strh	r0, [r4, #0]
 8025700:	3402      	adds	r4, #2
 8025702:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025706:	f1ba 0f01 	cmp.w	sl, #1
 802570a:	dd22      	ble.n	8025752 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802570c:	783b      	ldrb	r3, [r7, #0]
 802570e:	091b      	lsrs	r3, r3, #4
 8025710:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025714:	0e0b      	lsrs	r3, r1, #24
 8025716:	d006      	beq.n	8025726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025718:	8822      	ldrh	r2, [r4, #0]
 802571a:	9300      	str	r3, [sp, #0]
 802571c:	4640      	mov	r0, r8
 802571e:	464b      	mov	r3, r9
 8025720:	f7ff ff30 	bl	8025584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025724:	8020      	strh	r0, [r4, #0]
 8025726:	f817 3b01 	ldrb.w	r3, [r7], #1
 802572a:	f003 030f 	and.w	r3, r3, #15
 802572e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025732:	0e0b      	lsrs	r3, r1, #24
 8025734:	d006      	beq.n	8025744 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025736:	8862      	ldrh	r2, [r4, #2]
 8025738:	9300      	str	r3, [sp, #0]
 802573a:	4640      	mov	r0, r8
 802573c:	464b      	mov	r3, r9
 802573e:	f7ff ff21 	bl	8025584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025742:	8060      	strh	r0, [r4, #2]
 8025744:	3404      	adds	r4, #4
 8025746:	f1aa 0a02 	sub.w	sl, sl, #2
 802574a:	e7dc      	b.n	8025706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802574c:	462f      	mov	r7, r5
 802574e:	46da      	mov	sl, fp
 8025750:	e7d9      	b.n	8025706 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025752:	d10d      	bne.n	8025770 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025754:	783b      	ldrb	r3, [r7, #0]
 8025756:	091b      	lsrs	r3, r3, #4
 8025758:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802575c:	0e0b      	lsrs	r3, r1, #24
 802575e:	d006      	beq.n	802576e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025760:	8822      	ldrh	r2, [r4, #0]
 8025762:	9300      	str	r3, [sp, #0]
 8025764:	4640      	mov	r0, r8
 8025766:	464b      	mov	r3, r9
 8025768:	f7ff ff0c 	bl	8025584 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802576c:	8020      	strh	r0, [r4, #0]
 802576e:	3402      	adds	r4, #2
 8025770:	9b06      	ldr	r3, [sp, #24]
 8025772:	9a02      	ldr	r2, [sp, #8]
 8025774:	881b      	ldrh	r3, [r3, #0]
 8025776:	eba3 030b 	sub.w	r3, r3, fp
 802577a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802577e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025782:	4413      	add	r3, r2
 8025784:	9a07      	ldr	r2, [sp, #28]
 8025786:	fb93 f3f2 	sdiv	r3, r3, r2
 802578a:	441d      	add	r5, r3
 802578c:	e7a3      	b.n	80256d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802578e:	9b05      	ldr	r3, [sp, #20]
 8025790:	6818      	ldr	r0, [r3, #0]
 8025792:	6803      	ldr	r3, [r0, #0]
 8025794:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025796:	4798      	blx	r3
 8025798:	b00d      	add	sp, #52	; 0x34
 802579a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802579e:	bf00      	nop
 80257a0:	20012db4 	.word	0x20012db4
 80257a4:	20012dae 	.word	0x20012dae

080257a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80257a8:	b570      	push	{r4, r5, r6, lr}
 80257aa:	1214      	asrs	r4, r2, #8
 80257ac:	788d      	ldrb	r5, [r1, #2]
 80257ae:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80257b2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80257b6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80257ba:	fb15 f503 	smulbb	r5, r5, r3
 80257be:	fb04 5506 	mla	r5, r4, r6, r5
 80257c2:	10d0      	asrs	r0, r2, #3
 80257c4:	784c      	ldrb	r4, [r1, #1]
 80257c6:	7809      	ldrb	r1, [r1, #0]
 80257c8:	00d2      	lsls	r2, r2, #3
 80257ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80257ce:	b2d2      	uxtb	r2, r2
 80257d0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80257d4:	fb14 f403 	smulbb	r4, r4, r3
 80257d8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80257dc:	fb11 f303 	smulbb	r3, r1, r3
 80257e0:	fb00 4406 	mla	r4, r0, r6, r4
 80257e4:	fb02 3306 	mla	r3, r2, r6, r3
 80257e8:	b2ad      	uxth	r5, r5
 80257ea:	b29b      	uxth	r3, r3
 80257ec:	b2a4      	uxth	r4, r4
 80257ee:	1c68      	adds	r0, r5, #1
 80257f0:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80257f4:	1c62      	adds	r2, r4, #1
 80257f6:	1c58      	adds	r0, r3, #1
 80257f8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80257fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025800:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025804:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025808:	0964      	lsrs	r4, r4, #5
 802580a:	4328      	orrs	r0, r5
 802580c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025810:	4320      	orrs	r0, r4
 8025812:	bd70      	pop	{r4, r5, r6, pc}

08025814 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025818:	b08f      	sub	sp, #60	; 0x3c
 802581a:	461c      	mov	r4, r3
 802581c:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025820:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025822:	4682      	mov	sl, r0
 8025824:	460e      	mov	r6, r1
 8025826:	4615      	mov	r5, r2
 8025828:	2f00      	cmp	r7, #0
 802582a:	f000 8142 	beq.w	8025ab2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802582e:	6820      	ldr	r0, [r4, #0]
 8025830:	6861      	ldr	r1, [r4, #4]
 8025832:	aa0a      	add	r2, sp, #40	; 0x28
 8025834:	c203      	stmia	r2!, {r0, r1}
 8025836:	6818      	ldr	r0, [r3, #0]
 8025838:	6859      	ldr	r1, [r3, #4]
 802583a:	aa0c      	add	r2, sp, #48	; 0x30
 802583c:	c203      	stmia	r2!, {r0, r1}
 802583e:	a80a      	add	r0, sp, #40	; 0x28
 8025840:	f7ef f84a 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025844:	4621      	mov	r1, r4
 8025846:	a80c      	add	r0, sp, #48	; 0x30
 8025848:	f7ef f88a 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802584c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025850:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025854:	f002 0301 	and.w	r3, r2, #1
 8025858:	9306      	str	r3, [sp, #24]
 802585a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802585e:	f003 0101 	and.w	r1, r3, #1
 8025862:	9105      	str	r1, [sp, #20]
 8025864:	9805      	ldr	r0, [sp, #20]
 8025866:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 802586a:	4403      	add	r3, r0
 802586c:	fb01 2303 	mla	r3, r1, r3, r2
 8025870:	f04f 0802 	mov.w	r8, #2
 8025874:	fb93 f3f8 	sdiv	r3, r3, r8
 8025878:	441e      	add	r6, r3
 802587a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 802587e:	441a      	add	r2, r3
 8025880:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025884:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025888:	4419      	add	r1, r3
 802588a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 802588e:	9303      	str	r3, [sp, #12]
 8025890:	4b89      	ldr	r3, [pc, #548]	; (8025ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025892:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025896:	6818      	ldr	r0, [r3, #0]
 8025898:	6803      	ldr	r3, [r0, #0]
 802589a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802589c:	4798      	blx	r3
 802589e:	4a87      	ldr	r2, [pc, #540]	; (8025abc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80258a0:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80258a4:	8813      	ldrh	r3, [r2, #0]
 80258a6:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 80258aa:	2fff      	cmp	r7, #255	; 0xff
 80258ac:	fb03 9404 	mla	r4, r3, r4, r9
 80258b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80258b4:	f105 0504 	add.w	r5, r5, #4
 80258b8:	4694      	mov	ip, r2
 80258ba:	fb03 f30b 	mul.w	r3, r3, fp
 80258be:	d071      	beq.n	80259a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80258c0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80258c4:	43f9      	mvns	r1, r7
 80258c6:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80258ca:	b2c9      	uxtb	r1, r1
 80258cc:	9104      	str	r1, [sp, #16]
 80258ce:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80258d2:	9b07      	ldr	r3, [sp, #28]
 80258d4:	42a3      	cmp	r3, r4
 80258d6:	f240 80e7 	bls.w	8025aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80258da:	9b06      	ldr	r3, [sp, #24]
 80258dc:	2b00      	cmp	r3, #0
 80258de:	d03d      	beq.n	802595c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80258e0:	7831      	ldrb	r1, [r6, #0]
 80258e2:	9b04      	ldr	r3, [sp, #16]
 80258e4:	8822      	ldrh	r2, [r4, #0]
 80258e6:	9300      	str	r3, [sp, #0]
 80258e8:	f001 010f 	and.w	r1, r1, #15
 80258ec:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258f0:	463b      	mov	r3, r7
 80258f2:	4429      	add	r1, r5
 80258f4:	4650      	mov	r0, sl
 80258f6:	f7ff ff57 	bl	80257a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258fa:	9b03      	ldr	r3, [sp, #12]
 80258fc:	f824 0b02 	strh.w	r0, [r4], #2
 8025900:	f106 0801 	add.w	r8, r6, #1
 8025904:	f103 3bff 	add.w	fp, r3, #4294967295
 8025908:	f1bb 0f01 	cmp.w	fp, #1
 802590c:	46a1      	mov	r9, r4
 802590e:	f104 0404 	add.w	r4, r4, #4
 8025912:	dd27      	ble.n	8025964 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025914:	f898 1000 	ldrb.w	r1, [r8]
 8025918:	9b04      	ldr	r3, [sp, #16]
 802591a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802591e:	9300      	str	r3, [sp, #0]
 8025920:	0909      	lsrs	r1, r1, #4
 8025922:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025926:	463b      	mov	r3, r7
 8025928:	4429      	add	r1, r5
 802592a:	4650      	mov	r0, sl
 802592c:	f7ff ff3c 	bl	80257a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025930:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025934:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025938:	9b04      	ldr	r3, [sp, #16]
 802593a:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802593e:	9300      	str	r3, [sp, #0]
 8025940:	f001 010f 	and.w	r1, r1, #15
 8025944:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025948:	463b      	mov	r3, r7
 802594a:	4429      	add	r1, r5
 802594c:	4650      	mov	r0, sl
 802594e:	f7ff ff2b 	bl	80257a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025952:	f1ab 0b02 	sub.w	fp, fp, #2
 8025956:	f824 0c02 	strh.w	r0, [r4, #-2]
 802595a:	e7d5      	b.n	8025908 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802595c:	46b0      	mov	r8, r6
 802595e:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025962:	e7d1      	b.n	8025908 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025964:	d10f      	bne.n	8025986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025966:	f898 1000 	ldrb.w	r1, [r8]
 802596a:	9b04      	ldr	r3, [sp, #16]
 802596c:	f8b9 2000 	ldrh.w	r2, [r9]
 8025970:	9300      	str	r3, [sp, #0]
 8025972:	0909      	lsrs	r1, r1, #4
 8025974:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025978:	463b      	mov	r3, r7
 802597a:	4429      	add	r1, r5
 802597c:	4650      	mov	r0, sl
 802597e:	f7ff ff13 	bl	80257a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025982:	f829 0b02 	strh.w	r0, [r9], #2
 8025986:	9b08      	ldr	r3, [sp, #32]
 8025988:	9a05      	ldr	r2, [sp, #20]
 802598a:	881c      	ldrh	r4, [r3, #0]
 802598c:	9b03      	ldr	r3, [sp, #12]
 802598e:	1ae4      	subs	r4, r4, r3
 8025990:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025994:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025998:	4413      	add	r3, r2
 802599a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802599c:	fb93 f3f2 	sdiv	r3, r3, r2
 80259a0:	441e      	add	r6, r3
 80259a2:	e796      	b.n	80258d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80259a4:	4f46      	ldr	r7, [pc, #280]	; (8025ac0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80259a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80259aa:	42a3      	cmp	r3, r4
 80259ac:	d97c      	bls.n	8025aa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80259ae:	9a06      	ldr	r2, [sp, #24]
 80259b0:	2a00      	cmp	r2, #0
 80259b2:	d054      	beq.n	8025a5e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80259b4:	7830      	ldrb	r0, [r6, #0]
 80259b6:	f000 000f 	and.w	r0, r0, #15
 80259ba:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80259be:	eb05 0e00 	add.w	lr, r5, r0
 80259c2:	5c28      	ldrb	r0, [r5, r0]
 80259c4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80259c8:	f89e e001 	ldrb.w	lr, [lr, #1]
 80259cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80259d0:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80259d4:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80259d8:	ea42 020e 	orr.w	r2, r2, lr
 80259dc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80259e0:	f824 2b02 	strh.w	r2, [r4], #2
 80259e4:	9a03      	ldr	r2, [sp, #12]
 80259e6:	1c71      	adds	r1, r6, #1
 80259e8:	f102 3eff 	add.w	lr, r2, #4294967295
 80259ec:	f1be 0f01 	cmp.w	lr, #1
 80259f0:	4620      	mov	r0, r4
 80259f2:	f104 0404 	add.w	r4, r4, #4
 80259f6:	dd36      	ble.n	8025a66 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80259f8:	7808      	ldrb	r0, [r1, #0]
 80259fa:	0900      	lsrs	r0, r0, #4
 80259fc:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025a00:	eb05 0a00 	add.w	sl, r5, r0
 8025a04:	f1ae 0e02 	sub.w	lr, lr, #2
 8025a08:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025a0c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025a10:	00d2      	lsls	r2, r2, #3
 8025a12:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025a16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a1a:	ea49 0202 	orr.w	r2, r9, r2
 8025a1e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025a22:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025a26:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025a2a:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025a2e:	f000 000f 	and.w	r0, r0, #15
 8025a32:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025a36:	eb05 0a00 	add.w	sl, r5, r0
 8025a3a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025a3e:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025a42:	00d2      	lsls	r2, r2, #3
 8025a44:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a4c:	ea49 0202 	orr.w	r2, r9, r2
 8025a50:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025a54:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025a58:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025a5c:	e7c6      	b.n	80259ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a5e:	4631      	mov	r1, r6
 8025a60:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025a64:	e7c2      	b.n	80259ec <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a66:	d111      	bne.n	8025a8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025a68:	7809      	ldrb	r1, [r1, #0]
 8025a6a:	0909      	lsrs	r1, r1, #4
 8025a6c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a70:	186c      	adds	r4, r5, r1
 8025a72:	5c69      	ldrb	r1, [r5, r1]
 8025a74:	78a2      	ldrb	r2, [r4, #2]
 8025a76:	7864      	ldrb	r4, [r4, #1]
 8025a78:	00e4      	lsls	r4, r4, #3
 8025a7a:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025a7e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a82:	4322      	orrs	r2, r4
 8025a84:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025a88:	f820 2b02 	strh.w	r2, [r0], #2
 8025a8c:	9a03      	ldr	r2, [sp, #12]
 8025a8e:	f8bc 4000 	ldrh.w	r4, [ip]
 8025a92:	9905      	ldr	r1, [sp, #20]
 8025a94:	1aa4      	subs	r4, r4, r2
 8025a96:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025a9a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025a9e:	440a      	add	r2, r1
 8025aa0:	fb92 f2f8 	sdiv	r2, r2, r8
 8025aa4:	4416      	add	r6, r2
 8025aa6:	e780      	b.n	80259aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025aa8:	4b03      	ldr	r3, [pc, #12]	; (8025ab8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025aaa:	6818      	ldr	r0, [r3, #0]
 8025aac:	6803      	ldr	r3, [r0, #0]
 8025aae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025ab0:	4798      	blx	r3
 8025ab2:	b00f      	add	sp, #60	; 0x3c
 8025ab4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025ab8:	20012db4 	.word	0x20012db4
 8025abc:	20012dae 	.word	0x20012dae
 8025ac0:	fffff800 	.word	0xfffff800

08025ac4 <CRC_Lock>:
 8025ac4:	b530      	push	{r4, r5, lr}
 8025ac6:	4a20      	ldr	r2, [pc, #128]	; (8025b48 <CRC_Lock+0x84>)
 8025ac8:	6813      	ldr	r3, [r2, #0]
 8025aca:	f023 0301 	bic.w	r3, r3, #1
 8025ace:	6013      	str	r3, [r2, #0]
 8025ad0:	4b1e      	ldr	r3, [pc, #120]	; (8025b4c <CRC_Lock+0x88>)
 8025ad2:	681a      	ldr	r2, [r3, #0]
 8025ad4:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025ad8:	4022      	ands	r2, r4
 8025ada:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025ade:	42aa      	cmp	r2, r5
 8025ae0:	d005      	beq.n	8025aee <CRC_Lock+0x2a>
 8025ae2:	681b      	ldr	r3, [r3, #0]
 8025ae4:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025ae8:	4023      	ands	r3, r4
 8025aea:	4293      	cmp	r3, r2
 8025aec:	d124      	bne.n	8025b38 <CRC_Lock+0x74>
 8025aee:	4b18      	ldr	r3, [pc, #96]	; (8025b50 <CRC_Lock+0x8c>)
 8025af0:	681b      	ldr	r3, [r3, #0]
 8025af2:	bb0b      	cbnz	r3, 8025b38 <CRC_Lock+0x74>
 8025af4:	4b17      	ldr	r3, [pc, #92]	; (8025b54 <CRC_Lock+0x90>)
 8025af6:	681a      	ldr	r2, [r3, #0]
 8025af8:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025afc:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025b00:	d00d      	beq.n	8025b1e <CRC_Lock+0x5a>
 8025b02:	681a      	ldr	r2, [r3, #0]
 8025b04:	f240 4483 	movw	r4, #1155	; 0x483
 8025b08:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025b0c:	42a2      	cmp	r2, r4
 8025b0e:	d006      	beq.n	8025b1e <CRC_Lock+0x5a>
 8025b10:	681b      	ldr	r3, [r3, #0]
 8025b12:	f240 4285 	movw	r2, #1157	; 0x485
 8025b16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025b1a:	4293      	cmp	r3, r2
 8025b1c:	d10c      	bne.n	8025b38 <CRC_Lock+0x74>
 8025b1e:	4b0e      	ldr	r3, [pc, #56]	; (8025b58 <CRC_Lock+0x94>)
 8025b20:	2201      	movs	r2, #1
 8025b22:	601a      	str	r2, [r3, #0]
 8025b24:	681a      	ldr	r2, [r3, #0]
 8025b26:	2a00      	cmp	r2, #0
 8025b28:	d1fc      	bne.n	8025b24 <CRC_Lock+0x60>
 8025b2a:	4b0c      	ldr	r3, [pc, #48]	; (8025b5c <CRC_Lock+0x98>)
 8025b2c:	6018      	str	r0, [r3, #0]
 8025b2e:	6818      	ldr	r0, [r3, #0]
 8025b30:	1a43      	subs	r3, r0, r1
 8025b32:	4258      	negs	r0, r3
 8025b34:	4158      	adcs	r0, r3
 8025b36:	bd30      	pop	{r4, r5, pc}
 8025b38:	4b09      	ldr	r3, [pc, #36]	; (8025b60 <CRC_Lock+0x9c>)
 8025b3a:	2201      	movs	r2, #1
 8025b3c:	601a      	str	r2, [r3, #0]
 8025b3e:	681a      	ldr	r2, [r3, #0]
 8025b40:	2a00      	cmp	r2, #0
 8025b42:	d1fc      	bne.n	8025b3e <CRC_Lock+0x7a>
 8025b44:	4b07      	ldr	r3, [pc, #28]	; (8025b64 <CRC_Lock+0xa0>)
 8025b46:	e7f1      	b.n	8025b2c <CRC_Lock+0x68>
 8025b48:	e0002000 	.word	0xe0002000
 8025b4c:	e000ed00 	.word	0xe000ed00
 8025b50:	e0042000 	.word	0xe0042000
 8025b54:	5c001000 	.word	0x5c001000
 8025b58:	58024c08 	.word	0x58024c08
 8025b5c:	58024c00 	.word	0x58024c00
 8025b60:	40023008 	.word	0x40023008
 8025b64:	40023000 	.word	0x40023000

08025b68 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025b68:	6101      	str	r1, [r0, #16]
 8025b6a:	4770      	bx	lr

08025b6c <_ZN8touchgfx8Gestures4tickEv>:
 8025b6c:	7b83      	ldrb	r3, [r0, #14]
 8025b6e:	b14b      	cbz	r3, 8025b84 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025b70:	8903      	ldrh	r3, [r0, #8]
 8025b72:	3301      	adds	r3, #1
 8025b74:	b29b      	uxth	r3, r3
 8025b76:	2b07      	cmp	r3, #7
 8025b78:	8103      	strh	r3, [r0, #8]
 8025b7a:	bf81      	itttt	hi
 8025b7c:	2300      	movhi	r3, #0
 8025b7e:	8143      	strhhi	r3, [r0, #10]
 8025b80:	8183      	strhhi	r3, [r0, #12]
 8025b82:	7383      	strbhi	r3, [r0, #14]
 8025b84:	4770      	bx	lr
	...

08025b88 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025b88:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025b8c:	4698      	mov	r8, r3
 8025b8e:	8883      	ldrh	r3, [r0, #4]
 8025b90:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025b94:	eba8 0303 	sub.w	r3, r8, r3
 8025b98:	b21b      	sxth	r3, r3
 8025b9a:	4604      	mov	r4, r0
 8025b9c:	2b00      	cmp	r3, #0
 8025b9e:	4617      	mov	r7, r2
 8025ba0:	4a18      	ldr	r2, [pc, #96]	; (8025c04 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025ba2:	9200      	str	r2, [sp, #0]
 8025ba4:	bfb8      	it	lt
 8025ba6:	425b      	neglt	r3, r3
 8025ba8:	8aa2      	ldrh	r2, [r4, #20]
 8025baa:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025bae:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025bb2:	b21b      	sxth	r3, r3
 8025bb4:	460e      	mov	r6, r1
 8025bb6:	4293      	cmp	r3, r2
 8025bb8:	88c1      	ldrh	r1, [r0, #6]
 8025bba:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025bbe:	f04f 0000 	mov.w	r0, #0
 8025bc2:	f88d 0004 	strb.w	r0, [sp, #4]
 8025bc6:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025bca:	dc07      	bgt.n	8025bdc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025bcc:	1a69      	subs	r1, r5, r1
 8025bce:	b209      	sxth	r1, r1
 8025bd0:	2900      	cmp	r1, #0
 8025bd2:	bfb8      	it	lt
 8025bd4:	4249      	neglt	r1, r1
 8025bd6:	b209      	sxth	r1, r1
 8025bd8:	428a      	cmp	r2, r1
 8025bda:	da10      	bge.n	8025bfe <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025bdc:	6920      	ldr	r0, [r4, #16]
 8025bde:	6803      	ldr	r3, [r0, #0]
 8025be0:	4669      	mov	r1, sp
 8025be2:	685b      	ldr	r3, [r3, #4]
 8025be4:	4798      	blx	r3
 8025be6:	eba8 0606 	sub.w	r6, r8, r6
 8025bea:	2300      	movs	r3, #0
 8025bec:	1bef      	subs	r7, r5, r7
 8025bee:	2001      	movs	r0, #1
 8025bf0:	8123      	strh	r3, [r4, #8]
 8025bf2:	8166      	strh	r6, [r4, #10]
 8025bf4:	81a7      	strh	r7, [r4, #12]
 8025bf6:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025bfa:	80e5      	strh	r5, [r4, #6]
 8025bfc:	73a0      	strb	r0, [r4, #14]
 8025bfe:	b004      	add	sp, #16
 8025c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025c04:	0802e258 	.word	0x0802e258

08025c08 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025c08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025c0a:	461e      	mov	r6, r3
 8025c0c:	1e4b      	subs	r3, r1, #1
 8025c0e:	2b01      	cmp	r3, #1
 8025c10:	b085      	sub	sp, #20
 8025c12:	4604      	mov	r4, r0
 8025c14:	460d      	mov	r5, r1
 8025c16:	4617      	mov	r7, r2
 8025c18:	d84b      	bhi.n	8025cb2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025c1a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025c1e:	1cd3      	adds	r3, r2, #3
 8025c20:	b29b      	uxth	r3, r3
 8025c22:	2b06      	cmp	r3, #6
 8025c24:	d916      	bls.n	8025c54 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025c26:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025cc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025c2a:	f8cd c004 	str.w	ip, [sp, #4]
 8025c2e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025c32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025c36:	6900      	ldr	r0, [r0, #16]
 8025c38:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025c3c:	f04f 0c00 	mov.w	ip, #0
 8025c40:	f88d c008 	strb.w	ip, [sp, #8]
 8025c44:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c48:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c4c:	6803      	ldr	r3, [r0, #0]
 8025c4e:	a901      	add	r1, sp, #4
 8025c50:	689b      	ldr	r3, [r3, #8]
 8025c52:	4798      	blx	r3
 8025c54:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025c58:	1cd3      	adds	r3, r2, #3
 8025c5a:	b29b      	uxth	r3, r3
 8025c5c:	2b06      	cmp	r3, #6
 8025c5e:	d916      	bls.n	8025c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c60:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025cc8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025c64:	f8cd c004 	str.w	ip, [sp, #4]
 8025c68:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025c6c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025c70:	6920      	ldr	r0, [r4, #16]
 8025c72:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025c76:	f04f 0c01 	mov.w	ip, #1
 8025c7a:	f88d c008 	strb.w	ip, [sp, #8]
 8025c7e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c82:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c86:	6803      	ldr	r3, [r0, #0]
 8025c88:	a901      	add	r1, sp, #4
 8025c8a:	689b      	ldr	r3, [r3, #8]
 8025c8c:	4798      	blx	r3
 8025c8e:	4b0d      	ldr	r3, [pc, #52]	; (8025cc4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025c90:	9301      	str	r3, [sp, #4]
 8025c92:	6920      	ldr	r0, [r4, #16]
 8025c94:	f88d 5008 	strb.w	r5, [sp, #8]
 8025c98:	2300      	movs	r3, #0
 8025c9a:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025c9e:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025ca2:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ca6:	6803      	ldr	r3, [r0, #0]
 8025ca8:	a901      	add	r1, sp, #4
 8025caa:	681b      	ldr	r3, [r3, #0]
 8025cac:	4798      	blx	r3
 8025cae:	b005      	add	sp, #20
 8025cb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025cb2:	2900      	cmp	r1, #0
 8025cb4:	d1eb      	bne.n	8025c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025cb6:	80a2      	strh	r2, [r4, #4]
 8025cb8:	80c6      	strh	r6, [r0, #6]
 8025cba:	60a1      	str	r1, [r4, #8]
 8025cbc:	81a1      	strh	r1, [r4, #12]
 8025cbe:	73a1      	strb	r1, [r4, #14]
 8025cc0:	e7e5      	b.n	8025c8e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025cc2:	bf00      	nop
 8025cc4:	0802e244 	.word	0x0802e244
 8025cc8:	0802e26c 	.word	0x0802e26c

08025ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025ccc:	10c9      	asrs	r1, r1, #3
 8025cce:	2900      	cmp	r1, #0
 8025cd0:	bfb8      	it	lt
 8025cd2:	4249      	neglt	r1, r1
 8025cd4:	2801      	cmp	r0, #1
 8025cd6:	d108      	bne.n	8025cea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025cd8:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025cdc:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025ce0:	4601      	mov	r1, r0
 8025ce2:	dd02      	ble.n	8025cea <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025ce4:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025ce8:	4770      	bx	lr
 8025cea:	29ff      	cmp	r1, #255	; 0xff
 8025cec:	bfa8      	it	ge
 8025cee:	21ff      	movge	r1, #255	; 0xff
 8025cf0:	4608      	mov	r0, r1
 8025cf2:	4770      	bx	lr

08025cf4 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025cf4:	b410      	push	{r4}
 8025cf6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025cfa:	429c      	cmp	r4, r3
 8025cfc:	d803      	bhi.n	8025d06 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025cfe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025d02:	f7ed b8ef 	b.w	8012ee4 <_ZN8touchgfx7Outline6lineToEii>
 8025d06:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025d0a:	4770      	bx	lr

08025d0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025d0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025d10:	b08b      	sub	sp, #44	; 0x2c
 8025d12:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025d16:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025d1a:	9308      	str	r3, [sp, #32]
 8025d1c:	4606      	mov	r6, r0
 8025d1e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025d22:	9309      	str	r3, [sp, #36]	; 0x24
 8025d24:	468a      	mov	sl, r1
 8025d26:	f7ed fa4a 	bl	80131be <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025d2a:	68b5      	ldr	r5, [r6, #8]
 8025d2c:	4604      	mov	r4, r0
 8025d2e:	2d00      	cmp	r5, #0
 8025d30:	d044      	beq.n	8025dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025d32:	6873      	ldr	r3, [r6, #4]
 8025d34:	42ab      	cmp	r3, r5
 8025d36:	d33d      	bcc.n	8025db4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025d38:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025d3c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025d40:	eb02 0b03 	add.w	fp, r2, r3
 8025d44:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025d48:	fb02 1203 	mla	r2, r2, r3, r1
 8025d4c:	9205      	str	r2, [sp, #20]
 8025d4e:	1e6a      	subs	r2, r5, #1
 8025d50:	9204      	str	r2, [sp, #16]
 8025d52:	f04f 0800 	mov.w	r8, #0
 8025d56:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025d5a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025d5e:	454b      	cmp	r3, r9
 8025d60:	463a      	mov	r2, r7
 8025d62:	d008      	beq.n	8025d76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025d64:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025d68:	eb03 0b09 	add.w	fp, r3, r9
 8025d6c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025d70:	fb03 1309 	mla	r3, r3, r9, r1
 8025d74:	9305      	str	r3, [sp, #20]
 8025d76:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025d7a:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025d7e:	4498      	add	r8, r3
 8025d80:	9b04      	ldr	r3, [sp, #16]
 8025d82:	3b01      	subs	r3, #1
 8025d84:	9304      	str	r3, [sp, #16]
 8025d86:	9b04      	ldr	r3, [sp, #16]
 8025d88:	3301      	adds	r3, #1
 8025d8a:	d015      	beq.n	8025db8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025d8c:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025d90:	42bb      	cmp	r3, r7
 8025d92:	d117      	bne.n	8025dc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025d94:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025d98:	9b04      	ldr	r3, [sp, #16]
 8025d9a:	4548      	cmp	r0, r9
 8025d9c:	f103 33ff 	add.w	r3, r3, #4294967295
 8025da0:	d17f      	bne.n	8025ea2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025da2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025da6:	4401      	add	r1, r0
 8025da8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025dac:	4480      	add	r8, r0
 8025dae:	e7e9      	b.n	8025d84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025db0:	461f      	mov	r7, r3
 8025db2:	e044      	b.n	8025e3e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8025db4:	2000      	movs	r0, #0
 8025db6:	e002      	b.n	8025dbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025db8:	2900      	cmp	r1, #0
 8025dba:	d16f      	bne.n	8025e9c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025dbc:	2001      	movs	r0, #1
 8025dbe:	b00b      	add	sp, #44	; 0x2c
 8025dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025dc4:	2900      	cmp	r1, #0
 8025dc6:	d030      	beq.n	8025e2a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025dc8:	2f00      	cmp	r7, #0
 8025dca:	db29      	blt.n	8025e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025dcc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025dd0:	42bb      	cmp	r3, r7
 8025dd2:	dd25      	ble.n	8025e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025dd4:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025dd8:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025ddc:	f7ff ff76 	bl	8025ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025de0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025de2:	fb10 f003 	smulbb	r0, r0, r3
 8025de6:	b280      	uxth	r0, r0
 8025de8:	1c41      	adds	r1, r0, #1
 8025dea:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025dee:	1209      	asrs	r1, r1, #8
 8025df0:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025df4:	d014      	beq.n	8025e20 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025df6:	9808      	ldr	r0, [sp, #32]
 8025df8:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025dfa:	b2c9      	uxtb	r1, r1
 8025dfc:	b2ba      	uxth	r2, r7
 8025dfe:	9102      	str	r1, [sp, #8]
 8025e00:	2101      	movs	r1, #1
 8025e02:	4413      	add	r3, r2
 8025e04:	9101      	str	r1, [sp, #4]
 8025e06:	4402      	add	r2, r0
 8025e08:	fa0f f18b 	sxth.w	r1, fp
 8025e0c:	f8da 0000 	ldr.w	r0, [sl]
 8025e10:	9100      	str	r1, [sp, #0]
 8025e12:	6941      	ldr	r1, [r0, #20]
 8025e14:	b21b      	sxth	r3, r3
 8025e16:	460d      	mov	r5, r1
 8025e18:	b212      	sxth	r2, r2
 8025e1a:	9905      	ldr	r1, [sp, #20]
 8025e1c:	4650      	mov	r0, sl
 8025e1e:	47a8      	blx	r5
 8025e20:	9b04      	ldr	r3, [sp, #16]
 8025e22:	3301      	adds	r3, #1
 8025e24:	f107 0201 	add.w	r2, r7, #1
 8025e28:	d0c8      	beq.n	8025dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025e2a:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025e2e:	1abb      	subs	r3, r7, r2
 8025e30:	2b00      	cmp	r3, #0
 8025e32:	dd31      	ble.n	8025e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e34:	2a00      	cmp	r2, #0
 8025e36:	dabb      	bge.n	8025db0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025e38:	2f00      	cmp	r7, #0
 8025e3a:	dd2d      	ble.n	8025e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e3c:	2200      	movs	r2, #0
 8025e3e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025e42:	19d1      	adds	r1, r2, r7
 8025e44:	4299      	cmp	r1, r3
 8025e46:	db02      	blt.n	8025e4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025e48:	1a9f      	subs	r7, r3, r2
 8025e4a:	2f00      	cmp	r7, #0
 8025e4c:	dd24      	ble.n	8025e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e4e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025e52:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025e56:	f7ff ff39 	bl	8025ccc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025e5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e5c:	fb10 f003 	smulbb	r0, r0, r3
 8025e60:	b280      	uxth	r0, r0
 8025e62:	1c41      	adds	r1, r0, #1
 8025e64:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025e68:	1209      	asrs	r1, r1, #8
 8025e6a:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025e6e:	d013      	beq.n	8025e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e70:	9808      	ldr	r0, [sp, #32]
 8025e72:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025e74:	b292      	uxth	r2, r2
 8025e76:	b2c9      	uxtb	r1, r1
 8025e78:	4413      	add	r3, r2
 8025e7a:	9102      	str	r1, [sp, #8]
 8025e7c:	4402      	add	r2, r0
 8025e7e:	b23f      	sxth	r7, r7
 8025e80:	f8da 0000 	ldr.w	r0, [sl]
 8025e84:	9701      	str	r7, [sp, #4]
 8025e86:	fa0f f18b 	sxth.w	r1, fp
 8025e8a:	9100      	str	r1, [sp, #0]
 8025e8c:	6947      	ldr	r7, [r0, #20]
 8025e8e:	9905      	ldr	r1, [sp, #20]
 8025e90:	b21b      	sxth	r3, r3
 8025e92:	b212      	sxth	r2, r2
 8025e94:	4650      	mov	r0, sl
 8025e96:	47b8      	blx	r7
 8025e98:	464b      	mov	r3, r9
 8025e9a:	e75c      	b.n	8025d56 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025e9c:	2f00      	cmp	r7, #0
 8025e9e:	da95      	bge.n	8025dcc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025ea0:	e78c      	b.n	8025dbc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025ea2:	2900      	cmp	r1, #0
 8025ea4:	d0f8      	beq.n	8025e98 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025ea6:	e78f      	b.n	8025dc8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025ea8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025ea8:	4b4b      	ldr	r3, [pc, #300]	; (8025fd8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025eaa:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025eae:	2500      	movs	r5, #0
 8025eb0:	f100 0620 	add.w	r6, r0, #32
 8025eb4:	4604      	mov	r4, r0
 8025eb6:	e9c0 3100 	strd	r3, r1, [r0]
 8025eba:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025ebe:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8025ec2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8025ec6:	f100 0718 	add.w	r7, r0, #24
 8025eca:	4630      	mov	r0, r6
 8025ecc:	4690      	mov	r8, r2
 8025ece:	f7ec fb41 	bl	8012554 <_ZN8touchgfx7OutlineC1Ev>
 8025ed2:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8025ed6:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025eda:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025ede:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8025ee2:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8025ee6:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025eea:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025eee:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8025ef2:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8025ef6:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025efa:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025efe:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025f02:	9500      	str	r5, [sp, #0]
 8025f04:	4410      	add	r0, r2
 8025f06:	b280      	uxth	r0, r0
 8025f08:	fa0f fa80 	sxth.w	sl, r0
 8025f0c:	45aa      	cmp	sl, r5
 8025f0e:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025f12:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025f16:	dd5c      	ble.n	8025fd2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025f18:	4591      	cmp	r9, r2
 8025f1a:	dd5a      	ble.n	8025fd2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025f1c:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025f20:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025f24:	440b      	add	r3, r1
 8025f26:	b29b      	uxth	r3, r3
 8025f28:	b21d      	sxth	r5, r3
 8025f2a:	2d00      	cmp	r5, #0
 8025f2c:	dd51      	ble.n	8025fd2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025f2e:	458e      	cmp	lr, r1
 8025f30:	dd4f      	ble.n	8025fd2 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025f32:	45d1      	cmp	r9, sl
 8025f34:	bfb8      	it	lt
 8025f36:	fa1f f089 	uxthlt.w	r0, r9
 8025f3a:	45ae      	cmp	lr, r5
 8025f3c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025f40:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025f44:	bfb8      	it	lt
 8025f46:	fa1f f38e 	uxthlt.w	r3, lr
 8025f4a:	1a80      	subs	r0, r0, r2
 8025f4c:	1a5b      	subs	r3, r3, r1
 8025f4e:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025f52:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025f56:	f8ad 2000 	strh.w	r2, [sp]
 8025f5a:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025f5e:	466d      	mov	r5, sp
 8025f60:	e895 0003 	ldmia.w	r5, {r0, r1}
 8025f64:	e887 0003 	stmia.w	r7, {r0, r1}
 8025f68:	f8dc 3000 	ldr.w	r3, [ip]
 8025f6c:	4660      	mov	r0, ip
 8025f6e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025f70:	4639      	mov	r1, r7
 8025f72:	4798      	blx	r3
 8025f74:	6861      	ldr	r1, [r4, #4]
 8025f76:	4628      	mov	r0, r5
 8025f78:	3104      	adds	r1, #4
 8025f7a:	f7ee fcf1 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025f7e:	4638      	mov	r0, r7
 8025f80:	f7ee fcaa 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025f84:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025f88:	f8bd 2000 	ldrh.w	r2, [sp]
 8025f8c:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025f90:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025f94:	4630      	mov	r0, r6
 8025f96:	f7ec fac1 	bl	801251c <_ZN8touchgfx7Outline5resetEv>
 8025f9a:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025f9e:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025fa2:	015b      	lsls	r3, r3, #5
 8025fa4:	60a3      	str	r3, [r4, #8]
 8025fa6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025faa:	015b      	lsls	r3, r3, #5
 8025fac:	60e3      	str	r3, [r4, #12]
 8025fae:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025fb2:	015b      	lsls	r3, r3, #5
 8025fb4:	6123      	str	r3, [r4, #16]
 8025fb6:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025fba:	015b      	lsls	r3, r3, #5
 8025fbc:	6163      	str	r3, [r4, #20]
 8025fbe:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025fc2:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025fc6:	4620      	mov	r0, r4
 8025fc8:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025fcc:	b002      	add	sp, #8
 8025fce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025fd2:	2300      	movs	r3, #0
 8025fd4:	9301      	str	r3, [sp, #4]
 8025fd6:	e7c2      	b.n	8025f5e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025fd8:	0802e590 	.word	0x0802e590

08025fdc <_ZN8touchgfx6Canvas5closeEv>:
 8025fdc:	b538      	push	{r3, r4, r5, lr}
 8025fde:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025fe2:	4604      	mov	r4, r0
 8025fe4:	b193      	cbz	r3, 802600c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025fe6:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025fea:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025fee:	4213      	tst	r3, r2
 8025ff0:	d10c      	bne.n	802600c <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025ff2:	f100 0520 	add.w	r5, r0, #32
 8025ff6:	b123      	cbz	r3, 8026002 <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025ff8:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025ffc:	4628      	mov	r0, r5
 8025ffe:	f7ff fe79 	bl	8025cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026002:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8026006:	4628      	mov	r0, r5
 8026008:	f7ff fe74 	bl	8025cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
 802600c:	2300      	movs	r3, #0
 802600e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026012:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8026016:	4298      	cmp	r0, r3
 8026018:	bf34      	ite	cc
 802601a:	2000      	movcc	r0, #0
 802601c:	2001      	movcs	r0, #1
 802601e:	bd38      	pop	{r3, r4, r5, pc}

08026020 <_ZN8touchgfx6Canvas6renderEh>:
 8026020:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8026024:	4604      	mov	r4, r0
 8026026:	6840      	ldr	r0, [r0, #4]
 8026028:	6803      	ldr	r3, [r0, #0]
 802602a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802602c:	460d      	mov	r5, r1
 802602e:	4798      	blx	r3
 8026030:	fb10 f105 	smulbb	r1, r0, r5
 8026034:	b289      	uxth	r1, r1
 8026036:	1c4d      	adds	r5, r1, #1
 8026038:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802603c:	122d      	asrs	r5, r5, #8
 802603e:	f000 809d 	beq.w	802617c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026042:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8026046:	2b00      	cmp	r3, #0
 8026048:	f000 8098 	beq.w	802617c <_ZN8touchgfx6Canvas6renderEh+0x15c>
 802604c:	4620      	mov	r0, r4
 802604e:	f7ff ffc5 	bl	8025fdc <_ZN8touchgfx6Canvas5closeEv>
 8026052:	4607      	mov	r7, r0
 8026054:	2800      	cmp	r0, #0
 8026056:	d048      	beq.n	80260ea <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026058:	6863      	ldr	r3, [r4, #4]
 802605a:	4e49      	ldr	r6, [pc, #292]	; (8026180 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 802605c:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802605e:	6837      	ldr	r7, [r6, #0]
 8026060:	6803      	ldr	r3, [r0, #0]
 8026062:	689b      	ldr	r3, [r3, #8]
 8026064:	4798      	blx	r3
 8026066:	4601      	mov	r1, r0
 8026068:	4638      	mov	r0, r7
 802606a:	f7ea fbc5 	bl	80107f8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802606e:	4607      	mov	r7, r0
 8026070:	f7dd fc04 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8026074:	6803      	ldr	r3, [r0, #0]
 8026076:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026078:	4798      	blx	r3
 802607a:	4680      	mov	r8, r0
 802607c:	f7dd fbfe 	bl	800387c <_ZN8touchgfx3HAL3lcdEv>
 8026080:	6803      	ldr	r3, [r0, #0]
 8026082:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026084:	4798      	blx	r3
 8026086:	280b      	cmp	r0, #11
 8026088:	d85d      	bhi.n	8026146 <_ZN8touchgfx6Canvas6renderEh+0x126>
 802608a:	e8df f000 	tbb	[pc, r0]
 802608e:	5e53      	.short	0x5e53
 8026090:	325c066e 	.word	0x325c066e
 8026094:	67676742 	.word	0x67676742
 8026098:	6767      	.short	0x6767
 802609a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802609e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80260a2:	2208      	movs	r2, #8
 80260a4:	fb91 f2f2 	sdiv	r2, r1, r2
 80260a8:	fb08 2303 	mla	r3, r8, r3, r2
 80260ac:	441f      	add	r7, r3
 80260ae:	424b      	negs	r3, r1
 80260b0:	f003 0307 	and.w	r3, r3, #7
 80260b4:	f001 0107 	and.w	r1, r1, #7
 80260b8:	bf58      	it	pl
 80260ba:	4259      	negpl	r1, r3
 80260bc:	b2c9      	uxtb	r1, r1
 80260be:	b2ed      	uxtb	r5, r5
 80260c0:	e9cd 1500 	strd	r1, r5, [sp]
 80260c4:	6860      	ldr	r0, [r4, #4]
 80260c6:	463a      	mov	r2, r7
 80260c8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 80260ca:	fa0f f388 	sxth.w	r3, r8
 80260ce:	f104 0020 	add.w	r0, r4, #32
 80260d2:	f7ff fe1b 	bl	8025d0c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 80260d6:	6863      	ldr	r3, [r4, #4]
 80260d8:	4607      	mov	r7, r0
 80260da:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80260dc:	6803      	ldr	r3, [r0, #0]
 80260de:	691b      	ldr	r3, [r3, #16]
 80260e0:	4798      	blx	r3
 80260e2:	6830      	ldr	r0, [r6, #0]
 80260e4:	6803      	ldr	r3, [r0, #0]
 80260e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80260e8:	4798      	blx	r3
 80260ea:	4638      	mov	r0, r7
 80260ec:	b002      	add	sp, #8
 80260ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80260f2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260f6:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80260fa:	2204      	movs	r2, #4
 80260fc:	fb91 f2f2 	sdiv	r2, r1, r2
 8026100:	fb08 2303 	mla	r3, r8, r3, r2
 8026104:	441f      	add	r7, r3
 8026106:	424b      	negs	r3, r1
 8026108:	f003 0303 	and.w	r3, r3, #3
 802610c:	f001 0103 	and.w	r1, r1, #3
 8026110:	e7d2      	b.n	80260b8 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8026112:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026116:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802611a:	2900      	cmp	r1, #0
 802611c:	f04f 0202 	mov.w	r2, #2
 8026120:	fb91 f2f2 	sdiv	r2, r1, r2
 8026124:	f001 0101 	and.w	r1, r1, #1
 8026128:	fb08 2303 	mla	r3, r8, r3, r2
 802612c:	441f      	add	r7, r3
 802612e:	bfb8      	it	lt
 8026130:	4249      	neglt	r1, r1
 8026132:	e7c3      	b.n	80260bc <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8026134:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026138:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802613c:	fb08 f303 	mul.w	r3, r8, r3
 8026140:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026144:	441f      	add	r7, r3
 8026146:	2100      	movs	r1, #0
 8026148:	e7b9      	b.n	80260be <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802614a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802614e:	fb08 f203 	mul.w	r2, r8, r3
 8026152:	8b23      	ldrh	r3, [r4, #24]
 8026154:	2103      	movs	r1, #3
 8026156:	fb13 2301 	smlabb	r3, r3, r1, r2
 802615a:	e7f3      	b.n	8026144 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802615c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026160:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026164:	fb08 2303 	mla	r3, r8, r3, r2
 8026168:	e7ec      	b.n	8026144 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802616a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802616e:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8026172:	fb08 f303 	mul.w	r3, r8, r3
 8026176:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802617a:	e7e3      	b.n	8026144 <_ZN8touchgfx6Canvas6renderEh+0x124>
 802617c:	2701      	movs	r7, #1
 802617e:	e7b4      	b.n	80260ea <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026180:	20012db4 	.word	0x20012db4

08026184 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8026184:	b510      	push	{r4, lr}
 8026186:	4b07      	ldr	r3, [pc, #28]	; (80261a4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026188:	781b      	ldrb	r3, [r3, #0]
 802618a:	2b01      	cmp	r3, #1
 802618c:	d108      	bne.n	80261a0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802618e:	6843      	ldr	r3, [r0, #4]
 8026190:	6814      	ldr	r4, [r2, #0]
 8026192:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8026196:	680b      	ldr	r3, [r1, #0]
 8026198:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802619c:	6013      	str	r3, [r2, #0]
 802619e:	600c      	str	r4, [r1, #0]
 80261a0:	bd10      	pop	{r4, pc}
 80261a2:	bf00      	nop
 80261a4:	20012dac 	.word	0x20012dac

080261a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80261a8:	b513      	push	{r0, r1, r4, lr}
 80261aa:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80261ae:	4604      	mov	r4, r0
 80261b0:	e9cd 2100 	strd	r2, r1, [sp]
 80261b4:	b9a3      	cbnz	r3, 80261e0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 80261b6:	466a      	mov	r2, sp
 80261b8:	a901      	add	r1, sp, #4
 80261ba:	4620      	mov	r0, r4
 80261bc:	f7ff ffe2 	bl	8026184 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80261c0:	68a3      	ldr	r3, [r4, #8]
 80261c2:	9901      	ldr	r1, [sp, #4]
 80261c4:	9a00      	ldr	r2, [sp, #0]
 80261c6:	1ac9      	subs	r1, r1, r3
 80261c8:	68e3      	ldr	r3, [r4, #12]
 80261ca:	9101      	str	r1, [sp, #4]
 80261cc:	1ad2      	subs	r2, r2, r3
 80261ce:	2a00      	cmp	r2, #0
 80261d0:	9200      	str	r2, [sp, #0]
 80261d2:	da0b      	bge.n	80261ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 80261d4:	2301      	movs	r3, #1
 80261d6:	2900      	cmp	r1, #0
 80261d8:	da0e      	bge.n	80261f8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 80261da:	f043 0304 	orr.w	r3, r3, #4
 80261de:	e013      	b.n	8026208 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 80261e0:	f7ff fefc 	bl	8025fdc <_ZN8touchgfx6Canvas5closeEv>
 80261e4:	2800      	cmp	r0, #0
 80261e6:	d1e6      	bne.n	80261b6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80261e8:	b002      	add	sp, #8
 80261ea:	bd10      	pop	{r4, pc}
 80261ec:	6963      	ldr	r3, [r4, #20]
 80261ee:	429a      	cmp	r2, r3
 80261f0:	bfac      	ite	ge
 80261f2:	2302      	movge	r3, #2
 80261f4:	2300      	movlt	r3, #0
 80261f6:	e7ee      	b.n	80261d6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80261f8:	6920      	ldr	r0, [r4, #16]
 80261fa:	4281      	cmp	r1, r0
 80261fc:	bfac      	ite	ge
 80261fe:	2008      	movge	r0, #8
 8026200:	2000      	movlt	r0, #0
 8026202:	4318      	orrs	r0, r3
 8026204:	b2c3      	uxtb	r3, r0
 8026206:	b158      	cbz	r0, 8026220 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026208:	2200      	movs	r2, #0
 802620a:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802620e:	9901      	ldr	r1, [sp, #4]
 8026210:	9a00      	ldr	r2, [sp, #0]
 8026212:	66a1      	str	r1, [r4, #104]	; 0x68
 8026214:	66e2      	str	r2, [r4, #108]	; 0x6c
 8026216:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802621a:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802621e:	e7e3      	b.n	80261e8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026220:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8026224:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026228:	4298      	cmp	r0, r3
 802622a:	d803      	bhi.n	8026234 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802622c:	f104 0020 	add.w	r0, r4, #32
 8026230:	f7ec fe72 	bl	8012f18 <_ZN8touchgfx7Outline6moveToEii>
 8026234:	2301      	movs	r3, #1
 8026236:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802623a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802623e:	2300      	movs	r3, #0
 8026240:	e7e5      	b.n	802620e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

08026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 8026242:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8026244:	ab02      	add	r3, sp, #8
 8026246:	4604      	mov	r4, r0
 8026248:	f843 2d08 	str.w	r2, [r3, #-8]!
 802624c:	9101      	str	r1, [sp, #4]
 802624e:	461a      	mov	r2, r3
 8026250:	a901      	add	r1, sp, #4
 8026252:	f7ff ff97 	bl	8026184 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026256:	68a3      	ldr	r3, [r4, #8]
 8026258:	9901      	ldr	r1, [sp, #4]
 802625a:	9a00      	ldr	r2, [sp, #0]
 802625c:	1ac9      	subs	r1, r1, r3
 802625e:	68e3      	ldr	r3, [r4, #12]
 8026260:	9101      	str	r1, [sp, #4]
 8026262:	1ad2      	subs	r2, r2, r3
 8026264:	2a00      	cmp	r2, #0
 8026266:	9200      	str	r2, [sp, #0]
 8026268:	db1c      	blt.n	80262a4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802626a:	6963      	ldr	r3, [r4, #20]
 802626c:	429a      	cmp	r2, r3
 802626e:	bfac      	ite	ge
 8026270:	2002      	movge	r0, #2
 8026272:	2000      	movlt	r0, #0
 8026274:	2900      	cmp	r1, #0
 8026276:	db17      	blt.n	80262a8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026278:	6923      	ldr	r3, [r4, #16]
 802627a:	4299      	cmp	r1, r3
 802627c:	bfac      	ite	ge
 802627e:	2308      	movge	r3, #8
 8026280:	2300      	movlt	r3, #0
 8026282:	4303      	orrs	r3, r0
 8026284:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026288:	b2dd      	uxtb	r5, r3
 802628a:	b978      	cbnz	r0, 80262ac <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802628c:	f104 0020 	add.w	r0, r4, #32
 8026290:	f7ff fd30 	bl	8025cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
 8026294:	9b01      	ldr	r3, [sp, #4]
 8026296:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026298:	9b00      	ldr	r3, [sp, #0]
 802629a:	6623      	str	r3, [r4, #96]	; 0x60
 802629c:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80262a0:	b002      	add	sp, #8
 80262a2:	bd70      	pop	{r4, r5, r6, pc}
 80262a4:	2001      	movs	r0, #1
 80262a6:	e7e5      	b.n	8026274 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80262a8:	2304      	movs	r3, #4
 80262aa:	e7ea      	b.n	8026282 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80262ac:	b113      	cbz	r3, 80262b4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80262ae:	ea10 0305 	ands.w	r3, r0, r5
 80262b2:	d11c      	bne.n	80262ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 80262b4:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 80262b8:	f104 0620 	add.w	r6, r4, #32
 80262bc:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 80262c0:	b98b      	cbnz	r3, 80262e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 80262c2:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80262c6:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80262ca:	4298      	cmp	r0, r3
 80262cc:	d802      	bhi.n	80262d4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 80262ce:	4630      	mov	r0, r6
 80262d0:	f7ec fe22 	bl	8012f18 <_ZN8touchgfx7Outline6moveToEii>
 80262d4:	2301      	movs	r3, #1
 80262d6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80262da:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80262de:	e9dd 2100 	ldrd	r2, r1, [sp]
 80262e2:	4630      	mov	r0, r6
 80262e4:	e7d4      	b.n	8026290 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 80262e6:	4630      	mov	r0, r6
 80262e8:	f7ff fd04 	bl	8025cf4 <_ZN8touchgfx10Rasterizer6lineToEii>
 80262ec:	e7f7      	b.n	80262de <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80262ee:	461d      	mov	r5, r3
 80262f0:	e7d0      	b.n	8026294 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080262f4 <_ZN8touchgfx6CanvasD1Ev>:
 80262f4:	b510      	push	{r4, lr}
 80262f6:	4b04      	ldr	r3, [pc, #16]	; (8026308 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80262f8:	4604      	mov	r4, r0
 80262fa:	f840 3b20 	str.w	r3, [r0], #32
 80262fe:	f7ec f905 	bl	801250c <_ZN8touchgfx7OutlineD1Ev>
 8026302:	4620      	mov	r0, r4
 8026304:	bd10      	pop	{r4, pc}
 8026306:	bf00      	nop
 8026308:	0802e590 	.word	0x0802e590

0802630c <_ZN8touchgfx6CanvasD0Ev>:
 802630c:	b510      	push	{r4, lr}
 802630e:	4604      	mov	r4, r0
 8026310:	f7ff fff0 	bl	80262f4 <_ZN8touchgfx6CanvasD1Ev>
 8026314:	4620      	mov	r0, r4
 8026316:	2170      	movs	r1, #112	; 0x70
 8026318:	f002 fd09 	bl	8028d2e <_ZdlPvj>
 802631c:	4620      	mov	r0, r4
 802631e:	bd10      	pop	{r4, pc}

08026320 <_ZN8touchgfx6CircleD1Ev>:
 8026320:	4770      	bx	lr

08026322 <_ZN8touchgfx6CircleD0Ev>:
 8026322:	b510      	push	{r4, lr}
 8026324:	2148      	movs	r1, #72	; 0x48
 8026326:	4604      	mov	r4, r0
 8026328:	f002 fd01 	bl	8028d2e <_ZdlPvj>
 802632c:	4620      	mov	r0, r4
 802632e:	bd10      	pop	{r4, pc}

08026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8026330:	b508      	push	{r3, lr}
 8026332:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 8026336:	f7ea fdb5 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802633a:	bd08      	pop	{r3, pc}

0802633c <_ZN8touchgfx6CircleC1Ev>:
 802633c:	b510      	push	{r4, lr}
 802633e:	4604      	mov	r4, r0
 8026340:	f7ea fc4c 	bl	8010bdc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8026344:	4b08      	ldr	r3, [pc, #32]	; (8026368 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 8026346:	6023      	str	r3, [r4, #0]
 8026348:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 802634c:	2300      	movs	r3, #0
 802634e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 8026352:	f24b 4205 	movw	r2, #46085	; 0xb405
 8026356:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 802635a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 802635e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8026362:	60a3      	str	r3, [r4, #8]
 8026364:	4620      	mov	r0, r4
 8026366:	bd10      	pop	{r4, pc}
 8026368:	0802e5a4 	.word	0x0802e5a4

0802636c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 802636c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026370:	428a      	cmp	r2, r1
 8026372:	4680      	mov	r8, r0
 8026374:	4610      	mov	r0, r2
 8026376:	4699      	mov	r9, r3
 8026378:	bfa6      	itte	ge
 802637a:	460a      	movge	r2, r1
 802637c:	4603      	movge	r3, r0
 802637e:	460b      	movlt	r3, r1
 8026380:	1a99      	subs	r1, r3, r2
 8026382:	b085      	sub	sp, #20
 8026384:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 8026388:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 802638c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802638e:	bfa4      	itt	ge
 8026390:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 8026394:	2200      	movge	r2, #0
 8026396:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 802639a:	9300      	str	r3, [sp, #0]
 802639c:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 80263a0:	f102 0b01 	add.w	fp, r2, #1
 80263a4:	2c00      	cmp	r4, #0
 80263a6:	f040 80af 	bne.w	8026508 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 80263aa:	4610      	mov	r0, r2
 80263ac:	9201      	str	r2, [sp, #4]
 80263ae:	f7ea fd79 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80263b2:	a903      	add	r1, sp, #12
 80263b4:	9003      	str	r0, [sp, #12]
 80263b6:	4650      	mov	r0, sl
 80263b8:	f7ea fc3c 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263bc:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 80263c0:	9a01      	ldr	r2, [sp, #4]
 80263c2:	4408      	add	r0, r1
 80263c4:	f8d9 1000 	ldr.w	r1, [r9]
 80263c8:	4281      	cmp	r1, r0
 80263ca:	bfc8      	it	gt
 80263cc:	f8c9 0000 	strgt.w	r0, [r9]
 80263d0:	6839      	ldr	r1, [r7, #0]
 80263d2:	4288      	cmp	r0, r1
 80263d4:	bfc8      	it	gt
 80263d6:	6038      	strgt	r0, [r7, #0]
 80263d8:	4610      	mov	r0, r2
 80263da:	f7ff ffa9 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80263de:	a903      	add	r1, sp, #12
 80263e0:	9003      	str	r0, [sp, #12]
 80263e2:	4650      	mov	r0, sl
 80263e4:	f7ea fc26 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80263e8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80263ec:	1a10      	subs	r0, r2, r0
 80263ee:	6832      	ldr	r2, [r6, #0]
 80263f0:	4282      	cmp	r2, r0
 80263f2:	bfc8      	it	gt
 80263f4:	6030      	strgt	r0, [r6, #0]
 80263f6:	682a      	ldr	r2, [r5, #0]
 80263f8:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 80263fc:	4290      	cmp	r0, r2
 80263fe:	fb9b f2f1 	sdiv	r2, fp, r1
 8026402:	fb01 b212 	mls	r2, r1, r2, fp
 8026406:	eba1 0202 	sub.w	r2, r1, r2
 802640a:	bfc8      	it	gt
 802640c:	6028      	strgt	r0, [r5, #0]
 802640e:	fb92 f0f1 	sdiv	r0, r2, r1
 8026412:	fb01 2210 	mls	r2, r1, r0, r2
 8026416:	4493      	add	fp, r2
 8026418:	9b00      	ldr	r3, [sp, #0]
 802641a:	455b      	cmp	r3, fp
 802641c:	db2a      	blt.n	8026474 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 802641e:	4658      	mov	r0, fp
 8026420:	f7ea fd40 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026424:	a903      	add	r1, sp, #12
 8026426:	9003      	str	r0, [sp, #12]
 8026428:	4650      	mov	r0, sl
 802642a:	f7ea fc03 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802642e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026432:	4410      	add	r0, r2
 8026434:	f8d9 2000 	ldr.w	r2, [r9]
 8026438:	4282      	cmp	r2, r0
 802643a:	bfc8      	it	gt
 802643c:	f8c9 0000 	strgt.w	r0, [r9]
 8026440:	683a      	ldr	r2, [r7, #0]
 8026442:	4290      	cmp	r0, r2
 8026444:	bfc8      	it	gt
 8026446:	6038      	strgt	r0, [r7, #0]
 8026448:	4658      	mov	r0, fp
 802644a:	f7ff ff71 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802644e:	a903      	add	r1, sp, #12
 8026450:	9003      	str	r0, [sp, #12]
 8026452:	4650      	mov	r0, sl
 8026454:	f7ea fbee 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026458:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802645c:	1a10      	subs	r0, r2, r0
 802645e:	6832      	ldr	r2, [r6, #0]
 8026460:	4282      	cmp	r2, r0
 8026462:	bfc8      	it	gt
 8026464:	6030      	strgt	r0, [r6, #0]
 8026466:	682a      	ldr	r2, [r5, #0]
 8026468:	4290      	cmp	r0, r2
 802646a:	bfc8      	it	gt
 802646c:	6028      	strgt	r0, [r5, #0]
 802646e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026472:	e7d1      	b.n	8026418 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 8026474:	9b00      	ldr	r3, [sp, #0]
 8026476:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 802647a:	455b      	cmp	r3, fp
 802647c:	dd27      	ble.n	80264ce <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 802647e:	4618      	mov	r0, r3
 8026480:	f7ea fd10 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026484:	a903      	add	r1, sp, #12
 8026486:	9003      	str	r0, [sp, #12]
 8026488:	4650      	mov	r0, sl
 802648a:	f7ea fbd3 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802648e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026492:	4410      	add	r0, r2
 8026494:	f8d9 2000 	ldr.w	r2, [r9]
 8026498:	4282      	cmp	r2, r0
 802649a:	bfc8      	it	gt
 802649c:	f8c9 0000 	strgt.w	r0, [r9]
 80264a0:	683a      	ldr	r2, [r7, #0]
 80264a2:	4290      	cmp	r0, r2
 80264a4:	bfc8      	it	gt
 80264a6:	6038      	strgt	r0, [r7, #0]
 80264a8:	9800      	ldr	r0, [sp, #0]
 80264aa:	f7ff ff41 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80264ae:	a903      	add	r1, sp, #12
 80264b0:	9003      	str	r0, [sp, #12]
 80264b2:	4650      	mov	r0, sl
 80264b4:	f7ea fbbe 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80264b8:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 80264bc:	1a10      	subs	r0, r2, r0
 80264be:	6832      	ldr	r2, [r6, #0]
 80264c0:	4282      	cmp	r2, r0
 80264c2:	bfc8      	it	gt
 80264c4:	6030      	strgt	r0, [r6, #0]
 80264c6:	682a      	ldr	r2, [r5, #0]
 80264c8:	4290      	cmp	r0, r2
 80264ca:	bfc8      	it	gt
 80264cc:	6028      	strgt	r0, [r5, #0]
 80264ce:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80264d2:	f8d9 1000 	ldr.w	r1, [r9]
 80264d6:	4291      	cmp	r1, r2
 80264d8:	bfc8      	it	gt
 80264da:	f8c9 2000 	strgt.w	r2, [r9]
 80264de:	683a      	ldr	r2, [r7, #0]
 80264e0:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 80264e4:	429a      	cmp	r2, r3
 80264e6:	bfb8      	it	lt
 80264e8:	603b      	strlt	r3, [r7, #0]
 80264ea:	6832      	ldr	r2, [r6, #0]
 80264ec:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80264f0:	429a      	cmp	r2, r3
 80264f2:	bfc8      	it	gt
 80264f4:	6033      	strgt	r3, [r6, #0]
 80264f6:	682a      	ldr	r2, [r5, #0]
 80264f8:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 80264fc:	429a      	cmp	r2, r3
 80264fe:	da00      	bge.n	8026502 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 8026500:	602b      	str	r3, [r5, #0]
 8026502:	b005      	add	sp, #20
 8026504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026508:	2002      	movs	r0, #2
 802650a:	3401      	adds	r4, #1
 802650c:	fb94 f4f0 	sdiv	r4, r4, r0
 8026510:	4610      	mov	r0, r2
 8026512:	9201      	str	r2, [sp, #4]
 8026514:	f7ea fcc6 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026518:	a903      	add	r1, sp, #12
 802651a:	9003      	str	r0, [sp, #12]
 802651c:	4650      	mov	r0, sl
 802651e:	f7ea fb89 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026522:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 8026526:	9a01      	ldr	r2, [sp, #4]
 8026528:	4408      	add	r0, r1
 802652a:	f8d9 1000 	ldr.w	r1, [r9]
 802652e:	1b03      	subs	r3, r0, r4
 8026530:	4299      	cmp	r1, r3
 8026532:	bfc8      	it	gt
 8026534:	f8c9 3000 	strgt.w	r3, [r9]
 8026538:	6839      	ldr	r1, [r7, #0]
 802653a:	428b      	cmp	r3, r1
 802653c:	bfc8      	it	gt
 802653e:	603b      	strgt	r3, [r7, #0]
 8026540:	f8d9 1000 	ldr.w	r1, [r9]
 8026544:	4420      	add	r0, r4
 8026546:	4281      	cmp	r1, r0
 8026548:	bfc8      	it	gt
 802654a:	f8c9 0000 	strgt.w	r0, [r9]
 802654e:	6839      	ldr	r1, [r7, #0]
 8026550:	4288      	cmp	r0, r1
 8026552:	bfc8      	it	gt
 8026554:	6038      	strgt	r0, [r7, #0]
 8026556:	4610      	mov	r0, r2
 8026558:	f7ff feea 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 802655c:	a903      	add	r1, sp, #12
 802655e:	9003      	str	r0, [sp, #12]
 8026560:	4650      	mov	r0, sl
 8026562:	f7ea fb67 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026566:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 802656a:	1a10      	subs	r0, r2, r0
 802656c:	6832      	ldr	r2, [r6, #0]
 802656e:	1b01      	subs	r1, r0, r4
 8026570:	428a      	cmp	r2, r1
 8026572:	bfc8      	it	gt
 8026574:	6031      	strgt	r1, [r6, #0]
 8026576:	682a      	ldr	r2, [r5, #0]
 8026578:	4291      	cmp	r1, r2
 802657a:	bfc8      	it	gt
 802657c:	6029      	strgt	r1, [r5, #0]
 802657e:	6832      	ldr	r2, [r6, #0]
 8026580:	4420      	add	r0, r4
 8026582:	4282      	cmp	r2, r0
 8026584:	bfc8      	it	gt
 8026586:	6030      	strgt	r0, [r6, #0]
 8026588:	682a      	ldr	r2, [r5, #0]
 802658a:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 802658e:	4290      	cmp	r0, r2
 8026590:	fb9b f2f1 	sdiv	r2, fp, r1
 8026594:	fb01 b212 	mls	r2, r1, r2, fp
 8026598:	eba1 0202 	sub.w	r2, r1, r2
 802659c:	bfc8      	it	gt
 802659e:	6028      	strgt	r0, [r5, #0]
 80265a0:	fb92 f0f1 	sdiv	r0, r2, r1
 80265a4:	fb01 2210 	mls	r2, r1, r0, r2
 80265a8:	4493      	add	fp, r2
 80265aa:	9b00      	ldr	r3, [sp, #0]
 80265ac:	455b      	cmp	r3, fp
 80265ae:	db40      	blt.n	8026632 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 80265b0:	4658      	mov	r0, fp
 80265b2:	f7ea fc77 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80265b6:	a903      	add	r1, sp, #12
 80265b8:	9003      	str	r0, [sp, #12]
 80265ba:	4650      	mov	r0, sl
 80265bc:	f7ea fb3a 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80265c0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 80265c4:	4410      	add	r0, r2
 80265c6:	f8d9 2000 	ldr.w	r2, [r9]
 80265ca:	1b01      	subs	r1, r0, r4
 80265cc:	428a      	cmp	r2, r1
 80265ce:	bfc8      	it	gt
 80265d0:	f8c9 1000 	strgt.w	r1, [r9]
 80265d4:	683a      	ldr	r2, [r7, #0]
 80265d6:	4291      	cmp	r1, r2
 80265d8:	bfc8      	it	gt
 80265da:	6039      	strgt	r1, [r7, #0]
 80265dc:	f8d9 2000 	ldr.w	r2, [r9]
 80265e0:	4420      	add	r0, r4
 80265e2:	4282      	cmp	r2, r0
 80265e4:	bfc8      	it	gt
 80265e6:	f8c9 0000 	strgt.w	r0, [r9]
 80265ea:	683a      	ldr	r2, [r7, #0]
 80265ec:	4290      	cmp	r0, r2
 80265ee:	bfc8      	it	gt
 80265f0:	6038      	strgt	r0, [r7, #0]
 80265f2:	4658      	mov	r0, fp
 80265f4:	f7ff fe9c 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80265f8:	a903      	add	r1, sp, #12
 80265fa:	9003      	str	r0, [sp, #12]
 80265fc:	4650      	mov	r0, sl
 80265fe:	f7ea fb19 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026602:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 8026606:	1a10      	subs	r0, r2, r0
 8026608:	6832      	ldr	r2, [r6, #0]
 802660a:	1b01      	subs	r1, r0, r4
 802660c:	428a      	cmp	r2, r1
 802660e:	bfc8      	it	gt
 8026610:	6031      	strgt	r1, [r6, #0]
 8026612:	682a      	ldr	r2, [r5, #0]
 8026614:	4291      	cmp	r1, r2
 8026616:	bfc8      	it	gt
 8026618:	6029      	strgt	r1, [r5, #0]
 802661a:	6832      	ldr	r2, [r6, #0]
 802661c:	4420      	add	r0, r4
 802661e:	4282      	cmp	r2, r0
 8026620:	bfc8      	it	gt
 8026622:	6030      	strgt	r0, [r6, #0]
 8026624:	682a      	ldr	r2, [r5, #0]
 8026626:	4290      	cmp	r0, r2
 8026628:	bfc8      	it	gt
 802662a:	6028      	strgt	r0, [r5, #0]
 802662c:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 8026630:	e7bb      	b.n	80265aa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 8026632:	9b00      	ldr	r3, [sp, #0]
 8026634:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 8026638:	455b      	cmp	r3, fp
 802663a:	f77f af62 	ble.w	8026502 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 802663e:	4618      	mov	r0, r3
 8026640:	f7ea fc30 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026644:	a903      	add	r1, sp, #12
 8026646:	9003      	str	r0, [sp, #12]
 8026648:	4650      	mov	r0, sl
 802664a:	f7ea faf3 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 802664e:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 8026652:	4410      	add	r0, r2
 8026654:	f8d9 2000 	ldr.w	r2, [r9]
 8026658:	1b01      	subs	r1, r0, r4
 802665a:	428a      	cmp	r2, r1
 802665c:	bfc8      	it	gt
 802665e:	f8c9 1000 	strgt.w	r1, [r9]
 8026662:	683a      	ldr	r2, [r7, #0]
 8026664:	4291      	cmp	r1, r2
 8026666:	bfc8      	it	gt
 8026668:	6039      	strgt	r1, [r7, #0]
 802666a:	f8d9 2000 	ldr.w	r2, [r9]
 802666e:	4420      	add	r0, r4
 8026670:	4282      	cmp	r2, r0
 8026672:	bfc8      	it	gt
 8026674:	f8c9 0000 	strgt.w	r0, [r9]
 8026678:	683b      	ldr	r3, [r7, #0]
 802667a:	4298      	cmp	r0, r3
 802667c:	bfc8      	it	gt
 802667e:	6038      	strgt	r0, [r7, #0]
 8026680:	9800      	ldr	r0, [sp, #0]
 8026682:	f7ff fe55 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026686:	a903      	add	r1, sp, #12
 8026688:	9003      	str	r0, [sp, #12]
 802668a:	4650      	mov	r0, sl
 802668c:	f7ea fad2 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026690:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 8026694:	6832      	ldr	r2, [r6, #0]
 8026696:	1a18      	subs	r0, r3, r0
 8026698:	1b03      	subs	r3, r0, r4
 802669a:	429a      	cmp	r2, r3
 802669c:	bfc8      	it	gt
 802669e:	6033      	strgt	r3, [r6, #0]
 80266a0:	682a      	ldr	r2, [r5, #0]
 80266a2:	4293      	cmp	r3, r2
 80266a4:	bfc8      	it	gt
 80266a6:	602b      	strgt	r3, [r5, #0]
 80266a8:	6833      	ldr	r3, [r6, #0]
 80266aa:	4404      	add	r4, r0
 80266ac:	42a3      	cmp	r3, r4
 80266ae:	bfc8      	it	gt
 80266b0:	6034      	strgt	r4, [r6, #0]
 80266b2:	682b      	ldr	r3, [r5, #0]
 80266b4:	429c      	cmp	r4, r3
 80266b6:	bfc8      	it	gt
 80266b8:	602c      	strgt	r4, [r5, #0]
 80266ba:	e722      	b.n	8026502 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

080266bc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80266bc:	b530      	push	{r4, r5, lr}
 80266be:	4604      	mov	r4, r0
 80266c0:	4608      	mov	r0, r1
 80266c2:	4611      	mov	r1, r2
 80266c4:	461a      	mov	r2, r3
 80266c6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80266ca:	b089      	sub	sp, #36	; 0x24
 80266cc:	015b      	lsls	r3, r3, #5
 80266ce:	9304      	str	r3, [sp, #16]
 80266d0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80266d4:	2500      	movs	r5, #0
 80266d6:	015b      	lsls	r3, r3, #5
 80266d8:	e9cd 3506 	strd	r3, r5, [sp, #24]
 80266dc:	ab07      	add	r3, sp, #28
 80266de:	9302      	str	r3, [sp, #8]
 80266e0:	ab06      	add	r3, sp, #24
 80266e2:	9301      	str	r3, [sp, #4]
 80266e4:	ab05      	add	r3, sp, #20
 80266e6:	9300      	str	r3, [sp, #0]
 80266e8:	ab04      	add	r3, sp, #16
 80266ea:	9505      	str	r5, [sp, #20]
 80266ec:	f7ff fe3e 	bl	802636c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 80266f0:	2520      	movs	r5, #32
 80266f2:	9a04      	ldr	r2, [sp, #16]
 80266f4:	9805      	ldr	r0, [sp, #20]
 80266f6:	fb92 f2f5 	sdiv	r2, r2, r5
 80266fa:	fb90 f0f5 	sdiv	r0, r0, r5
 80266fe:	b292      	uxth	r2, r2
 8026700:	3002      	adds	r0, #2
 8026702:	1a80      	subs	r0, r0, r2
 8026704:	9b06      	ldr	r3, [sp, #24]
 8026706:	9907      	ldr	r1, [sp, #28]
 8026708:	fb93 f3f5 	sdiv	r3, r3, r5
 802670c:	fb91 f1f5 	sdiv	r1, r1, r5
 8026710:	b29b      	uxth	r3, r3
 8026712:	3102      	adds	r1, #2
 8026714:	1ac9      	subs	r1, r1, r3
 8026716:	3a01      	subs	r2, #1
 8026718:	3b01      	subs	r3, #1
 802671a:	80a0      	strh	r0, [r4, #4]
 802671c:	4620      	mov	r0, r4
 802671e:	8022      	strh	r2, [r4, #0]
 8026720:	8063      	strh	r3, [r4, #2]
 8026722:	80e1      	strh	r1, [r4, #6]
 8026724:	b009      	add	sp, #36	; 0x24
 8026726:	bd30      	pop	{r4, r5, pc}

08026728 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8026728:	b510      	push	{r4, lr}
 802672a:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 802672e:	4604      	mov	r4, r0
 8026730:	f7ff ffc4 	bl	80266bc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026734:	4620      	mov	r0, r4
 8026736:	bd10      	pop	{r4, pc}

08026738 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8026738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802673a:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 802673e:	4606      	mov	r6, r0
 8026740:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 8026744:	6813      	ldr	r3, [r2, #0]
 8026746:	42a5      	cmp	r5, r4
 8026748:	ea4f 1040 	mov.w	r0, r0, lsl #5
 802674c:	da2b      	bge.n	80267a6 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 802674e:	42a3      	cmp	r3, r4
 8026750:	dd14      	ble.n	802677c <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 8026752:	b168      	cbz	r0, 8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8026754:	4267      	negs	r7, r4
 8026756:	fb97 f2f0 	sdiv	r2, r7, r0
 802675a:	fb00 7212 	mls	r2, r0, r2, r7
 802675e:	1a82      	subs	r2, r0, r2
 8026760:	fb92 f7f0 	sdiv	r7, r2, r0
 8026764:	fb00 2017 	mls	r0, r0, r7, r2
 8026768:	1a24      	subs	r4, r4, r0
 802676a:	42ac      	cmp	r4, r5
 802676c:	bfb8      	it	lt
 802676e:	462c      	movlt	r4, r5
 8026770:	4630      	mov	r0, r6
 8026772:	4622      	mov	r2, r4
 8026774:	f7ff ffa2 	bl	80266bc <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8026778:	4630      	mov	r0, r6
 802677a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802677c:	42ab      	cmp	r3, r5
 802677e:	dd0e      	ble.n	802679e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026780:	b168      	cbz	r0, 802679e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 8026782:	425f      	negs	r7, r3
 8026784:	fb97 f2f0 	sdiv	r2, r7, r0
 8026788:	fb00 7212 	mls	r2, r0, r2, r7
 802678c:	1a82      	subs	r2, r0, r2
 802678e:	fb92 f7f0 	sdiv	r7, r2, r0
 8026792:	fb00 2017 	mls	r0, r0, r7, r2
 8026796:	1a1b      	subs	r3, r3, r0
 8026798:	42ab      	cmp	r3, r5
 802679a:	bfb8      	it	lt
 802679c:	462b      	movlt	r3, r5
 802679e:	4622      	mov	r2, r4
 80267a0:	461c      	mov	r4, r3
 80267a2:	4613      	mov	r3, r2
 80267a4:	e7e4      	b.n	8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80267a6:	42a3      	cmp	r3, r4
 80267a8:	da10      	bge.n	80267cc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80267aa:	b148      	cbz	r0, 80267c0 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80267ac:	fb94 f2f0 	sdiv	r2, r4, r0
 80267b0:	fb00 4212 	mls	r2, r0, r2, r4
 80267b4:	1a82      	subs	r2, r0, r2
 80267b6:	fb92 f7f0 	sdiv	r7, r2, r0
 80267ba:	fb00 2017 	mls	r0, r0, r7, r2
 80267be:	4404      	add	r4, r0
 80267c0:	42a5      	cmp	r5, r4
 80267c2:	bfa8      	it	ge
 80267c4:	4625      	movge	r5, r4
 80267c6:	461c      	mov	r4, r3
 80267c8:	462b      	mov	r3, r5
 80267ca:	e7d1      	b.n	8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80267cc:	42ab      	cmp	r3, r5
 80267ce:	dacf      	bge.n	8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80267d0:	2800      	cmp	r0, #0
 80267d2:	d0cd      	beq.n	8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80267d4:	fb93 f2f0 	sdiv	r2, r3, r0
 80267d8:	fb00 3212 	mls	r2, r0, r2, r3
 80267dc:	1a82      	subs	r2, r0, r2
 80267de:	fb92 f7f0 	sdiv	r7, r2, r0
 80267e2:	fb00 2017 	mls	r0, r0, r7, r2
 80267e6:	4403      	add	r3, r0
 80267e8:	42ab      	cmp	r3, r5
 80267ea:	bfa8      	it	ge
 80267ec:	462b      	movge	r3, r5
 80267ee:	e7bf      	b.n	8026770 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

080267f0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 80267f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80267f4:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 80267f8:	42ae      	cmp	r6, r5
 80267fa:	bfa2      	ittt	ge
 80267fc:	4633      	movge	r3, r6
 80267fe:	462e      	movge	r6, r5
 8026800:	461d      	movge	r5, r3
 8026802:	1bab      	subs	r3, r5, r6
 8026804:	468b      	mov	fp, r1
 8026806:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8026808:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 802680c:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 8026810:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026814:	f04f 0220 	mov.w	r2, #32
 8026818:	b0ab      	sub	sp, #172	; 0xac
 802681a:	4604      	mov	r4, r0
 802681c:	bfa4      	itt	ge
 802681e:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 8026822:	2600      	movge	r6, #0
 8026824:	fb99 f9f2 	sdiv	r9, r9, r2
 8026828:	fb9a faf2 	sdiv	sl, sl, r2
 802682c:	6b43      	ldr	r3, [r0, #52]	; 0x34
 802682e:	2900      	cmp	r1, #0
 8026830:	f000 80f5 	beq.w	8026a1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 8026834:	f9bb 0000 	ldrsh.w	r0, [fp]
 8026838:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 802683c:	eba9 0700 	sub.w	r7, r9, r0
 8026840:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8026844:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 8026848:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 802684c:	ebaa 0802 	sub.w	r8, sl, r2
 8026850:	4407      	add	r7, r0
 8026852:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8026856:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 802685a:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 802685e:	b23f      	sxth	r7, r7
 8026860:	4490      	add	r8, r2
 8026862:	eba9 0707 	sub.w	r7, r9, r7
 8026866:	fa0f f888 	sxth.w	r8, r8
 802686a:	ebaa 0808 	sub.w	r8, sl, r8
 802686e:	2f00      	cmp	r7, #0
 8026870:	bfb8      	it	lt
 8026872:	427f      	neglt	r7, r7
 8026874:	f1b8 0f00 	cmp.w	r8, #0
 8026878:	bfb8      	it	lt
 802687a:	f1c8 0800 	rsblt	r8, r8, #0
 802687e:	45bc      	cmp	ip, r7
 8026880:	bfcc      	ite	gt
 8026882:	f10c 0701 	addgt.w	r7, ip, #1
 8026886:	3701      	addle	r7, #1
 8026888:	4540      	cmp	r0, r8
 802688a:	bfc8      	it	gt
 802688c:	f100 0801 	addgt.w	r8, r0, #1
 8026890:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 8026894:	f100 0001 	add.w	r0, r0, #1
 8026898:	ea4f 0060 	mov.w	r0, r0, asr #1
 802689c:	f04f 0202 	mov.w	r2, #2
 80268a0:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 80268a4:	fb91 f1f2 	sdiv	r1, r1, r2
 80268a8:	eba3 0301 	sub.w	r3, r3, r1
 80268ac:	bfd8      	it	le
 80268ae:	f108 0801 	addle.w	r8, r8, #1
 80268b2:	9201      	str	r2, [sp, #4]
 80268b4:	930d      	str	r3, [sp, #52]	; 0x34
 80268b6:	f7ea fad5 	bl	8010e64 <_ZN8touchgfx7CWRUtil4sineEi>
 80268ba:	a92a      	add	r1, sp, #168	; 0xa8
 80268bc:	fb08 f808 	mul.w	r8, r8, r8
 80268c0:	f841 0d70 	str.w	r0, [r1, #-112]!
 80268c4:	a80d      	add	r0, sp, #52	; 0x34
 80268c6:	f7ea f9b5 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80268ca:	fb07 8707 	mla	r7, r7, r7, r8
 80268ce:	f04f 0c20 	mov.w	ip, #32
 80268d2:	fb90 f0fc 	sdiv	r0, r0, ip
 80268d6:	4340      	muls	r0, r0
 80268d8:	4287      	cmp	r7, r0
 80268da:	9a01      	ldr	r2, [sp, #4]
 80268dc:	da04      	bge.n	80268e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 80268de:	2401      	movs	r4, #1
 80268e0:	4620      	mov	r0, r4
 80268e2:	b02b      	add	sp, #172	; 0xac
 80268e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80268e8:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80268ea:	6c21      	ldr	r1, [r4, #64]	; 0x40
 80268ec:	fb91 f3f2 	sdiv	r3, r1, r2
 80268f0:	4403      	add	r3, r0
 80268f2:	fb93 f3fc 	sdiv	r3, r3, ip
 80268f6:	f9bb 1000 	ldrsh.w	r1, [fp]
 80268fa:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 80268fe:	440a      	add	r2, r1
 8026900:	b212      	sxth	r2, r2
 8026902:	454a      	cmp	r2, r9
 8026904:	bfa8      	it	ge
 8026906:	464a      	movge	r2, r9
 8026908:	428a      	cmp	r2, r1
 802690a:	bfac      	ite	ge
 802690c:	eba9 0902 	subge.w	r9, r9, r2
 8026910:	eba9 0901 	sublt.w	r9, r9, r1
 8026914:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 8026918:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 802691c:	440a      	add	r2, r1
 802691e:	b212      	sxth	r2, r2
 8026920:	4552      	cmp	r2, sl
 8026922:	bfa8      	it	ge
 8026924:	4652      	movge	r2, sl
 8026926:	428a      	cmp	r2, r1
 8026928:	bfac      	ite	ge
 802692a:	ebaa 0a02 	subge.w	sl, sl, r2
 802692e:	ebaa 0a01 	sublt.w	sl, sl, r1
 8026932:	3301      	adds	r3, #1
 8026934:	fb0a fa0a 	mul.w	sl, sl, sl
 8026938:	fb09 a909 	mla	r9, r9, r9, sl
 802693c:	435b      	muls	r3, r3
 802693e:	4599      	cmp	r9, r3
 8026940:	dccd      	bgt.n	80268de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 8026942:	465a      	mov	r2, fp
 8026944:	4621      	mov	r1, r4
 8026946:	a80e      	add	r0, sp, #56	; 0x38
 8026948:	f7ff faae 	bl	8025ea8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 802694c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 802694e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026950:	9209      	str	r2, [sp, #36]	; 0x24
 8026952:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8026956:	930a      	str	r3, [sp, #40]	; 0x28
 8026958:	dd07      	ble.n	802696a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 802695a:	2102      	movs	r1, #2
 802695c:	fb93 f3f1 	sdiv	r3, r3, r1
 8026960:	4413      	add	r3, r2
 8026962:	930a      	str	r3, [sp, #40]	; 0x28
 8026964:	fb93 f3f1 	sdiv	r3, r3, r1
 8026968:	9309      	str	r3, [sp, #36]	; 0x24
 802696a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 802696e:	4630      	mov	r0, r6
 8026970:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8026974:	930b      	str	r3, [sp, #44]	; 0x2c
 8026976:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 802697a:	f7ea fa93 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 802697e:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 8026982:	f04f 0a02 	mov.w	sl, #2
 8026986:	f849 0d74 	str.w	r0, [r9, #-116]!
 802698a:	a80b      	add	r0, sp, #44	; 0x2c
 802698c:	4649      	mov	r1, r9
 802698e:	f7ea f951 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026992:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026994:	fb90 f0fa 	sdiv	r0, r0, sl
 8026998:	eb00 0b03 	add.w	fp, r0, r3
 802699c:	4630      	mov	r0, r6
 802699e:	f7ff fcc7 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269a2:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 80269a6:	017f      	lsls	r7, r7, #5
 80269a8:	f848 0d78 	str.w	r0, [r8, #-120]!
 80269ac:	a80b      	add	r0, sp, #44	; 0x2c
 80269ae:	4641      	mov	r1, r8
 80269b0:	f7ea f940 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269b4:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80269b6:	fb90 f0fa 	sdiv	r0, r0, sl
 80269ba:	4659      	mov	r1, fp
 80269bc:	1a12      	subs	r2, r2, r0
 80269be:	a80e      	add	r0, sp, #56	; 0x38
 80269c0:	f7ff fbf2 	bl	80261a8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80269c4:	f106 0a20 	add.w	sl, r6, #32
 80269c8:	bb67      	cbnz	r7, 8026a24 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 80269ca:	46b3      	mov	fp, r6
 80269cc:	45aa      	cmp	sl, r5
 80269ce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80269d0:	dc33      	bgt.n	8026a3a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 80269d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80269d4:	4650      	mov	r0, sl
 80269d6:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 80269da:	920b      	str	r2, [sp, #44]	; 0x2c
 80269dc:	f7ea fa62 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80269e0:	4641      	mov	r1, r8
 80269e2:	900c      	str	r0, [sp, #48]	; 0x30
 80269e4:	a80b      	add	r0, sp, #44	; 0x2c
 80269e6:	f7ea f925 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80269ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80269ec:	2302      	movs	r3, #2
 80269ee:	fb90 f0f3 	sdiv	r0, r0, r3
 80269f2:	eb00 0b02 	add.w	fp, r0, r2
 80269f6:	4650      	mov	r0, sl
 80269f8:	f7ff fc9a 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80269fc:	4649      	mov	r1, r9
 80269fe:	900d      	str	r0, [sp, #52]	; 0x34
 8026a00:	a80b      	add	r0, sp, #44	; 0x2c
 8026a02:	f7ea f917 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a06:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026a08:	2302      	movs	r3, #2
 8026a0a:	4659      	mov	r1, fp
 8026a0c:	fb90 f0f3 	sdiv	r0, r0, r3
 8026a10:	1a12      	subs	r2, r2, r0
 8026a12:	a80e      	add	r0, sp, #56	; 0x38
 8026a14:	46d3      	mov	fp, sl
 8026a16:	f7ff fc14 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a1a:	44ba      	add	sl, r7
 8026a1c:	e7d6      	b.n	80269cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 8026a1e:	fb93 f3f2 	sdiv	r3, r3, r2
 8026a22:	e768      	b.n	80268f6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 8026a24:	fb9a f2f7 	sdiv	r2, sl, r7
 8026a28:	fb07 a212 	mls	r2, r7, r2, sl
 8026a2c:	1aba      	subs	r2, r7, r2
 8026a2e:	fb92 f1f7 	sdiv	r1, r2, r7
 8026a32:	fb07 2211 	mls	r2, r7, r1, r2
 8026a36:	4492      	add	sl, r2
 8026a38:	e7c7      	b.n	80269ca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 8026a3a:	45ab      	cmp	fp, r5
 8026a3c:	da23      	bge.n	8026a86 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 8026a3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026a40:	4628      	mov	r0, r5
 8026a42:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8026a46:	920b      	str	r2, [sp, #44]	; 0x2c
 8026a48:	f7ea fa2c 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026a4c:	4641      	mov	r1, r8
 8026a4e:	900c      	str	r0, [sp, #48]	; 0x30
 8026a50:	a80b      	add	r0, sp, #44	; 0x2c
 8026a52:	f7ea f8ef 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a56:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026a58:	f04f 0a02 	mov.w	sl, #2
 8026a5c:	fb90 f0fa 	sdiv	r0, r0, sl
 8026a60:	4403      	add	r3, r0
 8026a62:	4628      	mov	r0, r5
 8026a64:	9301      	str	r3, [sp, #4]
 8026a66:	f7ff fc63 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026a6a:	4649      	mov	r1, r9
 8026a6c:	900d      	str	r0, [sp, #52]	; 0x34
 8026a6e:	a80b      	add	r0, sp, #44	; 0x2c
 8026a70:	f7ea f8e0 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026a74:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026a76:	9b01      	ldr	r3, [sp, #4]
 8026a78:	fb90 f0fa 	sdiv	r0, r0, sl
 8026a7c:	4619      	mov	r1, r3
 8026a7e:	1a12      	subs	r2, r2, r0
 8026a80:	a80e      	add	r0, sp, #56	; 0x38
 8026a82:	f7ff fbde 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8026a88:	b99b      	cbnz	r3, 8026ab2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 8026a8a:	1bad      	subs	r5, r5, r6
 8026a8c:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 8026a90:	da04      	bge.n	8026a9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026a92:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 8026a96:	a80e      	add	r0, sp, #56	; 0x38
 8026a98:	f7ff fbd3 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026a9c:	21ff      	movs	r1, #255	; 0xff
 8026a9e:	a80e      	add	r0, sp, #56	; 0x38
 8026aa0:	f7ff fabe 	bl	8026020 <_ZN8touchgfx6Canvas6renderEh>
 8026aa4:	4604      	mov	r4, r0
 8026aa6:	4b8a      	ldr	r3, [pc, #552]	; (8026cd0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 8026aa8:	930e      	str	r3, [sp, #56]	; 0x38
 8026aaa:	a816      	add	r0, sp, #88	; 0x58
 8026aac:	f7eb fd2e 	bl	801250c <_ZN8touchgfx7OutlineD1Ev>
 8026ab0:	e716      	b.n	80268e0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 8026ab2:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 8026ab6:	429a      	cmp	r2, r3
 8026ab8:	f0c0 8107 	bcc.w	8026cca <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 8026abc:	1bab      	subs	r3, r5, r6
 8026abe:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 8026ac2:	9301      	str	r3, [sp, #4]
 8026ac4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026ac8:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8026acc:	da43      	bge.n	8026b56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026ace:	4628      	mov	r0, r5
 8026ad0:	f7ea f9e8 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026ad4:	4649      	mov	r1, r9
 8026ad6:	900d      	str	r0, [sp, #52]	; 0x34
 8026ad8:	a809      	add	r0, sp, #36	; 0x24
 8026ada:	f7ea f8ab 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026ade:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026ae0:	18c3      	adds	r3, r0, r3
 8026ae2:	4628      	mov	r0, r5
 8026ae4:	9303      	str	r3, [sp, #12]
 8026ae6:	f7ff fc23 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026aea:	4649      	mov	r1, r9
 8026aec:	900d      	str	r0, [sp, #52]	; 0x34
 8026aee:	a809      	add	r0, sp, #36	; 0x24
 8026af0:	f7ea f8a0 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026af4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026af6:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 8026afa:	1a1b      	subs	r3, r3, r0
 8026afc:	9302      	str	r3, [sp, #8]
 8026afe:	9204      	str	r2, [sp, #16]
 8026b00:	eb0a 0305 	add.w	r3, sl, r5
 8026b04:	9a04      	ldr	r2, [sp, #16]
 8026b06:	4293      	cmp	r3, r2
 8026b08:	da25      	bge.n	8026b56 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 8026b0a:	4618      	mov	r0, r3
 8026b0c:	9306      	str	r3, [sp, #24]
 8026b0e:	f7ea f9c9 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b12:	4649      	mov	r1, r9
 8026b14:	900d      	str	r0, [sp, #52]	; 0x34
 8026b16:	a80a      	add	r0, sp, #40	; 0x28
 8026b18:	f7ea f88c 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b1c:	9b03      	ldr	r3, [sp, #12]
 8026b1e:	2202      	movs	r2, #2
 8026b20:	fb90 f0f2 	sdiv	r0, r0, r2
 8026b24:	18c3      	adds	r3, r0, r3
 8026b26:	9305      	str	r3, [sp, #20]
 8026b28:	9b06      	ldr	r3, [sp, #24]
 8026b2a:	9207      	str	r2, [sp, #28]
 8026b2c:	4618      	mov	r0, r3
 8026b2e:	f7ff fbff 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b32:	a92a      	add	r1, sp, #168	; 0xa8
 8026b34:	f841 0d78 	str.w	r0, [r1, #-120]!
 8026b38:	a80a      	add	r0, sp, #40	; 0x28
 8026b3a:	f7ea f87b 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b3e:	9b02      	ldr	r3, [sp, #8]
 8026b40:	9a07      	ldr	r2, [sp, #28]
 8026b42:	9905      	ldr	r1, [sp, #20]
 8026b44:	fb90 f2f2 	sdiv	r2, r0, r2
 8026b48:	a80e      	add	r0, sp, #56	; 0x38
 8026b4a:	1a9a      	subs	r2, r3, r2
 8026b4c:	f7ff fb79 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026b50:	9b06      	ldr	r3, [sp, #24]
 8026b52:	4453      	add	r3, sl
 8026b54:	e7d6      	b.n	8026b04 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 8026b56:	45ab      	cmp	fp, r5
 8026b58:	da25      	bge.n	8026ba6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 8026b5a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026b5e:	4628      	mov	r0, r5
 8026b60:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026b64:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b66:	f7ea f99d 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026b6a:	4641      	mov	r1, r8
 8026b6c:	900c      	str	r0, [sp, #48]	; 0x30
 8026b6e:	a80b      	add	r0, sp, #44	; 0x2c
 8026b70:	f7ea f860 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b74:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026b76:	2202      	movs	r2, #2
 8026b78:	fb90 f0f2 	sdiv	r0, r0, r2
 8026b7c:	eb00 0903 	add.w	r9, r0, r3
 8026b80:	4628      	mov	r0, r5
 8026b82:	9202      	str	r2, [sp, #8]
 8026b84:	f7ff fbd4 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026b88:	a92a      	add	r1, sp, #168	; 0xa8
 8026b8a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026b8e:	a80b      	add	r0, sp, #44	; 0x2c
 8026b90:	f7ea f850 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026b94:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026b96:	9a02      	ldr	r2, [sp, #8]
 8026b98:	fb90 f2f2 	sdiv	r2, r0, r2
 8026b9c:	4649      	mov	r1, r9
 8026b9e:	1a9a      	subs	r2, r3, r2
 8026ba0:	a80e      	add	r0, sp, #56	; 0x38
 8026ba2:	f7ff fb4e 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026ba6:	46d9      	mov	r9, fp
 8026ba8:	2502      	movs	r5, #2
 8026baa:	45b1      	cmp	r9, r6
 8026bac:	db25      	blt.n	8026bfa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 8026bae:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026bb2:	4648      	mov	r0, r9
 8026bb4:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026bb8:	930b      	str	r3, [sp, #44]	; 0x2c
 8026bba:	f7ea f973 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026bbe:	4641      	mov	r1, r8
 8026bc0:	900c      	str	r0, [sp, #48]	; 0x30
 8026bc2:	a80b      	add	r0, sp, #44	; 0x2c
 8026bc4:	f7ea f836 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026bc8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026bca:	fb90 f0f5 	sdiv	r0, r0, r5
 8026bce:	eb00 0b03 	add.w	fp, r0, r3
 8026bd2:	4648      	mov	r0, r9
 8026bd4:	f7ff fbac 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026bd8:	a90d      	add	r1, sp, #52	; 0x34
 8026bda:	900d      	str	r0, [sp, #52]	; 0x34
 8026bdc:	a80b      	add	r0, sp, #44	; 0x2c
 8026bde:	f7ea f829 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026be2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026be4:	fb90 f0f5 	sdiv	r0, r0, r5
 8026be8:	4659      	mov	r1, fp
 8026bea:	1a12      	subs	r2, r2, r0
 8026bec:	a80e      	add	r0, sp, #56	; 0x38
 8026bee:	46cb      	mov	fp, r9
 8026bf0:	f7ff fb27 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026bf4:	eba9 0907 	sub.w	r9, r9, r7
 8026bf8:	e7d7      	b.n	8026baa <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 8026bfa:	455e      	cmp	r6, fp
 8026bfc:	da22      	bge.n	8026c44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 8026bfe:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8026c02:	4630      	mov	r0, r6
 8026c04:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8026c08:	930b      	str	r3, [sp, #44]	; 0x2c
 8026c0a:	f7ea f94b 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c0e:	4641      	mov	r1, r8
 8026c10:	900c      	str	r0, [sp, #48]	; 0x30
 8026c12:	a80b      	add	r0, sp, #44	; 0x2c
 8026c14:	f7ea f80e 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c18:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8026c1a:	2502      	movs	r5, #2
 8026c1c:	fb90 f0f5 	sdiv	r0, r0, r5
 8026c20:	4407      	add	r7, r0
 8026c22:	4630      	mov	r0, r6
 8026c24:	f7ff fb84 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c28:	a92a      	add	r1, sp, #168	; 0xa8
 8026c2a:	f841 0d74 	str.w	r0, [r1, #-116]!
 8026c2e:	a80b      	add	r0, sp, #44	; 0x2c
 8026c30:	f7ea f800 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c34:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8026c36:	fb90 f0f5 	sdiv	r0, r0, r5
 8026c3a:	4639      	mov	r1, r7
 8026c3c:	1a12      	subs	r2, r2, r0
 8026c3e:	a80e      	add	r0, sp, #56	; 0x38
 8026c40:	f7ff faff 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026c44:	9b01      	ldr	r3, [sp, #4]
 8026c46:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 8026c4a:	f6bf af27 	bge.w	8026a9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026c4e:	4630      	mov	r0, r6
 8026c50:	f7ea f928 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c54:	ad2a      	add	r5, sp, #168	; 0xa8
 8026c56:	f04f 0b02 	mov.w	fp, #2
 8026c5a:	f845 0d74 	str.w	r0, [r5, #-116]!
 8026c5e:	a809      	add	r0, sp, #36	; 0x24
 8026c60:	4629      	mov	r1, r5
 8026c62:	f7e9 ffe7 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c66:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8026c68:	eb00 0903 	add.w	r9, r0, r3
 8026c6c:	4630      	mov	r0, r6
 8026c6e:	f7ff fb5f 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026c72:	4629      	mov	r1, r5
 8026c74:	900d      	str	r0, [sp, #52]	; 0x34
 8026c76:	a809      	add	r0, sp, #36	; 0x24
 8026c78:	f7e9 ffdc 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8026c7e:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 8026c82:	eba3 0800 	sub.w	r8, r3, r0
 8026c86:	4454      	add	r4, sl
 8026c88:	42a6      	cmp	r6, r4
 8026c8a:	f77f af07 	ble.w	8026a9c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 8026c8e:	4620      	mov	r0, r4
 8026c90:	f7ea f908 	bl	8010ea4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8026c94:	4629      	mov	r1, r5
 8026c96:	900d      	str	r0, [sp, #52]	; 0x34
 8026c98:	a80a      	add	r0, sp, #40	; 0x28
 8026c9a:	f7e9 ffcb 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026c9e:	fb90 f0fb 	sdiv	r0, r0, fp
 8026ca2:	eb00 0709 	add.w	r7, r0, r9
 8026ca6:	4620      	mov	r0, r4
 8026ca8:	f7ff fb42 	bl	8026330 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8026cac:	a90c      	add	r1, sp, #48	; 0x30
 8026cae:	900c      	str	r0, [sp, #48]	; 0x30
 8026cb0:	a80a      	add	r0, sp, #40	; 0x28
 8026cb2:	f7e9 ffbf 	bl	8010c34 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8026cb6:	4639      	mov	r1, r7
 8026cb8:	fb90 f2fb 	sdiv	r2, r0, fp
 8026cbc:	a80e      	add	r0, sp, #56	; 0x38
 8026cbe:	eba8 0202 	sub.w	r2, r8, r2
 8026cc2:	f7ff fabe 	bl	8026242 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8026cc6:	4454      	add	r4, sl
 8026cc8:	e7de      	b.n	8026c88 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 8026cca:	2400      	movs	r4, #0
 8026ccc:	e6eb      	b.n	8026aa6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 8026cce:	bf00      	nop
 8026cd0:	0802e590 	.word	0x0802e590

08026cd4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026cd4:	b570      	push	{r4, r5, r6, lr}
 8026cd6:	790b      	ldrb	r3, [r1, #4]
 8026cd8:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026cdc:	2b00      	cmp	r3, #0
 8026cde:	bf0c      	ite	eq
 8026ce0:	2301      	moveq	r3, #1
 8026ce2:	2300      	movne	r3, #0
 8026ce4:	4604      	mov	r4, r0
 8026ce6:	460e      	mov	r6, r1
 8026ce8:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8026cec:	d109      	bne.n	8026d02 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8026cee:	b14d      	cbz	r5, 8026d04 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8026cf0:	7933      	ldrb	r3, [r6, #4]
 8026cf2:	2b01      	cmp	r3, #1
 8026cf4:	d10c      	bne.n	8026d10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026cf6:	6823      	ldr	r3, [r4, #0]
 8026cf8:	4620      	mov	r0, r4
 8026cfa:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026cfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026d00:	4718      	bx	r3
 8026d02:	b12d      	cbz	r5, 8026d10 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026d04:	6823      	ldr	r3, [r4, #0]
 8026d06:	4620      	mov	r0, r4
 8026d08:	695b      	ldr	r3, [r3, #20]
 8026d0a:	4798      	blx	r3
 8026d0c:	2d00      	cmp	r5, #0
 8026d0e:	d1ef      	bne.n	8026cf0 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026d10:	bd70      	pop	{r4, r5, r6, pc}

08026d12 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 8026d12:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8026d16:	4770      	bx	lr

08026d18 <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 8026d18:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8026d1c:	4770      	bx	lr

08026d1e <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 8026d1e:	6802      	ldr	r2, [r0, #0]
 8026d20:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026d24:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026d26:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026d2a:	4710      	bx	r2

08026d2c <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 8026d2c:	6802      	ldr	r2, [r0, #0]
 8026d2e:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026d32:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026d34:	eef0 0a40 	vmov.f32	s1, s0
 8026d38:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026d3c:	4710      	bx	r2

08026d3e <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 8026d3e:	6802      	ldr	r2, [r0, #0]
 8026d40:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026d44:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8026d46:	eeb0 1a40 	vmov.f32	s2, s0
 8026d4a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026d4e:	4710      	bx	r2

08026d50 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8026d50:	6802      	ldr	r2, [r0, #0]
 8026d52:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026d56:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026d58:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026d5c:	4710      	bx	r2

08026d5e <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8026d5e:	6802      	ldr	r2, [r0, #0]
 8026d60:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8026d64:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026d66:	eef0 0a40 	vmov.f32	s1, s0
 8026d6a:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026d6e:	4710      	bx	r2

08026d70 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8026d70:	6802      	ldr	r2, [r0, #0]
 8026d72:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8026d76:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8026d78:	eeb0 1a40 	vmov.f32	s2, s0
 8026d7c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026d80:	4710      	bx	r2

08026d82 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8026d82:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8026d86:	4770      	bx	lr

08026d88 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 8026d88:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 8026d8c:	4770      	bx	lr

08026d8e <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8026d8e:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8026d92:	4770      	bx	lr

08026d94 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8026d94:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 8026d98:	4770      	bx	lr

08026d9a <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 8026d9a:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8026d9e:	4770      	bx	lr

08026da0 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8026da0:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8026da4:	4770      	bx	lr

08026da6 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8026da6:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 8026daa:	4770      	bx	lr

08026dac <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 8026dac:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8026db0:	4770      	bx	lr

08026db2 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8026db2:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8026db6:	4770      	bx	lr

08026db8 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 8026db8:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 8026dbc:	4770      	bx	lr

08026dbe <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8026dbe:	ee07 2a90 	vmov	s15, r2
 8026dc2:	6803      	ldr	r3, [r0, #0]
 8026dc4:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 8026dc8:	ee07 1a90 	vmov	s15, r1
 8026dcc:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8026dd0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8026dd4:	4718      	bx	r3

08026dd6 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8026dd6:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 8026dda:	4770      	bx	lr

08026ddc <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 8026ddc:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8026de0:	4770      	bx	lr

08026de2 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8026de2:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8026de6:	4770      	bx	lr

08026de8 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 8026de8:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 8026dec:	4770      	bx	lr

08026dee <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 8026dee:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 8026df2:	4770      	bx	lr

08026df4 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 8026df4:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 8026df8:	4770      	bx	lr

08026dfa <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 8026dfa:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 8026dfe:	4770      	bx	lr

08026e00 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 8026e00:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 8026e04:	4770      	bx	lr

08026e06 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 8026e06:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 8026e0a:	4770      	bx	lr

08026e0c <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 8026e0c:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 8026e10:	4770      	bx	lr

08026e12 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 8026e12:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 8026e16:	4770      	bx	lr

08026e18 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 8026e18:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 8026e1c:	4770      	bx	lr

08026e1e <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 8026e1e:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 8026e22:	4770      	bx	lr

08026e24 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 8026e24:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 8026e28:	4770      	bx	lr

08026e2a <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 8026e2a:	b510      	push	{r4, lr}
 8026e2c:	ed2d 8b04 	vpush	{d8-d9}
 8026e30:	6803      	ldr	r3, [r0, #0]
 8026e32:	4604      	mov	r4, r0
 8026e34:	699b      	ldr	r3, [r3, #24]
 8026e36:	eeb0 8a40 	vmov.f32	s16, s0
 8026e3a:	eef0 8a60 	vmov.f32	s17, s1
 8026e3e:	eeb0 9a41 	vmov.f32	s18, s2
 8026e42:	4798      	blx	r3
 8026e44:	6823      	ldr	r3, [r4, #0]
 8026e46:	4620      	mov	r0, r4
 8026e48:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8026e4a:	eeb0 1a49 	vmov.f32	s2, s18
 8026e4e:	eef0 0a68 	vmov.f32	s1, s17
 8026e52:	eeb0 0a48 	vmov.f32	s0, s16
 8026e56:	4798      	blx	r3
 8026e58:	ecbd 8b04 	vpop	{d8-d9}
 8026e5c:	6823      	ldr	r3, [r4, #0]
 8026e5e:	4620      	mov	r0, r4
 8026e60:	699b      	ldr	r3, [r3, #24]
 8026e62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026e66:	4718      	bx	r3

08026e68 <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 8026e68:	b510      	push	{r4, lr}
 8026e6a:	ed2d 8b02 	vpush	{d8}
 8026e6e:	6803      	ldr	r3, [r0, #0]
 8026e70:	4604      	mov	r4, r0
 8026e72:	699b      	ldr	r3, [r3, #24]
 8026e74:	eeb0 8a40 	vmov.f32	s16, s0
 8026e78:	4798      	blx	r3
 8026e7a:	6823      	ldr	r3, [r4, #0]
 8026e7c:	4620      	mov	r0, r4
 8026e7e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8026e82:	eeb0 0a48 	vmov.f32	s0, s16
 8026e86:	4798      	blx	r3
 8026e88:	ecbd 8b02 	vpop	{d8}
 8026e8c:	6823      	ldr	r3, [r4, #0]
 8026e8e:	4620      	mov	r0, r4
 8026e90:	699b      	ldr	r3, [r3, #24]
 8026e92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026e96:	4718      	bx	r3

08026e98 <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 8026e98:	2200      	movs	r2, #0
 8026e9a:	8002      	strh	r2, [r0, #0]
 8026e9c:	8042      	strh	r2, [r0, #2]
 8026e9e:	8082      	strh	r2, [r0, #4]
 8026ea0:	80c2      	strh	r2, [r0, #6]
 8026ea2:	4770      	bx	lr

08026ea4 <_ZN8touchgfx13TextureMapperD1Ev>:
 8026ea4:	4770      	bx	lr

08026ea6 <_ZN8touchgfx13TextureMapperD0Ev>:
 8026ea6:	b510      	push	{r4, lr}
 8026ea8:	2190      	movs	r1, #144	; 0x90
 8026eaa:	4604      	mov	r4, r0
 8026eac:	f001 ff3f 	bl	8028d2e <_ZdlPvj>
 8026eb0:	4620      	mov	r0, r4
 8026eb2:	bd10      	pop	{r4, pc}

08026eb4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8026eb4:	b538      	push	{r3, r4, r5, lr}
 8026eb6:	2500      	movs	r5, #0
 8026eb8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8026ebc:	2301      	movs	r3, #1
 8026ebe:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8026ec2:	4b1f      	ldr	r3, [pc, #124]	; (8026f40 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8026ec4:	8085      	strh	r5, [r0, #4]
 8026ec6:	80c5      	strh	r5, [r0, #6]
 8026ec8:	8105      	strh	r5, [r0, #8]
 8026eca:	8145      	strh	r5, [r0, #10]
 8026ecc:	8185      	strh	r5, [r0, #12]
 8026ece:	81c5      	strh	r5, [r0, #14]
 8026ed0:	8205      	strh	r5, [r0, #16]
 8026ed2:	8245      	strh	r5, [r0, #18]
 8026ed4:	61c5      	str	r5, [r0, #28]
 8026ed6:	8405      	strh	r5, [r0, #32]
 8026ed8:	8445      	strh	r5, [r0, #34]	; 0x22
 8026eda:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8026ede:	6003      	str	r3, [r0, #0]
 8026ee0:	880b      	ldrh	r3, [r1, #0]
 8026ee2:	84c3      	strh	r3, [r0, #38]	; 0x26
 8026ee4:	23ff      	movs	r3, #255	; 0xff
 8026ee6:	4604      	mov	r4, r0
 8026ee8:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8026eec:	f7eb f99f 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8026ef0:	4b14      	ldr	r3, [pc, #80]	; (8026f44 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 8026ef2:	6023      	str	r3, [r4, #0]
 8026ef4:	2300      	movs	r3, #0
 8026ef6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8026efa:	4913      	ldr	r1, [pc, #76]	; (8026f48 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 8026efc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8026efe:	6323      	str	r3, [r4, #48]	; 0x30
 8026f00:	6363      	str	r3, [r4, #52]	; 0x34
 8026f02:	63a3      	str	r3, [r4, #56]	; 0x38
 8026f04:	63e3      	str	r3, [r4, #60]	; 0x3c
 8026f06:	6463      	str	r3, [r4, #68]	; 0x44
 8026f08:	64a3      	str	r3, [r4, #72]	; 0x48
 8026f0a:	6523      	str	r3, [r4, #80]	; 0x50
 8026f0c:	6563      	str	r3, [r4, #84]	; 0x54
 8026f0e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026f10:	6623      	str	r3, [r4, #96]	; 0x60
 8026f12:	66a3      	str	r3, [r4, #104]	; 0x68
 8026f14:	66e3      	str	r3, [r4, #108]	; 0x6c
 8026f16:	6763      	str	r3, [r4, #116]	; 0x74
 8026f18:	67a3      	str	r3, [r4, #120]	; 0x78
 8026f1a:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8026f1e:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 8026f22:	230c      	movs	r3, #12
 8026f24:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8026f28:	6422      	str	r2, [r4, #64]	; 0x40
 8026f2a:	64e1      	str	r1, [r4, #76]	; 0x4c
 8026f2c:	65a1      	str	r1, [r4, #88]	; 0x58
 8026f2e:	6662      	str	r2, [r4, #100]	; 0x64
 8026f30:	6722      	str	r2, [r4, #112]	; 0x70
 8026f32:	67e2      	str	r2, [r4, #124]	; 0x7c
 8026f34:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 8026f38:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 8026f3c:	4620      	mov	r0, r4
 8026f3e:	bd38      	pop	{r3, r4, r5, pc}
 8026f40:	0802e038 	.word	0x0802e038
 8026f44:	0802e61c 	.word	0x0802e61c
 8026f48:	447a0000 	.word	0x447a0000

08026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8026f4c:	b570      	push	{r4, r5, r6, lr}
 8026f4e:	ed2d 8b04 	vpush	{d8-d9}
 8026f52:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 8026f56:	add0      	add	r5, sp, #832	; 0x340
 8026f58:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 8026f5a:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8026f5e:	4604      	mov	r4, r0
 8026f60:	4628      	mov	r0, r5
 8026f62:	f7f1 fa7f 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8026f66:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8026f68:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8026f6c:	4606      	mov	r6, r0
 8026f6e:	4628      	mov	r0, r5
 8026f70:	f7f1 faac 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8026f74:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8026f78:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8026f7c:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8026f7e:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8026f82:	9312      	str	r3, [sp, #72]	; 0x48
 8026f84:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026f88:	1c72      	adds	r2, r6, #1
 8026f8a:	3001      	adds	r0, #1
 8026f8c:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8026f90:	ee07 2a90 	vmov	s15, r2
 8026f94:	ee06 0a90 	vmov	s13, r0
 8026f98:	ee36 6a47 	vsub.f32	s12, s12, s14
 8026f9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8026fa0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8026fa4:	ee77 7a86 	vadd.f32	s15, s15, s12
 8026fa8:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8026fac:	9316      	str	r3, [sp, #88]	; 0x58
 8026fae:	931a      	str	r3, [sp, #104]	; 0x68
 8026fb0:	931e      	str	r3, [sp, #120]	; 0x78
 8026fb2:	2300      	movs	r3, #0
 8026fb4:	9320      	str	r3, [sp, #128]	; 0x80
 8026fb6:	9321      	str	r3, [sp, #132]	; 0x84
 8026fb8:	9322      	str	r3, [sp, #136]	; 0x88
 8026fba:	9324      	str	r3, [sp, #144]	; 0x90
 8026fbc:	9325      	str	r3, [sp, #148]	; 0x94
 8026fbe:	9326      	str	r3, [sp, #152]	; 0x98
 8026fc0:	9328      	str	r3, [sp, #160]	; 0xa0
 8026fc2:	9329      	str	r3, [sp, #164]	; 0xa4
 8026fc4:	932a      	str	r3, [sp, #168]	; 0xa8
 8026fc6:	932c      	str	r3, [sp, #176]	; 0xb0
 8026fc8:	932d      	str	r3, [sp, #180]	; 0xb4
 8026fca:	932e      	str	r3, [sp, #184]	; 0xb8
 8026fcc:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8026fd0:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8026fd4:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8026fd8:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8026fdc:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8026fe0:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8026fe4:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 8026fe8:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 8026fec:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 8026ff0:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 8026ff4:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 8026ff8:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 8026ffc:	a830      	add	r0, sp, #192	; 0xc0
 8026ffe:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 8027002:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 8027006:	f000 fc43 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 802700a:	eeb1 0a49 	vneg.f32	s0, s18
 802700e:	a830      	add	r0, sp, #192	; 0xc0
 8027010:	f000 fd12 	bl	8027a38 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027014:	eeb1 0a68 	vneg.f32	s0, s17
 8027018:	f000 fd1c 	bl	8027a54 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802701c:	eeb1 0a48 	vneg.f32	s0, s16
 8027020:	f000 fd27 	bl	8027a72 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027024:	a840      	add	r0, sp, #256	; 0x100
 8027026:	f000 fc33 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 802702a:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 802702e:	a840      	add	r0, sp, #256	; 0x100
 8027030:	f000 fc86 	bl	8027940 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 8027034:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 8027038:	f000 fcac 	bl	8027994 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 802703c:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 8027040:	f000 fcd1 	bl	80279e6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 8027044:	a850      	add	r0, sp, #320	; 0x140
 8027046:	f000 fc23 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 802704a:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802704e:	a850      	add	r0, sp, #320	; 0x140
 8027050:	f000 fd1e 	bl	8027a90 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8027054:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027058:	f000 fd26 	bl	8027aa8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 802705c:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8027060:	f000 fd2f 	bl	8027ac2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8027064:	a860      	add	r0, sp, #384	; 0x180
 8027066:	f000 fc13 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 802706a:	eeb0 0a49 	vmov.f32	s0, s18
 802706e:	a860      	add	r0, sp, #384	; 0x180
 8027070:	f000 fce2 	bl	8027a38 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8027074:	eeb0 0a68 	vmov.f32	s0, s17
 8027078:	f000 fcec 	bl	8027a54 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 802707c:	eeb0 0a48 	vmov.f32	s0, s16
 8027080:	f000 fcf7 	bl	8027a72 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8027084:	aa50      	add	r2, sp, #320	; 0x140
 8027086:	a960      	add	r1, sp, #384	; 0x180
 8027088:	a8b0      	add	r0, sp, #704	; 0x2c0
 802708a:	f000 fc1b 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802708e:	4628      	mov	r0, r5
 8027090:	aa40      	add	r2, sp, #256	; 0x100
 8027092:	a9b0      	add	r1, sp, #704	; 0x2c0
 8027094:	f000 fc16 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027098:	4629      	mov	r1, r5
 802709a:	aa30      	add	r2, sp, #192	; 0xc0
 802709c:	a870      	add	r0, sp, #448	; 0x1c0
 802709e:	f000 fc11 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80270a2:	a880      	add	r0, sp, #512	; 0x200
 80270a4:	f000 fbf4 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 80270a8:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80270ac:	a880      	add	r0, sp, #512	; 0x200
 80270ae:	eeb1 0a40 	vneg.f32	s0, s0
 80270b2:	f000 fcc1 	bl	8027a38 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80270b6:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80270ba:	a880      	add	r0, sp, #512	; 0x200
 80270bc:	eeb1 0a40 	vneg.f32	s0, s0
 80270c0:	f000 fcc8 	bl	8027a54 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80270c4:	a890      	add	r0, sp, #576	; 0x240
 80270c6:	f000 fbe3 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 80270ca:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 80270ce:	a890      	add	r0, sp, #576	; 0x240
 80270d0:	f000 fc26 	bl	8027920 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 80270d4:	a8a0      	add	r0, sp, #640	; 0x280
 80270d6:	f000 fbdb 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 80270da:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 80270de:	a8a0      	add	r0, sp, #640	; 0x280
 80270e0:	f000 fcaa 	bl	8027a38 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80270e4:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 80270e8:	f000 fcb4 	bl	8027a54 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80270ec:	aa90      	add	r2, sp, #576	; 0x240
 80270ee:	a9a0      	add	r1, sp, #640	; 0x280
 80270f0:	a8b0      	add	r0, sp, #704	; 0x2c0
 80270f2:	f000 fbe7 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80270f6:	4628      	mov	r0, r5
 80270f8:	aa80      	add	r2, sp, #512	; 0x200
 80270fa:	a9b0      	add	r1, sp, #704	; 0x2c0
 80270fc:	f000 fbe2 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8027100:	4629      	mov	r1, r5
 8027102:	aa70      	add	r2, sp, #448	; 0x1c0
 8027104:	4668      	mov	r0, sp
 8027106:	466d      	mov	r5, sp
 8027108:	f000 fbdc 	bl	80278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802710c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 802710e:	ae70      	add	r6, sp, #448	; 0x1c0
 8027110:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027112:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027114:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 8027116:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8027118:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 802711a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 802711e:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8027122:	2500      	movs	r5, #0
 8027124:	0129      	lsls	r1, r5, #4
 8027126:	ab20      	add	r3, sp, #128	; 0x80
 8027128:	185e      	adds	r6, r3, r1
 802712a:	ab10      	add	r3, sp, #64	; 0x40
 802712c:	4419      	add	r1, r3
 802712e:	a870      	add	r0, sp, #448	; 0x1c0
 8027130:	f000 fb7e 	bl	8027830 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 8027134:	3501      	adds	r5, #1
 8027136:	2d04      	cmp	r5, #4
 8027138:	ed86 0a00 	vstr	s0, [r6]
 802713c:	edc6 0a01 	vstr	s1, [r6, #4]
 8027140:	ed86 1a02 	vstr	s2, [r6, #8]
 8027144:	edc6 1a03 	vstr	s3, [r6, #12]
 8027148:	d1ec      	bne.n	8027124 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 802714a:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 802714e:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8027152:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 8027156:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802715a:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 802715e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027162:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 8027166:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802716a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802716e:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8027172:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 8027176:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802717a:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 802717e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027182:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 8027186:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802718a:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 802718e:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8027192:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8027196:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802719a:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 802719e:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 80271a2:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 80271a6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80271aa:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 80271ae:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80271b2:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 80271b6:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 80271ba:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80271be:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80271c2:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 80271c6:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 80271ca:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 80271ce:	ee67 6aa6 	vmul.f32	s13, s15, s13
 80271d2:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 80271d6:	ee86 6a87 	vdiv.f32	s12, s13, s14
 80271da:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 80271de:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 80271e2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80271e6:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80271ea:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80271ee:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80271f2:	ecbd 8b04 	vpop	{d8-d9}
 80271f6:	bd70      	pop	{r4, r5, r6, pc}

080271f8 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80271f8:	b510      	push	{r4, lr}
 80271fa:	4604      	mov	r4, r0
 80271fc:	f7eb f817 	bl	801222e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8027200:	4620      	mov	r0, r4
 8027202:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027206:	f7ff bea1 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802720a <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 802720a:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 802720e:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 8027212:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 8027216:	f7ff be99 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802721a <_ZN8touchgfx13TextureMapper8setScaleEf>:
 802721a:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 802721e:	f7ff be95 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027222 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 8027222:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 8027226:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 802722a:	f7ff be8f 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0802722e <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 802722e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027232:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027236:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802723a:	bfd8      	it	le
 802723c:	eeb0 0a67 	vmovle.f32	s0, s15
 8027240:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 8027244:	f7ff be82 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027248 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 8027248:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 802724c:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8027250:	f7ff be7c 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027254 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8027254:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027258:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802725c:	f7ff be76 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027260 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8027260:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8027264:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8027268:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 802726c:	f7ff be6e 	b.w	8026f4c <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08027270 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8027270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027274:	ed2d 8b04 	vpush	{d8-d9}
 8027278:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 802727c:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8027280:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8027284:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 8027288:	eeb4 8ae9 	vcmpe.f32	s16, s19
 802728c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027290:	bf54      	ite	pl
 8027292:	eeb0 0a69 	vmovpl.f32	s0, s19
 8027296:	eeb0 0a48 	vmovmi.f32	s0, s16
 802729a:	eeb4 9ac0 	vcmpe.f32	s18, s0
 802729e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272a2:	bfd8      	it	le
 80272a4:	eeb0 0a49 	vmovle.f32	s0, s18
 80272a8:	eef4 8ac0 	vcmpe.f32	s17, s0
 80272ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272b0:	bfd8      	it	le
 80272b2:	eeb0 0a68 	vmovle.f32	s0, s17
 80272b6:	460c      	mov	r4, r1
 80272b8:	4607      	mov	r7, r0
 80272ba:	f001 fe4f 	bl	8028f5c <floorf>
 80272be:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80272c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272c6:	bf58      	it	pl
 80272c8:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 80272cc:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80272d0:	bf56      	itet	pl
 80272d2:	ee10 3a10 	vmovpl	r3, s0
 80272d6:	2600      	movmi	r6, #0
 80272d8:	b21e      	sxthpl	r6, r3
 80272da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272de:	bfd8      	it	le
 80272e0:	eeb0 8a69 	vmovle.f32	s16, s19
 80272e4:	eeb4 9ac8 	vcmpe.f32	s18, s16
 80272e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272ec:	bf58      	it	pl
 80272ee:	eeb0 8a49 	vmovpl.f32	s16, s18
 80272f2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80272f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80272fa:	bf54      	ite	pl
 80272fc:	eeb0 0a68 	vmovpl.f32	s0, s17
 8027300:	eeb0 0a48 	vmovmi.f32	s0, s16
 8027304:	f001 fde8 	bl	8028ed8 <ceilf>
 8027308:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 802730c:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 8027310:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 8027314:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 8027318:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 802731c:	ee07 8a90 	vmov	s15, r8
 8027320:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8027324:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8027328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802732c:	bfd8      	it	le
 802732e:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 8027332:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027336:	bfdc      	itt	le
 8027338:	ee10 3a10 	vmovle	r3, s0
 802733c:	fa0f f883 	sxthle.w	r8, r3
 8027340:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027344:	bf54      	ite	pl
 8027346:	eeb0 0a69 	vmovpl.f32	s0, s19
 802734a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802734e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8027352:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027356:	bfd8      	it	le
 8027358:	eeb0 0a49 	vmovle.f32	s0, s18
 802735c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8027360:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027364:	bfd8      	it	le
 8027366:	eeb0 0a68 	vmovle.f32	s0, s17
 802736a:	f001 fdf7 	bl	8028f5c <floorf>
 802736e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8027372:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027376:	bf58      	it	pl
 8027378:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 802737c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8027380:	bf56      	itet	pl
 8027382:	ee10 3a10 	vmovpl	r3, s0
 8027386:	2500      	movmi	r5, #0
 8027388:	b21d      	sxthpl	r5, r3
 802738a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802738e:	bfd8      	it	le
 8027390:	eeb0 8a69 	vmovle.f32	s16, s19
 8027394:	eeb4 9ac8 	vcmpe.f32	s18, s16
 8027398:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802739c:	bf58      	it	pl
 802739e:	eeb0 8a49 	vmovpl.f32	s16, s18
 80273a2:	eef4 8ac8 	vcmpe.f32	s17, s16
 80273a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80273aa:	bf54      	ite	pl
 80273ac:	eeb0 0a68 	vmovpl.f32	s0, s17
 80273b0:	eeb0 0a48 	vmovmi.f32	s0, s16
 80273b4:	f001 fd90 	bl	8028ed8 <ceilf>
 80273b8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80273bc:	803e      	strh	r6, [r7, #0]
 80273be:	ee07 3a90 	vmov	s15, r3
 80273c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80273c6:	807d      	strh	r5, [r7, #2]
 80273c8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80273cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80273d0:	bfd8      	it	le
 80273d2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80273d6:	eba8 0606 	sub.w	r6, r8, r6
 80273da:	bfdc      	itt	le
 80273dc:	ee10 3a10 	vmovle	r3, s0
 80273e0:	b21b      	sxthle	r3, r3
 80273e2:	1b5d      	subs	r5, r3, r5
 80273e4:	80be      	strh	r6, [r7, #4]
 80273e6:	80fd      	strh	r5, [r7, #6]
 80273e8:	ecbd 8b04 	vpop	{d8-d9}
 80273ec:	4638      	mov	r0, r7
 80273ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080273f2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80273f2:	b513      	push	{r0, r1, r4, lr}
 80273f4:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80273f8:	4604      	mov	r4, r0
 80273fa:	b143      	cbz	r3, 802740e <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80273fc:	4601      	mov	r1, r0
 80273fe:	4668      	mov	r0, sp
 8027400:	f7ff ff36 	bl	8027270 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 8027404:	6823      	ldr	r3, [r4, #0]
 8027406:	4669      	mov	r1, sp
 8027408:	691b      	ldr	r3, [r3, #16]
 802740a:	4620      	mov	r0, r4
 802740c:	4798      	blx	r3
 802740e:	b002      	add	sp, #8
 8027410:	bd10      	pop	{r4, pc}

08027412 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 8027412:	4603      	mov	r3, r0
 8027414:	3026      	adds	r0, #38	; 0x26
 8027416:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 802741a:	b90b      	cbnz	r3, 8027420 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 802741c:	f7ee be38 	b.w	8016090 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8027420:	f7ee be46 	b.w	80160b0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

08027424 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 8027424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027428:	ed2d 8b04 	vpush	{d8-d9}
 802742c:	4604      	mov	r4, r0
 802742e:	469b      	mov	fp, r3
 8027430:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 8027434:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8027438:	f9b1 6000 	ldrsh.w	r6, [r1]
 802743c:	8888      	ldrh	r0, [r1, #4]
 802743e:	b0b3      	sub	sp, #204	; 0xcc
 8027440:	4430      	add	r0, r6
 8027442:	b280      	uxth	r0, r0
 8027444:	9206      	str	r2, [sp, #24]
 8027446:	fa0f fe80 	sxth.w	lr, r0
 802744a:	2200      	movs	r2, #0
 802744c:	4596      	cmp	lr, r2
 802744e:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8027452:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 8027456:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802745a:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 802745c:	9211      	str	r2, [sp, #68]	; 0x44
 802745e:	f340 8129 	ble.w	80276b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027462:	45b4      	cmp	ip, r6
 8027464:	f340 8126 	ble.w	80276b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027468:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 802746c:	88ca      	ldrh	r2, [r1, #6]
 802746e:	442a      	add	r2, r5
 8027470:	b292      	uxth	r2, r2
 8027472:	b211      	sxth	r1, r2
 8027474:	2900      	cmp	r1, #0
 8027476:	f340 811d 	ble.w	80276b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802747a:	42ab      	cmp	r3, r5
 802747c:	f340 811a 	ble.w	80276b4 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8027480:	45f4      	cmp	ip, lr
 8027482:	bfb8      	it	lt
 8027484:	fa1f f08c 	uxthlt.w	r0, ip
 8027488:	428b      	cmp	r3, r1
 802748a:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 802748e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8027492:	bfb8      	it	lt
 8027494:	b29a      	uxthlt	r2, r3
 8027496:	1b80      	subs	r0, r0, r6
 8027498:	1b52      	subs	r2, r2, r5
 802749a:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 802749e:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 80274a2:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80274a6:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 80274aa:	ab11      	add	r3, sp, #68	; 0x44
 80274ac:	e893 0003 	ldmia.w	r3, {r0, r1}
 80274b0:	6822      	ldr	r2, [r4, #0]
 80274b2:	9307      	str	r3, [sp, #28]
 80274b4:	ad13      	add	r5, sp, #76	; 0x4c
 80274b6:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 80274b8:	e885 0003 	stmia.w	r5, {r0, r1}
 80274bc:	4629      	mov	r1, r5
 80274be:	4620      	mov	r0, r4
 80274c0:	4790      	blx	r2
 80274c2:	4621      	mov	r1, r4
 80274c4:	a815      	add	r0, sp, #84	; 0x54
 80274c6:	f7ee fd3f 	bl	8015f48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80274ca:	a815      	add	r0, sp, #84	; 0x54
 80274cc:	f7ed fa04 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80274d0:	9b07      	ldr	r3, [sp, #28]
 80274d2:	1d26      	adds	r6, r4, #4
 80274d4:	4618      	mov	r0, r3
 80274d6:	4631      	mov	r1, r6
 80274d8:	f7ed fa42 	bl	8014960 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80274dc:	4628      	mov	r0, r5
 80274de:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80274e2:	f7ed f9f9 	bl	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80274e6:	4628      	mov	r0, r5
 80274e8:	f7f1 f8a8 	bl	801863c <_ZNK8touchgfx6Bitmap7getDataEv>
 80274ec:	9007      	str	r0, [sp, #28]
 80274ee:	2800      	cmp	r0, #0
 80274f0:	f000 80db 	beq.w	80276aa <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80274f4:	f8db 2000 	ldr.w	r2, [fp]
 80274f8:	9209      	str	r2, [sp, #36]	; 0x24
 80274fa:	f8db 2004 	ldr.w	r2, [fp, #4]
 80274fe:	920a      	str	r2, [sp, #40]	; 0x28
 8027500:	f8db 2008 	ldr.w	r2, [fp, #8]
 8027504:	920b      	str	r2, [sp, #44]	; 0x2c
 8027506:	f8db 200c 	ldr.w	r2, [fp, #12]
 802750a:	920c      	str	r2, [sp, #48]	; 0x30
 802750c:	f8da 2000 	ldr.w	r2, [sl]
 8027510:	920d      	str	r2, [sp, #52]	; 0x34
 8027512:	f8da 2004 	ldr.w	r2, [sl, #4]
 8027516:	920e      	str	r2, [sp, #56]	; 0x38
 8027518:	f8da 2008 	ldr.w	r2, [sl, #8]
 802751c:	920f      	str	r2, [sp, #60]	; 0x3c
 802751e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8027522:	9210      	str	r2, [sp, #64]	; 0x40
 8027524:	a90d      	add	r1, sp, #52	; 0x34
 8027526:	4632      	mov	r2, r6
 8027528:	a809      	add	r0, sp, #36	; 0x24
 802752a:	f7ed f9fd 	bl	8014928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802752e:	4632      	mov	r2, r6
 8027530:	a90e      	add	r1, sp, #56	; 0x38
 8027532:	a80a      	add	r0, sp, #40	; 0x28
 8027534:	f7ed f9f8 	bl	8014928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027538:	4632      	mov	r2, r6
 802753a:	a90f      	add	r1, sp, #60	; 0x3c
 802753c:	a80b      	add	r0, sp, #44	; 0x2c
 802753e:	f7ed f9f3 	bl	8014928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8027542:	4632      	mov	r2, r6
 8027544:	a910      	add	r1, sp, #64	; 0x40
 8027546:	a80c      	add	r0, sp, #48	; 0x30
 8027548:	f7ed f9ee 	bl	8014928 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 802754c:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8027550:	edd7 4a00 	vldr	s9, [r7]
 8027554:	edd7 5a01 	vldr	s11, [r7, #4]
 8027558:	ed98 4a00 	vldr	s8, [r8]
 802755c:	ed98 5a01 	vldr	s10, [r8, #4]
 8027560:	ed99 9a00 	vldr	s18, [r9]
 8027564:	ed99 8a01 	vldr	s16, [r9, #4]
 8027568:	edd9 8a02 	vldr	s17, [r9, #8]
 802756c:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8027570:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8027574:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8027578:	eef0 6a67 	vmov.f32	s13, s15
 802757c:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8027580:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8027584:	eeb0 7a67 	vmov.f32	s14, s15
 8027588:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 802758c:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8027590:	eeb0 6a67 	vmov.f32	s12, s15
 8027594:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8027598:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 802759c:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 80275a0:	ee16 6a10 	vmov	r6, s12
 80275a4:	eeb0 6a67 	vmov.f32	s12, s15
 80275a8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80275ac:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80275b0:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80275b4:	f8d8 b008 	ldr.w	fp, [r8, #8]
 80275b8:	68ff      	ldr	r7, [r7, #12]
 80275ba:	9624      	str	r6, [sp, #144]	; 0x90
 80275bc:	ee16 0a10 	vmov	r0, s12
 80275c0:	eeb0 6a67 	vmov.f32	s12, s15
 80275c4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80275c8:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80275cc:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 80275d0:	ee16 1a10 	vmov	r1, s12
 80275d4:	eeb0 6a67 	vmov.f32	s12, s15
 80275d8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80275dc:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80275e0:	ee16 2a10 	vmov	r2, s12
 80275e4:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80275e8:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80275ec:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80275f0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80275f4:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80275f8:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80275fc:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8027600:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8027604:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8027608:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 802760c:	922d      	str	r2, [sp, #180]	; 0xb4
 802760e:	4a2b      	ldr	r2, [pc, #172]	; (80276bc <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8027610:	9b06      	ldr	r3, [sp, #24]
 8027612:	8812      	ldrh	r2, [r2, #0]
 8027614:	9317      	str	r3, [sp, #92]	; 0x5c
 8027616:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 802761a:	9b07      	ldr	r3, [sp, #28]
 802761c:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8027620:	4628      	mov	r0, r5
 8027622:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8027626:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 802762a:	9218      	str	r2, [sp, #96]	; 0x60
 802762c:	9319      	str	r3, [sp, #100]	; 0x64
 802762e:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8027632:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8027636:	9731      	str	r7, [sp, #196]	; 0xc4
 8027638:	f7f1 f830 	bl	801869c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 802763c:	901a      	str	r0, [sp, #104]	; 0x68
 802763e:	4628      	mov	r0, r5
 8027640:	f7f0 ff10 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027644:	901b      	str	r0, [sp, #108]	; 0x6c
 8027646:	4628      	mov	r0, r5
 8027648:	f7f0 ff40 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 802764c:	901c      	str	r0, [sp, #112]	; 0x70
 802764e:	4628      	mov	r0, r5
 8027650:	f7f0 ff08 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8027654:	eeb4 9a48 	vcmp.f32	s18, s16
 8027658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802765c:	901d      	str	r0, [sp, #116]	; 0x74
 802765e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8027662:	d107      	bne.n	8027674 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8027664:	eeb4 8a68 	vcmp.f32	s16, s17
 8027668:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802766c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8027670:	bf08      	it	eq
 8027672:	461e      	moveq	r6, r3
 8027674:	4b12      	ldr	r3, [pc, #72]	; (80276c0 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8027676:	681b      	ldr	r3, [r3, #0]
 8027678:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 802767c:	b10a      	cbz	r2, 8027682 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 802767e:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8027680:	b905      	cbnz	r5, 8027684 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8027682:	689d      	ldr	r5, [r3, #8]
 8027684:	682b      	ldr	r3, [r5, #0]
 8027686:	4620      	mov	r0, r4
 8027688:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 802768a:	f7ff fec2 	bl	8027412 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 802768e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8027692:	9604      	str	r6, [sp, #16]
 8027694:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8027698:	ab13      	add	r3, sp, #76	; 0x4c
 802769a:	9301      	str	r3, [sp, #4]
 802769c:	ab15      	add	r3, sp, #84	; 0x54
 802769e:	9300      	str	r3, [sp, #0]
 80276a0:	aa1e      	add	r2, sp, #120	; 0x78
 80276a2:	ab19      	add	r3, sp, #100	; 0x64
 80276a4:	a917      	add	r1, sp, #92	; 0x5c
 80276a6:	4628      	mov	r0, r5
 80276a8:	47b8      	blx	r7
 80276aa:	b033      	add	sp, #204	; 0xcc
 80276ac:	ecbd 8b04 	vpop	{d8-d9}
 80276b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80276b4:	2300      	movs	r3, #0
 80276b6:	9312      	str	r3, [sp, #72]	; 0x48
 80276b8:	e6f7      	b.n	80274aa <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 80276ba:	bf00      	nop
 80276bc:	20012dae 	.word	0x20012dae
 80276c0:	20012db4 	.word	0x20012db4

080276c4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 80276c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80276c8:	ed2d 8b02 	vpush	{d8}
 80276cc:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80276d0:	b098      	sub	sp, #96	; 0x60
 80276d2:	4604      	mov	r4, r0
 80276d4:	4688      	mov	r8, r1
 80276d6:	2b00      	cmp	r3, #0
 80276d8:	d077      	beq.n	80277ca <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 80276da:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80276de:	4628      	mov	r0, r5
 80276e0:	f7f0 fec0 	bl	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80276e4:	ee07 0a90 	vmov	s15, r0
 80276e8:	4628      	mov	r0, r5
 80276ea:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 80276ee:	f7f0 feed 	bl	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv>
 80276f2:	4b4e      	ldr	r3, [pc, #312]	; (802782c <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 80276f4:	781b      	ldrb	r3, [r3, #0]
 80276f6:	ee07 0a90 	vmov	s15, r0
 80276fa:	2b01      	cmp	r3, #1
 80276fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8027700:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8027704:	d066      	beq.n	80277d4 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8027706:	eeb0 6a47 	vmov.f32	s12, s14
 802770a:	ee17 3a10 	vmov	r3, s14
 802770e:	eeb0 4a48 	vmov.f32	s8, s16
 8027712:	eeb0 7a48 	vmov.f32	s14, s16
 8027716:	eef0 4a67 	vmov.f32	s9, s15
 802771a:	eeb0 8a67 	vmov.f32	s16, s15
 802771e:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8027722:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8027726:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 802772a:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 802772e:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8027732:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8027736:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8027738:	6e66      	ldr	r6, [r4, #100]	; 0x64
 802773a:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 802773c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8027740:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8027744:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027748:	ee73 1a65 	vsub.f32	s3, s6, s11
 802774c:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8027750:	ee32 1a45 	vsub.f32	s2, s4, s10
 8027754:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8027758:	ee73 1ae5 	vsub.f32	s3, s7, s11
 802775c:	eee1 6a21 	vfma.f32	s13, s2, s3
 8027760:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8027764:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027768:	dd3d      	ble.n	80277e6 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 802776a:	ed8d 5a04 	vstr	s10, [sp, #16]
 802776e:	ed8d 2a05 	vstr	s4, [sp, #20]
 8027772:	edcd 2a06 	vstr	s5, [sp, #24]
 8027776:	f8cd c01c 	str.w	ip, [sp, #28]
 802777a:	edcd 5a08 	vstr	s11, [sp, #32]
 802777e:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8027782:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8027786:	970b      	str	r7, [sp, #44]	; 0x2c
 8027788:	960c      	str	r6, [sp, #48]	; 0x30
 802778a:	950d      	str	r5, [sp, #52]	; 0x34
 802778c:	920e      	str	r2, [sp, #56]	; 0x38
 802778e:	900f      	str	r0, [sp, #60]	; 0x3c
 8027790:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8027794:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8027798:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 802779c:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 80277a0:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 80277a4:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 80277a8:	9316      	str	r3, [sp, #88]	; 0x58
 80277aa:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 80277ae:	ab14      	add	r3, sp, #80	; 0x50
 80277b0:	9303      	str	r3, [sp, #12]
 80277b2:	ab10      	add	r3, sp, #64	; 0x40
 80277b4:	9302      	str	r3, [sp, #8]
 80277b6:	ab0c      	add	r3, sp, #48	; 0x30
 80277b8:	9301      	str	r3, [sp, #4]
 80277ba:	ab08      	add	r3, sp, #32
 80277bc:	9300      	str	r3, [sp, #0]
 80277be:	2200      	movs	r2, #0
 80277c0:	ab04      	add	r3, sp, #16
 80277c2:	4641      	mov	r1, r8
 80277c4:	4620      	mov	r0, r4
 80277c6:	f7ff fe2d 	bl	8027424 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 80277ca:	b018      	add	sp, #96	; 0x60
 80277cc:	ecbd 8b02 	vpop	{d8}
 80277d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80277d4:	eeb0 6a48 	vmov.f32	s12, s16
 80277d8:	eef0 4a47 	vmov.f32	s9, s14
 80277dc:	ee17 3a90 	vmov	r3, s15
 80277e0:	eeb0 4a67 	vmov.f32	s8, s15
 80277e4:	e79b      	b.n	802771e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 80277e6:	ed8d 5a05 	vstr	s10, [sp, #20]
 80277ea:	ed8d 2a04 	vstr	s4, [sp, #16]
 80277ee:	f8cd c018 	str.w	ip, [sp, #24]
 80277f2:	edcd 2a07 	vstr	s5, [sp, #28]
 80277f6:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 80277fa:	ed8d 3a08 	vstr	s6, [sp, #32]
 80277fe:	970a      	str	r7, [sp, #40]	; 0x28
 8027800:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8027804:	960d      	str	r6, [sp, #52]	; 0x34
 8027806:	950c      	str	r5, [sp, #48]	; 0x30
 8027808:	900e      	str	r0, [sp, #56]	; 0x38
 802780a:	920f      	str	r2, [sp, #60]	; 0x3c
 802780c:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8027810:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8027814:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8027818:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802781c:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8027820:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8027824:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8027828:	9317      	str	r3, [sp, #92]	; 0x5c
 802782a:	e7c0      	b.n	80277ae <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 802782c:	20012dac 	.word	0x20012dac

08027830 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8027830:	b5f0      	push	{r4, r5, r6, r7, lr}
 8027832:	b08d      	sub	sp, #52	; 0x34
 8027834:	2300      	movs	r3, #0
 8027836:	9304      	str	r3, [sp, #16]
 8027838:	9305      	str	r3, [sp, #20]
 802783a:	9306      	str	r3, [sp, #24]
 802783c:	aa04      	add	r2, sp, #16
 802783e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8027842:	9307      	str	r3, [sp, #28]
 8027844:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8027848:	4613      	mov	r3, r2
 802784a:	f101 0710 	add.w	r7, r1, #16
 802784e:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802788c <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8027852:	460c      	mov	r4, r1
 8027854:	4605      	mov	r5, r0
 8027856:	ecb4 7a01 	vldmia	r4!, {s14}
 802785a:	ecf5 6a01 	vldmia	r5!, {s13}
 802785e:	42bc      	cmp	r4, r7
 8027860:	eee6 7a87 	vfma.f32	s15, s13, s14
 8027864:	d1f7      	bne.n	8027856 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8027866:	3010      	adds	r0, #16
 8027868:	42b0      	cmp	r0, r6
 802786a:	ece2 7a01 	vstmia	r2!, {s15}
 802786e:	d1ee      	bne.n	802784e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8027870:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8027872:	ac0c      	add	r4, sp, #48	; 0x30
 8027874:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8027878:	ed9d 0a08 	vldr	s0, [sp, #32]
 802787c:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8027880:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8027884:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8027888:	b00d      	add	sp, #52	; 0x34
 802788a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802788c:	00000000 	.word	0x00000000

08027890 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8027890:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 80278c0 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8027894:	2300      	movs	r3, #0
 8027896:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802789a:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 802789e:	2200      	movs	r2, #0
 80278a0:	4293      	cmp	r3, r2
 80278a2:	f102 0201 	add.w	r2, r2, #1
 80278a6:	bf14      	ite	ne
 80278a8:	eef0 6a47 	vmovne.f32	s13, s14
 80278ac:	eef0 6a67 	vmoveq.f32	s13, s15
 80278b0:	2a04      	cmp	r2, #4
 80278b2:	ece1 6a01 	vstmia	r1!, {s13}
 80278b6:	d1f3      	bne.n	80278a0 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 80278b8:	3301      	adds	r3, #1
 80278ba:	2b04      	cmp	r3, #4
 80278bc:	d1ed      	bne.n	802789a <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 80278be:	4770      	bx	lr
 80278c0:	00000000 	.word	0x00000000

080278c4 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 80278c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80278c8:	460c      	mov	r4, r1
 80278ca:	4605      	mov	r5, r0
 80278cc:	4690      	mov	r8, r2
 80278ce:	f7ff ffdf 	bl	8027890 <_ZN8touchgfx9Matrix4x4C1Ev>
 80278d2:	4628      	mov	r0, r5
 80278d4:	4621      	mov	r1, r4
 80278d6:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 80278da:	2300      	movs	r3, #0
 80278dc:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802791c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 80278e0:	eb08 0603 	add.w	r6, r8, r3
 80278e4:	460f      	mov	r7, r1
 80278e6:	2400      	movs	r4, #0
 80278e8:	4632      	mov	r2, r6
 80278ea:	ecf7 6a01 	vldmia	r7!, {s13}
 80278ee:	ed92 7a00 	vldr	s14, [r2]
 80278f2:	3401      	adds	r4, #1
 80278f4:	2c04      	cmp	r4, #4
 80278f6:	f106 0610 	add.w	r6, r6, #16
 80278fa:	eee6 7a87 	vfma.f32	s15, s13, s14
 80278fe:	d1f3      	bne.n	80278e8 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8027900:	18c2      	adds	r2, r0, r3
 8027902:	3304      	adds	r3, #4
 8027904:	2b10      	cmp	r3, #16
 8027906:	edc2 7a00 	vstr	s15, [r2]
 802790a:	d1e7      	bne.n	80278dc <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 802790c:	3110      	adds	r1, #16
 802790e:	4561      	cmp	r1, ip
 8027910:	f100 0010 	add.w	r0, r0, #16
 8027914:	d1e1      	bne.n	80278da <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8027916:	4628      	mov	r0, r5
 8027918:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802791c:	00000000 	.word	0x00000000

08027920 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8027920:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8027924:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8027928:	f100 0320 	add.w	r3, r0, #32
 802792c:	3030      	adds	r0, #48	; 0x30
 802792e:	ecf3 7a01 	vldmia	r3!, {s15}
 8027932:	ee60 7a27 	vmul.f32	s15, s0, s15
 8027936:	4283      	cmp	r3, r0
 8027938:	edc3 7a03 	vstr	s15, [r3, #12]
 802793c:	d1f7      	bne.n	802792e <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 802793e:	4770      	bx	lr

08027940 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8027940:	b510      	push	{r4, lr}
 8027942:	ed2d 8b02 	vpush	{d8}
 8027946:	4604      	mov	r4, r0
 8027948:	eef0 8a40 	vmov.f32	s17, s0
 802794c:	f001 fa7a 	bl	8028e44 <sinf>
 8027950:	eeb0 8a40 	vmov.f32	s16, s0
 8027954:	eeb0 0a68 	vmov.f32	s0, s17
 8027958:	f001 fa30 	bl	8028dbc <cosf>
 802795c:	f104 0310 	add.w	r3, r4, #16
 8027960:	f104 0220 	add.w	r2, r4, #32
 8027964:	eeb1 6a48 	vneg.f32	s12, s16
 8027968:	edd3 7a04 	vldr	s15, [r3, #16]
 802796c:	edd3 6a00 	vldr	s13, [r3]
 8027970:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027974:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027978:	eea6 7a80 	vfma.f32	s14, s13, s0
 802797c:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027980:	eca3 7a01 	vstmia	r3!, {s14}
 8027984:	429a      	cmp	r2, r3
 8027986:	edc3 7a03 	vstr	s15, [r3, #12]
 802798a:	d1ed      	bne.n	8027968 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 802798c:	ecbd 8b02 	vpop	{d8}
 8027990:	4620      	mov	r0, r4
 8027992:	bd10      	pop	{r4, pc}

08027994 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8027994:	b510      	push	{r4, lr}
 8027996:	ed2d 8b02 	vpush	{d8}
 802799a:	4604      	mov	r4, r0
 802799c:	eef0 8a40 	vmov.f32	s17, s0
 80279a0:	f001 fa50 	bl	8028e44 <sinf>
 80279a4:	eeb0 8a40 	vmov.f32	s16, s0
 80279a8:	eeb0 0a68 	vmov.f32	s0, s17
 80279ac:	f001 fa06 	bl	8028dbc <cosf>
 80279b0:	4623      	mov	r3, r4
 80279b2:	f104 0210 	add.w	r2, r4, #16
 80279b6:	eeb1 6a48 	vneg.f32	s12, s16
 80279ba:	edd3 7a08 	vldr	s15, [r3, #32]
 80279be:	edd3 6a00 	vldr	s13, [r3]
 80279c2:	ee27 7a88 	vmul.f32	s14, s15, s16
 80279c6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80279ca:	eea6 7a80 	vfma.f32	s14, s13, s0
 80279ce:	eee6 7a26 	vfma.f32	s15, s12, s13
 80279d2:	eca3 7a01 	vstmia	r3!, {s14}
 80279d6:	429a      	cmp	r2, r3
 80279d8:	edc3 7a07 	vstr	s15, [r3, #28]
 80279dc:	d1ed      	bne.n	80279ba <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 80279de:	ecbd 8b02 	vpop	{d8}
 80279e2:	4620      	mov	r0, r4
 80279e4:	bd10      	pop	{r4, pc}

080279e6 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 80279e6:	b510      	push	{r4, lr}
 80279e8:	ed2d 8b02 	vpush	{d8}
 80279ec:	4604      	mov	r4, r0
 80279ee:	eef0 8a40 	vmov.f32	s17, s0
 80279f2:	f001 fa27 	bl	8028e44 <sinf>
 80279f6:	eeb0 8a40 	vmov.f32	s16, s0
 80279fa:	eeb0 0a68 	vmov.f32	s0, s17
 80279fe:	f001 f9dd 	bl	8028dbc <cosf>
 8027a02:	4623      	mov	r3, r4
 8027a04:	f104 0210 	add.w	r2, r4, #16
 8027a08:	eeb1 6a48 	vneg.f32	s12, s16
 8027a0c:	edd3 7a04 	vldr	s15, [r3, #16]
 8027a10:	edd3 6a00 	vldr	s13, [r3]
 8027a14:	ee26 7a27 	vmul.f32	s14, s12, s15
 8027a18:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a1c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8027a20:	eee6 7a88 	vfma.f32	s15, s13, s16
 8027a24:	eca3 7a01 	vstmia	r3!, {s14}
 8027a28:	429a      	cmp	r2, r3
 8027a2a:	edc3 7a03 	vstr	s15, [r3, #12]
 8027a2e:	d1ed      	bne.n	8027a0c <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8027a30:	ecbd 8b02 	vpop	{d8}
 8027a34:	4620      	mov	r0, r4
 8027a36:	bd10      	pop	{r4, pc}

08027a38 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8027a38:	4603      	mov	r3, r0
 8027a3a:	f100 0210 	add.w	r2, r0, #16
 8027a3e:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8027a42:	edd3 7a00 	vldr	s15, [r3]
 8027a46:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027a4a:	ece3 7a01 	vstmia	r3!, {s15}
 8027a4e:	4293      	cmp	r3, r2
 8027a50:	d1f5      	bne.n	8027a3e <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8027a52:	4770      	bx	lr

08027a54 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8027a54:	f100 0310 	add.w	r3, r0, #16
 8027a58:	f100 0220 	add.w	r2, r0, #32
 8027a5c:	ed93 7a08 	vldr	s14, [r3, #32]
 8027a60:	edd3 7a00 	vldr	s15, [r3]
 8027a64:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027a68:	ece3 7a01 	vstmia	r3!, {s15}
 8027a6c:	4293      	cmp	r3, r2
 8027a6e:	d1f5      	bne.n	8027a5c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8027a70:	4770      	bx	lr

08027a72 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8027a72:	f100 0320 	add.w	r3, r0, #32
 8027a76:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027a7a:	ed93 7a04 	vldr	s14, [r3, #16]
 8027a7e:	edd3 7a00 	vldr	s15, [r3]
 8027a82:	eee7 7a00 	vfma.f32	s15, s14, s0
 8027a86:	ece3 7a01 	vstmia	r3!, {s15}
 8027a8a:	4293      	cmp	r3, r2
 8027a8c:	d1f5      	bne.n	8027a7a <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8027a8e:	4770      	bx	lr

08027a90 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8027a90:	4603      	mov	r3, r0
 8027a92:	f100 0210 	add.w	r2, r0, #16
 8027a96:	edd3 7a00 	vldr	s15, [r3]
 8027a9a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027a9e:	ece3 7a01 	vstmia	r3!, {s15}
 8027aa2:	4293      	cmp	r3, r2
 8027aa4:	d1f7      	bne.n	8027a96 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8027aa6:	4770      	bx	lr

08027aa8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8027aa8:	f100 0310 	add.w	r3, r0, #16
 8027aac:	f100 0220 	add.w	r2, r0, #32
 8027ab0:	edd3 7a00 	vldr	s15, [r3]
 8027ab4:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027ab8:	ece3 7a01 	vstmia	r3!, {s15}
 8027abc:	4293      	cmp	r3, r2
 8027abe:	d1f7      	bne.n	8027ab0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8027ac0:	4770      	bx	lr

08027ac2 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8027ac2:	f100 0320 	add.w	r3, r0, #32
 8027ac6:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8027aca:	edd3 7a00 	vldr	s15, [r3]
 8027ace:	ee67 7a80 	vmul.f32	s15, s15, s0
 8027ad2:	ece3 7a01 	vstmia	r3!, {s15}
 8027ad6:	4293      	cmp	r3, r2
 8027ad8:	d1f7      	bne.n	8027aca <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8027ada:	4770      	bx	lr

08027adc <arm_max_f32>:
 8027adc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027ae0:	1e4f      	subs	r7, r1, #1
 8027ae2:	ea5f 0897 	movs.w	r8, r7, lsr #2
 8027ae6:	f100 0e04 	add.w	lr, r0, #4
 8027aea:	edd0 7a00 	vldr	s15, [r0]
 8027aee:	d058      	beq.n	8027ba2 <arm_max_f32+0xc6>
 8027af0:	3014      	adds	r0, #20
 8027af2:	46c4      	mov	ip, r8
 8027af4:	2604      	movs	r6, #4
 8027af6:	2400      	movs	r4, #0
 8027af8:	ed10 6a04 	vldr	s12, [r0, #-16]
 8027afc:	ed50 6a03 	vldr	s13, [r0, #-12]
 8027b00:	ed10 7a02 	vldr	s14, [r0, #-8]
 8027b04:	ed50 5a01 	vldr	s11, [r0, #-4]
 8027b08:	eeb4 6ae7 	vcmpe.f32	s12, s15
 8027b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b10:	bfc8      	it	gt
 8027b12:	eef0 7a46 	vmovgt.f32	s15, s12
 8027b16:	f1a6 0503 	sub.w	r5, r6, #3
 8027b1a:	eef4 7ae6 	vcmpe.f32	s15, s13
 8027b1e:	bfc8      	it	gt
 8027b20:	462c      	movgt	r4, r5
 8027b22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b26:	bf48      	it	mi
 8027b28:	eef0 7a66 	vmovmi.f32	s15, s13
 8027b2c:	f1a6 0502 	sub.w	r5, r6, #2
 8027b30:	eef4 7ac7 	vcmpe.f32	s15, s14
 8027b34:	bf48      	it	mi
 8027b36:	462c      	movmi	r4, r5
 8027b38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b3c:	bf48      	it	mi
 8027b3e:	eef0 7a47 	vmovmi.f32	s15, s14
 8027b42:	f106 35ff 	add.w	r5, r6, #4294967295
 8027b46:	eef4 7ae5 	vcmpe.f32	s15, s11
 8027b4a:	bf48      	it	mi
 8027b4c:	462c      	movmi	r4, r5
 8027b4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b52:	bf48      	it	mi
 8027b54:	4634      	movmi	r4, r6
 8027b56:	bf48      	it	mi
 8027b58:	eef0 7a65 	vmovmi.f32	s15, s11
 8027b5c:	f1bc 0c01 	subs.w	ip, ip, #1
 8027b60:	f106 0604 	add.w	r6, r6, #4
 8027b64:	f100 0010 	add.w	r0, r0, #16
 8027b68:	d1c6      	bne.n	8027af8 <arm_max_f32+0x1c>
 8027b6a:	eb0e 1e08 	add.w	lr, lr, r8, lsl #4
 8027b6e:	f017 0003 	ands.w	r0, r7, #3
 8027b72:	d018      	beq.n	8027ba6 <arm_max_f32+0xca>
 8027b74:	1a08      	subs	r0, r1, r0
 8027b76:	ecbe 7a01 	vldmia	lr!, {s14}
 8027b7a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8027b7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8027b82:	bfc8      	it	gt
 8027b84:	4604      	movgt	r4, r0
 8027b86:	f100 0001 	add.w	r0, r0, #1
 8027b8a:	bfd8      	it	le
 8027b8c:	eeb0 7a67 	vmovle.f32	s14, s15
 8027b90:	4288      	cmp	r0, r1
 8027b92:	eef0 7a47 	vmov.f32	s15, s14
 8027b96:	d1ee      	bne.n	8027b76 <arm_max_f32+0x9a>
 8027b98:	ed82 7a00 	vstr	s14, [r2]
 8027b9c:	601c      	str	r4, [r3, #0]
 8027b9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027ba2:	4644      	mov	r4, r8
 8027ba4:	e7e3      	b.n	8027b6e <arm_max_f32+0x92>
 8027ba6:	eeb0 7a67 	vmov.f32	s14, s15
 8027baa:	e7f5      	b.n	8027b98 <arm_max_f32+0xbc>

08027bac <arm_rfft_fast_init_f32>:
 8027bac:	084b      	lsrs	r3, r1, #1
 8027bae:	2b80      	cmp	r3, #128	; 0x80
 8027bb0:	b410      	push	{r4}
 8027bb2:	8201      	strh	r1, [r0, #16]
 8027bb4:	8003      	strh	r3, [r0, #0]
 8027bb6:	d047      	beq.n	8027c48 <arm_rfft_fast_init_f32+0x9c>
 8027bb8:	d917      	bls.n	8027bea <arm_rfft_fast_init_f32+0x3e>
 8027bba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8027bbe:	d03d      	beq.n	8027c3c <arm_rfft_fast_init_f32+0x90>
 8027bc0:	d929      	bls.n	8027c16 <arm_rfft_fast_init_f32+0x6a>
 8027bc2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8027bc6:	d020      	beq.n	8027c0a <arm_rfft_fast_init_f32+0x5e>
 8027bc8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8027bcc:	d113      	bne.n	8027bf6 <arm_rfft_fast_init_f32+0x4a>
 8027bce:	4921      	ldr	r1, [pc, #132]	; (8027c54 <arm_rfft_fast_init_f32+0xa8>)
 8027bd0:	4a21      	ldr	r2, [pc, #132]	; (8027c58 <arm_rfft_fast_init_f32+0xac>)
 8027bd2:	4b22      	ldr	r3, [pc, #136]	; (8027c5c <arm_rfft_fast_init_f32+0xb0>)
 8027bd4:	f44f 646e 	mov.w	r4, #3808	; 0xee0
 8027bd8:	8184      	strh	r4, [r0, #12]
 8027bda:	6081      	str	r1, [r0, #8]
 8027bdc:	6042      	str	r2, [r0, #4]
 8027bde:	6143      	str	r3, [r0, #20]
 8027be0:	2000      	movs	r0, #0
 8027be2:	b240      	sxtb	r0, r0
 8027be4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027be8:	4770      	bx	lr
 8027bea:	2b20      	cmp	r3, #32
 8027bec:	d01c      	beq.n	8027c28 <arm_rfft_fast_init_f32+0x7c>
 8027bee:	2b40      	cmp	r3, #64	; 0x40
 8027bf0:	d006      	beq.n	8027c00 <arm_rfft_fast_init_f32+0x54>
 8027bf2:	2b10      	cmp	r3, #16
 8027bf4:	d01d      	beq.n	8027c32 <arm_rfft_fast_init_f32+0x86>
 8027bf6:	20ff      	movs	r0, #255	; 0xff
 8027bf8:	b240      	sxtb	r0, r0
 8027bfa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8027bfe:	4770      	bx	lr
 8027c00:	2438      	movs	r4, #56	; 0x38
 8027c02:	4917      	ldr	r1, [pc, #92]	; (8027c60 <arm_rfft_fast_init_f32+0xb4>)
 8027c04:	4a17      	ldr	r2, [pc, #92]	; (8027c64 <arm_rfft_fast_init_f32+0xb8>)
 8027c06:	4b18      	ldr	r3, [pc, #96]	; (8027c68 <arm_rfft_fast_init_f32+0xbc>)
 8027c08:	e7e6      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c0a:	f44f 64e1 	mov.w	r4, #1800	; 0x708
 8027c0e:	4917      	ldr	r1, [pc, #92]	; (8027c6c <arm_rfft_fast_init_f32+0xc0>)
 8027c10:	4a17      	ldr	r2, [pc, #92]	; (8027c70 <arm_rfft_fast_init_f32+0xc4>)
 8027c12:	4b18      	ldr	r3, [pc, #96]	; (8027c74 <arm_rfft_fast_init_f32+0xc8>)
 8027c14:	e7e0      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c16:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8027c1a:	d1ec      	bne.n	8027bf6 <arm_rfft_fast_init_f32+0x4a>
 8027c1c:	f44f 74dc 	mov.w	r4, #440	; 0x1b8
 8027c20:	4915      	ldr	r1, [pc, #84]	; (8027c78 <arm_rfft_fast_init_f32+0xcc>)
 8027c22:	4a16      	ldr	r2, [pc, #88]	; (8027c7c <arm_rfft_fast_init_f32+0xd0>)
 8027c24:	4b16      	ldr	r3, [pc, #88]	; (8027c80 <arm_rfft_fast_init_f32+0xd4>)
 8027c26:	e7d7      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c28:	2430      	movs	r4, #48	; 0x30
 8027c2a:	4916      	ldr	r1, [pc, #88]	; (8027c84 <arm_rfft_fast_init_f32+0xd8>)
 8027c2c:	4a16      	ldr	r2, [pc, #88]	; (8027c88 <arm_rfft_fast_init_f32+0xdc>)
 8027c2e:	4b17      	ldr	r3, [pc, #92]	; (8027c8c <arm_rfft_fast_init_f32+0xe0>)
 8027c30:	e7d2      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c32:	2414      	movs	r4, #20
 8027c34:	4916      	ldr	r1, [pc, #88]	; (8027c90 <arm_rfft_fast_init_f32+0xe4>)
 8027c36:	4a17      	ldr	r2, [pc, #92]	; (8027c94 <arm_rfft_fast_init_f32+0xe8>)
 8027c38:	4b17      	ldr	r3, [pc, #92]	; (8027c98 <arm_rfft_fast_init_f32+0xec>)
 8027c3a:	e7cd      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c3c:	f44f 74e0 	mov.w	r4, #448	; 0x1c0
 8027c40:	4916      	ldr	r1, [pc, #88]	; (8027c9c <arm_rfft_fast_init_f32+0xf0>)
 8027c42:	4a17      	ldr	r2, [pc, #92]	; (8027ca0 <arm_rfft_fast_init_f32+0xf4>)
 8027c44:	4b17      	ldr	r3, [pc, #92]	; (8027ca4 <arm_rfft_fast_init_f32+0xf8>)
 8027c46:	e7c7      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c48:	24d0      	movs	r4, #208	; 0xd0
 8027c4a:	4917      	ldr	r1, [pc, #92]	; (8027ca8 <arm_rfft_fast_init_f32+0xfc>)
 8027c4c:	4a17      	ldr	r2, [pc, #92]	; (8027cac <arm_rfft_fast_init_f32+0x100>)
 8027c4e:	4b18      	ldr	r3, [pc, #96]	; (8027cb0 <arm_rfft_fast_init_f32+0x104>)
 8027c50:	e7c2      	b.n	8027bd8 <arm_rfft_fast_init_f32+0x2c>
 8027c52:	bf00      	nop
 8027c54:	0803d530 	.word	0x0803d530
 8027c58:	0802e728 	.word	0x0802e728
 8027c5c:	08034898 	.word	0x08034898
 8027c60:	08032828 	.word	0x08032828
 8027c64:	0803f2f0 	.word	0x0803f2f0
 8027c68:	080417e0 	.word	0x080417e0
 8027c6c:	0803b218 	.word	0x0803b218
 8027c70:	08039118 	.word	0x08039118
 8027c74:	08032898 	.word	0x08032898
 8027c78:	08041470 	.word	0x08041470
 8027c7c:	08038898 	.word	0x08038898
 8027c80:	0803f4f0 	.word	0x0803f4f0
 8027c84:	0803c0d0 	.word	0x0803c0d0
 8027c88:	0803b118 	.word	0x0803b118
 8027c8c:	08032728 	.word	0x08032728
 8027c90:	0803c028 	.word	0x0803c028
 8027c94:	08039098 	.word	0x08039098
 8027c98:	0803c050 	.word	0x0803c050
 8027c9c:	0803fcf0 	.word	0x0803fcf0
 8027ca0:	0803c530 	.word	0x0803c530
 8027ca4:	08040070 	.word	0x08040070
 8027ca8:	080419e0 	.word	0x080419e0
 8027cac:	0803c130 	.word	0x0803c130
 8027cb0:	08041070 	.word	0x08041070

08027cb4 <arm_rfft_fast_f32>:
 8027cb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027cb8:	8a06      	ldrh	r6, [r0, #16]
 8027cba:	0876      	lsrs	r6, r6, #1
 8027cbc:	4607      	mov	r7, r0
 8027cbe:	4615      	mov	r5, r2
 8027cc0:	8006      	strh	r6, [r0, #0]
 8027cc2:	460c      	mov	r4, r1
 8027cc4:	2b00      	cmp	r3, #0
 8027cc6:	d15c      	bne.n	8027d82 <arm_rfft_fast_f32+0xce>
 8027cc8:	461a      	mov	r2, r3
 8027cca:	2301      	movs	r3, #1
 8027ccc:	f000 fbe6 	bl	802849c <arm_cfft_f32>
 8027cd0:	edd4 7a00 	vldr	s15, [r4]
 8027cd4:	ed94 7a01 	vldr	s14, [r4, #4]
 8027cd8:	883e      	ldrh	r6, [r7, #0]
 8027cda:	6978      	ldr	r0, [r7, #20]
 8027cdc:	ee37 7a07 	vadd.f32	s14, s14, s14
 8027ce0:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8027ce4:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027ce8:	ee77 6a87 	vadd.f32	s13, s15, s14
 8027cec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8027cf0:	3e01      	subs	r6, #1
 8027cf2:	ee26 7aa3 	vmul.f32	s14, s13, s7
 8027cf6:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027cfa:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8027cfe:	ed85 7a00 	vstr	s14, [r5]
 8027d02:	edc5 7a01 	vstr	s15, [r5, #4]
 8027d06:	3010      	adds	r0, #16
 8027d08:	f105 0210 	add.w	r2, r5, #16
 8027d0c:	3b08      	subs	r3, #8
 8027d0e:	f104 0110 	add.w	r1, r4, #16
 8027d12:	ed51 4a02 	vldr	s9, [r1, #-8]
 8027d16:	ed93 5a02 	vldr	s10, [r3, #8]
 8027d1a:	ed11 7a01 	vldr	s14, [r1, #-4]
 8027d1e:	ed10 6a02 	vldr	s12, [r0, #-8]
 8027d22:	edd3 5a03 	vldr	s11, [r3, #12]
 8027d26:	ed50 6a01 	vldr	s13, [r0, #-4]
 8027d2a:	ee75 7a64 	vsub.f32	s15, s10, s9
 8027d2e:	ee35 4a87 	vadd.f32	s8, s11, s14
 8027d32:	ee35 5a24 	vadd.f32	s10, s10, s9
 8027d36:	ee77 5a65 	vsub.f32	s11, s14, s11
 8027d3a:	ee66 4a27 	vmul.f32	s9, s12, s15
 8027d3e:	ee26 7aa7 	vmul.f32	s14, s13, s15
 8027d42:	ee34 5a85 	vadd.f32	s10, s9, s10
 8027d46:	ee26 6a04 	vmul.f32	s12, s12, s8
 8027d4a:	ee66 6a84 	vmul.f32	s13, s13, s8
 8027d4e:	ee77 7a25 	vadd.f32	s15, s14, s11
 8027d52:	ee76 6a85 	vadd.f32	s13, s13, s10
 8027d56:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8027d5a:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8027d5e:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027d62:	3e01      	subs	r6, #1
 8027d64:	ed42 6a02 	vstr	s13, [r2, #-8]
 8027d68:	ed42 7a01 	vstr	s15, [r2, #-4]
 8027d6c:	f1a3 0308 	sub.w	r3, r3, #8
 8027d70:	f101 0108 	add.w	r1, r1, #8
 8027d74:	f100 0008 	add.w	r0, r0, #8
 8027d78:	f102 0208 	add.w	r2, r2, #8
 8027d7c:	d1c9      	bne.n	8027d12 <arm_rfft_fast_f32+0x5e>
 8027d7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027d82:	edd1 7a00 	vldr	s15, [r1]
 8027d86:	edd1 6a01 	vldr	s13, [r1, #4]
 8027d8a:	6941      	ldr	r1, [r0, #20]
 8027d8c:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8027d90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8027d94:	eef6 3a00 	vmov.f32	s7, #96	; 0x3f000000  0.5
 8027d98:	ee27 7a23 	vmul.f32	s14, s14, s7
 8027d9c:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027da0:	3e01      	subs	r6, #1
 8027da2:	ed82 7a00 	vstr	s14, [r2]
 8027da6:	edc2 7a01 	vstr	s15, [r2, #4]
 8027daa:	00f0      	lsls	r0, r6, #3
 8027dac:	b3ee      	cbz	r6, 8027e2a <arm_rfft_fast_f32+0x176>
 8027dae:	3808      	subs	r0, #8
 8027db0:	f101 0e10 	add.w	lr, r1, #16
 8027db4:	4420      	add	r0, r4
 8027db6:	f104 0110 	add.w	r1, r4, #16
 8027dba:	f102 0c10 	add.w	ip, r2, #16
 8027dbe:	ed90 7a02 	vldr	s14, [r0, #8]
 8027dc2:	ed51 6a02 	vldr	s13, [r1, #-8]
 8027dc6:	ed1e 6a02 	vldr	s12, [lr, #-8]
 8027dca:	ed90 4a03 	vldr	s8, [r0, #12]
 8027dce:	ed11 5a01 	vldr	s10, [r1, #-4]
 8027dd2:	ed5e 5a01 	vldr	s11, [lr, #-4]
 8027dd6:	ee76 7ac7 	vsub.f32	s15, s13, s14
 8027dda:	ee74 4a05 	vadd.f32	s9, s8, s10
 8027dde:	ee26 3a27 	vmul.f32	s6, s12, s15
 8027de2:	ee77 6a26 	vadd.f32	s13, s14, s13
 8027de6:	ee35 5a44 	vsub.f32	s10, s10, s8
 8027dea:	ee25 7aa7 	vmul.f32	s14, s11, s15
 8027dee:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8027df2:	ee77 7a05 	vadd.f32	s15, s14, s10
 8027df6:	ee26 6a24 	vmul.f32	s12, s12, s9
 8027dfa:	ee65 5aa4 	vmul.f32	s11, s11, s9
 8027dfe:	ee77 7ac6 	vsub.f32	s15, s15, s12
 8027e02:	ee36 7ae5 	vsub.f32	s14, s13, s11
 8027e06:	ee67 7aa3 	vmul.f32	s15, s15, s7
 8027e0a:	ee27 7a23 	vmul.f32	s14, s14, s7
 8027e0e:	3e01      	subs	r6, #1
 8027e10:	ed0c 7a02 	vstr	s14, [ip, #-8]
 8027e14:	ed4c 7a01 	vstr	s15, [ip, #-4]
 8027e18:	f1a0 0008 	sub.w	r0, r0, #8
 8027e1c:	f101 0108 	add.w	r1, r1, #8
 8027e20:	f10e 0e08 	add.w	lr, lr, #8
 8027e24:	f10c 0c08 	add.w	ip, ip, #8
 8027e28:	d1c9      	bne.n	8027dbe <arm_rfft_fast_f32+0x10a>
 8027e2a:	4638      	mov	r0, r7
 8027e2c:	4629      	mov	r1, r5
 8027e2e:	461a      	mov	r2, r3
 8027e30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027e34:	2301      	movs	r3, #1
 8027e36:	f000 bb31 	b.w	802849c <arm_cfft_f32>
 8027e3a:	bf00      	nop

08027e3c <arm_cfft_radix8by2_f32>:
 8027e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027e40:	ed2d 8b08 	vpush	{d8-d11}
 8027e44:	f8b0 e000 	ldrh.w	lr, [r0]
 8027e48:	6842      	ldr	r2, [r0, #4]
 8027e4a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8027e4e:	eb01 088e 	add.w	r8, r1, lr, lsl #2
 8027e52:	ea5f 0ede 	movs.w	lr, lr, lsr #3
 8027e56:	4607      	mov	r7, r0
 8027e58:	ea4f 038c 	mov.w	r3, ip, lsl #2
 8027e5c:	f000 80af 	beq.w	8027fbe <arm_cfft_radix8by2_f32+0x182>
 8027e60:	3310      	adds	r3, #16
 8027e62:	18ce      	adds	r6, r1, r3
 8027e64:	3210      	adds	r2, #16
 8027e66:	4443      	add	r3, r8
 8027e68:	f101 0510 	add.w	r5, r1, #16
 8027e6c:	f108 0410 	add.w	r4, r8, #16
 8027e70:	ed54 1a04 	vldr	s3, [r4, #-16]
 8027e74:	ed13 4a04 	vldr	s8, [r3, #-16]
 8027e78:	ed53 3a03 	vldr	s7, [r3, #-12]
 8027e7c:	ed53 5a02 	vldr	s11, [r3, #-8]
 8027e80:	ed13 5a01 	vldr	s10, [r3, #-4]
 8027e84:	ed54 6a03 	vldr	s13, [r4, #-12]
 8027e88:	ed14 0a02 	vldr	s0, [r4, #-8]
 8027e8c:	ed16 2a04 	vldr	s4, [r6, #-16]
 8027e90:	ed56 2a03 	vldr	s5, [r6, #-12]
 8027e94:	ed15 6a03 	vldr	s12, [r5, #-12]
 8027e98:	ed15 7a01 	vldr	s14, [r5, #-4]
 8027e9c:	ed15 3a04 	vldr	s6, [r5, #-16]
 8027ea0:	ed54 7a01 	vldr	s15, [r4, #-4]
 8027ea4:	ed56 0a02 	vldr	s1, [r6, #-8]
 8027ea8:	ed16 1a01 	vldr	s2, [r6, #-4]
 8027eac:	ed55 4a02 	vldr	s9, [r5, #-8]
 8027eb0:	ee73 ba21 	vadd.f32	s23, s6, s3
 8027eb4:	ee36 ba26 	vadd.f32	s22, s12, s13
 8027eb8:	ee37 aa27 	vadd.f32	s20, s14, s15
 8027ebc:	ee72 9a04 	vadd.f32	s19, s4, s8
 8027ec0:	ee32 9aa3 	vadd.f32	s18, s5, s7
 8027ec4:	ee31 8a05 	vadd.f32	s16, s2, s10
 8027ec8:	ee74 aa80 	vadd.f32	s21, s9, s0
 8027ecc:	ee70 8aa5 	vadd.f32	s17, s1, s11
 8027ed0:	ed45 ba04 	vstr	s23, [r5, #-16]
 8027ed4:	ed05 ba03 	vstr	s22, [r5, #-12]
 8027ed8:	ed45 aa02 	vstr	s21, [r5, #-8]
 8027edc:	ed05 aa01 	vstr	s20, [r5, #-4]
 8027ee0:	ed06 8a01 	vstr	s16, [r6, #-4]
 8027ee4:	ed46 9a04 	vstr	s19, [r6, #-16]
 8027ee8:	ed06 9a03 	vstr	s18, [r6, #-12]
 8027eec:	ed46 8a02 	vstr	s17, [r6, #-8]
 8027ef0:	ee76 6a66 	vsub.f32	s13, s12, s13
 8027ef4:	ee73 3ae2 	vsub.f32	s7, s7, s5
 8027ef8:	ed12 6a03 	vldr	s12, [r2, #-12]
 8027efc:	ed52 2a04 	vldr	s5, [r2, #-16]
 8027f00:	ee33 3a61 	vsub.f32	s6, s6, s3
 8027f04:	ee34 4a42 	vsub.f32	s8, s8, s4
 8027f08:	ee26 8a86 	vmul.f32	s16, s13, s12
 8027f0c:	ee24 2a06 	vmul.f32	s4, s8, s12
 8027f10:	ee63 1a22 	vmul.f32	s3, s6, s5
 8027f14:	ee24 4a22 	vmul.f32	s8, s8, s5
 8027f18:	ee23 3a06 	vmul.f32	s6, s6, s12
 8027f1c:	ee66 6aa2 	vmul.f32	s13, s13, s5
 8027f20:	ee23 6a86 	vmul.f32	s12, s7, s12
 8027f24:	ee63 3aa2 	vmul.f32	s7, s7, s5
 8027f28:	ee36 6a04 	vadd.f32	s12, s12, s8
 8027f2c:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8027f30:	ee72 3a63 	vsub.f32	s7, s4, s7
 8027f34:	ee71 2a88 	vadd.f32	s5, s3, s16
 8027f38:	ed44 6a03 	vstr	s13, [r4, #-12]
 8027f3c:	ed44 2a04 	vstr	s5, [r4, #-16]
 8027f40:	ed43 3a04 	vstr	s7, [r3, #-16]
 8027f44:	ed03 6a03 	vstr	s12, [r3, #-12]
 8027f48:	ee77 7a67 	vsub.f32	s15, s14, s15
 8027f4c:	ee75 6ae0 	vsub.f32	s13, s11, s1
 8027f50:	ed12 7a01 	vldr	s14, [r2, #-4]
 8027f54:	ed52 5a02 	vldr	s11, [r2, #-8]
 8027f58:	ee35 6a41 	vsub.f32	s12, s10, s2
 8027f5c:	ee74 4ac0 	vsub.f32	s9, s9, s0
 8027f60:	ee67 3a87 	vmul.f32	s7, s15, s14
 8027f64:	ee26 5a87 	vmul.f32	s10, s13, s14
 8027f68:	ee24 4aa5 	vmul.f32	s8, s9, s11
 8027f6c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8027f70:	ee64 4a87 	vmul.f32	s9, s9, s14
 8027f74:	ee66 6aa5 	vmul.f32	s13, s13, s11
 8027f78:	ee26 7a07 	vmul.f32	s14, s12, s14
 8027f7c:	ee26 6a25 	vmul.f32	s12, s12, s11
 8027f80:	ee77 7ae4 	vsub.f32	s15, s15, s9
 8027f84:	ee74 5a23 	vadd.f32	s11, s8, s7
 8027f88:	ee35 6a46 	vsub.f32	s12, s10, s12
 8027f8c:	ee37 7a26 	vadd.f32	s14, s14, s13
 8027f90:	f1be 0e01 	subs.w	lr, lr, #1
 8027f94:	ed44 5a02 	vstr	s11, [r4, #-8]
 8027f98:	f105 0510 	add.w	r5, r5, #16
 8027f9c:	ed44 7a01 	vstr	s15, [r4, #-4]
 8027fa0:	f106 0610 	add.w	r6, r6, #16
 8027fa4:	ed03 6a02 	vstr	s12, [r3, #-8]
 8027fa8:	ed03 7a01 	vstr	s14, [r3, #-4]
 8027fac:	f102 0210 	add.w	r2, r2, #16
 8027fb0:	f104 0410 	add.w	r4, r4, #16
 8027fb4:	f103 0310 	add.w	r3, r3, #16
 8027fb8:	f47f af5a 	bne.w	8027e70 <arm_cfft_radix8by2_f32+0x34>
 8027fbc:	687a      	ldr	r2, [r7, #4]
 8027fbe:	fa1f f48c 	uxth.w	r4, ip
 8027fc2:	4608      	mov	r0, r1
 8027fc4:	2302      	movs	r3, #2
 8027fc6:	4621      	mov	r1, r4
 8027fc8:	f000 fbca 	bl	8028760 <arm_radix8_butterfly_f32>
 8027fcc:	ecbd 8b08 	vpop	{d8-d11}
 8027fd0:	4640      	mov	r0, r8
 8027fd2:	4621      	mov	r1, r4
 8027fd4:	687a      	ldr	r2, [r7, #4]
 8027fd6:	2302      	movs	r3, #2
 8027fd8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027fdc:	f000 bbc0 	b.w	8028760 <arm_radix8_butterfly_f32>

08027fe0 <arm_cfft_radix8by4_f32>:
 8027fe0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027fe4:	ed2d 8b0a 	vpush	{d8-d12}
 8027fe8:	8802      	ldrh	r2, [r0, #0]
 8027fea:	ed91 6a00 	vldr	s12, [r1]
 8027fee:	b08f      	sub	sp, #60	; 0x3c
 8027ff0:	460f      	mov	r7, r1
 8027ff2:	0852      	lsrs	r2, r2, #1
 8027ff4:	0093      	lsls	r3, r2, #2
 8027ff6:	900c      	str	r0, [sp, #48]	; 0x30
 8027ff8:	9103      	str	r1, [sp, #12]
 8027ffa:	6841      	ldr	r1, [r0, #4]
 8027ffc:	ed97 7a01 	vldr	s14, [r7, #4]
 8028000:	4638      	mov	r0, r7
 8028002:	4418      	add	r0, r3
 8028004:	4606      	mov	r6, r0
 8028006:	9009      	str	r0, [sp, #36]	; 0x24
 8028008:	4418      	add	r0, r3
 802800a:	edd0 6a00 	vldr	s13, [r0]
 802800e:	edd6 3a00 	vldr	s7, [r6]
 8028012:	edd6 2a01 	vldr	s5, [r6, #4]
 8028016:	edd0 7a01 	vldr	s15, [r0, #4]
 802801a:	900a      	str	r0, [sp, #40]	; 0x28
 802801c:	ee76 5a26 	vadd.f32	s11, s12, s13
 8028020:	4604      	mov	r4, r0
 8028022:	4625      	mov	r5, r4
 8028024:	441c      	add	r4, r3
 8028026:	ed94 4a00 	vldr	s8, [r4]
 802802a:	ed94 5a01 	vldr	s10, [r4, #4]
 802802e:	9401      	str	r4, [sp, #4]
 8028030:	ee75 4aa3 	vadd.f32	s9, s11, s7
 8028034:	4630      	mov	r0, r6
 8028036:	ee74 4a24 	vadd.f32	s9, s8, s9
 802803a:	463e      	mov	r6, r7
 802803c:	ee14 ea90 	vmov	lr, s9
 8028040:	ee76 6a66 	vsub.f32	s13, s12, s13
 8028044:	f846 eb08 	str.w	lr, [r6], #8
 8028048:	ee37 6a27 	vadd.f32	s12, s14, s15
 802804c:	edd0 4a01 	vldr	s9, [r0, #4]
 8028050:	9604      	str	r6, [sp, #16]
 8028052:	ee77 7a67 	vsub.f32	s15, s14, s15
 8028056:	9e01      	ldr	r6, [sp, #4]
 8028058:	ee32 3aa6 	vadd.f32	s6, s5, s13
 802805c:	ed96 2a01 	vldr	s4, [r6, #4]
 8028060:	ee36 7a24 	vadd.f32	s14, s12, s9
 8028064:	ee75 5ae3 	vsub.f32	s11, s11, s7
 8028068:	ee77 4ae3 	vsub.f32	s9, s15, s7
 802806c:	ee36 6a62 	vsub.f32	s12, s12, s5
 8028070:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8028074:	ee76 6ae2 	vsub.f32	s13, s13, s5
 8028078:	ee73 3a45 	vsub.f32	s7, s6, s10
 802807c:	4604      	mov	r4, r0
 802807e:	ee36 6a45 	vsub.f32	s12, s12, s10
 8028082:	ee75 6a26 	vadd.f32	s13, s10, s13
 8028086:	46a3      	mov	fp, r4
 8028088:	ee37 7a02 	vadd.f32	s14, s14, s4
 802808c:	ee34 5a84 	vadd.f32	s10, s9, s8
 8028090:	ee13 8a90 	vmov	r8, s7
 8028094:	46a4      	mov	ip, r4
 8028096:	ee75 5ac4 	vsub.f32	s11, s11, s8
 802809a:	ed87 7a01 	vstr	s14, [r7, #4]
 802809e:	f84b 8b08 	str.w	r8, [fp], #8
 80280a2:	f1ac 0704 	sub.w	r7, ip, #4
 80280a6:	ed8c 5a01 	vstr	s10, [ip, #4]
 80280aa:	f101 0c08 	add.w	ip, r1, #8
 80280ae:	462c      	mov	r4, r5
 80280b0:	f8cd c014 	str.w	ip, [sp, #20]
 80280b4:	ee15 ca90 	vmov	ip, s11
 80280b8:	f844 cb08 	str.w	ip, [r4], #8
 80280bc:	9407      	str	r4, [sp, #28]
 80280be:	f101 0410 	add.w	r4, r1, #16
 80280c2:	ed85 6a01 	vstr	s12, [r5, #4]
 80280c6:	0852      	lsrs	r2, r2, #1
 80280c8:	9402      	str	r4, [sp, #8]
 80280ca:	462c      	mov	r4, r5
 80280cc:	f101 0518 	add.w	r5, r1, #24
 80280d0:	920b      	str	r2, [sp, #44]	; 0x2c
 80280d2:	46b2      	mov	sl, r6
 80280d4:	9506      	str	r5, [sp, #24]
 80280d6:	ee77 7ac4 	vsub.f32	s15, s15, s8
 80280da:	3a02      	subs	r2, #2
 80280dc:	ee16 5a90 	vmov	r5, s13
 80280e0:	46b6      	mov	lr, r6
 80280e2:	4630      	mov	r0, r6
 80280e4:	0852      	lsrs	r2, r2, #1
 80280e6:	f84a 5b08 	str.w	r5, [sl], #8
 80280ea:	f1a0 0604 	sub.w	r6, r0, #4
 80280ee:	edce 7a01 	vstr	s15, [lr, #4]
 80280f2:	9208      	str	r2, [sp, #32]
 80280f4:	f000 8130 	beq.w	8028358 <arm_cfft_radix8by4_f32+0x378>
 80280f8:	4691      	mov	r9, r2
 80280fa:	9a03      	ldr	r2, [sp, #12]
 80280fc:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8028100:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
 8028104:	3b08      	subs	r3, #8
 8028106:	f102 0510 	add.w	r5, r2, #16
 802810a:	f101 0c20 	add.w	ip, r1, #32
 802810e:	f1a4 020c 	sub.w	r2, r4, #12
 8028112:	f101 0e30 	add.w	lr, r1, #48	; 0x30
 8028116:	4433      	add	r3, r6
 8028118:	3410      	adds	r4, #16
 802811a:	4650      	mov	r0, sl
 802811c:	4659      	mov	r1, fp
 802811e:	ed55 3a02 	vldr	s7, [r5, #-8]
 8028122:	ed14 5a02 	vldr	s10, [r4, #-8]
 8028126:	ed91 7a00 	vldr	s14, [r1]
 802812a:	edd0 7a00 	vldr	s15, [r0]
 802812e:	ed15 4a01 	vldr	s8, [r5, #-4]
 8028132:	ed54 5a01 	vldr	s11, [r4, #-4]
 8028136:	edd0 6a01 	vldr	s13, [r0, #4]
 802813a:	ed91 6a01 	vldr	s12, [r1, #4]
 802813e:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028142:	ee34 0a25 	vadd.f32	s0, s8, s11
 8028146:	ee78 4a07 	vadd.f32	s9, s16, s14
 802814a:	ee74 5a65 	vsub.f32	s11, s8, s11
 802814e:	ee77 4aa4 	vadd.f32	s9, s15, s9
 8028152:	ee33 5ac5 	vsub.f32	s10, s7, s10
 8028156:	ed45 4a02 	vstr	s9, [r5, #-8]
 802815a:	edd1 4a01 	vldr	s9, [r1, #4]
 802815e:	ed90 4a01 	vldr	s8, [r0, #4]
 8028162:	ee70 4a24 	vadd.f32	s9, s0, s9
 8028166:	ee76 aa05 	vadd.f32	s21, s12, s10
 802816a:	ee74 4a84 	vadd.f32	s9, s9, s8
 802816e:	ee35 aac7 	vsub.f32	s20, s11, s14
 8028172:	ed45 4a01 	vstr	s9, [r5, #-4]
 8028176:	edd6 1a00 	vldr	s3, [r6]
 802817a:	edd7 0a00 	vldr	s1, [r7]
 802817e:	ed92 4a02 	vldr	s8, [r2, #8]
 8028182:	edd3 3a02 	vldr	s7, [r3, #8]
 8028186:	ed93 2a01 	vldr	s4, [r3, #4]
 802818a:	ed16 1a01 	vldr	s2, [r6, #-4]
 802818e:	edd2 2a01 	vldr	s5, [r2, #4]
 8028192:	ed57 9a01 	vldr	s19, [r7, #-4]
 8028196:	ee70 4aa1 	vadd.f32	s9, s1, s3
 802819a:	ee39 3a81 	vadd.f32	s6, s19, s2
 802819e:	ee74 8a84 	vadd.f32	s17, s9, s8
 80281a2:	ee70 1ae1 	vsub.f32	s3, s1, s3
 80281a6:	ee73 8aa8 	vadd.f32	s17, s7, s17
 80281aa:	ee7a aae6 	vsub.f32	s21, s21, s13
 80281ae:	ee18 aa90 	vmov	sl, s17
 80281b2:	f847 a908 	str.w	sl, [r7], #-8
 80281b6:	edd2 8a01 	vldr	s17, [r2, #4]
 80281ba:	ed93 9a01 	vldr	s18, [r3, #4]
 80281be:	ee73 8a28 	vadd.f32	s17, s6, s17
 80281c2:	ee3a aa27 	vadd.f32	s20, s20, s15
 80281c6:	ee78 8a89 	vadd.f32	s17, s17, s18
 80281ca:	ee74 0a63 	vsub.f32	s1, s8, s7
 80281ce:	edc7 8a01 	vstr	s17, [r7, #4]
 80281d2:	ed18 ba02 	vldr	s22, [r8, #-8]
 80281d6:	ed58 8a01 	vldr	s17, [r8, #-4]
 80281da:	ee39 1ac1 	vsub.f32	s2, s19, s2
 80281de:	ee6a ba28 	vmul.f32	s23, s20, s17
 80281e2:	ee2a ca8b 	vmul.f32	s24, s21, s22
 80281e6:	ee71 9ae2 	vsub.f32	s19, s3, s5
 80281ea:	ee30 9a81 	vadd.f32	s18, s1, s2
 80281ee:	ee79 9a82 	vadd.f32	s19, s19, s4
 80281f2:	ee3c ca2b 	vadd.f32	s24, s24, s23
 80281f6:	ee6a aaa8 	vmul.f32	s21, s21, s17
 80281fa:	ee69 baa8 	vmul.f32	s23, s19, s17
 80281fe:	ee2a aa0b 	vmul.f32	s20, s20, s22
 8028202:	ee69 9a8b 	vmul.f32	s19, s19, s22
 8028206:	ee69 8a28 	vmul.f32	s17, s18, s17
 802820a:	ee29 ba0b 	vmul.f32	s22, s18, s22
 802820e:	ee1c aa10 	vmov	sl, s24
 8028212:	ee78 8aa9 	vadd.f32	s17, s17, s19
 8028216:	f841 ab08 	str.w	sl, [r1], #8
 802821a:	ee3a aa6a 	vsub.f32	s20, s20, s21
 802821e:	ee3b bacb 	vsub.f32	s22, s23, s22
 8028222:	ee34 4ac4 	vsub.f32	s8, s9, s8
 8028226:	ee33 3a62 	vsub.f32	s6, s6, s5
 802822a:	ed01 aa01 	vstr	s20, [r1, #-4]
 802822e:	edc2 8a01 	vstr	s17, [r2, #4]
 8028232:	ed82 ba02 	vstr	s22, [r2, #8]
 8028236:	ed5c 4a04 	vldr	s9, [ip, #-16]
 802823a:	ee74 3a63 	vsub.f32	s7, s8, s7
 802823e:	ee38 8a47 	vsub.f32	s16, s16, s14
 8028242:	ed1c 4a03 	vldr	s8, [ip, #-12]
 8028246:	ee30 0a46 	vsub.f32	s0, s0, s12
 802824a:	ee33 3a42 	vsub.f32	s6, s6, s4
 802824e:	ee38 8a67 	vsub.f32	s16, s16, s15
 8028252:	ee30 0a66 	vsub.f32	s0, s0, s13
 8028256:	ee23 9ae4 	vnmul.f32	s18, s7, s9
 802825a:	ee63 8a04 	vmul.f32	s17, s6, s8
 802825e:	ee28 aa24 	vmul.f32	s20, s16, s9
 8028262:	ee60 9a04 	vmul.f32	s19, s0, s8
 8028266:	ee28 8a04 	vmul.f32	s16, s16, s8
 802826a:	ee20 0a24 	vmul.f32	s0, s0, s9
 802826e:	ee63 3a84 	vmul.f32	s7, s7, s8
 8028272:	ee39 4a68 	vsub.f32	s8, s18, s17
 8028276:	ee7a 9a29 	vadd.f32	s19, s20, s19
 802827a:	ee14 aa10 	vmov	sl, s8
 802827e:	ee30 0a48 	vsub.f32	s0, s0, s16
 8028282:	ee63 4a24 	vmul.f32	s9, s6, s9
 8028286:	ed44 9a02 	vstr	s19, [r4, #-8]
 802828a:	ee73 3ae4 	vsub.f32	s7, s7, s9
 802828e:	ed04 0a01 	vstr	s0, [r4, #-4]
 8028292:	f846 a908 	str.w	sl, [r6], #-8
 8028296:	ee35 6a46 	vsub.f32	s12, s10, s12
 802829a:	ee35 7a87 	vadd.f32	s14, s11, s14
 802829e:	edc6 3a01 	vstr	s7, [r6, #4]
 80282a2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80282a6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80282aa:	ed1e 6a05 	vldr	s12, [lr, #-20]	; 0xffffffec
 80282ae:	ed1e 7a06 	vldr	s14, [lr, #-24]	; 0xffffffe8
 80282b2:	ee67 5a86 	vmul.f32	s11, s15, s12
 80282b6:	ee26 5a87 	vmul.f32	s10, s13, s14
 80282ba:	ee72 2a62 	vsub.f32	s5, s4, s5
 80282be:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80282c2:	ee72 2ae1 	vsub.f32	s5, s5, s3
 80282c6:	ee75 5a25 	vadd.f32	s11, s10, s11
 80282ca:	ee62 0a86 	vmul.f32	s1, s5, s12
 80282ce:	ee66 6a86 	vmul.f32	s13, s13, s12
 80282d2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80282d6:	ee21 6a06 	vmul.f32	s12, s2, s12
 80282da:	ee62 2a87 	vmul.f32	s5, s5, s14
 80282de:	ee21 1a07 	vmul.f32	s2, s2, s14
 80282e2:	ee15 aa90 	vmov	sl, s11
 80282e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80282ea:	f840 ab08 	str.w	sl, [r0], #8
 80282ee:	ee30 1ac1 	vsub.f32	s2, s1, s2
 80282f2:	ee76 2a22 	vadd.f32	s5, s12, s5
 80282f6:	f1b9 0901 	subs.w	r9, r9, #1
 80282fa:	ed40 7a01 	vstr	s15, [r0, #-4]
 80282fe:	f105 0508 	add.w	r5, r5, #8
 8028302:	ed83 1a02 	vstr	s2, [r3, #8]
 8028306:	edc3 2a01 	vstr	s5, [r3, #4]
 802830a:	f108 0808 	add.w	r8, r8, #8
 802830e:	f1a2 0208 	sub.w	r2, r2, #8
 8028312:	f10c 0c10 	add.w	ip, ip, #16
 8028316:	f104 0408 	add.w	r4, r4, #8
 802831a:	f10e 0e18 	add.w	lr, lr, #24
 802831e:	f1a3 0308 	sub.w	r3, r3, #8
 8028322:	f47f aefc 	bne.w	802811e <arm_cfft_radix8by4_f32+0x13e>
 8028326:	9908      	ldr	r1, [sp, #32]
 8028328:	9802      	ldr	r0, [sp, #8]
 802832a:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
 802832e:	00cb      	lsls	r3, r1, #3
 8028330:	eb01 0241 	add.w	r2, r1, r1, lsl #1
 8028334:	eb00 1101 	add.w	r1, r0, r1, lsl #4
 8028338:	9102      	str	r1, [sp, #8]
 802833a:	9904      	ldr	r1, [sp, #16]
 802833c:	4419      	add	r1, r3
 802833e:	9104      	str	r1, [sp, #16]
 8028340:	9905      	ldr	r1, [sp, #20]
 8028342:	4419      	add	r1, r3
 8028344:	9105      	str	r1, [sp, #20]
 8028346:	9907      	ldr	r1, [sp, #28]
 8028348:	449b      	add	fp, r3
 802834a:	4419      	add	r1, r3
 802834c:	449a      	add	sl, r3
 802834e:	9b06      	ldr	r3, [sp, #24]
 8028350:	9107      	str	r1, [sp, #28]
 8028352:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8028356:	9306      	str	r3, [sp, #24]
 8028358:	9a04      	ldr	r2, [sp, #16]
 802835a:	9807      	ldr	r0, [sp, #28]
 802835c:	edd2 3a00 	vldr	s7, [r2]
 8028360:	ed90 4a00 	vldr	s8, [r0]
 8028364:	eddb 7a00 	vldr	s15, [fp]
 8028368:	ed9a 3a00 	vldr	s6, [sl]
 802836c:	edd2 4a01 	vldr	s9, [r2, #4]
 8028370:	ed90 7a01 	vldr	s14, [r0, #4]
 8028374:	ed9b 2a01 	vldr	s4, [fp, #4]
 8028378:	edda 5a01 	vldr	s11, [sl, #4]
 802837c:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 8028380:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8028382:	ee73 6a84 	vadd.f32	s13, s7, s8
 8028386:	ee34 6a87 	vadd.f32	s12, s9, s14
 802838a:	ee36 5aa7 	vadd.f32	s10, s13, s15
 802838e:	ee34 7ac7 	vsub.f32	s14, s9, s14
 8028392:	ee33 5a05 	vadd.f32	s10, s6, s10
 8028396:	ee33 4ac4 	vsub.f32	s8, s7, s8
 802839a:	ed82 5a00 	vstr	s10, [r2]
 802839e:	ed9b 5a01 	vldr	s10, [fp, #4]
 80283a2:	edda 4a01 	vldr	s9, [sl, #4]
 80283a6:	ee36 5a05 	vadd.f32	s10, s12, s10
 80283aa:	ee72 3a04 	vadd.f32	s7, s4, s8
 80283ae:	ee35 5a24 	vadd.f32	s10, s10, s9
 80283b2:	ee77 4a67 	vsub.f32	s9, s14, s15
 80283b6:	ed82 5a01 	vstr	s10, [r2, #4]
 80283ba:	9a05      	ldr	r2, [sp, #20]
 80283bc:	ee34 5a83 	vadd.f32	s10, s9, s6
 80283c0:	edd2 1a00 	vldr	s3, [r2]
 80283c4:	edd2 2a01 	vldr	s5, [r2, #4]
 80283c8:	9a02      	ldr	r2, [sp, #8]
 80283ca:	ee73 3ae5 	vsub.f32	s7, s7, s11
 80283ce:	ee36 6a42 	vsub.f32	s12, s12, s4
 80283d2:	ee63 4aa1 	vmul.f32	s9, s7, s3
 80283d6:	ee63 3aa2 	vmul.f32	s7, s7, s5
 80283da:	ee65 2a22 	vmul.f32	s5, s10, s5
 80283de:	ee25 5a21 	vmul.f32	s10, s10, s3
 80283e2:	ee74 2aa2 	vadd.f32	s5, s9, s5
 80283e6:	ee35 5a63 	vsub.f32	s10, s10, s7
 80283ea:	ee76 6ae7 	vsub.f32	s13, s13, s15
 80283ee:	edcb 2a00 	vstr	s5, [fp]
 80283f2:	ed8b 5a01 	vstr	s10, [fp, #4]
 80283f6:	edd2 3a01 	vldr	s7, [r2, #4]
 80283fa:	ed92 5a00 	vldr	s10, [r2]
 80283fe:	9a06      	ldr	r2, [sp, #24]
 8028400:	ee76 6ac3 	vsub.f32	s13, s13, s6
 8028404:	ee36 6a65 	vsub.f32	s12, s12, s11
 8028408:	ee66 4a85 	vmul.f32	s9, s13, s10
 802840c:	ee26 5a05 	vmul.f32	s10, s12, s10
 8028410:	ee66 6aa3 	vmul.f32	s13, s13, s7
 8028414:	ee26 6a23 	vmul.f32	s12, s12, s7
 8028418:	ee75 6a66 	vsub.f32	s13, s10, s13
 802841c:	ee34 6a86 	vadd.f32	s12, s9, s12
 8028420:	ee34 4a42 	vsub.f32	s8, s8, s4
 8028424:	ee37 7a27 	vadd.f32	s14, s14, s15
 8028428:	edc0 6a01 	vstr	s13, [r0, #4]
 802842c:	ed80 6a00 	vstr	s12, [r0]
 8028430:	ed92 6a01 	vldr	s12, [r2, #4]
 8028434:	9803      	ldr	r0, [sp, #12]
 8028436:	ee77 7a43 	vsub.f32	s15, s14, s6
 802843a:	ee75 5a84 	vadd.f32	s11, s11, s8
 802843e:	ed92 7a00 	vldr	s14, [r2]
 8028442:	ee65 6a87 	vmul.f32	s13, s11, s14
 8028446:	ee27 7a87 	vmul.f32	s14, s15, s14
 802844a:	ee65 5a86 	vmul.f32	s11, s11, s12
 802844e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8028452:	ee77 5a65 	vsub.f32	s11, s14, s11
 8028456:	ee76 7aa7 	vadd.f32	s15, s13, s15
 802845a:	edca 5a01 	vstr	s11, [sl, #4]
 802845e:	edca 7a00 	vstr	s15, [sl]
 8028462:	6872      	ldr	r2, [r6, #4]
 8028464:	4621      	mov	r1, r4
 8028466:	2304      	movs	r3, #4
 8028468:	f000 f97a 	bl	8028760 <arm_radix8_butterfly_f32>
 802846c:	9809      	ldr	r0, [sp, #36]	; 0x24
 802846e:	6872      	ldr	r2, [r6, #4]
 8028470:	4621      	mov	r1, r4
 8028472:	2304      	movs	r3, #4
 8028474:	f000 f974 	bl	8028760 <arm_radix8_butterfly_f32>
 8028478:	980a      	ldr	r0, [sp, #40]	; 0x28
 802847a:	6872      	ldr	r2, [r6, #4]
 802847c:	4621      	mov	r1, r4
 802847e:	2304      	movs	r3, #4
 8028480:	f000 f96e 	bl	8028760 <arm_radix8_butterfly_f32>
 8028484:	9801      	ldr	r0, [sp, #4]
 8028486:	6872      	ldr	r2, [r6, #4]
 8028488:	4621      	mov	r1, r4
 802848a:	2304      	movs	r3, #4
 802848c:	b00f      	add	sp, #60	; 0x3c
 802848e:	ecbd 8b0a 	vpop	{d8-d12}
 8028492:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028496:	f000 b963 	b.w	8028760 <arm_radix8_butterfly_f32>
 802849a:	bf00      	nop

0802849c <arm_cfft_f32>:
 802849c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80284a0:	2a01      	cmp	r2, #1
 80284a2:	4606      	mov	r6, r0
 80284a4:	4617      	mov	r7, r2
 80284a6:	460c      	mov	r4, r1
 80284a8:	4698      	mov	r8, r3
 80284aa:	8805      	ldrh	r5, [r0, #0]
 80284ac:	d054      	beq.n	8028558 <arm_cfft_f32+0xbc>
 80284ae:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 80284b2:	d04c      	beq.n	802854e <arm_cfft_f32+0xb2>
 80284b4:	d916      	bls.n	80284e4 <arm_cfft_f32+0x48>
 80284b6:	f5b5 6f80 	cmp.w	r5, #1024	; 0x400
 80284ba:	d01a      	beq.n	80284f2 <arm_cfft_f32+0x56>
 80284bc:	d95c      	bls.n	8028578 <arm_cfft_f32+0xdc>
 80284be:	f5b5 6f00 	cmp.w	r5, #2048	; 0x800
 80284c2:	d044      	beq.n	802854e <arm_cfft_f32+0xb2>
 80284c4:	f5b5 5f80 	cmp.w	r5, #4096	; 0x1000
 80284c8:	d105      	bne.n	80284d6 <arm_cfft_f32+0x3a>
 80284ca:	4620      	mov	r0, r4
 80284cc:	4629      	mov	r1, r5
 80284ce:	6872      	ldr	r2, [r6, #4]
 80284d0:	2301      	movs	r3, #1
 80284d2:	f000 f945 	bl	8028760 <arm_radix8_butterfly_f32>
 80284d6:	f1b8 0f00 	cmp.w	r8, #0
 80284da:	d111      	bne.n	8028500 <arm_cfft_f32+0x64>
 80284dc:	2f01      	cmp	r7, #1
 80284de:	d016      	beq.n	802850e <arm_cfft_f32+0x72>
 80284e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80284e4:	2d20      	cmp	r5, #32
 80284e6:	d032      	beq.n	802854e <arm_cfft_f32+0xb2>
 80284e8:	d94a      	bls.n	8028580 <arm_cfft_f32+0xe4>
 80284ea:	2d40      	cmp	r5, #64	; 0x40
 80284ec:	d0ed      	beq.n	80284ca <arm_cfft_f32+0x2e>
 80284ee:	2d80      	cmp	r5, #128	; 0x80
 80284f0:	d1f1      	bne.n	80284d6 <arm_cfft_f32+0x3a>
 80284f2:	4630      	mov	r0, r6
 80284f4:	4621      	mov	r1, r4
 80284f6:	f7ff fca1 	bl	8027e3c <arm_cfft_radix8by2_f32>
 80284fa:	f1b8 0f00 	cmp.w	r8, #0
 80284fe:	d0ed      	beq.n	80284dc <arm_cfft_f32+0x40>
 8028500:	4620      	mov	r0, r4
 8028502:	89b1      	ldrh	r1, [r6, #12]
 8028504:	68b2      	ldr	r2, [r6, #8]
 8028506:	f7d7 fe73 	bl	80001f0 <arm_bitreversal_32>
 802850a:	2f01      	cmp	r7, #1
 802850c:	d1e8      	bne.n	80284e0 <arm_cfft_f32+0x44>
 802850e:	ee07 5a90 	vmov	s15, r5
 8028512:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8028516:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 802851a:	eec7 6aa6 	vdiv.f32	s13, s15, s13
 802851e:	2d00      	cmp	r5, #0
 8028520:	d0de      	beq.n	80284e0 <arm_cfft_f32+0x44>
 8028522:	f104 0108 	add.w	r1, r4, #8
 8028526:	2300      	movs	r3, #0
 8028528:	3301      	adds	r3, #1
 802852a:	429d      	cmp	r5, r3
 802852c:	f101 0108 	add.w	r1, r1, #8
 8028530:	ed11 7a04 	vldr	s14, [r1, #-16]
 8028534:	ed51 7a03 	vldr	s15, [r1, #-12]
 8028538:	ee27 7a26 	vmul.f32	s14, s14, s13
 802853c:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8028540:	ed01 7a04 	vstr	s14, [r1, #-16]
 8028544:	ed41 7a03 	vstr	s15, [r1, #-12]
 8028548:	d1ee      	bne.n	8028528 <arm_cfft_f32+0x8c>
 802854a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802854e:	4630      	mov	r0, r6
 8028550:	4621      	mov	r1, r4
 8028552:	f7ff fd45 	bl	8027fe0 <arm_cfft_radix8by4_f32>
 8028556:	e7be      	b.n	80284d6 <arm_cfft_f32+0x3a>
 8028558:	b1ad      	cbz	r5, 8028586 <arm_cfft_f32+0xea>
 802855a:	f101 030c 	add.w	r3, r1, #12
 802855e:	2200      	movs	r2, #0
 8028560:	ed53 7a02 	vldr	s15, [r3, #-8]
 8028564:	3201      	adds	r2, #1
 8028566:	eef1 7a67 	vneg.f32	s15, s15
 802856a:	4295      	cmp	r5, r2
 802856c:	ed43 7a02 	vstr	s15, [r3, #-8]
 8028570:	f103 0308 	add.w	r3, r3, #8
 8028574:	d1f4      	bne.n	8028560 <arm_cfft_f32+0xc4>
 8028576:	e79a      	b.n	80284ae <arm_cfft_f32+0x12>
 8028578:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 802857c:	d0a5      	beq.n	80284ca <arm_cfft_f32+0x2e>
 802857e:	e7aa      	b.n	80284d6 <arm_cfft_f32+0x3a>
 8028580:	2d10      	cmp	r5, #16
 8028582:	d0b6      	beq.n	80284f2 <arm_cfft_f32+0x56>
 8028584:	e7a7      	b.n	80284d6 <arm_cfft_f32+0x3a>
 8028586:	f5b5 7f80 	cmp.w	r5, #256	; 0x100
 802858a:	d894      	bhi.n	80284b6 <arm_cfft_f32+0x1a>
 802858c:	e7aa      	b.n	80284e4 <arm_cfft_f32+0x48>
 802858e:	bf00      	nop

08028590 <arm_cmplx_mag_f32>:
 8028590:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028594:	ea5f 0892 	movs.w	r8, r2, lsr #2
 8028598:	b084      	sub	sp, #16
 802859a:	d07f      	beq.n	802869c <arm_cmplx_mag_f32+0x10c>
 802859c:	2700      	movs	r7, #0
 802859e:	f100 0420 	add.w	r4, r0, #32
 80285a2:	f101 0510 	add.w	r5, r1, #16
 80285a6:	4646      	mov	r6, r8
 80285a8:	e05a      	b.n	8028660 <arm_cmplx_mag_f32+0xd0>
 80285aa:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80285ae:	eeb4 0a40 	vcmp.f32	s0, s0
 80285b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285b6:	f040 80a4 	bne.w	8028702 <arm_cmplx_mag_f32+0x172>
 80285ba:	ed05 0a04 	vstr	s0, [r5, #-16]
 80285be:	ed54 7a06 	vldr	s15, [r4, #-24]	; 0xffffffe8
 80285c2:	ed14 0a05 	vldr	s0, [r4, #-20]	; 0xffffffec
 80285c6:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80285ca:	ee20 0a00 	vmul.f32	s0, s0, s0
 80285ce:	ee77 7a80 	vadd.f32	s15, s15, s0
 80285d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80285d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285da:	f2c0 808f 	blt.w	80286fc <arm_cmplx_mag_f32+0x16c>
 80285de:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80285e2:	eeb4 0a40 	vcmp.f32	s0, s0
 80285e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80285ea:	f040 80af 	bne.w	802874c <arm_cmplx_mag_f32+0x1bc>
 80285ee:	ed05 0a03 	vstr	s0, [r5, #-12]
 80285f2:	ed54 7a04 	vldr	s15, [r4, #-16]
 80285f6:	ed14 0a03 	vldr	s0, [r4, #-12]
 80285fa:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80285fe:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028602:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028606:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802860a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802860e:	db72      	blt.n	80286f6 <arm_cmplx_mag_f32+0x166>
 8028610:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028614:	eeb4 0a40 	vcmp.f32	s0, s0
 8028618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802861c:	f040 808c 	bne.w	8028738 <arm_cmplx_mag_f32+0x1a8>
 8028620:	ed05 0a02 	vstr	s0, [r5, #-8]
 8028624:	ed54 7a02 	vldr	s15, [r4, #-8]
 8028628:	ed14 0a01 	vldr	s0, [r4, #-4]
 802862c:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8028630:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028634:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028638:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802863c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028640:	db20      	blt.n	8028684 <arm_cmplx_mag_f32+0xf4>
 8028642:	eeb1 0ae7 	vsqrt.f32	s0, s15
 8028646:	eeb4 0a40 	vcmp.f32	s0, s0
 802864a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802864e:	d169      	bne.n	8028724 <arm_cmplx_mag_f32+0x194>
 8028650:	3e01      	subs	r6, #1
 8028652:	ed05 0a01 	vstr	s0, [r5, #-4]
 8028656:	f104 0420 	add.w	r4, r4, #32
 802865a:	f105 0510 	add.w	r5, r5, #16
 802865e:	d019      	beq.n	8028694 <arm_cmplx_mag_f32+0x104>
 8028660:	ed54 7a08 	vldr	s15, [r4, #-32]	; 0xffffffe0
 8028664:	ed14 0a07 	vldr	s0, [r4, #-28]	; 0xffffffe4
 8028668:	ee67 7aa7 	vmul.f32	s15, s15, s15
 802866c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8028670:	ee77 7a80 	vadd.f32	s15, s15, s0
 8028674:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8028678:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802867c:	da95      	bge.n	80285aa <arm_cmplx_mag_f32+0x1a>
 802867e:	f845 7c10 	str.w	r7, [r5, #-16]
 8028682:	e79c      	b.n	80285be <arm_cmplx_mag_f32+0x2e>
 8028684:	3e01      	subs	r6, #1
 8028686:	f845 7c04 	str.w	r7, [r5, #-4]
 802868a:	f104 0420 	add.w	r4, r4, #32
 802868e:	f105 0510 	add.w	r5, r5, #16
 8028692:	d1e5      	bne.n	8028660 <arm_cmplx_mag_f32+0xd0>
 8028694:	eb00 1048 	add.w	r0, r0, r8, lsl #5
 8028698:	eb01 1108 	add.w	r1, r1, r8, lsl #4
 802869c:	f012 0503 	ands.w	r5, r2, #3
 80286a0:	d026      	beq.n	80286f0 <arm_cmplx_mag_f32+0x160>
 80286a2:	2600      	movs	r6, #0
 80286a4:	f100 0408 	add.w	r4, r0, #8
 80286a8:	e00c      	b.n	80286c4 <arm_cmplx_mag_f32+0x134>
 80286aa:	eeb1 0ae7 	vsqrt.f32	s0, s15
 80286ae:	eeb4 0a40 	vcmp.f32	s0, s0
 80286b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286b6:	d12e      	bne.n	8028716 <arm_cmplx_mag_f32+0x186>
 80286b8:	3d01      	subs	r5, #1
 80286ba:	ed01 0a01 	vstr	s0, [r1, #-4]
 80286be:	f104 0408 	add.w	r4, r4, #8
 80286c2:	d015      	beq.n	80286f0 <arm_cmplx_mag_f32+0x160>
 80286c4:	ed54 7a02 	vldr	s15, [r4, #-8]
 80286c8:	ed14 0a01 	vldr	s0, [r4, #-4]
 80286cc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80286d0:	ee20 0a00 	vmul.f32	s0, s0, s0
 80286d4:	3104      	adds	r1, #4
 80286d6:	ee77 7a80 	vadd.f32	s15, s15, s0
 80286da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80286de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80286e2:	dae2      	bge.n	80286aa <arm_cmplx_mag_f32+0x11a>
 80286e4:	3d01      	subs	r5, #1
 80286e6:	f841 6c04 	str.w	r6, [r1, #-4]
 80286ea:	f104 0408 	add.w	r4, r4, #8
 80286ee:	d1e9      	bne.n	80286c4 <arm_cmplx_mag_f32+0x134>
 80286f0:	b004      	add	sp, #16
 80286f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80286f6:	f845 7c08 	str.w	r7, [r5, #-8]
 80286fa:	e793      	b.n	8028624 <arm_cmplx_mag_f32+0x94>
 80286fc:	f845 7c0c 	str.w	r7, [r5, #-12]
 8028700:	e777      	b.n	80285f2 <arm_cmplx_mag_f32+0x62>
 8028702:	eeb0 0a67 	vmov.f32	s0, s15
 8028706:	9203      	str	r2, [sp, #12]
 8028708:	9102      	str	r1, [sp, #8]
 802870a:	9001      	str	r0, [sp, #4]
 802870c:	f000 fb38 	bl	8028d80 <sqrtf>
 8028710:	a801      	add	r0, sp, #4
 8028712:	c807      	ldmia	r0, {r0, r1, r2}
 8028714:	e751      	b.n	80285ba <arm_cmplx_mag_f32+0x2a>
 8028716:	eeb0 0a67 	vmov.f32	s0, s15
 802871a:	9101      	str	r1, [sp, #4]
 802871c:	f000 fb30 	bl	8028d80 <sqrtf>
 8028720:	9901      	ldr	r1, [sp, #4]
 8028722:	e7c9      	b.n	80286b8 <arm_cmplx_mag_f32+0x128>
 8028724:	eeb0 0a67 	vmov.f32	s0, s15
 8028728:	9203      	str	r2, [sp, #12]
 802872a:	9102      	str	r1, [sp, #8]
 802872c:	9001      	str	r0, [sp, #4]
 802872e:	f000 fb27 	bl	8028d80 <sqrtf>
 8028732:	a801      	add	r0, sp, #4
 8028734:	c807      	ldmia	r0, {r0, r1, r2}
 8028736:	e78b      	b.n	8028650 <arm_cmplx_mag_f32+0xc0>
 8028738:	eeb0 0a67 	vmov.f32	s0, s15
 802873c:	9203      	str	r2, [sp, #12]
 802873e:	9102      	str	r1, [sp, #8]
 8028740:	9001      	str	r0, [sp, #4]
 8028742:	f000 fb1d 	bl	8028d80 <sqrtf>
 8028746:	a801      	add	r0, sp, #4
 8028748:	c807      	ldmia	r0, {r0, r1, r2}
 802874a:	e769      	b.n	8028620 <arm_cmplx_mag_f32+0x90>
 802874c:	eeb0 0a67 	vmov.f32	s0, s15
 8028750:	9203      	str	r2, [sp, #12]
 8028752:	9102      	str	r1, [sp, #8]
 8028754:	9001      	str	r0, [sp, #4]
 8028756:	f000 fb13 	bl	8028d80 <sqrtf>
 802875a:	a801      	add	r0, sp, #4
 802875c:	c807      	ldmia	r0, {r0, r1, r2}
 802875e:	e746      	b.n	80285ee <arm_cmplx_mag_f32+0x5e>

08028760 <arm_radix8_butterfly_f32>:
 8028760:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028764:	ed2d 8b10 	vpush	{d8-d15}
 8028768:	b09d      	sub	sp, #116	; 0x74
 802876a:	461c      	mov	r4, r3
 802876c:	ed9f bac8 	vldr	s22, [pc, #800]	; 8028a90 <arm_radix8_butterfly_f32+0x330>
 8028770:	921a      	str	r2, [sp, #104]	; 0x68
 8028772:	1d03      	adds	r3, r0, #4
 8028774:	4682      	mov	sl, r0
 8028776:	4689      	mov	r9, r1
 8028778:	468b      	mov	fp, r1
 802877a:	931b      	str	r3, [sp, #108]	; 0x6c
 802877c:	9400      	str	r4, [sp, #0]
 802877e:	469e      	mov	lr, r3
 8028780:	ea4f 03db 	mov.w	r3, fp, lsr #3
 8028784:	005a      	lsls	r2, r3, #1
 8028786:	18d6      	adds	r6, r2, r3
 8028788:	18f5      	adds	r5, r6, r3
 802878a:	9203      	str	r2, [sp, #12]
 802878c:	195a      	adds	r2, r3, r5
 802878e:	18d0      	adds	r0, r2, r3
 8028790:	00df      	lsls	r7, r3, #3
 8028792:	1819      	adds	r1, r3, r0
 8028794:	463c      	mov	r4, r7
 8028796:	9701      	str	r7, [sp, #4]
 8028798:	4457      	add	r7, sl
 802879a:	930c      	str	r3, [sp, #48]	; 0x30
 802879c:	eb0a 02c2 	add.w	r2, sl, r2, lsl #3
 80287a0:	011b      	lsls	r3, r3, #4
 80287a2:	eb0a 01c1 	add.w	r1, sl, r1, lsl #3
 80287a6:	eb07 0c04 	add.w	ip, r7, r4
 80287aa:	9c00      	ldr	r4, [sp, #0]
 80287ac:	9302      	str	r3, [sp, #8]
 80287ae:	eb0a 06c6 	add.w	r6, sl, r6, lsl #3
 80287b2:	eb0a 05c5 	add.w	r5, sl, r5, lsl #3
 80287b6:	3204      	adds	r2, #4
 80287b8:	3104      	adds	r1, #4
 80287ba:	eb0a 00c0 	add.w	r0, sl, r0, lsl #3
 80287be:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80287c2:	f04f 0800 	mov.w	r8, #0
 80287c6:	eddc 7a00 	vldr	s15, [ip]
 80287ca:	edd7 6a00 	vldr	s13, [r7]
 80287ce:	edd6 3a00 	vldr	s7, [r6]
 80287d2:	ed5e aa01 	vldr	s21, [lr, #-4]
 80287d6:	edd5 4a00 	vldr	s9, [r5]
 80287da:	ed90 2a00 	vldr	s4, [r0]
 80287de:	ed12 7a01 	vldr	s14, [r2, #-4]
 80287e2:	ed51 0a01 	vldr	s1, [r1, #-4]
 80287e6:	ee77 8a82 	vadd.f32	s17, s15, s4
 80287ea:	ee33 4aa0 	vadd.f32	s8, s7, s1
 80287ee:	ee76 1a87 	vadd.f32	s3, s13, s14
 80287f2:	ee3a 3aa4 	vadd.f32	s6, s21, s9
 80287f6:	ee31 6a84 	vadd.f32	s12, s3, s8
 80287fa:	ee33 5a28 	vadd.f32	s10, s6, s17
 80287fe:	ee36 7ac7 	vsub.f32	s14, s13, s14
 8028802:	ee75 6a06 	vadd.f32	s13, s10, s12
 8028806:	ee35 5a46 	vsub.f32	s10, s10, s12
 802880a:	ed4e 6a01 	vstr	s13, [lr, #-4]
 802880e:	ed85 5a00 	vstr	s10, [r5]
 8028812:	ed96 1a01 	vldr	s2, [r6, #4]
 8028816:	edd7 5a01 	vldr	s11, [r7, #4]
 802881a:	ed92 aa00 	vldr	s20, [r2]
 802881e:	ed91 6a00 	vldr	s12, [r1]
 8028822:	ed9e 9a00 	vldr	s18, [lr]
 8028826:	ed95 5a01 	vldr	s10, [r5, #4]
 802882a:	eddc 6a01 	vldr	s13, [ip, #4]
 802882e:	edd0 9a01 	vldr	s19, [r0, #4]
 8028832:	ee73 0ae0 	vsub.f32	s1, s7, s1
 8028836:	ee71 2a46 	vsub.f32	s5, s2, s12
 802883a:	ee75 3aca 	vsub.f32	s7, s11, s20
 802883e:	ee37 0a60 	vsub.f32	s0, s14, s1
 8028842:	ee33 8aa2 	vadd.f32	s16, s7, s5
 8028846:	ee37 7a20 	vadd.f32	s14, s14, s1
 802884a:	ee73 2ae2 	vsub.f32	s5, s7, s5
 802884e:	ee37 2ac2 	vsub.f32	s4, s15, s4
 8028852:	ee79 3a05 	vadd.f32	s7, s18, s10
 8028856:	ee60 0a0b 	vmul.f32	s1, s0, s22
 802885a:	ee39 5a45 	vsub.f32	s10, s18, s10
 802885e:	ee7a 4ae4 	vsub.f32	s9, s21, s9
 8028862:	ee36 9aa9 	vadd.f32	s18, s13, s19
 8028866:	ee75 5a8a 	vadd.f32	s11, s11, s20
 802886a:	ee31 6a06 	vadd.f32	s12, s2, s12
 802886e:	ee76 6ae9 	vsub.f32	s13, s13, s19
 8028872:	ee28 8a0b 	vmul.f32	s16, s16, s22
 8028876:	ee62 2a8b 	vmul.f32	s5, s5, s22
 802887a:	ee67 7a0b 	vmul.f32	s15, s14, s22
 802887e:	ee33 3a68 	vsub.f32	s6, s6, s17
 8028882:	ee36 0a88 	vadd.f32	s0, s13, s16
 8028886:	ee75 8a86 	vadd.f32	s17, s11, s12
 802888a:	ee36 7ac8 	vsub.f32	s14, s13, s16
 802888e:	ee71 1ac4 	vsub.f32	s3, s3, s8
 8028892:	ee75 6a62 	vsub.f32	s13, s10, s5
 8028896:	ee33 4ac9 	vsub.f32	s8, s7, s18
 802889a:	ee35 6ac6 	vsub.f32	s12, s11, s12
 802889e:	ee33 1a89 	vadd.f32	s2, s7, s18
 80288a2:	ee74 5ae0 	vsub.f32	s11, s9, s1
 80288a6:	ee74 3aa0 	vadd.f32	s7, s9, s1
 80288aa:	ee75 4a22 	vadd.f32	s9, s10, s5
 80288ae:	ee32 5a27 	vadd.f32	s10, s4, s15
 80288b2:	ee72 7a67 	vsub.f32	s15, s4, s15
 80288b6:	ee33 8a06 	vadd.f32	s16, s6, s12
 80288ba:	ee75 2a87 	vadd.f32	s5, s11, s14
 80288be:	ee31 9a28 	vadd.f32	s18, s2, s17
 80288c2:	ee33 6a46 	vsub.f32	s12, s6, s12
 80288c6:	ee74 0a61 	vsub.f32	s1, s8, s3
 80288ca:	ee33 2a80 	vadd.f32	s4, s7, s0
 80288ce:	ee35 7ac7 	vsub.f32	s14, s11, s14
 80288d2:	ee34 3ac5 	vsub.f32	s6, s9, s10
 80288d6:	ee76 5ae7 	vsub.f32	s11, s13, s15
 80288da:	ee31 1a68 	vsub.f32	s2, s2, s17
 80288de:	ee34 4a21 	vadd.f32	s8, s8, s3
 80288e2:	ee73 3ac0 	vsub.f32	s7, s7, s0
 80288e6:	ee74 4a85 	vadd.f32	s9, s9, s10
 80288ea:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80288ee:	44d8      	add	r8, fp
 80288f0:	45c1      	cmp	r9, r8
 80288f2:	ed8e 9a00 	vstr	s18, [lr]
 80288f6:	ed85 1a01 	vstr	s2, [r5, #4]
 80288fa:	449e      	add	lr, r3
 80288fc:	ed8c 8a00 	vstr	s16, [ip]
 8028900:	441d      	add	r5, r3
 8028902:	ed80 6a00 	vstr	s12, [r0]
 8028906:	edcc 0a01 	vstr	s1, [ip, #4]
 802890a:	ed80 4a01 	vstr	s8, [r0, #4]
 802890e:	449c      	add	ip, r3
 8028910:	ed87 2a00 	vstr	s4, [r7]
 8028914:	4418      	add	r0, r3
 8028916:	ed41 3a01 	vstr	s7, [r1, #-4]
 802891a:	ed42 2a01 	vstr	s5, [r2, #-4]
 802891e:	ed86 7a00 	vstr	s14, [r6]
 8028922:	ed87 3a01 	vstr	s6, [r7, #4]
 8028926:	edc1 4a00 	vstr	s9, [r1]
 802892a:	441f      	add	r7, r3
 802892c:	edc2 5a00 	vstr	s11, [r2]
 8028930:	4419      	add	r1, r3
 8028932:	edc6 6a01 	vstr	s13, [r6, #4]
 8028936:	441a      	add	r2, r3
 8028938:	441e      	add	r6, r3
 802893a:	f63f af44 	bhi.w	80287c6 <arm_radix8_butterfly_f32+0x66>
 802893e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028940:	2907      	cmp	r1, #7
 8028942:	4620      	mov	r0, r4
 8028944:	f240 81e9 	bls.w	8028d1a <arm_radix8_butterfly_f32+0x5ba>
 8028948:	eb04 0744 	add.w	r7, r4, r4, lsl #1
 802894c:	193e      	adds	r6, r7, r4
 802894e:	1935      	adds	r5, r6, r4
 8028950:	9c03      	ldr	r4, [sp, #12]
 8028952:	9000      	str	r0, [sp, #0]
 8028954:	4622      	mov	r2, r4
 8028956:	3201      	adds	r2, #1
 8028958:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 802895c:	9900      	ldr	r1, [sp, #0]
 802895e:	1828      	adds	r0, r5, r0
 8028960:	eb00 0e01 	add.w	lr, r0, r1
 8028964:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028966:	440a      	add	r2, r1
 8028968:	eb04 0c01 	add.w	ip, r4, r1
 802896c:	ea4f 04ce 	mov.w	r4, lr, lsl #3
 8028970:	eb0a 0ec2 	add.w	lr, sl, r2, lsl #3
 8028974:	9a00      	ldr	r2, [sp, #0]
 8028976:	940f      	str	r4, [sp, #60]	; 0x3c
 8028978:	00ed      	lsls	r5, r5, #3
 802897a:	9511      	str	r5, [sp, #68]	; 0x44
 802897c:	00d5      	lsls	r5, r2, #3
 802897e:	950d      	str	r5, [sp, #52]	; 0x34
 8028980:	9d01      	ldr	r5, [sp, #4]
 8028982:	3508      	adds	r5, #8
 8028984:	9516      	str	r5, [sp, #88]	; 0x58
 8028986:	9d02      	ldr	r5, [sp, #8]
 8028988:	3508      	adds	r5, #8
 802898a:	0114      	lsls	r4, r2, #4
 802898c:	9517      	str	r5, [sp, #92]	; 0x5c
 802898e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8028990:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8028992:	940e      	str	r4, [sp, #56]	; 0x38
 8028994:	00c0      	lsls	r0, r0, #3
 8028996:	9010      	str	r0, [sp, #64]	; 0x40
 8028998:	18aa      	adds	r2, r5, r2
 802899a:	9207      	str	r2, [sp, #28]
 802899c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802899e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80289a0:	18aa      	adds	r2, r5, r2
 80289a2:	9208      	str	r2, [sp, #32]
 80289a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80289a6:	18aa      	adds	r2, r5, r2
 80289a8:	9209      	str	r2, [sp, #36]	; 0x24
 80289aa:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 80289ae:	f10e 0204 	add.w	r2, lr, #4
 80289b2:	920a      	str	r2, [sp, #40]	; 0x28
 80289b4:	00c9      	lsls	r1, r1, #3
 80289b6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80289b8:	310c      	adds	r1, #12
 80289ba:	00f6      	lsls	r6, r6, #3
 80289bc:	ea4f 00cc 	mov.w	r0, ip, lsl #3
 80289c0:	9114      	str	r1, [sp, #80]	; 0x50
 80289c2:	18a9      	adds	r1, r5, r2
 80289c4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80289c6:	9612      	str	r6, [sp, #72]	; 0x48
 80289c8:	00ff      	lsls	r7, r7, #3
 80289ca:	19ae      	adds	r6, r5, r6
 80289cc:	3008      	adds	r0, #8
 80289ce:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
 80289d2:	9606      	str	r6, [sp, #24]
 80289d4:	9019      	str	r0, [sp, #100]	; 0x64
 80289d6:	18aa      	adds	r2, r5, r2
 80289d8:	0164      	lsls	r4, r4, #5
 80289da:	19ee      	adds	r6, r5, r7
 80289dc:	f10c 000c 	add.w	r0, ip, #12
 80289e0:	9713      	str	r7, [sp, #76]	; 0x4c
 80289e2:	9604      	str	r6, [sp, #16]
 80289e4:	9015      	str	r0, [sp, #84]	; 0x54
 80289e6:	9103      	str	r1, [sp, #12]
 80289e8:	9205      	str	r2, [sp, #20]
 80289ea:	f104 0208 	add.w	r2, r4, #8
 80289ee:	9218      	str	r2, [sp, #96]	; 0x60
 80289f0:	f04f 0801 	mov.w	r8, #1
 80289f4:	2200      	movs	r2, #0
 80289f6:	f102 0108 	add.w	r1, r2, #8
 80289fa:	460f      	mov	r7, r1
 80289fc:	910b      	str	r1, [sp, #44]	; 0x2c
 80289fe:	9918      	ldr	r1, [sp, #96]	; 0x60
 8028a00:	188e      	adds	r6, r1, r2
 8028a02:	9916      	ldr	r1, [sp, #88]	; 0x58
 8028a04:	188d      	adds	r5, r1, r2
 8028a06:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8028a08:	188c      	adds	r4, r1, r2
 8028a0a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8028a0c:	1888      	adds	r0, r1, r2
 8028a0e:	9914      	ldr	r1, [sp, #80]	; 0x50
 8028a10:	eb01 0c02 	add.w	ip, r1, r2
 8028a14:	9915      	ldr	r1, [sp, #84]	; 0x54
 8028a16:	440a      	add	r2, r1
 8028a18:	9903      	ldr	r1, [sp, #12]
 8028a1a:	edd1 fa00 	vldr	s31, [r1]
 8028a1e:	9905      	ldr	r1, [sp, #20]
 8028a20:	ed91 fa00 	vldr	s30, [r1]
 8028a24:	9904      	ldr	r1, [sp, #16]
 8028a26:	edd1 ea00 	vldr	s29, [r1]
 8028a2a:	9906      	ldr	r1, [sp, #24]
 8028a2c:	ed91 ea00 	vldr	s28, [r1]
 8028a30:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028a32:	edd1 da00 	vldr	s27, [r1]
 8028a36:	9908      	ldr	r1, [sp, #32]
 8028a38:	ed91 da00 	vldr	s26, [r1]
 8028a3c:	9907      	ldr	r1, [sp, #28]
 8028a3e:	edd1 ca00 	vldr	s25, [r1]
 8028a42:	9903      	ldr	r1, [sp, #12]
 8028a44:	ed91 ca01 	vldr	s24, [r1, #4]
 8028a48:	9905      	ldr	r1, [sp, #20]
 8028a4a:	edd1 ba01 	vldr	s23, [r1, #4]
 8028a4e:	9904      	ldr	r1, [sp, #16]
 8028a50:	edd1 aa01 	vldr	s21, [r1, #4]
 8028a54:	9906      	ldr	r1, [sp, #24]
 8028a56:	ed91 aa01 	vldr	s20, [r1, #4]
 8028a5a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8028a5c:	edd1 7a01 	vldr	s15, [r1, #4]
 8028a60:	9908      	ldr	r1, [sp, #32]
 8028a62:	edcd 7a00 	vstr	s15, [sp]
 8028a66:	edd1 7a01 	vldr	s15, [r1, #4]
 8028a6a:	9907      	ldr	r1, [sp, #28]
 8028a6c:	edcd 7a01 	vstr	s15, [sp, #4]
 8028a70:	edd1 7a01 	vldr	s15, [r1, #4]
 8028a74:	eb0a 0e07 	add.w	lr, sl, r7
 8028a78:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028a7a:	edcd 7a02 	vstr	s15, [sp, #8]
 8028a7e:	eb0c 010a 	add.w	r1, ip, sl
 8028a82:	4456      	add	r6, sl
 8028a84:	4455      	add	r5, sl
 8028a86:	4454      	add	r4, sl
 8028a88:	4450      	add	r0, sl
 8028a8a:	4452      	add	r2, sl
 8028a8c:	46c4      	mov	ip, r8
 8028a8e:	e001      	b.n	8028a94 <arm_radix8_butterfly_f32+0x334>
 8028a90:	3f3504f3 	.word	0x3f3504f3
 8028a94:	ed96 5a00 	vldr	s10, [r6]
 8028a98:	ed52 9a01 	vldr	s19, [r2, #-4]
 8028a9c:	ed11 6a01 	vldr	s12, [r1, #-4]
 8028aa0:	edd0 7a00 	vldr	s15, [r0]
 8028aa4:	ed17 7a01 	vldr	s14, [r7, #-4]
 8028aa8:	edde 3a00 	vldr	s7, [lr]
 8028aac:	ed94 3a00 	vldr	s6, [r4]
 8028ab0:	ed95 2a00 	vldr	s4, [r5]
 8028ab4:	ed9e 0a01 	vldr	s0, [lr, #4]
 8028ab8:	ee33 8a85 	vadd.f32	s16, s7, s10
 8028abc:	ee32 1a06 	vadd.f32	s2, s4, s12
 8028ac0:	ee33 4a29 	vadd.f32	s8, s6, s19
 8028ac4:	ee77 4a87 	vadd.f32	s9, s15, s14
 8028ac8:	ee78 1a04 	vadd.f32	s3, s16, s8
 8028acc:	ee71 6a24 	vadd.f32	s13, s2, s9
 8028ad0:	ee32 2a46 	vsub.f32	s4, s4, s12
 8028ad4:	ee31 6aa6 	vadd.f32	s12, s3, s13
 8028ad8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8028adc:	ed8e 6a00 	vstr	s12, [lr]
 8028ae0:	edd0 8a01 	vldr	s17, [r0, #4]
 8028ae4:	ed95 9a01 	vldr	s18, [r5, #4]
 8028ae8:	edd1 2a00 	vldr	s5, [r1]
 8028aec:	ed97 7a00 	vldr	s14, [r7]
 8028af0:	edd4 0a01 	vldr	s1, [r4, #4]
 8028af4:	ed96 6a01 	vldr	s12, [r6, #4]
 8028af8:	edd2 5a00 	vldr	s11, [r2]
 8028afc:	ee73 3ac5 	vsub.f32	s7, s7, s10
 8028b00:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028b04:	ee39 5a62 	vsub.f32	s10, s18, s5
 8028b08:	ee78 9ac7 	vsub.f32	s19, s17, s14
 8028b0c:	ee38 4a44 	vsub.f32	s8, s16, s8
 8028b10:	ee38 7a87 	vadd.f32	s14, s17, s14
 8028b14:	ee30 8aa5 	vadd.f32	s16, s1, s11
 8028b18:	ee79 2a22 	vadd.f32	s5, s18, s5
 8028b1c:	ee75 8a69 	vsub.f32	s17, s10, s19
 8028b20:	ee32 9a27 	vadd.f32	s18, s4, s15
 8028b24:	ee35 5a29 	vadd.f32	s10, s10, s19
 8028b28:	ee72 7a67 	vsub.f32	s15, s4, s15
 8028b2c:	ee30 2a06 	vadd.f32	s4, s0, s12
 8028b30:	ee69 9a0b 	vmul.f32	s19, s18, s22
 8028b34:	ee70 5ae5 	vsub.f32	s11, s1, s11
 8028b38:	ee32 9a08 	vadd.f32	s18, s4, s16
 8028b3c:	ee68 8a8b 	vmul.f32	s17, s17, s22
 8028b40:	ee32 2a48 	vsub.f32	s4, s4, s16
 8028b44:	ee71 4a64 	vsub.f32	s9, s2, s9
 8028b48:	ee25 5a0b 	vmul.f32	s10, s10, s22
 8028b4c:	ee32 1a87 	vadd.f32	s2, s5, s14
 8028b50:	ee67 7a8b 	vmul.f32	s15, s15, s22
 8028b54:	ee72 2ac7 	vsub.f32	s5, s5, s14
 8028b58:	ee30 6a46 	vsub.f32	s12, s0, s12
 8028b5c:	ee73 0a29 	vadd.f32	s1, s6, s19
 8028b60:	ee36 0a28 	vadd.f32	s0, s12, s17
 8028b64:	ee33 3a69 	vsub.f32	s6, s6, s19
 8028b68:	ee32 7a64 	vsub.f32	s14, s4, s9
 8028b6c:	ee73 9aa7 	vadd.f32	s19, s7, s15
 8028b70:	ee36 6a68 	vsub.f32	s12, s12, s17
 8028b74:	ee73 7ae7 	vsub.f32	s15, s7, s15
 8028b78:	ee75 8a85 	vadd.f32	s17, s11, s10
 8028b7c:	ee74 3a22 	vadd.f32	s7, s8, s5
 8028b80:	ee35 5ac5 	vsub.f32	s10, s11, s10
 8028b84:	ee71 6ae6 	vsub.f32	s13, s3, s13
 8028b88:	ee79 1a41 	vsub.f32	s3, s18, s2
 8028b8c:	ee39 8aa8 	vadd.f32	s16, s19, s17
 8028b90:	ee76 5a43 	vsub.f32	s11, s12, s6
 8028b94:	ee74 2a62 	vsub.f32	s5, s8, s5
 8028b98:	ee72 4a24 	vadd.f32	s9, s4, s9
 8028b9c:	ee30 4a60 	vsub.f32	s8, s0, s1
 8028ba0:	ee79 8ae8 	vsub.f32	s17, s19, s17
 8028ba4:	ee30 0a20 	vadd.f32	s0, s0, s1
 8028ba8:	ee77 9a85 	vadd.f32	s19, s15, s10
 8028bac:	ee36 6a03 	vadd.f32	s12, s12, s6
 8028bb0:	ee77 7ac5 	vsub.f32	s15, s15, s10
 8028bb4:	ee2e 2a21 	vmul.f32	s4, s28, s3
 8028bb8:	ee2e 5a26 	vmul.f32	s10, s28, s13
 8028bbc:	ee6f 0a23 	vmul.f32	s1, s30, s7
 8028bc0:	ee2a 3a21 	vmul.f32	s6, s20, s3
 8028bc4:	ee39 1a01 	vadd.f32	s2, s18, s2
 8028bc8:	ee6a 6a26 	vmul.f32	s13, s20, s13
 8028bcc:	ee2b 9a87 	vmul.f32	s18, s23, s14
 8028bd0:	ee6b 3aa3 	vmul.f32	s7, s23, s7
 8028bd4:	ee2f 7a07 	vmul.f32	s14, s30, s14
 8028bd8:	ee6f 1a84 	vmul.f32	s3, s31, s8
 8028bdc:	ee35 3a03 	vadd.f32	s6, s10, s6
 8028be0:	ee72 6a66 	vsub.f32	s13, s4, s13
 8028be4:	ee2c 5a04 	vmul.f32	s10, s24, s8
 8028be8:	ee2f 2a88 	vmul.f32	s4, s31, s16
 8028bec:	ed9d 4a02 	vldr	s8, [sp, #8]
 8028bf0:	ed8e 1a01 	vstr	s2, [lr, #4]
 8028bf4:	ee77 3a63 	vsub.f32	s7, s14, s7
 8028bf8:	ee2c 8a08 	vmul.f32	s16, s24, s16
 8028bfc:	ed9d 7a01 	vldr	s14, [sp, #4]
 8028c00:	ed86 3a00 	vstr	s6, [r6]
 8028c04:	ee30 9a89 	vadd.f32	s18, s1, s18
 8028c08:	ee32 2a05 	vadd.f32	s4, s4, s10
 8028c0c:	ee6d 0a22 	vmul.f32	s1, s26, s5
 8028c10:	ee31 8ac8 	vsub.f32	s16, s3, s16
 8028c14:	ee67 2a22 	vmul.f32	s5, s14, s5
 8028c18:	ee64 1a00 	vmul.f32	s3, s8, s0
 8028c1c:	ee27 7a24 	vmul.f32	s14, s14, s9
 8028c20:	ee2c 5aa8 	vmul.f32	s10, s25, s17
 8028c24:	ee6d 4a24 	vmul.f32	s9, s26, s9
 8028c28:	ee64 8a28 	vmul.f32	s17, s8, s17
 8028c2c:	ed9d 4a00 	vldr	s8, [sp]
 8028c30:	edc6 6a01 	vstr	s13, [r6, #4]
 8028c34:	ee74 2ae2 	vsub.f32	s5, s9, s5
 8028c38:	ee6d 4aa9 	vmul.f32	s9, s27, s19
 8028c3c:	ee64 9a29 	vmul.f32	s19, s8, s19
 8028c40:	ee24 4a25 	vmul.f32	s8, s8, s11
 8028c44:	ee30 7a87 	vadd.f32	s14, s1, s14
 8028c48:	ee74 4a84 	vadd.f32	s9, s9, s8
 8028c4c:	ee6e 0aa7 	vmul.f32	s1, s29, s15
 8028c50:	ee2a 4a86 	vmul.f32	s8, s21, s12
 8028c54:	ee2c 0a80 	vmul.f32	s0, s25, s0
 8028c58:	ee6d 5aa5 	vmul.f32	s11, s27, s11
 8028c5c:	ee6a 7aa7 	vmul.f32	s15, s21, s15
 8028c60:	ee2e 6a86 	vmul.f32	s12, s29, s12
 8028c64:	ee75 1a21 	vadd.f32	s3, s10, s3
 8028c68:	ee30 0a68 	vsub.f32	s0, s0, s17
 8028c6c:	ee75 9ae9 	vsub.f32	s19, s11, s19
 8028c70:	ee70 0a84 	vadd.f32	s1, s1, s8
 8028c74:	ee36 6a67 	vsub.f32	s12, s12, s15
 8028c78:	44dc      	add	ip, fp
 8028c7a:	45e1      	cmp	r9, ip
 8028c7c:	ed84 9a00 	vstr	s18, [r4]
 8028c80:	edc4 3a01 	vstr	s7, [r4, #4]
 8028c84:	449e      	add	lr, r3
 8028c86:	ed02 7a01 	vstr	s14, [r2, #-4]
 8028c8a:	edc2 2a00 	vstr	s5, [r2]
 8028c8e:	441e      	add	r6, r3
 8028c90:	ed85 2a00 	vstr	s4, [r5]
 8028c94:	ed85 8a01 	vstr	s16, [r5, #4]
 8028c98:	441c      	add	r4, r3
 8028c9a:	ed47 1a01 	vstr	s3, [r7, #-4]
 8028c9e:	ed87 0a00 	vstr	s0, [r7]
 8028ca2:	441a      	add	r2, r3
 8028ca4:	ed41 4a01 	vstr	s9, [r1, #-4]
 8028ca8:	edc1 9a00 	vstr	s19, [r1]
 8028cac:	441d      	add	r5, r3
 8028cae:	edc0 0a00 	vstr	s1, [r0]
 8028cb2:	441f      	add	r7, r3
 8028cb4:	ed80 6a01 	vstr	s12, [r0, #4]
 8028cb8:	4419      	add	r1, r3
 8028cba:	4418      	add	r0, r3
 8028cbc:	f63f aeea 	bhi.w	8028a94 <arm_radix8_butterfly_f32+0x334>
 8028cc0:	9a03      	ldr	r2, [sp, #12]
 8028cc2:	990d      	ldr	r1, [sp, #52]	; 0x34
 8028cc4:	440a      	add	r2, r1
 8028cc6:	9203      	str	r2, [sp, #12]
 8028cc8:	990e      	ldr	r1, [sp, #56]	; 0x38
 8028cca:	9a05      	ldr	r2, [sp, #20]
 8028ccc:	440a      	add	r2, r1
 8028cce:	9205      	str	r2, [sp, #20]
 8028cd0:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8028cd2:	9a04      	ldr	r2, [sp, #16]
 8028cd4:	440a      	add	r2, r1
 8028cd6:	9204      	str	r2, [sp, #16]
 8028cd8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8028cda:	9a06      	ldr	r2, [sp, #24]
 8028cdc:	440a      	add	r2, r1
 8028cde:	9206      	str	r2, [sp, #24]
 8028ce0:	9911      	ldr	r1, [sp, #68]	; 0x44
 8028ce2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8028ce4:	440a      	add	r2, r1
 8028ce6:	9209      	str	r2, [sp, #36]	; 0x24
 8028ce8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8028cea:	9a08      	ldr	r2, [sp, #32]
 8028cec:	440a      	add	r2, r1
 8028cee:	9208      	str	r2, [sp, #32]
 8028cf0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8028cf2:	9a07      	ldr	r2, [sp, #28]
 8028cf4:	440a      	add	r2, r1
 8028cf6:	9207      	str	r2, [sp, #28]
 8028cf8:	990c      	ldr	r1, [sp, #48]	; 0x30
 8028cfa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028cfc:	f108 0801 	add.w	r8, r8, #1
 8028d00:	3208      	adds	r2, #8
 8028d02:	4588      	cmp	r8, r1
 8028d04:	920a      	str	r2, [sp, #40]	; 0x28
 8028d06:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8028d08:	f47f ae75 	bne.w	80289f6 <arm_radix8_butterfly_f32+0x296>
 8028d0c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8028d10:	9300      	str	r3, [sp, #0]
 8028d12:	46c3      	mov	fp, r8
 8028d14:	f8dd e06c 	ldr.w	lr, [sp, #108]	; 0x6c
 8028d18:	e532      	b.n	8028780 <arm_radix8_butterfly_f32+0x20>
 8028d1a:	b01d      	add	sp, #116	; 0x74
 8028d1c:	ecbd 8b10 	vpop	{d8-d15}
 8028d20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028d24 <__aeabi_atexit>:
 8028d24:	460b      	mov	r3, r1
 8028d26:	4601      	mov	r1, r0
 8028d28:	4618      	mov	r0, r3
 8028d2a:	f000 bef3 	b.w	8029b14 <__cxa_atexit>

08028d2e <_ZdlPvj>:
 8028d2e:	f000 b812 	b.w	8028d56 <_ZdlPv>

08028d32 <__cxa_guard_acquire>:
 8028d32:	6803      	ldr	r3, [r0, #0]
 8028d34:	07db      	lsls	r3, r3, #31
 8028d36:	d406      	bmi.n	8028d46 <__cxa_guard_acquire+0x14>
 8028d38:	7843      	ldrb	r3, [r0, #1]
 8028d3a:	b103      	cbz	r3, 8028d3e <__cxa_guard_acquire+0xc>
 8028d3c:	deff      	udf	#255	; 0xff
 8028d3e:	2301      	movs	r3, #1
 8028d40:	7043      	strb	r3, [r0, #1]
 8028d42:	4618      	mov	r0, r3
 8028d44:	4770      	bx	lr
 8028d46:	2000      	movs	r0, #0
 8028d48:	4770      	bx	lr

08028d4a <__cxa_guard_release>:
 8028d4a:	2301      	movs	r3, #1
 8028d4c:	6003      	str	r3, [r0, #0]
 8028d4e:	4770      	bx	lr

08028d50 <__cxa_pure_virtual>:
 8028d50:	b508      	push	{r3, lr}
 8028d52:	f000 f80f 	bl	8028d74 <_ZSt9terminatev>

08028d56 <_ZdlPv>:
 8028d56:	f000 be29 	b.w	80299ac <free>

08028d5a <_ZN10__cxxabiv111__terminateEPFvvE>:
 8028d5a:	b508      	push	{r3, lr}
 8028d5c:	4780      	blx	r0
 8028d5e:	f000 fdf1 	bl	8029944 <abort>
	...

08028d64 <_ZSt13get_terminatev>:
 8028d64:	4b02      	ldr	r3, [pc, #8]	; (8028d70 <_ZSt13get_terminatev+0xc>)
 8028d66:	6818      	ldr	r0, [r3, #0]
 8028d68:	f3bf 8f5b 	dmb	ish
 8028d6c:	4770      	bx	lr
 8028d6e:	bf00      	nop
 8028d70:	20000104 	.word	0x20000104

08028d74 <_ZSt9terminatev>:
 8028d74:	b508      	push	{r3, lr}
 8028d76:	f7ff fff5 	bl	8028d64 <_ZSt13get_terminatev>
 8028d7a:	f7ff ffee 	bl	8028d5a <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08028d80 <sqrtf>:
 8028d80:	b508      	push	{r3, lr}
 8028d82:	ed2d 8b02 	vpush	{d8}
 8028d86:	eeb0 8a40 	vmov.f32	s16, s0
 8028d8a:	f000 f8a1 	bl	8028ed0 <__ieee754_sqrtf>
 8028d8e:	eeb4 8a48 	vcmp.f32	s16, s16
 8028d92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028d96:	d60c      	bvs.n	8028db2 <sqrtf+0x32>
 8028d98:	eddf 8a07 	vldr	s17, [pc, #28]	; 8028db8 <sqrtf+0x38>
 8028d9c:	eeb4 8ae8 	vcmpe.f32	s16, s17
 8028da0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028da4:	d505      	bpl.n	8028db2 <sqrtf+0x32>
 8028da6:	f001 f8d3 	bl	8029f50 <__errno>
 8028daa:	ee88 0aa8 	vdiv.f32	s0, s17, s17
 8028dae:	2321      	movs	r3, #33	; 0x21
 8028db0:	6003      	str	r3, [r0, #0]
 8028db2:	ecbd 8b02 	vpop	{d8}
 8028db6:	bd08      	pop	{r3, pc}
 8028db8:	00000000 	.word	0x00000000

08028dbc <cosf>:
 8028dbc:	ee10 3a10 	vmov	r3, s0
 8028dc0:	b507      	push	{r0, r1, r2, lr}
 8028dc2:	4a1e      	ldr	r2, [pc, #120]	; (8028e3c <cosf+0x80>)
 8028dc4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028dc8:	4293      	cmp	r3, r2
 8028dca:	dc06      	bgt.n	8028dda <cosf+0x1e>
 8028dcc:	eddf 0a1c 	vldr	s1, [pc, #112]	; 8028e40 <cosf+0x84>
 8028dd0:	b003      	add	sp, #12
 8028dd2:	f85d eb04 	ldr.w	lr, [sp], #4
 8028dd6:	f000 b903 	b.w	8028fe0 <__kernel_cosf>
 8028dda:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8028dde:	db04      	blt.n	8028dea <cosf+0x2e>
 8028de0:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028de4:	b003      	add	sp, #12
 8028de6:	f85d fb04 	ldr.w	pc, [sp], #4
 8028dea:	4668      	mov	r0, sp
 8028dec:	f000 f99e 	bl	802912c <__ieee754_rem_pio2f>
 8028df0:	f000 0003 	and.w	r0, r0, #3
 8028df4:	2801      	cmp	r0, #1
 8028df6:	d009      	beq.n	8028e0c <cosf+0x50>
 8028df8:	2802      	cmp	r0, #2
 8028dfa:	d010      	beq.n	8028e1e <cosf+0x62>
 8028dfc:	b9b0      	cbnz	r0, 8028e2c <cosf+0x70>
 8028dfe:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e02:	ed9d 0a00 	vldr	s0, [sp]
 8028e06:	f000 f8eb 	bl	8028fe0 <__kernel_cosf>
 8028e0a:	e7eb      	b.n	8028de4 <cosf+0x28>
 8028e0c:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e10:	ed9d 0a00 	vldr	s0, [sp]
 8028e14:	f000 f942 	bl	802909c <__kernel_sinf>
 8028e18:	eeb1 0a40 	vneg.f32	s0, s0
 8028e1c:	e7e2      	b.n	8028de4 <cosf+0x28>
 8028e1e:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e22:	ed9d 0a00 	vldr	s0, [sp]
 8028e26:	f000 f8db 	bl	8028fe0 <__kernel_cosf>
 8028e2a:	e7f5      	b.n	8028e18 <cosf+0x5c>
 8028e2c:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e30:	ed9d 0a00 	vldr	s0, [sp]
 8028e34:	2001      	movs	r0, #1
 8028e36:	f000 f931 	bl	802909c <__kernel_sinf>
 8028e3a:	e7d3      	b.n	8028de4 <cosf+0x28>
 8028e3c:	3f490fd8 	.word	0x3f490fd8
 8028e40:	00000000 	.word	0x00000000

08028e44 <sinf>:
 8028e44:	ee10 3a10 	vmov	r3, s0
 8028e48:	b507      	push	{r0, r1, r2, lr}
 8028e4a:	4a1f      	ldr	r2, [pc, #124]	; (8028ec8 <sinf+0x84>)
 8028e4c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028e50:	4293      	cmp	r3, r2
 8028e52:	dc07      	bgt.n	8028e64 <sinf+0x20>
 8028e54:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8028ecc <sinf+0x88>
 8028e58:	2000      	movs	r0, #0
 8028e5a:	b003      	add	sp, #12
 8028e5c:	f85d eb04 	ldr.w	lr, [sp], #4
 8028e60:	f000 b91c 	b.w	802909c <__kernel_sinf>
 8028e64:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8028e68:	db04      	blt.n	8028e74 <sinf+0x30>
 8028e6a:	ee30 0a40 	vsub.f32	s0, s0, s0
 8028e6e:	b003      	add	sp, #12
 8028e70:	f85d fb04 	ldr.w	pc, [sp], #4
 8028e74:	4668      	mov	r0, sp
 8028e76:	f000 f959 	bl	802912c <__ieee754_rem_pio2f>
 8028e7a:	f000 0003 	and.w	r0, r0, #3
 8028e7e:	2801      	cmp	r0, #1
 8028e80:	d00a      	beq.n	8028e98 <sinf+0x54>
 8028e82:	2802      	cmp	r0, #2
 8028e84:	d00f      	beq.n	8028ea6 <sinf+0x62>
 8028e86:	b9c0      	cbnz	r0, 8028eba <sinf+0x76>
 8028e88:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e8c:	ed9d 0a00 	vldr	s0, [sp]
 8028e90:	2001      	movs	r0, #1
 8028e92:	f000 f903 	bl	802909c <__kernel_sinf>
 8028e96:	e7ea      	b.n	8028e6e <sinf+0x2a>
 8028e98:	eddd 0a01 	vldr	s1, [sp, #4]
 8028e9c:	ed9d 0a00 	vldr	s0, [sp]
 8028ea0:	f000 f89e 	bl	8028fe0 <__kernel_cosf>
 8028ea4:	e7e3      	b.n	8028e6e <sinf+0x2a>
 8028ea6:	eddd 0a01 	vldr	s1, [sp, #4]
 8028eaa:	ed9d 0a00 	vldr	s0, [sp]
 8028eae:	2001      	movs	r0, #1
 8028eb0:	f000 f8f4 	bl	802909c <__kernel_sinf>
 8028eb4:	eeb1 0a40 	vneg.f32	s0, s0
 8028eb8:	e7d9      	b.n	8028e6e <sinf+0x2a>
 8028eba:	eddd 0a01 	vldr	s1, [sp, #4]
 8028ebe:	ed9d 0a00 	vldr	s0, [sp]
 8028ec2:	f000 f88d 	bl	8028fe0 <__kernel_cosf>
 8028ec6:	e7f5      	b.n	8028eb4 <sinf+0x70>
 8028ec8:	3f490fd8 	.word	0x3f490fd8
 8028ecc:	00000000 	.word	0x00000000

08028ed0 <__ieee754_sqrtf>:
 8028ed0:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8028ed4:	4770      	bx	lr
	...

08028ed8 <ceilf>:
 8028ed8:	ee10 3a10 	vmov	r3, s0
 8028edc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8028ee0:	3a7f      	subs	r2, #127	; 0x7f
 8028ee2:	2a16      	cmp	r2, #22
 8028ee4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8028ee8:	dc2a      	bgt.n	8028f40 <ceilf+0x68>
 8028eea:	2a00      	cmp	r2, #0
 8028eec:	da11      	bge.n	8028f12 <ceilf+0x3a>
 8028eee:	eddf 7a19 	vldr	s15, [pc, #100]	; 8028f54 <ceilf+0x7c>
 8028ef2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028ef6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028efa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028efe:	dd05      	ble.n	8028f0c <ceilf+0x34>
 8028f00:	2b00      	cmp	r3, #0
 8028f02:	db23      	blt.n	8028f4c <ceilf+0x74>
 8028f04:	2900      	cmp	r1, #0
 8028f06:	bf18      	it	ne
 8028f08:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8028f0c:	ee00 3a10 	vmov	s0, r3
 8028f10:	4770      	bx	lr
 8028f12:	4911      	ldr	r1, [pc, #68]	; (8028f58 <ceilf+0x80>)
 8028f14:	4111      	asrs	r1, r2
 8028f16:	420b      	tst	r3, r1
 8028f18:	d0fa      	beq.n	8028f10 <ceilf+0x38>
 8028f1a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8028f54 <ceilf+0x7c>
 8028f1e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028f22:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028f26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f2a:	ddef      	ble.n	8028f0c <ceilf+0x34>
 8028f2c:	2b00      	cmp	r3, #0
 8028f2e:	bfc2      	ittt	gt
 8028f30:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8028f34:	fa40 f202 	asrgt.w	r2, r0, r2
 8028f38:	189b      	addgt	r3, r3, r2
 8028f3a:	ea23 0301 	bic.w	r3, r3, r1
 8028f3e:	e7e5      	b.n	8028f0c <ceilf+0x34>
 8028f40:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8028f44:	d3e4      	bcc.n	8028f10 <ceilf+0x38>
 8028f46:	ee30 0a00 	vadd.f32	s0, s0, s0
 8028f4a:	4770      	bx	lr
 8028f4c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8028f50:	e7dc      	b.n	8028f0c <ceilf+0x34>
 8028f52:	bf00      	nop
 8028f54:	7149f2ca 	.word	0x7149f2ca
 8028f58:	007fffff 	.word	0x007fffff

08028f5c <floorf>:
 8028f5c:	ee10 3a10 	vmov	r3, s0
 8028f60:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8028f64:	3a7f      	subs	r2, #127	; 0x7f
 8028f66:	2a16      	cmp	r2, #22
 8028f68:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8028f6c:	dc2a      	bgt.n	8028fc4 <floorf+0x68>
 8028f6e:	2a00      	cmp	r2, #0
 8028f70:	da11      	bge.n	8028f96 <floorf+0x3a>
 8028f72:	eddf 7a18 	vldr	s15, [pc, #96]	; 8028fd4 <floorf+0x78>
 8028f76:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028f7a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028f82:	dd05      	ble.n	8028f90 <floorf+0x34>
 8028f84:	2b00      	cmp	r3, #0
 8028f86:	da23      	bge.n	8028fd0 <floorf+0x74>
 8028f88:	4a13      	ldr	r2, [pc, #76]	; (8028fd8 <floorf+0x7c>)
 8028f8a:	2900      	cmp	r1, #0
 8028f8c:	bf18      	it	ne
 8028f8e:	4613      	movne	r3, r2
 8028f90:	ee00 3a10 	vmov	s0, r3
 8028f94:	4770      	bx	lr
 8028f96:	4911      	ldr	r1, [pc, #68]	; (8028fdc <floorf+0x80>)
 8028f98:	4111      	asrs	r1, r2
 8028f9a:	420b      	tst	r3, r1
 8028f9c:	d0fa      	beq.n	8028f94 <floorf+0x38>
 8028f9e:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8028fd4 <floorf+0x78>
 8028fa2:	ee30 0a27 	vadd.f32	s0, s0, s15
 8028fa6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8028faa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8028fae:	ddef      	ble.n	8028f90 <floorf+0x34>
 8028fb0:	2b00      	cmp	r3, #0
 8028fb2:	bfbe      	ittt	lt
 8028fb4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8028fb8:	fa40 f202 	asrlt.w	r2, r0, r2
 8028fbc:	189b      	addlt	r3, r3, r2
 8028fbe:	ea23 0301 	bic.w	r3, r3, r1
 8028fc2:	e7e5      	b.n	8028f90 <floorf+0x34>
 8028fc4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8028fc8:	d3e4      	bcc.n	8028f94 <floorf+0x38>
 8028fca:	ee30 0a00 	vadd.f32	s0, s0, s0
 8028fce:	4770      	bx	lr
 8028fd0:	2300      	movs	r3, #0
 8028fd2:	e7dd      	b.n	8028f90 <floorf+0x34>
 8028fd4:	7149f2ca 	.word	0x7149f2ca
 8028fd8:	bf800000 	.word	0xbf800000
 8028fdc:	007fffff 	.word	0x007fffff

08028fe0 <__kernel_cosf>:
 8028fe0:	ee10 3a10 	vmov	r3, s0
 8028fe4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8028fe8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8028fec:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8028ff0:	da05      	bge.n	8028ffe <__kernel_cosf+0x1e>
 8028ff2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8028ff6:	ee17 2a90 	vmov	r2, s15
 8028ffa:	2a00      	cmp	r2, #0
 8028ffc:	d03b      	beq.n	8029076 <__kernel_cosf+0x96>
 8028ffe:	ee20 7a00 	vmul.f32	s14, s0, s0
 8029002:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802907c <__kernel_cosf+0x9c>
 8029006:	ed9f 6a1e 	vldr	s12, [pc, #120]	; 8029080 <__kernel_cosf+0xa0>
 802900a:	4a1e      	ldr	r2, [pc, #120]	; (8029084 <__kernel_cosf+0xa4>)
 802900c:	eea7 6a27 	vfma.f32	s12, s14, s15
 8029010:	4293      	cmp	r3, r2
 8029012:	eddf 7a1d 	vldr	s15, [pc, #116]	; 8029088 <__kernel_cosf+0xa8>
 8029016:	eee6 7a07 	vfma.f32	s15, s12, s14
 802901a:	ed9f 6a1c 	vldr	s12, [pc, #112]	; 802908c <__kernel_cosf+0xac>
 802901e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029022:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8029090 <__kernel_cosf+0xb0>
 8029026:	eee6 7a07 	vfma.f32	s15, s12, s14
 802902a:	ed9f 6a1a 	vldr	s12, [pc, #104]	; 8029094 <__kernel_cosf+0xb4>
 802902e:	eea7 6a87 	vfma.f32	s12, s15, s14
 8029032:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 8029036:	ee26 6a07 	vmul.f32	s12, s12, s14
 802903a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 802903e:	eee7 0a06 	vfma.f32	s1, s14, s12
 8029042:	ee67 7a27 	vmul.f32	s15, s14, s15
 8029046:	dc04      	bgt.n	8029052 <__kernel_cosf+0x72>
 8029048:	ee77 7ae0 	vsub.f32	s15, s15, s1
 802904c:	ee36 0ae7 	vsub.f32	s0, s13, s15
 8029050:	4770      	bx	lr
 8029052:	4a11      	ldr	r2, [pc, #68]	; (8029098 <__kernel_cosf+0xb8>)
 8029054:	4293      	cmp	r3, r2
 8029056:	bfda      	itte	le
 8029058:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 802905c:	ee07 3a10 	vmovle	s14, r3
 8029060:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 8029064:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029068:	ee36 0ac7 	vsub.f32	s0, s13, s14
 802906c:	ee77 7ae0 	vsub.f32	s15, s15, s1
 8029070:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029074:	4770      	bx	lr
 8029076:	eeb0 0a66 	vmov.f32	s0, s13
 802907a:	4770      	bx	lr
 802907c:	ad47d74e 	.word	0xad47d74e
 8029080:	310f74f6 	.word	0x310f74f6
 8029084:	3e999999 	.word	0x3e999999
 8029088:	b493f27c 	.word	0xb493f27c
 802908c:	37d00d01 	.word	0x37d00d01
 8029090:	bab60b61 	.word	0xbab60b61
 8029094:	3d2aaaab 	.word	0x3d2aaaab
 8029098:	3f480000 	.word	0x3f480000

0802909c <__kernel_sinf>:
 802909c:	ee10 3a10 	vmov	r3, s0
 80290a0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80290a4:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 80290a8:	da04      	bge.n	80290b4 <__kernel_sinf+0x18>
 80290aa:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80290ae:	ee17 3a90 	vmov	r3, s15
 80290b2:	b35b      	cbz	r3, 802910c <__kernel_sinf+0x70>
 80290b4:	ee20 7a00 	vmul.f32	s14, s0, s0
 80290b8:	eddf 7a15 	vldr	s15, [pc, #84]	; 8029110 <__kernel_sinf+0x74>
 80290bc:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8029114 <__kernel_sinf+0x78>
 80290c0:	eea7 6a27 	vfma.f32	s12, s14, s15
 80290c4:	eddf 7a14 	vldr	s15, [pc, #80]	; 8029118 <__kernel_sinf+0x7c>
 80290c8:	eee6 7a07 	vfma.f32	s15, s12, s14
 80290cc:	ed9f 6a13 	vldr	s12, [pc, #76]	; 802911c <__kernel_sinf+0x80>
 80290d0:	eea7 6a87 	vfma.f32	s12, s15, s14
 80290d4:	eddf 7a12 	vldr	s15, [pc, #72]	; 8029120 <__kernel_sinf+0x84>
 80290d8:	ee60 6a07 	vmul.f32	s13, s0, s14
 80290dc:	eee6 7a07 	vfma.f32	s15, s12, s14
 80290e0:	b930      	cbnz	r0, 80290f0 <__kernel_sinf+0x54>
 80290e2:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8029124 <__kernel_sinf+0x88>
 80290e6:	eea7 6a27 	vfma.f32	s12, s14, s15
 80290ea:	eea6 0a26 	vfma.f32	s0, s12, s13
 80290ee:	4770      	bx	lr
 80290f0:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 80290f4:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 80290f8:	eee0 7a86 	vfma.f32	s15, s1, s12
 80290fc:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8029100:	eddf 7a09 	vldr	s15, [pc, #36]	; 8029128 <__kernel_sinf+0x8c>
 8029104:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8029108:	ee30 0a60 	vsub.f32	s0, s0, s1
 802910c:	4770      	bx	lr
 802910e:	bf00      	nop
 8029110:	2f2ec9d3 	.word	0x2f2ec9d3
 8029114:	b2d72f34 	.word	0xb2d72f34
 8029118:	3638ef1b 	.word	0x3638ef1b
 802911c:	b9500d01 	.word	0xb9500d01
 8029120:	3c088889 	.word	0x3c088889
 8029124:	be2aaaab 	.word	0xbe2aaaab
 8029128:	3e2aaaab 	.word	0x3e2aaaab

0802912c <__ieee754_rem_pio2f>:
 802912c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802912e:	ee10 6a10 	vmov	r6, s0
 8029132:	4b86      	ldr	r3, [pc, #536]	; (802934c <__ieee754_rem_pio2f+0x220>)
 8029134:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8029138:	429d      	cmp	r5, r3
 802913a:	b087      	sub	sp, #28
 802913c:	4604      	mov	r4, r0
 802913e:	dc05      	bgt.n	802914c <__ieee754_rem_pio2f+0x20>
 8029140:	2300      	movs	r3, #0
 8029142:	ed80 0a00 	vstr	s0, [r0]
 8029146:	6043      	str	r3, [r0, #4]
 8029148:	2000      	movs	r0, #0
 802914a:	e020      	b.n	802918e <__ieee754_rem_pio2f+0x62>
 802914c:	4b80      	ldr	r3, [pc, #512]	; (8029350 <__ieee754_rem_pio2f+0x224>)
 802914e:	429d      	cmp	r5, r3
 8029150:	dc38      	bgt.n	80291c4 <__ieee754_rem_pio2f+0x98>
 8029152:	2e00      	cmp	r6, #0
 8029154:	ed9f 7a7f 	vldr	s14, [pc, #508]	; 8029354 <__ieee754_rem_pio2f+0x228>
 8029158:	4b7f      	ldr	r3, [pc, #508]	; (8029358 <__ieee754_rem_pio2f+0x22c>)
 802915a:	f025 050f 	bic.w	r5, r5, #15
 802915e:	dd18      	ble.n	8029192 <__ieee754_rem_pio2f+0x66>
 8029160:	429d      	cmp	r5, r3
 8029162:	ee70 7a47 	vsub.f32	s15, s0, s14
 8029166:	bf09      	itett	eq
 8029168:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 802935c <__ieee754_rem_pio2f+0x230>
 802916c:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 8029360 <__ieee754_rem_pio2f+0x234>
 8029170:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 8029174:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 8029364 <__ieee754_rem_pio2f+0x238>
 8029178:	ee77 6ac7 	vsub.f32	s13, s15, s14
 802917c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8029180:	edc0 6a00 	vstr	s13, [r0]
 8029184:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029188:	edc0 7a01 	vstr	s15, [r0, #4]
 802918c:	2001      	movs	r0, #1
 802918e:	b007      	add	sp, #28
 8029190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8029192:	429d      	cmp	r5, r3
 8029194:	ee70 7a07 	vadd.f32	s15, s0, s14
 8029198:	bf09      	itett	eq
 802919a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 802935c <__ieee754_rem_pio2f+0x230>
 802919e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 8029360 <__ieee754_rem_pio2f+0x234>
 80291a2:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 80291a6:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 8029364 <__ieee754_rem_pio2f+0x238>
 80291aa:	ee77 6a87 	vadd.f32	s13, s15, s14
 80291ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80291b2:	edc0 6a00 	vstr	s13, [r0]
 80291b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80291ba:	edc0 7a01 	vstr	s15, [r0, #4]
 80291be:	f04f 30ff 	mov.w	r0, #4294967295
 80291c2:	e7e4      	b.n	802918e <__ieee754_rem_pio2f+0x62>
 80291c4:	4b68      	ldr	r3, [pc, #416]	; (8029368 <__ieee754_rem_pio2f+0x23c>)
 80291c6:	429d      	cmp	r5, r3
 80291c8:	dc71      	bgt.n	80292ae <__ieee754_rem_pio2f+0x182>
 80291ca:	f000 f8db 	bl	8029384 <fabsf>
 80291ce:	ed9f 7a67 	vldr	s14, [pc, #412]	; 802936c <__ieee754_rem_pio2f+0x240>
 80291d2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80291d6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80291da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80291de:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80291e2:	ee17 0a90 	vmov	r0, s15
 80291e6:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029354 <__ieee754_rem_pio2f+0x228>
 80291ea:	eea7 0a67 	vfms.f32	s0, s14, s15
 80291ee:	281f      	cmp	r0, #31
 80291f0:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8029360 <__ieee754_rem_pio2f+0x234>
 80291f4:	ee67 7a27 	vmul.f32	s15, s14, s15
 80291f8:	eeb1 6a47 	vneg.f32	s12, s14
 80291fc:	ee70 6a67 	vsub.f32	s13, s0, s15
 8029200:	ee16 2a90 	vmov	r2, s13
 8029204:	dc1c      	bgt.n	8029240 <__ieee754_rem_pio2f+0x114>
 8029206:	495a      	ldr	r1, [pc, #360]	; (8029370 <__ieee754_rem_pio2f+0x244>)
 8029208:	1e47      	subs	r7, r0, #1
 802920a:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802920e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8029212:	428b      	cmp	r3, r1
 8029214:	d014      	beq.n	8029240 <__ieee754_rem_pio2f+0x114>
 8029216:	6022      	str	r2, [r4, #0]
 8029218:	ed94 7a00 	vldr	s14, [r4]
 802921c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8029220:	2e00      	cmp	r6, #0
 8029222:	ee30 0a67 	vsub.f32	s0, s0, s15
 8029226:	ed84 0a01 	vstr	s0, [r4, #4]
 802922a:	dab0      	bge.n	802918e <__ieee754_rem_pio2f+0x62>
 802922c:	eeb1 7a47 	vneg.f32	s14, s14
 8029230:	eeb1 0a40 	vneg.f32	s0, s0
 8029234:	ed84 7a00 	vstr	s14, [r4]
 8029238:	ed84 0a01 	vstr	s0, [r4, #4]
 802923c:	4240      	negs	r0, r0
 802923e:	e7a6      	b.n	802918e <__ieee754_rem_pio2f+0x62>
 8029240:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029244:	ebc1 51d5 	rsb	r1, r1, r5, lsr #23
 8029248:	2908      	cmp	r1, #8
 802924a:	ea4f 53e5 	mov.w	r3, r5, asr #23
 802924e:	dde2      	ble.n	8029216 <__ieee754_rem_pio2f+0xea>
 8029250:	eddf 5a42 	vldr	s11, [pc, #264]	; 802935c <__ieee754_rem_pio2f+0x230>
 8029254:	eef0 6a40 	vmov.f32	s13, s0
 8029258:	eee6 6a25 	vfma.f32	s13, s12, s11
 802925c:	ee70 7a66 	vsub.f32	s15, s0, s13
 8029260:	eee6 7a25 	vfma.f32	s15, s12, s11
 8029264:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8029364 <__ieee754_rem_pio2f+0x238>
 8029268:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802926c:	ee76 5ae7 	vsub.f32	s11, s13, s15
 8029270:	ee15 2a90 	vmov	r2, s11
 8029274:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8029278:	1a5b      	subs	r3, r3, r1
 802927a:	2b19      	cmp	r3, #25
 802927c:	dc04      	bgt.n	8029288 <__ieee754_rem_pio2f+0x15c>
 802927e:	edc4 5a00 	vstr	s11, [r4]
 8029282:	eeb0 0a66 	vmov.f32	s0, s13
 8029286:	e7c7      	b.n	8029218 <__ieee754_rem_pio2f+0xec>
 8029288:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8029374 <__ieee754_rem_pio2f+0x248>
 802928c:	eeb0 0a66 	vmov.f32	s0, s13
 8029290:	eea6 0a25 	vfma.f32	s0, s12, s11
 8029294:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8029298:	eddf 6a37 	vldr	s13, [pc, #220]	; 8029378 <__ieee754_rem_pio2f+0x24c>
 802929c:	eee6 7a25 	vfma.f32	s15, s12, s11
 80292a0:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80292a4:	ee30 7a67 	vsub.f32	s14, s0, s15
 80292a8:	ed84 7a00 	vstr	s14, [r4]
 80292ac:	e7b4      	b.n	8029218 <__ieee754_rem_pio2f+0xec>
 80292ae:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80292b2:	db06      	blt.n	80292c2 <__ieee754_rem_pio2f+0x196>
 80292b4:	ee70 7a40 	vsub.f32	s15, s0, s0
 80292b8:	edc0 7a01 	vstr	s15, [r0, #4]
 80292bc:	edc0 7a00 	vstr	s15, [r0]
 80292c0:	e742      	b.n	8029148 <__ieee754_rem_pio2f+0x1c>
 80292c2:	15ea      	asrs	r2, r5, #23
 80292c4:	3a86      	subs	r2, #134	; 0x86
 80292c6:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80292ca:	ee07 3a90 	vmov	s15, r3
 80292ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80292d2:	eddf 6a2a 	vldr	s13, [pc, #168]	; 802937c <__ieee754_rem_pio2f+0x250>
 80292d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80292da:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80292de:	ed8d 7a03 	vstr	s14, [sp, #12]
 80292e2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80292e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80292ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80292ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80292f2:	ed8d 7a04 	vstr	s14, [sp, #16]
 80292f6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80292fa:	eef5 7a40 	vcmp.f32	s15, #0.0
 80292fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029302:	edcd 7a05 	vstr	s15, [sp, #20]
 8029306:	d11e      	bne.n	8029346 <__ieee754_rem_pio2f+0x21a>
 8029308:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802930c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029310:	bf14      	ite	ne
 8029312:	2302      	movne	r3, #2
 8029314:	2301      	moveq	r3, #1
 8029316:	491a      	ldr	r1, [pc, #104]	; (8029380 <__ieee754_rem_pio2f+0x254>)
 8029318:	9101      	str	r1, [sp, #4]
 802931a:	2102      	movs	r1, #2
 802931c:	9100      	str	r1, [sp, #0]
 802931e:	a803      	add	r0, sp, #12
 8029320:	4621      	mov	r1, r4
 8029322:	f000 f89d 	bl	8029460 <__kernel_rem_pio2f>
 8029326:	2e00      	cmp	r6, #0
 8029328:	f6bf af31 	bge.w	802918e <__ieee754_rem_pio2f+0x62>
 802932c:	edd4 7a00 	vldr	s15, [r4]
 8029330:	eef1 7a67 	vneg.f32	s15, s15
 8029334:	edc4 7a00 	vstr	s15, [r4]
 8029338:	edd4 7a01 	vldr	s15, [r4, #4]
 802933c:	eef1 7a67 	vneg.f32	s15, s15
 8029340:	edc4 7a01 	vstr	s15, [r4, #4]
 8029344:	e77a      	b.n	802923c <__ieee754_rem_pio2f+0x110>
 8029346:	2303      	movs	r3, #3
 8029348:	e7e5      	b.n	8029316 <__ieee754_rem_pio2f+0x1ea>
 802934a:	bf00      	nop
 802934c:	3f490fd8 	.word	0x3f490fd8
 8029350:	4016cbe3 	.word	0x4016cbe3
 8029354:	3fc90f80 	.word	0x3fc90f80
 8029358:	3fc90fd0 	.word	0x3fc90fd0
 802935c:	37354400 	.word	0x37354400
 8029360:	37354443 	.word	0x37354443
 8029364:	2e85a308 	.word	0x2e85a308
 8029368:	43490f80 	.word	0x43490f80
 802936c:	3f22f984 	.word	0x3f22f984
 8029370:	08041b80 	.word	0x08041b80
 8029374:	2e85a300 	.word	0x2e85a300
 8029378:	248d3132 	.word	0x248d3132
 802937c:	43800000 	.word	0x43800000
 8029380:	08041c00 	.word	0x08041c00

08029384 <fabsf>:
 8029384:	ee10 3a10 	vmov	r3, s0
 8029388:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802938c:	ee00 3a10 	vmov	s0, r3
 8029390:	4770      	bx	lr
	...

08029394 <scalbnf>:
 8029394:	ee10 3a10 	vmov	r3, s0
 8029398:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 802939c:	d02b      	beq.n	80293f6 <scalbnf+0x62>
 802939e:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 80293a2:	d302      	bcc.n	80293aa <scalbnf+0x16>
 80293a4:	ee30 0a00 	vadd.f32	s0, s0, s0
 80293a8:	4770      	bx	lr
 80293aa:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 80293ae:	d123      	bne.n	80293f8 <scalbnf+0x64>
 80293b0:	4b24      	ldr	r3, [pc, #144]	; (8029444 <scalbnf+0xb0>)
 80293b2:	eddf 7a25 	vldr	s15, [pc, #148]	; 8029448 <scalbnf+0xb4>
 80293b6:	4298      	cmp	r0, r3
 80293b8:	ee20 0a27 	vmul.f32	s0, s0, s15
 80293bc:	db17      	blt.n	80293ee <scalbnf+0x5a>
 80293be:	ee10 3a10 	vmov	r3, s0
 80293c2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80293c6:	3a19      	subs	r2, #25
 80293c8:	f24c 3150 	movw	r1, #50000	; 0xc350
 80293cc:	4288      	cmp	r0, r1
 80293ce:	dd15      	ble.n	80293fc <scalbnf+0x68>
 80293d0:	eddf 7a1e 	vldr	s15, [pc, #120]	; 802944c <scalbnf+0xb8>
 80293d4:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8029450 <scalbnf+0xbc>
 80293d8:	ee10 3a10 	vmov	r3, s0
 80293dc:	eeb0 7a67 	vmov.f32	s14, s15
 80293e0:	2b00      	cmp	r3, #0
 80293e2:	bfb8      	it	lt
 80293e4:	eef0 7a66 	vmovlt.f32	s15, s13
 80293e8:	ee27 0a87 	vmul.f32	s0, s15, s14
 80293ec:	4770      	bx	lr
 80293ee:	eddf 7a19 	vldr	s15, [pc, #100]	; 8029454 <scalbnf+0xc0>
 80293f2:	ee27 0a80 	vmul.f32	s0, s15, s0
 80293f6:	4770      	bx	lr
 80293f8:	0dd2      	lsrs	r2, r2, #23
 80293fa:	e7e5      	b.n	80293c8 <scalbnf+0x34>
 80293fc:	4410      	add	r0, r2
 80293fe:	28fe      	cmp	r0, #254	; 0xfe
 8029400:	dce6      	bgt.n	80293d0 <scalbnf+0x3c>
 8029402:	2800      	cmp	r0, #0
 8029404:	dd06      	ble.n	8029414 <scalbnf+0x80>
 8029406:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 802940a:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 802940e:	ee00 3a10 	vmov	s0, r3
 8029412:	4770      	bx	lr
 8029414:	f110 0f16 	cmn.w	r0, #22
 8029418:	da09      	bge.n	802942e <scalbnf+0x9a>
 802941a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029454 <scalbnf+0xc0>
 802941e:	eddf 6a0e 	vldr	s13, [pc, #56]	; 8029458 <scalbnf+0xc4>
 8029422:	ee10 3a10 	vmov	r3, s0
 8029426:	eeb0 7a67 	vmov.f32	s14, s15
 802942a:	2b00      	cmp	r3, #0
 802942c:	e7d9      	b.n	80293e2 <scalbnf+0x4e>
 802942e:	3019      	adds	r0, #25
 8029430:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8029434:	ea43 53c0 	orr.w	r3, r3, r0, lsl #23
 8029438:	ed9f 0a08 	vldr	s0, [pc, #32]	; 802945c <scalbnf+0xc8>
 802943c:	ee07 3a90 	vmov	s15, r3
 8029440:	e7d7      	b.n	80293f2 <scalbnf+0x5e>
 8029442:	bf00      	nop
 8029444:	ffff3cb0 	.word	0xffff3cb0
 8029448:	4c000000 	.word	0x4c000000
 802944c:	7149f2ca 	.word	0x7149f2ca
 8029450:	f149f2ca 	.word	0xf149f2ca
 8029454:	0da24260 	.word	0x0da24260
 8029458:	8da24260 	.word	0x8da24260
 802945c:	33000000 	.word	0x33000000

08029460 <__kernel_rem_pio2f>:
 8029460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029464:	ed2d 8b04 	vpush	{d8-d9}
 8029468:	b0d9      	sub	sp, #356	; 0x164
 802946a:	4688      	mov	r8, r1
 802946c:	9002      	str	r0, [sp, #8]
 802946e:	49b8      	ldr	r1, [pc, #736]	; (8029750 <__kernel_rem_pio2f+0x2f0>)
 8029470:	9866      	ldr	r0, [sp, #408]	; 0x198
 8029472:	9301      	str	r3, [sp, #4]
 8029474:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8029478:	9901      	ldr	r1, [sp, #4]
 802947a:	9b67      	ldr	r3, [sp, #412]	; 0x19c
 802947c:	f101 3bff 	add.w	fp, r1, #4294967295
 8029480:	1d11      	adds	r1, r2, #4
 8029482:	db25      	blt.n	80294d0 <__kernel_rem_pio2f+0x70>
 8029484:	1ed0      	subs	r0, r2, #3
 8029486:	bf48      	it	mi
 8029488:	1d10      	addmi	r0, r2, #4
 802948a:	10c0      	asrs	r0, r0, #3
 802948c:	1c45      	adds	r5, r0, #1
 802948e:	00e9      	lsls	r1, r5, #3
 8029490:	eba0 070b 	sub.w	r7, r0, fp
 8029494:	ed9f 7ab2 	vldr	s14, [pc, #712]	; 8029760 <__kernel_rem_pio2f+0x300>
 8029498:	9103      	str	r1, [sp, #12]
 802949a:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 802949e:	eb0a 0c0b 	add.w	ip, sl, fp
 80294a2:	ae1c      	add	r6, sp, #112	; 0x70
 80294a4:	eb03 0e87 	add.w	lr, r3, r7, lsl #2
 80294a8:	2400      	movs	r4, #0
 80294aa:	4564      	cmp	r4, ip
 80294ac:	dd12      	ble.n	80294d4 <__kernel_rem_pio2f+0x74>
 80294ae:	9901      	ldr	r1, [sp, #4]
 80294b0:	ac1c      	add	r4, sp, #112	; 0x70
 80294b2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80294b6:	f50d 7988 	add.w	r9, sp, #272	; 0x110
 80294ba:	f04f 0c00 	mov.w	ip, #0
 80294be:	45d4      	cmp	ip, sl
 80294c0:	dc27      	bgt.n	8029512 <__kernel_rem_pio2f+0xb2>
 80294c2:	f8dd e008 	ldr.w	lr, [sp, #8]
 80294c6:	eddf 7aa6 	vldr	s15, [pc, #664]	; 8029760 <__kernel_rem_pio2f+0x300>
 80294ca:	4627      	mov	r7, r4
 80294cc:	2600      	movs	r6, #0
 80294ce:	e016      	b.n	80294fe <__kernel_rem_pio2f+0x9e>
 80294d0:	2000      	movs	r0, #0
 80294d2:	e7db      	b.n	802948c <__kernel_rem_pio2f+0x2c>
 80294d4:	42e7      	cmn	r7, r4
 80294d6:	bf5d      	ittte	pl
 80294d8:	f85e 1024 	ldrpl.w	r1, [lr, r4, lsl #2]
 80294dc:	ee07 1a90 	vmovpl	s15, r1
 80294e0:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80294e4:	eef0 7a47 	vmovmi.f32	s15, s14
 80294e8:	ece6 7a01 	vstmia	r6!, {s15}
 80294ec:	3401      	adds	r4, #1
 80294ee:	e7dc      	b.n	80294aa <__kernel_rem_pio2f+0x4a>
 80294f0:	ecfe 6a01 	vldmia	lr!, {s13}
 80294f4:	ed97 7a00 	vldr	s14, [r7]
 80294f8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80294fc:	3601      	adds	r6, #1
 80294fe:	455e      	cmp	r6, fp
 8029500:	f1a7 0704 	sub.w	r7, r7, #4
 8029504:	ddf4      	ble.n	80294f0 <__kernel_rem_pio2f+0x90>
 8029506:	ece9 7a01 	vstmia	r9!, {s15}
 802950a:	f10c 0c01 	add.w	ip, ip, #1
 802950e:	3404      	adds	r4, #4
 8029510:	e7d5      	b.n	80294be <__kernel_rem_pio2f+0x5e>
 8029512:	a908      	add	r1, sp, #32
 8029514:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8029518:	eb03 0380 	add.w	r3, r3, r0, lsl #2
 802951c:	eddf 8a8f 	vldr	s17, [pc, #572]	; 802975c <__kernel_rem_pio2f+0x2fc>
 8029520:	ed9f 9a8d 	vldr	s18, [pc, #564]	; 8029758 <__kernel_rem_pio2f+0x2f8>
 8029524:	9105      	str	r1, [sp, #20]
 8029526:	9304      	str	r3, [sp, #16]
 8029528:	4656      	mov	r6, sl
 802952a:	00b3      	lsls	r3, r6, #2
 802952c:	9306      	str	r3, [sp, #24]
 802952e:	ab58      	add	r3, sp, #352	; 0x160
 8029530:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029534:	ac08      	add	r4, sp, #32
 8029536:	ab44      	add	r3, sp, #272	; 0x110
 8029538:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802953c:	46a4      	mov	ip, r4
 802953e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8029542:	4637      	mov	r7, r6
 8029544:	2f00      	cmp	r7, #0
 8029546:	f1a0 0004 	sub.w	r0, r0, #4
 802954a:	dc4a      	bgt.n	80295e2 <__kernel_rem_pio2f+0x182>
 802954c:	4628      	mov	r0, r5
 802954e:	9207      	str	r2, [sp, #28]
 8029550:	f7ff ff20 	bl	8029394 <scalbnf>
 8029554:	eeb0 8a40 	vmov.f32	s16, s0
 8029558:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802955c:	ee28 0a00 	vmul.f32	s0, s16, s0
 8029560:	f7ff fcfc 	bl	8028f5c <floorf>
 8029564:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 8029568:	eea0 8a67 	vfms.f32	s16, s0, s15
 802956c:	2d00      	cmp	r5, #0
 802956e:	9a07      	ldr	r2, [sp, #28]
 8029570:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8029574:	ee17 9a90 	vmov	r9, s15
 8029578:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802957c:	ee38 8a67 	vsub.f32	s16, s16, s15
 8029580:	dd41      	ble.n	8029606 <__kernel_rem_pio2f+0x1a6>
 8029582:	f106 3cff 	add.w	ip, r6, #4294967295
 8029586:	ab08      	add	r3, sp, #32
 8029588:	f1c5 0e08 	rsb	lr, r5, #8
 802958c:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8029590:	fa47 f00e 	asr.w	r0, r7, lr
 8029594:	4481      	add	r9, r0
 8029596:	fa00 f00e 	lsl.w	r0, r0, lr
 802959a:	1a3f      	subs	r7, r7, r0
 802959c:	f1c5 0007 	rsb	r0, r5, #7
 80295a0:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 80295a4:	4107      	asrs	r7, r0
 80295a6:	2f00      	cmp	r7, #0
 80295a8:	dd3c      	ble.n	8029624 <__kernel_rem_pio2f+0x1c4>
 80295aa:	f04f 0e00 	mov.w	lr, #0
 80295ae:	f109 0901 	add.w	r9, r9, #1
 80295b2:	4671      	mov	r1, lr
 80295b4:	4576      	cmp	r6, lr
 80295b6:	dc67      	bgt.n	8029688 <__kernel_rem_pio2f+0x228>
 80295b8:	2d00      	cmp	r5, #0
 80295ba:	dd03      	ble.n	80295c4 <__kernel_rem_pio2f+0x164>
 80295bc:	2d01      	cmp	r5, #1
 80295be:	d074      	beq.n	80296aa <__kernel_rem_pio2f+0x24a>
 80295c0:	2d02      	cmp	r5, #2
 80295c2:	d07b      	beq.n	80296bc <__kernel_rem_pio2f+0x25c>
 80295c4:	2f02      	cmp	r7, #2
 80295c6:	d12d      	bne.n	8029624 <__kernel_rem_pio2f+0x1c4>
 80295c8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80295cc:	ee30 8a48 	vsub.f32	s16, s0, s16
 80295d0:	b341      	cbz	r1, 8029624 <__kernel_rem_pio2f+0x1c4>
 80295d2:	4628      	mov	r0, r5
 80295d4:	9207      	str	r2, [sp, #28]
 80295d6:	f7ff fedd 	bl	8029394 <scalbnf>
 80295da:	9a07      	ldr	r2, [sp, #28]
 80295dc:	ee38 8a40 	vsub.f32	s16, s16, s0
 80295e0:	e020      	b.n	8029624 <__kernel_rem_pio2f+0x1c4>
 80295e2:	ee60 7a28 	vmul.f32	s15, s0, s17
 80295e6:	3f01      	subs	r7, #1
 80295e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80295ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80295f0:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80295f4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80295f8:	ecac 0a01 	vstmia	ip!, {s0}
 80295fc:	ed90 0a00 	vldr	s0, [r0]
 8029600:	ee37 0a80 	vadd.f32	s0, s15, s0
 8029604:	e79e      	b.n	8029544 <__kernel_rem_pio2f+0xe4>
 8029606:	d105      	bne.n	8029614 <__kernel_rem_pio2f+0x1b4>
 8029608:	1e70      	subs	r0, r6, #1
 802960a:	ab08      	add	r3, sp, #32
 802960c:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 8029610:	11ff      	asrs	r7, r7, #7
 8029612:	e7c8      	b.n	80295a6 <__kernel_rem_pio2f+0x146>
 8029614:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8029618:	eeb4 8ae7 	vcmpe.f32	s16, s15
 802961c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8029620:	da30      	bge.n	8029684 <__kernel_rem_pio2f+0x224>
 8029622:	2700      	movs	r7, #0
 8029624:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8029628:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802962c:	f040 809a 	bne.w	8029764 <__kernel_rem_pio2f+0x304>
 8029630:	1e74      	subs	r4, r6, #1
 8029632:	46a4      	mov	ip, r4
 8029634:	2100      	movs	r1, #0
 8029636:	45d4      	cmp	ip, sl
 8029638:	da47      	bge.n	80296ca <__kernel_rem_pio2f+0x26a>
 802963a:	2900      	cmp	r1, #0
 802963c:	d063      	beq.n	8029706 <__kernel_rem_pio2f+0x2a6>
 802963e:	ab08      	add	r3, sp, #32
 8029640:	3d08      	subs	r5, #8
 8029642:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8029646:	2b00      	cmp	r3, #0
 8029648:	d07f      	beq.n	802974a <__kernel_rem_pio2f+0x2ea>
 802964a:	4628      	mov	r0, r5
 802964c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8029650:	f7ff fea0 	bl	8029394 <scalbnf>
 8029654:	1c63      	adds	r3, r4, #1
 8029656:	aa44      	add	r2, sp, #272	; 0x110
 8029658:	ed9f 7a40 	vldr	s14, [pc, #256]	; 802975c <__kernel_rem_pio2f+0x2fc>
 802965c:	0099      	lsls	r1, r3, #2
 802965e:	eb02 0283 	add.w	r2, r2, r3, lsl #2
 8029662:	4623      	mov	r3, r4
 8029664:	2b00      	cmp	r3, #0
 8029666:	f280 80ad 	bge.w	80297c4 <__kernel_rem_pio2f+0x364>
 802966a:	4623      	mov	r3, r4
 802966c:	2b00      	cmp	r3, #0
 802966e:	f2c0 80cb 	blt.w	8029808 <__kernel_rem_pio2f+0x3a8>
 8029672:	aa44      	add	r2, sp, #272	; 0x110
 8029674:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8029678:	4e36      	ldr	r6, [pc, #216]	; (8029754 <__kernel_rem_pio2f+0x2f4>)
 802967a:	eddf 7a39 	vldr	s15, [pc, #228]	; 8029760 <__kernel_rem_pio2f+0x300>
 802967e:	2000      	movs	r0, #0
 8029680:	1ae2      	subs	r2, r4, r3
 8029682:	e0b6      	b.n	80297f2 <__kernel_rem_pio2f+0x392>
 8029684:	2702      	movs	r7, #2
 8029686:	e790      	b.n	80295aa <__kernel_rem_pio2f+0x14a>
 8029688:	6820      	ldr	r0, [r4, #0]
 802968a:	b949      	cbnz	r1, 80296a0 <__kernel_rem_pio2f+0x240>
 802968c:	b118      	cbz	r0, 8029696 <__kernel_rem_pio2f+0x236>
 802968e:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8029692:	6020      	str	r0, [r4, #0]
 8029694:	2001      	movs	r0, #1
 8029696:	f10e 0e01 	add.w	lr, lr, #1
 802969a:	3404      	adds	r4, #4
 802969c:	4601      	mov	r1, r0
 802969e:	e789      	b.n	80295b4 <__kernel_rem_pio2f+0x154>
 80296a0:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 80296a4:	6020      	str	r0, [r4, #0]
 80296a6:	4608      	mov	r0, r1
 80296a8:	e7f5      	b.n	8029696 <__kernel_rem_pio2f+0x236>
 80296aa:	1e74      	subs	r4, r6, #1
 80296ac:	ab08      	add	r3, sp, #32
 80296ae:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80296b2:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80296b6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 80296ba:	e783      	b.n	80295c4 <__kernel_rem_pio2f+0x164>
 80296bc:	1e74      	subs	r4, r6, #1
 80296be:	ab08      	add	r3, sp, #32
 80296c0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80296c4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80296c8:	e7f5      	b.n	80296b6 <__kernel_rem_pio2f+0x256>
 80296ca:	ab08      	add	r3, sp, #32
 80296cc:	f853 002c 	ldr.w	r0, [r3, ip, lsl #2]
 80296d0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80296d4:	4301      	orrs	r1, r0
 80296d6:	e7ae      	b.n	8029636 <__kernel_rem_pio2f+0x1d6>
 80296d8:	3001      	adds	r0, #1
 80296da:	f854 7d04 	ldr.w	r7, [r4, #-4]!
 80296de:	2f00      	cmp	r7, #0
 80296e0:	d0fa      	beq.n	80296d8 <__kernel_rem_pio2f+0x278>
 80296e2:	9b06      	ldr	r3, [sp, #24]
 80296e4:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80296e8:	eb0d 0403 	add.w	r4, sp, r3
 80296ec:	9b01      	ldr	r3, [sp, #4]
 80296ee:	18f7      	adds	r7, r6, r3
 80296f0:	ab1c      	add	r3, sp, #112	; 0x70
 80296f2:	f106 0c01 	add.w	ip, r6, #1
 80296f6:	3c4c      	subs	r4, #76	; 0x4c
 80296f8:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 80296fc:	4430      	add	r0, r6
 80296fe:	4560      	cmp	r0, ip
 8029700:	da04      	bge.n	802970c <__kernel_rem_pio2f+0x2ac>
 8029702:	4606      	mov	r6, r0
 8029704:	e711      	b.n	802952a <__kernel_rem_pio2f+0xca>
 8029706:	9c05      	ldr	r4, [sp, #20]
 8029708:	2001      	movs	r0, #1
 802970a:	e7e6      	b.n	80296da <__kernel_rem_pio2f+0x27a>
 802970c:	9b04      	ldr	r3, [sp, #16]
 802970e:	f8dd e008 	ldr.w	lr, [sp, #8]
 8029712:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8029716:	9306      	str	r3, [sp, #24]
 8029718:	ee07 3a90 	vmov	s15, r3
 802971c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029720:	2600      	movs	r6, #0
 8029722:	ece7 7a01 	vstmia	r7!, {s15}
 8029726:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8029760 <__kernel_rem_pio2f+0x300>
 802972a:	46b9      	mov	r9, r7
 802972c:	455e      	cmp	r6, fp
 802972e:	dd04      	ble.n	802973a <__kernel_rem_pio2f+0x2da>
 8029730:	ece4 7a01 	vstmia	r4!, {s15}
 8029734:	f10c 0c01 	add.w	ip, ip, #1
 8029738:	e7e1      	b.n	80296fe <__kernel_rem_pio2f+0x29e>
 802973a:	ecfe 6a01 	vldmia	lr!, {s13}
 802973e:	ed39 7a01 	vldmdb	r9!, {s14}
 8029742:	3601      	adds	r6, #1
 8029744:	eee6 7a87 	vfma.f32	s15, s13, s14
 8029748:	e7f0      	b.n	802972c <__kernel_rem_pio2f+0x2cc>
 802974a:	3c01      	subs	r4, #1
 802974c:	e777      	b.n	802963e <__kernel_rem_pio2f+0x1de>
 802974e:	bf00      	nop
 8029750:	08041f44 	.word	0x08041f44
 8029754:	08041f18 	.word	0x08041f18
 8029758:	43800000 	.word	0x43800000
 802975c:	3b800000 	.word	0x3b800000
 8029760:	00000000 	.word	0x00000000
 8029764:	9b03      	ldr	r3, [sp, #12]
 8029766:	eeb0 0a48 	vmov.f32	s0, s16
 802976a:	1a98      	subs	r0, r3, r2
 802976c:	f7ff fe12 	bl	8029394 <scalbnf>
 8029770:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8029758 <__kernel_rem_pio2f+0x2f8>
 8029774:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8029778:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802977c:	db19      	blt.n	80297b2 <__kernel_rem_pio2f+0x352>
 802977e:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 802975c <__kernel_rem_pio2f+0x2fc>
 8029782:	ee60 7a27 	vmul.f32	s15, s0, s15
 8029786:	aa08      	add	r2, sp, #32
 8029788:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802978c:	1c74      	adds	r4, r6, #1
 802978e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8029792:	3508      	adds	r5, #8
 8029794:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8029798:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802979c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80297a0:	ee10 3a10 	vmov	r3, s0
 80297a4:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 80297a8:	ee17 3a90 	vmov	r3, s15
 80297ac:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 80297b0:	e74b      	b.n	802964a <__kernel_rem_pio2f+0x1ea>
 80297b2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80297b6:	aa08      	add	r2, sp, #32
 80297b8:	ee10 3a10 	vmov	r3, s0
 80297bc:	4634      	mov	r4, r6
 80297be:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 80297c2:	e742      	b.n	802964a <__kernel_rem_pio2f+0x1ea>
 80297c4:	a808      	add	r0, sp, #32
 80297c6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 80297ca:	9001      	str	r0, [sp, #4]
 80297cc:	ee07 0a90 	vmov	s15, r0
 80297d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80297d4:	3b01      	subs	r3, #1
 80297d6:	ee67 7a80 	vmul.f32	s15, s15, s0
 80297da:	ee20 0a07 	vmul.f32	s0, s0, s14
 80297de:	ed62 7a01 	vstmdb	r2!, {s15}
 80297e2:	e73f      	b.n	8029664 <__kernel_rem_pio2f+0x204>
 80297e4:	ecf6 6a01 	vldmia	r6!, {s13}
 80297e8:	ecb5 7a01 	vldmia	r5!, {s14}
 80297ec:	eee6 7a87 	vfma.f32	s15, s13, s14
 80297f0:	3001      	adds	r0, #1
 80297f2:	4550      	cmp	r0, sl
 80297f4:	dc01      	bgt.n	80297fa <__kernel_rem_pio2f+0x39a>
 80297f6:	4290      	cmp	r0, r2
 80297f8:	ddf4      	ble.n	80297e4 <__kernel_rem_pio2f+0x384>
 80297fa:	a858      	add	r0, sp, #352	; 0x160
 80297fc:	eb00 0282 	add.w	r2, r0, r2, lsl #2
 8029800:	ed42 7a28 	vstr	s15, [r2, #-160]	; 0xffffff60
 8029804:	3b01      	subs	r3, #1
 8029806:	e731      	b.n	802966c <__kernel_rem_pio2f+0x20c>
 8029808:	9b66      	ldr	r3, [sp, #408]	; 0x198
 802980a:	2b02      	cmp	r3, #2
 802980c:	dc09      	bgt.n	8029822 <__kernel_rem_pio2f+0x3c2>
 802980e:	2b00      	cmp	r3, #0
 8029810:	dc2b      	bgt.n	802986a <__kernel_rem_pio2f+0x40a>
 8029812:	d044      	beq.n	802989e <__kernel_rem_pio2f+0x43e>
 8029814:	f009 0007 	and.w	r0, r9, #7
 8029818:	b059      	add	sp, #356	; 0x164
 802981a:	ecbd 8b04 	vpop	{d8-d9}
 802981e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8029822:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8029824:	2b03      	cmp	r3, #3
 8029826:	d1f5      	bne.n	8029814 <__kernel_rem_pio2f+0x3b4>
 8029828:	aa30      	add	r2, sp, #192	; 0xc0
 802982a:	1f0b      	subs	r3, r1, #4
 802982c:	4413      	add	r3, r2
 802982e:	461a      	mov	r2, r3
 8029830:	4620      	mov	r0, r4
 8029832:	2800      	cmp	r0, #0
 8029834:	f1a2 0204 	sub.w	r2, r2, #4
 8029838:	dc52      	bgt.n	80298e0 <__kernel_rem_pio2f+0x480>
 802983a:	4622      	mov	r2, r4
 802983c:	2a01      	cmp	r2, #1
 802983e:	f1a3 0304 	sub.w	r3, r3, #4
 8029842:	dc5d      	bgt.n	8029900 <__kernel_rem_pio2f+0x4a0>
 8029844:	ab30      	add	r3, sp, #192	; 0xc0
 8029846:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 8029760 <__kernel_rem_pio2f+0x300>
 802984a:	440b      	add	r3, r1
 802984c:	2c01      	cmp	r4, #1
 802984e:	dc67      	bgt.n	8029920 <__kernel_rem_pio2f+0x4c0>
 8029850:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8029854:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8029858:	2f00      	cmp	r7, #0
 802985a:	d167      	bne.n	802992c <__kernel_rem_pio2f+0x4cc>
 802985c:	edc8 6a00 	vstr	s13, [r8]
 8029860:	ed88 7a01 	vstr	s14, [r8, #4]
 8029864:	edc8 7a02 	vstr	s15, [r8, #8]
 8029868:	e7d4      	b.n	8029814 <__kernel_rem_pio2f+0x3b4>
 802986a:	ab30      	add	r3, sp, #192	; 0xc0
 802986c:	ed1f 7a44 	vldr	s14, [pc, #-272]	; 8029760 <__kernel_rem_pio2f+0x300>
 8029870:	440b      	add	r3, r1
 8029872:	4622      	mov	r2, r4
 8029874:	2a00      	cmp	r2, #0
 8029876:	da24      	bge.n	80298c2 <__kernel_rem_pio2f+0x462>
 8029878:	b34f      	cbz	r7, 80298ce <__kernel_rem_pio2f+0x46e>
 802987a:	eef1 7a47 	vneg.f32	s15, s14
 802987e:	edc8 7a00 	vstr	s15, [r8]
 8029882:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8029886:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802988a:	aa31      	add	r2, sp, #196	; 0xc4
 802988c:	2301      	movs	r3, #1
 802988e:	429c      	cmp	r4, r3
 8029890:	da20      	bge.n	80298d4 <__kernel_rem_pio2f+0x474>
 8029892:	b10f      	cbz	r7, 8029898 <__kernel_rem_pio2f+0x438>
 8029894:	eef1 7a67 	vneg.f32	s15, s15
 8029898:	edc8 7a01 	vstr	s15, [r8, #4]
 802989c:	e7ba      	b.n	8029814 <__kernel_rem_pio2f+0x3b4>
 802989e:	ab30      	add	r3, sp, #192	; 0xc0
 80298a0:	ed5f 7a51 	vldr	s15, [pc, #-324]	; 8029760 <__kernel_rem_pio2f+0x300>
 80298a4:	440b      	add	r3, r1
 80298a6:	2c00      	cmp	r4, #0
 80298a8:	da05      	bge.n	80298b6 <__kernel_rem_pio2f+0x456>
 80298aa:	b10f      	cbz	r7, 80298b0 <__kernel_rem_pio2f+0x450>
 80298ac:	eef1 7a67 	vneg.f32	s15, s15
 80298b0:	edc8 7a00 	vstr	s15, [r8]
 80298b4:	e7ae      	b.n	8029814 <__kernel_rem_pio2f+0x3b4>
 80298b6:	ed33 7a01 	vldmdb	r3!, {s14}
 80298ba:	3c01      	subs	r4, #1
 80298bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80298c0:	e7f1      	b.n	80298a6 <__kernel_rem_pio2f+0x446>
 80298c2:	ed73 7a01 	vldmdb	r3!, {s15}
 80298c6:	3a01      	subs	r2, #1
 80298c8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80298cc:	e7d2      	b.n	8029874 <__kernel_rem_pio2f+0x414>
 80298ce:	eef0 7a47 	vmov.f32	s15, s14
 80298d2:	e7d4      	b.n	802987e <__kernel_rem_pio2f+0x41e>
 80298d4:	ecb2 7a01 	vldmia	r2!, {s14}
 80298d8:	3301      	adds	r3, #1
 80298da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80298de:	e7d6      	b.n	802988e <__kernel_rem_pio2f+0x42e>
 80298e0:	edd2 7a00 	vldr	s15, [r2]
 80298e4:	edd2 6a01 	vldr	s13, [r2, #4]
 80298e8:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80298ec:	3801      	subs	r0, #1
 80298ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80298f2:	ed82 7a00 	vstr	s14, [r2]
 80298f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80298fa:	edc2 7a01 	vstr	s15, [r2, #4]
 80298fe:	e798      	b.n	8029832 <__kernel_rem_pio2f+0x3d2>
 8029900:	edd3 7a00 	vldr	s15, [r3]
 8029904:	edd3 6a01 	vldr	s13, [r3, #4]
 8029908:	ee37 7aa6 	vadd.f32	s14, s15, s13
 802990c:	3a01      	subs	r2, #1
 802990e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8029912:	ed83 7a00 	vstr	s14, [r3]
 8029916:	ee77 7aa6 	vadd.f32	s15, s15, s13
 802991a:	edc3 7a01 	vstr	s15, [r3, #4]
 802991e:	e78d      	b.n	802983c <__kernel_rem_pio2f+0x3dc>
 8029920:	ed33 7a01 	vldmdb	r3!, {s14}
 8029924:	3c01      	subs	r4, #1
 8029926:	ee77 7a87 	vadd.f32	s15, s15, s14
 802992a:	e78f      	b.n	802984c <__kernel_rem_pio2f+0x3ec>
 802992c:	eef1 6a66 	vneg.f32	s13, s13
 8029930:	eeb1 7a47 	vneg.f32	s14, s14
 8029934:	edc8 6a00 	vstr	s13, [r8]
 8029938:	ed88 7a01 	vstr	s14, [r8, #4]
 802993c:	eef1 7a67 	vneg.f32	s15, s15
 8029940:	e790      	b.n	8029864 <__kernel_rem_pio2f+0x404>
 8029942:	bf00      	nop

08029944 <abort>:
 8029944:	b508      	push	{r3, lr}
 8029946:	2006      	movs	r0, #6
 8029948:	f000 fa3a 	bl	8029dc0 <raise>
 802994c:	2001      	movs	r0, #1
 802994e:	f7d8 fd55 	bl	80023fc <_exit>
	...

08029954 <__assert_func>:
 8029954:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8029956:	4614      	mov	r4, r2
 8029958:	461a      	mov	r2, r3
 802995a:	4b09      	ldr	r3, [pc, #36]	; (8029980 <__assert_func+0x2c>)
 802995c:	681b      	ldr	r3, [r3, #0]
 802995e:	4605      	mov	r5, r0
 8029960:	68d8      	ldr	r0, [r3, #12]
 8029962:	b14c      	cbz	r4, 8029978 <__assert_func+0x24>
 8029964:	4b07      	ldr	r3, [pc, #28]	; (8029984 <__assert_func+0x30>)
 8029966:	9100      	str	r1, [sp, #0]
 8029968:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802996c:	4906      	ldr	r1, [pc, #24]	; (8029988 <__assert_func+0x34>)
 802996e:	462b      	mov	r3, r5
 8029970:	f000 f982 	bl	8029c78 <fiprintf>
 8029974:	f7ff ffe6 	bl	8029944 <abort>
 8029978:	4b04      	ldr	r3, [pc, #16]	; (802998c <__assert_func+0x38>)
 802997a:	461c      	mov	r4, r3
 802997c:	e7f3      	b.n	8029966 <__assert_func+0x12>
 802997e:	bf00      	nop
 8029980:	20000160 	.word	0x20000160
 8029984:	08041f50 	.word	0x08041f50
 8029988:	08041f5d 	.word	0x08041f5d
 802998c:	08041f8b 	.word	0x08041f8b

08029990 <atexit>:
 8029990:	2300      	movs	r3, #0
 8029992:	4601      	mov	r1, r0
 8029994:	461a      	mov	r2, r3
 8029996:	4618      	mov	r0, r3
 8029998:	f000 bb16 	b.w	8029fc8 <__register_exitproc>

0802999c <malloc>:
 802999c:	4b02      	ldr	r3, [pc, #8]	; (80299a8 <malloc+0xc>)
 802999e:	4601      	mov	r1, r0
 80299a0:	6818      	ldr	r0, [r3, #0]
 80299a2:	f000 b82b 	b.w	80299fc <_malloc_r>
 80299a6:	bf00      	nop
 80299a8:	20000160 	.word	0x20000160

080299ac <free>:
 80299ac:	4b02      	ldr	r3, [pc, #8]	; (80299b8 <free+0xc>)
 80299ae:	4601      	mov	r1, r0
 80299b0:	6818      	ldr	r0, [r3, #0]
 80299b2:	f000 bb67 	b.w	802a084 <_free_r>
 80299b6:	bf00      	nop
 80299b8:	20000160 	.word	0x20000160

080299bc <sbrk_aligned>:
 80299bc:	b570      	push	{r4, r5, r6, lr}
 80299be:	4e0e      	ldr	r6, [pc, #56]	; (80299f8 <sbrk_aligned+0x3c>)
 80299c0:	460c      	mov	r4, r1
 80299c2:	6831      	ldr	r1, [r6, #0]
 80299c4:	4605      	mov	r5, r0
 80299c6:	b911      	cbnz	r1, 80299ce <sbrk_aligned+0x12>
 80299c8:	f000 faa0 	bl	8029f0c <_sbrk_r>
 80299cc:	6030      	str	r0, [r6, #0]
 80299ce:	4621      	mov	r1, r4
 80299d0:	4628      	mov	r0, r5
 80299d2:	f000 fa9b 	bl	8029f0c <_sbrk_r>
 80299d6:	1c43      	adds	r3, r0, #1
 80299d8:	d00a      	beq.n	80299f0 <sbrk_aligned+0x34>
 80299da:	1cc4      	adds	r4, r0, #3
 80299dc:	f024 0403 	bic.w	r4, r4, #3
 80299e0:	42a0      	cmp	r0, r4
 80299e2:	d007      	beq.n	80299f4 <sbrk_aligned+0x38>
 80299e4:	1a21      	subs	r1, r4, r0
 80299e6:	4628      	mov	r0, r5
 80299e8:	f000 fa90 	bl	8029f0c <_sbrk_r>
 80299ec:	3001      	adds	r0, #1
 80299ee:	d101      	bne.n	80299f4 <sbrk_aligned+0x38>
 80299f0:	f04f 34ff 	mov.w	r4, #4294967295
 80299f4:	4620      	mov	r0, r4
 80299f6:	bd70      	pop	{r4, r5, r6, pc}
 80299f8:	2001370c 	.word	0x2001370c

080299fc <_malloc_r>:
 80299fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029a00:	1ccd      	adds	r5, r1, #3
 8029a02:	f025 0503 	bic.w	r5, r5, #3
 8029a06:	3508      	adds	r5, #8
 8029a08:	2d0c      	cmp	r5, #12
 8029a0a:	bf38      	it	cc
 8029a0c:	250c      	movcc	r5, #12
 8029a0e:	2d00      	cmp	r5, #0
 8029a10:	4607      	mov	r7, r0
 8029a12:	db01      	blt.n	8029a18 <_malloc_r+0x1c>
 8029a14:	42a9      	cmp	r1, r5
 8029a16:	d905      	bls.n	8029a24 <_malloc_r+0x28>
 8029a18:	230c      	movs	r3, #12
 8029a1a:	603b      	str	r3, [r7, #0]
 8029a1c:	2600      	movs	r6, #0
 8029a1e:	4630      	mov	r0, r6
 8029a20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029a24:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8029af8 <_malloc_r+0xfc>
 8029a28:	f000 f868 	bl	8029afc <__malloc_lock>
 8029a2c:	f8d8 3000 	ldr.w	r3, [r8]
 8029a30:	461c      	mov	r4, r3
 8029a32:	bb5c      	cbnz	r4, 8029a8c <_malloc_r+0x90>
 8029a34:	4629      	mov	r1, r5
 8029a36:	4638      	mov	r0, r7
 8029a38:	f7ff ffc0 	bl	80299bc <sbrk_aligned>
 8029a3c:	1c43      	adds	r3, r0, #1
 8029a3e:	4604      	mov	r4, r0
 8029a40:	d155      	bne.n	8029aee <_malloc_r+0xf2>
 8029a42:	f8d8 4000 	ldr.w	r4, [r8]
 8029a46:	4626      	mov	r6, r4
 8029a48:	2e00      	cmp	r6, #0
 8029a4a:	d145      	bne.n	8029ad8 <_malloc_r+0xdc>
 8029a4c:	2c00      	cmp	r4, #0
 8029a4e:	d048      	beq.n	8029ae2 <_malloc_r+0xe6>
 8029a50:	6823      	ldr	r3, [r4, #0]
 8029a52:	4631      	mov	r1, r6
 8029a54:	4638      	mov	r0, r7
 8029a56:	eb04 0903 	add.w	r9, r4, r3
 8029a5a:	f000 fa57 	bl	8029f0c <_sbrk_r>
 8029a5e:	4581      	cmp	r9, r0
 8029a60:	d13f      	bne.n	8029ae2 <_malloc_r+0xe6>
 8029a62:	6821      	ldr	r1, [r4, #0]
 8029a64:	1a6d      	subs	r5, r5, r1
 8029a66:	4629      	mov	r1, r5
 8029a68:	4638      	mov	r0, r7
 8029a6a:	f7ff ffa7 	bl	80299bc <sbrk_aligned>
 8029a6e:	3001      	adds	r0, #1
 8029a70:	d037      	beq.n	8029ae2 <_malloc_r+0xe6>
 8029a72:	6823      	ldr	r3, [r4, #0]
 8029a74:	442b      	add	r3, r5
 8029a76:	6023      	str	r3, [r4, #0]
 8029a78:	f8d8 3000 	ldr.w	r3, [r8]
 8029a7c:	2b00      	cmp	r3, #0
 8029a7e:	d038      	beq.n	8029af2 <_malloc_r+0xf6>
 8029a80:	685a      	ldr	r2, [r3, #4]
 8029a82:	42a2      	cmp	r2, r4
 8029a84:	d12b      	bne.n	8029ade <_malloc_r+0xe2>
 8029a86:	2200      	movs	r2, #0
 8029a88:	605a      	str	r2, [r3, #4]
 8029a8a:	e00f      	b.n	8029aac <_malloc_r+0xb0>
 8029a8c:	6822      	ldr	r2, [r4, #0]
 8029a8e:	1b52      	subs	r2, r2, r5
 8029a90:	d41f      	bmi.n	8029ad2 <_malloc_r+0xd6>
 8029a92:	2a0b      	cmp	r2, #11
 8029a94:	d917      	bls.n	8029ac6 <_malloc_r+0xca>
 8029a96:	1961      	adds	r1, r4, r5
 8029a98:	42a3      	cmp	r3, r4
 8029a9a:	6025      	str	r5, [r4, #0]
 8029a9c:	bf18      	it	ne
 8029a9e:	6059      	strne	r1, [r3, #4]
 8029aa0:	6863      	ldr	r3, [r4, #4]
 8029aa2:	bf08      	it	eq
 8029aa4:	f8c8 1000 	streq.w	r1, [r8]
 8029aa8:	5162      	str	r2, [r4, r5]
 8029aaa:	604b      	str	r3, [r1, #4]
 8029aac:	4638      	mov	r0, r7
 8029aae:	f104 060b 	add.w	r6, r4, #11
 8029ab2:	f000 f829 	bl	8029b08 <__malloc_unlock>
 8029ab6:	f026 0607 	bic.w	r6, r6, #7
 8029aba:	1d23      	adds	r3, r4, #4
 8029abc:	1af2      	subs	r2, r6, r3
 8029abe:	d0ae      	beq.n	8029a1e <_malloc_r+0x22>
 8029ac0:	1b9b      	subs	r3, r3, r6
 8029ac2:	50a3      	str	r3, [r4, r2]
 8029ac4:	e7ab      	b.n	8029a1e <_malloc_r+0x22>
 8029ac6:	42a3      	cmp	r3, r4
 8029ac8:	6862      	ldr	r2, [r4, #4]
 8029aca:	d1dd      	bne.n	8029a88 <_malloc_r+0x8c>
 8029acc:	f8c8 2000 	str.w	r2, [r8]
 8029ad0:	e7ec      	b.n	8029aac <_malloc_r+0xb0>
 8029ad2:	4623      	mov	r3, r4
 8029ad4:	6864      	ldr	r4, [r4, #4]
 8029ad6:	e7ac      	b.n	8029a32 <_malloc_r+0x36>
 8029ad8:	4634      	mov	r4, r6
 8029ada:	6876      	ldr	r6, [r6, #4]
 8029adc:	e7b4      	b.n	8029a48 <_malloc_r+0x4c>
 8029ade:	4613      	mov	r3, r2
 8029ae0:	e7cc      	b.n	8029a7c <_malloc_r+0x80>
 8029ae2:	230c      	movs	r3, #12
 8029ae4:	603b      	str	r3, [r7, #0]
 8029ae6:	4638      	mov	r0, r7
 8029ae8:	f000 f80e 	bl	8029b08 <__malloc_unlock>
 8029aec:	e797      	b.n	8029a1e <_malloc_r+0x22>
 8029aee:	6025      	str	r5, [r4, #0]
 8029af0:	e7dc      	b.n	8029aac <_malloc_r+0xb0>
 8029af2:	605b      	str	r3, [r3, #4]
 8029af4:	deff      	udf	#255	; 0xff
 8029af6:	bf00      	nop
 8029af8:	20013708 	.word	0x20013708

08029afc <__malloc_lock>:
 8029afc:	4801      	ldr	r0, [pc, #4]	; (8029b04 <__malloc_lock+0x8>)
 8029afe:	f000 ba52 	b.w	8029fa6 <__retarget_lock_acquire_recursive>
 8029b02:	bf00      	nop
 8029b04:	20013851 	.word	0x20013851

08029b08 <__malloc_unlock>:
 8029b08:	4801      	ldr	r0, [pc, #4]	; (8029b10 <__malloc_unlock+0x8>)
 8029b0a:	f000 ba4d 	b.w	8029fa8 <__retarget_lock_release_recursive>
 8029b0e:	bf00      	nop
 8029b10:	20013851 	.word	0x20013851

08029b14 <__cxa_atexit>:
 8029b14:	b510      	push	{r4, lr}
 8029b16:	4c05      	ldr	r4, [pc, #20]	; (8029b2c <__cxa_atexit+0x18>)
 8029b18:	4613      	mov	r3, r2
 8029b1a:	b12c      	cbz	r4, 8029b28 <__cxa_atexit+0x14>
 8029b1c:	460a      	mov	r2, r1
 8029b1e:	4601      	mov	r1, r0
 8029b20:	2002      	movs	r0, #2
 8029b22:	f000 fa51 	bl	8029fc8 <__register_exitproc>
 8029b26:	bd10      	pop	{r4, pc}
 8029b28:	4620      	mov	r0, r4
 8029b2a:	e7fc      	b.n	8029b26 <__cxa_atexit+0x12>
 8029b2c:	08029fc9 	.word	0x08029fc9

08029b30 <std>:
 8029b30:	2300      	movs	r3, #0
 8029b32:	b510      	push	{r4, lr}
 8029b34:	4604      	mov	r4, r0
 8029b36:	e9c0 3300 	strd	r3, r3, [r0]
 8029b3a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8029b3e:	6083      	str	r3, [r0, #8]
 8029b40:	8181      	strh	r1, [r0, #12]
 8029b42:	6643      	str	r3, [r0, #100]	; 0x64
 8029b44:	81c2      	strh	r2, [r0, #14]
 8029b46:	6183      	str	r3, [r0, #24]
 8029b48:	4619      	mov	r1, r3
 8029b4a:	2208      	movs	r2, #8
 8029b4c:	305c      	adds	r0, #92	; 0x5c
 8029b4e:	f000 f906 	bl	8029d5e <memset>
 8029b52:	4b0d      	ldr	r3, [pc, #52]	; (8029b88 <std+0x58>)
 8029b54:	6263      	str	r3, [r4, #36]	; 0x24
 8029b56:	4b0d      	ldr	r3, [pc, #52]	; (8029b8c <std+0x5c>)
 8029b58:	62a3      	str	r3, [r4, #40]	; 0x28
 8029b5a:	4b0d      	ldr	r3, [pc, #52]	; (8029b90 <std+0x60>)
 8029b5c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8029b5e:	4b0d      	ldr	r3, [pc, #52]	; (8029b94 <std+0x64>)
 8029b60:	6323      	str	r3, [r4, #48]	; 0x30
 8029b62:	4b0d      	ldr	r3, [pc, #52]	; (8029b98 <std+0x68>)
 8029b64:	6224      	str	r4, [r4, #32]
 8029b66:	429c      	cmp	r4, r3
 8029b68:	d006      	beq.n	8029b78 <std+0x48>
 8029b6a:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8029b6e:	4294      	cmp	r4, r2
 8029b70:	d002      	beq.n	8029b78 <std+0x48>
 8029b72:	33d0      	adds	r3, #208	; 0xd0
 8029b74:	429c      	cmp	r4, r3
 8029b76:	d105      	bne.n	8029b84 <std+0x54>
 8029b78:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8029b7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029b80:	f000 ba10 	b.w	8029fa4 <__retarget_lock_init_recursive>
 8029b84:	bd10      	pop	{r4, pc}
 8029b86:	bf00      	nop
 8029b88:	08029cd9 	.word	0x08029cd9
 8029b8c:	08029cfb 	.word	0x08029cfb
 8029b90:	08029d33 	.word	0x08029d33
 8029b94:	08029d57 	.word	0x08029d57
 8029b98:	20013710 	.word	0x20013710

08029b9c <stdio_exit_handler>:
 8029b9c:	4a02      	ldr	r2, [pc, #8]	; (8029ba8 <stdio_exit_handler+0xc>)
 8029b9e:	4903      	ldr	r1, [pc, #12]	; (8029bac <stdio_exit_handler+0x10>)
 8029ba0:	4803      	ldr	r0, [pc, #12]	; (8029bb0 <stdio_exit_handler+0x14>)
 8029ba2:	f000 b87b 	b.w	8029c9c <_fwalk_sglue>
 8029ba6:	bf00      	nop
 8029ba8:	20000108 	.word	0x20000108
 8029bac:	0802a7d1 	.word	0x0802a7d1
 8029bb0:	20000114 	.word	0x20000114

08029bb4 <cleanup_stdio>:
 8029bb4:	6841      	ldr	r1, [r0, #4]
 8029bb6:	4b0c      	ldr	r3, [pc, #48]	; (8029be8 <cleanup_stdio+0x34>)
 8029bb8:	4299      	cmp	r1, r3
 8029bba:	b510      	push	{r4, lr}
 8029bbc:	4604      	mov	r4, r0
 8029bbe:	d001      	beq.n	8029bc4 <cleanup_stdio+0x10>
 8029bc0:	f000 fe06 	bl	802a7d0 <_fflush_r>
 8029bc4:	68a1      	ldr	r1, [r4, #8]
 8029bc6:	4b09      	ldr	r3, [pc, #36]	; (8029bec <cleanup_stdio+0x38>)
 8029bc8:	4299      	cmp	r1, r3
 8029bca:	d002      	beq.n	8029bd2 <cleanup_stdio+0x1e>
 8029bcc:	4620      	mov	r0, r4
 8029bce:	f000 fdff 	bl	802a7d0 <_fflush_r>
 8029bd2:	68e1      	ldr	r1, [r4, #12]
 8029bd4:	4b06      	ldr	r3, [pc, #24]	; (8029bf0 <cleanup_stdio+0x3c>)
 8029bd6:	4299      	cmp	r1, r3
 8029bd8:	d004      	beq.n	8029be4 <cleanup_stdio+0x30>
 8029bda:	4620      	mov	r0, r4
 8029bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029be0:	f000 bdf6 	b.w	802a7d0 <_fflush_r>
 8029be4:	bd10      	pop	{r4, pc}
 8029be6:	bf00      	nop
 8029be8:	20013710 	.word	0x20013710
 8029bec:	20013778 	.word	0x20013778
 8029bf0:	200137e0 	.word	0x200137e0

08029bf4 <global_stdio_init.part.0>:
 8029bf4:	b510      	push	{r4, lr}
 8029bf6:	4b0b      	ldr	r3, [pc, #44]	; (8029c24 <global_stdio_init.part.0+0x30>)
 8029bf8:	4c0b      	ldr	r4, [pc, #44]	; (8029c28 <global_stdio_init.part.0+0x34>)
 8029bfa:	4a0c      	ldr	r2, [pc, #48]	; (8029c2c <global_stdio_init.part.0+0x38>)
 8029bfc:	601a      	str	r2, [r3, #0]
 8029bfe:	4620      	mov	r0, r4
 8029c00:	2200      	movs	r2, #0
 8029c02:	2104      	movs	r1, #4
 8029c04:	f7ff ff94 	bl	8029b30 <std>
 8029c08:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8029c0c:	2201      	movs	r2, #1
 8029c0e:	2109      	movs	r1, #9
 8029c10:	f7ff ff8e 	bl	8029b30 <std>
 8029c14:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8029c18:	2202      	movs	r2, #2
 8029c1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029c1e:	2112      	movs	r1, #18
 8029c20:	f7ff bf86 	b.w	8029b30 <std>
 8029c24:	20013848 	.word	0x20013848
 8029c28:	20013710 	.word	0x20013710
 8029c2c:	08029b9d 	.word	0x08029b9d

08029c30 <__sfp_lock_acquire>:
 8029c30:	4801      	ldr	r0, [pc, #4]	; (8029c38 <__sfp_lock_acquire+0x8>)
 8029c32:	f000 b9b8 	b.w	8029fa6 <__retarget_lock_acquire_recursive>
 8029c36:	bf00      	nop
 8029c38:	20013852 	.word	0x20013852

08029c3c <__sfp_lock_release>:
 8029c3c:	4801      	ldr	r0, [pc, #4]	; (8029c44 <__sfp_lock_release+0x8>)
 8029c3e:	f000 b9b3 	b.w	8029fa8 <__retarget_lock_release_recursive>
 8029c42:	bf00      	nop
 8029c44:	20013852 	.word	0x20013852

08029c48 <__sinit>:
 8029c48:	b510      	push	{r4, lr}
 8029c4a:	4604      	mov	r4, r0
 8029c4c:	f7ff fff0 	bl	8029c30 <__sfp_lock_acquire>
 8029c50:	6a23      	ldr	r3, [r4, #32]
 8029c52:	b11b      	cbz	r3, 8029c5c <__sinit+0x14>
 8029c54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8029c58:	f7ff bff0 	b.w	8029c3c <__sfp_lock_release>
 8029c5c:	4b04      	ldr	r3, [pc, #16]	; (8029c70 <__sinit+0x28>)
 8029c5e:	6223      	str	r3, [r4, #32]
 8029c60:	4b04      	ldr	r3, [pc, #16]	; (8029c74 <__sinit+0x2c>)
 8029c62:	681b      	ldr	r3, [r3, #0]
 8029c64:	2b00      	cmp	r3, #0
 8029c66:	d1f5      	bne.n	8029c54 <__sinit+0xc>
 8029c68:	f7ff ffc4 	bl	8029bf4 <global_stdio_init.part.0>
 8029c6c:	e7f2      	b.n	8029c54 <__sinit+0xc>
 8029c6e:	bf00      	nop
 8029c70:	08029bb5 	.word	0x08029bb5
 8029c74:	20013848 	.word	0x20013848

08029c78 <fiprintf>:
 8029c78:	b40e      	push	{r1, r2, r3}
 8029c7a:	b503      	push	{r0, r1, lr}
 8029c7c:	4601      	mov	r1, r0
 8029c7e:	ab03      	add	r3, sp, #12
 8029c80:	4805      	ldr	r0, [pc, #20]	; (8029c98 <fiprintf+0x20>)
 8029c82:	f853 2b04 	ldr.w	r2, [r3], #4
 8029c86:	6800      	ldr	r0, [r0, #0]
 8029c88:	9301      	str	r3, [sp, #4]
 8029c8a:	f000 fa71 	bl	802a170 <_vfiprintf_r>
 8029c8e:	b002      	add	sp, #8
 8029c90:	f85d eb04 	ldr.w	lr, [sp], #4
 8029c94:	b003      	add	sp, #12
 8029c96:	4770      	bx	lr
 8029c98:	20000160 	.word	0x20000160

08029c9c <_fwalk_sglue>:
 8029c9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029ca0:	4607      	mov	r7, r0
 8029ca2:	4688      	mov	r8, r1
 8029ca4:	4614      	mov	r4, r2
 8029ca6:	2600      	movs	r6, #0
 8029ca8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8029cac:	f1b9 0901 	subs.w	r9, r9, #1
 8029cb0:	d505      	bpl.n	8029cbe <_fwalk_sglue+0x22>
 8029cb2:	6824      	ldr	r4, [r4, #0]
 8029cb4:	2c00      	cmp	r4, #0
 8029cb6:	d1f7      	bne.n	8029ca8 <_fwalk_sglue+0xc>
 8029cb8:	4630      	mov	r0, r6
 8029cba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8029cbe:	89ab      	ldrh	r3, [r5, #12]
 8029cc0:	2b01      	cmp	r3, #1
 8029cc2:	d907      	bls.n	8029cd4 <_fwalk_sglue+0x38>
 8029cc4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8029cc8:	3301      	adds	r3, #1
 8029cca:	d003      	beq.n	8029cd4 <_fwalk_sglue+0x38>
 8029ccc:	4629      	mov	r1, r5
 8029cce:	4638      	mov	r0, r7
 8029cd0:	47c0      	blx	r8
 8029cd2:	4306      	orrs	r6, r0
 8029cd4:	3568      	adds	r5, #104	; 0x68
 8029cd6:	e7e9      	b.n	8029cac <_fwalk_sglue+0x10>

08029cd8 <__sread>:
 8029cd8:	b510      	push	{r4, lr}
 8029cda:	460c      	mov	r4, r1
 8029cdc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029ce0:	f000 f8ee 	bl	8029ec0 <_read_r>
 8029ce4:	2800      	cmp	r0, #0
 8029ce6:	bfab      	itete	ge
 8029ce8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8029cea:	89a3      	ldrhlt	r3, [r4, #12]
 8029cec:	181b      	addge	r3, r3, r0
 8029cee:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8029cf2:	bfac      	ite	ge
 8029cf4:	6563      	strge	r3, [r4, #84]	; 0x54
 8029cf6:	81a3      	strhlt	r3, [r4, #12]
 8029cf8:	bd10      	pop	{r4, pc}

08029cfa <__swrite>:
 8029cfa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8029cfe:	461f      	mov	r7, r3
 8029d00:	898b      	ldrh	r3, [r1, #12]
 8029d02:	05db      	lsls	r3, r3, #23
 8029d04:	4605      	mov	r5, r0
 8029d06:	460c      	mov	r4, r1
 8029d08:	4616      	mov	r6, r2
 8029d0a:	d505      	bpl.n	8029d18 <__swrite+0x1e>
 8029d0c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029d10:	2302      	movs	r3, #2
 8029d12:	2200      	movs	r2, #0
 8029d14:	f000 f8c2 	bl	8029e9c <_lseek_r>
 8029d18:	89a3      	ldrh	r3, [r4, #12]
 8029d1a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8029d1e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8029d22:	81a3      	strh	r3, [r4, #12]
 8029d24:	4632      	mov	r2, r6
 8029d26:	463b      	mov	r3, r7
 8029d28:	4628      	mov	r0, r5
 8029d2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8029d2e:	f000 b8fd 	b.w	8029f2c <_write_r>

08029d32 <__sseek>:
 8029d32:	b510      	push	{r4, lr}
 8029d34:	460c      	mov	r4, r1
 8029d36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029d3a:	f000 f8af 	bl	8029e9c <_lseek_r>
 8029d3e:	1c43      	adds	r3, r0, #1
 8029d40:	89a3      	ldrh	r3, [r4, #12]
 8029d42:	bf15      	itete	ne
 8029d44:	6560      	strne	r0, [r4, #84]	; 0x54
 8029d46:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8029d4a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8029d4e:	81a3      	strheq	r3, [r4, #12]
 8029d50:	bf18      	it	ne
 8029d52:	81a3      	strhne	r3, [r4, #12]
 8029d54:	bd10      	pop	{r4, pc}

08029d56 <__sclose>:
 8029d56:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8029d5a:	f000 b839 	b.w	8029dd0 <_close_r>

08029d5e <memset>:
 8029d5e:	4402      	add	r2, r0
 8029d60:	4603      	mov	r3, r0
 8029d62:	4293      	cmp	r3, r2
 8029d64:	d100      	bne.n	8029d68 <memset+0xa>
 8029d66:	4770      	bx	lr
 8029d68:	f803 1b01 	strb.w	r1, [r3], #1
 8029d6c:	e7f9      	b.n	8029d62 <memset+0x4>

08029d6e <_raise_r>:
 8029d6e:	291f      	cmp	r1, #31
 8029d70:	b538      	push	{r3, r4, r5, lr}
 8029d72:	4604      	mov	r4, r0
 8029d74:	460d      	mov	r5, r1
 8029d76:	d904      	bls.n	8029d82 <_raise_r+0x14>
 8029d78:	2316      	movs	r3, #22
 8029d7a:	6003      	str	r3, [r0, #0]
 8029d7c:	f04f 30ff 	mov.w	r0, #4294967295
 8029d80:	bd38      	pop	{r3, r4, r5, pc}
 8029d82:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8029d84:	b112      	cbz	r2, 8029d8c <_raise_r+0x1e>
 8029d86:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8029d8a:	b94b      	cbnz	r3, 8029da0 <_raise_r+0x32>
 8029d8c:	4620      	mov	r0, r4
 8029d8e:	f000 f8bb 	bl	8029f08 <_getpid_r>
 8029d92:	462a      	mov	r2, r5
 8029d94:	4601      	mov	r1, r0
 8029d96:	4620      	mov	r0, r4
 8029d98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8029d9c:	f000 b8a2 	b.w	8029ee4 <_kill_r>
 8029da0:	2b01      	cmp	r3, #1
 8029da2:	d00a      	beq.n	8029dba <_raise_r+0x4c>
 8029da4:	1c59      	adds	r1, r3, #1
 8029da6:	d103      	bne.n	8029db0 <_raise_r+0x42>
 8029da8:	2316      	movs	r3, #22
 8029daa:	6003      	str	r3, [r0, #0]
 8029dac:	2001      	movs	r0, #1
 8029dae:	e7e7      	b.n	8029d80 <_raise_r+0x12>
 8029db0:	2400      	movs	r4, #0
 8029db2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8029db6:	4628      	mov	r0, r5
 8029db8:	4798      	blx	r3
 8029dba:	2000      	movs	r0, #0
 8029dbc:	e7e0      	b.n	8029d80 <_raise_r+0x12>
	...

08029dc0 <raise>:
 8029dc0:	4b02      	ldr	r3, [pc, #8]	; (8029dcc <raise+0xc>)
 8029dc2:	4601      	mov	r1, r0
 8029dc4:	6818      	ldr	r0, [r3, #0]
 8029dc6:	f7ff bfd2 	b.w	8029d6e <_raise_r>
 8029dca:	bf00      	nop
 8029dcc:	20000160 	.word	0x20000160

08029dd0 <_close_r>:
 8029dd0:	b538      	push	{r3, r4, r5, lr}
 8029dd2:	4d06      	ldr	r5, [pc, #24]	; (8029dec <_close_r+0x1c>)
 8029dd4:	2300      	movs	r3, #0
 8029dd6:	4604      	mov	r4, r0
 8029dd8:	4608      	mov	r0, r1
 8029dda:	602b      	str	r3, [r5, #0]
 8029ddc:	f7d8 fb30 	bl	8002440 <_close>
 8029de0:	1c43      	adds	r3, r0, #1
 8029de2:	d102      	bne.n	8029dea <_close_r+0x1a>
 8029de4:	682b      	ldr	r3, [r5, #0]
 8029de6:	b103      	cbz	r3, 8029dea <_close_r+0x1a>
 8029de8:	6023      	str	r3, [r4, #0]
 8029dea:	bd38      	pop	{r3, r4, r5, pc}
 8029dec:	2001384c 	.word	0x2001384c

08029df0 <_reclaim_reent>:
 8029df0:	4b29      	ldr	r3, [pc, #164]	; (8029e98 <_reclaim_reent+0xa8>)
 8029df2:	681b      	ldr	r3, [r3, #0]
 8029df4:	4283      	cmp	r3, r0
 8029df6:	b570      	push	{r4, r5, r6, lr}
 8029df8:	4604      	mov	r4, r0
 8029dfa:	d04b      	beq.n	8029e94 <_reclaim_reent+0xa4>
 8029dfc:	69c3      	ldr	r3, [r0, #28]
 8029dfe:	b143      	cbz	r3, 8029e12 <_reclaim_reent+0x22>
 8029e00:	68db      	ldr	r3, [r3, #12]
 8029e02:	2b00      	cmp	r3, #0
 8029e04:	d144      	bne.n	8029e90 <_reclaim_reent+0xa0>
 8029e06:	69e3      	ldr	r3, [r4, #28]
 8029e08:	6819      	ldr	r1, [r3, #0]
 8029e0a:	b111      	cbz	r1, 8029e12 <_reclaim_reent+0x22>
 8029e0c:	4620      	mov	r0, r4
 8029e0e:	f000 f939 	bl	802a084 <_free_r>
 8029e12:	6961      	ldr	r1, [r4, #20]
 8029e14:	b111      	cbz	r1, 8029e1c <_reclaim_reent+0x2c>
 8029e16:	4620      	mov	r0, r4
 8029e18:	f000 f934 	bl	802a084 <_free_r>
 8029e1c:	69e1      	ldr	r1, [r4, #28]
 8029e1e:	b111      	cbz	r1, 8029e26 <_reclaim_reent+0x36>
 8029e20:	4620      	mov	r0, r4
 8029e22:	f000 f92f 	bl	802a084 <_free_r>
 8029e26:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8029e28:	b111      	cbz	r1, 8029e30 <_reclaim_reent+0x40>
 8029e2a:	4620      	mov	r0, r4
 8029e2c:	f000 f92a 	bl	802a084 <_free_r>
 8029e30:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8029e32:	b111      	cbz	r1, 8029e3a <_reclaim_reent+0x4a>
 8029e34:	4620      	mov	r0, r4
 8029e36:	f000 f925 	bl	802a084 <_free_r>
 8029e3a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8029e3c:	b111      	cbz	r1, 8029e44 <_reclaim_reent+0x54>
 8029e3e:	4620      	mov	r0, r4
 8029e40:	f000 f920 	bl	802a084 <_free_r>
 8029e44:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8029e46:	b111      	cbz	r1, 8029e4e <_reclaim_reent+0x5e>
 8029e48:	4620      	mov	r0, r4
 8029e4a:	f000 f91b 	bl	802a084 <_free_r>
 8029e4e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8029e50:	b111      	cbz	r1, 8029e58 <_reclaim_reent+0x68>
 8029e52:	4620      	mov	r0, r4
 8029e54:	f000 f916 	bl	802a084 <_free_r>
 8029e58:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8029e5a:	b111      	cbz	r1, 8029e62 <_reclaim_reent+0x72>
 8029e5c:	4620      	mov	r0, r4
 8029e5e:	f000 f911 	bl	802a084 <_free_r>
 8029e62:	6a23      	ldr	r3, [r4, #32]
 8029e64:	b1b3      	cbz	r3, 8029e94 <_reclaim_reent+0xa4>
 8029e66:	4620      	mov	r0, r4
 8029e68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8029e6c:	4718      	bx	r3
 8029e6e:	5949      	ldr	r1, [r1, r5]
 8029e70:	b941      	cbnz	r1, 8029e84 <_reclaim_reent+0x94>
 8029e72:	3504      	adds	r5, #4
 8029e74:	69e3      	ldr	r3, [r4, #28]
 8029e76:	2d80      	cmp	r5, #128	; 0x80
 8029e78:	68d9      	ldr	r1, [r3, #12]
 8029e7a:	d1f8      	bne.n	8029e6e <_reclaim_reent+0x7e>
 8029e7c:	4620      	mov	r0, r4
 8029e7e:	f000 f901 	bl	802a084 <_free_r>
 8029e82:	e7c0      	b.n	8029e06 <_reclaim_reent+0x16>
 8029e84:	680e      	ldr	r6, [r1, #0]
 8029e86:	4620      	mov	r0, r4
 8029e88:	f000 f8fc 	bl	802a084 <_free_r>
 8029e8c:	4631      	mov	r1, r6
 8029e8e:	e7ef      	b.n	8029e70 <_reclaim_reent+0x80>
 8029e90:	2500      	movs	r5, #0
 8029e92:	e7ef      	b.n	8029e74 <_reclaim_reent+0x84>
 8029e94:	bd70      	pop	{r4, r5, r6, pc}
 8029e96:	bf00      	nop
 8029e98:	20000160 	.word	0x20000160

08029e9c <_lseek_r>:
 8029e9c:	b538      	push	{r3, r4, r5, lr}
 8029e9e:	4d07      	ldr	r5, [pc, #28]	; (8029ebc <_lseek_r+0x20>)
 8029ea0:	4604      	mov	r4, r0
 8029ea2:	4608      	mov	r0, r1
 8029ea4:	4611      	mov	r1, r2
 8029ea6:	2200      	movs	r2, #0
 8029ea8:	602a      	str	r2, [r5, #0]
 8029eaa:	461a      	mov	r2, r3
 8029eac:	f7d8 fad4 	bl	8002458 <_lseek>
 8029eb0:	1c43      	adds	r3, r0, #1
 8029eb2:	d102      	bne.n	8029eba <_lseek_r+0x1e>
 8029eb4:	682b      	ldr	r3, [r5, #0]
 8029eb6:	b103      	cbz	r3, 8029eba <_lseek_r+0x1e>
 8029eb8:	6023      	str	r3, [r4, #0]
 8029eba:	bd38      	pop	{r3, r4, r5, pc}
 8029ebc:	2001384c 	.word	0x2001384c

08029ec0 <_read_r>:
 8029ec0:	b538      	push	{r3, r4, r5, lr}
 8029ec2:	4d07      	ldr	r5, [pc, #28]	; (8029ee0 <_read_r+0x20>)
 8029ec4:	4604      	mov	r4, r0
 8029ec6:	4608      	mov	r0, r1
 8029ec8:	4611      	mov	r1, r2
 8029eca:	2200      	movs	r2, #0
 8029ecc:	602a      	str	r2, [r5, #0]
 8029ece:	461a      	mov	r2, r3
 8029ed0:	f7d8 fa9a 	bl	8002408 <_read>
 8029ed4:	1c43      	adds	r3, r0, #1
 8029ed6:	d102      	bne.n	8029ede <_read_r+0x1e>
 8029ed8:	682b      	ldr	r3, [r5, #0]
 8029eda:	b103      	cbz	r3, 8029ede <_read_r+0x1e>
 8029edc:	6023      	str	r3, [r4, #0]
 8029ede:	bd38      	pop	{r3, r4, r5, pc}
 8029ee0:	2001384c 	.word	0x2001384c

08029ee4 <_kill_r>:
 8029ee4:	b538      	push	{r3, r4, r5, lr}
 8029ee6:	4d07      	ldr	r5, [pc, #28]	; (8029f04 <_kill_r+0x20>)
 8029ee8:	2300      	movs	r3, #0
 8029eea:	4604      	mov	r4, r0
 8029eec:	4608      	mov	r0, r1
 8029eee:	4611      	mov	r1, r2
 8029ef0:	602b      	str	r3, [r5, #0]
 8029ef2:	f7d8 fa7b 	bl	80023ec <_kill>
 8029ef6:	1c43      	adds	r3, r0, #1
 8029ef8:	d102      	bne.n	8029f00 <_kill_r+0x1c>
 8029efa:	682b      	ldr	r3, [r5, #0]
 8029efc:	b103      	cbz	r3, 8029f00 <_kill_r+0x1c>
 8029efe:	6023      	str	r3, [r4, #0]
 8029f00:	bd38      	pop	{r3, r4, r5, pc}
 8029f02:	bf00      	nop
 8029f04:	2001384c 	.word	0x2001384c

08029f08 <_getpid_r>:
 8029f08:	f7d8 ba6e 	b.w	80023e8 <_getpid>

08029f0c <_sbrk_r>:
 8029f0c:	b538      	push	{r3, r4, r5, lr}
 8029f0e:	4d06      	ldr	r5, [pc, #24]	; (8029f28 <_sbrk_r+0x1c>)
 8029f10:	2300      	movs	r3, #0
 8029f12:	4604      	mov	r4, r0
 8029f14:	4608      	mov	r0, r1
 8029f16:	602b      	str	r3, [r5, #0]
 8029f18:	f7d8 faa0 	bl	800245c <_sbrk>
 8029f1c:	1c43      	adds	r3, r0, #1
 8029f1e:	d102      	bne.n	8029f26 <_sbrk_r+0x1a>
 8029f20:	682b      	ldr	r3, [r5, #0]
 8029f22:	b103      	cbz	r3, 8029f26 <_sbrk_r+0x1a>
 8029f24:	6023      	str	r3, [r4, #0]
 8029f26:	bd38      	pop	{r3, r4, r5, pc}
 8029f28:	2001384c 	.word	0x2001384c

08029f2c <_write_r>:
 8029f2c:	b538      	push	{r3, r4, r5, lr}
 8029f2e:	4d07      	ldr	r5, [pc, #28]	; (8029f4c <_write_r+0x20>)
 8029f30:	4604      	mov	r4, r0
 8029f32:	4608      	mov	r0, r1
 8029f34:	4611      	mov	r1, r2
 8029f36:	2200      	movs	r2, #0
 8029f38:	602a      	str	r2, [r5, #0]
 8029f3a:	461a      	mov	r2, r3
 8029f3c:	f7d8 fa72 	bl	8002424 <_write>
 8029f40:	1c43      	adds	r3, r0, #1
 8029f42:	d102      	bne.n	8029f4a <_write_r+0x1e>
 8029f44:	682b      	ldr	r3, [r5, #0]
 8029f46:	b103      	cbz	r3, 8029f4a <_write_r+0x1e>
 8029f48:	6023      	str	r3, [r4, #0]
 8029f4a:	bd38      	pop	{r3, r4, r5, pc}
 8029f4c:	2001384c 	.word	0x2001384c

08029f50 <__errno>:
 8029f50:	4b01      	ldr	r3, [pc, #4]	; (8029f58 <__errno+0x8>)
 8029f52:	6818      	ldr	r0, [r3, #0]
 8029f54:	4770      	bx	lr
 8029f56:	bf00      	nop
 8029f58:	20000160 	.word	0x20000160

08029f5c <__libc_init_array>:
 8029f5c:	b570      	push	{r4, r5, r6, lr}
 8029f5e:	4d0d      	ldr	r5, [pc, #52]	; (8029f94 <__libc_init_array+0x38>)
 8029f60:	4c0d      	ldr	r4, [pc, #52]	; (8029f98 <__libc_init_array+0x3c>)
 8029f62:	1b64      	subs	r4, r4, r5
 8029f64:	10a4      	asrs	r4, r4, #2
 8029f66:	2600      	movs	r6, #0
 8029f68:	42a6      	cmp	r6, r4
 8029f6a:	d109      	bne.n	8029f80 <__libc_init_array+0x24>
 8029f6c:	4d0b      	ldr	r5, [pc, #44]	; (8029f9c <__libc_init_array+0x40>)
 8029f6e:	4c0c      	ldr	r4, [pc, #48]	; (8029fa0 <__libc_init_array+0x44>)
 8029f70:	f000 fd70 	bl	802aa54 <_init>
 8029f74:	1b64      	subs	r4, r4, r5
 8029f76:	10a4      	asrs	r4, r4, #2
 8029f78:	2600      	movs	r6, #0
 8029f7a:	42a6      	cmp	r6, r4
 8029f7c:	d105      	bne.n	8029f8a <__libc_init_array+0x2e>
 8029f7e:	bd70      	pop	{r4, r5, r6, pc}
 8029f80:	f855 3b04 	ldr.w	r3, [r5], #4
 8029f84:	4798      	blx	r3
 8029f86:	3601      	adds	r6, #1
 8029f88:	e7ee      	b.n	8029f68 <__libc_init_array+0xc>
 8029f8a:	f855 3b04 	ldr.w	r3, [r5], #4
 8029f8e:	4798      	blx	r3
 8029f90:	3601      	adds	r6, #1
 8029f92:	e7f2      	b.n	8029f7a <__libc_init_array+0x1e>
 8029f94:	0815e520 	.word	0x0815e520
 8029f98:	0815e520 	.word	0x0815e520
 8029f9c:	0815e520 	.word	0x0815e520
 8029fa0:	0815e534 	.word	0x0815e534

08029fa4 <__retarget_lock_init_recursive>:
 8029fa4:	4770      	bx	lr

08029fa6 <__retarget_lock_acquire_recursive>:
 8029fa6:	4770      	bx	lr

08029fa8 <__retarget_lock_release_recursive>:
 8029fa8:	4770      	bx	lr

08029faa <memcpy>:
 8029faa:	440a      	add	r2, r1
 8029fac:	4291      	cmp	r1, r2
 8029fae:	f100 33ff 	add.w	r3, r0, #4294967295
 8029fb2:	d100      	bne.n	8029fb6 <memcpy+0xc>
 8029fb4:	4770      	bx	lr
 8029fb6:	b510      	push	{r4, lr}
 8029fb8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8029fbc:	f803 4f01 	strb.w	r4, [r3, #1]!
 8029fc0:	4291      	cmp	r1, r2
 8029fc2:	d1f9      	bne.n	8029fb8 <memcpy+0xe>
 8029fc4:	bd10      	pop	{r4, pc}
	...

08029fc8 <__register_exitproc>:
 8029fc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8029fcc:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 802a080 <__register_exitproc+0xb8>
 8029fd0:	4606      	mov	r6, r0
 8029fd2:	f8d8 0000 	ldr.w	r0, [r8]
 8029fd6:	461f      	mov	r7, r3
 8029fd8:	460d      	mov	r5, r1
 8029fda:	4691      	mov	r9, r2
 8029fdc:	f7ff ffe3 	bl	8029fa6 <__retarget_lock_acquire_recursive>
 8029fe0:	4b23      	ldr	r3, [pc, #140]	; (802a070 <__register_exitproc+0xa8>)
 8029fe2:	681c      	ldr	r4, [r3, #0]
 8029fe4:	b934      	cbnz	r4, 8029ff4 <__register_exitproc+0x2c>
 8029fe6:	4c23      	ldr	r4, [pc, #140]	; (802a074 <__register_exitproc+0xac>)
 8029fe8:	601c      	str	r4, [r3, #0]
 8029fea:	4b23      	ldr	r3, [pc, #140]	; (802a078 <__register_exitproc+0xb0>)
 8029fec:	b113      	cbz	r3, 8029ff4 <__register_exitproc+0x2c>
 8029fee:	681b      	ldr	r3, [r3, #0]
 8029ff0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8029ff4:	6863      	ldr	r3, [r4, #4]
 8029ff6:	2b1f      	cmp	r3, #31
 8029ff8:	dd07      	ble.n	802a00a <__register_exitproc+0x42>
 8029ffa:	f8d8 0000 	ldr.w	r0, [r8]
 8029ffe:	f7ff ffd3 	bl	8029fa8 <__retarget_lock_release_recursive>
 802a002:	f04f 30ff 	mov.w	r0, #4294967295
 802a006:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802a00a:	b32e      	cbz	r6, 802a058 <__register_exitproc+0x90>
 802a00c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802a010:	b968      	cbnz	r0, 802a02e <__register_exitproc+0x66>
 802a012:	4b1a      	ldr	r3, [pc, #104]	; (802a07c <__register_exitproc+0xb4>)
 802a014:	2b00      	cmp	r3, #0
 802a016:	d0f0      	beq.n	8029ffa <__register_exitproc+0x32>
 802a018:	f44f 7084 	mov.w	r0, #264	; 0x108
 802a01c:	f7ff fcbe 	bl	802999c <malloc>
 802a020:	2800      	cmp	r0, #0
 802a022:	d0ea      	beq.n	8029ffa <__register_exitproc+0x32>
 802a024:	2300      	movs	r3, #0
 802a026:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802a02a:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802a02e:	6863      	ldr	r3, [r4, #4]
 802a030:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802a034:	2201      	movs	r2, #1
 802a036:	409a      	lsls	r2, r3
 802a038:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802a03c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802a040:	4313      	orrs	r3, r2
 802a042:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802a046:	2e02      	cmp	r6, #2
 802a048:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802a04c:	bf02      	ittt	eq
 802a04e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802a052:	4313      	orreq	r3, r2
 802a054:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802a058:	6863      	ldr	r3, [r4, #4]
 802a05a:	f8d8 0000 	ldr.w	r0, [r8]
 802a05e:	1c5a      	adds	r2, r3, #1
 802a060:	3302      	adds	r3, #2
 802a062:	6062      	str	r2, [r4, #4]
 802a064:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802a068:	f7ff ff9e 	bl	8029fa8 <__retarget_lock_release_recursive>
 802a06c:	2000      	movs	r0, #0
 802a06e:	e7ca      	b.n	802a006 <__register_exitproc+0x3e>
 802a070:	200138e0 	.word	0x200138e0
 802a074:	20013854 	.word	0x20013854
 802a078:	08041f8c 	.word	0x08041f8c
 802a07c:	0802999d 	.word	0x0802999d
 802a080:	20000164 	.word	0x20000164

0802a084 <_free_r>:
 802a084:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802a086:	2900      	cmp	r1, #0
 802a088:	d044      	beq.n	802a114 <_free_r+0x90>
 802a08a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802a08e:	9001      	str	r0, [sp, #4]
 802a090:	2b00      	cmp	r3, #0
 802a092:	f1a1 0404 	sub.w	r4, r1, #4
 802a096:	bfb8      	it	lt
 802a098:	18e4      	addlt	r4, r4, r3
 802a09a:	f7ff fd2f 	bl	8029afc <__malloc_lock>
 802a09e:	4a1e      	ldr	r2, [pc, #120]	; (802a118 <_free_r+0x94>)
 802a0a0:	9801      	ldr	r0, [sp, #4]
 802a0a2:	6813      	ldr	r3, [r2, #0]
 802a0a4:	b933      	cbnz	r3, 802a0b4 <_free_r+0x30>
 802a0a6:	6063      	str	r3, [r4, #4]
 802a0a8:	6014      	str	r4, [r2, #0]
 802a0aa:	b003      	add	sp, #12
 802a0ac:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802a0b0:	f7ff bd2a 	b.w	8029b08 <__malloc_unlock>
 802a0b4:	42a3      	cmp	r3, r4
 802a0b6:	d908      	bls.n	802a0ca <_free_r+0x46>
 802a0b8:	6825      	ldr	r5, [r4, #0]
 802a0ba:	1961      	adds	r1, r4, r5
 802a0bc:	428b      	cmp	r3, r1
 802a0be:	bf01      	itttt	eq
 802a0c0:	6819      	ldreq	r1, [r3, #0]
 802a0c2:	685b      	ldreq	r3, [r3, #4]
 802a0c4:	1949      	addeq	r1, r1, r5
 802a0c6:	6021      	streq	r1, [r4, #0]
 802a0c8:	e7ed      	b.n	802a0a6 <_free_r+0x22>
 802a0ca:	461a      	mov	r2, r3
 802a0cc:	685b      	ldr	r3, [r3, #4]
 802a0ce:	b10b      	cbz	r3, 802a0d4 <_free_r+0x50>
 802a0d0:	42a3      	cmp	r3, r4
 802a0d2:	d9fa      	bls.n	802a0ca <_free_r+0x46>
 802a0d4:	6811      	ldr	r1, [r2, #0]
 802a0d6:	1855      	adds	r5, r2, r1
 802a0d8:	42a5      	cmp	r5, r4
 802a0da:	d10b      	bne.n	802a0f4 <_free_r+0x70>
 802a0dc:	6824      	ldr	r4, [r4, #0]
 802a0de:	4421      	add	r1, r4
 802a0e0:	1854      	adds	r4, r2, r1
 802a0e2:	42a3      	cmp	r3, r4
 802a0e4:	6011      	str	r1, [r2, #0]
 802a0e6:	d1e0      	bne.n	802a0aa <_free_r+0x26>
 802a0e8:	681c      	ldr	r4, [r3, #0]
 802a0ea:	685b      	ldr	r3, [r3, #4]
 802a0ec:	6053      	str	r3, [r2, #4]
 802a0ee:	440c      	add	r4, r1
 802a0f0:	6014      	str	r4, [r2, #0]
 802a0f2:	e7da      	b.n	802a0aa <_free_r+0x26>
 802a0f4:	d902      	bls.n	802a0fc <_free_r+0x78>
 802a0f6:	230c      	movs	r3, #12
 802a0f8:	6003      	str	r3, [r0, #0]
 802a0fa:	e7d6      	b.n	802a0aa <_free_r+0x26>
 802a0fc:	6825      	ldr	r5, [r4, #0]
 802a0fe:	1961      	adds	r1, r4, r5
 802a100:	428b      	cmp	r3, r1
 802a102:	bf04      	itt	eq
 802a104:	6819      	ldreq	r1, [r3, #0]
 802a106:	685b      	ldreq	r3, [r3, #4]
 802a108:	6063      	str	r3, [r4, #4]
 802a10a:	bf04      	itt	eq
 802a10c:	1949      	addeq	r1, r1, r5
 802a10e:	6021      	streq	r1, [r4, #0]
 802a110:	6054      	str	r4, [r2, #4]
 802a112:	e7ca      	b.n	802a0aa <_free_r+0x26>
 802a114:	b003      	add	sp, #12
 802a116:	bd30      	pop	{r4, r5, pc}
 802a118:	20013708 	.word	0x20013708

0802a11c <__sfputc_r>:
 802a11c:	6893      	ldr	r3, [r2, #8]
 802a11e:	3b01      	subs	r3, #1
 802a120:	2b00      	cmp	r3, #0
 802a122:	b410      	push	{r4}
 802a124:	6093      	str	r3, [r2, #8]
 802a126:	da08      	bge.n	802a13a <__sfputc_r+0x1e>
 802a128:	6994      	ldr	r4, [r2, #24]
 802a12a:	42a3      	cmp	r3, r4
 802a12c:	db01      	blt.n	802a132 <__sfputc_r+0x16>
 802a12e:	290a      	cmp	r1, #10
 802a130:	d103      	bne.n	802a13a <__sfputc_r+0x1e>
 802a132:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a136:	f000 bb73 	b.w	802a820 <__swbuf_r>
 802a13a:	6813      	ldr	r3, [r2, #0]
 802a13c:	1c58      	adds	r0, r3, #1
 802a13e:	6010      	str	r0, [r2, #0]
 802a140:	7019      	strb	r1, [r3, #0]
 802a142:	4608      	mov	r0, r1
 802a144:	f85d 4b04 	ldr.w	r4, [sp], #4
 802a148:	4770      	bx	lr

0802a14a <__sfputs_r>:
 802a14a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a14c:	4606      	mov	r6, r0
 802a14e:	460f      	mov	r7, r1
 802a150:	4614      	mov	r4, r2
 802a152:	18d5      	adds	r5, r2, r3
 802a154:	42ac      	cmp	r4, r5
 802a156:	d101      	bne.n	802a15c <__sfputs_r+0x12>
 802a158:	2000      	movs	r0, #0
 802a15a:	e007      	b.n	802a16c <__sfputs_r+0x22>
 802a15c:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a160:	463a      	mov	r2, r7
 802a162:	4630      	mov	r0, r6
 802a164:	f7ff ffda 	bl	802a11c <__sfputc_r>
 802a168:	1c43      	adds	r3, r0, #1
 802a16a:	d1f3      	bne.n	802a154 <__sfputs_r+0xa>
 802a16c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802a170 <_vfiprintf_r>:
 802a170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a174:	460d      	mov	r5, r1
 802a176:	b09d      	sub	sp, #116	; 0x74
 802a178:	4614      	mov	r4, r2
 802a17a:	4698      	mov	r8, r3
 802a17c:	4606      	mov	r6, r0
 802a17e:	b118      	cbz	r0, 802a188 <_vfiprintf_r+0x18>
 802a180:	6a03      	ldr	r3, [r0, #32]
 802a182:	b90b      	cbnz	r3, 802a188 <_vfiprintf_r+0x18>
 802a184:	f7ff fd60 	bl	8029c48 <__sinit>
 802a188:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a18a:	07d9      	lsls	r1, r3, #31
 802a18c:	d405      	bmi.n	802a19a <_vfiprintf_r+0x2a>
 802a18e:	89ab      	ldrh	r3, [r5, #12]
 802a190:	059a      	lsls	r2, r3, #22
 802a192:	d402      	bmi.n	802a19a <_vfiprintf_r+0x2a>
 802a194:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a196:	f7ff ff06 	bl	8029fa6 <__retarget_lock_acquire_recursive>
 802a19a:	89ab      	ldrh	r3, [r5, #12]
 802a19c:	071b      	lsls	r3, r3, #28
 802a19e:	d501      	bpl.n	802a1a4 <_vfiprintf_r+0x34>
 802a1a0:	692b      	ldr	r3, [r5, #16]
 802a1a2:	b99b      	cbnz	r3, 802a1cc <_vfiprintf_r+0x5c>
 802a1a4:	4629      	mov	r1, r5
 802a1a6:	4630      	mov	r0, r6
 802a1a8:	f000 fb78 	bl	802a89c <__swsetup_r>
 802a1ac:	b170      	cbz	r0, 802a1cc <_vfiprintf_r+0x5c>
 802a1ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a1b0:	07dc      	lsls	r4, r3, #31
 802a1b2:	d504      	bpl.n	802a1be <_vfiprintf_r+0x4e>
 802a1b4:	f04f 30ff 	mov.w	r0, #4294967295
 802a1b8:	b01d      	add	sp, #116	; 0x74
 802a1ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a1be:	89ab      	ldrh	r3, [r5, #12]
 802a1c0:	0598      	lsls	r0, r3, #22
 802a1c2:	d4f7      	bmi.n	802a1b4 <_vfiprintf_r+0x44>
 802a1c4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a1c6:	f7ff feef 	bl	8029fa8 <__retarget_lock_release_recursive>
 802a1ca:	e7f3      	b.n	802a1b4 <_vfiprintf_r+0x44>
 802a1cc:	2300      	movs	r3, #0
 802a1ce:	9309      	str	r3, [sp, #36]	; 0x24
 802a1d0:	2320      	movs	r3, #32
 802a1d2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802a1d6:	f8cd 800c 	str.w	r8, [sp, #12]
 802a1da:	2330      	movs	r3, #48	; 0x30
 802a1dc:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 802a390 <_vfiprintf_r+0x220>
 802a1e0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802a1e4:	f04f 0901 	mov.w	r9, #1
 802a1e8:	4623      	mov	r3, r4
 802a1ea:	469a      	mov	sl, r3
 802a1ec:	f813 2b01 	ldrb.w	r2, [r3], #1
 802a1f0:	b10a      	cbz	r2, 802a1f6 <_vfiprintf_r+0x86>
 802a1f2:	2a25      	cmp	r2, #37	; 0x25
 802a1f4:	d1f9      	bne.n	802a1ea <_vfiprintf_r+0x7a>
 802a1f6:	ebba 0b04 	subs.w	fp, sl, r4
 802a1fa:	d00b      	beq.n	802a214 <_vfiprintf_r+0xa4>
 802a1fc:	465b      	mov	r3, fp
 802a1fe:	4622      	mov	r2, r4
 802a200:	4629      	mov	r1, r5
 802a202:	4630      	mov	r0, r6
 802a204:	f7ff ffa1 	bl	802a14a <__sfputs_r>
 802a208:	3001      	adds	r0, #1
 802a20a:	f000 80a9 	beq.w	802a360 <_vfiprintf_r+0x1f0>
 802a20e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802a210:	445a      	add	r2, fp
 802a212:	9209      	str	r2, [sp, #36]	; 0x24
 802a214:	f89a 3000 	ldrb.w	r3, [sl]
 802a218:	2b00      	cmp	r3, #0
 802a21a:	f000 80a1 	beq.w	802a360 <_vfiprintf_r+0x1f0>
 802a21e:	2300      	movs	r3, #0
 802a220:	f04f 32ff 	mov.w	r2, #4294967295
 802a224:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802a228:	f10a 0a01 	add.w	sl, sl, #1
 802a22c:	9304      	str	r3, [sp, #16]
 802a22e:	9307      	str	r3, [sp, #28]
 802a230:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802a234:	931a      	str	r3, [sp, #104]	; 0x68
 802a236:	4654      	mov	r4, sl
 802a238:	2205      	movs	r2, #5
 802a23a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a23e:	4854      	ldr	r0, [pc, #336]	; (802a390 <_vfiprintf_r+0x220>)
 802a240:	f7d6 f836 	bl	80002b0 <memchr>
 802a244:	9a04      	ldr	r2, [sp, #16]
 802a246:	b9d8      	cbnz	r0, 802a280 <_vfiprintf_r+0x110>
 802a248:	06d1      	lsls	r1, r2, #27
 802a24a:	bf44      	itt	mi
 802a24c:	2320      	movmi	r3, #32
 802a24e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a252:	0713      	lsls	r3, r2, #28
 802a254:	bf44      	itt	mi
 802a256:	232b      	movmi	r3, #43	; 0x2b
 802a258:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802a25c:	f89a 3000 	ldrb.w	r3, [sl]
 802a260:	2b2a      	cmp	r3, #42	; 0x2a
 802a262:	d015      	beq.n	802a290 <_vfiprintf_r+0x120>
 802a264:	9a07      	ldr	r2, [sp, #28]
 802a266:	4654      	mov	r4, sl
 802a268:	2000      	movs	r0, #0
 802a26a:	f04f 0c0a 	mov.w	ip, #10
 802a26e:	4621      	mov	r1, r4
 802a270:	f811 3b01 	ldrb.w	r3, [r1], #1
 802a274:	3b30      	subs	r3, #48	; 0x30
 802a276:	2b09      	cmp	r3, #9
 802a278:	d94d      	bls.n	802a316 <_vfiprintf_r+0x1a6>
 802a27a:	b1b0      	cbz	r0, 802a2aa <_vfiprintf_r+0x13a>
 802a27c:	9207      	str	r2, [sp, #28]
 802a27e:	e014      	b.n	802a2aa <_vfiprintf_r+0x13a>
 802a280:	eba0 0308 	sub.w	r3, r0, r8
 802a284:	fa09 f303 	lsl.w	r3, r9, r3
 802a288:	4313      	orrs	r3, r2
 802a28a:	9304      	str	r3, [sp, #16]
 802a28c:	46a2      	mov	sl, r4
 802a28e:	e7d2      	b.n	802a236 <_vfiprintf_r+0xc6>
 802a290:	9b03      	ldr	r3, [sp, #12]
 802a292:	1d19      	adds	r1, r3, #4
 802a294:	681b      	ldr	r3, [r3, #0]
 802a296:	9103      	str	r1, [sp, #12]
 802a298:	2b00      	cmp	r3, #0
 802a29a:	bfbb      	ittet	lt
 802a29c:	425b      	neglt	r3, r3
 802a29e:	f042 0202 	orrlt.w	r2, r2, #2
 802a2a2:	9307      	strge	r3, [sp, #28]
 802a2a4:	9307      	strlt	r3, [sp, #28]
 802a2a6:	bfb8      	it	lt
 802a2a8:	9204      	strlt	r2, [sp, #16]
 802a2aa:	7823      	ldrb	r3, [r4, #0]
 802a2ac:	2b2e      	cmp	r3, #46	; 0x2e
 802a2ae:	d10c      	bne.n	802a2ca <_vfiprintf_r+0x15a>
 802a2b0:	7863      	ldrb	r3, [r4, #1]
 802a2b2:	2b2a      	cmp	r3, #42	; 0x2a
 802a2b4:	d134      	bne.n	802a320 <_vfiprintf_r+0x1b0>
 802a2b6:	9b03      	ldr	r3, [sp, #12]
 802a2b8:	1d1a      	adds	r2, r3, #4
 802a2ba:	681b      	ldr	r3, [r3, #0]
 802a2bc:	9203      	str	r2, [sp, #12]
 802a2be:	2b00      	cmp	r3, #0
 802a2c0:	bfb8      	it	lt
 802a2c2:	f04f 33ff 	movlt.w	r3, #4294967295
 802a2c6:	3402      	adds	r4, #2
 802a2c8:	9305      	str	r3, [sp, #20]
 802a2ca:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 802a3a0 <_vfiprintf_r+0x230>
 802a2ce:	7821      	ldrb	r1, [r4, #0]
 802a2d0:	2203      	movs	r2, #3
 802a2d2:	4650      	mov	r0, sl
 802a2d4:	f7d5 ffec 	bl	80002b0 <memchr>
 802a2d8:	b138      	cbz	r0, 802a2ea <_vfiprintf_r+0x17a>
 802a2da:	9b04      	ldr	r3, [sp, #16]
 802a2dc:	eba0 000a 	sub.w	r0, r0, sl
 802a2e0:	2240      	movs	r2, #64	; 0x40
 802a2e2:	4082      	lsls	r2, r0
 802a2e4:	4313      	orrs	r3, r2
 802a2e6:	3401      	adds	r4, #1
 802a2e8:	9304      	str	r3, [sp, #16]
 802a2ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 802a2ee:	4829      	ldr	r0, [pc, #164]	; (802a394 <_vfiprintf_r+0x224>)
 802a2f0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802a2f4:	2206      	movs	r2, #6
 802a2f6:	f7d5 ffdb 	bl	80002b0 <memchr>
 802a2fa:	2800      	cmp	r0, #0
 802a2fc:	d03f      	beq.n	802a37e <_vfiprintf_r+0x20e>
 802a2fe:	4b26      	ldr	r3, [pc, #152]	; (802a398 <_vfiprintf_r+0x228>)
 802a300:	bb1b      	cbnz	r3, 802a34a <_vfiprintf_r+0x1da>
 802a302:	9b03      	ldr	r3, [sp, #12]
 802a304:	3307      	adds	r3, #7
 802a306:	f023 0307 	bic.w	r3, r3, #7
 802a30a:	3308      	adds	r3, #8
 802a30c:	9303      	str	r3, [sp, #12]
 802a30e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a310:	443b      	add	r3, r7
 802a312:	9309      	str	r3, [sp, #36]	; 0x24
 802a314:	e768      	b.n	802a1e8 <_vfiprintf_r+0x78>
 802a316:	fb0c 3202 	mla	r2, ip, r2, r3
 802a31a:	460c      	mov	r4, r1
 802a31c:	2001      	movs	r0, #1
 802a31e:	e7a6      	b.n	802a26e <_vfiprintf_r+0xfe>
 802a320:	2300      	movs	r3, #0
 802a322:	3401      	adds	r4, #1
 802a324:	9305      	str	r3, [sp, #20]
 802a326:	4619      	mov	r1, r3
 802a328:	f04f 0c0a 	mov.w	ip, #10
 802a32c:	4620      	mov	r0, r4
 802a32e:	f810 2b01 	ldrb.w	r2, [r0], #1
 802a332:	3a30      	subs	r2, #48	; 0x30
 802a334:	2a09      	cmp	r2, #9
 802a336:	d903      	bls.n	802a340 <_vfiprintf_r+0x1d0>
 802a338:	2b00      	cmp	r3, #0
 802a33a:	d0c6      	beq.n	802a2ca <_vfiprintf_r+0x15a>
 802a33c:	9105      	str	r1, [sp, #20]
 802a33e:	e7c4      	b.n	802a2ca <_vfiprintf_r+0x15a>
 802a340:	fb0c 2101 	mla	r1, ip, r1, r2
 802a344:	4604      	mov	r4, r0
 802a346:	2301      	movs	r3, #1
 802a348:	e7f0      	b.n	802a32c <_vfiprintf_r+0x1bc>
 802a34a:	ab03      	add	r3, sp, #12
 802a34c:	9300      	str	r3, [sp, #0]
 802a34e:	462a      	mov	r2, r5
 802a350:	4b12      	ldr	r3, [pc, #72]	; (802a39c <_vfiprintf_r+0x22c>)
 802a352:	a904      	add	r1, sp, #16
 802a354:	4630      	mov	r0, r6
 802a356:	f3af 8000 	nop.w
 802a35a:	4607      	mov	r7, r0
 802a35c:	1c78      	adds	r0, r7, #1
 802a35e:	d1d6      	bne.n	802a30e <_vfiprintf_r+0x19e>
 802a360:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802a362:	07d9      	lsls	r1, r3, #31
 802a364:	d405      	bmi.n	802a372 <_vfiprintf_r+0x202>
 802a366:	89ab      	ldrh	r3, [r5, #12]
 802a368:	059a      	lsls	r2, r3, #22
 802a36a:	d402      	bmi.n	802a372 <_vfiprintf_r+0x202>
 802a36c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802a36e:	f7ff fe1b 	bl	8029fa8 <__retarget_lock_release_recursive>
 802a372:	89ab      	ldrh	r3, [r5, #12]
 802a374:	065b      	lsls	r3, r3, #25
 802a376:	f53f af1d 	bmi.w	802a1b4 <_vfiprintf_r+0x44>
 802a37a:	9809      	ldr	r0, [sp, #36]	; 0x24
 802a37c:	e71c      	b.n	802a1b8 <_vfiprintf_r+0x48>
 802a37e:	ab03      	add	r3, sp, #12
 802a380:	9300      	str	r3, [sp, #0]
 802a382:	462a      	mov	r2, r5
 802a384:	4b05      	ldr	r3, [pc, #20]	; (802a39c <_vfiprintf_r+0x22c>)
 802a386:	a904      	add	r1, sp, #16
 802a388:	4630      	mov	r0, r6
 802a38a:	f000 f879 	bl	802a480 <_printf_i>
 802a38e:	e7e4      	b.n	802a35a <_vfiprintf_r+0x1ea>
 802a390:	08041f90 	.word	0x08041f90
 802a394:	08041f9a 	.word	0x08041f9a
 802a398:	00000000 	.word	0x00000000
 802a39c:	0802a14b 	.word	0x0802a14b
 802a3a0:	08041f96 	.word	0x08041f96

0802a3a4 <_printf_common>:
 802a3a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a3a8:	4616      	mov	r6, r2
 802a3aa:	4699      	mov	r9, r3
 802a3ac:	688a      	ldr	r2, [r1, #8]
 802a3ae:	690b      	ldr	r3, [r1, #16]
 802a3b0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802a3b4:	4293      	cmp	r3, r2
 802a3b6:	bfb8      	it	lt
 802a3b8:	4613      	movlt	r3, r2
 802a3ba:	6033      	str	r3, [r6, #0]
 802a3bc:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802a3c0:	4607      	mov	r7, r0
 802a3c2:	460c      	mov	r4, r1
 802a3c4:	b10a      	cbz	r2, 802a3ca <_printf_common+0x26>
 802a3c6:	3301      	adds	r3, #1
 802a3c8:	6033      	str	r3, [r6, #0]
 802a3ca:	6823      	ldr	r3, [r4, #0]
 802a3cc:	0699      	lsls	r1, r3, #26
 802a3ce:	bf42      	ittt	mi
 802a3d0:	6833      	ldrmi	r3, [r6, #0]
 802a3d2:	3302      	addmi	r3, #2
 802a3d4:	6033      	strmi	r3, [r6, #0]
 802a3d6:	6825      	ldr	r5, [r4, #0]
 802a3d8:	f015 0506 	ands.w	r5, r5, #6
 802a3dc:	d106      	bne.n	802a3ec <_printf_common+0x48>
 802a3de:	f104 0a19 	add.w	sl, r4, #25
 802a3e2:	68e3      	ldr	r3, [r4, #12]
 802a3e4:	6832      	ldr	r2, [r6, #0]
 802a3e6:	1a9b      	subs	r3, r3, r2
 802a3e8:	42ab      	cmp	r3, r5
 802a3ea:	dc26      	bgt.n	802a43a <_printf_common+0x96>
 802a3ec:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802a3f0:	1e13      	subs	r3, r2, #0
 802a3f2:	6822      	ldr	r2, [r4, #0]
 802a3f4:	bf18      	it	ne
 802a3f6:	2301      	movne	r3, #1
 802a3f8:	0692      	lsls	r2, r2, #26
 802a3fa:	d42b      	bmi.n	802a454 <_printf_common+0xb0>
 802a3fc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802a400:	4649      	mov	r1, r9
 802a402:	4638      	mov	r0, r7
 802a404:	47c0      	blx	r8
 802a406:	3001      	adds	r0, #1
 802a408:	d01e      	beq.n	802a448 <_printf_common+0xa4>
 802a40a:	6823      	ldr	r3, [r4, #0]
 802a40c:	6922      	ldr	r2, [r4, #16]
 802a40e:	f003 0306 	and.w	r3, r3, #6
 802a412:	2b04      	cmp	r3, #4
 802a414:	bf02      	ittt	eq
 802a416:	68e5      	ldreq	r5, [r4, #12]
 802a418:	6833      	ldreq	r3, [r6, #0]
 802a41a:	1aed      	subeq	r5, r5, r3
 802a41c:	68a3      	ldr	r3, [r4, #8]
 802a41e:	bf0c      	ite	eq
 802a420:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802a424:	2500      	movne	r5, #0
 802a426:	4293      	cmp	r3, r2
 802a428:	bfc4      	itt	gt
 802a42a:	1a9b      	subgt	r3, r3, r2
 802a42c:	18ed      	addgt	r5, r5, r3
 802a42e:	2600      	movs	r6, #0
 802a430:	341a      	adds	r4, #26
 802a432:	42b5      	cmp	r5, r6
 802a434:	d11a      	bne.n	802a46c <_printf_common+0xc8>
 802a436:	2000      	movs	r0, #0
 802a438:	e008      	b.n	802a44c <_printf_common+0xa8>
 802a43a:	2301      	movs	r3, #1
 802a43c:	4652      	mov	r2, sl
 802a43e:	4649      	mov	r1, r9
 802a440:	4638      	mov	r0, r7
 802a442:	47c0      	blx	r8
 802a444:	3001      	adds	r0, #1
 802a446:	d103      	bne.n	802a450 <_printf_common+0xac>
 802a448:	f04f 30ff 	mov.w	r0, #4294967295
 802a44c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a450:	3501      	adds	r5, #1
 802a452:	e7c6      	b.n	802a3e2 <_printf_common+0x3e>
 802a454:	18e1      	adds	r1, r4, r3
 802a456:	1c5a      	adds	r2, r3, #1
 802a458:	2030      	movs	r0, #48	; 0x30
 802a45a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802a45e:	4422      	add	r2, r4
 802a460:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802a464:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802a468:	3302      	adds	r3, #2
 802a46a:	e7c7      	b.n	802a3fc <_printf_common+0x58>
 802a46c:	2301      	movs	r3, #1
 802a46e:	4622      	mov	r2, r4
 802a470:	4649      	mov	r1, r9
 802a472:	4638      	mov	r0, r7
 802a474:	47c0      	blx	r8
 802a476:	3001      	adds	r0, #1
 802a478:	d0e6      	beq.n	802a448 <_printf_common+0xa4>
 802a47a:	3601      	adds	r6, #1
 802a47c:	e7d9      	b.n	802a432 <_printf_common+0x8e>
	...

0802a480 <_printf_i>:
 802a480:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802a484:	7e0f      	ldrb	r7, [r1, #24]
 802a486:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802a488:	2f78      	cmp	r7, #120	; 0x78
 802a48a:	4691      	mov	r9, r2
 802a48c:	4680      	mov	r8, r0
 802a48e:	460c      	mov	r4, r1
 802a490:	469a      	mov	sl, r3
 802a492:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802a496:	d807      	bhi.n	802a4a8 <_printf_i+0x28>
 802a498:	2f62      	cmp	r7, #98	; 0x62
 802a49a:	d80a      	bhi.n	802a4b2 <_printf_i+0x32>
 802a49c:	2f00      	cmp	r7, #0
 802a49e:	f000 80d4 	beq.w	802a64a <_printf_i+0x1ca>
 802a4a2:	2f58      	cmp	r7, #88	; 0x58
 802a4a4:	f000 80c0 	beq.w	802a628 <_printf_i+0x1a8>
 802a4a8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a4ac:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802a4b0:	e03a      	b.n	802a528 <_printf_i+0xa8>
 802a4b2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802a4b6:	2b15      	cmp	r3, #21
 802a4b8:	d8f6      	bhi.n	802a4a8 <_printf_i+0x28>
 802a4ba:	a101      	add	r1, pc, #4	; (adr r1, 802a4c0 <_printf_i+0x40>)
 802a4bc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802a4c0:	0802a519 	.word	0x0802a519
 802a4c4:	0802a52d 	.word	0x0802a52d
 802a4c8:	0802a4a9 	.word	0x0802a4a9
 802a4cc:	0802a4a9 	.word	0x0802a4a9
 802a4d0:	0802a4a9 	.word	0x0802a4a9
 802a4d4:	0802a4a9 	.word	0x0802a4a9
 802a4d8:	0802a52d 	.word	0x0802a52d
 802a4dc:	0802a4a9 	.word	0x0802a4a9
 802a4e0:	0802a4a9 	.word	0x0802a4a9
 802a4e4:	0802a4a9 	.word	0x0802a4a9
 802a4e8:	0802a4a9 	.word	0x0802a4a9
 802a4ec:	0802a631 	.word	0x0802a631
 802a4f0:	0802a559 	.word	0x0802a559
 802a4f4:	0802a5eb 	.word	0x0802a5eb
 802a4f8:	0802a4a9 	.word	0x0802a4a9
 802a4fc:	0802a4a9 	.word	0x0802a4a9
 802a500:	0802a653 	.word	0x0802a653
 802a504:	0802a4a9 	.word	0x0802a4a9
 802a508:	0802a559 	.word	0x0802a559
 802a50c:	0802a4a9 	.word	0x0802a4a9
 802a510:	0802a4a9 	.word	0x0802a4a9
 802a514:	0802a5f3 	.word	0x0802a5f3
 802a518:	682b      	ldr	r3, [r5, #0]
 802a51a:	1d1a      	adds	r2, r3, #4
 802a51c:	681b      	ldr	r3, [r3, #0]
 802a51e:	602a      	str	r2, [r5, #0]
 802a520:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802a524:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802a528:	2301      	movs	r3, #1
 802a52a:	e09f      	b.n	802a66c <_printf_i+0x1ec>
 802a52c:	6820      	ldr	r0, [r4, #0]
 802a52e:	682b      	ldr	r3, [r5, #0]
 802a530:	0607      	lsls	r7, r0, #24
 802a532:	f103 0104 	add.w	r1, r3, #4
 802a536:	6029      	str	r1, [r5, #0]
 802a538:	d501      	bpl.n	802a53e <_printf_i+0xbe>
 802a53a:	681e      	ldr	r6, [r3, #0]
 802a53c:	e003      	b.n	802a546 <_printf_i+0xc6>
 802a53e:	0646      	lsls	r6, r0, #25
 802a540:	d5fb      	bpl.n	802a53a <_printf_i+0xba>
 802a542:	f9b3 6000 	ldrsh.w	r6, [r3]
 802a546:	2e00      	cmp	r6, #0
 802a548:	da03      	bge.n	802a552 <_printf_i+0xd2>
 802a54a:	232d      	movs	r3, #45	; 0x2d
 802a54c:	4276      	negs	r6, r6
 802a54e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a552:	485a      	ldr	r0, [pc, #360]	; (802a6bc <_printf_i+0x23c>)
 802a554:	230a      	movs	r3, #10
 802a556:	e012      	b.n	802a57e <_printf_i+0xfe>
 802a558:	682b      	ldr	r3, [r5, #0]
 802a55a:	6820      	ldr	r0, [r4, #0]
 802a55c:	1d19      	adds	r1, r3, #4
 802a55e:	6029      	str	r1, [r5, #0]
 802a560:	0605      	lsls	r5, r0, #24
 802a562:	d501      	bpl.n	802a568 <_printf_i+0xe8>
 802a564:	681e      	ldr	r6, [r3, #0]
 802a566:	e002      	b.n	802a56e <_printf_i+0xee>
 802a568:	0641      	lsls	r1, r0, #25
 802a56a:	d5fb      	bpl.n	802a564 <_printf_i+0xe4>
 802a56c:	881e      	ldrh	r6, [r3, #0]
 802a56e:	4853      	ldr	r0, [pc, #332]	; (802a6bc <_printf_i+0x23c>)
 802a570:	2f6f      	cmp	r7, #111	; 0x6f
 802a572:	bf0c      	ite	eq
 802a574:	2308      	moveq	r3, #8
 802a576:	230a      	movne	r3, #10
 802a578:	2100      	movs	r1, #0
 802a57a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802a57e:	6865      	ldr	r5, [r4, #4]
 802a580:	60a5      	str	r5, [r4, #8]
 802a582:	2d00      	cmp	r5, #0
 802a584:	bfa2      	ittt	ge
 802a586:	6821      	ldrge	r1, [r4, #0]
 802a588:	f021 0104 	bicge.w	r1, r1, #4
 802a58c:	6021      	strge	r1, [r4, #0]
 802a58e:	b90e      	cbnz	r6, 802a594 <_printf_i+0x114>
 802a590:	2d00      	cmp	r5, #0
 802a592:	d04b      	beq.n	802a62c <_printf_i+0x1ac>
 802a594:	4615      	mov	r5, r2
 802a596:	fbb6 f1f3 	udiv	r1, r6, r3
 802a59a:	fb03 6711 	mls	r7, r3, r1, r6
 802a59e:	5dc7      	ldrb	r7, [r0, r7]
 802a5a0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802a5a4:	4637      	mov	r7, r6
 802a5a6:	42bb      	cmp	r3, r7
 802a5a8:	460e      	mov	r6, r1
 802a5aa:	d9f4      	bls.n	802a596 <_printf_i+0x116>
 802a5ac:	2b08      	cmp	r3, #8
 802a5ae:	d10b      	bne.n	802a5c8 <_printf_i+0x148>
 802a5b0:	6823      	ldr	r3, [r4, #0]
 802a5b2:	07de      	lsls	r6, r3, #31
 802a5b4:	d508      	bpl.n	802a5c8 <_printf_i+0x148>
 802a5b6:	6923      	ldr	r3, [r4, #16]
 802a5b8:	6861      	ldr	r1, [r4, #4]
 802a5ba:	4299      	cmp	r1, r3
 802a5bc:	bfde      	ittt	le
 802a5be:	2330      	movle	r3, #48	; 0x30
 802a5c0:	f805 3c01 	strble.w	r3, [r5, #-1]
 802a5c4:	f105 35ff 	addle.w	r5, r5, #4294967295
 802a5c8:	1b52      	subs	r2, r2, r5
 802a5ca:	6122      	str	r2, [r4, #16]
 802a5cc:	f8cd a000 	str.w	sl, [sp]
 802a5d0:	464b      	mov	r3, r9
 802a5d2:	aa03      	add	r2, sp, #12
 802a5d4:	4621      	mov	r1, r4
 802a5d6:	4640      	mov	r0, r8
 802a5d8:	f7ff fee4 	bl	802a3a4 <_printf_common>
 802a5dc:	3001      	adds	r0, #1
 802a5de:	d14a      	bne.n	802a676 <_printf_i+0x1f6>
 802a5e0:	f04f 30ff 	mov.w	r0, #4294967295
 802a5e4:	b004      	add	sp, #16
 802a5e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802a5ea:	6823      	ldr	r3, [r4, #0]
 802a5ec:	f043 0320 	orr.w	r3, r3, #32
 802a5f0:	6023      	str	r3, [r4, #0]
 802a5f2:	4833      	ldr	r0, [pc, #204]	; (802a6c0 <_printf_i+0x240>)
 802a5f4:	2778      	movs	r7, #120	; 0x78
 802a5f6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 802a5fa:	6823      	ldr	r3, [r4, #0]
 802a5fc:	6829      	ldr	r1, [r5, #0]
 802a5fe:	061f      	lsls	r7, r3, #24
 802a600:	f851 6b04 	ldr.w	r6, [r1], #4
 802a604:	d402      	bmi.n	802a60c <_printf_i+0x18c>
 802a606:	065f      	lsls	r7, r3, #25
 802a608:	bf48      	it	mi
 802a60a:	b2b6      	uxthmi	r6, r6
 802a60c:	07df      	lsls	r7, r3, #31
 802a60e:	bf48      	it	mi
 802a610:	f043 0320 	orrmi.w	r3, r3, #32
 802a614:	6029      	str	r1, [r5, #0]
 802a616:	bf48      	it	mi
 802a618:	6023      	strmi	r3, [r4, #0]
 802a61a:	b91e      	cbnz	r6, 802a624 <_printf_i+0x1a4>
 802a61c:	6823      	ldr	r3, [r4, #0]
 802a61e:	f023 0320 	bic.w	r3, r3, #32
 802a622:	6023      	str	r3, [r4, #0]
 802a624:	2310      	movs	r3, #16
 802a626:	e7a7      	b.n	802a578 <_printf_i+0xf8>
 802a628:	4824      	ldr	r0, [pc, #144]	; (802a6bc <_printf_i+0x23c>)
 802a62a:	e7e4      	b.n	802a5f6 <_printf_i+0x176>
 802a62c:	4615      	mov	r5, r2
 802a62e:	e7bd      	b.n	802a5ac <_printf_i+0x12c>
 802a630:	682b      	ldr	r3, [r5, #0]
 802a632:	6826      	ldr	r6, [r4, #0]
 802a634:	6961      	ldr	r1, [r4, #20]
 802a636:	1d18      	adds	r0, r3, #4
 802a638:	6028      	str	r0, [r5, #0]
 802a63a:	0635      	lsls	r5, r6, #24
 802a63c:	681b      	ldr	r3, [r3, #0]
 802a63e:	d501      	bpl.n	802a644 <_printf_i+0x1c4>
 802a640:	6019      	str	r1, [r3, #0]
 802a642:	e002      	b.n	802a64a <_printf_i+0x1ca>
 802a644:	0670      	lsls	r0, r6, #25
 802a646:	d5fb      	bpl.n	802a640 <_printf_i+0x1c0>
 802a648:	8019      	strh	r1, [r3, #0]
 802a64a:	2300      	movs	r3, #0
 802a64c:	6123      	str	r3, [r4, #16]
 802a64e:	4615      	mov	r5, r2
 802a650:	e7bc      	b.n	802a5cc <_printf_i+0x14c>
 802a652:	682b      	ldr	r3, [r5, #0]
 802a654:	1d1a      	adds	r2, r3, #4
 802a656:	602a      	str	r2, [r5, #0]
 802a658:	681d      	ldr	r5, [r3, #0]
 802a65a:	6862      	ldr	r2, [r4, #4]
 802a65c:	2100      	movs	r1, #0
 802a65e:	4628      	mov	r0, r5
 802a660:	f7d5 fe26 	bl	80002b0 <memchr>
 802a664:	b108      	cbz	r0, 802a66a <_printf_i+0x1ea>
 802a666:	1b40      	subs	r0, r0, r5
 802a668:	6060      	str	r0, [r4, #4]
 802a66a:	6863      	ldr	r3, [r4, #4]
 802a66c:	6123      	str	r3, [r4, #16]
 802a66e:	2300      	movs	r3, #0
 802a670:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802a674:	e7aa      	b.n	802a5cc <_printf_i+0x14c>
 802a676:	6923      	ldr	r3, [r4, #16]
 802a678:	462a      	mov	r2, r5
 802a67a:	4649      	mov	r1, r9
 802a67c:	4640      	mov	r0, r8
 802a67e:	47d0      	blx	sl
 802a680:	3001      	adds	r0, #1
 802a682:	d0ad      	beq.n	802a5e0 <_printf_i+0x160>
 802a684:	6823      	ldr	r3, [r4, #0]
 802a686:	079b      	lsls	r3, r3, #30
 802a688:	d413      	bmi.n	802a6b2 <_printf_i+0x232>
 802a68a:	68e0      	ldr	r0, [r4, #12]
 802a68c:	9b03      	ldr	r3, [sp, #12]
 802a68e:	4298      	cmp	r0, r3
 802a690:	bfb8      	it	lt
 802a692:	4618      	movlt	r0, r3
 802a694:	e7a6      	b.n	802a5e4 <_printf_i+0x164>
 802a696:	2301      	movs	r3, #1
 802a698:	4632      	mov	r2, r6
 802a69a:	4649      	mov	r1, r9
 802a69c:	4640      	mov	r0, r8
 802a69e:	47d0      	blx	sl
 802a6a0:	3001      	adds	r0, #1
 802a6a2:	d09d      	beq.n	802a5e0 <_printf_i+0x160>
 802a6a4:	3501      	adds	r5, #1
 802a6a6:	68e3      	ldr	r3, [r4, #12]
 802a6a8:	9903      	ldr	r1, [sp, #12]
 802a6aa:	1a5b      	subs	r3, r3, r1
 802a6ac:	42ab      	cmp	r3, r5
 802a6ae:	dcf2      	bgt.n	802a696 <_printf_i+0x216>
 802a6b0:	e7eb      	b.n	802a68a <_printf_i+0x20a>
 802a6b2:	2500      	movs	r5, #0
 802a6b4:	f104 0619 	add.w	r6, r4, #25
 802a6b8:	e7f5      	b.n	802a6a6 <_printf_i+0x226>
 802a6ba:	bf00      	nop
 802a6bc:	08041fa1 	.word	0x08041fa1
 802a6c0:	08041fb2 	.word	0x08041fb2

0802a6c4 <__sflush_r>:
 802a6c4:	898a      	ldrh	r2, [r1, #12]
 802a6c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802a6ca:	4605      	mov	r5, r0
 802a6cc:	0710      	lsls	r0, r2, #28
 802a6ce:	460c      	mov	r4, r1
 802a6d0:	d458      	bmi.n	802a784 <__sflush_r+0xc0>
 802a6d2:	684b      	ldr	r3, [r1, #4]
 802a6d4:	2b00      	cmp	r3, #0
 802a6d6:	dc05      	bgt.n	802a6e4 <__sflush_r+0x20>
 802a6d8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802a6da:	2b00      	cmp	r3, #0
 802a6dc:	dc02      	bgt.n	802a6e4 <__sflush_r+0x20>
 802a6de:	2000      	movs	r0, #0
 802a6e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802a6e4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a6e6:	2e00      	cmp	r6, #0
 802a6e8:	d0f9      	beq.n	802a6de <__sflush_r+0x1a>
 802a6ea:	2300      	movs	r3, #0
 802a6ec:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802a6f0:	682f      	ldr	r7, [r5, #0]
 802a6f2:	6a21      	ldr	r1, [r4, #32]
 802a6f4:	602b      	str	r3, [r5, #0]
 802a6f6:	d032      	beq.n	802a75e <__sflush_r+0x9a>
 802a6f8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802a6fa:	89a3      	ldrh	r3, [r4, #12]
 802a6fc:	075a      	lsls	r2, r3, #29
 802a6fe:	d505      	bpl.n	802a70c <__sflush_r+0x48>
 802a700:	6863      	ldr	r3, [r4, #4]
 802a702:	1ac0      	subs	r0, r0, r3
 802a704:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802a706:	b10b      	cbz	r3, 802a70c <__sflush_r+0x48>
 802a708:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802a70a:	1ac0      	subs	r0, r0, r3
 802a70c:	2300      	movs	r3, #0
 802a70e:	4602      	mov	r2, r0
 802a710:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802a712:	6a21      	ldr	r1, [r4, #32]
 802a714:	4628      	mov	r0, r5
 802a716:	47b0      	blx	r6
 802a718:	1c43      	adds	r3, r0, #1
 802a71a:	89a3      	ldrh	r3, [r4, #12]
 802a71c:	d106      	bne.n	802a72c <__sflush_r+0x68>
 802a71e:	6829      	ldr	r1, [r5, #0]
 802a720:	291d      	cmp	r1, #29
 802a722:	d82b      	bhi.n	802a77c <__sflush_r+0xb8>
 802a724:	4a29      	ldr	r2, [pc, #164]	; (802a7cc <__sflush_r+0x108>)
 802a726:	410a      	asrs	r2, r1
 802a728:	07d6      	lsls	r6, r2, #31
 802a72a:	d427      	bmi.n	802a77c <__sflush_r+0xb8>
 802a72c:	2200      	movs	r2, #0
 802a72e:	6062      	str	r2, [r4, #4]
 802a730:	04d9      	lsls	r1, r3, #19
 802a732:	6922      	ldr	r2, [r4, #16]
 802a734:	6022      	str	r2, [r4, #0]
 802a736:	d504      	bpl.n	802a742 <__sflush_r+0x7e>
 802a738:	1c42      	adds	r2, r0, #1
 802a73a:	d101      	bne.n	802a740 <__sflush_r+0x7c>
 802a73c:	682b      	ldr	r3, [r5, #0]
 802a73e:	b903      	cbnz	r3, 802a742 <__sflush_r+0x7e>
 802a740:	6560      	str	r0, [r4, #84]	; 0x54
 802a742:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a744:	602f      	str	r7, [r5, #0]
 802a746:	2900      	cmp	r1, #0
 802a748:	d0c9      	beq.n	802a6de <__sflush_r+0x1a>
 802a74a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a74e:	4299      	cmp	r1, r3
 802a750:	d002      	beq.n	802a758 <__sflush_r+0x94>
 802a752:	4628      	mov	r0, r5
 802a754:	f7ff fc96 	bl	802a084 <_free_r>
 802a758:	2000      	movs	r0, #0
 802a75a:	6360      	str	r0, [r4, #52]	; 0x34
 802a75c:	e7c0      	b.n	802a6e0 <__sflush_r+0x1c>
 802a75e:	2301      	movs	r3, #1
 802a760:	4628      	mov	r0, r5
 802a762:	47b0      	blx	r6
 802a764:	1c41      	adds	r1, r0, #1
 802a766:	d1c8      	bne.n	802a6fa <__sflush_r+0x36>
 802a768:	682b      	ldr	r3, [r5, #0]
 802a76a:	2b00      	cmp	r3, #0
 802a76c:	d0c5      	beq.n	802a6fa <__sflush_r+0x36>
 802a76e:	2b1d      	cmp	r3, #29
 802a770:	d001      	beq.n	802a776 <__sflush_r+0xb2>
 802a772:	2b16      	cmp	r3, #22
 802a774:	d101      	bne.n	802a77a <__sflush_r+0xb6>
 802a776:	602f      	str	r7, [r5, #0]
 802a778:	e7b1      	b.n	802a6de <__sflush_r+0x1a>
 802a77a:	89a3      	ldrh	r3, [r4, #12]
 802a77c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a780:	81a3      	strh	r3, [r4, #12]
 802a782:	e7ad      	b.n	802a6e0 <__sflush_r+0x1c>
 802a784:	690f      	ldr	r7, [r1, #16]
 802a786:	2f00      	cmp	r7, #0
 802a788:	d0a9      	beq.n	802a6de <__sflush_r+0x1a>
 802a78a:	0793      	lsls	r3, r2, #30
 802a78c:	680e      	ldr	r6, [r1, #0]
 802a78e:	bf08      	it	eq
 802a790:	694b      	ldreq	r3, [r1, #20]
 802a792:	600f      	str	r7, [r1, #0]
 802a794:	bf18      	it	ne
 802a796:	2300      	movne	r3, #0
 802a798:	eba6 0807 	sub.w	r8, r6, r7
 802a79c:	608b      	str	r3, [r1, #8]
 802a79e:	f1b8 0f00 	cmp.w	r8, #0
 802a7a2:	dd9c      	ble.n	802a6de <__sflush_r+0x1a>
 802a7a4:	6a21      	ldr	r1, [r4, #32]
 802a7a6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802a7a8:	4643      	mov	r3, r8
 802a7aa:	463a      	mov	r2, r7
 802a7ac:	4628      	mov	r0, r5
 802a7ae:	47b0      	blx	r6
 802a7b0:	2800      	cmp	r0, #0
 802a7b2:	dc06      	bgt.n	802a7c2 <__sflush_r+0xfe>
 802a7b4:	89a3      	ldrh	r3, [r4, #12]
 802a7b6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802a7ba:	81a3      	strh	r3, [r4, #12]
 802a7bc:	f04f 30ff 	mov.w	r0, #4294967295
 802a7c0:	e78e      	b.n	802a6e0 <__sflush_r+0x1c>
 802a7c2:	4407      	add	r7, r0
 802a7c4:	eba8 0800 	sub.w	r8, r8, r0
 802a7c8:	e7e9      	b.n	802a79e <__sflush_r+0xda>
 802a7ca:	bf00      	nop
 802a7cc:	dfbffffe 	.word	0xdfbffffe

0802a7d0 <_fflush_r>:
 802a7d0:	b538      	push	{r3, r4, r5, lr}
 802a7d2:	690b      	ldr	r3, [r1, #16]
 802a7d4:	4605      	mov	r5, r0
 802a7d6:	460c      	mov	r4, r1
 802a7d8:	b913      	cbnz	r3, 802a7e0 <_fflush_r+0x10>
 802a7da:	2500      	movs	r5, #0
 802a7dc:	4628      	mov	r0, r5
 802a7de:	bd38      	pop	{r3, r4, r5, pc}
 802a7e0:	b118      	cbz	r0, 802a7ea <_fflush_r+0x1a>
 802a7e2:	6a03      	ldr	r3, [r0, #32]
 802a7e4:	b90b      	cbnz	r3, 802a7ea <_fflush_r+0x1a>
 802a7e6:	f7ff fa2f 	bl	8029c48 <__sinit>
 802a7ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802a7ee:	2b00      	cmp	r3, #0
 802a7f0:	d0f3      	beq.n	802a7da <_fflush_r+0xa>
 802a7f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802a7f4:	07d0      	lsls	r0, r2, #31
 802a7f6:	d404      	bmi.n	802a802 <_fflush_r+0x32>
 802a7f8:	0599      	lsls	r1, r3, #22
 802a7fa:	d402      	bmi.n	802a802 <_fflush_r+0x32>
 802a7fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802a7fe:	f7ff fbd2 	bl	8029fa6 <__retarget_lock_acquire_recursive>
 802a802:	4628      	mov	r0, r5
 802a804:	4621      	mov	r1, r4
 802a806:	f7ff ff5d 	bl	802a6c4 <__sflush_r>
 802a80a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802a80c:	07da      	lsls	r2, r3, #31
 802a80e:	4605      	mov	r5, r0
 802a810:	d4e4      	bmi.n	802a7dc <_fflush_r+0xc>
 802a812:	89a3      	ldrh	r3, [r4, #12]
 802a814:	059b      	lsls	r3, r3, #22
 802a816:	d4e1      	bmi.n	802a7dc <_fflush_r+0xc>
 802a818:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802a81a:	f7ff fbc5 	bl	8029fa8 <__retarget_lock_release_recursive>
 802a81e:	e7dd      	b.n	802a7dc <_fflush_r+0xc>

0802a820 <__swbuf_r>:
 802a820:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802a822:	460e      	mov	r6, r1
 802a824:	4614      	mov	r4, r2
 802a826:	4605      	mov	r5, r0
 802a828:	b118      	cbz	r0, 802a832 <__swbuf_r+0x12>
 802a82a:	6a03      	ldr	r3, [r0, #32]
 802a82c:	b90b      	cbnz	r3, 802a832 <__swbuf_r+0x12>
 802a82e:	f7ff fa0b 	bl	8029c48 <__sinit>
 802a832:	69a3      	ldr	r3, [r4, #24]
 802a834:	60a3      	str	r3, [r4, #8]
 802a836:	89a3      	ldrh	r3, [r4, #12]
 802a838:	071a      	lsls	r2, r3, #28
 802a83a:	d525      	bpl.n	802a888 <__swbuf_r+0x68>
 802a83c:	6923      	ldr	r3, [r4, #16]
 802a83e:	b31b      	cbz	r3, 802a888 <__swbuf_r+0x68>
 802a840:	6823      	ldr	r3, [r4, #0]
 802a842:	6922      	ldr	r2, [r4, #16]
 802a844:	1a98      	subs	r0, r3, r2
 802a846:	6963      	ldr	r3, [r4, #20]
 802a848:	b2f6      	uxtb	r6, r6
 802a84a:	4283      	cmp	r3, r0
 802a84c:	4637      	mov	r7, r6
 802a84e:	dc04      	bgt.n	802a85a <__swbuf_r+0x3a>
 802a850:	4621      	mov	r1, r4
 802a852:	4628      	mov	r0, r5
 802a854:	f7ff ffbc 	bl	802a7d0 <_fflush_r>
 802a858:	b9e0      	cbnz	r0, 802a894 <__swbuf_r+0x74>
 802a85a:	68a3      	ldr	r3, [r4, #8]
 802a85c:	3b01      	subs	r3, #1
 802a85e:	60a3      	str	r3, [r4, #8]
 802a860:	6823      	ldr	r3, [r4, #0]
 802a862:	1c5a      	adds	r2, r3, #1
 802a864:	6022      	str	r2, [r4, #0]
 802a866:	701e      	strb	r6, [r3, #0]
 802a868:	6962      	ldr	r2, [r4, #20]
 802a86a:	1c43      	adds	r3, r0, #1
 802a86c:	429a      	cmp	r2, r3
 802a86e:	d004      	beq.n	802a87a <__swbuf_r+0x5a>
 802a870:	89a3      	ldrh	r3, [r4, #12]
 802a872:	07db      	lsls	r3, r3, #31
 802a874:	d506      	bpl.n	802a884 <__swbuf_r+0x64>
 802a876:	2e0a      	cmp	r6, #10
 802a878:	d104      	bne.n	802a884 <__swbuf_r+0x64>
 802a87a:	4621      	mov	r1, r4
 802a87c:	4628      	mov	r0, r5
 802a87e:	f7ff ffa7 	bl	802a7d0 <_fflush_r>
 802a882:	b938      	cbnz	r0, 802a894 <__swbuf_r+0x74>
 802a884:	4638      	mov	r0, r7
 802a886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802a888:	4621      	mov	r1, r4
 802a88a:	4628      	mov	r0, r5
 802a88c:	f000 f806 	bl	802a89c <__swsetup_r>
 802a890:	2800      	cmp	r0, #0
 802a892:	d0d5      	beq.n	802a840 <__swbuf_r+0x20>
 802a894:	f04f 37ff 	mov.w	r7, #4294967295
 802a898:	e7f4      	b.n	802a884 <__swbuf_r+0x64>
	...

0802a89c <__swsetup_r>:
 802a89c:	b538      	push	{r3, r4, r5, lr}
 802a89e:	4b2a      	ldr	r3, [pc, #168]	; (802a948 <__swsetup_r+0xac>)
 802a8a0:	4605      	mov	r5, r0
 802a8a2:	6818      	ldr	r0, [r3, #0]
 802a8a4:	460c      	mov	r4, r1
 802a8a6:	b118      	cbz	r0, 802a8b0 <__swsetup_r+0x14>
 802a8a8:	6a03      	ldr	r3, [r0, #32]
 802a8aa:	b90b      	cbnz	r3, 802a8b0 <__swsetup_r+0x14>
 802a8ac:	f7ff f9cc 	bl	8029c48 <__sinit>
 802a8b0:	89a3      	ldrh	r3, [r4, #12]
 802a8b2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a8b6:	0718      	lsls	r0, r3, #28
 802a8b8:	d422      	bmi.n	802a900 <__swsetup_r+0x64>
 802a8ba:	06d9      	lsls	r1, r3, #27
 802a8bc:	d407      	bmi.n	802a8ce <__swsetup_r+0x32>
 802a8be:	2309      	movs	r3, #9
 802a8c0:	602b      	str	r3, [r5, #0]
 802a8c2:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802a8c6:	81a3      	strh	r3, [r4, #12]
 802a8c8:	f04f 30ff 	mov.w	r0, #4294967295
 802a8cc:	e034      	b.n	802a938 <__swsetup_r+0x9c>
 802a8ce:	0758      	lsls	r0, r3, #29
 802a8d0:	d512      	bpl.n	802a8f8 <__swsetup_r+0x5c>
 802a8d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802a8d4:	b141      	cbz	r1, 802a8e8 <__swsetup_r+0x4c>
 802a8d6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802a8da:	4299      	cmp	r1, r3
 802a8dc:	d002      	beq.n	802a8e4 <__swsetup_r+0x48>
 802a8de:	4628      	mov	r0, r5
 802a8e0:	f7ff fbd0 	bl	802a084 <_free_r>
 802a8e4:	2300      	movs	r3, #0
 802a8e6:	6363      	str	r3, [r4, #52]	; 0x34
 802a8e8:	89a3      	ldrh	r3, [r4, #12]
 802a8ea:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802a8ee:	81a3      	strh	r3, [r4, #12]
 802a8f0:	2300      	movs	r3, #0
 802a8f2:	6063      	str	r3, [r4, #4]
 802a8f4:	6923      	ldr	r3, [r4, #16]
 802a8f6:	6023      	str	r3, [r4, #0]
 802a8f8:	89a3      	ldrh	r3, [r4, #12]
 802a8fa:	f043 0308 	orr.w	r3, r3, #8
 802a8fe:	81a3      	strh	r3, [r4, #12]
 802a900:	6923      	ldr	r3, [r4, #16]
 802a902:	b94b      	cbnz	r3, 802a918 <__swsetup_r+0x7c>
 802a904:	89a3      	ldrh	r3, [r4, #12]
 802a906:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802a90a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802a90e:	d003      	beq.n	802a918 <__swsetup_r+0x7c>
 802a910:	4621      	mov	r1, r4
 802a912:	4628      	mov	r0, r5
 802a914:	f000 f840 	bl	802a998 <__smakebuf_r>
 802a918:	89a0      	ldrh	r0, [r4, #12]
 802a91a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802a91e:	f010 0301 	ands.w	r3, r0, #1
 802a922:	d00a      	beq.n	802a93a <__swsetup_r+0x9e>
 802a924:	2300      	movs	r3, #0
 802a926:	60a3      	str	r3, [r4, #8]
 802a928:	6963      	ldr	r3, [r4, #20]
 802a92a:	425b      	negs	r3, r3
 802a92c:	61a3      	str	r3, [r4, #24]
 802a92e:	6923      	ldr	r3, [r4, #16]
 802a930:	b943      	cbnz	r3, 802a944 <__swsetup_r+0xa8>
 802a932:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802a936:	d1c4      	bne.n	802a8c2 <__swsetup_r+0x26>
 802a938:	bd38      	pop	{r3, r4, r5, pc}
 802a93a:	0781      	lsls	r1, r0, #30
 802a93c:	bf58      	it	pl
 802a93e:	6963      	ldrpl	r3, [r4, #20]
 802a940:	60a3      	str	r3, [r4, #8]
 802a942:	e7f4      	b.n	802a92e <__swsetup_r+0x92>
 802a944:	2000      	movs	r0, #0
 802a946:	e7f7      	b.n	802a938 <__swsetup_r+0x9c>
 802a948:	20000160 	.word	0x20000160

0802a94c <__swhatbuf_r>:
 802a94c:	b570      	push	{r4, r5, r6, lr}
 802a94e:	460c      	mov	r4, r1
 802a950:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802a954:	2900      	cmp	r1, #0
 802a956:	b096      	sub	sp, #88	; 0x58
 802a958:	4615      	mov	r5, r2
 802a95a:	461e      	mov	r6, r3
 802a95c:	da0d      	bge.n	802a97a <__swhatbuf_r+0x2e>
 802a95e:	89a3      	ldrh	r3, [r4, #12]
 802a960:	f013 0f80 	tst.w	r3, #128	; 0x80
 802a964:	f04f 0100 	mov.w	r1, #0
 802a968:	bf0c      	ite	eq
 802a96a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 802a96e:	2340      	movne	r3, #64	; 0x40
 802a970:	2000      	movs	r0, #0
 802a972:	6031      	str	r1, [r6, #0]
 802a974:	602b      	str	r3, [r5, #0]
 802a976:	b016      	add	sp, #88	; 0x58
 802a978:	bd70      	pop	{r4, r5, r6, pc}
 802a97a:	466a      	mov	r2, sp
 802a97c:	f000 f848 	bl	802aa10 <_fstat_r>
 802a980:	2800      	cmp	r0, #0
 802a982:	dbec      	blt.n	802a95e <__swhatbuf_r+0x12>
 802a984:	9901      	ldr	r1, [sp, #4]
 802a986:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 802a98a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 802a98e:	4259      	negs	r1, r3
 802a990:	4159      	adcs	r1, r3
 802a992:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802a996:	e7eb      	b.n	802a970 <__swhatbuf_r+0x24>

0802a998 <__smakebuf_r>:
 802a998:	898b      	ldrh	r3, [r1, #12]
 802a99a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802a99c:	079d      	lsls	r5, r3, #30
 802a99e:	4606      	mov	r6, r0
 802a9a0:	460c      	mov	r4, r1
 802a9a2:	d507      	bpl.n	802a9b4 <__smakebuf_r+0x1c>
 802a9a4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802a9a8:	6023      	str	r3, [r4, #0]
 802a9aa:	6123      	str	r3, [r4, #16]
 802a9ac:	2301      	movs	r3, #1
 802a9ae:	6163      	str	r3, [r4, #20]
 802a9b0:	b002      	add	sp, #8
 802a9b2:	bd70      	pop	{r4, r5, r6, pc}
 802a9b4:	ab01      	add	r3, sp, #4
 802a9b6:	466a      	mov	r2, sp
 802a9b8:	f7ff ffc8 	bl	802a94c <__swhatbuf_r>
 802a9bc:	9900      	ldr	r1, [sp, #0]
 802a9be:	4605      	mov	r5, r0
 802a9c0:	4630      	mov	r0, r6
 802a9c2:	f7ff f81b 	bl	80299fc <_malloc_r>
 802a9c6:	b948      	cbnz	r0, 802a9dc <__smakebuf_r+0x44>
 802a9c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802a9cc:	059a      	lsls	r2, r3, #22
 802a9ce:	d4ef      	bmi.n	802a9b0 <__smakebuf_r+0x18>
 802a9d0:	f023 0303 	bic.w	r3, r3, #3
 802a9d4:	f043 0302 	orr.w	r3, r3, #2
 802a9d8:	81a3      	strh	r3, [r4, #12]
 802a9da:	e7e3      	b.n	802a9a4 <__smakebuf_r+0xc>
 802a9dc:	89a3      	ldrh	r3, [r4, #12]
 802a9de:	6020      	str	r0, [r4, #0]
 802a9e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802a9e4:	81a3      	strh	r3, [r4, #12]
 802a9e6:	9b00      	ldr	r3, [sp, #0]
 802a9e8:	6163      	str	r3, [r4, #20]
 802a9ea:	9b01      	ldr	r3, [sp, #4]
 802a9ec:	6120      	str	r0, [r4, #16]
 802a9ee:	b15b      	cbz	r3, 802aa08 <__smakebuf_r+0x70>
 802a9f0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802a9f4:	4630      	mov	r0, r6
 802a9f6:	f000 f81d 	bl	802aa34 <_isatty_r>
 802a9fa:	b128      	cbz	r0, 802aa08 <__smakebuf_r+0x70>
 802a9fc:	89a3      	ldrh	r3, [r4, #12]
 802a9fe:	f023 0303 	bic.w	r3, r3, #3
 802aa02:	f043 0301 	orr.w	r3, r3, #1
 802aa06:	81a3      	strh	r3, [r4, #12]
 802aa08:	89a3      	ldrh	r3, [r4, #12]
 802aa0a:	431d      	orrs	r5, r3
 802aa0c:	81a5      	strh	r5, [r4, #12]
 802aa0e:	e7cf      	b.n	802a9b0 <__smakebuf_r+0x18>

0802aa10 <_fstat_r>:
 802aa10:	b538      	push	{r3, r4, r5, lr}
 802aa12:	4d07      	ldr	r5, [pc, #28]	; (802aa30 <_fstat_r+0x20>)
 802aa14:	2300      	movs	r3, #0
 802aa16:	4604      	mov	r4, r0
 802aa18:	4608      	mov	r0, r1
 802aa1a:	4611      	mov	r1, r2
 802aa1c:	602b      	str	r3, [r5, #0]
 802aa1e:	f7d7 fd13 	bl	8002448 <_fstat>
 802aa22:	1c43      	adds	r3, r0, #1
 802aa24:	d102      	bne.n	802aa2c <_fstat_r+0x1c>
 802aa26:	682b      	ldr	r3, [r5, #0]
 802aa28:	b103      	cbz	r3, 802aa2c <_fstat_r+0x1c>
 802aa2a:	6023      	str	r3, [r4, #0]
 802aa2c:	bd38      	pop	{r3, r4, r5, pc}
 802aa2e:	bf00      	nop
 802aa30:	2001384c 	.word	0x2001384c

0802aa34 <_isatty_r>:
 802aa34:	b538      	push	{r3, r4, r5, lr}
 802aa36:	4d06      	ldr	r5, [pc, #24]	; (802aa50 <_isatty_r+0x1c>)
 802aa38:	2300      	movs	r3, #0
 802aa3a:	4604      	mov	r4, r0
 802aa3c:	4608      	mov	r0, r1
 802aa3e:	602b      	str	r3, [r5, #0]
 802aa40:	f7d7 fd08 	bl	8002454 <_isatty>
 802aa44:	1c43      	adds	r3, r0, #1
 802aa46:	d102      	bne.n	802aa4e <_isatty_r+0x1a>
 802aa48:	682b      	ldr	r3, [r5, #0]
 802aa4a:	b103      	cbz	r3, 802aa4e <_isatty_r+0x1a>
 802aa4c:	6023      	str	r3, [r4, #0]
 802aa4e:	bd38      	pop	{r3, r4, r5, pc}
 802aa50:	2001384c 	.word	0x2001384c

0802aa54 <_init>:
 802aa54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802aa56:	bf00      	nop
 802aa58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802aa5a:	bc08      	pop	{r3}
 802aa5c:	469e      	mov	lr, r3
 802aa5e:	4770      	bx	lr

0802aa60 <_fini>:
 802aa60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802aa62:	bf00      	nop
 802aa64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802aa66:	bc08      	pop	{r3}
 802aa68:	469e      	mov	lr, r3
 802aa6a:	4770      	bx	lr
